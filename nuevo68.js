Date.CultureInfo = {
    name: "en-US",
    englishName: "English (United States)",
    nativeName: "English (United States)",
    dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    abbreviatedDayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    shortestDayNames: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
    firstLetterDayNames: ["S", "M", "T", "W", "T", "F", "S"],
    monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    abbreviatedMonthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    amDesignator: "AM",
    pmDesignator: "PM",
    firstDayOfWeek: 0,
    twoDigitYearMax: 2029,
    dateElementOrder: "mdy",
    formatPatterns: {
        shortDate: "M/d/yyyy",
        longDate: "dddd, MMMM dd, yyyy",
        shortTime: "h:mm tt",
        longTime: "h:mm:ss tt",
        fullDateTime: "dddd, MMMM dd, yyyy h:mm:ss tt",
        sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
        universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
        rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
        monthDay: "MMMM dd",
        yearMonth: "MMMM, yyyy"
    },
    regexPatterns: {
        jan: /^jan(uary)?/i,
        feb: /^feb(ruary)?/i,
        mar: /^mar(ch)?/i,
        apr: /^apr(il)?/i,
        may: /^may/i,
        jun: /^jun(e)?/i,
        jul: /^jul(y)?/i,
        aug: /^aug(ust)?/i,
        sep: /^sep(t(ember)?)?/i,
        oct: /^oct(ober)?/i,
        nov: /^nov(ember)?/i,
        dec: /^dec(ember)?/i,
        sun: /^su(n(day)?)?/i,
        mon: /^mo(n(day)?)?/i,
        tue: /^tu(e(s(day)?)?)?/i,
        wed: /^we(d(nesday)?)?/i,
        thu: /^th(u(r(s(day)?)?)?)?/i,
        fri: /^fr(i(day)?)?/i,
        sat: /^sa(t(urday)?)?/i,
        future: /^next/i,
        past: /^last|past|prev(ious)?/i,
        add: /^(\+|aft(er)?|from|hence)/i,
        subtract: /^(\-|bef(ore)?|ago)/i,
        yesterday: /^yes(terday)?/i,
        today: /^t(od(ay)?)?/i,
        tomorrow: /^tom(orrow)?/i,
        now: /^n(ow)?/i,
        millisecond: /^ms|milli(second)?s?/i,
        second: /^sec(ond)?s?/i,
        minute: /^mn|min(ute)?s?/i,
        hour: /^h(our)?s?/i,
        week: /^w(eek)?s?/i,
        month: /^m(onth)?s?/i,
        day: /^d(ay)?s?/i,
        year: /^y(ear)?s?/i,
        shortMeridian: /^(a|p)/i,
        longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
        timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt|utc)/i,
        ordinalSuffix: /^\s*(st|nd|rd|th)/i,
        timeContext: /^\s*(\:|a(?!u|p)|p)/i
    },
    timezones: [{
        name: "UTC",
        offset: "-000"
    }, {
        name: "GMT",
        offset: "-000"
    }, {
        name: "EST",
        offset: "-0500"
    }, {
        name: "EDT",
        offset: "-0400"
    }, {
        name: "CST",
        offset: "-0600"
    }, {
        name: "CDT",
        offset: "-0500"
    }, {
        name: "MST",
        offset: "-0700"
    }, {
        name: "MDT",
        offset: "-0600"
    }, {
        name: "PST",
        offset: "-0800"
    }, {
        name: "PDT",
        offset: "-0700"
    }]
},
function() {
    var e = Date
      , t = e.prototype
      , n = e.CultureInfo
      , r = function(e, t) {
        return t || (t = 2),
        ("000" + e).slice(t * -1)
    };
    t.clearTime = function() {
        return this.setHours(0),
        this.setMinutes(0),
        this.setSeconds(0),
        this.setMilliseconds(0),
        this
    }
    ,
    t.setTimeToNow = function() {
        var e = new Date;
        return this.setHours(e.getHours()),
        this.setMinutes(e.getMinutes()),
        this.setSeconds(e.getSeconds()),
        this.setMilliseconds(e.getMilliseconds()),
        this
    }
    ,
    e.today = function() {
        return (new Date).clearTime()
    }
    ,
    e.compare = function(e, t) {
        if (isNaN(e) || isNaN(t))
            throw new Error(e + " - " + t);
        if (e instanceof Date && t instanceof Date)
            return e < t ? -1 : e > t ? 1 : 0;
        throw new TypeError(e + " - " + t)
    }
    ,
    e.equals = function(e, t) {
        return e.compareTo(t) === 0
    }
    ,
    e.getDayNumberFromName = function(e) {
        var t = n.dayNames
          , r = n.abbreviatedDayNames
          , i = n.shortestDayNames
          , s = e.toLowerCase();
        for (var o = 0; o < t.length; o++)
            if (t[o].toLowerCase() == s || r[o].toLowerCase() == s || i[o].toLowerCase() == s)
                return o;
        return -1
    }
    ,
    e.getMonthNumberFromName = function(e) {
        var t = n.monthNames
          , r = n.abbreviatedMonthNames
          , i = e.toLowerCase();
        for (var s = 0; s < t.length; s++)
            if (t[s].toLowerCase() == i || r[s].toLowerCase() == i)
                return s;
        return -1
    }
    ,
    e.isLeapYear = function(e) {
        return e % 4 === 0 && e % 100 !== 0 || e % 400 === 0
    }
    ,
    e.getDaysInMonth = function(t, n) {
        return [31, e.isLeapYear(t) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][n]
    }
    ,
    e.getTimezoneAbbreviation = function(e) {
        var t = n.timezones, r;
        for (var i = 0; i < t.length; i++)
            if (t[i].offset === e)
                return t[i].name;
        return null
    }
    ,
    e.getTimezoneOffset = function(e) {
        var t = n.timezones, r;
        for (var i = 0; i < t.length; i++)
            if (t[i].name === e.toUpperCase())
                return t[i].offset;
        return null
    }
    ,
    t.clone = function() {
        return new Date(this.getTime())
    }
    ,
    t.compareTo = function(e) {
        return Date.compare(this, e)
    }
    ,
    t.equals = function(e) {
        return Date.equals(this, e || new Date)
    }
    ,
    t.between = function(e, t) {
        return this.getTime() >= e.getTime() && this.getTime() <= t.getTime()
    }
    ,
    t.isAfter = function(e) {
        return this.compareTo(e || new Date) === 1
    }
    ,
    t.isBefore = function(e) {
        return this.compareTo(e || new Date) === -1
    }
    ,
    t.isToday = function() {
        return this.isSameDay(new Date)
    }
    ,
    t.isSameDay = function(e) {
        return this.clone().clearTime().equals(e.clone().clearTime())
    }
    ,
    t.addMilliseconds = function(e) {
        return this.setMilliseconds(this.getMilliseconds() + e),
        this
    }
    ,
    t.addSeconds = function(e) {
        return this.addMilliseconds(e * 1e3)
    }
    ,
    t.addMinutes = function(e) {
        return this.addMilliseconds(e * 6e4)
    }
    ,
    t.addHours = function(e) {
        return this.addMilliseconds(e * 36e5)
    }
    ,
    t.addDays = function(e) {
        return this.setDate(this.getDate() + e),
        this
    }
    ,
    t.addWeeks = function(e) {
        return this.addDays(e * 7)
    }
    ,
    t.addMonths = function(t) {
        var n = this.getDate();
        return this.setDate(1),
        this.setMonth(this.getMonth() + t),
        this.setDate(Math.min(n, e.getDaysInMonth(this.getFullYear(), this.getMonth()))),
        this
    }
    ,
    t.addYears = function(e) {
        return this.addMonths(e * 12)
    }
    ,
    t.add = function(e) {
        if (typeof e == "number")
            return this._orient = e,
            this;
        var t = e;
        return t.milliseconds && this.addMilliseconds(t.milliseconds),
        t.seconds && this.addSeconds(t.seconds),
        t.minutes && this.addMinutes(t.minutes),
        t.hours && this.addHours(t.hours),
        t.weeks && this.addWeeks(t.weeks),
        t.months && this.addMonths(t.months),
        t.years && this.addYears(t.years),
        t.days && this.addDays(t.days),
        this
    }
    ;
    var i, s, o;
    t.getWeek = function() {
        var e, t, n, r, u, a, f, l, c, h;
        return i = i ? i : this.getFullYear(),
        s = s ? s : this.getMonth() + 1,
        o = o ? o : this.getDate(),
        s <= 2 ? (e = i - 1,
        t = (e / 4 | 0) - (e / 100 | 0) + (e / 400 | 0),
        n = ((e - 1) / 4 | 0) - ((e - 1) / 100 | 0) + ((e - 1) / 400 | 0),
        c = t - n,
        u = 0,
        a = o - 1 + 31 * (s - 1)) : (e = i,
        t = (e / 4 | 0) - (e / 100 | 0) + (e / 400 | 0),
        n = ((e - 1) / 4 | 0) - ((e - 1) / 100 | 0) + ((e - 1) / 400 | 0),
        c = t - n,
        u = c + 1,
        a = o + (153 * (s - 3) + 2) / 5 + 58 + c),
        f = (e + t) % 7,
        r = (a + f - u) % 7,
        l = a + 3 - r | 0,
        l < 0 ? h = 53 - ((f - c) / 5 | 0) : l > 364 + c ? h = 1 : h = (l / 7 | 0) + 1,
        i = s = o = null,
        h
    }
    ,
    t.getISOWeek = function() {
        return i = this.getUTCFullYear(),
        s = this.getUTCMonth() + 1,
        o = this.getUTCDate(),
        r(this.getWeek())
    }
    ,
    t.setWeek = function(e) {
        return this.moveToDayOfWeek(1).addWeeks(e - this.getWeek())
    }
    ,
    e._validate = function(e, t, n, r) {
        if (typeof e == "undefined")
            return !1;
        if (typeof e != "number")
            throw new TypeError(e + " is not a Number.");
        if (e < t || e > n)
            throw new RangeError(e + " is not a valid value for " + r + ".");
        return !0
    }
    ,
    e.validateMillisecond = function(t) {
        return e._validate(t, 0, 999, "millisecond")
    }
    ,
    e.validateSecond = function(t) {
        return e._validate(t, 0, 59, "second")
    }
    ,
    e.validateMinute = function(t) {
        return e._validate(t, 0, 59, "minute")
    }
    ,
    e.validateHour = function(t) {
        return e._validate(t, 0, 23, "hour")
    }
    ,
    e.validateDay = function(t, n, r) {
        return e._validate(t, 1, e.getDaysInMonth(n, r), "day")
    }
    ,
    e.validateMonth = function(t) {
        return e._validate(t, 0, 11, "month")
    }
    ,
    e.validateYear = function(t) {
        return e._validate(t, 0, 9999, "year")
    }
    ,
    t.set = function(t) {
        return e.validateMillisecond(t.millisecond) && this.addMilliseconds(t.millisecond - this.getMilliseconds()),
        e.validateSecond(t.second) && this.addSeconds(t.second - this.getSeconds()),
        e.validateMinute(t.minute) && this.addMinutes(t.minute - this.getMinutes()),
        e.validateHour(t.hour) && this.addHours(t.hour - this.getHours()),
        e.validateMonth(t.month) && this.addMonths(t.month - this.getMonth()),
        e.validateYear(t.year) && this.addYears(t.year - this.getFullYear()),
        e.validateDay(t.day, this.getFullYear(), this.getMonth()) && this.addDays(t.day - this.getDate()),
        t.timezone && this.setTimezone(t.timezone),
        t.timezoneOffset && this.setTimezoneOffset(t.timezoneOffset),
        t.week && e._validate(t.week, 0, 53, "week") && this.setWeek(t.week),
        this
    }
    ,
    t.moveToFirstDayOfMonth = function() {
        return this.set({
            day: 1
        })
    }
    ,
    t.moveToLastDayOfMonth = function() {
        return this.set({
            day: e.getDaysInMonth(this.getFullYear(), this.getMonth())
        })
    }
    ,
    t.moveToNthOccurrence = function(e, t) {
        var n = 0;
        if (t > 0)
            n = t - 1;
        else if (t === -1)
            return this.moveToLastDayOfMonth(),
            this.getDay() !== e && this.moveToDayOfWeek(e, -1),
            this;
        return this.moveToFirstDayOfMonth().addDays(-1).moveToDayOfWeek(e, 1).addWeeks(n)
    }
    ,
    t.moveToDayOfWeek = function(e, t) {
        var n = (e - this.getDay() + 7 * (t || 1)) % 7;
        return this.addDays(n === 0 ? n += 7 * (t || 1) : n)
    }
    ,
    t.moveToMonth = function(e, t) {
        var n = (e - this.getMonth() + 12 * (t || 1)) % 12;
        return this.addMonths(n === 0 ? n += 12 * (t || 1) : n)
    }
    ,
    t.getOrdinalNumber = function() {
        return Math.ceil((this.clone().clearTime() - new Date(this.getFullYear(),0,1)) / 864e5) + 1
    }
    ,
    t.getTimezone = function() {
        return e.getTimezoneAbbreviation(this.getUTCOffset())
    }
    ,
    t.setTimezoneOffset = function(e) {
        var t = this.getTimezoneOffset()
          , n = Number(e) * -6 / 10;
        return this.addMinutes(n - t)
    }
    ,
    t.setTimezone = function(t) {
        return this.setTimezoneOffset(e.getTimezoneOffset(t))
    }
    ,
    t.hasDaylightSavingTime = function() {
        return Date.today().set({
            month: 0,
            day: 1
        }).getTimezoneOffset() !== Date.today().set({
            month: 6,
            day: 1
        }).getTimezoneOffset()
    }
    ,
    t.isDaylightSavingTime = function() {
        return this.hasDaylightSavingTime() && (new Date).getTimezoneOffset() === Date.today().set({
            month: 6,
            day: 1
        }).getTimezoneOffset()
    }
    ,
    t.getUTCOffset = function() {
        var e = this.getTimezoneOffset() * -10 / 6, t;
        return e < 0 ? (t = (e - 1e4).toString(),
        t.charAt(0) + t.substr(2)) : (t = (e + 1e4).toString(),
        "+" + t.substr(1))
    }
    ,
    t.getElapsed = function(e) {
        return (e || new Date) - this
    }
    ,
    t.toISOString || (t.toISOString = function() {
        function e(e) {
            return e < 10 ? "0" + e : e
        }
        return '"' + this.getUTCFullYear() + "-" + e(this.getUTCMonth() + 1) + "-" + e(this.getUTCDate()) + "T" + e(this.getUTCHours()) + ":" + e(this.getUTCMinutes()) + ":" + e(this.getUTCSeconds()) + 'Z"'
    }
    ),
    t._toString = t.toString,
    t.toString = function(e) {
        var t = this;
        if (e && e.length == 1) {
            var i = n.formatPatterns;
            t.t = t.toString;
            switch (e) {
            case "d":
                return t.t(i.shortDate);
            case "D":
                return t.t(i.longDate);
            case "F":
                return t.t(i.fullDateTime);
            case "m":
                return t.t(i.monthDay);
            case "r":
                return t.t(i.rfc1123);
            case "s":
                return t.t(i.sortableDateTime);
            case "t":
                return t.t(i.shortTime);
            case "T":
                return t.t(i.longTime);
            case "u":
                return t.t(i.universalSortableDateTime);
            case "y":
                return t.t(i.yearMonth)
            }
        }
        var s = function(e) {
            switch (e * 1) {
            case 1:
            case 21:
            case 31:
                return "st";
            case 2:
            case 22:
                return "nd";
            case 3:
            case 23:
                return "rd";
            default:
                return "th"
            }
        };
        return e ? e.replace(/(\\)?(dd?d?d?|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|S)/g, function(e) {
            if (e.charAt(0) === "\\")
                return e.replace("\\", "");
            t.h = t.getHours;
            switch (e) {
            case "hh":
                return r(t.h() < 13 ? t.h() === 0 ? 12 : t.h() : t.h() - 12);
            case "h":
                return t.h() < 13 ? t.h() === 0 ? 12 : t.h() : t.h() - 12;
            case "HH":
                return r(t.h());
            case "H":
                return t.h();
            case "mm":
                return r(t.getMinutes());
            case "m":
                return t.getMinutes();
            case "ss":
                return r(t.getSeconds());
            case "s":
                return t.getSeconds();
            case "yyyy":
                return r(t.getFullYear(), 4);
            case "yy":
                return r(t.getFullYear());
            case "dddd":
                return n.dayNames[t.getDay()];
            case "ddd":
                return n.abbreviatedDayNames[t.getDay()];
            case "dd":
                return r(t.getDate());
            case "d":
                return t.getDate();
            case "MMMM":
                return n.monthNames[t.getMonth()];
            case "MMM":
                return n.abbreviatedMonthNames[t.getMonth()];
            case "MM":
                return r(t.getMonth() + 1);
            case "M":
                return t.getMonth() + 1;
            case "t":
                return t.h() < 12 ? n.amDesignator.substring(0, 1) : n.pmDesignator.substring(0, 1);
            case "tt":
                return t.h() < 12 ? n.amDesignator : n.pmDesignator;
            case "S":
                return s(t.getDate());
            default:
                return e
            }
        }) : this._toString()
    }
}(),
function() {
    var e = Date
      , t = e.prototype
      , n = e.CultureInfo
      , r = Number.prototype;
    t._orient = 1,
    t._nth = null,
    t._is = !1,
    t._same = !1,
    t._isSecond = !1,
    r._dateElement = "day",
    t.next = function() {
        return this._orient = 1,
        this
    }
    ,
    e.next = function() {
        return e.today().next()
    }
    ,
    t.last = t.prev = t.previous = function() {
        return this._orient = -1,
        this
    }
    ,
    e.last = e.prev = e.previous = function() {
        return e.today().last()
    }
    ,
    t.is = function() {
        return this._is = !0,
        this
    }
    ,
    t.same = function() {
        return this._same = !0,
        this._isSecond = !1,
        this
    }
    ,
    t.today = function() {
        return this.same().day()
    }
    ,
    t.weekday = function() {
        return this._is ? (this._is = !1,
        !this.is().sat() && !this.is().sun()) : !1
    }
    ,
    t.at = function(t) {
        return typeof t == "string" ? e.parse(this.toString("d") + " " + t) : this.set(t)
    }
    ,
    r.fromNow = r.after = function(e) {
        var t = {};
        return t[this._dateElement] = this,
        (e ? e.clone() : new Date).add(t)
    }
    ,
    r.ago = r.before = function(e) {
        var t = {};
        return t[this._dateElement] = this * -1,
        (e ? e.clone() : new Date).add(t)
    }
    ;
    var i = "sunday monday tuesday wednesday thursday friday saturday".split(/\s/), s = "january february march april may june july august september october november december".split(/\s/), o = "Millisecond Second Minute Hour Day Week Month Year".split(/\s/), u = "Milliseconds Seconds Minutes Hours Date Week Month FullYear".split(/\s/), a = "final first second third fourth fifth".split(/\s/), f;
    t.toObject = function() {
        var e = {};
        for (var t = 0; t < o.length; t++)
            e[o[t].toLowerCase()] = this["get" + u[t]]();
        return e
    }
    ,
    e.fromObject = function(e) {
        return e.week = null,
        Date.today().set(e)
    }
    ;
    var l = function(t) {
        return function() {
            if (this._is)
                return this._is = !1,
                this.getDay() == t;
            if (this._nth !== null) {
                this._isSecond && this.addSeconds(this._orient * -1),
                this._isSecond = !1;
                var n = this._nth;
                this._nth = null;
                var r = this.clone().moveToLastDayOfMonth();
                this.moveToNthOccurrence(t, n);
                if (this > r)
                    throw new RangeError(e.getDayName(t) + " does not occur " + n + " times in the month of " + e.getMonthName(r.getMonth()) + " " + r.getFullYear() + ".");
                return this
            }
            return this.moveToDayOfWeek(t, this._orient)
        }
    }
      , c = function(t) {
        return function() {
            var r = e.today()
              , i = t - r.getDay();
            return t === 0 && n.firstDayOfWeek === 1 && r.getDay() !== 0 && (i += 7),
            r.addDays(i)
        }
    };
    for (var h = 0; h < i.length; h++)
        e[i[h].toUpperCase()] = e[i[h].toUpperCase().substring(0, 3)] = h,
        e[i[h]] = e[i[h].substring(0, 3)] = c(h),
        t[i[h]] = t[i[h].substring(0, 3)] = l(h);
    var p = function(e) {
        return function() {
            return this._is ? (this._is = !1,
            this.getMonth() === e) : this.moveToMonth(e, this._orient)
        }
    }
      , d = function(t) {
        return function() {
            return e.today().set({
                month: t,
                day: 1
            })
        }
    };
    for (var v = 0; v < s.length; v++)
        e[s[v].toUpperCase()] = e[s[v].toUpperCase().substring(0, 3)] = v,
        e[s[v]] = e[s[v].substring(0, 3)] = d(v),
        t[s[v]] = t[s[v].substring(0, 3)] = p(v);
    var m = function(e) {
        return function() {
            if (this._isSecond)
                return this._isSecond = !1,
                this;
            if (this._same) {
                this._same = this._is = !1;
                var t = this.toObject()
                  , n = (arguments[0] || new Date).toObject()
                  , r = ""
                  , i = e.toLowerCase();
                for (var s = o.length - 1; s > -1; s--) {
                    r = o[s].toLowerCase();
                    if (t[r] != n[r])
                        return !1;
                    if (i == r)
                        break
                }
                return !0
            }
            return e.substring(e.length - 1) != "s" && (e += "s"),
            this["add" + e](this._orient)
        }
    }
      , g = function(e) {
        return function() {
            return this._dateElement = e,
            this
        }
    };
    for (var y = 0; y < o.length; y++)
        f = o[y].toLowerCase(),
        t[f] = t[f + "s"] = m(o[y]),
        r[f] = r[f + "s"] = g(f);
    t._ss = m("Second");
    var b = function(e) {
        return function(t) {
            return this._same ? this._ss(arguments[0]) : t || t === 0 ? this.moveToNthOccurrence(t, e) : (this._nth = e,
            e !== 2 || t !== undefined && t !== null ? this : (this._isSecond = !0,
            this.addSeconds(this._orient)))
        }
    };
    for (var w = 0; w < a.length; w++)
        t[a[w]] = w === 0 ? b(-1) : b(w)
}(),
function() {
    Date.Parsing = {
        Exception: function(e) {
            this.message = "Parse error at '" + e.substring(0, 10) + " ...'"
        }
    };
    var e = Date.Parsing
      , t = e.Operators = {
        rtoken: function(t) {
            return function(n) {
                var i = n.match(t);
                if (i)
                    return [i[0], n.substring(i[0].length)];
                throw new e.Exception(n)
            }
        },
        token: function(e) {
            return function(e) {
                return t.rtoken(new RegExp("^s*" + e + "s*"))(e)
            }
        },
        stoken: function(e) {
            return t.rtoken(new RegExp("^" + e))
        },
        until: function(e) {
            return function(t) {
                var n = []
                  , r = null;
                while (t.length) {
                    try {
                        r = e.call(this, t)
                    } catch (i) {
                        n.push(r[0]),
                        t = r[1];
                        continue
                    }
                    break
                }
                return [n, t]
            }
        },
        many: function(e) {
            return function(t) {
                var n = []
                  , r = null;
                while (t.length) {
                    try {
                        r = e.call(this, t)
                    } catch (i) {
                        return [n, t]
                    }
                    n.push(r[0]),
                    t = r[1]
                }
                return [n, t]
            }
        },
        optional: function(e) {
            return function(t) {
                var n = null;
                try {
                    n = e.call(this, t)
                } catch (r) {
                    return [null, t]
                }
                return [n[0], n[1]]
            }
        },
        not: function(t) {
            return function(n) {
                try {
                    t.call(this, n)
                } catch (r) {
                    return [null, n]
                }
                throw new e.Exception(n)
            }
        },
        ignore: function(e) {
            return e ? function(t) {
                var n = null;
                return n = e.call(this, t),
                [null, n[1]]
            }
            : null
        },
        product: function() {
            var e = arguments[0]
              , n = Array.prototype.slice.call(arguments, 1)
              , r = [];
            for (var i = 0; i < e.length; i++)
                r.push(t.each(e[i], n));
            return r
        },
        cache: function(t) {
            var n = {}
              , r = null;
            return function(i) {
                try {
                    r = n[i] = n[i] || t.call(this, i)
                } catch (s) {
                    r = n[i] = s
                }
                if (r instanceof e.Exception)
                    throw r;
                return r
            }
        },
        any: function() {
            var t = arguments;
            return function(n) {
                var r = null;
                for (var i = 0; i < t.length; i++) {
                    if (t[i] == null)
                        continue;
                    try {
                        r = t[i].call(this, n)
                    } catch (s) {
                        r = null
                    }
                    if (r)
                        return r
                }
                throw new e.Exception(n)
            }
        },
        each: function() {
            var t = arguments;
            return function(n) {
                var r = []
                  , i = null;
                for (var s = 0; s < t.length; s++) {
                    if (t[s] == null)
                        continue;
                    try {
                        i = t[s].call(this, n)
                    } catch (o) {
                        throw new e.Exception(n)
                    }
                    r.push(i[0]),
                    n = i[1]
                }
                return [r, n]
            }
        },
        all: function() {
            var e = arguments
              , t = t;
            return t.each(t.optional(e))
        },
        sequence: function(n, r, i) {
            return r = r || t.rtoken(/^\s*/),
            i = i || null,
            n.length == 1 ? n[0] : function(t) {
                var s = null
                  , o = null
                  , u = [];
                for (var a = 0; a < n.length; a++) {
                    try {
                        s = n[a].call(this, t)
                    } catch (f) {
                        break
                    }
                    u.push(s[0]);
                    try {
                        o = r.call(this, s[1])
                    } catch (l) {
                        o = null;
                        break
                    }
                    t = o[1]
                }
                if (!s)
                    throw new e.Exception(t);
                if (o)
                    throw new e.Exception(o[1]);
                if (i)
                    try {
                        s = i.call(this, s[1])
                    } catch (h) {
                        throw new e.Exception(s[1])
                    }
                return [u, s ? s[1] : t]
            }
        },
        between: function(e, n, i) {
            i = i || e;
            var s = t.each(t.ignore(e), n, t.ignore(i));
            return function(e) {
                var t = s.call(this, e);
                return [[t[0][0], r[0][2]], t[1]]
            }
        },
        list: function(e, n, r) {
            return n = n || t.rtoken(/^\s*/),
            r = r || null,
            e instanceof Array ? t.each(t.product(e.slice(0, -1), t.ignore(n)), e.slice(-1), t.ignore(r)) : t.each(t.many(t.each(e, t.ignore(n))), px, t.ignore(r))
        },
        set: function(n, r, i) {
            return r = r || t.rtoken(/^\s*/),
            i = i || null,
            function(s) {
                var o = null
                  , u = null
                  , a = null
                  , f = null
                  , l = [[], s]
                  , h = !1;
                for (var p = 0; p < n.length; p++) {
                    a = null,
                    u = null,
                    o = null,
                    h = n.length == 1;
                    try {
                        o = n[p].call(this, s)
                    } catch (v) {
                        continue
                    }
                    f = [[o[0]], o[1]];
                    if (o[1].length > 0 && !h)
                        try {
                            a = r.call(this, o[1])
                        } catch (m) {
                            h = !0
                        }
                    else
                        h = !0;
                    !h && a[1].length === 0 && (h = !0);
                    if (!h) {
                        var g = [];
                        for (var y = 0; y < n.length; y++)
                            p != y && g.push(n[y]);
                        u = t.set(g, r).call(this, a[1]),
                        u[0].length > 0 && (f[0] = f[0].concat(u[0]),
                        f[1] = u[1])
                    }
                    f[1].length < l[1].length && (l = f);
                    if (l[1].length === 0)
                        break
                }
                if (l[0].length === 0)
                    return l;
                if (i) {
                    try {
                        a = i.call(this, l[1])
                    } catch (b) {
                        throw new e.Exception(l[1])
                    }
                    l[1] = a[1]
                }
                return l
            }
        },
        forward: function(e, t) {
            return function(n) {
                return e[t].call(this, n)
            }
        },
        replace: function(e, t) {
            return function(n) {
                var r = e.call(this, n);
                return [t, r[1]]
            }
        },
        process: function(e, t) {
            return function(n) {
                var r = e.call(this, n);
                return [t.call(this, r[0]), r[1]]
            }
        },
        min: function(t, n) {
            return function(r) {
                var i = n.call(this, r);
                if (i[0].length < t)
                    throw new e.Exception(r);
                return i
            }
        }
    }
      , n = function(e) {
        return function() {
            var t = null
              , n = [];
            arguments.length > 1 ? t = Array.prototype.slice.call(arguments) : arguments[0]instanceof Array && (t = arguments[0]);
            if (!t)
                return e.apply(null, arguments);
            for (var r = 0, i = t.shift(); r < i.length; r++)
                return t.unshift(i[r]),
                n.push(e.apply(null, t)),
                t.shift(),
                n
        }
    }
      , i = "optional not ignore cache".split(/\s/);
    for (var s = 0; s < i.length; s++)
        t[i[s]] = n(t[i[s]]);
    var o = function(e) {
        return function() {
            return arguments[0]instanceof Array ? e.apply(null, arguments[0]) : e.apply(null, arguments)
        }
    }
      , u = "each any all".split(/\s/);
    for (var a = 0; a < u.length; a++)
        t[u[a]] = o(t[u[a]])
}(),
function() {
    var e = Date
      , t = e.prototype
      , n = e.CultureInfo
      , r = function(e) {
        var t = [];
        for (var n = 0; n < e.length; n++)
            e[n]instanceof Array ? t = t.concat(r(e[n])) : e[n] && t.push(e[n]);
        return t
    };
    e.Grammar = {},
    e.Translator = {
        hour: function(e) {
            return function() {
                this.hour = Number(e)
            }
        },
        minute: function(e) {
            return function() {
                this.minute = Number(e)
            }
        },
        second: function(e) {
            return function() {
                this.second = Number(e)
            }
        },
        meridian: function(e) {
            return function() {
                this.meridian = e.slice(0, 1).toLowerCase()
            }
        },
        timezone: function(e) {
            return function() {
                var t = e.replace(/[^\d\+\-]/g, "");
                t.length ? this.timezoneOffset = Number(t) : this.timezone = e.toLowerCase()
            }
        },
        day: function(e) {
            var t = e[0];
            return function() {
                this.day = Number(t.match(/\d+/)[0])
            }
        },
        month: function(e) {
            return function() {
                this.month = e.length == 3 ? "jan feb mar apr may jun jul aug sep oct nov dec".indexOf(e) / 4 : Number(e) - 1
            }
        },
        year: function(e) {
            return function() {
                var t = Number(e);
                this.year = e.length > 2 ? t : t + (t + 2e3 < n.twoDigitYearMax ? 2e3 : 1900)
            }
        },
        rday: function(e) {
            return function() {
                switch (e) {
                case "yesterday":
                    this.days = -1;
                    break;
                case "tomorrow":
                    this.days = 1;
                    break;
                case "today":
                    this.days = 0;
                    break;
                case "now":
                    this.days = 0,
                    this.now = !0
                }
            }
        },
        finishExact: function(t) {
            t = t instanceof Array ? t : [t];
            for (var n = 0; n < t.length; n++)
                t[n] && t[n].call(this);
            var r = new Date;
            (this.hour || this.minute) && !this.month && !this.year && !this.day && (this.day = r.getDate()),
            this.year || (this.year = r.getFullYear()),
            !this.month && this.month !== 0 && (this.month = r.getMonth()),
            this.day || (this.day = 1),
            this.hour || (this.hour = 0),
            this.minute || (this.minute = 0),
            this.second || (this.second = 0),
            this.meridian && this.hour && (this.meridian == "p" && this.hour < 12 ? this.hour = this.hour + 12 : this.meridian == "a" && this.hour == 12 && (this.hour = 0));
            if (this.day > e.getDaysInMonth(this.year, this.month))
                throw new RangeError(this.day + " is not a valid value for days.");
            var i = new Date(this.year,this.month,this.day,this.hour,this.minute,this.second);
            return this.timezone ? i.set({
                timezone: this.timezone
            }) : this.timezoneOffset && i.set({
                timezoneOffset: this.timezoneOffset
            }),
            i
        },
        finish: function(t) {
            t = t instanceof Array ? r(t) : [t];
            if (t.length === 0)
                return null;
            for (var n = 0; n < t.length; n++)
                typeof t[n] == "function" && t[n].call(this);
            var i = e.today();
            if (this.now && !this.unit && !this.operator)
                return new Date;
            this.now && (i = new Date);
            var s = !!(this.days && this.days !== null || this.orient || this.operator), o, u, a;
            a = this.orient == "past" || this.operator == "subtract" ? -1 : 1,
            !this.now && "hour minute second".indexOf(this.unit) != -1 && i.setTimeToNow(),
            (this.month || this.month === 0) && "year day hour minute second".indexOf(this.unit) != -1 && (this.value = this.month + 1,
            this.month = null,
            s = !0);
            if (!s && this.weekday && !this.day && !this.days) {
                var f = Date[this.weekday]();
                this.day = f.getDate(),
                this.month || (this.month = f.getMonth()),
                this.year = f.getFullYear()
            }
            s && this.weekday && this.unit != "month" && (this.unit = "day",
            o = e.getDayNumberFromName(this.weekday) - i.getDay(),
            u = 7,
            this.days = o ? (o + a * u) % u : a * u),
            this.month && this.unit == "day" && this.operator && (this.value = this.month + 1,
            this.month = null),
            this.value != null && this.month != null && this.year != null && (this.day = this.value * 1),
            this.month && !this.day && this.value && (i.set({
                day: this.value * 1
            }),
            s || (this.day = this.value * 1)),
            !this.month && this.value && this.unit == "month" && !this.now && (this.month = this.value,
            s = !0),
            s && (this.month || this.month === 0) && this.unit != "year" && (this.unit = "month",
            o = this.month - i.getMonth(),
            u = 12,
            this.months = o ? (o + a * u) % u : a * u,
            this.month = null),
            this.unit || (this.unit = "day");
            if (!this.value && this.operator && this.operator !== null && this[this.unit + "s"] && this[this.unit + "s"] !== null)
                this[this.unit + "s"] = this[this.unit + "s"] + (this.operator == "add" ? 1 : -1) + (this.value || 0) * a;
            else if (this[this.unit + "s"] == null || this.operator != null)
                this.value || (this.value = 1),
                this[this.unit + "s"] = this.value * a;
            this.meridian && this.hour && (this.meridian == "p" && this.hour < 12 ? this.hour = this.hour + 12 : this.meridian == "a" && this.hour == 12 && (this.hour = 0));
            if (this.weekday && !this.day && !this.days) {
                var f = Date[this.weekday]();
                this.day = f.getDate(),
                f.getMonth() !== i.getMonth() && (this.month = f.getMonth())
            }
            return (this.month || this.month === 0) && !this.day && (this.day = 1),
            !this.orient && !this.operator && this.unit == "week" && this.value && !this.day && !this.month ? Date.today().setWeek(this.value) : (s && this.timezone && this.day && this.days && (this.day = this.days),
            s ? i.add(this) : i.set(this))
        }
    };
    var i = e.Parsing.Operators, s = e.Grammar, o = e.Translator, u;
    s.datePartDelimiter = i.rtoken(/^([\s\-\.\,\/\x27]+)/),
    s.timePartDelimiter = i.stoken(":"),
    s.whiteSpace = i.rtoken(/^\s*/),
    s.generalDelimiter = i.rtoken(/^(([\s\,]|at|@|on)+)/);
    var a = {};
    s.ctoken = function(e) {
        var t = a[e];
        if (!t) {
            var r = n.regexPatterns
              , s = e.split(/\s+/)
              , o = [];
            for (var u = 0; u < s.length; u++)
                o.push(i.replace(i.rtoken(r[s[u]]), s[u]));
            t = a[e] = i.any.apply(null, o)
        }
        return t
    }
    ,
    s.ctoken2 = function(e) {
        return i.rtoken(n.regexPatterns[e])
    }
    ,
    s.h = i.cache(i.process(i.rtoken(/^(0[0-9]|1[0-2]|[1-9])/), o.hour)),
    s.hh = i.cache(i.process(i.rtoken(/^(0[0-9]|1[0-2])/), o.hour)),
    s.H = i.cache(i.process(i.rtoken(/^([0-1][0-9]|2[0-3]|[0-9])/), o.hour)),
    s.HH = i.cache(i.process(i.rtoken(/^([0-1][0-9]|2[0-3])/), o.hour)),
    s.m = i.cache(i.process(i.rtoken(/^([0-5][0-9]|[0-9])/), o.minute)),
    s.mm = i.cache(i.process(i.rtoken(/^[0-5][0-9]/), o.minute)),
    s.s = i.cache(i.process(i.rtoken(/^([0-5][0-9]|[0-9])/), o.second)),
    s.ss = i.cache(i.process(i.rtoken(/^[0-5][0-9]/), o.second)),
    s.hms = i.cache(i.sequence([s.H, s.m, s.s], s.timePartDelimiter)),
    s.t = i.cache(i.process(s.ctoken2("shortMeridian"), o.meridian)),
    s.tt = i.cache(i.process(s.ctoken2("longMeridian"), o.meridian)),
    s.z = i.cache(i.process(i.rtoken(/^((\+|\-)\s*\d\d\d\d)|((\+|\-)\d\d\:?\d\d)/), o.timezone)),
    s.zz = i.cache(i.process(i.rtoken(/^((\+|\-)\s*\d\d\d\d)|((\+|\-)\d\d\:?\d\d)/), o.timezone)),
    s.zzz = i.cache(i.process(s.ctoken2("timezone"), o.timezone)),
    s.timeSuffix = i.each(i.ignore(s.whiteSpace), i.set([s.tt, s.zzz])),
    s.time = i.each(i.optional(i.ignore(i.stoken("T"))), s.hms, s.timeSuffix),
    s.d = i.cache(i.process(i.each(i.rtoken(/^([0-2]\d|3[0-1]|\d)/), i.optional(s.ctoken2("ordinalSuffix"))), o.day)),
    s.dd = i.cache(i.process(i.each(i.rtoken(/^([0-2]\d|3[0-1])/), i.optional(s.ctoken2("ordinalSuffix"))), o.day)),
    s.ddd = s.dddd = i.cache(i.process(s.ctoken("sun mon tue wed thu fri sat"), function(e) {
        return function() {
            this.weekday = e
        }
    })),
    s.M = i.cache(i.process(i.rtoken(/^(1[0-2]|0\d|\d)/), o.month)),
    s.MM = i.cache(i.process(i.rtoken(/^(1[0-2]|0\d)/), o.month)),
    s.MMM = s.MMMM = i.cache(i.process(s.ctoken("jan feb mar apr may jun jul aug sep oct nov dec"), o.month)),
    s.y = i.cache(i.process(i.rtoken(/^(\d\d?)/), o.year)),
    s.yy = i.cache(i.process(i.rtoken(/^(\d\d)/), o.year)),
    s.yyy = i.cache(i.process(i.rtoken(/^(\d\d?\d?\d?)/), o.year)),
    s.yyyy = i.cache(i.process(i.rtoken(/^(\d\d\d\d)/), o.year)),
    u = function() {
        return i.each(i.any.apply(null, arguments), i.not(s.ctoken2("timeContext")))
    }
    ,
    s.day = u(s.d, s.dd),
    s.month = u(s.M, s.MMM),
    s.year = u(s.yyyy, s.yy),
    s.orientation = i.process(s.ctoken("past future"), function(e) {
        return function() {
            this.orient = e
        }
    }),
    s.operator = i.process(s.ctoken("add subtract"), function(e) {
        return function() {
            this.operator = e
        }
    }),
    s.rday = i.process(s.ctoken("yesterday tomorrow today now"), o.rday),
    s.unit = i.process(s.ctoken("second minute hour day week month year"), function(e) {
        return function() {
            this.unit = e
        }
    }),
    s.value = i.process(i.rtoken(/^\d\d?(st|nd|rd|th)?/), function(e) {
        return function() {
            this.value = e.replace(/\D/g, "")
        }
    }),
    s.expression = i.set([s.rday, s.operator, s.value, s.unit, s.orientation, s.ddd, s.MMM]),
    u = function() {
        return i.set(arguments, s.datePartDelimiter)
    }
    ,
    s.mdy = u(s.ddd, s.month, s.day, s.year),
    s.ymd = u(s.ddd, s.year, s.month, s.day),
    s.dmy = u(s.ddd, s.day, s.month, s.year),
    s.date = function(e) {
        return (s[n.dateElementOrder] || s.mdy).call(this, e)
    }
    ,
    s.format = i.process(i.many(i.any(i.process(i.rtoken(/^(dd?d?d?|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|zz?z?)/), function(t) {
        if (s[t])
            return s[t];
        throw e.Parsing.Exception(t)
    }), i.process(i.rtoken(/^[^dMyhHmstz]+/), function(e) {
        return i.ignore(i.stoken(e))
    }))), function(e) {
        return i.process(i.each.apply(null, e), o.finishExact)
    });
    var f = {}
      , l = function(e) {
        return f[e] = f[e] || s.format(e)[0]
    };
    s.formats = function(e) {
        if (e instanceof Array) {
            var t = [];
            for (var n = 0; n < e.length; n++)
                t.push(l(e[n]));
            return i.any.apply(null, t)
        }
        return l(e)
    }
    ,
    s._formats = s.formats(['"yyyy-MM-ddTHH:mm:ssZ"', "yyyy-MM-ddTHH:mm:ssZ", "yyyy-MM-ddTHH:mm:ssz", "yyyy-MM-ddTHH:mm:ss", "yyyy-MM-ddTHH:mmZ", "yyyy-MM-ddTHH:mmz", "yyyy-MM-ddTHH:mm", "ddd, MMM dd, yyyy H:mm:ss tt", "ddd MMM d yyyy HH:mm:ss zzz", "MMddyyyy", "ddMMyyyy", "Mddyyyy", "ddMyyyy", "Mdyyyy", "dMyyyy", "yyyy", "Mdyy", "dMyy", "d"]),
    s._start = i.process(i.set([s.date, s.time, s.expression], s.generalDelimiter, s.whiteSpace), o.finish),
    s.start = function(e) {
        try {
            var t = s._formats.call({}, e);
            if (t[1].length === 0)
                return t
        } catch (n) {}
        return s._start.call({}, e)
    }
    ,
    e._parse = e.parse,
    e.parse = function(t) {
        var n = null;
        if (!t)
            return null;
        if (t instanceof Date)
            return t;
        try {
            n = e.Grammar.start.call({}, t.replace(/^\s*(\S*(\s+\S+)*)\s*$/, "$1"))
        } catch (r) {
            return null
        }
        return n[1].length === 0 ? n[0] : null
    }
    ,
    e.getParseFunction = function(t) {
        var n = e.Grammar.formats(t);
        return function(e) {
            var t = null;
            try {
                t = n.call({}, e)
            } catch (r) {
                return null
            }
            return t[1].length === 0 ? t[0] : null
        }
    }
    ,
    e.parseExact = function(t, n) {
        return e.getParseFunction(n)(t)
    }
}();
/*! jQuery v1.8.2 jquery.com | jquery.org/license */
(function(a, b) {
    function G(a) {
        var b = F[a] = {};
        return p.each(a.split(s), function(a, c) {
            b[c] = !0
        }),
        b
    }
    function J(a, c, d) {
        if (d === b && a.nodeType === 1) {
            var e = "data-" + c.replace(I, "-$1").toLowerCase();
            d = a.getAttribute(e);
            if (typeof d == "string") {
                try {
                    d = d === "true" ? !0 : d === "false" ? !1 : d === "null" ? null : +d + "" === d ? +d : H.test(d) ? p.parseJSON(d) : d
                } catch (f) {}
                p.data(a, c, d)
            } else
                d = b
        }
        return d
    }
    function K(a) {
        var b;
        for (b in a) {
            if (b === "data" && p.isEmptyObject(a[b]))
                continue;
            if (b !== "toJSON")
                return !1
        }
        return !0
    }
    function ba() {
        return !1
    }
    function bb() {
        return !0
    }
    function bh(a) {
        return !a || !a.parentNode || a.parentNode.nodeType === 11
    }
    function bi(a, b) {
        do
            a = a[b];
        while (a && a.nodeType !== 1);
        return a
    }
    function bj(a, b, c) {
        b = b || 0;
        if (p.isFunction(b))
            return p.grep(a, function(a, d) {
                var e = !!b.call(a, d, a);
                return e === c
            });
        if (b.nodeType)
            return p.grep(a, function(a, d) {
                return a === b === c
            });
        if (typeof b == "string") {
            var d = p.grep(a, function(a) {
                return a.nodeType === 1
            });
            if (be.test(b))
                return p.filter(b, d, !c);
            b = p.filter(b, d)
        }
        return p.grep(a, function(a, d) {
            return p.inArray(a, b) >= 0 === c
        })
    }
    function bk(a) {
        var b = bl.split("|")
          , c = a.createDocumentFragment();
        if (c.createElement)
            while (b.length)
                c.createElement(b.pop());
        return c
    }
    function bC(a, b) {
        return a.getElementsByTagName(b)[0] || a.appendChild(a.ownerDocument.createElement(b))
    }
    function bD(a, b) {
        if (b.nodeType !== 1 || !p.hasData(a))
            return;
        var c, d, e, f = p._data(a), g = p._data(b, f), h = f.events;
        if (h) {
            delete g.handle,
            g.events = {};
            for (c in h)
                for (d = 0,
                e = h[c].length; d < e; d++)
                    p.event.add(b, c, h[c][d])
        }
        g.data && (g.data = p.extend({}, g.data))
    }
    function bE(a, b) {
        var c;
        if (b.nodeType !== 1)
            return;
        b.clearAttributes && b.clearAttributes(),
        b.mergeAttributes && b.mergeAttributes(a),
        c = b.nodeName.toLowerCase(),
        c === "object" ? (b.parentNode && (b.outerHTML = a.outerHTML),
        p.support.html5Clone && a.innerHTML && !p.trim(b.innerHTML) && (b.innerHTML = a.innerHTML)) : c === "input" && bv.test(a.type) ? (b.defaultChecked = b.checked = a.checked,
        b.value !== a.value && (b.value = a.value)) : c === "option" ? b.selected = a.defaultSelected : c === "input" || c === "textarea" ? b.defaultValue = a.defaultValue : c === "script" && b.text !== a.text && (b.text = a.text),
        b.removeAttribute(p.expando)
    }
    function bF(a) {
        return typeof a.getElementsByTagName != "undefined" ? a.getElementsByTagName("*") : typeof a.querySelectorAll != "undefined" ? a.querySelectorAll("*") : []
    }
    function bG(a) {
        bv.test(a.type) && (a.defaultChecked = a.checked)
    }
    function bY(a, b) {
        if (b in a)
            return b;
        var c = b.charAt(0).toUpperCase() + b.slice(1)
          , d = b
          , e = bW.length;
        while (e--) {
            b = bW[e] + c;
            if (b in a)
                return b
        }
        return d
    }
    function bZ(a, b) {
        return a = b || a,
        p.css(a, "display") === "none" || !p.contains(a.ownerDocument, a)
    }
    function b$(a, b) {
        var c, d, e = [], f = 0, g = a.length;
        for (; f < g; f++) {
            c = a[f];
            if (!c.style)
                continue;
            e[f] = p._data(c, "olddisplay"),
            b ? (!e[f] && c.style.display === "none" && (c.style.display = ""),
            c.style.display === "" && bZ(c) && (e[f] = p._data(c, "olddisplay", cc(c.nodeName)))) : (d = bH(c, "display"),
            !e[f] && d !== "none" && p._data(c, "olddisplay", d))
        }
        for (f = 0; f < g; f++) {
            c = a[f];
            if (!c.style)
                continue;
            if (!b || c.style.display === "none" || c.style.display === "")
                c.style.display = b ? e[f] || "" : "none"
        }
        return a
    }
    function b_(a, b, c) {
        var d = bP.exec(b);
        return d ? Math.max(0, d[1] - (c || 0)) + (d[2] || "px") : b
    }
    function ca(a, b, c, d) {
        var e = c === (d ? "border" : "content") ? 4 : b === "width" ? 1 : 0
          , f = 0;
        for (; e < 4; e += 2)
            c === "margin" && (f += p.css(a, c + bV[e], !0)),
            d ? (c === "content" && (f -= parseFloat(bH(a, "padding" + bV[e])) || 0),
            c !== "margin" && (f -= parseFloat(bH(a, "border" + bV[e] + "Width")) || 0)) : (f += parseFloat(bH(a, "padding" + bV[e])) || 0,
            c !== "padding" && (f += parseFloat(bH(a, "border" + bV[e] + "Width")) || 0));
        return f
    }
    function cb(a, b, c) {
        var d = b === "width" ? a.offsetWidth : a.offsetHeight
          , e = !0
          , f = p.support.boxSizing && p.css(a, "boxSizing") === "border-box";
        if (d <= 0 || d == null) {
            d = bH(a, b);
            if (d < 0 || d == null)
                d = a.style[b];
            if (bQ.test(d))
                return d;
            e = f && (p.support.boxSizingReliable || d === a.style[b]),
            d = parseFloat(d) || 0
        }
        return d + ca(a, b, c || (f ? "border" : "content"), e) + "px"
    }
    function cc(a) {
        if (bS[a])
            return bS[a];
        var b = p("<" + a + ">").appendTo(e.body)
          , c = b.css("display");
        b.remove();
        if (c === "none" || c === "") {
            bI = e.body.appendChild(bI || p.extend(e.createElement("iframe"), {
                frameBorder: 0,
                width: 0,
                height: 0
            }));
            if (!bJ || !bI.createElement)
                bJ = (bI.contentWindow || bI.contentDocument).document,
                bJ.write("<!doctype html><html><body>"),
                bJ.close();
            b = bJ.body.appendChild(bJ.createElement(a)),
            c = bH(b, "display"),
            e.body.removeChild(bI)
        }
        return bS[a] = c,
        c
    }
    function ci(a, b, c, d) {
        var e;
        if (p.isArray(b))
            p.each(b, function(b, e) {
                c || ce.test(a) ? d(a, e) : ci(a + "[" + (typeof e == "object" ? b : "") + "]", e, c, d)
            });
        else if (!c && p.type(b) === "object")
            for (e in b)
                ci(a + "[" + e + "]", b[e], c, d);
        else
            d(a, b)
    }
    function cz(a) {
        return function(b, c) {
            typeof b != "string" && (c = b,
            b = "*");
            var d, e, f, g = b.toLowerCase().split(s), h = 0, i = g.length;
            if (p.isFunction(c))
                for (; h < i; h++)
                    d = g[h],
                    f = /^\+/.test(d),
                    f && (d = d.substr(1) || "*"),
                    e = a[d] = a[d] || [],
                    e[f ? "unshift" : "push"](c)
        }
    }
    function cA(a, c, d, e, f, g) {
        f = f || c.dataTypes[0],
        g = g || {},
        g[f] = !0;
        var h, i = a[f], j = 0, k = i ? i.length : 0, l = a === cv;
        for (; j < k && (l || !h); j++)
            h = i[j](c, d, e),
            typeof h == "string" && (!l || g[h] ? h = b : (c.dataTypes.unshift(h),
            h = cA(a, c, d, e, h, g)));
        return (l || !h) && !g["*"] && (h = cA(a, c, d, e, "*", g)),
        h
    }
    function cB(a, c) {
        var d, e, f = p.ajaxSettings.flatOptions || {};
        for (d in c)
            c[d] !== b && ((f[d] ? a : e || (e = {}))[d] = c[d]);
        e && p.extend(!0, a, e)
    }
    function cC(a, c, d) {
        var e, f, g, h, i = a.contents, j = a.dataTypes, k = a.responseFields;
        for (f in k)
            f in d && (c[k[f]] = d[f]);
        while (j[0] === "*")
            j.shift(),
            e === b && (e = a.mimeType || c.getResponseHeader("content-type"));
        if (e)
            for (f in i)
                if (i[f] && i[f].test(e)) {
                    j.unshift(f);
                    break
                }
        if (j[0]in d)
            g = j[0];
        else {
            for (f in d) {
                if (!j[0] || a.converters[f + " " + j[0]]) {
                    g = f;
                    break
                }
                h || (h = f)
            }
            g = g || h
        }
        if (g)
            return g !== j[0] && j.unshift(g),
            d[g]
    }
    function cD(a, b) {
        var c, d, e, f, g = a.dataTypes.slice(), h = g[0], i = {}, j = 0;
        a.dataFilter && (b = a.dataFilter(b, a.dataType));
        if (g[1])
            for (c in a.converters)
                i[c.toLowerCase()] = a.converters[c];
        for (; e = g[++j]; )
            if (e !== "*") {
                if (h !== "*" && h !== e) {
                    c = i[h + " " + e] || i["* " + e];
                    if (!c)
                        for (d in i) {
                            f = d.split(" ");
                            if (f[1] === e) {
                                c = i[h + " " + f[0]] || i["* " + f[0]];
                                if (c) {
                                    c === !0 ? c = i[d] : i[d] !== !0 && (e = f[0],
                                    g.splice(j--, 0, e));
                                    break
                                }
                            }
                        }
                    if (c !== !0)
                        if (c && a["throws"])
                            b = c(b);
                        else
                            try {
                                b = c(b)
                            } catch (k) {
                                return {
                                    state: "parsererror",
                                    error: c ? k : "No conversion from " + h + " to " + e
                                }
                            }
                }
                h = e
            }
        return {
            state: "success",
            data: b
        }
    }
    function cL() {
        try {
            return new a.XMLHttpRequest
        } catch (b) {}
    }
    function cM() {
        try {
            return new a.ActiveXObject("Microsoft.XMLHTTP")
        } catch (b) {}
    }
    function cU() {
        return setTimeout(function() {
            cN = b
        }, 0),
        cN = p.now()
    }
    function cV(a, b) {
        p.each(b, function(b, c) {
            var d = (cT[b] || []).concat(cT["*"])
              , e = 0
              , f = d.length;
            for (; e < f; e++)
                if (d[e].call(a, b, c))
                    return
        })
    }
    function cW(a, b, c) {
        var d, e = 0, f = 0, g = cS.length, h = p.Deferred().always(function() {
            delete i.elem
        }), i = function() {
            var b = cN || cU()
              , c = Math.max(0, j.startTime + j.duration - b)
              , d = 1 - (c / j.duration || 0)
              , e = 0
              , f = j.tweens.length;
            for (; e < f; e++)
                j.tweens[e].run(d);
            return h.notifyWith(a, [j, d, c]),
            d < 1 && f ? c : (h.resolveWith(a, [j]),
            !1)
        }, j = h.promise({
            elem: a,
            props: p.extend({}, b),
            opts: p.extend(!0, {
                specialEasing: {}
            }, c),
            originalProperties: b,
            originalOptions: c,
            startTime: cN || cU(),
            duration: c.duration,
            tweens: [],
            createTween: function(b, c, d) {
                var e = p.Tween(a, j.opts, b, c, j.opts.specialEasing[b] || j.opts.easing);
                return j.tweens.push(e),
                e
            },
            stop: function(b) {
                var c = 0
                  , d = b ? j.tweens.length : 0;
                for (; c < d; c++)
                    j.tweens[c].run(1);
                return b ? h.resolveWith(a, [j, b]) : h.rejectWith(a, [j, b]),
                this
            }
        }), k = j.props;
        cX(k, j.opts.specialEasing);
        for (; e < g; e++) {
            d = cS[e].call(j, a, k, j.opts);
            if (d)
                return d
        }
        return cV(j, k),
        p.isFunction(j.opts.start) && j.opts.start.call(a, j),
        p.fx.timer(p.extend(i, {
            anim: j,
            queue: j.opts.queue,
            elem: a
        })),
        j.progress(j.opts.progress).done(j.opts.done, j.opts.complete).fail(j.opts.fail).always(j.opts.always)
    }
    function cX(a, b) {
        var c, d, e, f, g;
        for (c in a) {
            d = p.camelCase(c),
            e = b[d],
            f = a[c],
            p.isArray(f) && (e = f[1],
            f = a[c] = f[0]),
            c !== d && (a[d] = f,
            delete a[c]),
            g = p.cssHooks[d];
            if (g && "expand"in g) {
                f = g.expand(f),
                delete a[d];
                for (c in f)
                    c in a || (a[c] = f[c],
                    b[c] = e)
            } else
                b[d] = e
        }
    }
    function cY(a, b, c) {
        var d, e, f, g, h, i, j, k, l = this, m = a.style, n = {}, o = [], q = a.nodeType && bZ(a);
        c.queue || (j = p._queueHooks(a, "fx"),
        j.unqueued == null && (j.unqueued = 0,
        k = j.empty.fire,
        j.empty.fire = function() {
            j.unqueued || k()
        }
        ),
        j.unqueued++,
        l.always(function() {
            l.always(function() {
                j.unqueued--,
                p.queue(a, "fx").length || j.empty.fire()
            })
        })),
        a.nodeType === 1 && ("height"in b || "width"in b) && (c.overflow = [m.overflow, m.overflowX, m.overflowY],
        p.css(a, "display") === "inline" && p.css(a, "float") === "none" && (!p.support.inlineBlockNeedsLayout || cc(a.nodeName) === "inline" ? m.display = "inline-block" : m.zoom = 1)),
        c.overflow && (m.overflow = "hidden",
        p.support.shrinkWrapBlocks || l.done(function() {
            m.overflow = c.overflow[0],
            m.overflowX = c.overflow[1],
            m.overflowY = c.overflow[2]
        }));
        for (d in b) {
            f = b[d];
            if (cP.exec(f)) {
                delete b[d];
                if (f === (q ? "hide" : "show"))
                    continue;
                o.push(d)
            }
        }
        g = o.length;
        if (g) {
            h = p._data(a, "fxshow") || p._data(a, "fxshow", {}),
            q ? p(a).show() : l.done(function() {
                p(a).hide()
            }),
            l.done(function() {
                var b;
                p.removeData(a, "fxshow", !0);
                for (b in n)
                    p.style(a, b, n[b])
            });
            for (d = 0; d < g; d++)
                e = o[d],
                i = l.createTween(e, q ? h[e] : 0),
                n[e] = h[e] || p.style(a, e),
                e in h || (h[e] = i.start,
                q && (i.end = i.start,
                i.start = e === "width" || e === "height" ? 1 : 0))
        }
    }
    function cZ(a, b, c, d, e) {
        return new cZ.prototype.init(a,b,c,d,e)
    }
    function c$(a, b) {
        var c, d = {
            height: a
        }, e = 0;
        b = b ? 1 : 0;
        for (; e < 4; e += 2 - b)
            c = bV[e],
            d["margin" + c] = d["padding" + c] = a;
        return b && (d.opacity = d.width = a),
        d
    }
    function da(a) {
        return p.isWindow(a) ? a : a.nodeType === 9 ? a.defaultView || a.parentWindow : !1
    }
    var c, d, e = a.document, f = a.location, g = a.navigator, h = a.jQuery, i = a.$, j = Array.prototype.push, k = Array.prototype.slice, l = Array.prototype.indexOf, m = Object.prototype.toString, n = Object.prototype.hasOwnProperty, o = String.prototype.trim, p = function(a, b) {
        return new p.fn.init(a,b,c)
    }, q = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source, r = /\S/, s = /\s+/, t = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, u = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/, v = /^<(\w+)\s*\/?>(?:<\/\1>|)$/, w = /^[\],:{}\s]*$/, x = /(?:^|:|,)(?:\s*\[)+/g, y = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g, z = /"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g, A = /^-ms-/, B = /-([\da-z])/gi, C = function(a, b) {
        return (b + "").toUpperCase()
    }, D = function() {
        e.addEventListener ? (e.removeEventListener("DOMContentLoaded", D, !1),
        p.ready()) : e.readyState === "complete" && (e.detachEvent("onreadystatechange", D),
        p.ready())
    }, E = {};
    p.fn = p.prototype = {
        constructor: p,
        init: function(a, c, d) {
            var f, g, h, i;
            if (!a)
                return this;
            if (a.nodeType)
                return this.context = this[0] = a,
                this.length = 1,
                this;
            if (typeof a == "string") {
                a.charAt(0) === "<" && a.charAt(a.length - 1) === ">" && a.length >= 3 ? f = [null, a, null] : f = u.exec(a);
                if (f && (f[1] || !c)) {
                    if (f[1])
                        return c = c instanceof p ? c[0] : c,
                        i = c && c.nodeType ? c.ownerDocument || c : e,
                        a = p.parseHTML(f[1], i, !0),
                        v.test(f[1]) && p.isPlainObject(c) && this.attr.call(a, c, !0),
                        p.merge(this, a);
                    g = e.getElementById(f[2]);
                    if (g && g.parentNode) {
                        if (g.id !== f[2])
                            return d.find(a);
                        this.length = 1,
                        this[0] = g
                    }
                    return this.context = e,
                    this.selector = a,
                    this
                }
                return !c || c.jquery ? (c || d).find(a) : this.constructor(c).find(a)
            }
            return p.isFunction(a) ? d.ready(a) : (a.selector !== b && (this.selector = a.selector,
            this.context = a.context),
            p.makeArray(a, this))
        },
        selector: "",
        jquery: "1.8.2",
        length: 0,
        size: function() {
            return this.length
        },
        toArray: function() {
            return k.call(this)
        },
        get: function(a) {
            return a == null ? this.toArray() : a < 0 ? this[this.length + a] : this[a]
        },
        pushStack: function(a, b, c) {
            var d = p.merge(this.constructor(), a);
            return d.prevObject = this,
            d.context = this.context,
            b === "find" ? d.selector = this.selector + (this.selector ? " " : "") + c : b && (d.selector = this.selector + "." + b + "(" + c + ")"),
            d
        },
        each: function(a, b) {
            return p.each(this, a, b)
        },
        ready: function(a) {
            return p.ready.promise().done(a),
            this
        },
        eq: function(a) {
            return a = +a,
            a === -1 ? this.slice(a) : this.slice(a, a + 1)
        },
        first: function() {
            return this.eq(0)
        },
        last: function() {
            return this.eq(-1)
        },
        slice: function() {
            return this.pushStack(k.apply(this, arguments), "slice", k.call(arguments).join(","))
        },
        map: function(a) {
            return this.pushStack(p.map(this, function(b, c) {
                return a.call(b, c, b)
            }))
        },
        end: function() {
            return this.prevObject || this.constructor(null)
        },
        push: j,
        sort: [].sort,
        splice: [].splice
    },
    p.fn.init.prototype = p.fn,
    p.extend = p.fn.extend = function() {
        var a, c, d, e, f, g, h = arguments[0] || {}, i = 1, j = arguments.length, k = !1;
        typeof h == "boolean" && (k = h,
        h = arguments[1] || {},
        i = 2),
        typeof h != "object" && !p.isFunction(h) && (h = {}),
        j === i && (h = this,
        --i);
        for (; i < j; i++)
            if ((a = arguments[i]) != null)
                for (c in a) {
                    d = h[c],
                    e = a[c];
                    if (h === e)
                        continue;
                    k && e && (p.isPlainObject(e) || (f = p.isArray(e))) ? (f ? (f = !1,
                    g = d && p.isArray(d) ? d : []) : g = d && p.isPlainObject(d) ? d : {},
                    h[c] = p.extend(k, g, e)) : e !== b && (h[c] = e)
                }
        return h
    }
    ,
    p.extend({
        noConflict: function(b) {
            return a.$ === p && (a.$ = i),
            b && a.jQuery === p && (a.jQuery = h),
            p
        },
        isReady: !1,
        readyWait: 1,
        holdReady: function(a) {
            a ? p.readyWait++ : p.ready(!0)
        },
        ready: function(a) {
            if (a === !0 ? --p.readyWait : p.isReady)
                return;
            if (!e.body)
                return setTimeout(p.ready, 1);
            p.isReady = !0;
            if (a !== !0 && --p.readyWait > 0)
                return;
            d.resolveWith(e, [p]),
            p.fn.trigger && p(e).trigger("ready").off("ready")
        },
        isFunction: function(a) {
            return p.type(a) === "function"
        },
        isArray: Array.isArray || function(a) {
            return p.type(a) === "array"
        }
        ,
        isWindow: function(a) {
            return a != null && a == a.window
        },
        isNumeric: function(a) {
            return !isNaN(parseFloat(a)) && isFinite(a)
        },
        type: function(a) {
            return a == null ? String(a) : E[m.call(a)] || "object"
        },
        isPlainObject: function(a) {
            if (!a || p.type(a) !== "object" || a.nodeType || p.isWindow(a))
                return !1;
            try {
                if (a.constructor && !n.call(a, "constructor") && !n.call(a.constructor.prototype, "isPrototypeOf"))
                    return !1
            } catch (c) {
                return !1
            }
            var d;
            for (d in a)
                ;
            return d === b || n.call(a, d)
        },
        isEmptyObject: function(a) {
            var b;
            for (b in a)
                return !1;
            return !0
        },
        error: function(a) {
            throw new Error(a)
        },
        parseHTML: function(a, b, c) {
            var d;
            return !a || typeof a != "string" ? null : (typeof b == "boolean" && (c = b,
            b = 0),
            b = b || e,
            (d = v.exec(a)) ? [b.createElement(d[1])] : (d = p.buildFragment([a], b, c ? null : []),
            p.merge([], (d.cacheable ? p.clone(d.fragment) : d.fragment).childNodes)))
        },
        parseJSON: function(b) {
            if (!b || typeof b != "string")
                return null;
            b = p.trim(b);
            if (a.JSON && a.JSON.parse)
                return a.JSON.parse(b);
            if (w.test(b.replace(y, "@").replace(z, "]").replace(x, "")))
                return (new Function("return " + b))();
            p.error("Invalid JSON: " + b)
        },
        parseXML: function(c) {
            var d, e;
            if (!c || typeof c != "string")
                return null;
            try {
                a.DOMParser ? (e = new DOMParser,
                d = e.parseFromString(c, "text/xml")) : (d = new ActiveXObject("Microsoft.XMLDOM"),
                d.async = "false",
                d.loadXML(c))
            } catch (f) {
                d = b
            }
            return (!d || !d.documentElement || d.getElementsByTagName("parsererror").length) && p.error("Invalid XML: " + c),
            d
        },
        noop: function() {},
        globalEval: function(b) {
            b && r.test(b) && (a.execScript || function(b) {
                a.eval.call(a, b)
            }
            )(b)
        },
        camelCase: function(a) {
            return a.replace(A, "ms-").replace(B, C)
        },
        nodeName: function(a, b) {
            return a.nodeName && a.nodeName.toLowerCase() === b.toLowerCase()
        },
        each: function(a, c, d) {
            var e, f = 0, g = a.length, h = g === b || p.isFunction(a);
            if (d) {
                if (h) {
                    for (e in a)
                        if (c.apply(a[e], d) === !1)
                            break
                } else
                    for (; f < g; )
                        if (c.apply(a[f++], d) === !1)
                            break
            } else if (h) {
                for (e in a)
                    if (c.call(a[e], e, a[e]) === !1)
                        break
            } else
                for (; f < g; )
                    if (c.call(a[f], f, a[f++]) === !1)
                        break;
            return a
        },
        trim: o && !o.call("﻿ ") ? function(a) {
            return a == null ? "" : o.call(a)
        }
        : function(a) {
            return a == null ? "" : (a + "").replace(t, "")
        }
        ,
        makeArray: function(a, b) {
            var c, d = b || [];
            return a != null && (c = p.type(a),
            a.length == null || c === "string" || c === "function" || c === "regexp" || p.isWindow(a) ? j.call(d, a) : p.merge(d, a)),
            d
        },
        inArray: function(a, b, c) {
            var d;
            if (b) {
                if (l)
                    return l.call(b, a, c);
                d = b.length,
                c = c ? c < 0 ? Math.max(0, d + c) : c : 0;
                for (; c < d; c++)
                    if (c in b && b[c] === a)
                        return c
            }
            return -1
        },
        merge: function(a, c) {
            var d = c.length
              , e = a.length
              , f = 0;
            if (typeof d == "number")
                for (; f < d; f++)
                    a[e++] = c[f];
            else
                while (c[f] !== b)
                    a[e++] = c[f++];
            return a.length = e,
            a
        },
        grep: function(a, b, c) {
            var d, e = [], f = 0, g = a.length;
            c = !!c;
            for (; f < g; f++)
                d = !!b(a[f], f),
                c !== d && e.push(a[f]);
            return e
        },
        map: function(a, c, d) {
            var e, f, g = [], h = 0, i = a.length, j = a instanceof p || i !== b && typeof i == "number" && (i > 0 && a[0] && a[i - 1] || i === 0 || p.isArray(a));
            if (j)
                for (; h < i; h++)
                    e = c(a[h], h, d),
                    e != null && (g[g.length] = e);
            else
                for (f in a)
                    e = c(a[f], f, d),
                    e != null && (g[g.length] = e);
            return g.concat.apply([], g)
        },
        guid: 1,
        proxy: function(a, c) {
            var d, e, f;
            return typeof c == "string" && (d = a[c],
            c = a,
            a = d),
            p.isFunction(a) ? (e = k.call(arguments, 2),
            f = function() {
                return a.apply(c, e.concat(k.call(arguments)))
            }
            ,
            f.guid = a.guid = a.guid || p.guid++,
            f) : b
        },
        access: function(a, c, d, e, f, g, h) {
            var i, j = d == null, k = 0, l = a.length;
            if (d && typeof d == "object") {
                for (k in d)
                    p.access(a, c, k, d[k], 1, g, e);
                f = 1
            } else if (e !== b) {
                i = h === b && p.isFunction(e),
                j && (i ? (i = c,
                c = function(a, b, c) {
                    return i.call(p(a), c)
                }
                ) : (c.call(a, e),
                c = null));
                if (c)
                    for (; k < l; k++)
                        c(a[k], d, i ? e.call(a[k], k, c(a[k], d)) : e, h);
                f = 1
            }
            return f ? a : j ? c.call(a) : l ? c(a[0], d) : g
        },
        now: function() {
            return (new Date).getTime()
        }
    }),
    p.ready.promise = function(b) {
        if (!d) {
            d = p.Deferred();
            if (e.readyState === "complete")
                setTimeout(p.ready, 1);
            else if (e.addEventListener)
                e.addEventListener("DOMContentLoaded", D, !1),
                a.addEventListener("load", p.ready, !1);
            else {
                e.attachEvent("onreadystatechange", D),
                a.attachEvent("onload", p.ready);
                var c = !1;
                try {
                    c = a.frameElement == null && e.documentElement
                } catch (f) {}
                c && c.doScroll && function g() {
                    if (!p.isReady) {
                        try {
                            c.doScroll("left")
                        } catch (a) {
                            return setTimeout(g, 50)
                        }
                        p.ready()
                    }
                }()
            }
        }
        return d.promise(b)
    }
    ,
    p.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(a, b) {
        E["[object " + b + "]"] = b.toLowerCase()
    }),
    c = p(e);
    var F = {};
    p.Callbacks = function(a) {
        a = typeof a == "string" ? F[a] || G(a) : p.extend({}, a);
        var c, d, e, f, g, h, i = [], j = !a.once && [], k = function(b) {
            c = a.memory && b,
            d = !0,
            h = f || 0,
            f = 0,
            g = i.length,
            e = !0;
            for (; i && h < g; h++)
                if (i[h].apply(b[0], b[1]) === !1 && a.stopOnFalse) {
                    c = !1;
                    break
                }
            e = !1,
            i && (j ? j.length && k(j.shift()) : c ? i = [] : l.disable())
        }, l = {
            add: function() {
                if (i) {
                    var b = i.length;
                    (function d(b) {
                        p.each(b, function(b, c) {
                            var e = p.type(c);
                            e === "function" && (!a.unique || !l.has(c)) ? i.push(c) : c && c.length && e !== "string" && d(c)
                        })
                    }
                    )(arguments),
                    e ? g = i.length : c && (f = b,
                    k(c))
                }
                return this
            },
            remove: function() {
                return i && p.each(arguments, function(a, b) {
                    var c;
                    while ((c = p.inArray(b, i, c)) > -1)
                        i.splice(c, 1),
                        e && (c <= g && g--,
                        c <= h && h--)
                }),
                this
            },
            has: function(a) {
                return p.inArray(a, i) > -1
            },
            empty: function() {
                return i = [],
                this
            },
            disable: function() {
                return i = j = c = b,
                this
            },
            disabled: function() {
                return !i
            },
            lock: function() {
                return j = b,
                c || l.disable(),
                this
            },
            locked: function() {
                return !j
            },
            fireWith: function(a, b) {
                return b = b || [],
                b = [a, b.slice ? b.slice() : b],
                i && (!d || j) && (e ? j.push(b) : k(b)),
                this
            },
            fire: function() {
                return l.fireWith(this, arguments),
                this
            },
            fired: function() {
                return !!d
            }
        };
        return l
    }
    ,
    p.extend({
        Deferred: function(a) {
            var b = [["resolve", "done", p.Callbacks("once memory"), "resolved"], ["reject", "fail", p.Callbacks("once memory"), "rejected"], ["notify", "progress", p.Callbacks("memory")]]
              , c = "pending"
              , d = {
                state: function() {
                    return c
                },
                always: function() {
                    return e.done(arguments).fail(arguments),
                    this
                },
                then: function() {
                    var a = arguments;
                    return p.Deferred(function(c) {
                        p.each(b, function(b, d) {
                            var f = d[0]
                              , g = a[b];
                            e[d[1]](p.isFunction(g) ? function() {
                                var a = g.apply(this, arguments);
                                a && p.isFunction(a.promise) ? a.promise().done(c.resolve).fail(c.reject).progress(c.notify) : c[f + "With"](this === e ? c : this, [a])
                            }
                            : c[f])
                        }),
                        a = null
                    }).promise()
                },
                promise: function(a) {
                    return a != null ? p.extend(a, d) : d
                }
            }
              , e = {};
            return d.pipe = d.then,
            p.each(b, function(a, f) {
                var g = f[2]
                  , h = f[3];
                d[f[1]] = g.add,
                h && g.add(function() {
                    c = h
                }, b[a ^ 1][2].disable, b[2][2].lock),
                e[f[0]] = g.fire,
                e[f[0] + "With"] = g.fireWith
            }),
            d.promise(e),
            a && a.call(e, e),
            e
        },
        when: function(a) {
            var b = 0, c = k.call(arguments), d = c.length, e = d !== 1 || a && p.isFunction(a.promise) ? d : 0, f = e === 1 ? a : p.Deferred(), g = function(a, b, c) {
                return function(d) {
                    b[a] = this,
                    c[a] = arguments.length > 1 ? k.call(arguments) : d,
                    c === h ? f.notifyWith(b, c) : --e || f.resolveWith(b, c)
                }
            }, h, i, j;
            if (d > 1) {
                h = new Array(d),
                i = new Array(d),
                j = new Array(d);
                for (; b < d; b++)
                    c[b] && p.isFunction(c[b].promise) ? c[b].promise().done(g(b, j, c)).fail(f.reject).progress(g(b, i, h)) : --e
            }
            return e || f.resolveWith(j, c),
            f.promise()
        }
    }),
    p.support = function() {
        var b, c, d, f, g, h, i, j, k, l, m, n = e.createElement("div");
        n.setAttribute("className", "t"),
        n.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",
        c = n.getElementsByTagName("*"),
        d = n.getElementsByTagName("a")[0],
        d.style.cssText = "top:1px;float:left;opacity:.5";
        if (!c || !c.length)
            return {};
        f = e.createElement("select"),
        g = f.appendChild(e.createElement("option")),
        h = n.getElementsByTagName("input")[0],
        b = {
            leadingWhitespace: n.firstChild.nodeType === 3,
            tbody: !n.getElementsByTagName("tbody").length,
            htmlSerialize: !!n.getElementsByTagName("link").length,
            style: /top/.test(d.getAttribute("style")),
            hrefNormalized: d.getAttribute("href") === "/a",
            opacity: /^0.5/.test(d.style.opacity),
            cssFloat: !!d.style.cssFloat,
            checkOn: h.value === "on",
            optSelected: g.selected,
            getSetAttribute: n.className !== "t",
            enctype: !!e.createElement("form").enctype,
            html5Clone: e.createElement("nav").cloneNode(!0).outerHTML !== "<:nav></:nav>",
            boxModel: e.compatMode === "CSS1Compat",
            submitBubbles: !0,
            changeBubbles: !0,
            focusinBubbles: !1,
            deleteExpando: !0,
            noCloneEvent: !0,
            inlineBlockNeedsLayout: !1,
            shrinkWrapBlocks: !1,
            reliableMarginRight: !0,
            boxSizingReliable: !0,
            pixelPosition: !1
        },
        h.checked = !0,
        b.noCloneChecked = h.cloneNode(!0).checked,
        f.disabled = !0,
        b.optDisabled = !g.disabled;
        try {
            delete n.test
        } catch (o) {
            b.deleteExpando = !1
        }
        !n.addEventListener && n.attachEvent && n.fireEvent && (n.attachEvent("onclick", m = function() {
            b.noCloneEvent = !1
        }
        ),
        n.cloneNode(!0).fireEvent("onclick"),
        n.detachEvent("onclick", m)),
        h = e.createElement("input"),
        h.value = "t",
        h.setAttribute("type", "radio"),
        b.radioValue = h.value === "t",
        h.setAttribute("checked", "checked"),
        h.setAttribute("name", "t"),
        n.appendChild(h),
        i = e.createDocumentFragment(),
        i.appendChild(n.lastChild),
        b.checkClone = i.cloneNode(!0).cloneNode(!0).lastChild.checked,
        b.appendChecked = h.checked,
        i.removeChild(h),
        i.appendChild(n);
        if (n.attachEvent)
            for (k in {
                submit: !0,
                change: !0,
                focusin: !0
            })
                j = "on" + k,
                l = j in n,
                l || (n.setAttribute(j, "return;"),
                l = typeof n[j] == "function"),
                b[k + "Bubbles"] = l;
        return p(function() {
            var c, d, f, g, h = "padding:0;margin:0;border:0;display:block;overflow:hidden;", i = e.getElementsByTagName("body")[0];
            if (!i)
                return;
            c = e.createElement("div"),
            c.style.cssText = "visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px",
            i.insertBefore(c, i.firstChild),
            d = e.createElement("div"),
            c.appendChild(d),
            d.innerHTML = "<table><tr><td></td><td>t</td></tr></table>",
            f = d.getElementsByTagName("td"),
            f[0].style.cssText = "padding:0;margin:0;border:0;display:none",
            l = f[0].offsetHeight === 0,
            f[0].style.display = "",
            f[1].style.display = "none",
            b.reliableHiddenOffsets = l && f[0].offsetHeight === 0,
            d.innerHTML = "",
            d.style.cssText = "box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;",
            b.boxSizing = d.offsetWidth === 4,
            b.doesNotIncludeMarginInBodyOffset = i.offsetTop !== 1,
            a.getComputedStyle && (b.pixelPosition = (a.getComputedStyle(d, null) || {}).top !== "1%",
            b.boxSizingReliable = (a.getComputedStyle(d, null) || {
                width: "4px"
            }).width === "4px",
            g = e.createElement("div"),
            g.style.cssText = d.style.cssText = h,
            g.style.marginRight = g.style.width = "0",
            d.style.width = "1px",
            d.appendChild(g),
            b.reliableMarginRight = !parseFloat((a.getComputedStyle(g, null) || {}).marginRight)),
            typeof d.style.zoom != "undefined" && (d.innerHTML = "",
            d.style.cssText = h + "width:1px;padding:1px;display:inline;zoom:1",
            b.inlineBlockNeedsLayout = d.offsetWidth === 3,
            d.style.display = "block",
            d.style.overflow = "visible",
            d.innerHTML = "<div></div>",
            d.firstChild.style.width = "5px",
            b.shrinkWrapBlocks = d.offsetWidth !== 3,
            c.style.zoom = 1),
            i.removeChild(c),
            c = d = f = g = null
        }),
        i.removeChild(n),
        c = d = f = g = h = i = n = null,
        b
    }();
    var H = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/
      , I = /([A-Z])/g;
    p.extend({
        cache: {},
        deletedIds: [],
        uuid: 0,
        expando: "jQuery" + (p.fn.jquery + Math.random()).replace(/\D/g, ""),
        noData: {
            embed: !0,
            object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
            applet: !0
        },
        hasData: function(a) {
            return a = a.nodeType ? p.cache[a[p.expando]] : a[p.expando],
            !!a && !K(a)
        },
        data: function(a, c, d, e) {
            if (!p.acceptData(a))
                return;
            var f, g, h = p.expando, i = typeof c == "string", j = a.nodeType, k = j ? p.cache : a, l = j ? a[h] : a[h] && h;
            if ((!l || !k[l] || !e && !k[l].data) && i && d === b)
                return;
            l || (j ? a[h] = l = p.deletedIds.pop() || p.guid++ : l = h),
            k[l] || (k[l] = {},
            j || (k[l].toJSON = p.noop));
            if (typeof c == "object" || typeof c == "function")
                e ? k[l] = p.extend(k[l], c) : k[l].data = p.extend(k[l].data, c);
            return f = k[l],
            e || (f.data || (f.data = {}),
            f = f.data),
            d !== b && (f[p.camelCase(c)] = d),
            i ? (g = f[c],
            g == null && (g = f[p.camelCase(c)])) : g = f,
            g
        },
        removeData: function(a, b, c) {
            if (!p.acceptData(a))
                return;
            var d, e, f, g = a.nodeType, h = g ? p.cache : a, i = g ? a[p.expando] : p.expando;
            if (!h[i])
                return;
            if (b) {
                d = c ? h[i] : h[i].data;
                if (d) {
                    p.isArray(b) || (b in d ? b = [b] : (b = p.camelCase(b),
                    b in d ? b = [b] : b = b.split(" ")));
                    for (e = 0,
                    f = b.length; e < f; e++)
                        delete d[b[e]];
                    if (!(c ? K : p.isEmptyObject)(d))
                        return
                }
            }
            if (!c) {
                delete h[i].data;
                if (!K(h[i]))
                    return
            }
            g ? p.cleanData([a], !0) : p.support.deleteExpando || h != h.window ? delete h[i] : h[i] = null
        },
        _data: function(a, b, c) {
            return p.data(a, b, c, !0)
        },
        acceptData: function(a) {
            var b = a.nodeName && p.noData[a.nodeName.toLowerCase()];
            return !b || b !== !0 && a.getAttribute("classid") === b
        }
    }),
    p.fn.extend({
        data: function(a, c) {
            var d, e, f, g, h, i = this[0], j = 0, k = null;
            if (a === b) {
                if (this.length) {
                    k = p.data(i);
                    if (i.nodeType === 1 && !p._data(i, "parsedAttrs")) {
                        f = i.attributes;
                        for (h = f.length; j < h; j++)
                            g = f[j].name,
                            g.indexOf("data-") || (g = p.camelCase(g.substring(5)),
                            J(i, g, k[g]));
                        p._data(i, "parsedAttrs", !0)
                    }
                }
                return k
            }
            return typeof a == "object" ? this.each(function() {
                p.data(this, a)
            }) : (d = a.split(".", 2),
            d[1] = d[1] ? "." + d[1] : "",
            e = d[1] + "!",
            p.access(this, function(c) {
                if (c === b)
                    return k = this.triggerHandler("getData" + e, [d[0]]),
                    k === b && i && (k = p.data(i, a),
                    k = J(i, a, k)),
                    k === b && d[1] ? this.data(d[0]) : k;
                d[1] = c,
                this.each(function() {
                    var b = p(this);
                    b.triggerHandler("setData" + e, d),
                    p.data(this, a, c),
                    b.triggerHandler("changeData" + e, d)
                })
            }, null, c, arguments.length > 1, null, !1))
        },
        removeData: function(a) {
            return this.each(function() {
                p.removeData(this, a)
            })
        }
    }),
    p.extend({
        queue: function(a, b, c) {
            var d;
            if (a)
                return b = (b || "fx") + "queue",
                d = p._data(a, b),
                c && (!d || p.isArray(c) ? d = p._data(a, b, p.makeArray(c)) : d.push(c)),
                d || []
        },
        dequeue: function(a, b) {
            b = b || "fx";
            var c = p.queue(a, b)
              , d = c.length
              , e = c.shift()
              , f = p._queueHooks(a, b)
              , g = function() {
                p.dequeue(a, b)
            };
            e === "inprogress" && (e = c.shift(),
            d--),
            e && (b === "fx" && c.unshift("inprogress"),
            delete f.stop,
            e.call(a, g, f)),
            !d && f && f.empty.fire()
        },
        _queueHooks: function(a, b) {
            var c = b + "queueHooks";
            return p._data(a, c) || p._data(a, c, {
                empty: p.Callbacks("once memory").add(function() {
                    p.removeData(a, b + "queue", !0),
                    p.removeData(a, c, !0)
                })
            })
        }
    }),
    p.fn.extend({
        queue: function(a, c) {
            var d = 2;
            return typeof a != "string" && (c = a,
            a = "fx",
            d--),
            arguments.length < d ? p.queue(this[0], a) : c === b ? this : this.each(function() {
                var b = p.queue(this, a, c);
                p._queueHooks(this, a),
                a === "fx" && b[0] !== "inprogress" && p.dequeue(this, a)
            })
        },
        dequeue: function(a) {
            return this.each(function() {
                p.dequeue(this, a)
            })
        },
        delay: function(a, b) {
            return a = p.fx ? p.fx.speeds[a] || a : a,
            b = b || "fx",
            this.queue(b, function(b, c) {
                var d = setTimeout(b, a);
                c.stop = function() {
                    clearTimeout(d)
                }
            })
        },
        clearQueue: function(a) {
            return this.queue(a || "fx", [])
        },
        promise: function(a, c) {
            var d, e = 1, f = p.Deferred(), g = this, h = this.length, i = function() {
                --e || f.resolveWith(g, [g])
            };
            typeof a != "string" && (c = a,
            a = b),
            a = a || "fx";
            while (h--)
                d = p._data(g[h], a + "queueHooks"),
                d && d.empty && (e++,
                d.empty.add(i));
            return i(),
            f.promise(c)
        }
    });
    var L, M, N, O = /[\t\r\n]/g, P = /\r/g, Q = /^(?:button|input)$/i, R = /^(?:button|input|object|select|textarea)$/i, S = /^a(?:rea|)$/i, T = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i, U = p.support.getSetAttribute;
    p.fn.extend({
        attr: function(a, b) {
            return p.access(this, p.attr, a, b, arguments.length > 1)
        },
        removeAttr: function(a) {
            return this.each(function() {
                p.removeAttr(this, a)
            })
        },
        prop: function(a, b) {
            return p.access(this, p.prop, a, b, arguments.length > 1)
        },
        removeProp: function(a) {
            return a = p.propFix[a] || a,
            this.each(function() {
                try {
                    this[a] = b,
                    delete this[a]
                } catch (c) {}
            })
        },
        addClass: function(a) {
            var b, c, d, e, f, g, h;
            if (p.isFunction(a))
                return this.each(function(b) {
                    p(this).addClass(a.call(this, b, this.className))
                });
            if (a && typeof a == "string") {
                b = a.split(s);
                for (c = 0,
                d = this.length; c < d; c++) {
                    e = this[c];
                    if (e.nodeType === 1)
                        if (!e.className && b.length === 1)
                            e.className = a;
                        else {
                            f = " " + e.className + " ";
                            for (g = 0,
                            h = b.length; g < h; g++)
                                f.indexOf(" " + b[g] + " ") < 0 && (f += b[g] + " ");
                            e.className = p.trim(f)
                        }
                }
            }
            return this
        },
        removeClass: function(a) {
            var c, d, e, f, g, h, i;
            if (p.isFunction(a))
                return this.each(function(b) {
                    p(this).removeClass(a.call(this, b, this.className))
                });
            if (a && typeof a == "string" || a === b) {
                c = (a || "").split(s);
                for (h = 0,
                i = this.length; h < i; h++) {
                    e = this[h];
                    if (e.nodeType === 1 && e.className) {
                        d = (" " + e.className + " ").replace(O, " ");
                        for (f = 0,
                        g = c.length; f < g; f++)
                            while (d.indexOf(" " + c[f] + " ") >= 0)
                                d = d.replace(" " + c[f] + " ", " ");
                        e.className = a ? p.trim(d) : ""
                    }
                }
            }
            return this
        },
        toggleClass: function(a, b) {
            var c = typeof a
              , d = typeof b == "boolean";
            return p.isFunction(a) ? this.each(function(c) {
                p(this).toggleClass(a.call(this, c, this.className, b), b)
            }) : this.each(function() {
                if (c === "string") {
                    var e, f = 0, g = p(this), h = b, i = a.split(s);
                    while (e = i[f++])
                        h = d ? h : !g.hasClass(e),
                        g[h ? "addClass" : "removeClass"](e)
                } else if (c === "undefined" || c === "boolean")
                    this.className && p._data(this, "__className__", this.className),
                    this.className = this.className || a === !1 ? "" : p._data(this, "__className__") || ""
            })
        },
        hasClass: function(a) {
            var b = " " + a + " "
              , c = 0
              , d = this.length;
            for (; c < d; c++)
                if (this[c].nodeType === 1 && (" " + this[c].className + " ").replace(O, " ").indexOf(b) >= 0)
                    return !0;
            return !1
        },
        val: function(a) {
            var c, d, e, f = this[0];
            if (!arguments.length) {
                if (f)
                    return c = p.valHooks[f.type] || p.valHooks[f.nodeName.toLowerCase()],
                    c && "get"in c && (d = c.get(f, "value")) !== b ? d : (d = f.value,
                    typeof d == "string" ? d.replace(P, "") : d == null ? "" : d);
                return
            }
            return e = p.isFunction(a),
            this.each(function(d) {
                var f, g = p(this);
                if (this.nodeType !== 1)
                    return;
                e ? f = a.call(this, d, g.val()) : f = a,
                f == null ? f = "" : typeof f == "number" ? f += "" : p.isArray(f) && (f = p.map(f, function(a) {
                    return a == null ? "" : a + ""
                })),
                c = p.valHooks[this.type] || p.valHooks[this.nodeName.toLowerCase()];
                if (!c || !("set"in c) || c.set(this, f, "value") === b)
                    this.value = f
            })
        }
    }),
    p.extend({
        valHooks: {
            option: {
                get: function(a) {
                    var b = a.attributes.value;
                    return !b || b.specified ? a.value : a.text
                }
            },
            select: {
                get: function(a) {
                    var b, c, d, e, f = a.selectedIndex, g = [], h = a.options, i = a.type === "select-one";
                    if (f < 0)
                        return null;
                    c = i ? f : 0,
                    d = i ? f + 1 : h.length;
                    for (; c < d; c++) {
                        e = h[c];
                        if (e.selected && (p.support.optDisabled ? !e.disabled : e.getAttribute("disabled") === null) && (!e.parentNode.disabled || !p.nodeName(e.parentNode, "optgroup"))) {
                            b = p(e).val();
                            if (i)
                                return b;
                            g.push(b)
                        }
                    }
                    return i && !g.length && h.length ? p(h[f]).val() : g
                },
                set: function(a, b) {
                    var c = p.makeArray(b);
                    return p(a).find("option").each(function() {
                        this.selected = p.inArray(p(this).val(), c) >= 0
                    }),
                    c.length || (a.selectedIndex = -1),
                    c
                }
            }
        },
        attrFn: {},
        attr: function(a, c, d, e) {
            var f, g, h, i = a.nodeType;
            if (!a || i === 3 || i === 8 || i === 2)
                return;
            if (e && p.isFunction(p.fn[c]))
                return p(a)[c](d);
            if (typeof a.getAttribute == "undefined")
                return p.prop(a, c, d);
            h = i !== 1 || !p.isXMLDoc(a),
            h && (c = c.toLowerCase(),
            g = p.attrHooks[c] || (T.test(c) ? M : L));
            if (d !== b) {
                if (d === null) {
                    p.removeAttr(a, c);
                    return
                }
                return g && "set"in g && h && (f = g.set(a, d, c)) !== b ? f : (a.setAttribute(c, d + ""),
                d)
            }
            return g && "get"in g && h && (f = g.get(a, c)) !== null ? f : (f = a.getAttribute(c),
            f === null ? b : f)
        },
        removeAttr: function(a, b) {
            var c, d, e, f, g = 0;
            if (b && a.nodeType === 1) {
                d = b.split(s);
                for (; g < d.length; g++)
                    e = d[g],
                    e && (c = p.propFix[e] || e,
                    f = T.test(e),
                    f || p.attr(a, e, ""),
                    a.removeAttribute(U ? e : c),
                    f && c in a && (a[c] = !1))
            }
        },
        attrHooks: {
            type: {
                set: function(a, b) {
                    if (Q.test(a.nodeName) && a.parentNode)
                        p.error("type property can't be changed");
                    else if (!p.support.radioValue && b === "radio" && p.nodeName(a, "input")) {
                        var c = a.value;
                        return a.setAttribute("type", b),
                        c && (a.value = c),
                        b
                    }
                }
            },
            value: {
                get: function(a, b) {
                    return L && p.nodeName(a, "button") ? L.get(a, b) : b in a ? a.value : null
                },
                set: function(a, b, c) {
                    if (L && p.nodeName(a, "button"))
                        return L.set(a, b, c);
                    a.value = b
                }
            }
        },
        propFix: {
            tabindex: "tabIndex",
            readonly: "readOnly",
            "for": "htmlFor",
            "class": "className",
            maxlength: "maxLength",
            cellspacing: "cellSpacing",
            cellpadding: "cellPadding",
            rowspan: "rowSpan",
            colspan: "colSpan",
            usemap: "useMap",
            frameborder: "frameBorder",
            contenteditable: "contentEditable"
        },
        prop: function(a, c, d) {
            var e, f, g, h = a.nodeType;
            if (!a || h === 3 || h === 8 || h === 2)
                return;
            return g = h !== 1 || !p.isXMLDoc(a),
            g && (c = p.propFix[c] || c,
            f = p.propHooks[c]),
            d !== b ? f && "set"in f && (e = f.set(a, d, c)) !== b ? e : a[c] = d : f && "get"in f && (e = f.get(a, c)) !== null ? e : a[c]
        },
        propHooks: {
            tabIndex: {
                get: function(a) {
                    var c = a.getAttributeNode("tabindex");
                    return c && c.specified ? parseInt(c.value, 10) : R.test(a.nodeName) || S.test(a.nodeName) && a.href ? 0 : b
                }
            }
        }
    }),
    M = {
        get: function(a, c) {
            var d, e = p.prop(a, c);
            return e === !0 || typeof e != "boolean" && (d = a.getAttributeNode(c)) && d.nodeValue !== !1 ? c.toLowerCase() : b
        },
        set: function(a, b, c) {
            var d;
            return b === !1 ? p.removeAttr(a, c) : (d = p.propFix[c] || c,
            d in a && (a[d] = !0),
            a.setAttribute(c, c.toLowerCase())),
            c
        }
    },
    U || (N = {
        name: !0,
        id: !0,
        coords: !0
    },
    L = p.valHooks.button = {
        get: function(a, c) {
            var d;
            return d = a.getAttributeNode(c),
            d && (N[c] ? d.value !== "" : d.specified) ? d.value : b
        },
        set: function(a, b, c) {
            var d = a.getAttributeNode(c);
            return d || (d = e.createAttribute(c),
            a.setAttributeNode(d)),
            d.value = b + ""
        }
    },
    p.each(["width", "height"], function(a, b) {
        p.attrHooks[b] = p.extend(p.attrHooks[b], {
            set: function(a, c) {
                if (c === "")
                    return a.setAttribute(b, "auto"),
                    c
            }
        })
    }),
    p.attrHooks.contenteditable = {
        get: L.get,
        set: function(a, b, c) {
            b === "" && (b = "false"),
            L.set(a, b, c)
        }
    }),
    p.support.hrefNormalized || p.each(["href", "src", "width", "height"], function(a, c) {
        p.attrHooks[c] = p.extend(p.attrHooks[c], {
            get: function(a) {
                var d = a.getAttribute(c, 2);
                return d === null ? b : d
            }
        })
    }),
    p.support.style || (p.attrHooks.style = {
        get: function(a) {
            return a.style.cssText.toLowerCase() || b
        },
        set: function(a, b) {
            return a.style.cssText = b + ""
        }
    }),
    p.support.optSelected || (p.propHooks.selected = p.extend(p.propHooks.selected, {
        get: function(a) {
            var b = a.parentNode;
            return b && (b.selectedIndex,
            b.parentNode && b.parentNode.selectedIndex),
            null
        }
    })),
    p.support.enctype || (p.propFix.enctype = "encoding"),
    p.support.checkOn || p.each(["radio", "checkbox"], function() {
        p.valHooks[this] = {
            get: function(a) {
                return a.getAttribute("value") === null ? "on" : a.value
            }
        }
    }),
    p.each(["radio", "checkbox"], function() {
        p.valHooks[this] = p.extend(p.valHooks[this], {
            set: function(a, b) {
                if (p.isArray(b))
                    return a.checked = p.inArray(p(a).val(), b) >= 0
            }
        })
    });
    var V = /^(?:textarea|input|select)$/i
      , W = /^([^\.]*|)(?:\.(.+)|)$/
      , X = /(?:^|\s)hover(\.\S+|)\b/
      , Y = /^key/
      , Z = /^(?:mouse|contextmenu)|click/
      , $ = /^(?:focusinfocus|focusoutblur)$/
      , _ = function(a) {
        return p.event.special.hover ? a : a.replace(X, "mouseenter$1 mouseleave$1")
    };
    p.event = {
        add: function(a, c, d, e, f) {
            var g, h, i, j, k, l, m, n, o, q, r;
            if (a.nodeType === 3 || a.nodeType === 8 || !c || !d || !(g = p._data(a)))
                return;
            d.handler && (o = d,
            d = o.handler,
            f = o.selector),
            d.guid || (d.guid = p.guid++),
            i = g.events,
            i || (g.events = i = {}),
            h = g.handle,
            h || (g.handle = h = function(a) {
                return typeof p != "undefined" && (!a || p.event.triggered !== a.type) ? p.event.dispatch.apply(h.elem, arguments) : b
            }
            ,
            h.elem = a),
            c = p.trim(_(c)).split(" ");
            for (j = 0; j < c.length; j++) {
                k = W.exec(c[j]) || [],
                l = k[1],
                m = (k[2] || "").split(".").sort(),
                r = p.event.special[l] || {},
                l = (f ? r.delegateType : r.bindType) || l,
                r = p.event.special[l] || {},
                n = p.extend({
                    type: l,
                    origType: k[1],
                    data: e,
                    handler: d,
                    guid: d.guid,
                    selector: f,
                    needsContext: f && p.expr.match.needsContext.test(f),
                    namespace: m.join(".")
                }, o),
                q = i[l];
                if (!q) {
                    q = i[l] = [],
                    q.delegateCount = 0;
                    if (!r.setup || r.setup.call(a, e, m, h) === !1)
                        a.addEventListener ? a.addEventListener(l, h, !1) : a.attachEvent && a.attachEvent("on" + l, h)
                }
                r.add && (r.add.call(a, n),
                n.handler.guid || (n.handler.guid = d.guid)),
                f ? q.splice(q.delegateCount++, 0, n) : q.push(n),
                p.event.global[l] = !0
            }
            a = null
        },
        global: {},
        remove: function(a, b, c, d, e) {
            var f, g, h, i, j, k, l, m, n, o, q, r = p.hasData(a) && p._data(a);
            if (!r || !(m = r.events))
                return;
            b = p.trim(_(b || "")).split(" ");
            for (f = 0; f < b.length; f++) {
                g = W.exec(b[f]) || [],
                h = i = g[1],
                j = g[2];
                if (!h) {
                    for (h in m)
                        p.event.remove(a, h + b[f], c, d, !0);
                    continue
                }
                n = p.event.special[h] || {},
                h = (d ? n.delegateType : n.bindType) || h,
                o = m[h] || [],
                k = o.length,
                j = j ? new RegExp("(^|\\.)" + j.split(".").sort().join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
                for (l = 0; l < o.length; l++)
                    q = o[l],
                    (e || i === q.origType) && (!c || c.guid === q.guid) && (!j || j.test(q.namespace)) && (!d || d === q.selector || d === "**" && q.selector) && (o.splice(l--, 1),
                    q.selector && o.delegateCount--,
                    n.remove && n.remove.call(a, q));
                o.length === 0 && k !== o.length && ((!n.teardown || n.teardown.call(a, j, r.handle) === !1) && p.removeEvent(a, h, r.handle),
                delete m[h])
            }
            p.isEmptyObject(m) && (delete r.handle,
            p.removeData(a, "events", !0))
        },
        customEvent: {
            getData: !0,
            setData: !0,
            changeData: !0
        },
        trigger: function(c, d, f, g) {
            if (!f || f.nodeType !== 3 && f.nodeType !== 8) {
                var h, i, j, k, l, m, n, o, q, r, s = c.type || c, t = [];
                if ($.test(s + p.event.triggered))
                    return;
                s.indexOf("!") >= 0 && (s = s.slice(0, -1),
                i = !0),
                s.indexOf(".") >= 0 && (t = s.split("."),
                s = t.shift(),
                t.sort());
                if ((!f || p.event.customEvent[s]) && !p.event.global[s])
                    return;
                c = typeof c == "object" ? c[p.expando] ? c : new p.Event(s,c) : new p.Event(s),
                c.type = s,
                c.isTrigger = !0,
                c.exclusive = i,
                c.namespace = t.join("."),
                c.namespace_re = c.namespace ? new RegExp("(^|\\.)" + t.join("\\.(?:.*\\.|)") + "(\\.|$)") : null,
                m = s.indexOf(":") < 0 ? "on" + s : "";
                if (!f) {
                    h = p.cache;
                    for (j in h)
                        h[j].events && h[j].events[s] && p.event.trigger(c, d, h[j].handle.elem, !0);
                    return
                }
                c.result = b,
                c.target || (c.target = f),
                d = d != null ? p.makeArray(d) : [],
                d.unshift(c),
                n = p.event.special[s] || {};
                if (n.trigger && n.trigger.apply(f, d) === !1)
                    return;
                q = [[f, n.bindType || s]];
                if (!g && !n.noBubble && !p.isWindow(f)) {
                    r = n.delegateType || s,
                    k = $.test(r + s) ? f : f.parentNode;
                    for (l = f; k; k = k.parentNode)
                        q.push([k, r]),
                        l = k;
                    l === (f.ownerDocument || e) && q.push([l.defaultView || l.parentWindow || a, r])
                }
                for (j = 0; j < q.length && !c.isPropagationStopped(); j++)
                    k = q[j][0],
                    c.type = q[j][1],
                    o = (p._data(k, "events") || {})[c.type] && p._data(k, "handle"),
                    o && o.apply(k, d),
                    o = m && k[m],
                    o && p.acceptData(k) && o.apply && o.apply(k, d) === !1 && c.preventDefault();
                return c.type = s,
                !g && !c.isDefaultPrevented() && (!n._default || n._default.apply(f.ownerDocument, d) === !1) && (s !== "click" || !p.nodeName(f, "a")) && p.acceptData(f) && m && f[s] && (s !== "focus" && s !== "blur" || c.target.offsetWidth !== 0) && !p.isWindow(f) && (l = f[m],
                l && (f[m] = null),
                p.event.triggered = s,
                f[s](),
                p.event.triggered = b,
                l && (f[m] = l)),
                c.result
            }
            return
        },
        dispatch: function(c) {
            c = p.event.fix(c || a.event);
            var d, e, f, g, h, i, j, l, m, n, o = (p._data(this, "events") || {})[c.type] || [], q = o.delegateCount, r = k.call(arguments), s = !c.exclusive && !c.namespace, t = p.event.special[c.type] || {}, u = [];
            r[0] = c,
            c.delegateTarget = this;
            if (t.preDispatch && t.preDispatch.call(this, c) === !1)
                return;
            if (q && (!c.button || c.type !== "click"))
                for (f = c.target; f != this; f = f.parentNode || this)
                    if (f.disabled !== !0 || c.type !== "click") {
                        h = {},
                        j = [];
                        for (d = 0; d < q; d++)
                            l = o[d],
                            m = l.selector,
                            h[m] === b && (h[m] = l.needsContext ? p(m, this).index(f) >= 0 : p.find(m, this, null, [f]).length),
                            h[m] && j.push(l);
                        j.length && u.push({
                            elem: f,
                            matches: j
                        })
                    }
            o.length > q && u.push({
                elem: this,
                matches: o.slice(q)
            });
            for (d = 0; d < u.length && !c.isPropagationStopped(); d++) {
                i = u[d],
                c.currentTarget = i.elem;
                for (e = 0; e < i.matches.length && !c.isImmediatePropagationStopped(); e++) {
                    l = i.matches[e];
                    if (s || !c.namespace && !l.namespace || c.namespace_re && c.namespace_re.test(l.namespace))
                        c.data = l.data,
                        c.handleObj = l,
                        g = ((p.event.special[l.origType] || {}).handle || l.handler).apply(i.elem, r),
                        g !== b && (c.result = g,
                        g === !1 && (c.preventDefault(),
                        c.stopPropagation()))
                }
            }
            return t.postDispatch && t.postDispatch.call(this, c),
            c.result
        },
        props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
            props: "char charCode key keyCode".split(" "),
            filter: function(a, b) {
                return a.which == null && (a.which = b.charCode != null ? b.charCode : b.keyCode),
                a
            }
        },
        mouseHooks: {
            props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
            filter: function(a, c) {
                var d, f, g, h = c.button, i = c.fromElement;
                return a.pageX == null && c.clientX != null && (d = a.target.ownerDocument || e,
                f = d.documentElement,
                g = d.body,
                a.pageX = c.clientX + (f && f.scrollLeft || g && g.scrollLeft || 0) - (f && f.clientLeft || g && g.clientLeft || 0),
                a.pageY = c.clientY + (f && f.scrollTop || g && g.scrollTop || 0) - (f && f.clientTop || g && g.clientTop || 0)),
                !a.relatedTarget && i && (a.relatedTarget = i === a.target ? c.toElement : i),
                !a.which && h !== b && (a.which = h & 1 ? 1 : h & 2 ? 3 : h & 4 ? 2 : 0),
                a
            }
        },
        fix: function(a) {
            if (a[p.expando])
                return a;
            var b, c, d = a, f = p.event.fixHooks[a.type] || {}, g = f.props ? this.props.concat(f.props) : this.props;
            a = p.Event(d);
            for (b = g.length; b; )
                c = g[--b],
                a[c] = d[c];
            return a.target || (a.target = d.srcElement || e),
            a.target.nodeType === 3 && (a.target = a.target.parentNode),
            a.metaKey = !!a.metaKey,
            f.filter ? f.filter(a, d) : a
        },
        special: {
            load: {
                noBubble: !0
            },
            focus: {
                delegateType: "focusin"
            },
            blur: {
                delegateType: "focusout"
            },
            beforeunload: {
                setup: function(a, b, c) {
                    p.isWindow(this) && (this.onbeforeunload = c)
                },
                teardown: function(a, b) {
                    this.onbeforeunload === b && (this.onbeforeunload = null)
                }
            }
        },
        simulate: function(a, b, c, d) {
            var e = p.extend(new p.Event, c, {
                type: a,
                isSimulated: !0,
                originalEvent: {}
            });
            d ? p.event.trigger(e, null, b) : p.event.dispatch.call(b, e),
            e.isDefaultPrevented() && c.preventDefault()
        }
    },
    p.event.handle = p.event.dispatch,
    p.removeEvent = e.removeEventListener ? function(a, b, c) {
        a.removeEventListener && a.removeEventListener(b, c, !1)
    }
    : function(a, b, c) {
        var d = "on" + b;
        a.detachEvent && (typeof a[d] == "undefined" && (a[d] = null),
        a.detachEvent(d, c))
    }
    ,
    p.Event = function(a, b) {
        if (this instanceof p.Event)
            a && a.type ? (this.originalEvent = a,
            this.type = a.type,
            this.isDefaultPrevented = a.defaultPrevented || a.returnValue === !1 || a.getPreventDefault && a.getPreventDefault() ? bb : ba) : this.type = a,
            b && p.extend(this, b),
            this.timeStamp = a && a.timeStamp || p.now(),
            this[p.expando] = !0;
        else
            return new p.Event(a,b)
    }
    ,
    p.Event.prototype = {
        preventDefault: function() {
            this.isDefaultPrevented = bb;
            var a = this.originalEvent;
            if (!a)
                return;
            a.preventDefault ? a.preventDefault() : a.returnValue = !1
        },
        stopPropagation: function() {
            this.isPropagationStopped = bb;
            var a = this.originalEvent;
            if (!a)
                return;
            a.stopPropagation && a.stopPropagation(),
            a.cancelBubble = !0
        },
        stopImmediatePropagation: function() {
            this.isImmediatePropagationStopped = bb,
            this.stopPropagation()
        },
        isDefaultPrevented: ba,
        isPropagationStopped: ba,
        isImmediatePropagationStopped: ba
    },
    p.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    }, function(a, b) {
        p.event.special[a] = {
            delegateType: b,
            bindType: b,
            handle: function(a) {
                var c, d = this, e = a.relatedTarget, f = a.handleObj, g = f.selector;
                if (!e || e !== d && !p.contains(d, e))
                    a.type = f.origType,
                    c = f.handler.apply(this, arguments),
                    a.type = b;
                return c
            }
        }
    }),
    p.support.submitBubbles || (p.event.special.submit = {
        setup: function() {
            if (p.nodeName(this, "form"))
                return !1;
            p.event.add(this, "click._submit keypress._submit", function(a) {
                var c = a.target
                  , d = p.nodeName(c, "input") || p.nodeName(c, "button") ? c.form : b;
                d && !p._data(d, "_submit_attached") && (p.event.add(d, "submit._submit", function(a) {
                    a._submit_bubble = !0
                }),
                p._data(d, "_submit_attached", !0))
            })
        },
        postDispatch: function(a) {
            a._submit_bubble && (delete a._submit_bubble,
            this.parentNode && !a.isTrigger && p.event.simulate("submit", this.parentNode, a, !0))
        },
        teardown: function() {
            if (p.nodeName(this, "form"))
                return !1;
            p.event.remove(this, "._submit")
        }
    }),
    p.support.changeBubbles || (p.event.special.change = {
        setup: function() {
            if (V.test(this.nodeName)) {
                if (this.type === "checkbox" || this.type === "radio")
                    p.event.add(this, "propertychange._change", function(a) {
                        a.originalEvent.propertyName === "checked" && (this._just_changed = !0)
                    }),
                    p.event.add(this, "click._change", function(a) {
                        this._just_changed && !a.isTrigger && (this._just_changed = !1),
                        p.event.simulate("change", this, a, !0)
                    });
                return !1
            }
            p.event.add(this, "beforeactivate._change", function(a) {
                var b = a.target;
                V.test(b.nodeName) && !p._data(b, "_change_attached") && (p.event.add(b, "change._change", function(a) {
                    this.parentNode && !a.isSimulated && !a.isTrigger && p.event.simulate("change", this.parentNode, a, !0)
                }),
                p._data(b, "_change_attached", !0))
            })
        },
        handle: function(a) {
            var b = a.target;
            if (this !== b || a.isSimulated || a.isTrigger || b.type !== "radio" && b.type !== "checkbox")
                return a.handleObj.handler.apply(this, arguments)
        },
        teardown: function() {
            return p.event.remove(this, "._change"),
            !V.test(this.nodeName)
        }
    }),
    p.support.focusinBubbles || p.each({
        focus: "focusin",
        blur: "focusout"
    }, function(a, b) {
        var c = 0
          , d = function(a) {
            p.event.simulate(b, a.target, p.event.fix(a), !0)
        };
        p.event.special[b] = {
            setup: function() {
                c++ === 0 && e.addEventListener(a, d, !0)
            },
            teardown: function() {
                --c === 0 && e.removeEventListener(a, d, !0)
            }
        }
    }),
    p.fn.extend({
        on: function(a, c, d, e, f) {
            var g, h;
            if (typeof a == "object") {
                typeof c != "string" && (d = d || c,
                c = b);
                for (h in a)
                    this.on(h, c, d, a[h], f);
                return this
            }
            d == null && e == null ? (e = c,
            d = c = b) : e == null && (typeof c == "string" ? (e = d,
            d = b) : (e = d,
            d = c,
            c = b));
            if (e === !1)
                e = ba;
            else if (!e)
                return this;
            return f === 1 && (g = e,
            e = function(a) {
                return p().off(a),
                g.apply(this, arguments)
            }
            ,
            e.guid = g.guid || (g.guid = p.guid++)),
            this.each(function() {
                p.event.add(this, a, e, d, c)
            })
        },
        one: function(a, b, c, d) {
            return this.on(a, b, c, d, 1)
        },
        off: function(a, c, d) {
            var e, f;
            if (a && a.preventDefault && a.handleObj)
                return e = a.handleObj,
                p(a.delegateTarget).off(e.namespace ? e.origType + "." + e.namespace : e.origType, e.selector, e.handler),
                this;
            if (typeof a == "object") {
                for (f in a)
                    this.off(f, c, a[f]);
                return this
            }
            if (c === !1 || typeof c == "function")
                d = c,
                c = b;
            return d === !1 && (d = ba),
            this.each(function() {
                p.event.remove(this, a, d, c)
            })
        },
        bind: function(a, b, c) {
            return this.on(a, null, b, c)
        },
        unbind: function(a, b) {
            return this.off(a, null, b)
        },
        live: function(a, b, c) {
            return p(this.context).on(a, this.selector, b, c),
            this
        },
        die: function(a, b) {
            return p(this.context).off(a, this.selector || "**", b),
            this
        },
        delegate: function(a, b, c, d) {
            return this.on(b, a, c, d)
        },
        undelegate: function(a, b, c) {
            return arguments.length === 1 ? this.off(a, "**") : this.off(b, a || "**", c)
        },
        trigger: function(a, b) {
            return this.each(function() {
                p.event.trigger(a, b, this)
            })
        },
        triggerHandler: function(a, b) {
            if (this[0])
                return p.event.trigger(a, b, this[0], !0)
        },
        toggle: function(a) {
            var b = arguments
              , c = a.guid || p.guid++
              , d = 0
              , e = function(c) {
                var e = (p._data(this, "lastToggle" + a.guid) || 0) % d;
                return p._data(this, "lastToggle" + a.guid, e + 1),
                c.preventDefault(),
                b[e].apply(this, arguments) || !1
            };
            e.guid = c;
            while (d < b.length)
                b[d++].guid = c;
            return this.click(e)
        },
        hover: function(a, b) {
            return this.mouseenter(a).mouseleave(b || a)
        }
    }),
    p.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function(a, b) {
        p.fn[b] = function(a, c) {
            return c == null && (c = a,
            a = null),
            arguments.length > 0 ? this.on(b, null, a, c) : this.trigger(b)
        }
        ,
        Y.test(b) && (p.event.fixHooks[b] = p.event.keyHooks),
        Z.test(b) && (p.event.fixHooks[b] = p.event.mouseHooks)
    }),
    function(a, b) {
        function bc(a, b, c, d) {
            c = c || [],
            b = b || r;
            var e, f, i, j, k = b.nodeType;
            if (!a || typeof a != "string")
                return c;
            if (k !== 1 && k !== 9)
                return [];
            i = g(b);
            if (!i && !d)
                if (e = P.exec(a))
                    if (j = e[1]) {
                        if (k === 9) {
                            f = b.getElementById(j);
                            if (!f || !f.parentNode)
                                return c;
                            if (f.id === j)
                                return c.push(f),
                                c
                        } else if (b.ownerDocument && (f = b.ownerDocument.getElementById(j)) && h(b, f) && f.id === j)
                            return c.push(f),
                            c
                    } else {
                        if (e[2])
                            return w.apply(c, x.call(b.getElementsByTagName(a), 0)),
                            c;
                        if ((j = e[3]) && _ && b.getElementsByClassName)
                            return w.apply(c, x.call(b.getElementsByClassName(j), 0)),
                            c
                    }
            return bp(a.replace(L, "$1"), b, c, d, i)
        }
        function bd(a) {
            return function(b) {
                var c = b.nodeName.toLowerCase();
                return c === "input" && b.type === a
            }
        }
        function be(a) {
            return function(b) {
                var c = b.nodeName.toLowerCase();
                return (c === "input" || c === "button") && b.type === a
            }
        }
        function bf(a) {
            return z(function(b) {
                return b = +b,
                z(function(c, d) {
                    var e, f = a([], c.length, b), g = f.length;
                    while (g--)
                        c[e = f[g]] && (c[e] = !(d[e] = c[e]))
                })
            })
        }
        function bg(a, b, c) {
            if (a === b)
                return c;
            var d = a.nextSibling;
            while (d) {
                if (d === b)
                    return -1;
                d = d.nextSibling
            }
            return 1
        }
        function bh(a, b) {
            var c, d, f, g, h, i, j, k = C[o][a];
            if (k)
                return b ? 0 : k.slice(0);
            h = a,
            i = [],
            j = e.preFilter;
            while (h) {
                if (!c || (d = M.exec(h)))
                    d && (h = h.slice(d[0].length)),
                    i.push(f = []);
                c = !1;
                if (d = N.exec(h))
                    f.push(c = new q(d.shift())),
                    h = h.slice(c.length),
                    c.type = d[0].replace(L, " ");
                for (g in e.filter)
                    (d = W[g].exec(h)) && (!j[g] || (d = j[g](d, r, !0))) && (f.push(c = new q(d.shift())),
                    h = h.slice(c.length),
                    c.type = g,
                    c.matches = d);
                if (!c)
                    break
            }
            return b ? h.length : h ? bc.error(a) : C(a, i).slice(0)
        }
        function bi(a, b, d) {
            var e = b.dir
              , f = d && b.dir === "parentNode"
              , g = u++;
            return b.first ? function(b, c, d) {
                while (b = b[e])
                    if (f || b.nodeType === 1)
                        return a(b, c, d)
            }
            : function(b, d, h) {
                if (!h) {
                    var i, j = t + " " + g + " ", k = j + c;
                    while (b = b[e])
                        if (f || b.nodeType === 1) {
                            if ((i = b[o]) === k)
                                return b.sizset;
                            if (typeof i == "string" && i.indexOf(j) === 0) {
                                if (b.sizset)
                                    return b
                            } else {
                                b[o] = k;
                                if (a(b, d, h))
                                    return b.sizset = !0,
                                    b;
                                b.sizset = !1
                            }
                        }
                } else
                    while (b = b[e])
                        if (f || b.nodeType === 1)
                            if (a(b, d, h))
                                return b
            }
        }
        function bj(a) {
            return a.length > 1 ? function(b, c, d) {
                var e = a.length;
                while (e--)
                    if (!a[e](b, c, d))
                        return !1;
                return !0
            }
            : a[0]
        }
        function bk(a, b, c, d, e) {
            var f, g = [], h = 0, i = a.length, j = b != null;
            for (; h < i; h++)
                if (f = a[h])
                    if (!c || c(f, d, e))
                        g.push(f),
                        j && b.push(h);
            return g
        }
        function bl(a, b, c, d, e, f) {
            return d && !d[o] && (d = bl(d)),
            e && !e[o] && (e = bl(e, f)),
            z(function(f, g, h, i) {
                if (f && e)
                    return;
                var j, k, l, m = [], n = [], o = g.length, p = f || bo(b || "*", h.nodeType ? [h] : h, [], f), q = a && (f || !b) ? bk(p, m, a, h, i) : p, r = c ? e || (f ? a : o || d) ? [] : g : q;
                c && c(q, r, h, i);
                if (d) {
                    l = bk(r, n),
                    d(l, [], h, i),
                    j = l.length;
                    while (j--)
                        if (k = l[j])
                            r[n[j]] = !(q[n[j]] = k)
                }
                if (f) {
                    j = a && r.length;
                    while (j--)
                        if (k = r[j])
                            f[m[j]] = !(g[m[j]] = k)
                } else
                    r = bk(r === g ? r.splice(o, r.length) : r),
                    e ? e(null, g, r, i) : w.apply(g, r)
            })
        }
        function bm(a) {
            var b, c, d, f = a.length, g = e.relative[a[0].type], h = g || e.relative[" "], i = g ? 1 : 0, j = bi(function(a) {
                return a === b
            }, h, !0), k = bi(function(a) {
                return y.call(b, a) > -1
            }, h, !0), m = [function(a, c, d) {
                return !g && (d || c !== l) || ((b = c).nodeType ? j(a, c, d) : k(a, c, d))
            }
            ];
            for (; i < f; i++)
                if (c = e.relative[a[i].type])
                    m = [bi(bj(m), c)];
                else {
                    c = e.filter[a[i].type].apply(null, a[i].matches);
                    if (c[o]) {
                        d = ++i;
                        for (; d < f; d++)
                            if (e.relative[a[d].type])
                                break;
                        return bl(i > 1 && bj(m), i > 1 && a.slice(0, i - 1).join("").replace(L, "$1"), c, i < d && bm(a.slice(i, d)), d < f && bm(a = a.slice(d)), d < f && a.join(""))
                    }
                    m.push(c)
                }
            return bj(m)
        }
        function bn(a, b) {
            var d = b.length > 0
              , f = a.length > 0
              , g = function(h, i, j, k, m) {
                var n, o, p, q = [], s = 0, u = "0", x = h && [], y = m != null, z = l, A = h || f && e.find.TAG("*", m && i.parentNode || i), B = t += z == null ? 1 : Math.E;
                y && (l = i !== r && i,
                c = g.el);
                for (; (n = A[u]) != null; u++) {
                    if (f && n) {
                        for (o = 0; p = a[o]; o++)
                            if (p(n, i, j)) {
                                k.push(n);
                                break
                            }
                        y && (t = B,
                        c = ++g.el)
                    }
                    d && ((n = !p && n) && s--,
                    h && x.push(n))
                }
                s += u;
                if (d && u !== s) {
                    for (o = 0; p = b[o]; o++)
                        p(x, q, i, j);
                    if (h) {
                        if (s > 0)
                            while (u--)
                                !x[u] && !q[u] && (q[u] = v.call(k));
                        q = bk(q)
                    }
                    w.apply(k, q),
                    y && !h && q.length > 0 && s + b.length > 1 && bc.uniqueSort(k)
                }
                return y && (t = B,
                l = z),
                x
            };
            return g.el = 0,
            d ? z(g) : g
        }
        function bo(a, b, c, d) {
            var e = 0
              , f = b.length;
            for (; e < f; e++)
                bc(a, b[e], c, d);
            return c
        }
        function bp(a, b, c, d, f) {
            var g, h, j, k, l, m = bh(a), n = m.length;
            if (!d && m.length === 1) {
                h = m[0] = m[0].slice(0);
                if (h.length > 2 && (j = h[0]).type === "ID" && b.nodeType === 9 && !f && e.relative[h[1].type]) {
                    b = e.find.ID(j.matches[0].replace(V, ""), b, f)[0];
                    if (!b)
                        return c;
                    a = a.slice(h.shift().length)
                }
                for (g = W.POS.test(a) ? -1 : h.length - 1; g >= 0; g--) {
                    j = h[g];
                    if (e.relative[k = j.type])
                        break;
                    if (l = e.find[k])
                        if (d = l(j.matches[0].replace(V, ""), R.test(h[0].type) && b.parentNode || b, f)) {
                            h.splice(g, 1),
                            a = d.length && h.join("");
                            if (!a)
                                return w.apply(c, x.call(d, 0)),
                                c;
                            break
                        }
                }
            }
            return i(a, m)(d, b, f, c, R.test(a)),
            c
        }
        function bq() {}
        var c, d, e, f, g, h, i, j, k, l, m = !0, n = "undefined", o = ("sizcache" + Math.random()).replace(".", ""), q = String, r = a.document, s = r.documentElement, t = 0, u = 0, v = [].pop, w = [].push, x = [].slice, y = [].indexOf || function(a) {
            var b = 0
              , c = this.length;
            for (; b < c; b++)
                if (this[b] === a)
                    return b;
            return -1
        }
        , z = function(a, b) {
            return a[o] = b == null || b,
            a
        }, A = function() {
            var a = {}
              , b = [];
            return z(function(c, d) {
                return b.push(c) > e.cacheLength && delete a[b.shift()],
                a[c] = d
            }, a)
        }, B = A(), C = A(), D = A(), E = "[\\x20\\t\\r\\n\\f]", F = "(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+", G = F.replace("w", "w#"), H = "([*^$|!~]?=)", I = "\\[" + E + "*(" + F + ")" + E + "*(?:" + H + E + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + G + ")|)|)" + E + "*\\]", J = ":(" + F + ")(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:" + I + ")|[^:]|\\\\.)*|.*))\\)|)", K = ":(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + E + "*((?:-\\d)?\\d*)" + E + "*\\)|)(?=[^-]|$)", L = new RegExp("^" + E + "+|((?:^|[^\\\\])(?:\\\\.)*)" + E + "+$","g"), M = new RegExp("^" + E + "*," + E + "*"), N = new RegExp("^" + E + "*([\\x20\\t\\r\\n\\f>+~])" + E + "*"), O = new RegExp(J), P = /^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/, Q = /^:not/, R = /[\x20\t\r\n\f]*[+~]/, S = /:not\($/, T = /h\d/i, U = /input|select|textarea|button/i, V = /\\(?!\\)/g, W = {
            ID: new RegExp("^#(" + F + ")"),
            CLASS: new RegExp("^\\.(" + F + ")"),
            NAME: new RegExp("^\\[name=['\"]?(" + F + ")['\"]?\\]"),
            TAG: new RegExp("^(" + F.replace("w", "w*") + ")"),
            ATTR: new RegExp("^" + I),
            PSEUDO: new RegExp("^" + J),
            POS: new RegExp(K,"i"),
            CHILD: new RegExp("^:(only|nth|first|last)-child(?:\\(" + E + "*(even|odd|(([+-]|)(\\d*)n|)" + E + "*(?:([+-]|)" + E + "*(\\d+)|))" + E + "*\\)|)","i"),
            needsContext: new RegExp("^" + E + "*[>+~]|" + K,"i")
        }, X = function(a) {
            var b = r.createElement("div");
            try {
                return a(b)
            } catch (c) {
                return !1
            } finally {
                b = null
            }
        }, Y = X(function(a) {
            return a.appendChild(r.createComment("")),
            !a.getElementsByTagName("*").length
        }), Z = X(function(a) {
            return a.innerHTML = "<a href='#'></a>",
            a.firstChild && typeof a.firstChild.getAttribute !== n && a.firstChild.getAttribute("href") === "#"
        }), $ = X(function(a) {
            a.innerHTML = "<select></select>";
            var b = typeof a.lastChild.getAttribute("multiple");
            return b !== "boolean" && b !== "string"
        }), _ = X(function(a) {
            return a.innerHTML = "<div class='hidden e'></div><div class='hidden'></div>",
            !a.getElementsByClassName || !a.getElementsByClassName("e").length ? !1 : (a.lastChild.className = "e",
            a.getElementsByClassName("e").length === 2)
        }), ba = X(function(a) {
            a.id = o + 0,
            a.innerHTML = "<a name='" + o + "'></a><div name='" + o + "'></div>",
            s.insertBefore(a, s.firstChild);
            var b = r.getElementsByName && r.getElementsByName(o).length === 2 + r.getElementsByName(o + 0).length;
            return d = !r.getElementById(o),
            s.removeChild(a),
            b
        });
        try {
            x.call(s.childNodes, 0)[0].nodeType
        } catch (bb) {
            x = function(a) {
                var b, c = [];
                for (; b = this[a]; a++)
                    c.push(b);
                return c
            }
        }
        bc.matches = function(a, b) {
            return bc(a, null, null, b)
        }
        ,
        bc.matchesSelector = function(a, b) {
            return bc(b, null, null, [a]).length > 0
        }
        ,
        f = bc.getText = function(a) {
            var b, c = "", d = 0, e = a.nodeType;
            if (e) {
                if (e === 1 || e === 9 || e === 11) {
                    if (typeof a.textContent == "string")
                        return a.textContent;
                    for (a = a.firstChild; a; a = a.nextSibling)
                        c += f(a)
                } else if (e === 3 || e === 4)
                    return a.nodeValue
            } else
                for (; b = a[d]; d++)
                    c += f(b);
            return c
        }
        ,
        g = bc.isXML = function(a) {
            var b = a && (a.ownerDocument || a).documentElement;
            return b ? b.nodeName !== "HTML" : !1
        }
        ,
        h = bc.contains = s.contains ? function(a, b) {
            var c = a.nodeType === 9 ? a.documentElement : a
              , d = b && b.parentNode;
            return a === d || !!(d && d.nodeType === 1 && c.contains && c.contains(d))
        }
        : s.compareDocumentPosition ? function(a, b) {
            return b && !!(a.compareDocumentPosition(b) & 16)
        }
        : function(a, b) {
            while (b = b.parentNode)
                if (b === a)
                    return !0;
            return !1
        }
        ,
        bc.attr = function(a, b) {
            var c, d = g(a);
            return d || (b = b.toLowerCase()),
            (c = e.attrHandle[b]) ? c(a) : d || $ ? a.getAttribute(b) : (c = a.getAttributeNode(b),
            c ? typeof a[b] == "boolean" ? a[b] ? b : null : c.specified ? c.value : null : null)
        }
        ,
        e = bc.selectors = {
            cacheLength: 50,
            createPseudo: z,
            match: W,
            attrHandle: Z ? {} : {
                href: function(a) {
                    return a.getAttribute("href", 2)
                },
                type: function(a) {
                    return a.getAttribute("type")
                }
            },
            find: {
                ID: d ? function(a, b, c) {
                    if (typeof b.getElementById !== n && !c) {
                        var d = b.getElementById(a);
                        return d && d.parentNode ? [d] : []
                    }
                }
                : function(a, c, d) {
                    if (typeof c.getElementById !== n && !d) {
                        var e = c.getElementById(a);
                        return e ? e.id === a || typeof e.getAttributeNode !== n && e.getAttributeNode("id").value === a ? [e] : b : []
                    }
                }
                ,
                TAG: Y ? function(a, b) {
                    if (typeof b.getElementsByTagName !== n)
                        return b.getElementsByTagName(a)
                }
                : function(a, b) {
                    var c = b.getElementsByTagName(a);
                    if (a === "*") {
                        var d, e = [], f = 0;
                        for (; d = c[f]; f++)
                            d.nodeType === 1 && e.push(d);
                        return e
                    }
                    return c
                }
                ,
                NAME: ba && function(a, b) {
                    if (typeof b.getElementsByName !== n)
                        return b.getElementsByName(name)
                }
                ,
                CLASS: _ && function(a, b, c) {
                    if (typeof b.getElementsByClassName !== n && !c)
                        return b.getElementsByClassName(a)
                }
            },
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(a) {
                    return a[1] = a[1].replace(V, ""),
                    a[3] = (a[4] || a[5] || "").replace(V, ""),
                    a[2] === "~=" && (a[3] = " " + a[3] + " "),
                    a.slice(0, 4)
                },
                CHILD: function(a) {
                    return a[1] = a[1].toLowerCase(),
                    a[1] === "nth" ? (a[2] || bc.error(a[0]),
                    a[3] = +(a[3] ? a[4] + (a[5] || 1) : 2 * (a[2] === "even" || a[2] === "odd")),
                    a[4] = +(a[6] + a[7] || a[2] === "odd")) : a[2] && bc.error(a[0]),
                    a
                },
                PSEUDO: function(a) {
                    var b, c;
                    if (W.CHILD.test(a[0]))
                        return null;
                    if (a[3])
                        a[2] = a[3];
                    else if (b = a[4])
                        O.test(b) && (c = bh(b, !0)) && (c = b.indexOf(")", b.length - c) - b.length) && (b = b.slice(0, c),
                        a[0] = a[0].slice(0, c)),
                        a[2] = b;
                    return a.slice(0, 3)
                }
            },
            filter: {
                ID: d ? function(a) {
                    return a = a.replace(V, ""),
                    function(b) {
                        return b.getAttribute("id") === a
                    }
                }
                : function(a) {
                    return a = a.replace(V, ""),
                    function(b) {
                        var c = typeof b.getAttributeNode !== n && b.getAttributeNode("id");
                        return c && c.value === a
                    }
                }
                ,
                TAG: function(a) {
                    return a === "*" ? function() {
                        return !0
                    }
                    : (a = a.replace(V, "").toLowerCase(),
                    function(b) {
                        return b.nodeName && b.nodeName.toLowerCase() === a
                    }
                    )
                },
                CLASS: function(a) {
                    var b = B[o][a];
                    return b || (b = B(a, new RegExp("(^|" + E + ")" + a + "(" + E + "|$)"))),
                    function(a) {
                        return b.test(a.className || typeof a.getAttribute !== n && a.getAttribute("class") || "")
                    }
                },
                ATTR: function(a, b, c) {
                    return function(d, e) {
                        var f = bc.attr(d, a);
                        return f == null ? b === "!=" : b ? (f += "",
                        b === "=" ? f === c : b === "!=" ? f !== c : b === "^=" ? c && f.indexOf(c) === 0 : b === "*=" ? c && f.indexOf(c) > -1 : b === "$=" ? c && f.substr(f.length - c.length) === c : b === "~=" ? (" " + f + " ").indexOf(c) > -1 : b === "|=" ? f === c || f.substr(0, c.length + 1) === c + "-" : !1) : !0
                    }
                },
                CHILD: function(a, b, c, d) {
                    return a === "nth" ? function(a) {
                        var b, e, f = a.parentNode;
                        if (c === 1 && d === 0)
                            return !0;
                        if (f) {
                            e = 0;
                            for (b = f.firstChild; b; b = b.nextSibling)
                                if (b.nodeType === 1) {
                                    e++;
                                    if (a === b)
                                        break
                                }
                        }
                        return e -= d,
                        e === c || e % c === 0 && e / c >= 0
                    }
                    : function(b) {
                        var c = b;
                        switch (a) {
                        case "only":
                        case "first":
                            while (c = c.previousSibling)
                                if (c.nodeType === 1)
                                    return !1;
                            if (a === "first")
                                return !0;
                            c = b;
                        case "last":
                            while (c = c.nextSibling)
                                if (c.nodeType === 1)
                                    return !1;
                            return !0
                        }
                    }
                },
                PSEUDO: function(a, b) {
                    var c, d = e.pseudos[a] || e.setFilters[a.toLowerCase()] || bc.error("unsupported pseudo: " + a);
                    return d[o] ? d(b) : d.length > 1 ? (c = [a, a, "", b],
                    e.setFilters.hasOwnProperty(a.toLowerCase()) ? z(function(a, c) {
                        var e, f = d(a, b), g = f.length;
                        while (g--)
                            e = y.call(a, f[g]),
                            a[e] = !(c[e] = f[g])
                    }) : function(a) {
                        return d(a, 0, c)
                    }
                    ) : d
                }
            },
            pseudos: {
                not: z(function(a) {
                    var b = []
                      , c = []
                      , d = i(a.replace(L, "$1"));
                    return d[o] ? z(function(a, b, c, e) {
                        var f, g = d(a, null, e, []), h = a.length;
                        while (h--)
                            if (f = g[h])
                                a[h] = !(b[h] = f)
                    }) : function(a, e, f) {
                        return b[0] = a,
                        d(b, null, f, c),
                        !c.pop()
                    }
                }),
                has: z(function(a) {
                    return function(b) {
                        return bc(a, b).length > 0
                    }
                }),
                contains: z(function(a) {
                    return function(b) {
                        return (b.textContent || b.innerText || f(b)).indexOf(a) > -1
                    }
                }),
                enabled: function(a) {
                    return a.disabled === !1
                },
                disabled: function(a) {
                    return a.disabled === !0
                },
                checked: function(a) {
                    var b = a.nodeName.toLowerCase();
                    return b === "input" && !!a.checked || b === "option" && !!a.selected
                },
                selected: function(a) {
                    return a.parentNode && a.parentNode.selectedIndex,
                    a.selected === !0
                },
                parent: function(a) {
                    return !e.pseudos.empty(a)
                },
                empty: function(a) {
                    var b;
                    a = a.firstChild;
                    while (a) {
                        if (a.nodeName > "@" || (b = a.nodeType) === 3 || b === 4)
                            return !1;
                        a = a.nextSibling
                    }
                    return !0
                },
                header: function(a) {
                    return T.test(a.nodeName)
                },
                text: function(a) {
                    var b, c;
                    return a.nodeName.toLowerCase() === "input" && (b = a.type) === "text" && ((c = a.getAttribute("type")) == null || c.toLowerCase() === b)
                },
                radio: bd("radio"),
                checkbox: bd("checkbox"),
                file: bd("file"),
                password: bd("password"),
                image: bd("image"),
                submit: be("submit"),
                reset: be("reset"),
                button: function(a) {
                    var b = a.nodeName.toLowerCase();
                    return b === "input" && a.type === "button" || b === "button"
                },
                input: function(a) {
                    return U.test(a.nodeName)
                },
                focus: function(a) {
                    var b = a.ownerDocument;
                    return a === b.activeElement && (!b.hasFocus || b.hasFocus()) && (!!a.type || !!a.href)
                },
                active: function(a) {
                    return a === a.ownerDocument.activeElement
                },
                first: bf(function(a, b, c) {
                    return [0]
                }),
                last: bf(function(a, b, c) {
                    return [b - 1]
                }),
                eq: bf(function(a, b, c) {
                    return [c < 0 ? c + b : c]
                }),
                even: bf(function(a, b, c) {
                    for (var d = 0; d < b; d += 2)
                        a.push(d);
                    return a
                }),
                odd: bf(function(a, b, c) {
                    for (var d = 1; d < b; d += 2)
                        a.push(d);
                    return a
                }),
                lt: bf(function(a, b, c) {
                    for (var d = c < 0 ? c + b : c; --d >= 0; )
                        a.push(d);
                    return a
                }),
                gt: bf(function(a, b, c) {
                    for (var d = c < 0 ? c + b : c; ++d < b; )
                        a.push(d);
                    return a
                })
            }
        },
        j = s.compareDocumentPosition ? function(a, b) {
            return a === b ? (k = !0,
            0) : (!a.compareDocumentPosition || !b.compareDocumentPosition ? a.compareDocumentPosition : a.compareDocumentPosition(b) & 4) ? -1 : 1
        }
        : function(a, b) {
            if (a === b)
                return k = !0,
                0;
            if (a.sourceIndex && b.sourceIndex)
                return a.sourceIndex - b.sourceIndex;
            var c, d, e = [], f = [], g = a.parentNode, h = b.parentNode, i = g;
            if (g === h)
                return bg(a, b);
            if (!g)
                return -1;
            if (!h)
                return 1;
            while (i)
                e.unshift(i),
                i = i.parentNode;
            i = h;
            while (i)
                f.unshift(i),
                i = i.parentNode;
            c = e.length,
            d = f.length;
            for (var j = 0; j < c && j < d; j++)
                if (e[j] !== f[j])
                    return bg(e[j], f[j]);
            return j === c ? bg(a, f[j], -1) : bg(e[j], b, 1)
        }
        ,
        [0, 0].sort(j),
        m = !k,
        bc.uniqueSort = function(a) {
            var b, c = 1;
            k = m,
            a.sort(j);
            if (k)
                for (; b = a[c]; c++)
                    b === a[c - 1] && a.splice(c--, 1);
            return a
        }
        ,
        bc.error = function(a) {
            throw new Error("Syntax error, unrecognized expression: " + a)
        }
        ,
        i = bc.compile = function(a, b) {
            var c, d = [], e = [], f = D[o][a];
            if (!f) {
                b || (b = bh(a)),
                c = b.length;
                while (c--)
                    f = bm(b[c]),
                    f[o] ? d.push(f) : e.push(f);
                f = D(a, bn(e, d))
            }
            return f
        }
        ,
        r.querySelectorAll && function() {
            var a, b = bp, c = /'|\\/g, d = /\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g, e = [":focus"], f = [":active", ":focus"], h = s.matchesSelector || s.mozMatchesSelector || s.webkitMatchesSelector || s.oMatchesSelector || s.msMatchesSelector;
            X(function(a) {
                a.innerHTML = "<select><option selected=''></option></select>",
                a.querySelectorAll("[selected]").length || e.push("\\[" + E + "*(?:checked|disabled|ismap|multiple|readonly|selected|value)"),
                a.querySelectorAll(":checked").length || e.push(":checked")
            }),
            X(function(a) {
                a.innerHTML = "<p test=''></p>",
                a.querySelectorAll("[test^='']").length && e.push("[*^$]=" + E + "*(?:\"\"|'')"),
                a.innerHTML = "<input type='hidden'/>",
                a.querySelectorAll(":enabled").length || e.push(":enabled", ":disabled")
            }),
            e = new RegExp(e.join("|")),
            bp = function(a, d, f, g, h) {
                if (!g && !h && (!e || !e.test(a))) {
                    var i, j, k = !0, l = o, m = d, n = d.nodeType === 9 && a;
                    if (d.nodeType === 1 && d.nodeName.toLowerCase() !== "object") {
                        i = bh(a),
                        (k = d.getAttribute("id")) ? l = k.replace(c, "\\$&") : d.setAttribute("id", l),
                        l = "[id='" + l + "'] ",
                        j = i.length;
                        while (j--)
                            i[j] = l + i[j].join("");
                        m = R.test(a) && d.parentNode || d,
                        n = i.join(",")
                    }
                    if (n)
                        try {
                            return w.apply(f, x.call(m.querySelectorAll(n), 0)),
                            f
                        } catch (p) {} finally {
                            k || d.removeAttribute("id")
                        }
                }
                return b(a, d, f, g, h)
            }
            ,
            h && (X(function(b) {
                a = h.call(b, "div");
                try {
                    h.call(b, "[test!='']:sizzle"),
                    f.push("!=", J)
                } catch (c) {}
            }),
            f = new RegExp(f.join("|")),
            bc.matchesSelector = function(b, c) {
                c = c.replace(d, "='$1']");
                if (!g(b) && !f.test(c) && (!e || !e.test(c)))
                    try {
                        var i = h.call(b, c);
                        if (i || a || b.document && b.document.nodeType !== 11)
                            return i
                    } catch (j) {}
                return bc(c, null, null, [b]).length > 0
            }
            )
        }(),
        e.pseudos.nth = e.pseudos.eq,
        e.filters = bq.prototype = e.pseudos,
        e.setFilters = new bq,
        bc.attr = p.attr,
        p.find = bc,
        p.expr = bc.selectors,
        p.expr[":"] = p.expr.pseudos,
        p.unique = bc.uniqueSort,
        p.text = bc.getText,
        p.isXMLDoc = bc.isXML,
        p.contains = bc.contains
    }(a);
    var bc = /Until$/
      , bd = /^(?:parents|prev(?:Until|All))/
      , be = /^.[^:#\[\.,]*$/
      , bf = p.expr.match.needsContext
      , bg = {
        children: !0,
        contents: !0,
        next: !0,
        prev: !0
    };
    p.fn.extend({
        find: function(a) {
            var b, c, d, e, f, g, h = this;
            if (typeof a != "string")
                return p(a).filter(function() {
                    for (b = 0,
                    c = h.length; b < c; b++)
                        if (p.contains(h[b], this))
                            return !0
                });
            g = this.pushStack("", "find", a);
            for (b = 0,
            c = this.length; b < c; b++) {
                d = g.length,
                p.find(a, this[b], g);
                if (b > 0)
                    for (e = d; e < g.length; e++)
                        for (f = 0; f < d; f++)
                            if (g[f] === g[e]) {
                                g.splice(e--, 1);
                                break
                            }
            }
            return g
        },
        has: function(a) {
            var b, c = p(a, this), d = c.length;
            return this.filter(function() {
                for (b = 0; b < d; b++)
                    if (p.contains(this, c[b]))
                        return !0
            })
        },
        not: function(a) {
            return this.pushStack(bj(this, a, !1), "not", a)
        },
        filter: function(a) {
            return this.pushStack(bj(this, a, !0), "filter", a)
        },
        is: function(a) {
            return !!a && (typeof a == "string" ? bf.test(a) ? p(a, this.context).index(this[0]) >= 0 : p.filter(a, this).length > 0 : this.filter(a).length > 0)
        },
        closest: function(a, b) {
            var c, d = 0, e = this.length, f = [], g = bf.test(a) || typeof a != "string" ? p(a, b || this.context) : 0;
            for (; d < e; d++) {
                c = this[d];
                while (c && c.ownerDocument && c !== b && c.nodeType !== 11) {
                    if (g ? g.index(c) > -1 : p.find.matchesSelector(c, a)) {
                        f.push(c);
                        break
                    }
                    c = c.parentNode
                }
            }
            return f = f.length > 1 ? p.unique(f) : f,
            this.pushStack(f, "closest", a)
        },
        index: function(a) {
            return a ? typeof a == "string" ? p.inArray(this[0], p(a)) : p.inArray(a.jquery ? a[0] : a, this) : this[0] && this[0].parentNode ? this.prevAll().length : -1
        },
        add: function(a, b) {
            var c = typeof a == "string" ? p(a, b) : p.makeArray(a && a.nodeType ? [a] : a)
              , d = p.merge(this.get(), c);
            return this.pushStack(bh(c[0]) || bh(d[0]) ? d : p.unique(d))
        },
        addBack: function(a) {
            return this.add(a == null ? this.prevObject : this.prevObject.filter(a))
        }
    }),
    p.fn.andSelf = p.fn.addBack,
    p.each({
        parent: function(a) {
            var b = a.parentNode;
            return b && b.nodeType !== 11 ? b : null
        },
        parents: function(a) {
            return p.dir(a, "parentNode")
        },
        parentsUntil: function(a, b, c) {
            return p.dir(a, "parentNode", c)
        },
        next: function(a) {
            return bi(a, "nextSibling")
        },
        prev: function(a) {
            return bi(a, "previousSibling")
        },
        nextAll: function(a) {
            return p.dir(a, "nextSibling")
        },
        prevAll: function(a) {
            return p.dir(a, "previousSibling")
        },
        nextUntil: function(a, b, c) {
            return p.dir(a, "nextSibling", c)
        },
        prevUntil: function(a, b, c) {
            return p.dir(a, "previousSibling", c)
        },
        siblings: function(a) {
            return p.sibling((a.parentNode || {}).firstChild, a)
        },
        children: function(a) {
            return p.sibling(a.firstChild)
        },
        contents: function(a) {
            return p.nodeName(a, "iframe") ? a.contentDocument || a.contentWindow.document : p.merge([], a.childNodes)
        }
    }, function(a, b) {
        p.fn[a] = function(c, d) {
            var e = p.map(this, b, c);
            return bc.test(a) || (d = c),
            d && typeof d == "string" && (e = p.filter(d, e)),
            e = this.length > 1 && !bg[a] ? p.unique(e) : e,
            this.length > 1 && bd.test(a) && (e = e.reverse()),
            this.pushStack(e, a, k.call(arguments).join(","))
        }
    }),
    p.extend({
        filter: function(a, b, c) {
            return c && (a = ":not(" + a + ")"),
            b.length === 1 ? p.find.matchesSelector(b[0], a) ? [b[0]] : [] : p.find.matches(a, b)
        },
        dir: function(a, c, d) {
            var e = []
              , f = a[c];
            while (f && f.nodeType !== 9 && (d === b || f.nodeType !== 1 || !p(f).is(d)))
                f.nodeType === 1 && e.push(f),
                f = f[c];
            return e
        },
        sibling: function(a, b) {
            var c = [];
            for (; a; a = a.nextSibling)
                a.nodeType === 1 && a !== b && c.push(a);
            return c
        }
    });
    var bl = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video"
      , bm = / jQuery\d+="(?:null|\d+)"/g
      , bn = /^\s+/
      , bo = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi
      , bp = /<([\w:]+)/
      , bq = /<tbody/i
      , br = /<|&#?\w+;/
      , bs = /<(?:script|style|link)/i
      , bt = /<(?:script|object|embed|option|style)/i
      , bu = new RegExp("<(?:" + bl + ")[\\s/>]","i")
      , bv = /^(?:checkbox|radio)$/
      , bw = /checked\s*(?:[^=]|=\s*.checked.)/i
      , bx = /\/(java|ecma)script/i
      , by = /^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g
      , bz = {
        option: [1, "<select multiple='multiple'>", "</select>"],
        legend: [1, "<fieldset>", "</fieldset>"],
        thead: [1, "<table>", "</table>"],
        tr: [2, "<table><tbody>", "</tbody></table>"],
        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
        area: [1, "<map>", "</map>"],
        _default: [0, "", ""]
    }
      , bA = bk(e)
      , bB = bA.appendChild(e.createElement("div"));
    bz.optgroup = bz.option,
    bz.tbody = bz.tfoot = bz.colgroup = bz.caption = bz.thead,
    bz.th = bz.td,
    p.support.htmlSerialize || (bz._default = [1, "X<div>", "</div>"]),
    p.fn.extend({
        text: function(a) {
            return p.access(this, function(a) {
                return a === b ? p.text(this) : this.empty().append((this[0] && this[0].ownerDocument || e).createTextNode(a))
            }, null, a, arguments.length)
        },
        wrapAll: function(a) {
            if (p.isFunction(a))
                return this.each(function(b) {
                    p(this).wrapAll(a.call(this, b))
                });
            if (this[0]) {
                var b = p(a, this[0].ownerDocument).eq(0).clone(!0);
                this[0].parentNode && b.insertBefore(this[0]),
                b.map(function() {
                    var a = this;
                    while (a.firstChild && a.firstChild.nodeType === 1)
                        a = a.firstChild;
                    return a
                }).append(this)
            }
            return this
        },
        wrapInner: function(a) {
            return p.isFunction(a) ? this.each(function(b) {
                p(this).wrapInner(a.call(this, b))
            }) : this.each(function() {
                var b = p(this)
                  , c = b.contents();
                c.length ? c.wrapAll(a) : b.append(a)
            })
        },
        wrap: function(a) {
            var b = p.isFunction(a);
            return this.each(function(c) {
                p(this).wrapAll(b ? a.call(this, c) : a)
            })
        },
        unwrap: function() {
            return this.parent().each(function() {
                p.nodeName(this, "body") || p(this).replaceWith(this.childNodes)
            }).end()
        },
        append: function() {
            return this.domManip(arguments, !0, function(a) {
                (this.nodeType === 1 || this.nodeType === 11) && this.appendChild(a)
            })
        },
        prepend: function() {
            return this.domManip(arguments, !0, function(a) {
                (this.nodeType === 1 || this.nodeType === 11) && this.insertBefore(a, this.firstChild)
            })
        },
        before: function() {
            if (!bh(this[0]))
                return this.domManip(arguments, !1, function(a) {
                    this.parentNode.insertBefore(a, this)
                });
            if (arguments.length) {
                var a = p.clean(arguments);
                return this.pushStack(p.merge(a, this), "before", this.selector)
            }
        },
        after: function() {
            if (!bh(this[0]))
                return this.domManip(arguments, !1, function(a) {
                    this.parentNode.insertBefore(a, this.nextSibling)
                });
            if (arguments.length) {
                var a = p.clean(arguments);
                return this.pushStack(p.merge(this, a), "after", this.selector)
            }
        },
        remove: function(a, b) {
            var c, d = 0;
            for (; (c = this[d]) != null; d++)
                if (!a || p.filter(a, [c]).length)
                    !b && c.nodeType === 1 && (p.cleanData(c.getElementsByTagName("*")),
                    p.cleanData([c])),
                    c.parentNode && c.parentNode.removeChild(c);
            return this
        },
        empty: function() {
            var a, b = 0;
            for (; (a = this[b]) != null; b++) {
                a.nodeType === 1 && p.cleanData(a.getElementsByTagName("*"));
                while (a.firstChild)
                    a.removeChild(a.firstChild)
            }
            return this
        },
        clone: function(a, b) {
            return a = a == null ? !1 : a,
            b = b == null ? a : b,
            this.map(function() {
                return p.clone(this, a, b)
            })
        },
        html: function(a) {
            return p.access(this, function(a) {
                var c = this[0] || {}
                  , d = 0
                  , e = this.length;
                if (a === b)
                    return c.nodeType === 1 ? c.innerHTML.replace(bm, "") : b;
                if (typeof a == "string" && !bs.test(a) && (p.support.htmlSerialize || !bu.test(a)) && (p.support.leadingWhitespace || !bn.test(a)) && !bz[(bp.exec(a) || ["", ""])[1].toLowerCase()]) {
                    a = a.replace(bo, "<$1></$2>");
                    try {
                        for (; d < e; d++)
                            c = this[d] || {},
                            c.nodeType === 1 && (p.cleanData(c.getElementsByTagName("*")),
                            c.innerHTML = a);
                        c = 0
                    } catch (f) {}
                }
                c && this.empty().append(a)
            }, null, a, arguments.length)
        },
        replaceWith: function(a) {
            return bh(this[0]) ? this.length ? this.pushStack(p(p.isFunction(a) ? a() : a), "replaceWith", a) : this : p.isFunction(a) ? this.each(function(b) {
                var c = p(this)
                  , d = c.html();
                c.replaceWith(a.call(this, b, d))
            }) : (typeof a != "string" && (a = p(a).detach()),
            this.each(function() {
                var b = this.nextSibling
                  , c = this.parentNode;
                p(this).remove(),
                b ? p(b).before(a) : p(c).append(a)
            }))
        },
        detach: function(a) {
            return this.remove(a, !0)
        },
        domManip: function(a, c, d) {
            a = [].concat.apply([], a);
            var e, f, g, h, i = 0, j = a[0], k = [], l = this.length;
            if (!p.support.checkClone && l > 1 && typeof j == "string" && bw.test(j))
                return this.each(function() {
                    p(this).domManip(a, c, d)
                });
            if (p.isFunction(j))
                return this.each(function(e) {
                    var f = p(this);
                    a[0] = j.call(this, e, c ? f.html() : b),
                    f.domManip(a, c, d)
                });
            if (this[0]) {
                e = p.buildFragment(a, this, k),
                g = e.fragment,
                f = g.firstChild,
                g.childNodes.length === 1 && (g = f);
                if (f) {
                    c = c && p.nodeName(f, "tr");
                    for (h = e.cacheable || l - 1; i < l; i++)
                        d.call(c && p.nodeName(this[i], "table") ? bC(this[i], "tbody") : this[i], i === h ? g : p.clone(g, !0, !0))
                }
                g = f = null,
                k.length && p.each(k, function(a, b) {
                    b.src ? p.ajax ? p.ajax({
                        url: b.src,
                        type: "GET",
                        dataType: "script",
                        async: !1,
                        global: !1,
                        "throws": !0
                    }) : p.error("no ajax") : p.globalEval((b.text || b.textContent || b.innerHTML || "").replace(by, "")),
                    b.parentNode && b.parentNode.removeChild(b)
                })
            }
            return this
        }
    }),
    p.buildFragment = function(a, c, d) {
        var f, g, h, i = a[0];
        return c = c || e,
        c = !c.nodeType && c[0] || c,
        c = c.ownerDocument || c,
        a.length === 1 && typeof i == "string" && i.length < 512 && c === e && i.charAt(0) === "<" && !bt.test(i) && (p.support.checkClone || !bw.test(i)) && (p.support.html5Clone || !bu.test(i)) && (g = !0,
        f = p.fragments[i],
        h = f !== b),
        f || (f = c.createDocumentFragment(),
        p.clean(a, c, f, d),
        g && (p.fragments[i] = h && f)),
        {
            fragment: f,
            cacheable: g
        }
    }
    ,
    p.fragments = {},
    p.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(a, b) {
        p.fn[a] = function(c) {
            var d, e = 0, f = [], g = p(c), h = g.length, i = this.length === 1 && this[0].parentNode;
            if ((i == null || i && i.nodeType === 11 && i.childNodes.length === 1) && h === 1)
                return g[b](this[0]),
                this;
            for (; e < h; e++)
                d = (e > 0 ? this.clone(!0) : this).get(),
                p(g[e])[b](d),
                f = f.concat(d);
            return this.pushStack(f, a, g.selector)
        }
    }),
    p.extend({
        clone: function(a, b, c) {
            var d, e, f, g;
            p.support.html5Clone || p.isXMLDoc(a) || !bu.test("<" + a.nodeName + ">") ? g = a.cloneNode(!0) : (bB.innerHTML = a.outerHTML,
            bB.removeChild(g = bB.firstChild));
            if ((!p.support.noCloneEvent || !p.support.noCloneChecked) && (a.nodeType === 1 || a.nodeType === 11) && !p.isXMLDoc(a)) {
                bE(a, g),
                d = bF(a),
                e = bF(g);
                for (f = 0; d[f]; ++f)
                    e[f] && bE(d[f], e[f])
            }
            if (b) {
                bD(a, g);
                if (c) {
                    d = bF(a),
                    e = bF(g);
                    for (f = 0; d[f]; ++f)
                        bD(d[f], e[f])
                }
            }
            return d = e = null,
            g
        },
        clean: function(a, b, c, d) {
            var f, g, h, i, j, k, l, m, n, o, q, r, s = b === e && bA, t = [];
            if (!b || typeof b.createDocumentFragment == "undefined")
                b = e;
            for (f = 0; (h = a[f]) != null; f++) {
                typeof h == "number" && (h += "");
                if (!h)
                    continue;
                if (typeof h == "string")
                    if (!br.test(h))
                        h = b.createTextNode(h);
                    else {
                        s = s || bk(b),
                        l = b.createElement("div"),
                        s.appendChild(l),
                        h = h.replace(bo, "<$1></$2>"),
                        i = (bp.exec(h) || ["", ""])[1].toLowerCase(),
                        j = bz[i] || bz._default,
                        k = j[0],
                        l.innerHTML = j[1] + h + j[2];
                        while (k--)
                            l = l.lastChild;
                        if (!p.support.tbody) {
                            m = bq.test(h),
                            n = i === "table" && !m ? l.firstChild && l.firstChild.childNodes : j[1] === "<table>" && !m ? l.childNodes : [];
                            for (g = n.length - 1; g >= 0; --g)
                                p.nodeName(n[g], "tbody") && !n[g].childNodes.length && n[g].parentNode.removeChild(n[g])
                        }
                        !p.support.leadingWhitespace && bn.test(h) && l.insertBefore(b.createTextNode(bn.exec(h)[0]), l.firstChild),
                        h = l.childNodes,
                        l.parentNode.removeChild(l)
                    }
                h.nodeType ? t.push(h) : p.merge(t, h)
            }
            l && (h = l = s = null);
            if (!p.support.appendChecked)
                for (f = 0; (h = t[f]) != null; f++)
                    p.nodeName(h, "input") ? bG(h) : typeof h.getElementsByTagName != "undefined" && p.grep(h.getElementsByTagName("input"), bG);
            if (c) {
                q = function(a) {
                    if (!a.type || bx.test(a.type))
                        return d ? d.push(a.parentNode ? a.parentNode.removeChild(a) : a) : c.appendChild(a)
                }
                ;
                for (f = 0; (h = t[f]) != null; f++)
                    if (!p.nodeName(h, "script") || !q(h))
                        c.appendChild(h),
                        typeof h.getElementsByTagName != "undefined" && (r = p.grep(p.merge([], h.getElementsByTagName("script")), q),
                        t.splice.apply(t, [f + 1, 0].concat(r)),
                        f += r.length)
            }
            return t
        },
        cleanData: function(a, b) {
            var c, d, e, f, g = 0, h = p.expando, i = p.cache, j = p.support.deleteExpando, k = p.event.special;
            for (; (e = a[g]) != null; g++)
                if (b || p.acceptData(e)) {
                    d = e[h],
                    c = d && i[d];
                    if (c) {
                        if (c.events)
                            for (f in c.events)
                                k[f] ? p.event.remove(e, f) : p.removeEvent(e, f, c.handle);
                        i[d] && (delete i[d],
                        j ? delete e[h] : e.removeAttribute ? e.removeAttribute(h) : e[h] = null,
                        p.deletedIds.push(d))
                    }
                }
        }
    }),
    function() {
        var a, b;
        p.uaMatch = function(a) {
            a = a.toLowerCase();
            var b = /(chrome)[ \/]([\w.]+)/.exec(a) || /(webkit)[ \/]([\w.]+)/.exec(a) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(a) || /(msie) ([\w.]+)/.exec(a) || a.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(a) || [];
            return {
                browser: b[1] || "",
                version: b[2] || "0"
            }
        }
        ,
        a = p.uaMatch(g.userAgent),
        b = {},
        a.browser && (b[a.browser] = !0,
        b.version = a.version),
        b.chrome ? b.webkit = !0 : b.webkit && (b.safari = !0),
        p.browser = b,
        p.sub = function() {
            function a(b, c) {
                return new a.fn.init(b,c)
            }
            p.extend(!0, a, this),
            a.superclass = this,
            a.fn = a.prototype = this(),
            a.fn.constructor = a,
            a.sub = this.sub,
            a.fn.init = function c(c, d) {
                return d && d instanceof p && !(d instanceof a) && (d = a(d)),
                p.fn.init.call(this, c, d, b)
            }
            ,
            a.fn.init.prototype = a.fn;
            var b = a(e);
            return a
        }
    }();
    var bH, bI, bJ, bK = /alpha\([^)]*\)/i, bL = /opacity=([^)]*)/, bM = /^(top|right|bottom|left)$/, bN = /^(none|table(?!-c[ea]).+)/, bO = /^margin/, bP = new RegExp("^(" + q + ")(.*)$","i"), bQ = new RegExp("^(" + q + ")(?!px)[a-z%]+$","i"), bR = new RegExp("^([-+])=(" + q + ")","i"), bS = {}, bT = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
    }, bU = {
        letterSpacing: 0,
        fontWeight: 400
    }, bV = ["Top", "Right", "Bottom", "Left"], bW = ["Webkit", "O", "Moz", "ms"], bX = p.fn.toggle;
    p.fn.extend({
        css: function(a, c) {
            return p.access(this, function(a, c, d) {
                return d !== b ? p.style(a, c, d) : p.css(a, c)
            }, a, c, arguments.length > 1)
        },
        show: function() {
            return b$(this, !0)
        },
        hide: function() {
            return b$(this)
        },
        toggle: function(a, b) {
            var c = typeof a == "boolean";
            return p.isFunction(a) && p.isFunction(b) ? bX.apply(this, arguments) : this.each(function() {
                (c ? a : bZ(this)) ? p(this).show() : p(this).hide()
            })
        }
    }),
    p.extend({
        cssHooks: {
            opacity: {
                get: function(a, b) {
                    if (b) {
                        var c = bH(a, "opacity");
                        return c === "" ? "1" : c
                    }
                }
            }
        },
        cssNumber: {
            fillOpacity: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {
            "float": p.support.cssFloat ? "cssFloat" : "styleFloat"
        },
        style: function(a, c, d, e) {
            if (!a || a.nodeType === 3 || a.nodeType === 8 || !a.style)
                return;
            var f, g, h, i = p.camelCase(c), j = a.style;
            c = p.cssProps[i] || (p.cssProps[i] = bY(j, i)),
            h = p.cssHooks[c] || p.cssHooks[i];
            if (d === b)
                return h && "get"in h && (f = h.get(a, !1, e)) !== b ? f : j[c];
            g = typeof d,
            g === "string" && (f = bR.exec(d)) && (d = (f[1] + 1) * f[2] + parseFloat(p.css(a, c)),
            g = "number");
            if (d == null || g === "number" && isNaN(d))
                return;
            g === "number" && !p.cssNumber[i] && (d += "px");
            if (!h || !("set"in h) || (d = h.set(a, d, e)) !== b)
                try {
                    j[c] = d
                } catch (k) {}
        },
        css: function(a, c, d, e) {
            var f, g, h, i = p.camelCase(c);
            return c = p.cssProps[i] || (p.cssProps[i] = bY(a.style, i)),
            h = p.cssHooks[c] || p.cssHooks[i],
            h && "get"in h && (f = h.get(a, !0, e)),
            f === b && (f = bH(a, c)),
            f === "normal" && c in bU && (f = bU[c]),
            d || e !== b ? (g = parseFloat(f),
            d || p.isNumeric(g) ? g || 0 : f) : f
        },
        swap: function(a, b, c) {
            var d, e, f = {};
            for (e in b)
                f[e] = a.style[e],
                a.style[e] = b[e];
            d = c.call(a);
            for (e in b)
                a.style[e] = f[e];
            return d
        }
    }),
    a.getComputedStyle ? bH = function(b, c) {
        var d, e, f, g, h = a.getComputedStyle(b, null), i = b.style;
        return h && (d = h[c],
        d === "" && !p.contains(b.ownerDocument, b) && (d = p.style(b, c)),
        bQ.test(d) && bO.test(c) && (e = i.width,
        f = i.minWidth,
        g = i.maxWidth,
        i.minWidth = i.maxWidth = i.width = d,
        d = h.width,
        i.width = e,
        i.minWidth = f,
        i.maxWidth = g)),
        d
    }
    : e.documentElement.currentStyle && (bH = function(a, b) {
        var c, d, e = a.currentStyle && a.currentStyle[b], f = a.style;
        return e == null && f && f[b] && (e = f[b]),
        bQ.test(e) && !bM.test(b) && (c = f.left,
        d = a.runtimeStyle && a.runtimeStyle.left,
        d && (a.runtimeStyle.left = a.currentStyle.left),
        f.left = b === "fontSize" ? "1em" : e,
        e = f.pixelLeft + "px",
        f.left = c,
        d && (a.runtimeStyle.left = d)),
        e === "" ? "auto" : e
    }
    ),
    p.each(["height", "width"], function(a, b) {
        p.cssHooks[b] = {
            get: function(a, c, d) {
                if (c)
                    return a.offsetWidth === 0 && bN.test(bH(a, "display")) ? p.swap(a, bT, function() {
                        return cb(a, b, d)
                    }) : cb(a, b, d)
            },
            set: function(a, c, d) {
                return b_(a, c, d ? ca(a, b, d, p.support.boxSizing && p.css(a, "boxSizing") === "border-box") : 0)
            }
        }
    }),
    p.support.opacity || (p.cssHooks.opacity = {
        get: function(a, b) {
            return bL.test((b && a.currentStyle ? a.currentStyle.filter : a.style.filter) || "") ? .01 * parseFloat(RegExp.$1) + "" : b ? "1" : ""
        },
        set: function(a, b) {
            var c = a.style
              , d = a.currentStyle
              , e = p.isNumeric(b) ? "alpha(opacity=" + b * 100 + ")" : ""
              , f = d && d.filter || c.filter || "";
            c.zoom = 1;
            if (b >= 1 && p.trim(f.replace(bK, "")) === "" && c.removeAttribute) {
                c.removeAttribute("filter");
                if (d && !d.filter)
                    return
            }
            c.filter = bK.test(f) ? f.replace(bK, e) : f + " " + e
        }
    }),
    p(function() {
        p.support.reliableMarginRight || (p.cssHooks.marginRight = {
            get: function(a, b) {
                return p.swap(a, {
                    display: "inline-block"
                }, function() {
                    if (b)
                        return bH(a, "marginRight")
                })
            }
        }),
        !p.support.pixelPosition && p.fn.position && p.each(["top", "left"], function(a, b) {
            p.cssHooks[b] = {
                get: function(a, c) {
                    if (c) {
                        var d = bH(a, b);
                        return bQ.test(d) ? p(a).position()[b] + "px" : d
                    }
                }
            }
        })
    }),
    p.expr && p.expr.filters && (p.expr.filters.hidden = function(a) {
        return a.offsetWidth === 0 && a.offsetHeight === 0 || !p.support.reliableHiddenOffsets && (a.style && a.style.display || bH(a, "display")) === "none"
    }
    ,
    p.expr.filters.visible = function(a) {
        return !p.expr.filters.hidden(a)
    }
    ),
    p.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(a, b) {
        p.cssHooks[a + b] = {
            expand: function(c) {
                var d, e = typeof c == "string" ? c.split(" ") : [c], f = {};
                for (d = 0; d < 4; d++)
                    f[a + bV[d] + b] = e[d] || e[d - 2] || e[0];
                return f
            }
        },
        bO.test(a) || (p.cssHooks[a + b].set = b_)
    });
    var cd = /%20/g
      , ce = /\[\]$/
      , cf = /\r?\n/g
      , cg = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i
      , ch = /^(?:select|textarea)/i;
    p.fn.extend({
        serialize: function() {
            return p.param(this.serializeArray())
        },
        serializeArray: function() {
            return this.map(function() {
                return this.elements ? p.makeArray(this.elements) : this
            }).filter(function() {
                return this.name && !this.disabled && (this.checked || ch.test(this.nodeName) || cg.test(this.type))
            }).map(function(a, b) {
                var c = p(this).val();
                return c == null ? null : p.isArray(c) ? p.map(c, function(a, c) {
                    return {
                        name: b.name,
                        value: a.replace(cf, "\r\n")
                    }
                }) : {
                    name: b.name,
                    value: c.replace(cf, "\r\n")
                }
            }).get()
        }
    }),
    p.param = function(a, c) {
        var d, e = [], f = function(a, b) {
            b = p.isFunction(b) ? b() : b == null ? "" : b,
            e[e.length] = encodeURIComponent(a) + "=" + encodeURIComponent(b)
        };
        c === b && (c = p.ajaxSettings && p.ajaxSettings.traditional);
        if (p.isArray(a) || a.jquery && !p.isPlainObject(a))
            p.each(a, function() {
                f(this.name, this.value)
            });
        else
            for (d in a)
                ci(d, a[d], c, f);
        return e.join("&").replace(cd, "+")
    }
    ;
    var cj, ck, cl = /#.*$/, cm = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, cn = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/, co = /^(?:GET|HEAD)$/, cp = /^\/\//, cq = /\?/, cr = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, cs = /([?&])_=[^&]*/, ct = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/, cu = p.fn.load, cv = {}, cw = {}, cx = ["*/"] + ["*"];
    try {
        ck = f.href
    } catch (cy) {
        ck = e.createElement("a"),
        ck.href = "",
        ck = ck.href
    }
    cj = ct.exec(ck.toLowerCase()) || [],
    p.fn.load = function(a, c, d) {
        if (typeof a != "string" && cu)
            return cu.apply(this, arguments);
        if (!this.length)
            return this;
        var e, f, g, h = this, i = a.indexOf(" ");
        return i >= 0 && (e = a.slice(i, a.length),
        a = a.slice(0, i)),
        p.isFunction(c) ? (d = c,
        c = b) : c && typeof c == "object" && (f = "POST"),
        p.ajax({
            url: a,
            type: f,
            dataType: "html",
            data: c,
            complete: function(a, b) {
                d && h.each(d, g || [a.responseText, b, a])
            }
        }).done(function(a) {
            g = arguments,
            h.html(e ? p("<div>").append(a.replace(cr, "")).find(e) : a)
        }),
        this
    }
    ,
    p.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function(a, b) {
        p.fn[b] = function(a) {
            return this.on(b, a)
        }
    }),
    p.each(["get", "post"], function(a, c) {
        p[c] = function(a, d, e, f) {
            return p.isFunction(d) && (f = f || e,
            e = d,
            d = b),
            p.ajax({
                type: c,
                url: a,
                data: d,
                success: e,
                dataType: f
            })
        }
    }),
    p.extend({
        getScript: function(a, c) {
            return p.get(a, b, c, "script")
        },
        getJSON: function(a, b, c) {
            return p.get(a, b, c, "json")
        },
        ajaxSetup: function(a, b) {
            return b ? cB(a, p.ajaxSettings) : (b = a,
            a = p.ajaxSettings),
            cB(a, b),
            a
        },
        ajaxSettings: {
            url: ck,
            isLocal: cn.test(cj[1]),
            global: !0,
            type: "GET",
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            processData: !0,
            async: !0,
            accepts: {
                xml: "application/xml, text/xml",
                html: "text/html",
                text: "text/plain",
                json: "application/json, text/javascript",
                "*": cx
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText"
            },
            converters: {
                "* text": a.String,
                "text html": !0,
                "text json": p.parseJSON,
                "text xml": p.parseXML
            },
            flatOptions: {
                context: !0,
                url: !0
            }
        },
        ajaxPrefilter: cz(cv),
        ajaxTransport: cz(cw),
        ajax: function(a, c) {
            function y(a, c, f, i) {
                var k, s, t, u, w, y = c;
                if (v === 2)
                    return;
                v = 2,
                h && clearTimeout(h),
                g = b,
                e = i || "",
                x.readyState = a > 0 ? 4 : 0,
                f && (u = cC(l, x, f));
                if (a >= 200 && a < 300 || a === 304)
                    l.ifModified && (w = x.getResponseHeader("Last-Modified"),
                    w && (p.lastModified[d] = w),
                    w = x.getResponseHeader("Etag"),
                    w && (p.etag[d] = w)),
                    a === 304 ? (y = "notmodified",
                    k = !0) : (k = cD(l, u),
                    y = k.state,
                    s = k.data,
                    t = k.error,
                    k = !t);
                else {
                    t = y;
                    if (!y || a)
                        y = "error",
                        a < 0 && (a = 0)
                }
                x.status = a,
                x.statusText = (c || y) + "",
                k ? o.resolveWith(m, [s, y, x]) : o.rejectWith(m, [x, y, t]),
                x.statusCode(r),
                r = b,
                j && n.trigger("ajax" + (k ? "Success" : "Error"), [x, l, k ? s : t]),
                q.fireWith(m, [x, y]),
                j && (n.trigger("ajaxComplete", [x, l]),
                --p.active || p.event.trigger("ajaxStop"))
            }
            typeof a == "object" && (c = a,
            a = b),
            c = c || {};
            var d, e, f, g, h, i, j, k, l = p.ajaxSetup({}, c), m = l.context || l, n = m !== l && (m.nodeType || m instanceof p) ? p(m) : p.event, o = p.Deferred(), q = p.Callbacks("once memory"), r = l.statusCode || {}, t = {}, u = {}, v = 0, w = "canceled", x = {
                readyState: 0,
                setRequestHeader: function(a, b) {
                    if (!v) {
                        var c = a.toLowerCase();
                        a = u[c] = u[c] || a,
                        t[a] = b
                    }
                    return this
                },
                getAllResponseHeaders: function() {
                    return v === 2 ? e : null
                },
                getResponseHeader: function(a) {
                    var c;
                    if (v === 2) {
                        if (!f) {
                            f = {};
                            while (c = cm.exec(e))
                                f[c[1].toLowerCase()] = c[2]
                        }
                        c = f[a.toLowerCase()]
                    }
                    return c === b ? null : c
                },
                overrideMimeType: function(a) {
                    return v || (l.mimeType = a),
                    this
                },
                abort: function(a) {
                    return a = a || w,
                    g && g.abort(a),
                    y(0, a),
                    this
                }
            };
            o.promise(x),
            x.success = x.done,
            x.error = x.fail,
            x.complete = q.add,
            x.statusCode = function(a) {
                if (a) {
                    var b;
                    if (v < 2)
                        for (b in a)
                            r[b] = [r[b], a[b]];
                    else
                        b = a[x.status],
                        x.always(b)
                }
                return this
            }
            ,
            l.url = ((a || l.url) + "").replace(cl, "").replace(cp, cj[1] + "//"),
            l.dataTypes = p.trim(l.dataType || "*").toLowerCase().split(s),
            l.crossDomain == null && (i = ct.exec(l.url.toLowerCase()) || !1,
            l.crossDomain = i && i.join(":") + (i[3] ? "" : i[1] === "http:" ? 80 : 443) !== cj.join(":") + (cj[3] ? "" : cj[1] === "http:" ? 80 : 443)),
            l.data && l.processData && typeof l.data != "string" && (l.data = p.param(l.data, l.traditional)),
            cA(cv, l, c, x);
            if (v === 2)
                return x;
            j = l.global,
            l.type = l.type.toUpperCase(),
            l.hasContent = !co.test(l.type),
            j && p.active++ === 0 && p.event.trigger("ajaxStart");
            if (!l.hasContent) {
                l.data && (l.url += (cq.test(l.url) ? "&" : "?") + l.data,
                delete l.data),
                d = l.url;
                if (l.cache === !1) {
                    var z = p.now()
                      , A = l.url.replace(cs, "$1_=" + z);
                    l.url = A + (A === l.url ? (cq.test(l.url) ? "&" : "?") + "_=" + z : "")
                }
            }
            (l.data && l.hasContent && l.contentType !== !1 || c.contentType) && x.setRequestHeader("Content-Type", l.contentType),
            l.ifModified && (d = d || l.url,
            p.lastModified[d] && x.setRequestHeader("If-Modified-Since", p.lastModified[d]),
            p.etag[d] && x.setRequestHeader("If-None-Match", p.etag[d])),
            x.setRequestHeader("Accept", l.dataTypes[0] && l.accepts[l.dataTypes[0]] ? l.accepts[l.dataTypes[0]] + (l.dataTypes[0] !== "*" ? ", " + cx + "; q=0.01" : "") : l.accepts["*"]);
            for (k in l.headers)
                x.setRequestHeader(k, l.headers[k]);
            if (!l.beforeSend || l.beforeSend.call(m, x, l) !== !1 && v !== 2) {
                w = "abort";
                for (k in {
                    success: 1,
                    error: 1,
                    complete: 1
                })
                    x[k](l[k]);
                g = cA(cw, l, c, x);
                if (!g)
                    y(-1, "No Transport");
                else {
                    x.readyState = 1,
                    j && n.trigger("ajaxSend", [x, l]),
                    l.async && l.timeout > 0 && (h = setTimeout(function() {
                        x.abort("timeout")
                    }, l.timeout));
                    try {
                        v = 1,
                        g.send(t, y)
                    } catch (B) {
                        if (v < 2)
                            y(-1, B);
                        else
                            throw B
                    }
                }
                return x
            }
            return x.abort()
        },
        active: 0,
        lastModified: {},
        etag: {}
    });
    var cE = []
      , cF = /\?/
      , cG = /(=)\?(?=&|$)|\?\?/
      , cH = p.now();
    p.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var a = cE.pop() || p.expando + "_" + cH++;
            return this[a] = !0,
            a
        }
    }),
    p.ajaxPrefilter("json jsonp", function(c, d, e) {
        var f, g, h, i = c.data, j = c.url, k = c.jsonp !== !1, l = k && cG.test(j), m = k && !l && typeof i == "string" && !(c.contentType || "").indexOf("application/x-www-form-urlencoded") && cG.test(i);
        if (c.dataTypes[0] === "jsonp" || l || m)
            return f = c.jsonpCallback = p.isFunction(c.jsonpCallback) ? c.jsonpCallback() : c.jsonpCallback,
            g = a[f],
            l ? c.url = j.replace(cG, "$1" + f) : m ? c.data = i.replace(cG, "$1" + f) : k && (c.url += (cF.test(j) ? "&" : "?") + c.jsonp + "=" + f),
            c.converters["script json"] = function() {
                return h || p.error(f + " was not called"),
                h[0]
            }
            ,
            c.dataTypes[0] = "json",
            a[f] = function() {
                h = arguments
            }
            ,
            e.always(function() {
                a[f] = g,
                c[f] && (c.jsonpCallback = d.jsonpCallback,
                cE.push(f)),
                h && p.isFunction(g) && g(h[0]),
                h = g = b
            }),
            "script"
    }),
    p.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /javascript|ecmascript/
        },
        converters: {
            "text script": function(a) {
                return p.globalEval(a),
                a
            }
        }
    }),
    p.ajaxPrefilter("script", function(a) {
        a.cache === b && (a.cache = !1),
        a.crossDomain && (a.type = "GET",
        a.global = !1)
    }),
    p.ajaxTransport("script", function(a) {
        if (a.crossDomain) {
            var c, d = e.head || e.getElementsByTagName("head")[0] || e.documentElement;
            return {
                send: function(f, g) {
                    c = e.createElement("script"),
                    c.async = "async",
                    a.scriptCharset && (c.charset = a.scriptCharset),
                    c.src = a.url,
                    c.onload = c.onreadystatechange = function(a, e) {
                        if (e || !c.readyState || /loaded|complete/.test(c.readyState))
                            c.onload = c.onreadystatechange = null,
                            d && c.parentNode && d.removeChild(c),
                            c = b,
                            e || g(200, "success")
                    }
                    ,
                    d.insertBefore(c, d.firstChild)
                },
                abort: function() {
                    c && c.onload(0, 1)
                }
            }
        }
    });
    var cI, cJ = a.ActiveXObject ? function() {
        for (var a in cI)
            cI[a](0, 1)
    }
    : !1, cK = 0;
    p.ajaxSettings.xhr = a.ActiveXObject ? function() {
        return !this.isLocal && cL() || cM()
    }
    : cL,
    function(a) {
        p.extend(p.support, {
            ajax: !!a,
            cors: !!a && "withCredentials"in a
        })
    }(p.ajaxSettings.xhr()),
    p.support.ajax && p.ajaxTransport(function(c) {
        if (!c.crossDomain || p.support.cors) {
            var d;
            return {
                send: function(e, f) {
                    var g, h, i = c.xhr();
                    c.username ? i.open(c.type, c.url, c.async, c.username, c.password) : i.open(c.type, c.url, c.async);
                    if (c.xhrFields)
                        for (h in c.xhrFields)
                            i[h] = c.xhrFields[h];
                    c.mimeType && i.overrideMimeType && i.overrideMimeType(c.mimeType),
                    !c.crossDomain && !e["X-Requested-With"] && (e["X-Requested-With"] = "XMLHttpRequest");
                    try {
                        for (h in e)
                            i.setRequestHeader(h, e[h])
                    } catch (j) {}
                    i.send(c.hasContent && c.data || null),
                    d = function(a, e) {
                        var h, j, k, l, m;
                        try {
                            if (d && (e || i.readyState === 4)) {
                                d = b,
                                g && (i.onreadystatechange = p.noop,
                                cJ && delete cI[g]);
                                if (e)
                                    i.readyState !== 4 && i.abort();
                                else {
                                    h = i.status,
                                    k = i.getAllResponseHeaders(),
                                    l = {},
                                    m = i.responseXML,
                                    m && m.documentElement && (l.xml = m);
                                    try {
                                        l.text = i.responseText
                                    } catch (a) {}
                                    try {
                                        j = i.statusText
                                    } catch (n) {
                                        j = ""
                                    }
                                    !h && c.isLocal && !c.crossDomain ? h = l.text ? 200 : 404 : h === 1223 && (h = 204)
                                }
                            }
                        } catch (o) {
                            e || f(-1, o)
                        }
                        l && f(h, j, l, k)
                    }
                    ,
                    c.async ? i.readyState === 4 ? setTimeout(d, 0) : (g = ++cK,
                    cJ && (cI || (cI = {},
                    p(a).unload(cJ)),
                    cI[g] = d),
                    i.onreadystatechange = d) : d()
                },
                abort: function() {
                    d && d(0, 1)
                }
            }
        }
    });
    var cN, cO, cP = /^(?:toggle|show|hide)$/, cQ = new RegExp("^(?:([-+])=|)(" + q + ")([a-z%]*)$","i"), cR = /queueHooks$/, cS = [cY], cT = {
        "*": [function(a, b) {
            var c, d, e = this.createTween(a, b), f = cQ.exec(b), g = e.cur(), h = +g || 0, i = 1, j = 20;
            if (f) {
                c = +f[2],
                d = f[3] || (p.cssNumber[a] ? "" : "px");
                if (d !== "px" && h) {
                    h = p.css(e.elem, a, !0) || c || 1;
                    do
                        i = i || ".5",
                        h = h / i,
                        p.style(e.elem, a, h + d);
                    while (i !== (i = e.cur() / g) && i !== 1 && --j)
                }
                e.unit = d,
                e.start = h,
                e.end = f[1] ? h + (f[1] + 1) * c : c
            }
            return e
        }
        ]
    };
    p.Animation = p.extend(cW, {
        tweener: function(a, b) {
            p.isFunction(a) ? (b = a,
            a = ["*"]) : a = a.split(" ");
            var c, d = 0, e = a.length;
            for (; d < e; d++)
                c = a[d],
                cT[c] = cT[c] || [],
                cT[c].unshift(b)
        },
        prefilter: function(a, b) {
            b ? cS.unshift(a) : cS.push(a)
        }
    }),
    p.Tween = cZ,
    cZ.prototype = {
        constructor: cZ,
        init: function(a, b, c, d, e, f) {
            this.elem = a,
            this.prop = c,
            this.easing = e || "swing",
            this.options = b,
            this.start = this.now = this.cur(),
            this.end = d,
            this.unit = f || (p.cssNumber[c] ? "" : "px")
        },
        cur: function() {
            var a = cZ.propHooks[this.prop];
            return a && a.get ? a.get(this) : cZ.propHooks._default.get(this)
        },
        run: function(a) {
            var b, c = cZ.propHooks[this.prop];
            return this.options.duration ? this.pos = b = p.easing[this.easing](a, this.options.duration * a, 0, 1, this.options.duration) : this.pos = b = a,
            this.now = (this.end - this.start) * b + this.start,
            this.options.step && this.options.step.call(this.elem, this.now, this),
            c && c.set ? c.set(this) : cZ.propHooks._default.set(this),
            this
        }
    },
    cZ.prototype.init.prototype = cZ.prototype,
    cZ.propHooks = {
        _default: {
            get: function(a) {
                var b;
                return a.elem[a.prop] == null || !!a.elem.style && a.elem.style[a.prop] != null ? (b = p.css(a.elem, a.prop, !1, ""),
                !b || b === "auto" ? 0 : b) : a.elem[a.prop]
            },
            set: function(a) {
                p.fx.step[a.prop] ? p.fx.step[a.prop](a) : a.elem.style && (a.elem.style[p.cssProps[a.prop]] != null || p.cssHooks[a.prop]) ? p.style(a.elem, a.prop, a.now + a.unit) : a.elem[a.prop] = a.now
            }
        }
    },
    cZ.propHooks.scrollTop = cZ.propHooks.scrollLeft = {
        set: function(a) {
            a.elem.nodeType && a.elem.parentNode && (a.elem[a.prop] = a.now)
        }
    },
    p.each(["toggle", "show", "hide"], function(a, b) {
        var c = p.fn[b];
        p.fn[b] = function(d, e, f) {
            return d == null || typeof d == "boolean" || !a && p.isFunction(d) && p.isFunction(e) ? c.apply(this, arguments) : this.animate(c$(b, !0), d, e, f)
        }
    }),
    p.fn.extend({
        fadeTo: function(a, b, c, d) {
            return this.filter(bZ).css("opacity", 0).show().end().animate({
                opacity: b
            }, a, c, d)
        },
        animate: function(a, b, c, d) {
            var e = p.isEmptyObject(a)
              , f = p.speed(b, c, d)
              , g = function() {
                var b = cW(this, p.extend({}, a), f);
                e && b.stop(!0)
            };
            return e || f.queue === !1 ? this.each(g) : this.queue(f.queue, g)
        },
        stop: function(a, c, d) {
            var e = function(a) {
                var b = a.stop;
                delete a.stop,
                b(d)
            };
            return typeof a != "string" && (d = c,
            c = a,
            a = b),
            c && a !== !1 && this.queue(a || "fx", []),
            this.each(function() {
                var b = !0
                  , c = a != null && a + "queueHooks"
                  , f = p.timers
                  , g = p._data(this);
                if (c)
                    g[c] && g[c].stop && e(g[c]);
                else
                    for (c in g)
                        g[c] && g[c].stop && cR.test(c) && e(g[c]);
                for (c = f.length; c--; )
                    f[c].elem === this && (a == null || f[c].queue === a) && (f[c].anim.stop(d),
                    b = !1,
                    f.splice(c, 1));
                (b || !d) && p.dequeue(this, a)
            })
        }
    }),
    p.each({
        slideDown: c$("show"),
        slideUp: c$("hide"),
        slideToggle: c$("toggle"),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(a, b) {
        p.fn[a] = function(a, c, d) {
            return this.animate(b, a, c, d)
        }
    }),
    p.speed = function(a, b, c) {
        var d = a && typeof a == "object" ? p.extend({}, a) : {
            complete: c || !c && b || p.isFunction(a) && a,
            duration: a,
            easing: c && b || b && !p.isFunction(b) && b
        };
        d.duration = p.fx.off ? 0 : typeof d.duration == "number" ? d.duration : d.duration in p.fx.speeds ? p.fx.speeds[d.duration] : p.fx.speeds._default;
        if (d.queue == null || d.queue === !0)
            d.queue = "fx";
        return d.old = d.complete,
        d.complete = function() {
            p.isFunction(d.old) && d.old.call(this),
            d.queue && p.dequeue(this, d.queue)
        }
        ,
        d
    }
    ,
    p.easing = {
        linear: function(a) {
            return a
        },
        swing: function(a) {
            return .5 - Math.cos(a * Math.PI) / 2
        }
    },
    p.timers = [],
    p.fx = cZ.prototype.init,
    p.fx.tick = function() {
        var a, b = p.timers, c = 0;
        for (; c < b.length; c++)
            a = b[c],
            !a() && b[c] === a && b.splice(c--, 1);
        b.length || p.fx.stop()
    }
    ,
    p.fx.timer = function(a) {
        a() && p.timers.push(a) && !cO && (cO = setInterval(p.fx.tick, p.fx.interval))
    }
    ,
    p.fx.interval = 13,
    p.fx.stop = function() {
        clearInterval(cO),
        cO = null
    }
    ,
    p.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
    },
    p.fx.step = {},
    p.expr && p.expr.filters && (p.expr.filters.animated = function(a) {
        return p.grep(p.timers, function(b) {
            return a === b.elem
        }).length
    }
    );
    var c_ = /^(?:body|html)$/i;
    p.fn.offset = function(a) {
        if (arguments.length)
            return a === b ? this : this.each(function(b) {
                p.offset.setOffset(this, a, b)
            });
        var c, d, e, f, g, h, i, j = {
            top: 0,
            left: 0
        }, k = this[0], l = k && k.ownerDocument;
        if (!l)
            return;
        return (d = l.body) === k ? p.offset.bodyOffset(k) : (c = l.documentElement,
        p.contains(c, k) ? (typeof k.getBoundingClientRect != "undefined" && (j = k.getBoundingClientRect()),
        e = da(l),
        f = c.clientTop || d.clientTop || 0,
        g = c.clientLeft || d.clientLeft || 0,
        h = e.pageYOffset || c.scrollTop,
        i = e.pageXOffset || c.scrollLeft,
        {
            top: j.top + h - f,
            left: j.left + i - g
        }) : j)
    }
    ,
    p.offset = {
        bodyOffset: function(a) {
            var b = a.offsetTop
              , c = a.offsetLeft;
            return p.support.doesNotIncludeMarginInBodyOffset && (b += parseFloat(p.css(a, "marginTop")) || 0,
            c += parseFloat(p.css(a, "marginLeft")) || 0),
            {
                top: b,
                left: c
            }
        },
        setOffset: function(a, b, c) {
            var d = p.css(a, "position");
            d === "static" && (a.style.position = "relative");
            var e = p(a), f = e.offset(), g = p.css(a, "top"), h = p.css(a, "left"), i = (d === "absolute" || d === "fixed") && p.inArray("auto", [g, h]) > -1, j = {}, k = {}, l, m;
            i ? (k = e.position(),
            l = k.top,
            m = k.left) : (l = parseFloat(g) || 0,
            m = parseFloat(h) || 0),
            p.isFunction(b) && (b = b.call(a, c, f)),
            b.top != null && (j.top = b.top - f.top + l),
            b.left != null && (j.left = b.left - f.left + m),
            "using"in b ? b.using.call(a, j) : e.css(j)
        }
    },
    p.fn.extend({
        position: function() {
            if (!this[0])
                return;
            var a = this[0]
              , b = this.offsetParent()
              , c = this.offset()
              , d = c_.test(b[0].nodeName) ? {
                top: 0,
                left: 0
            } : b.offset();
            return c.top -= parseFloat(p.css(a, "marginTop")) || 0,
            c.left -= parseFloat(p.css(a, "marginLeft")) || 0,
            d.top += parseFloat(p.css(b[0], "borderTopWidth")) || 0,
            d.left += parseFloat(p.css(b[0], "borderLeftWidth")) || 0,
            {
                top: c.top - d.top,
                left: c.left - d.left
            }
        },
        offsetParent: function() {
            return this.map(function() {
                var a = this.offsetParent || e.body;
                while (a && !c_.test(a.nodeName) && p.css(a, "position") === "static")
                    a = a.offsetParent;
                return a || e.body
            })
        }
    }),
    p.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(a, c) {
        var d = /Y/.test(c);
        p.fn[a] = function(e) {
            return p.access(this, function(a, e, f) {
                var g = da(a);
                if (f === b)
                    return g ? c in g ? g[c] : g.document.documentElement[e] : a[e];
                g ? g.scrollTo(d ? p(g).scrollLeft() : f, d ? f : p(g).scrollTop()) : a[e] = f
            }, a, e, arguments.length, null)
        }
    }),
    p.each({
        Height: "height",
        Width: "width"
    }, function(a, c) {
        p.each({
            padding: "inner" + a,
            content: c,
            "": "outer" + a
        }, function(d, e) {
            p.fn[e] = function(e, f) {
                var g = arguments.length && (d || typeof e != "boolean")
                  , h = d || (e === !0 || f === !0 ? "margin" : "border");
                return p.access(this, function(c, d, e) {
                    var f;
                    return p.isWindow(c) ? c.document.documentElement["client" + a] : c.nodeType === 9 ? (f = c.documentElement,
                    Math.max(c.body["scroll" + a], f["scroll" + a], c.body["offset" + a], f["offset" + a], f["client" + a])) : e === b ? p.css(c, d, e, h) : p.style(c, d, e, h)
                }, c, g ? e : b, g, null)
            }
        })
    }),
    a.jQuery = a.$ = p,
    typeof define == "function" && define.amd && define.amd.jQuery && define("jquery", [], function() {
        return p
    })
}
)(window);
(function(e) {
    function t(t, n, r) {
        var i = this;
        i.id = r,
        i.options = n,
        i.status = {
            animated: !1,
            rendered: !1,
            disabled: !1,
            focused: !1
        },
        i.elements = {
            target: t.addClass(i.options.style.classes.target),
            tooltip: null,
            wrapper: null,
            content: null,
            contentWrapper: null,
            title: null,
            button: null,
            tip: null,
            bgiframe: null
        },
        i.cache = {
            mouse: {},
            position: {},
            toggle: 0
        },
        i.timers = {},
        e.extend(i, i.options.api, {
            show: function(t) {
                function s() {
                    i.options.position.type !== "static" && i.focus(),
                    i.onShow.call(i, t),
                    e.browser.msie && i.elements.tooltip.get(0).style.removeAttribute("filter")
                }
                var n, r;
                if (!i.status.rendered)
                    return e.fn.qtip.log.error.call(i, 2, e.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "show");
                if (i.elements.tooltip.css("display") !== "none")
                    return i;
                i.elements.tooltip.stop(!0, !1),
                n = i.beforeShow.call(i, t);
                if (n === !1)
                    return i;
                i.cache.toggle = 1,
                i.options.position.type !== "static" && i.updatePosition(t, i.options.show.effect.length > 0),
                typeof i.options.show.solo == "object" ? r = e(i.options.show.solo) : i.options.show.solo === !0 && (r = e("div.qtip").not(i.elements.tooltip)),
                r && r.each(function() {
                    e(this).qtip("api").status.rendered === !0 && e(this).qtip("api").hide()
                });
                if (typeof i.options.show.effect.type == "function")
                    i.options.show.effect.type.call(i.elements.tooltip, i.options.show.effect.length),
                    i.elements.tooltip.queue(function() {
                        s(),
                        e(this).dequeue()
                    });
                else {
                    switch (i.options.show.effect.type.toLowerCase()) {
                    case "fade":
                        i.elements.tooltip.fadeIn(i.options.show.effect.length, s);
                        break;
                    case "slide":
                        i.elements.tooltip.slideDown(i.options.show.effect.length, function() {
                            s(),
                            i.options.position.type !== "static" && i.updatePosition(t, !0)
                        });
                        break;
                    case "grow":
                        i.elements.tooltip.show(i.options.show.effect.length, s);
                        break;
                    default:
                        i.elements.tooltip.show(null, s)
                    }
                    i.elements.tooltip.addClass(i.options.style.classes.active)
                }
                return e.fn.qtip.log.error.call(i, 1, e.fn.qtip.constants.EVENT_SHOWN, "show")
            },
            hide: function(t) {
                function r() {
                    i.onHide.call(i, t)
                }
                var n;
                if (!i.status.rendered)
                    return e.fn.qtip.log.error.call(i, 2, e.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "hide");
                if (i.elements.tooltip.css("display") === "none")
                    return i;
                clearTimeout(i.timers.show),
                i.elements.tooltip.stop(!0, !1),
                n = i.beforeHide.call(i, t);
                if (n === !1)
                    return i;
                i.cache.toggle = 0;
                if (typeof i.options.hide.effect.type == "function")
                    i.options.hide.effect.type.call(i.elements.tooltip, i.options.hide.effect.length),
                    i.elements.tooltip.queue(function() {
                        r(),
                        e(this).dequeue()
                    });
                else {
                    switch (i.options.hide.effect.type.toLowerCase()) {
                    case "fade":
                        i.elements.tooltip.fadeOut(i.options.hide.effect.length, r);
                        break;
                    case "slide":
                        i.elements.tooltip.slideUp(i.options.hide.effect.length, r);
                        break;
                    case "grow":
                        i.elements.tooltip.hide(i.options.hide.effect.length, r);
                        break;
                    default:
                        i.elements.tooltip.hide(null, r)
                    }
                    i.elements.tooltip.removeClass(i.options.style.classes.active)
                }
                return e.fn.qtip.log.error.call(i, 1, e.fn.qtip.constants.EVENT_HIDDEN, "hide")
            },
            updatePosition: function(t, n) {
                var r, s, o, u, a, f, l, h, p, d, v, m, y, b;
                if (!i.status.rendered)
                    return e.fn.qtip.log.error.call(i, 2, e.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "updatePosition");
                if (i.options.position.type == "static")
                    return e.fn.qtip.log.error.call(i, 1, e.fn.qtip.constants.CANNOT_POSITION_STATIC, "updatePosition");
                s = {
                    position: {
                        left: 0,
                        top: 0
                    },
                    dimensions: {
                        height: 0,
                        width: 0
                    },
                    corner: i.options.position.corner.target
                },
                o = {
                    position: i.getPosition(),
                    dimensions: i.getDimensions(),
                    corner: i.options.position.corner.tooltip
                };
                if (i.options.position.target !== "mouse") {
                    if (i.options.position.target.get(0).nodeName.toLowerCase() == "area") {
                        u = i.options.position.target.attr("coords").split(",");
                        for (r = 0; r < u.length; r++)
                            u[r] = parseInt(u[r]);
                        a = i.options.position.target.parent("map").attr("name"),
                        f = e('img[usemap="#' + a + '"]:first').offset(),
                        s.position = {
                            left: Math.floor(f.left + u[0]),
                            top: Math.floor(f.top + u[1])
                        };
                        switch (i.options.position.target.attr("shape").toLowerCase()) {
                        case "rect":
                            s.dimensions = {
                                width: Math.ceil(Math.abs(u[2] - u[0])),
                                height: Math.ceil(Math.abs(u[3] - u[1]))
                            };
                            break;
                        case "circle":
                            s.dimensions = {
                                width: u[2] + 1,
                                height: u[2] + 1
                            };
                            break;
                        case "poly":
                            s.dimensions = {
                                width: u[0],
                                height: u[1]
                            };
                            for (r = 0; r < u.length; r++)
                                r % 2 == 0 ? (u[r] > s.dimensions.width && (s.dimensions.width = u[r]),
                                u[r] < u[0] && (s.position.left = Math.floor(f.left + u[r]))) : (u[r] > s.dimensions.height && (s.dimensions.height = u[r]),
                                u[r] < u[1] && (s.position.top = Math.floor(f.top + u[r])));
                            s.dimensions.width = s.dimensions.width - (s.position.left - f.left),
                            s.dimensions.height = s.dimensions.height - (s.position.top - f.top);
                            break;
                        default:
                            return e.fn.qtip.log.error.call(i, 4, e.fn.qtip.constants.INVALID_AREA_SHAPE, "updatePosition")
                        }
                        s.dimensions.width -= 2,
                        s.dimensions.height -= 2
                    } else
                        i.options.position.target.add(document.body).length === 1 ? (s.position = {
                            left: e(document).scrollLeft(),
                            top: e(document).scrollTop()
                        },
                        s.dimensions = {
                            height: e(window).height(),
                            width: e(window).width()
                        }) : (typeof i.options.position.target.attr("qtip") != "undefined" ? s.position = i.options.position.target.qtip("api").cache.position : s.position = i.options.position.target.offset(),
                        s.dimensions = {
                            height: i.options.position.target.outerHeight(),
                            width: i.options.position.target.outerWidth()
                        });
                    l = e.extend({}, s.position),
                    s.corner.search(/right/i) !== -1 && (l.left += s.dimensions.width),
                    s.corner.search(/bottom/i) !== -1 && (l.top += s.dimensions.height),
                    s.corner.search(/((top|bottom)Middle)|center/) !== -1 && (l.left += s.dimensions.width / 2),
                    s.corner.search(/((left|right)Middle)|center/) !== -1 && (l.top += s.dimensions.height / 2)
                } else
                    s.position = l = {
                        left: i.cache.mouse.x,
                        top: i.cache.mouse.y
                    },
                    s.dimensions = {
                        height: 1,
                        width: 1
                    };
                o.corner.search(/right/i) !== -1 && (l.left -= o.dimensions.width),
                o.corner.search(/bottom/i) !== -1 && (l.top -= o.dimensions.height),
                o.corner.search(/((top|bottom)Middle)|center/) !== -1 && (l.left -= o.dimensions.width / 2),
                o.corner.search(/((left|right)Middle)|center/) !== -1 && (l.top -= o.dimensions.height / 2),
                h = e.browser.msie ? 1 : 0,
                p = e.browser.msie && parseInt(e.browser.version.charAt(0)) === 6 ? 1 : 0,
                i.options.style.border.radius > 0 && (o.corner.search(/Left/) !== -1 ? l.left -= i.options.style.border.radius : o.corner.search(/Right/) !== -1 && (l.left += i.options.style.border.radius),
                o.corner.search(/Top/) !== -1 ? l.top -= i.options.style.border.radius : o.corner.search(/Bottom/) !== -1 && (l.top += i.options.style.border.radius)),
                h && (o.corner.search(/top/) !== -1 ? l.top -= h : o.corner.search(/bottom/) !== -1 && (l.top += h),
                o.corner.search(/left/) !== -1 ? l.left -= h : o.corner.search(/right/) !== -1 && (l.left += h),
                o.corner.search(/leftMiddle|rightMiddle/) !== -1 && (l.top -= 1)),
                i.options.position.adjust.screen === !0 && (l = c.call(i, l, s, o)),
                i.options.position.target === "mouse" && i.options.position.adjust.mouse === !0 && (i.options.position.adjust.screen === !0 && i.elements.tip ? v = i.elements.tip.attr("rel") : v = i.options.position.corner.tooltip,
                l.left += v.search(/right/i) !== -1 ? -6 : 6,
                l.top += v.search(/bottom/i) !== -1 ? -6 : 6),
                !i.elements.bgiframe && e.browser.msie && parseInt(e.browser.version.charAt(0)) == 6 && e("select, object").each(function() {
                    m = e(this).offset(),
                    m.bottom = m.top + e(this).height(),
                    m.right = m.left + e(this).width(),
                    l.top + o.dimensions.height >= m.top && l.left + o.dimensions.width >= m.left && g.call(i)
                }),
                l.left += i.options.position.adjust.x,
                l.top += i.options.position.adjust.y,
                y = i.getPosition();
                if (l.left != y.left || l.top != y.top) {
                    b = i.beforePositionUpdate.call(i, t);
                    if (b === !1)
                        return i;
                    i.cache.position = l,
                    n === !0 ? (i.status.animated = !0,
                    i.elements.tooltip.animate(l, 200, "swing", function() {
                        i.status.animated = !1
                    })) : i.elements.tooltip.css(l),
                    i.onPositionUpdate.call(i, t),
                    typeof t != "undefined" && t.type && t.type !== "mousemove" && e.fn.qtip.log.error.call(i, 1, e.fn.qtip.constants.EVENT_POSITION_UPDATED, "updatePosition")
                }
                return i
            },
            updateWidth: function(t) {
                var n;
                return i.status.rendered ? t && typeof t != "number" ? e.fn.qtip.log.error.call(i, 2, "newWidth must be of type number", "updateWidth") : (n = i.elements.contentWrapper.siblings().add(i.elements.tip).add(i.elements.button),
                t || (typeof i.options.style.width.value == "number" ? t = i.options.style.width.value : (i.elements.tooltip.css({
                    width: "auto"
                }),
                n.hide(),
                e.browser.msie && i.elements.wrapper.add(i.elements.contentWrapper.children()).css({
                    zoom: "normal"
                }),
                t = i.getDimensions().width + 1,
                i.options.style.width.value || (t > i.options.style.width.max && (t = i.options.style.width.max),
                t < i.options.style.width.min && (t = i.options.style.width.min)))),
                t % 2 !== 0 && (t -= 1),
                i.elements.tooltip.width(t),
                n.show(),
                i.options.style.border.radius && i.elements.tooltip.find(".qtip-betweenCorners").each(function(n) {
                    e(this).width(t - i.options.style.border.radius * 2)
                }),
                e.browser.msie && (i.elements.wrapper.add(i.elements.contentWrapper.children()).css({
                    zoom: "1"
                }),
                i.elements.wrapper.width(t),
                i.elements.bgiframe && i.elements.bgiframe.width(t).height(i.getDimensions.height)),
                e.fn.qtip.log.error.call(i, 1, e.fn.qtip.constants.EVENT_WIDTH_UPDATED, "updateWidth")) : e.fn.qtip.log.error.call(i, 2, e.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "updateWidth")
            },
            updateStyle: function(t) {
                var n, r, o, a, f;
                return i.status.rendered ? typeof t != "string" || !e.fn.qtip.styles[t] ? e.fn.qtip.log.error.call(i, 2, e.fn.qtip.constants.STYLE_NOT_DEFINED, "updateStyle") : (i.options.style = d.call(i, e.fn.qtip.styles[t], i.options.user.style),
                i.elements.content.css(h(i.options.style)),
                i.options.content.title.text !== !1 && i.elements.title.css(h(i.options.style.title, !0)),
                i.elements.contentWrapper.css({
                    borderColor: i.options.style.border.color
                }),
                i.options.style.tip.corner !== !1 && (e("<canvas>").get(0).getContext ? (n = i.elements.tooltip.find(".qtip-tip canvas:first"),
                o = n.get(0).getContext("2d"),
                o.clearRect(0, 0, 300, 300),
                a = n.parent("div[rel]:first").attr("rel"),
                f = v(a, i.options.style.tip.size.width, i.options.style.tip.size.height),
                u.call(i, n, f, i.options.style.tip.color || i.options.style.border.color)) : e.browser.msie && (n = i.elements.tooltip.find('.qtip-tip [nodeName="shape"]'),
                n.attr("fillcolor", i.options.style.tip.color || i.options.style.border.color))),
                i.options.style.border.radius > 0 && (i.elements.tooltip.find(".qtip-betweenCorners").css({
                    backgroundColor: i.options.style.border.color
                }),
                e("<canvas>").get(0).getContext ? (r = m(i.options.style.border.radius),
                i.elements.tooltip.find(".qtip-wrapper canvas").each(function() {
                    o = e(this).get(0).getContext("2d"),
                    o.clearRect(0, 0, 300, 300),
                    a = e(this).parent("div[rel]:first").attr("rel"),
                    s.call(i, e(this), r[a], i.options.style.border.radius, i.options.style.border.color)
                })) : e.browser.msie && i.elements.tooltip.find('.qtip-wrapper [nodeName="arc"]').each(function() {
                    e(this).attr("fillcolor", i.options.style.border.color)
                })),
                e.fn.qtip.log.error.call(i, 1, e.fn.qtip.constants.EVENT_STYLE_UPDATED, "updateStyle")) : e.fn.qtip.log.error.call(i, 2, e.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "updateStyle")
            },
            updateContent: function(t, n) {
                function u() {
                    i.updateWidth(),
                    n !== !1 && (i.options.position.type !== "static" && i.updatePosition(i.elements.tooltip.is(":visible"), !0),
                    i.options.style.tip.corner !== !1 && a.call(i))
                }
                var r, s, o;
                if (!i.status.rendered)
                    return e.fn.qtip.log.error.call(i, 2, e.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "updateContent");
                if (!t)
                    return e.fn.qtip.log.error.call(i, 2, e.fn.qtip.constants.NO_CONTENT_PROVIDED, "updateContent");
                r = i.beforeContentUpdate.call(i, t);
                if (typeof r == "string")
                    t = r;
                else if (r === !1)
                    return;
                return e.browser.msie && i.elements.contentWrapper.children().css({
                    zoom: "normal"
                }),
                t.jquery && t.length > 0 ? t.clone(!0).appendTo(i.elements.content).show() : i.elements.content.html(t),
                s = i.elements.content.find("img[complete=false]"),
                s.length > 0 ? (o = 0,
                s.each(function(t) {
                    e('<img src="' + e(this).attr("src") + '" />').load(function() {
                        ++o == s.length && u()
                    })
                })) : u(),
                i.onContentUpdate.call(i),
                e.fn.qtip.log.error.call(i, 1, e.fn.qtip.constants.EVENT_CONTENT_UPDATED, "loadContent")
            },
            loadContent: function(t, n, r) {
                function o(t) {
                    i.onContentLoad.call(i),
                    e.fn.qtip.log.error.call(i, 1, e.fn.qtip.constants.EVENT_CONTENT_LOADED, "loadContent"),
                    i.updateContent(t)
                }
                var s;
                return i.status.rendered ? (s = i.beforeContentLoad.call(i),
                s === !1 ? i : (r == "post" ? e.post(t, n, o) : e.get(t, n, o),
                i)) : e.fn.qtip.log.error.call(i, 2, e.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "loadContent")
            },
            updateTitle: function(t) {
                return i.status.rendered ? t ? (returned = i.beforeTitleUpdate.call(i),
                returned === !1 ? i : (i.elements.button && (i.elements.button = i.elements.button.clone(!0)),
                i.elements.title.html(t),
                i.elements.button && i.elements.title.prepend(i.elements.button),
                i.onTitleUpdate.call(i),
                e.fn.qtip.log.error.call(i, 1, e.fn.qtip.constants.EVENT_TITLE_UPDATED, "updateTitle"))) : e.fn.qtip.log.error.call(i, 2, e.fn.qtip.constants.NO_CONTENT_PROVIDED, "updateTitle") : e.fn.qtip.log.error.call(i, 2, e.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "updateTitle")
            },
            focus: function(t) {
                var n, r, s, o;
                if (!i.status.rendered)
                    return e.fn.qtip.log.error.call(i, 2, e.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "focus");
                if (i.options.position.type == "static")
                    return e.fn.qtip.log.error.call(i, 1, e.fn.qtip.constants.CANNOT_FOCUS_STATIC, "focus");
                n = parseInt(i.elements.tooltip.css("z-index")),
                r = 10001 + e("div.qtip[qtip]").length - 1;
                if (!i.status.focused && n !== r) {
                    o = i.beforeFocus.call(i, t);
                    if (o === !1)
                        return i;
                    e("div.qtip[qtip]").not(i.elements.tooltip).each(function() {
                        e(this).qtip("api").status.rendered === !0 && (s = parseInt(e(this).css("z-index")),
                        typeof s == "number" && s > -1 && e(this).css({
                            zIndex: parseInt(e(this).css("z-index")) - 1
                        }),
                        e(this).qtip("api").status.focused = !1)
                    }),
                    i.elements.tooltip.css({
                        zIndex: r
                    }),
                    i.status.focused = !0,
                    i.onFocus.call(i, t),
                    e.fn.qtip.log.error.call(i, 1, e.fn.qtip.constants.EVENT_FOCUSED, "focus")
                }
                return i
            },
            disable: function(t) {
                return i.status.rendered ? (t ? i.status.disabled ? e.fn.qtip.log.error.call(i, 1, e.fn.qtip.constants.TOOLTIP_ALREADY_DISABLED, "disable") : (i.status.disabled = !0,
                e.fn.qtip.log.error.call(i, 1, e.fn.qtip.constants.EVENT_DISABLED, "disable")) : i.status.disabled ? (i.status.disabled = !1,
                e.fn.qtip.log.error.call(i, 1, e.fn.qtip.constants.EVENT_ENABLED, "disable")) : e.fn.qtip.log.error.call(i, 1, e.fn.qtip.constants.TOOLTIP_ALREADY_ENABLED, "disable"),
                i) : e.fn.qtip.log.error.call(i, 2, e.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "disable")
            },
            destroy: function() {
                var t, n, r;
                n = i.beforeDestroy.call(i);
                if (n === !1)
                    return i;
                i.status.rendered ? (i.options.show.when.target.unbind("mousemove.qtip", i.updatePosition),
                i.options.show.when.target.unbind("mouseout.qtip", i.hide),
                i.options.show.when.target.unbind(i.options.show.when.event + ".qtip"),
                i.options.hide.when.target.unbind(i.options.hide.when.event + ".qtip"),
                i.elements.tooltip.unbind(i.options.hide.when.event + ".qtip"),
                i.elements.tooltip.unbind("mouseover.qtip", i.focus),
                i.elements.tooltip.remove()) : i.options.show.when.target.unbind(i.options.show.when.event + ".qtip-create");
                if (typeof i.elements.target.data("qtip") == "object") {
                    r = i.elements.target.data("qtip").interfaces;
                    if (typeof r == "object" && r.length > 0)
                        for (t = 0; t < r.length - 1; t++)
                            r[t].id == i.id && r.splice(t, 1)
                }
                return delete e.fn.qtip.interfaces[i.id],
                typeof r == "object" && r.length > 0 ? i.elements.target.data("qtip").current = r.length - 1 : i.elements.target.removeData("qtip"),
                i.onDestroy.call(i),
                e.fn.qtip.log.error.call(i, 1, e.fn.qtip.constants.EVENT_DESTROYED, "destroy"),
                i.elements.target
            },
            getPosition: function() {
                var t, n;
                return i.status.rendered ? (t = i.elements.tooltip.css("display") !== "none" ? !1 : !0,
                t && i.elements.tooltip.css({
                    visiblity: "hidden"
                }).show(),
                n = i.elements.tooltip.offset(),
                t && i.elements.tooltip.css({
                    visiblity: "visible"
                }).hide(),
                n) : e.fn.qtip.log.error.call(i, 2, e.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "getPosition")
            },
            getDimensions: function() {
                var t, n;
                return i.status.rendered ? (t = i.elements.tooltip.is(":visible") ? !1 : !0,
                t && i.elements.tooltip.css({
                    visiblity: "hidden"
                }).show(),
                n = {
                    height: i.elements.tooltip.outerHeight(),
                    width: i.elements.tooltip.outerWidth()
                },
                t && i.elements.tooltip.css({
                    visiblity: "visible"
                }).hide(),
                n) : e.fn.qtip.log.error.call(i, 2, e.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "getDimensions")
            }
        })
    }
    function n() {
        var t, n, i, s, u, a, c;
        t = this,
        t.beforeRender.call(t),
        t.status.rendered = !0,
        t.elements.tooltip = '<div qtip="' + t.id + '" ' + 'class="qtip ' + (t.options.style.classes.tooltip || t.options.style) + '"' + 'style="display:none; -moz-border-radius:0; -webkit-border-radius:0; border-radius:0;' + "position:" + t.options.position.type + ';">' + '  <div class="qtip-wrapper" style="position:relative; overflow:hidden; text-align:left;">' + '    <div class="qtip-contentWrapper" style="overflow:hidden;">' + '       <div class="qtip-content ' + t.options.style.classes.content + '"></div>' + "</div></div></div>",
        t.elements.tooltip = e(t.elements.tooltip),
        t.elements.tooltip.appendTo(t.options.position.container),
        t.elements.tooltip.data("qtip", {
            current: 0,
            interfaces: [t]
        }),
        t.elements.wrapper = t.elements.tooltip.children("div:first"),
        t.elements.contentWrapper = t.elements.wrapper.children("div:first").css({
            background: t.options.style.background
        }),
        t.elements.content = t.elements.contentWrapper.children("div:first").css(h(t.options.style)),
        e.browser.msie && t.elements.wrapper.add(t.elements.content).css({
            zoom: 1
        }),
        t.options.hide.when.event == "unfocus" && t.elements.tooltip.attr("unfocus", !0),
        typeof t.options.style.width.value == "number" && t.updateWidth(),
        e("<canvas>").get(0).getContext || e.browser.msie ? (t.options.style.border.radius > 0 ? r.call(t) : t.elements.contentWrapper.css({
            border: t.options.style.border.width + "px solid " + t.options.style.border.color
        }),
        t.options.style.tip.corner !== !1 && o.call(t)) : (t.elements.contentWrapper.css({
            border: t.options.style.border.width + "px solid " + t.options.style.border.color
        }),
        t.options.style.border.radius = 0,
        t.options.style.tip.corner = !1,
        e.fn.qtip.log.error.call(t, 2, e.fn.qtip.constants.CANVAS_VML_NOT_SUPPORTED, "render")),
        typeof t.options.content.text == "string" && t.options.content.text.length > 0 || t.options.content.text.jquery && t.options.content.text.length > 0 ? i = t.options.content.text : typeof t.elements.target.attr("title") == "string" && t.elements.target.attr("title").length > 0 ? (i = t.elements.target.attr("title").replace("\\n", "<br />"),
        t.elements.target.attr("title", "")) : typeof t.elements.target.attr("alt") == "string" && t.elements.target.attr("alt").length > 0 ? (i = t.elements.target.attr("alt").replace("\\n", "<br />"),
        t.elements.target.attr("alt", "")) : (i = " ",
        e.fn.qtip.log.error.call(t, 1, e.fn.qtip.constants.NO_VALID_CONTENT, "render")),
        t.options.content.title.text !== !1 && f.call(t),
        t.updateContent(i),
        l.call(t),
        t.options.show.ready === !0 && t.show(),
        t.options.content.url !== !1 && (s = t.options.content.url,
        u = t.options.content.data,
        a = t.options.content.method || "get",
        t.loadContent(s, u, a)),
        t.onRender.call(t),
        e.fn.qtip.log.error.call(t, 1, e.fn.qtip.constants.EVENT_RENDERED, "render")
    }
    function r() {
        var t, n, r, i, o, u, a, f, l, c, h, p, d, v, g;
        t = this,
        t.elements.wrapper.find(".qtip-borderBottom, .qtip-borderTop").remove(),
        r = t.options.style.border.width,
        i = t.options.style.border.radius,
        o = t.options.style.border.color || t.options.style.tip.color,
        u = m(i),
        a = {};
        for (n in u)
            a[n] = '<div rel="' + n + '" style="' + (n.search(/Left/) !== -1 ? "left" : "right") + ":0; " + "position:absolute; height:" + i + "px; width:" + i + 'px; overflow:hidden; line-height:0.1px; font-size:1px">',
            e("<canvas>").get(0).getContext ? a[n] += '<canvas height="' + i + '" width="' + i + '" style="vertical-align: top"></canvas>' : e.browser.msie && (f = i * 2 + 3,
            a[n] += '<v:arc stroked="false" fillcolor="' + o + '" startangle="' + u[n][0] + '" endangle="' + u[n][1] + '" ' + 'style="width:' + f + "px; height:" + f + "px; margin-top:" + (n.search(/bottom/) !== -1 ? -2 : -1) + "px; " + "margin-left:" + (n.search(/Right/) !== -1 ? u[n][2] - 3.5 : -1) + "px; " + 'vertical-align:top; display:inline-block; behavior:url(#default#VML)"></v:arc>'),
            a[n] += "</div>";
        l = t.getDimensions().width - Math.max(r, i) * 2,
        c = '<div class="qtip-betweenCorners" style="height:' + i + "px; width:" + l + "px; " + "overflow:hidden; background-color:" + o + '; line-height:0.1px; font-size:1px;">',
        h = '<div class="qtip-borderTop" dir="ltr" style="height:' + i + "px; " + "margin-left:" + i + 'px; line-height:0.1px; font-size:1px; padding:0;">' + a.topLeft + a.topRight + c,
        t.elements.wrapper.prepend(h),
        p = '<div class="qtip-borderBottom" dir="ltr" style="height:' + i + "px; " + "margin-left:" + i + 'px; line-height:0.1px; font-size:1px; padding:0;">' + a.bottomLeft + a.bottomRight + c,
        t.elements.wrapper.append(p),
        e("<canvas>").get(0).getContext ? t.elements.wrapper.find("canvas").each(function() {
            d = u[e(this).parent("[rel]:first").attr("rel")],
            s.call(t, e(this), d, i, o)
        }) : e.browser.msie && t.elements.tooltip.append('<v:image style="behavior:url(#default#VML);"></v:image>'),
        v = Math.max(i, i + (r - i)),
        g = Math.max(r - i, 0),
        t.elements.contentWrapper.css({
            border: "0px solid " + o,
            borderWidth: g + "px " + v + "px"
        })
    }
    function s(e, t, n, r) {
        var i = e.get(0).getContext("2d");
        i.fillStyle = r,
        i.beginPath(),
        i.arc(t[0], t[1], n, 0, Math.PI * 2, !1),
        i.fill()
    }
    function o(t) {
        var n, r, i, s, o;
        n = this,
        n.elements.tip !== null && n.elements.tip.remove(),
        r = n.options.style.tip.color || n.options.style.border.color;
        if (n.options.style.tip.corner === !1)
            return;
        t || (t = n.options.style.tip.corner),
        i = v(t, n.options.style.tip.size.width, n.options.style.tip.size.height),
        n.elements.tip = '<div class="' + n.options.style.classes.tip + '" dir="ltr" rel="' + t + '" style="position:absolute; ' + "height:" + n.options.style.tip.size.height + "px; width:" + n.options.style.tip.size.width + "px; " + 'margin:0 auto; line-height:0.1px; font-size:1px;">',
        e("<canvas>").get(0).getContext ? n.elements.tip += '<canvas height="' + n.options.style.tip.size.height + '" width="' + n.options.style.tip.size.width + '"></canvas>' : e.browser.msie && (s = n.options.style.tip.size.width + "," + n.options.style.tip.size.height,
        o = "m" + i[0][0] + "," + i[0][1],
        o += " l" + i[1][0] + "," + i[1][1],
        o += " " + i[2][0] + "," + i[2][1],
        o += " xe",
        n.elements.tip += '<v:shape fillcolor="' + r + '" stroked="false" filled="true" path="' + o + '" coordsize="' + s + '" ' + 'style="width:' + n.options.style.tip.size.width + "px; height:" + n.options.style.tip.size.height + "px; " + "line-height:0.1px; display:inline-block; behavior:url(#default#VML); " + "vertical-align:" + (t.search(/top/) !== -1 ? "bottom" : "top") + '"></v:shape>',
        n.elements.tip += '<v:image style="behavior:url(#default#VML);"></v:image>',
        n.elements.contentWrapper.css("position", "relative")),
        n.elements.tooltip.prepend(n.elements.tip + "</div>"),
        n.elements.tip = n.elements.tooltip.find("." + n.options.style.classes.tip).eq(0),
        e("<canvas>").get(0).getContext && u.call(n, n.elements.tip.find("canvas:first"), i, r),
        t.search(/top/) !== -1 && e.browser.msie && parseInt(e.browser.version.charAt(0)) === 6 && n.elements.tip.css({
            marginTop: -4
        }),
        a.call(n, t)
    }
    function u(e, t, n) {
        var r = e.get(0).getContext("2d");
        r.fillStyle = n,
        r.beginPath(),
        r.moveTo(t[0][0], t[0][1]),
        r.lineTo(t[1][0], t[1][1]),
        r.lineTo(t[2][0], t[2][1]),
        r.fill()
    }
    function a(t) {
        var n, r, i, s, o;
        n = this;
        if (n.options.style.tip.corner === !1 || !n.elements.tip)
            return;
        t || (t = n.elements.tip.attr("rel")),
        r = positionAdjust = e.browser.msie ? 1 : 0,
        n.elements.tip.css(t.match(/left|right|top|bottom/)[0], 0),
        t.search(/top|bottom/) !== -1 ? (e.browser.msie && (parseInt(e.browser.version.charAt(0)) === 6 ? positionAdjust = t.search(/top/) !== -1 ? -3 : 1 : positionAdjust = t.search(/top/) !== -1 ? 1 : 2),
        t.search(/Middle/) !== -1 ? n.elements.tip.css({
            left: "50%",
            marginLeft: -(n.options.style.tip.size.width / 2)
        }) : t.search(/Left/) !== -1 ? n.elements.tip.css({
            left: n.options.style.border.radius - r
        }) : t.search(/Right/) !== -1 && n.elements.tip.css({
            right: n.options.style.border.radius + r
        }),
        t.search(/top/) !== -1 ? n.elements.tip.css({
            top: -positionAdjust
        }) : n.elements.tip.css({
            bottom: positionAdjust
        })) : t.search(/left|right/) !== -1 && (e.browser.msie && (positionAdjust = parseInt(e.browser.version.charAt(0)) === 6 ? 1 : t.search(/left/) !== -1 ? 1 : 2),
        t.search(/Middle/) !== -1 ? n.elements.tip.css({
            top: "50%",
            marginTop: -(n.options.style.tip.size.height / 2)
        }) : t.search(/Top/) !== -1 ? n.elements.tip.css({
            top: n.options.style.border.radius - r
        }) : t.search(/Bottom/) !== -1 && n.elements.tip.css({
            bottom: n.options.style.border.radius + r
        }),
        t.search(/left/) !== -1 ? n.elements.tip.css({
            left: -positionAdjust
        }) : n.elements.tip.css({
            right: positionAdjust
        })),
        i = "padding-" + t.match(/left|right|top|bottom/)[0],
        s = n.options.style.tip.size[i.search(/left|right/) !== -1 ? "width" : "height"],
        n.elements.tooltip.css("padding", 0),
        n.elements.tooltip.css(i, s),
        e.browser.msie && parseInt(e.browser.version.charAt(0)) == 6 && (o = parseInt(n.elements.tip.css("margin-top")) || 0,
        o += parseInt(n.elements.content.css("margin-top")) || 0,
        n.elements.tip.css({
            marginTop: o
        }))
    }
    function f() {
        var t = this;
        t.elements.title !== null && t.elements.title.remove(),
        t.elements.title = e('<div class="' + t.options.style.classes.title + '">').css(h(t.options.style.title, !0)).css({
            zoom: e.browser.msie ? 1 : 0
        }).prependTo(t.elements.contentWrapper),
        t.options.content.title.text && t.updateTitle.call(t, t.options.content.title.text),
        t.options.content.title.button !== !1 && typeof t.options.content.title.button == "string" && (t.elements.button = e('<a class="' + t.options.style.classes.button + '" style="float:right; position: relative"></a>').css(h(t.options.style.button, !0)).html(t.options.content.title.button).prependTo(t.elements.title).click(function(e) {
            t.status.disabled || t.hide(e)
        }))
    }
    function l() {
        function o(n) {
            if (t.status.disabled === !0)
                return;
            t.options.hide.when.event == "inactive" && (e(i).each(function() {
                r.bind(this + ".qtip-inactive", s),
                t.elements.content.bind(this + ".qtip-inactive", s)
            }),
            s()),
            clearTimeout(t.timers.show),
            clearTimeout(t.timers.hide),
            t.timers.show = setTimeout(function() {
                t.show(n)
            }, t.options.show.delay)
        }
        function u(n) {
            if (t.status.disabled === !0)
                return;
            if (t.options.hide.fixed === !0 && t.options.hide.when.event.search(/mouse(out|leave)/i) !== -1 && e(n.relatedTarget).parents("div.qtip[qtip]").length > 0)
                return n.stopPropagation(),
                n.preventDefault(),
                clearTimeout(t.timers.hide),
                !1;
            clearTimeout(t.timers.show),
            clearTimeout(t.timers.hide),
            t.elements.tooltip.stop(!0, !0),
            t.timers.hide = setTimeout(function() {
                t.hide(n)
            }, t.options.hide.delay)
        }
        var t, n, r, i;
        t = this,
        n = t.options.show.when.target,
        r = t.options.hide.when.target,
        t.options.hide.fixed && (r = r.add(t.elements.tooltip));
        if (t.options.hide.when.event == "inactive") {
            i = ["click", "dblclick", "mousedown", "mouseup", "mousemove", "mouseout", "mouseenter", "mouseleave", "mouseover"];
            function s(n) {
                if (t.status.disabled === !0)
                    return;
                clearTimeout(t.timers.inactive),
                t.timers.inactive = setTimeout(function() {
                    e(i).each(function() {
                        r.unbind(this + ".qtip-inactive"),
                        t.elements.content.unbind(this + ".qtip-inactive")
                    }),
                    t.hide(n)
                }, t.options.hide.delay)
            }
        } else
            t.options.hide.fixed === !0 && t.elements.tooltip.bind("mouseover.qtip", function() {
                if (t.status.disabled === !0)
                    return;
                clearTimeout(t.timers.hide)
            });
        t.options.show.when.target.add(t.options.hide.when.target).length === 1 && t.options.show.when.event == t.options.hide.when.event && t.options.hide.when.event !== "inactive" || t.options.hide.when.event == "unfocus" ? (t.cache.toggle = 0,
        n.bind(t.options.show.when.event + ".qtip", function(e) {
            t.cache.toggle == 0 ? o(e) : u(e)
        })) : (n.bind(t.options.show.when.event + ".qtip", o),
        t.options.hide.when.event !== "inactive" && r.bind(t.options.hide.when.event + ".qtip", u)),
        t.options.position.type.search(/(fixed|absolute)/) !== -1 && t.elements.tooltip.bind("mouseover.qtip", t.focus),
        t.options.position.target === "mouse" && t.options.position.type !== "static" && n.bind("mousemove.qtip", function(e) {
            t.cache.mouse = {
                x: e.pageX,
                y: e.pageY
            },
            t.status.disabled === !1 && t.options.position.adjust.mouse === !0 && t.options.position.type !== "static" && t.elements.tooltip.css("display") !== "none" && t.updatePosition(e)
        })
    }
    function c(t, n, r) {
        var i, s, u, a, f, l;
        return i = this,
        r.corner == "center" ? n.position : (s = e.extend({}, t),
        a = {
            x: !1,
            y: !1
        },
        f = {
            left: s.left < e.fn.qtip.cache.screen.scroll.left,
            right: s.left + r.dimensions.width + 2 >= e.fn.qtip.cache.screen.width + e.fn.qtip.cache.screen.scroll.left,
            top: s.top < e.fn.qtip.cache.screen.scroll.top,
            bottom: s.top + r.dimensions.height + 2 >= e.fn.qtip.cache.screen.height + e.fn.qtip.cache.screen.scroll.top
        },
        u = {
            left: f.left && (r.corner.search(/right/i) != -1 || r.corner.search(/right/i) == -1 && !f.right),
            right: f.right && (r.corner.search(/left/i) != -1 || r.corner.search(/left/i) == -1 && !f.left),
            top: f.top && r.corner.search(/top/i) == -1,
            bottom: f.bottom && r.corner.search(/bottom/i) == -1
        },
        u.left ? (i.options.position.target !== "mouse" ? s.left = n.position.left + n.dimensions.width : s.left = i.cache.mouse.x,
        a.x = "Left") : u.right && (i.options.position.target !== "mouse" ? s.left = n.position.left - r.dimensions.width : s.left = i.cache.mouse.x - r.dimensions.width,
        a.x = "Right"),
        u.top ? (i.options.position.target !== "mouse" ? s.top = n.position.top + n.dimensions.height : s.top = i.cache.mouse.y,
        a.y = "top") : u.bottom && (i.options.position.target !== "mouse" ? s.top = n.position.top - r.dimensions.height : s.top = i.cache.mouse.y - r.dimensions.height,
        a.y = "bottom"),
        s.left < 0 && (s.left = t.left,
        a.x = !1),
        s.top < 0 && (s.top = t.top,
        a.y = !1),
        i.options.style.tip.corner !== !1 && (s.corner = new String(r.corner),
        a.x !== !1 && (s.corner = s.corner.replace(/Left|Right|Middle/, a.x)),
        a.y !== !1 && (s.corner = s.corner.replace(/top|bottom/, a.y)),
        s.corner !== i.elements.tip.attr("rel") && o.call(i, s.corner)),
        s)
    }
    function h(t, n) {
        var r, i;
        r = e.extend(!0, {}, t);
        for (i in r)
            n === !0 && i.search(/(tip|classes)/i) !== -1 ? delete r[i] : !n && i.search(/(width|border|tip|title|classes|user)/i) !== -1 && delete r[i];
        return r
    }
    function p(e) {
        return typeof e.tip != "object" && (e.tip = {
            corner: e.tip
        }),
        typeof e.tip.size != "object" && (e.tip.size = {
            width: e.tip.size,
            height: e.tip.size
        }),
        typeof e.border != "object" && (e.border = {
            width: e.border
        }),
        typeof e.width != "object" && (e.width = {
            value: e.width
        }),
        typeof e.width.max == "string" && (e.width.max = parseInt(e.width.max.replace(/([0-9]+)/i, "$1"))),
        typeof e.width.min == "string" && (e.width.min = parseInt(e.width.min.replace(/([0-9]+)/i, "$1"))),
        typeof e.tip.size.x == "number" && (e.tip.size.width = e.tip.size.x,
        delete e.tip.size.x),
        typeof e.tip.size.y == "number" && (e.tip.size.height = e.tip.size.y,
        delete e.tip.size.y),
        e
    }
    function d() {
        var t, n, r, i, s, o;
        t = this,
        r = [!0, {}];
        for (n = 0; n < arguments.length; n++)
            r.push(arguments[n]);
        i = [e.extend.apply(e, r)];
        while (typeof i[0].name == "string")
            i.unshift(p(e.fn.qtip.styles[i[0].name]));
        return i.unshift(!0, {
            classes: {
                tooltip: "qtip-" + (arguments[0].name || "defaults")
            }
        }, e.fn.qtip.styles.defaults),
        s = e.extend.apply(e, i),
        o = e.browser.msie ? 1 : 0,
        s.tip.size.width += o,
        s.tip.size.height += o,
        s.tip.size.width % 2 > 0 && (s.tip.size.width += 1),
        s.tip.size.height % 2 > 0 && (s.tip.size.height += 1),
        s.tip.corner === !0 && (s.tip.corner = t.options.position.corner.tooltip === "center" ? !1 : t.options.position.corner.tooltip),
        s
    }
    function v(e, t, n) {
        var r = {
            bottomRight: [[0, 0], [t, n], [t, 0]],
            bottomLeft: [[0, 0], [t, 0], [0, n]],
            topRight: [[0, n], [t, 0], [t, n]],
            topLeft: [[0, 0], [0, n], [t, n]],
            topMiddle: [[0, n], [t / 2, 0], [t, n]],
            bottomMiddle: [[0, 0], [t, 0], [t / 2, n]],
            rightMiddle: [[0, 0], [t, n / 2], [0, n]],
            leftMiddle: [[t, 0], [t, n], [0, n / 2]]
        };
        return r.leftTop = r.bottomRight,
        r.rightTop = r.bottomLeft,
        r.leftBottom = r.topRight,
        r.rightBottom = r.topLeft,
        r[e]
    }
    function m(t) {
        var n;
        return e("<canvas>").get(0).getContext ? n = {
            topLeft: [t, t],
            topRight: [0, t],
            bottomLeft: [t, 0],
            bottomRight: [0, 0]
        } : e.browser.msie && (n = {
            topLeft: [-90, 90, 0],
            topRight: [-90, 90, -t],
            bottomLeft: [90, 270, 0],
            bottomRight: [90, 270, -t]
        }),
        n
    }
    function g() {
        var e, t, n;
        e = this,
        n = e.getDimensions(),
        t = '<iframe class="qtip-bgiframe" frameborder="0" tabindex="-1" src="javascript:false" style="display:block; position:absolute; z-index:-1; filter:alpha(opacity=\'0\'); border: 1px solid red; height:' + n.height + "px; width:" + n.width + 'px" />',
        e.elements.bgiframe = e.elements.wrapper.prepend(t).children(".qtip-bgiframe:first")
    }
    e.fn.qtip = function(r, i) {
        var s, o, u, a, f, l, c, h;
        if (typeof r == "string") {
            typeof e(this).data("qtip") != "object" && e.fn.qtip.log.error.call(self, 1, e.fn.qtip.constants.NO_TOOLTIP_PRESENT, !1);
            if (r == "api")
                return e(this).data("qtip").interfaces[e(this).data("qtip").current];
            if (r == "interfaces")
                return e(this).data("qtip").interfaces
        } else {
            r || (r = {});
            if (typeof r.content != "object" || r.content.jquery && r.content.length > 0)
                r.content = {
                    text: r.content
                };
            typeof r.content.title != "object" && (r.content.title = {
                text: r.content.title
            }),
            typeof r.position != "object" && (r.position = {
                corner: r.position
            }),
            typeof r.position.corner != "object" && (r.position.corner = {
                target: r.position.corner,
                tooltip: r.position.corner
            }),
            typeof r.show != "object" && (r.show = {
                when: r.show
            }),
            typeof r.show.when != "object" && (r.show.when = {
                event: r.show.when
            }),
            typeof r.show.effect != "object" && (r.show.effect = {
                type: r.show.effect
            }),
            typeof r.hide != "object" && (r.hide = {
                when: r.hide
            }),
            typeof r.hide.when != "object" && (r.hide.when = {
                event: r.hide.when
            }),
            typeof r.hide.effect != "object" && (r.hide.effect = {
                type: r.hide.effect
            }),
            typeof r.style != "object" && (r.style = {
                name: r.style
            }),
            r.style = p(r.style),
            a = e.extend(!0, {}, e.fn.qtip.defaults, r),
            a.style = d.call({
                options: a
            }, a.style),
            a.user = e.extend(!0, {}, r)
        }
        return e(this).each(function() {
            if (typeof r == "string") {
                l = r.toLowerCase(),
                u = e(this).qtip("interfaces");
                if (typeof u == "object")
                    if (i === !0 && l == "destroy")
                        while (u.length > 0)
                            u[u.length - 1].destroy();
                    else {
                        i !== !0 && (u = [e(this).qtip("api")]);
                        for (s = 0; s < u.length; s++)
                            l == "destroy" ? u[s].destroy() : u[s].status.rendered === !0 && (l == "show" ? u[s].show() : l == "hide" ? u[s].hide() : l == "focus" ? u[s].focus() : l == "disable" ? u[s].disable(!0) : l == "enable" && u[s].disable(!1))
                    }
            } else {
                c = e.extend(!0, {}, a),
                c.hide.effect.length = a.hide.effect.length,
                c.show.effect.length = a.show.effect.length,
                c.position.container === !1 && (c.position.container = e(document.body)),
                c.position.target === !1 && (c.position.target = e(this)),
                c.show.when.target === !1 && (c.show.when.target = e(this)),
                c.hide.when.target === !1 && (c.hide.when.target = e(this)),
                o = e.fn.qtip.interfaces.length;
                for (s = 0; s < o; s++)
                    if (typeof e.fn.qtip.interfaces[s] == "undefined") {
                        o = s;
                        break
                    }
                f = new t(e(this),c,o),
                e.fn.qtip.interfaces[o] = f,
                typeof e(this).data("qtip") == "object" ? (typeof e(this).attr("qtip") == "undefined" && (e(this).data("qtip").current = e(this).data("qtip").interfaces.length),
                e(this).data("qtip").interfaces.push(f)) : e(this).data("qtip", {
                    current: 0,
                    interfaces: [f]
                }),
                c.content.prerender === !1 && c.show.when.event !== !1 && c.show.ready !== !0 ? c.show.when.target.bind(c.show.when.event + ".qtip-" + o + "-create", {
                    qtip: o
                }, function(t) {
                    h = e.fn.qtip.interfaces[t.data.qtip],
                    h.options.show.when.target.unbind(h.options.show.when.event + ".qtip-" + t.data.qtip + "-create"),
                    h.cache.mouse = {
                        x: t.pageX,
                        y: t.pageY
                    },
                    n.call(h),
                    h.options.show.when.target.trigger(h.options.show.when.event)
                }) : (f.cache.mouse = {
                    x: c.show.when.target.offset().left,
                    y: c.show.when.target.offset().top
                },
                n.call(f))
            }
        })
    }
    ,
    e(document).ready(function() {
        e.fn.qtip.cache = {
            screen: {
                scroll: {
                    left: e(window).scrollLeft(),
                    top: e(window).scrollTop()
                },
                width: e(window).width(),
                height: e(window).height()
            }
        };
        var t;
        e(window).bind("resize scroll", function(n) {
            clearTimeout(t),
            t = setTimeout(function() {
                n.type === "scroll" ? e.fn.qtip.cache.screen.scroll = {
                    left: e(window).scrollLeft(),
                    top: e(window).scrollTop()
                } : (e.fn.qtip.cache.screen.width = e(window).width(),
                e.fn.qtip.cache.screen.height = e(window).height());
                for (i = 0; i < e.fn.qtip.interfaces.length; i++)
                    try {
                        var t = e.fn.qtip.interfaces[i];
                        t.status.rendered === !0 && (t.options.position.type !== "static" || t.options.position.adjust.scroll && n.type === "scroll" || t.options.position.adjust.resize && n.type === "resize") && t.updatePosition(n, !0)
                    } catch (r) {}
            }, 100)
        }),
        e(document).bind("mousedown.qtip", function(t) {
            e(t.target).parents("div.qtip").length === 0 && e(".qtip[unfocus]").each(function() {
                var n = e(this).qtip("api");
                e(this).is(":visible") && !n.status.disabled && e(t.target).add(n.elements.target).length > 1 && n.hide(t)
            })
        })
    }),
    e.fn.qtip.interfaces = [],
    e.fn.qtip.log = {
        error: function() {
            return this
        }
    },
    e.fn.qtip.constants = {},
    e.fn.qtip.defaults = {
        content: {
            prerender: !1,
            text: !1,
            url: !1,
            data: null,
            title: {
                text: !1,
                button: !1
            }
        },
        position: {
            target: !1,
            corner: {
                target: "bottomRight",
                tooltip: "topLeft"
            },
            adjust: {
                x: 0,
                y: 0,
                mouse: !0,
                screen: !1,
                scroll: !0,
                resize: !0
            },
            type: "absolute",
            container: !1
        },
        show: {
            when: {
                target: !1,
                event: "mouseover"
            },
            effect: {
                type: "fade",
                length: 100
            },
            delay: 140,
            solo: !1,
            ready: !1
        },
        hide: {
            when: {
                target: !1,
                event: "mouseout"
            },
            effect: {
                type: "fade",
                length: 100
            },
            delay: 0,
            fixed: !1
        },
        api: {
            beforeRender: function() {},
            onRender: function() {},
            beforePositionUpdate: function() {},
            onPositionUpdate: function() {},
            beforeShow: function() {},
            onShow: function() {},
            beforeHide: function() {},
            onHide: function() {},
            beforeContentUpdate: function() {},
            onContentUpdate: function() {},
            beforeContentLoad: function() {},
            onContentLoad: function() {},
            beforeTitleUpdate: function() {},
            onTitleUpdate: function() {},
            beforeDestroy: function() {},
            onDestroy: function() {},
            beforeFocus: function() {},
            onFocus: function() {}
        }
    },
    e.fn.qtip.styles = {
        defaults: {
            background: "white",
            color: "#111",
            overflow: "hidden",
            textAlign: "left",
            width: {
                min: 0,
                max: 250
            },
            padding: "5px 9px",
            border: {
                width: 1,
                radius: 0,
                color: "#d3d3d3"
            },
            tip: {
                corner: !1,
                color: !1,
                size: {
                    width: 13,
                    height: 13
                },
                opacity: 1
            },
            title: {
                background: "#e1e1e1",
                fontWeight: "bold",
                padding: "7px 12px"
            },
            button: {
                cursor: "pointer"
            },
            classes: {
                target: "",
                tip: "qtip-tip",
                title: "qtip-title",
                button: "qtip-button",
                content: "qtip-content",
                active: "qtip-active"
            }
        },
        cream: {
            border: {
                width: 3,
                radius: 0,
                color: "#F9E98E"
            },
            title: {
                background: "#F0DE7D",
                color: "#A27D35"
            },
            background: "#FBF7AA",
            color: "#A27D35",
            classes: {
                tooltip: "qtip-cream"
            }
        },
        light: {
            border: {
                width: 3,
                radius: 0,
                color: "#E2E2E2"
            },
            title: {
                background: "#f1f1f1",
                color: "#454545"
            },
            background: "white",
            color: "#454545",
            classes: {
                tooltip: "qtip-light"
            }
        },
        dark: {
            border: {
                width: 3,
                radius: 0,
                color: "#303030"
            },
            title: {
                background: "#404040",
                color: "#f3f3f3"
            },
            background: "#505050",
            color: "#f3f3f3",
            classes: {
                tooltip: "qtip-dark"
            }
        },
        red: {
            border: {
                width: 3,
                radius: 0,
                color: "#CE6F6F"
            },
            title: {
                background: "#f28279",
                color: "#9C2F2F"
            },
            background: "#F79992",
            color: "#9C2F2F",
            classes: {
                tooltip: "qtip-red"
            }
        },
        green: {
            border: {
                width: 3,
                radius: 0,
                color: "#A9DB66"
            },
            title: {
                background: "#b9db8c",
                color: "#58792E"
            },
            background: "#CDE6AC",
            color: "#58792E",
            classes: {
                tooltip: "qtip-green"
            }
        },
        blue: {
            border: {
                width: 3,
                radius: 0,
                color: "#ADD9ED"
            },
            title: {
                background: "#D0E9F5",
                color: "#5E99BD"
            },
            background: "#E5F6FE",
            color: "#4D9FBF",
            classes: {
                tooltip: "qtip-blue"
            }
        }
    }
}
)(jQuery);
/*! jQuery UI - v1.9.0 - 2012-10-09
* http://jqueryui.com
* Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.position.js, jquery.ui.draggable.js, jquery.ui.droppable.js, jquery.ui.resizable.js, jquery.ui.selectable.js, jquery.ui.sortable.js, jquery.ui.accordion.js, jquery.ui.autocomplete.js, jquery.ui.button.js, jquery.ui.datepicker.js, jquery.ui.dialog.js, jquery.ui.menu.js, jquery.ui.progressbar.js, jquery.ui.slider.js, jquery.ui.spinner.js, jquery.ui.tabs.js, jquery.ui.tooltip.js, jquery.ui.effect.js, jquery.ui.effect-blind.js, jquery.ui.effect-bounce.js, jquery.ui.effect-clip.js, jquery.ui.effect-drop.js, jquery.ui.effect-explode.js, jquery.ui.effect-fade.js, jquery.ui.effect-fold.js, jquery.ui.effect-highlight.js, jquery.ui.effect-pulsate.js, jquery.ui.effect-scale.js, jquery.ui.effect-shake.js, jquery.ui.effect-slide.js, jquery.ui.effect-transfer.js
* Copyright (c) 2012 jQuery Foundation and other contributors Licensed MIT */

(function(e, t) {
    function i(t, n) {
        var r, i, o, u = t.nodeName.toLowerCase();
        return "area" === u ? (r = t.parentNode,
        i = r.name,
        !t.href || !i || r.nodeName.toLowerCase() !== "map" ? !1 : (o = e("img[usemap=#" + i + "]")[0],
        !!o && s(o))) : (/input|select|textarea|button|object/.test(u) ? !t.disabled : "a" === u ? t.href || n : n) && s(t)
    }
    function s(t) {
        return !e(t).parents().andSelf().filter(function() {
            return e.css(this, "visibility") === "hidden" || e.expr.filters.hidden(this)
        }).length
    }
    var n = 0
      , r = /^ui-id-\d+$/;
    e.ui = e.ui || {};
    if (e.ui.version)
        return;
    e.extend(e.ui, {
        version: "1.9.0",
        keyCode: {
            BACKSPACE: 8,
            COMMA: 188,
            DELETE: 46,
            DOWN: 40,
            END: 35,
            ENTER: 13,
            ESCAPE: 27,
            HOME: 36,
            LEFT: 37,
            NUMPAD_ADD: 107,
            NUMPAD_DECIMAL: 110,
            NUMPAD_DIVIDE: 111,
            NUMPAD_ENTER: 108,
            NUMPAD_MULTIPLY: 106,
            NUMPAD_SUBTRACT: 109,
            PAGE_DOWN: 34,
            PAGE_UP: 33,
            PERIOD: 190,
            RIGHT: 39,
            SPACE: 32,
            TAB: 9,
            UP: 38
        }
    }),
    e.fn.extend({
        _focus: e.fn.focus,
        focus: function(t, n) {
            return typeof t == "number" ? this.each(function() {
                var r = this;
                setTimeout(function() {
                    e(r).focus(),
                    n && n.call(r)
                }, t)
            }) : this._focus.apply(this, arguments)
        },
        scrollParent: function() {
            var t;
            return e.browser.msie && /(static|relative)/.test(this.css("position")) || /absolute/.test(this.css("position")) ? t = this.parents().filter(function() {
                return /(relative|absolute|fixed)/.test(e.css(this, "position")) && /(auto|scroll)/.test(e.css(this, "overflow") + e.css(this, "overflow-y") + e.css(this, "overflow-x"))
            }).eq(0) : t = this.parents().filter(function() {
                return /(auto|scroll)/.test(e.css(this, "overflow") + e.css(this, "overflow-y") + e.css(this, "overflow-x"))
            }).eq(0),
            /fixed/.test(this.css("position")) || !t.length ? e(document) : t
        },
        zIndex: function(n) {
            if (n !== t)
                return this.css("zIndex", n);
            if (this.length) {
                var r = e(this[0]), i, s;
                while (r.length && r[0] !== document) {
                    i = r.css("position");
                    if (i === "absolute" || i === "relative" || i === "fixed") {
                        s = parseInt(r.css("zIndex"), 10);
                        if (!isNaN(s) && s !== 0)
                            return s
                    }
                    r = r.parent()
                }
            }
            return 0
        },
        uniqueId: function() {
            return this.each(function() {
                this.id || (this.id = "ui-id-" + ++n)
            })
        },
        removeUniqueId: function() {
            return this.each(function() {
                r.test(this.id) && e(this).removeAttr("id")
            })
        }
    }),
    e("<a>").outerWidth(1).jquery || e.each(["Width", "Height"], function(n, r) {
        function u(t, n, r, s) {
            return e.each(i, function() {
                n -= parseFloat(e.css(t, "padding" + this)) || 0,
                r && (n -= parseFloat(e.css(t, "border" + this + "Width")) || 0),
                s && (n -= parseFloat(e.css(t, "margin" + this)) || 0)
            }),
            n
        }
        var i = r === "Width" ? ["Left", "Right"] : ["Top", "Bottom"]
          , s = r.toLowerCase()
          , o = {
            innerWidth: e.fn.innerWidth,
            innerHeight: e.fn.innerHeight,
            outerWidth: e.fn.outerWidth,
            outerHeight: e.fn.outerHeight
        };
        e.fn["inner" + r] = function(n) {
            return n === t ? o["inner" + r].call(this) : this.each(function() {
                e(this).css(s, u(this, n) + "px")
            })
        }
        ,
        e.fn["outer" + r] = function(t, n) {
            return typeof t != "number" ? o["outer" + r].call(this, t) : this.each(function() {
                e(this).css(s, u(this, t, !0, n) + "px")
            })
        }
    }),
    e.extend(e.expr[":"], {
        data: e.expr.createPseudo ? e.expr.createPseudo(function(t) {
            return function(n) {
                return !!e.data(n, t)
            }
        }) : function(t, n, r) {
            return !!e.data(t, r[3])
        }
        ,
        focusable: function(t) {
            return i(t, !isNaN(e.attr(t, "tabindex")))
        },
        tabbable: function(t) {
            var n = e.attr(t, "tabindex")
              , r = isNaN(n);
            return (r || n >= 0) && i(t, !r)
        }
    }),
    e(function() {
        var t = document.body
          , n = t.appendChild(n = document.createElement("div"));
        n.offsetHeight,
        e.extend(n.style, {
            minHeight: "100px",
            height: "auto",
            padding: 0,
            borderWidth: 0
        }),
        e.support.minHeight = n.offsetHeight === 100,
        e.support.selectstart = "onselectstart"in n,
        t.removeChild(n).style.display = "none"
    }),
    e.fn.extend({
        disableSelection: function() {
            return this.bind((e.support.selectstart ? "selectstart" : "mousedown") + ".ui-disableSelection", function(e) {
                e.preventDefault()
            })
        },
        enableSelection: function() {
            return this.unbind(".ui-disableSelection")
        }
    }),
    e.extend(e.ui, {
        plugin: {
            add: function(t, n, r) {
                var i, s = e.ui[t].prototype;
                for (i in r)
                    s.plugins[i] = s.plugins[i] || [],
                    s.plugins[i].push([n, r[i]])
            },
            call: function(e, t, n) {
                var r, i = e.plugins[t];
                if (!i || !e.element[0].parentNode || e.element[0].parentNode.nodeType === 11)
                    return;
                for (r = 0; r < i.length; r++)
                    e.options[i[r][0]] && i[r][1].apply(e.element, n)
            }
        },
        contains: e.contains,
        hasScroll: function(t, n) {
            if (e(t).css("overflow") === "hidden")
                return !1;
            var r = n && n === "left" ? "scrollLeft" : "scrollTop"
              , i = !1;
            return t[r] > 0 ? !0 : (t[r] = 1,
            i = t[r] > 0,
            t[r] = 0,
            i)
        },
        isOverAxis: function(e, t, n) {
            return e > t && e < t + n
        },
        isOver: function(t, n, r, i, s, o) {
            return e.ui.isOverAxis(t, r, s) && e.ui.isOverAxis(n, i, o)
        }
    })
}
)(jQuery);
(function(e, t) {
    var n = 0
      , r = Array.prototype.slice
      , i = e.cleanData;
    e.cleanData = function(t) {
        for (var n = 0, r; (r = t[n]) != null; n++)
            try {
                e(r).triggerHandler("remove")
            } catch (s) {}
        i(t)
    }
    ,
    e.widget = function(t, n, r) {
        var i, s, o, u, a = t.split(".")[0];
        t = t.split(".")[1],
        i = a + "-" + t,
        r || (r = n,
        n = e.Widget),
        e.expr[":"][i.toLowerCase()] = function(t) {
            return !!e.data(t, i)
        }
        ,
        e[a] = e[a] || {},
        s = e[a][t],
        o = e[a][t] = function(e, t) {
            if (!this._createWidget)
                return new o(e,t);
            arguments.length && this._createWidget(e, t)
        }
        ,
        e.extend(o, s, {
            version: r.version,
            _proto: e.extend({}, r),
            _childConstructors: []
        }),
        u = new n,
        u.options = e.widget.extend({}, u.options),
        e.each(r, function(t, i) {
            e.isFunction(i) && (r[t] = function() {
                var e = function() {
                    return n.prototype[t].apply(this, arguments)
                }
                  , r = function(e) {
                    return n.prototype[t].apply(this, e)
                };
                return function() {
                    var t = this._super, n = this._superApply, s;
                    return this._super = e,
                    this._superApply = r,
                    s = i.apply(this, arguments),
                    this._super = t,
                    this._superApply = n,
                    s
                }
            }())
        }),
        o.prototype = e.widget.extend(u, {
            widgetEventPrefix: t
        }, r, {
            constructor: o,
            namespace: a,
            widgetName: t,
            widgetBaseClass: i,
            widgetFullName: i
        }),
        s ? (e.each(s._childConstructors, function(t, n) {
            var r = n.prototype;
            e.widget(r.namespace + "." + r.widgetName, o, n._proto)
        }),
        delete s._childConstructors) : n._childConstructors.push(o),
        e.widget.bridge(t, o)
    }
    ,
    e.widget.extend = function(n) {
        var i = r.call(arguments, 1), s = 0, o = i.length, u, a;
        for (; s < o; s++)
            for (u in i[s])
                a = i[s][u],
                i[s].hasOwnProperty(u) && a !== t && (n[u] = e.isPlainObject(a) ? e.widget.extend({}, n[u], a) : a);
        return n
    }
    ,
    e.widget.bridge = function(n, i) {
        var s = i.prototype.widgetFullName;
        e.fn[n] = function(o) {
            var u = typeof o == "string"
              , a = r.call(arguments, 1)
              , f = this;
            return o = !u && a.length ? e.widget.extend.apply(null, [o].concat(a)) : o,
            u ? this.each(function() {
                var r, i = e.data(this, s);
                if (!i)
                    return e.error("cannot call methods on " + n + " prior to initialization; " + "attempted to call method '" + o + "'");
                if (!e.isFunction(i[o]) || o.charAt(0) === "_")
                    return e.error("no such method '" + o + "' for " + n + " widget instance");
                r = i[o].apply(i, a);
                if (r !== i && r !== t)
                    return f = r && r.jquery ? f.pushStack(r.get()) : r,
                    !1
            }) : this.each(function() {
                var t = e.data(this, s);
                t ? t.option(o || {})._init() : new i(o,this)
            }),
            f
        }
    }
    ,
    e.Widget = function(e, t) {}
    ,
    e.Widget._childConstructors = [],
    e.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        defaultElement: "<div>",
        options: {
            disabled: !1,
            create: null
        },
        _createWidget: function(t, r) {
            r = e(r || this.defaultElement || this)[0],
            this.element = e(r),
            this.uuid = n++,
            this.eventNamespace = "." + this.widgetName + this.uuid,
            this.options = e.widget.extend({}, this.options, this._getCreateOptions(), t),
            this.bindings = e(),
            this.hoverable = e(),
            this.focusable = e(),
            r !== this && (e.data(r, this.widgetName, this),
            e.data(r, this.widgetFullName, this),
            this._on({
                remove: "destroy"
            }),
            this.document = e(r.style ? r.ownerDocument : r.document || r),
            this.window = e(this.document[0].defaultView || this.document[0].parentWindow)),
            this._create(),
            this._trigger("create", null, this._getCreateEventData()),
            this._init()
        },
        _getCreateOptions: e.noop,
        _getCreateEventData: e.noop,
        _create: e.noop,
        _init: e.noop,
        destroy: function() {
            this._destroy(),
            this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)),
            this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled " + "ui-state-disabled"),
            this.bindings.unbind(this.eventNamespace),
            this.hoverable.removeClass("ui-state-hover"),
            this.focusable.removeClass("ui-state-focus")
        },
        _destroy: e.noop,
        widget: function() {
            return this.element
        },
        option: function(n, r) {
            var i = n, s, o, u;
            if (arguments.length === 0)
                return e.widget.extend({}, this.options);
            if (typeof n == "string") {
                i = {},
                s = n.split("."),
                n = s.shift();
                if (s.length) {
                    o = i[n] = e.widget.extend({}, this.options[n]);
                    for (u = 0; u < s.length - 1; u++)
                        o[s[u]] = o[s[u]] || {},
                        o = o[s[u]];
                    n = s.pop();
                    if (r === t)
                        return o[n] === t ? null : o[n];
                    o[n] = r
                } else {
                    if (r === t)
                        return this.options[n] === t ? null : this.options[n];
                    i[n] = r
                }
            }
            return this._setOptions(i),
            this
        },
        _setOptions: function(e) {
            var t;
            for (t in e)
                this._setOption(t, e[t]);
            return this
        },
        _setOption: function(e, t) {
            return this.options[e] = t,
            e === "disabled" && (this.widget().toggleClass(this.widgetFullName + "-disabled ui-state-disabled", !!t).attr("aria-disabled", t),
            this.hoverable.removeClass("ui-state-hover"),
            this.focusable.removeClass("ui-state-focus")),
            this
        },
        enable: function() {
            return this._setOption("disabled", !1)
        },
        disable: function() {
            return this._setOption("disabled", !0)
        },
        _on: function(t, n) {
            n ? (t = e(t),
            this.bindings = this.bindings.add(t)) : (n = t,
            t = this.element);
            var r = this;
            e.each(n, function(n, i) {
                function s() {
                    if (r.options.disabled === !0 || e(this).hasClass("ui-state-disabled"))
                        return;
                    return (typeof i == "string" ? r[i] : i).apply(r, arguments)
                }
                typeof i != "string" && (s.guid = i.guid = i.guid || s.guid || e.guid++);
                var o = n.match(/^(\w+)\s*(.*)$/)
                  , u = o[1] + r.eventNamespace
                  , a = o[2];
                a ? r.widget().delegate(a, u, s) : t.bind(u, s)
            })
        },
        _off: function(e, t) {
            t = (t || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace,
            e.unbind(t).undelegate(t)
        },
        _delay: function(e, t) {
            function n() {
                return (typeof e == "string" ? r[e] : e).apply(r, arguments)
            }
            var r = this;
            return setTimeout(n, t || 0)
        },
        _hoverable: function(t) {
            this.hoverable = this.hoverable.add(t),
            this._on(t, {
                mouseenter: function(t) {
                    e(t.currentTarget).addClass("ui-state-hover")
                },
                mouseleave: function(t) {
                    e(t.currentTarget).removeClass("ui-state-hover")
                }
            })
        },
        _focusable: function(t) {
            this.focusable = this.focusable.add(t),
            this._on(t, {
                focusin: function(t) {
                    e(t.currentTarget).addClass("ui-state-focus")
                },
                focusout: function(t) {
                    e(t.currentTarget).removeClass("ui-state-focus")
                }
            })
        },
        _trigger: function(t, n, r) {
            var i, s, o = this.options[t];
            r = r || {},
            n = e.Event(n),
            n.type = (t === this.widgetEventPrefix ? t : this.widgetEventPrefix + t).toLowerCase(),
            n.target = this.element[0],
            s = n.originalEvent;
            if (s)
                for (i in s)
                    i in n || (n[i] = s[i]);
            return this.element.trigger(n, r),
            !(e.isFunction(o) && o.apply(this.element[0], [n].concat(r)) === !1 || n.isDefaultPrevented())
        }
    },
    e.each({
        show: "fadeIn",
        hide: "fadeOut"
    }, function(t, n) {
        e.Widget.prototype["_" + t] = function(r, i, s) {
            typeof i == "string" && (i = {
                effect: i
            });
            var o, u = i ? i === !0 || typeof i == "number" ? n : i.effect || n : t;
            i = i || {},
            typeof i == "number" && (i = {
                duration: i
            }),
            o = !e.isEmptyObject(i),
            i.complete = s,
            i.delay && r.delay(i.delay),
            o && e.effects && (e.effects.effect[u] || e.uiBackCompat !== !1 && e.effects[u]) ? r[t](i) : u !== t && r[u] ? r[u](i.duration, i.easing, s) : r.queue(function(n) {
                e(this)[t](),
                s && s.call(r[0]),
                n()
            })
        }
    }),
    e.uiBackCompat !== !1 && (e.Widget.prototype._getCreateOptions = function() {
        return e.metadata && e.metadata.get(this.element[0])[this.widgetName]
    }
    )
}
)(jQuery);
(function(e, t) {
    var n = !1;
    e(document).mouseup(function(e) {
        n = !1
    }),
    e.widget("ui.mouse", {
        version: "1.9.0",
        options: {
            cancel: "input,textarea,button,select,option",
            distance: 1,
            delay: 0
        },
        _mouseInit: function() {
            var t = this;
            this.element.bind("mousedown." + this.widgetName, function(e) {
                return t._mouseDown(e)
            }).bind("click." + this.widgetName, function(n) {
                if (!0 === e.data(n.target, t.widgetName + ".preventClickEvent"))
                    return e.removeData(n.target, t.widgetName + ".preventClickEvent"),
                    n.stopImmediatePropagation(),
                    !1
            }),
            this.started = !1
        },
        _mouseDestroy: function() {
            this.element.unbind("." + this.widgetName),
            this._mouseMoveDelegate && e(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate)
        },
        _mouseDown: function(t) {
            if (n)
                return;
            this._mouseStarted && this._mouseUp(t),
            this._mouseDownEvent = t;
            var r = this
              , i = t.which === 1
              , s = typeof this.options.cancel == "string" && t.target.nodeName ? e(t.target).closest(this.options.cancel).length : !1;
            if (!i || s || !this._mouseCapture(t))
                return !0;
            this.mouseDelayMet = !this.options.delay,
            this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function() {
                r.mouseDelayMet = !0
            }, this.options.delay));
            if (this._mouseDistanceMet(t) && this._mouseDelayMet(t)) {
                this._mouseStarted = this._mouseStart(t) !== !1;
                if (!this._mouseStarted)
                    return t.preventDefault(),
                    !0
            }
            return !0 === e.data(t.target, this.widgetName + ".preventClickEvent") && e.removeData(t.target, this.widgetName + ".preventClickEvent"),
            this._mouseMoveDelegate = function(e) {
                return r._mouseMove(e)
            }
            ,
            this._mouseUpDelegate = function(e) {
                return r._mouseUp(e)
            }
            ,
            e(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate),
            t.preventDefault(),
            n = !0,
            !0
        },
        _mouseMove: function(t) {
            return !e.browser.msie || document.documentMode >= 9 || !!t.button ? this._mouseStarted ? (this._mouseDrag(t),
            t.preventDefault()) : (this._mouseDistanceMet(t) && this._mouseDelayMet(t) && (this._mouseStarted = this._mouseStart(this._mouseDownEvent, t) !== !1,
            this._mouseStarted ? this._mouseDrag(t) : this._mouseUp(t)),
            !this._mouseStarted) : this._mouseUp(t)
        },
        _mouseUp: function(t) {
            return e(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate),
            this._mouseStarted && (this._mouseStarted = !1,
            t.target === this._mouseDownEvent.target && e.data(t.target, this.widgetName + ".preventClickEvent", !0),
            this._mouseStop(t)),
            !1
        },
        _mouseDistanceMet: function(e) {
            return Math.max(Math.abs(this._mouseDownEvent.pageX - e.pageX), Math.abs(this._mouseDownEvent.pageY - e.pageY)) >= this.options.distance
        },
        _mouseDelayMet: function(e) {
            return this.mouseDelayMet
        },
        _mouseStart: function(e) {},
        _mouseDrag: function(e) {},
        _mouseStop: function(e) {},
        _mouseCapture: function(e) {
            return !0
        }
    })
}
)(jQuery);
(function(e, t) {
    function h(e, t, n) {
        return [parseInt(e[0], 10) * (l.test(e[0]) ? t / 100 : 1), parseInt(e[1], 10) * (l.test(e[1]) ? n / 100 : 1)]
    }
    function p(t, n) {
        return parseInt(e.css(t, n), 10) || 0
    }
    e.ui = e.ui || {};
    var n, r = Math.max, i = Math.abs, s = Math.round, o = /left|center|right/, u = /top|center|bottom/, a = /[\+\-]\d+%?/, f = /^\w+/, l = /%$/, c = e.fn.position;
    e.position = {
        scrollbarWidth: function() {
            if (n !== t)
                return n;
            var r, i, s = e("<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"), o = s.children()[0];
            return e("body").append(s),
            r = o.offsetWidth,
            s.css("overflow", "scroll"),
            i = o.offsetWidth,
            r === i && (i = s[0].clientWidth),
            s.remove(),
            n = r - i
        },
        getScrollInfo: function(t) {
            var n = t.isWindow ? "" : t.element.css("overflow-x")
              , r = t.isWindow ? "" : t.element.css("overflow-y")
              , i = n === "scroll" || n === "auto" && t.width < t.element[0].scrollWidth
              , s = r === "scroll" || r === "auto" && t.height < t.element[0].scrollHeight;
            return {
                width: i ? e.position.scrollbarWidth() : 0,
                height: s ? e.position.scrollbarWidth() : 0
            }
        },
        getWithinInfo: function(t) {
            var n = e(t || window)
              , r = e.isWindow(n[0]);
            return {
                element: n,
                isWindow: r,
                offset: n.offset() || {
                    left: 0,
                    top: 0
                },
                scrollLeft: n.scrollLeft(),
                scrollTop: n.scrollTop(),
                width: r ? n.width() : n.outerWidth(),
                height: r ? n.height() : n.outerHeight()
            }
        }
    },
    e.fn.position = function(t) {
        if (!t || !t.of)
            return c.apply(this, arguments);
        t = e.extend({}, t);
        var n, l, d, v, m, g = e(t.of), y = e.position.getWithinInfo(t.within), b = e.position.getScrollInfo(y), w = g[0], E = (t.collision || "flip").split(" "), S = {};
        return w.nodeType === 9 ? (l = g.width(),
        d = g.height(),
        v = {
            top: 0,
            left: 0
        }) : e.isWindow(w) ? (l = g.width(),
        d = g.height(),
        v = {
            top: g.scrollTop(),
            left: g.scrollLeft()
        }) : w.preventDefault ? (t.at = "left top",
        l = d = 0,
        v = {
            top: w.pageY,
            left: w.pageX
        }) : (l = g.outerWidth(),
        d = g.outerHeight(),
        v = g.offset()),
        m = e.extend({}, v),
        e.each(["my", "at"], function() {
            var e = (t[this] || "").split(" "), n, r;
            e.length === 1 && (e = o.test(e[0]) ? e.concat(["center"]) : u.test(e[0]) ? ["center"].concat(e) : ["center", "center"]),
            e[0] = o.test(e[0]) ? e[0] : "center",
            e[1] = u.test(e[1]) ? e[1] : "center",
            n = a.exec(e[0]),
            r = a.exec(e[1]),
            S[this] = [n ? n[0] : 0, r ? r[0] : 0],
            t[this] = [f.exec(e[0])[0], f.exec(e[1])[0]]
        }),
        E.length === 1 && (E[1] = E[0]),
        t.at[0] === "right" ? m.left += l : t.at[0] === "center" && (m.left += l / 2),
        t.at[1] === "bottom" ? m.top += d : t.at[1] === "center" && (m.top += d / 2),
        n = h(S.at, l, d),
        m.left += n[0],
        m.top += n[1],
        this.each(function() {
            var o, u, a = e(this), f = a.outerWidth(), c = a.outerHeight(), w = p(this, "marginLeft"), x = p(this, "marginTop"), T = f + w + p(this, "marginRight") + b.width, N = c + x + p(this, "marginBottom") + b.height, C = e.extend({}, m), k = h(S.my, a.outerWidth(), a.outerHeight());
            t.my[0] === "right" ? C.left -= f : t.my[0] === "center" && (C.left -= f / 2),
            t.my[1] === "bottom" ? C.top -= c : t.my[1] === "center" && (C.top -= c / 2),
            C.left += k[0],
            C.top += k[1],
            e.support.offsetFractions || (C.left = s(C.left),
            C.top = s(C.top)),
            o = {
                marginLeft: w,
                marginTop: x
            },
            e.each(["left", "top"], function(r, i) {
                e.ui.position[E[r]] && e.ui.position[E[r]][i](C, {
                    targetWidth: l,
                    targetHeight: d,
                    elemWidth: f,
                    elemHeight: c,
                    collisionPosition: o,
                    collisionWidth: T,
                    collisionHeight: N,
                    offset: [n[0] + k[0], n[1] + k[1]],
                    my: t.my,
                    at: t.at,
                    within: y,
                    elem: a
                })
            }),
            e.fn.bgiframe && a.bgiframe(),
            t.using && (u = function(e) {
                var n = v.left - C.left
                  , s = n + l - f
                  , o = v.top - C.top
                  , u = o + d - c
                  , h = {
                    target: {
                        element: g,
                        left: v.left,
                        top: v.top,
                        width: l,
                        height: d
                    },
                    element: {
                        element: a,
                        left: C.left,
                        top: C.top,
                        width: f,
                        height: c
                    },
                    horizontal: s < 0 ? "left" : n > 0 ? "right" : "center",
                    vertical: u < 0 ? "top" : o > 0 ? "bottom" : "middle"
                };
                l < f && i(n + s) < l && (h.horizontal = "center"),
                d < c && i(o + u) < d && (h.vertical = "middle"),
                r(i(n), i(s)) > r(i(o), i(u)) ? h.important = "horizontal" : h.important = "vertical",
                t.using.call(this, e, h)
            }
            ),
            a.offset(e.extend(C, {
                using: u
            }))
        })
    }
    ,
    e.ui.position = {
        fit: {
            left: function(e, t) {
                var n = t.within, i = n.isWindow ? n.scrollLeft : n.offset.left, s = n.width, o = e.left - t.collisionPosition.marginLeft, u = i - o, a = o + t.collisionWidth - s - i, f;
                t.collisionWidth > s ? u > 0 && a <= 0 ? (f = e.left + u + t.collisionWidth - s - i,
                e.left += u - f) : a > 0 && u <= 0 ? e.left = i : u > a ? e.left = i + s - t.collisionWidth : e.left = i : u > 0 ? e.left += u : a > 0 ? e.left -= a : e.left = r(e.left - o, e.left)
            },
            top: function(e, t) {
                var n = t.within, i = n.isWindow ? n.scrollTop : n.offset.top, s = t.within.height, o = e.top - t.collisionPosition.marginTop, u = i - o, a = o + t.collisionHeight - s - i, f;
                t.collisionHeight > s ? u > 0 && a <= 0 ? (f = e.top + u + t.collisionHeight - s - i,
                e.top += u - f) : a > 0 && u <= 0 ? e.top = i : u > a ? e.top = i + s - t.collisionHeight : e.top = i : u > 0 ? e.top += u : a > 0 ? e.top -= a : e.top = r(e.top - o, e.top)
            }
        },
        flip: {
            left: function(e, t) {
                var n = t.within, r = n.offset.left + n.scrollLeft, s = n.width, o = n.isWindow ? n.scrollLeft : n.offset.left, u = e.left - t.collisionPosition.marginLeft, a = u - o, f = u + t.collisionWidth - s - o, l = t.my[0] === "left" ? -t.elemWidth : t.my[0] === "right" ? t.elemWidth : 0, c = t.at[0] === "left" ? t.targetWidth : t.at[0] === "right" ? -t.targetWidth : 0, h = -2 * t.offset[0], p, d;
                if (a < 0) {
                    p = e.left + l + c + h + t.collisionWidth - s - r;
                    if (p < 0 || p < i(a))
                        e.left += l + c + h
                } else if (f > 0) {
                    d = e.left - t.collisionPosition.marginLeft + l + c + h - o;
                    if (d > 0 || i(d) < f)
                        e.left += l + c + h
                }
            },
            top: function(e, t) {
                var n = t.within, r = n.offset.top + n.scrollTop, s = n.height, o = n.isWindow ? n.scrollTop : n.offset.top, u = e.top - t.collisionPosition.marginTop, a = u - o, f = u + t.collisionHeight - s - o, l = t.my[1] === "top", c = l ? -t.elemHeight : t.my[1] === "bottom" ? t.elemHeight : 0, h = t.at[1] === "top" ? t.targetHeight : t.at[1] === "bottom" ? -t.targetHeight : 0, p = -2 * t.offset[1], d, v;
                a < 0 ? (v = e.top + c + h + p + t.collisionHeight - s - r,
                e.top + c + h + p > a && (v < 0 || v < i(a)) && (e.top += c + h + p)) : f > 0 && (d = e.top - t.collisionPosition.marginTop + c + h + p - o,
                e.top + c + h + p > f && (d > 0 || i(d) < f) && (e.top += c + h + p))
            }
        },
        flipfit: {
            left: function() {
                e.ui.position.flip.left.apply(this, arguments),
                e.ui.position.fit.left.apply(this, arguments)
            },
            top: function() {
                e.ui.position.flip.top.apply(this, arguments),
                e.ui.position.fit.top.apply(this, arguments)
            }
        }
    },
    function() {
        var t, n, r, i, s, o = document.getElementsByTagName("body")[0], u = document.createElement("div");
        t = document.createElement(o ? "div" : "body"),
        r = {
            visibility: "hidden",
            width: 0,
            height: 0,
            border: 0,
            margin: 0,
            background: "none"
        },
        o && e.extend(r, {
            position: "absolute",
            left: "-1000px",
            top: "-1000px"
        });
        for (s in r)
            t.style[s] = r[s];
        t.appendChild(u),
        n = o || document.documentElement,
        n.insertBefore(t, n.firstChild),
        u.style.cssText = "position: absolute; left: 10.7432222px;",
        i = e(u).offset().left,
        e.support.offsetFractions = i > 10 && i < 11,
        t.innerHTML = "",
        n.removeChild(t)
    }(),
    e.uiBackCompat !== !1 && function(e) {
        var n = e.fn.position;
        e.fn.position = function(r) {
            if (!r || !r.offset)
                return n.call(this, r);
            var i = r.offset.split(" ")
              , s = r.at.split(" ");
            return i.length === 1 && (i[1] = i[0]),
            /^\d/.test(i[0]) && (i[0] = "+" + i[0]),
            /^\d/.test(i[1]) && (i[1] = "+" + i[1]),
            s.length === 1 && (/left|center|right/.test(s[0]) ? s[1] = "center" : (s[1] = s[0],
            s[0] = "center")),
            n.call(this, e.extend(r, {
                at: s[0] + i[0] + " " + s[1] + i[1],
                offset: t
            }))
        }
    }(jQuery)
}
)(jQuery);
(function(e, t) {
    e.widget("ui.draggable", e.ui.mouse, {
        version: "1.9.0",
        widgetEventPrefix: "drag",
        options: {
            addClasses: !0,
            appendTo: "parent",
            axis: !1,
            connectToSortable: !1,
            containment: !1,
            cursor: "auto",
            cursorAt: !1,
            grid: !1,
            handle: !1,
            helper: "original",
            iframeFix: !1,
            opacity: !1,
            refreshPositions: !1,
            revert: !1,
            revertDuration: 500,
            scope: "default",
            scroll: !0,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            snap: !1,
            snapMode: "both",
            snapTolerance: 20,
            stack: !1,
            zIndex: !1
        },
        _create: function() {
            this.options.helper == "original" && !/^(?:r|a|f)/.test(this.element.css("position")) && (this.element[0].style.position = "relative"),
            this.options.addClasses && this.element.addClass("ui-draggable"),
            this.options.disabled && this.element.addClass("ui-draggable-disabled"),
            this._mouseInit()
        },
        _destroy: function() {
            this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"),
            this._mouseDestroy()
        },
        _mouseCapture: function(t) {
            var n = this.options;
            return this.helper || n.disabled || e(t.target).is(".ui-resizable-handle") ? !1 : (this.handle = this._getHandle(t),
            this.handle ? (e(n.iframeFix === !0 ? "iframe" : n.iframeFix).each(function() {
                e('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({
                    width: this.offsetWidth + "px",
                    height: this.offsetHeight + "px",
                    position: "absolute",
                    opacity: "0.001",
                    zIndex: 1e3
                }).css(e(this).offset()).appendTo("body")
            }),
            !0) : !1)
        },
        _mouseStart: function(t) {
            var n = this.options;
            return this.helper = this._createHelper(t),
            this.helper.addClass("ui-draggable-dragging"),
            this._cacheHelperProportions(),
            e.ui.ddmanager && (e.ui.ddmanager.current = this),
            this._cacheMargins(),
            this.cssPosition = this.helper.css("position"),
            this.scrollParent = this.helper.scrollParent(),
            this.offset = this.positionAbs = this.element.offset(),
            this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            },
            e.extend(this.offset, {
                click: {
                    left: t.pageX - this.offset.left,
                    top: t.pageY - this.offset.top
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            }),
            this.originalPosition = this.position = this._generatePosition(t),
            this.originalPageX = t.pageX,
            this.originalPageY = t.pageY,
            n.cursorAt && this._adjustOffsetFromHelper(n.cursorAt),
            n.containment && this._setContainment(),
            this._trigger("start", t) === !1 ? (this._clear(),
            !1) : (this._cacheHelperProportions(),
            e.ui.ddmanager && !n.dropBehaviour && e.ui.ddmanager.prepareOffsets(this, t),
            this._mouseDrag(t, !0),
            e.ui.ddmanager && e.ui.ddmanager.dragStart(this, t),
            !0)
        },
        _mouseDrag: function(t, n) {
            this.position = this._generatePosition(t),
            this.positionAbs = this._convertPositionTo("absolute");
            if (!n) {
                var r = this._uiHash();
                if (this._trigger("drag", t, r) === !1)
                    return this._mouseUp({}),
                    !1;
                this.position = r.position
            }
            if (!this.options.axis || this.options.axis != "y")
                this.helper[0].style.left = this.position.left + "px";
            if (!this.options.axis || this.options.axis != "x")
                this.helper[0].style.top = this.position.top + "px";
            return e.ui.ddmanager && e.ui.ddmanager.drag(this, t),
            !1
        },
        _mouseStop: function(t) {
            var n = !1;
            e.ui.ddmanager && !this.options.dropBehaviour && (n = e.ui.ddmanager.drop(this, t)),
            this.dropped && (n = this.dropped,
            this.dropped = !1);
            var r = this.element[0]
              , i = !1;
            while (r && (r = r.parentNode))
                r == document && (i = !0);
            if (!i && this.options.helper === "original")
                return !1;
            if (this.options.revert == "invalid" && !n || this.options.revert == "valid" && n || this.options.revert === !0 || e.isFunction(this.options.revert) && this.options.revert.call(this.element, n)) {
                var s = this;
                e(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
                    s._trigger("stop", t) !== !1 && s._clear()
                })
            } else
                this._trigger("stop", t) !== !1 && this._clear();
            return !1
        },
        _mouseUp: function(t) {
            return e("div.ui-draggable-iframeFix").each(function() {
                this.parentNode.removeChild(this)
            }),
            e.ui.ddmanager && e.ui.ddmanager.dragStop(this, t),
            e.ui.mouse.prototype._mouseUp.call(this, t)
        },
        cancel: function() {
            return this.helper.is(".ui-draggable-dragging") ? this._mouseUp({}) : this._clear(),
            this
        },
        _getHandle: function(t) {
            var n = !this.options.handle || !e(this.options.handle, this.element).length ? !0 : !1;
            return e(this.options.handle, this.element).find("*").andSelf().each(function() {
                this == t.target && (n = !0)
            }),
            n
        },
        _createHelper: function(t) {
            var n = this.options
              , r = e.isFunction(n.helper) ? e(n.helper.apply(this.element[0], [t])) : n.helper == "clone" ? this.element.clone().removeAttr("id") : this.element;
            return r.parents("body").length || r.appendTo(n.appendTo == "parent" ? this.element[0].parentNode : n.appendTo),
            r[0] != this.element[0] && !/(fixed|absolute)/.test(r.css("position")) && r.css("position", "absolute"),
            r
        },
        _adjustOffsetFromHelper: function(t) {
            typeof t == "string" && (t = t.split(" ")),
            e.isArray(t) && (t = {
                left: +t[0],
                top: +t[1] || 0
            }),
            "left"in t && (this.offset.click.left = t.left + this.margins.left),
            "right"in t && (this.offset.click.left = this.helperProportions.width - t.right + this.margins.left),
            "top"in t && (this.offset.click.top = t.top + this.margins.top),
            "bottom"in t && (this.offset.click.top = this.helperProportions.height - t.bottom + this.margins.top)
        },
        _getParentOffset: function() {
            this.offsetParent = this.helper.offsetParent();
            var t = this.offsetParent.offset();
            this.cssPosition == "absolute" && this.scrollParent[0] != document && e.contains(this.scrollParent[0], this.offsetParent[0]) && (t.left += this.scrollParent.scrollLeft(),
            t.top += this.scrollParent.scrollTop());
            if (this.offsetParent[0] == document.body || this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && e.browser.msie)
                t = {
                    top: 0,
                    left: 0
                };
            return {
                top: t.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: t.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function() {
            if (this.cssPosition == "relative") {
                var e = this.element.position();
                return {
                    top: e.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: e.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                }
            }
            return {
                top: 0,
                left: 0
            }
        },
        _cacheMargins: function() {
            this.margins = {
                left: parseInt(this.element.css("marginLeft"), 10) || 0,
                top: parseInt(this.element.css("marginTop"), 10) || 0,
                right: parseInt(this.element.css("marginRight"), 10) || 0,
                bottom: parseInt(this.element.css("marginBottom"), 10) || 0
            }
        },
        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            }
        },
        _setContainment: function() {
            var t = this.options;
            t.containment == "parent" && (t.containment = this.helper[0].parentNode);
            if (t.containment == "document" || t.containment == "window")
                this.containment = [t.containment == "document" ? 0 : e(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, t.containment == "document" ? 0 : e(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, (t.containment == "document" ? 0 : e(window).scrollLeft()) + e(t.containment == "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (t.containment == "document" ? 0 : e(window).scrollTop()) + (e(t.containment == "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top];
            if (!/^(document|window|parent)$/.test(t.containment) && t.containment.constructor != Array) {
                var n = e(t.containment)
                  , r = n[0];
                if (!r)
                    return;
                var i = n.offset()
                  , s = e(r).css("overflow") != "hidden";
                this.containment = [(parseInt(e(r).css("borderLeftWidth"), 10) || 0) + (parseInt(e(r).css("paddingLeft"), 10) || 0), (parseInt(e(r).css("borderTopWidth"), 10) || 0) + (parseInt(e(r).css("paddingTop"), 10) || 0), (s ? Math.max(r.scrollWidth, r.offsetWidth) : r.offsetWidth) - (parseInt(e(r).css("borderLeftWidth"), 10) || 0) - (parseInt(e(r).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (s ? Math.max(r.scrollHeight, r.offsetHeight) : r.offsetHeight) - (parseInt(e(r).css("borderTopWidth"), 10) || 0) - (parseInt(e(r).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom],
                this.relative_container = n
            } else
                t.containment.constructor == Array && (this.containment = t.containment)
        },
        _convertPositionTo: function(t, n) {
            n || (n = this.position);
            var r = t == "absolute" ? 1 : -1
              , i = this.options
              , s = this.cssPosition != "absolute" || this.scrollParent[0] != document && !!e.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent
              , o = /(html|body)/i.test(s[0].tagName);
            return {
                top: n.top + this.offset.relative.top * r + this.offset.parent.top * r - (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : o ? 0 : s.scrollTop()) * r,
                left: n.left + this.offset.relative.left * r + this.offset.parent.left * r - (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : o ? 0 : s.scrollLeft()) * r
            }
        },
        _generatePosition: function(t) {
            var n = this.options
              , r = this.cssPosition != "absolute" || this.scrollParent[0] != document && !!e.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent
              , i = /(html|body)/i.test(r[0].tagName)
              , s = t.pageX
              , o = t.pageY;
            if (this.originalPosition) {
                var u;
                if (this.containment) {
                    if (this.relative_container) {
                        var a = this.relative_container.offset();
                        u = [this.containment[0] + a.left, this.containment[1] + a.top, this.containment[2] + a.left, this.containment[3] + a.top]
                    } else
                        u = this.containment;
                    t.pageX - this.offset.click.left < u[0] && (s = u[0] + this.offset.click.left),
                    t.pageY - this.offset.click.top < u[1] && (o = u[1] + this.offset.click.top),
                    t.pageX - this.offset.click.left > u[2] && (s = u[2] + this.offset.click.left),
                    t.pageY - this.offset.click.top > u[3] && (o = u[3] + this.offset.click.top)
                }
                if (n.grid) {
                    var f = n.grid[1] ? this.originalPageY + Math.round((o - this.originalPageY) / n.grid[1]) * n.grid[1] : this.originalPageY;
                    o = u ? f - this.offset.click.top < u[1] || f - this.offset.click.top > u[3] ? f - this.offset.click.top < u[1] ? f + n.grid[1] : f - n.grid[1] : f : f;
                    var l = n.grid[0] ? this.originalPageX + Math.round((s - this.originalPageX) / n.grid[0]) * n.grid[0] : this.originalPageX;
                    s = u ? l - this.offset.click.left < u[0] || l - this.offset.click.left > u[2] ? l - this.offset.click.left < u[0] ? l + n.grid[0] : l - n.grid[0] : l : l
                }
            }
            return {
                top: o - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : i ? 0 : r.scrollTop()),
                left: s - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : i ? 0 : r.scrollLeft())
            }
        },
        _clear: function() {
            this.helper.removeClass("ui-draggable-dragging"),
            this.helper[0] != this.element[0] && !this.cancelHelperRemoval && this.helper.remove(),
            this.helper = null,
            this.cancelHelperRemoval = !1
        },
        _trigger: function(t, n, r) {
            return r = r || this._uiHash(),
            e.ui.plugin.call(this, t, [n, r]),
            t == "drag" && (this.positionAbs = this._convertPositionTo("absolute")),
            e.Widget.prototype._trigger.call(this, t, n, r)
        },
        plugins: {},
        _uiHash: function(e) {
            return {
                helper: this.helper,
                position: this.position,
                originalPosition: this.originalPosition,
                offset: this.positionAbs
            }
        }
    }),
    e.ui.plugin.add("draggable", "connectToSortable", {
        start: function(t, n) {
            var r = e(this).data("draggable")
              , i = r.options
              , s = e.extend({}, n, {
                item: r.element
            });
            r.sortables = [],
            e(i.connectToSortable).each(function() {
                var n = e.data(this, "sortable");
                n && !n.options.disabled && (r.sortables.push({
                    instance: n,
                    shouldRevert: n.options.revert
                }),
                n.refreshPositions(),
                n._trigger("activate", t, s))
            })
        },
        stop: function(t, n) {
            var r = e(this).data("draggable")
              , i = e.extend({}, n, {
                item: r.element
            });
            e.each(r.sortables, function() {
                this.instance.isOver ? (this.instance.isOver = 0,
                r.cancelHelperRemoval = !0,
                this.instance.cancelHelperRemoval = !1,
                this.shouldRevert && (this.instance.options.revert = !0),
                this.instance._mouseStop(t),
                this.instance.options.helper = this.instance.options._helper,
                r.options.helper == "original" && this.instance.currentItem.css({
                    top: "auto",
                    left: "auto"
                })) : (this.instance.cancelHelperRemoval = !1,
                this.instance._trigger("deactivate", t, i))
            })
        },
        drag: function(t, n) {
            var r = e(this).data("draggable")
              , i = this
              , s = function(t) {
                var n = this.offset.click.top
                  , r = this.offset.click.left
                  , i = this.positionAbs.top
                  , s = this.positionAbs.left
                  , o = t.height
                  , u = t.width
                  , a = t.top
                  , f = t.left;
                return e.ui.isOver(i + n, s + r, a, f, o, u)
            };
            e.each(r.sortables, function(s) {
                this.instance.positionAbs = r.positionAbs,
                this.instance.helperProportions = r.helperProportions,
                this.instance.offset.click = r.offset.click,
                this.instance._intersectsWith(this.instance.containerCache) ? (this.instance.isOver || (this.instance.isOver = 1,
                this.instance.currentItem = e(i).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item", !0),
                this.instance.options._helper = this.instance.options.helper,
                this.instance.options.helper = function() {
                    return n.helper[0]
                }
                ,
                t.target = this.instance.currentItem[0],
                this.instance._mouseCapture(t, !0),
                this.instance._mouseStart(t, !0, !0),
                this.instance.offset.click.top = r.offset.click.top,
                this.instance.offset.click.left = r.offset.click.left,
                this.instance.offset.parent.left -= r.offset.parent.left - this.instance.offset.parent.left,
                this.instance.offset.parent.top -= r.offset.parent.top - this.instance.offset.parent.top,
                r._trigger("toSortable", t),
                r.dropped = this.instance.element,
                r.currentItem = r.element,
                this.instance.fromOutside = r),
                this.instance.currentItem && this.instance._mouseDrag(t)) : this.instance.isOver && (this.instance.isOver = 0,
                this.instance.cancelHelperRemoval = !0,
                this.instance.options.revert = !1,
                this.instance._trigger("out", t, this.instance._uiHash(this.instance)),
                this.instance._mouseStop(t, !0),
                this.instance.options.helper = this.instance.options._helper,
                this.instance.currentItem.remove(),
                this.instance.placeholder && this.instance.placeholder.remove(),
                r._trigger("fromSortable", t),
                r.dropped = !1)
            })
        }
    }),
    e.ui.plugin.add("draggable", "cursor", {
        start: function(t, n) {
            var r = e("body")
              , i = e(this).data("draggable").options;
            r.css("cursor") && (i._cursor = r.css("cursor")),
            r.css("cursor", i.cursor)
        },
        stop: function(t, n) {
            var r = e(this).data("draggable").options;
            r._cursor && e("body").css("cursor", r._cursor)
        }
    }),
    e.ui.plugin.add("draggable", "opacity", {
        start: function(t, n) {
            var r = e(n.helper)
              , i = e(this).data("draggable").options;
            r.css("opacity") && (i._opacity = r.css("opacity")),
            r.css("opacity", i.opacity)
        },
        stop: function(t, n) {
            var r = e(this).data("draggable").options;
            r._opacity && e(n.helper).css("opacity", r._opacity)
        }
    }),
    e.ui.plugin.add("draggable", "scroll", {
        start: function(t, n) {
            var r = e(this).data("draggable");
            r.scrollParent[0] != document && r.scrollParent[0].tagName != "HTML" && (r.overflowOffset = r.scrollParent.offset())
        },
        drag: function(t, n) {
            var r = e(this).data("draggable")
              , i = r.options
              , s = !1;
            if (r.scrollParent[0] != document && r.scrollParent[0].tagName != "HTML") {
                if (!i.axis || i.axis != "x")
                    r.overflowOffset.top + r.scrollParent[0].offsetHeight - t.pageY < i.scrollSensitivity ? r.scrollParent[0].scrollTop = s = r.scrollParent[0].scrollTop + i.scrollSpeed : t.pageY - r.overflowOffset.top < i.scrollSensitivity && (r.scrollParent[0].scrollTop = s = r.scrollParent[0].scrollTop - i.scrollSpeed);
                if (!i.axis || i.axis != "y")
                    r.overflowOffset.left + r.scrollParent[0].offsetWidth - t.pageX < i.scrollSensitivity ? r.scrollParent[0].scrollLeft = s = r.scrollParent[0].scrollLeft + i.scrollSpeed : t.pageX - r.overflowOffset.left < i.scrollSensitivity && (r.scrollParent[0].scrollLeft = s = r.scrollParent[0].scrollLeft - i.scrollSpeed)
            } else {
                if (!i.axis || i.axis != "x")
                    t.pageY - e(document).scrollTop() < i.scrollSensitivity ? s = e(document).scrollTop(e(document).scrollTop() - i.scrollSpeed) : e(window).height() - (t.pageY - e(document).scrollTop()) < i.scrollSensitivity && (s = e(document).scrollTop(e(document).scrollTop() + i.scrollSpeed));
                if (!i.axis || i.axis != "y")
                    t.pageX - e(document).scrollLeft() < i.scrollSensitivity ? s = e(document).scrollLeft(e(document).scrollLeft() - i.scrollSpeed) : e(window).width() - (t.pageX - e(document).scrollLeft()) < i.scrollSensitivity && (s = e(document).scrollLeft(e(document).scrollLeft() + i.scrollSpeed))
            }
            s !== !1 && e.ui.ddmanager && !i.dropBehaviour && e.ui.ddmanager.prepareOffsets(r, t)
        }
    }),
    e.ui.plugin.add("draggable", "snap", {
        start: function(t, n) {
            var r = e(this).data("draggable")
              , i = r.options;
            r.snapElements = [],
            e(i.snap.constructor != String ? i.snap.items || ":data(draggable)" : i.snap).each(function() {
                var t = e(this)
                  , n = t.offset();
                this != r.element[0] && r.snapElements.push({
                    item: this,
                    width: t.outerWidth(),
                    height: t.outerHeight(),
                    top: n.top,
                    left: n.left
                })
            })
        },
        drag: function(t, n) {
            var r = e(this).data("draggable")
              , i = r.options
              , s = i.snapTolerance
              , o = n.offset.left
              , u = o + r.helperProportions.width
              , a = n.offset.top
              , f = a + r.helperProportions.height;
            for (var l = r.snapElements.length - 1; l >= 0; l--) {
                var c = r.snapElements[l].left
                  , h = c + r.snapElements[l].width
                  , p = r.snapElements[l].top
                  , d = p + r.snapElements[l].height;
                if (!(c - s < o && o < h + s && p - s < a && a < d + s || c - s < o && o < h + s && p - s < f && f < d + s || c - s < u && u < h + s && p - s < a && a < d + s || c - s < u && u < h + s && p - s < f && f < d + s)) {
                    r.snapElements[l].snapping && r.options.snap.release && r.options.snap.release.call(r.element, t, e.extend(r._uiHash(), {
                        snapItem: r.snapElements[l].item
                    })),
                    r.snapElements[l].snapping = !1;
                    continue
                }
                if (i.snapMode != "inner") {
                    var v = Math.abs(p - f) <= s
                      , m = Math.abs(d - a) <= s
                      , g = Math.abs(c - u) <= s
                      , y = Math.abs(h - o) <= s;
                    v && (n.position.top = r._convertPositionTo("relative", {
                        top: p - r.helperProportions.height,
                        left: 0
                    }).top - r.margins.top),
                    m && (n.position.top = r._convertPositionTo("relative", {
                        top: d,
                        left: 0
                    }).top - r.margins.top),
                    g && (n.position.left = r._convertPositionTo("relative", {
                        top: 0,
                        left: c - r.helperProportions.width
                    }).left - r.margins.left),
                    y && (n.position.left = r._convertPositionTo("relative", {
                        top: 0,
                        left: h
                    }).left - r.margins.left)
                }
                var b = v || m || g || y;
                if (i.snapMode != "outer") {
                    var v = Math.abs(p - a) <= s
                      , m = Math.abs(d - f) <= s
                      , g = Math.abs(c - o) <= s
                      , y = Math.abs(h - u) <= s;
                    v && (n.position.top = r._convertPositionTo("relative", {
                        top: p,
                        left: 0
                    }).top - r.margins.top),
                    m && (n.position.top = r._convertPositionTo("relative", {
                        top: d - r.helperProportions.height,
                        left: 0
                    }).top - r.margins.top),
                    g && (n.position.left = r._convertPositionTo("relative", {
                        top: 0,
                        left: c
                    }).left - r.margins.left),
                    y && (n.position.left = r._convertPositionTo("relative", {
                        top: 0,
                        left: h - r.helperProportions.width
                    }).left - r.margins.left)
                }
                !r.snapElements[l].snapping && (v || m || g || y || b) && r.options.snap.snap && r.options.snap.snap.call(r.element, t, e.extend(r._uiHash(), {
                    snapItem: r.snapElements[l].item
                })),
                r.snapElements[l].snapping = v || m || g || y || b
            }
        }
    }),
    e.ui.plugin.add("draggable", "stack", {
        start: function(t, n) {
            var r = e(this).data("draggable").options
              , i = e.makeArray(e(r.stack)).sort(function(t, n) {
                return (parseInt(e(t).css("zIndex"), 10) || 0) - (parseInt(e(n).css("zIndex"), 10) || 0)
            });
            if (!i.length)
                return;
            var s = parseInt(i[0].style.zIndex) || 0;
            e(i).each(function(e) {
                this.style.zIndex = s + e
            }),
            this[0].style.zIndex = s + i.length
        }
    }),
    e.ui.plugin.add("draggable", "zIndex", {
        start: function(t, n) {
            var r = e(n.helper)
              , i = e(this).data("draggable").options;
            r.css("zIndex") && (i._zIndex = r.css("zIndex")),
            r.css("zIndex", i.zIndex)
        },
        stop: function(t, n) {
            var r = e(this).data("draggable").options;
            r._zIndex && e(n.helper).css("zIndex", r._zIndex)
        }
    })
}
)(jQuery);
(function(e, t) {
    e.widget("ui.droppable", {
        version: "1.9.0",
        widgetEventPrefix: "drop",
        options: {
            accept: "*",
            activeClass: !1,
            addClasses: !0,
            greedy: !1,
            hoverClass: !1,
            scope: "default",
            tolerance: "intersect"
        },
        _create: function() {
            var t = this.options
              , n = t.accept;
            this.isover = 0,
            this.isout = 1,
            this.accept = e.isFunction(n) ? n : function(e) {
                return e.is(n)
            }
            ,
            this.proportions = {
                width: this.element[0].offsetWidth,
                height: this.element[0].offsetHeight
            },
            e.ui.ddmanager.droppables[t.scope] = e.ui.ddmanager.droppables[t.scope] || [],
            e.ui.ddmanager.droppables[t.scope].push(this),
            t.addClasses && this.element.addClass("ui-droppable")
        },
        _destroy: function() {
            var t = e.ui.ddmanager.droppables[this.options.scope];
            for (var n = 0; n < t.length; n++)
                t[n] == this && t.splice(n, 1);
            this.element.removeClass("ui-droppable ui-droppable-disabled")
        },
        _setOption: function(t, n) {
            t == "accept" && (this.accept = e.isFunction(n) ? n : function(e) {
                return e.is(n)
            }
            ),
            e.Widget.prototype._setOption.apply(this, arguments)
        },
        _activate: function(t) {
            var n = e.ui.ddmanager.current;
            this.options.activeClass && this.element.addClass(this.options.activeClass),
            n && this._trigger("activate", t, this.ui(n))
        },
        _deactivate: function(t) {
            var n = e.ui.ddmanager.current;
            this.options.activeClass && this.element.removeClass(this.options.activeClass),
            n && this._trigger("deactivate", t, this.ui(n))
        },
        _over: function(t) {
            var n = e.ui.ddmanager.current;
            if (!n || (n.currentItem || n.element)[0] == this.element[0])
                return;
            this.accept.call(this.element[0], n.currentItem || n.element) && (this.options.hoverClass && this.element.addClass(this.options.hoverClass),
            this._trigger("over", t, this.ui(n)))
        },
        _out: function(t) {
            var n = e.ui.ddmanager.current;
            if (!n || (n.currentItem || n.element)[0] == this.element[0])
                return;
            this.accept.call(this.element[0], n.currentItem || n.element) && (this.options.hoverClass && this.element.removeClass(this.options.hoverClass),
            this._trigger("out", t, this.ui(n)))
        },
        _drop: function(t, n) {
            var r = n || e.ui.ddmanager.current;
            if (!r || (r.currentItem || r.element)[0] == this.element[0])
                return !1;
            var i = !1;
            return this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function() {
                var t = e.data(this, "droppable");
                if (t.options.greedy && !t.options.disabled && t.options.scope == r.options.scope && t.accept.call(t.element[0], r.currentItem || r.element) && e.ui.intersect(r, e.extend(t, {
                    offset: t.element.offset()
                }), t.options.tolerance))
                    return i = !0,
                    !1
            }),
            i ? !1 : this.accept.call(this.element[0], r.currentItem || r.element) ? (this.options.activeClass && this.element.removeClass(this.options.activeClass),
            this.options.hoverClass && this.element.removeClass(this.options.hoverClass),
            this._trigger("drop", t, this.ui(r)),
            this.element) : !1
        },
        ui: function(e) {
            return {
                draggable: e.currentItem || e.element,
                helper: e.helper,
                position: e.position,
                offset: e.positionAbs
            }
        }
    }),
    e.ui.intersect = function(t, n, r) {
        if (!n.offset)
            return !1;
        var i = (t.positionAbs || t.position.absolute).left
          , s = i + t.helperProportions.width
          , o = (t.positionAbs || t.position.absolute).top
          , u = o + t.helperProportions.height
          , a = n.offset.left
          , f = a + n.proportions.width
          , l = n.offset.top
          , c = l + n.proportions.height;
        switch (r) {
        case "fit":
            return a <= i && s <= f && l <= o && u <= c;
        case "intersect":
            return a < i + t.helperProportions.width / 2 && s - t.helperProportions.width / 2 < f && l < o + t.helperProportions.height / 2 && u - t.helperProportions.height / 2 < c;
        case "pointer":
            var h = (t.positionAbs || t.position.absolute).left + (t.clickOffset || t.offset.click).left
              , p = (t.positionAbs || t.position.absolute).top + (t.clickOffset || t.offset.click).top
              , d = e.ui.isOver(p, h, l, a, n.proportions.height, n.proportions.width);
            return d;
        case "touch":
            return (o >= l && o <= c || u >= l && u <= c || o < l && u > c) && (i >= a && i <= f || s >= a && s <= f || i < a && s > f);
        default:
            return !1
        }
    }
    ,
    e.ui.ddmanager = {
        current: null,
        droppables: {
            "default": []
        },
        prepareOffsets: function(t, n) {
            var r = e.ui.ddmanager.droppables[t.options.scope] || []
              , i = n ? n.type : null
              , s = (t.currentItem || t.element).find(":data(droppable)").andSelf();
            e: for (var o = 0; o < r.length; o++) {
                if (r[o].options.disabled || t && !r[o].accept.call(r[o].element[0], t.currentItem || t.element))
                    continue;
                for (var u = 0; u < s.length; u++)
                    if (s[u] == r[o].element[0]) {
                        r[o].proportions.height = 0;
                        continue e
                    }
                r[o].visible = r[o].element.css("display") != "none";
                if (!r[o].visible)
                    continue;
                i == "mousedown" && r[o]._activate.call(r[o], n),
                r[o].offset = r[o].element.offset(),
                r[o].proportions = {
                    width: r[o].element[0].offsetWidth,
                    height: r[o].element[0].offsetHeight
                }
            }
        },
        drop: function(t, n) {
            var r = !1;
            return e.each(e.ui.ddmanager.droppables[t.options.scope] || [], function() {
                if (!this.options)
                    return;
                !this.options.disabled && this.visible && e.ui.intersect(t, this, this.options.tolerance) && (r = this._drop.call(this, n) || r),
                !this.options.disabled && this.visible && this.accept.call(this.element[0], t.currentItem || t.element) && (this.isout = 1,
                this.isover = 0,
                this._deactivate.call(this, n))
            }),
            r
        },
        dragStart: function(t, n) {
            t.element.parentsUntil("body").bind("scroll.droppable", function() {
                t.options.refreshPositions || e.ui.ddmanager.prepareOffsets(t, n)
            })
        },
        drag: function(t, n) {
            t.options.refreshPositions && e.ui.ddmanager.prepareOffsets(t, n),
            e.each(e.ui.ddmanager.droppables[t.options.scope] || [], function() {
                if (this.options.disabled || this.greedyChild || !this.visible)
                    return;
                var r = e.ui.intersect(t, this, this.options.tolerance)
                  , i = !r && this.isover == 1 ? "isout" : r && this.isover == 0 ? "isover" : null;
                if (!i)
                    return;
                var s;
                if (this.options.greedy) {
                    var o = this.options.scope
                      , u = this.element.parents(":data(droppable)").filter(function() {
                        return e.data(this, "droppable").options.scope === o
                    });
                    u.length && (s = e.data(u[0], "droppable"),
                    s.greedyChild = i == "isover" ? 1 : 0)
                }
                s && i == "isover" && (s.isover = 0,
                s.isout = 1,
                s._out.call(s, n)),
                this[i] = 1,
                this[i == "isout" ? "isover" : "isout"] = 0,
                this[i == "isover" ? "_over" : "_out"].call(this, n),
                s && i == "isout" && (s.isout = 0,
                s.isover = 1,
                s._over.call(s, n))
            })
        },
        dragStop: function(t, n) {
            t.element.parentsUntil("body").unbind("scroll.droppable"),
            t.options.refreshPositions || e.ui.ddmanager.prepareOffsets(t, n)
        }
    }
}
)(jQuery);
(function(e, t) {
    e.widget("ui.resizable", e.ui.mouse, {
        version: "1.9.0",
        widgetEventPrefix: "resize",
        options: {
            alsoResize: !1,
            animate: !1,
            animateDuration: "slow",
            animateEasing: "swing",
            aspectRatio: !1,
            autoHide: !1,
            containment: !1,
            ghost: !1,
            grid: !1,
            handles: "e,s,se",
            helper: !1,
            maxHeight: null,
            maxWidth: null,
            minHeight: 10,
            minWidth: 10,
            zIndex: 1e3
        },
        _create: function() {
            var t = this
              , n = this.options;
            this.element.addClass("ui-resizable"),
            e.extend(this, {
                _aspectRatio: !!n.aspectRatio,
                aspectRatio: n.aspectRatio,
                originalElement: this.element,
                _proportionallyResizeElements: [],
                _helper: n.helper || n.ghost || n.animate ? n.helper || "ui-resizable-helper" : null
            }),
            this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i) && (this.element.wrap(e('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({
                position: this.element.css("position"),
                width: this.element.outerWidth(),
                height: this.element.outerHeight(),
                top: this.element.css("top"),
                left: this.element.css("left")
            })),
            this.element = this.element.parent().data("resizable", this.element.data("resizable")),
            this.elementIsWrapper = !0,
            this.element.css({
                marginLeft: this.originalElement.css("marginLeft"),
                marginTop: this.originalElement.css("marginTop"),
                marginRight: this.originalElement.css("marginRight"),
                marginBottom: this.originalElement.css("marginBottom")
            }),
            this.originalElement.css({
                marginLeft: 0,
                marginTop: 0,
                marginRight: 0,
                marginBottom: 0
            }),
            this.originalResizeStyle = this.originalElement.css("resize"),
            this.originalElement.css("resize", "none"),
            this._proportionallyResizeElements.push(this.originalElement.css({
                position: "static",
                zoom: 1,
                display: "block"
            })),
            this.originalElement.css({
                margin: this.originalElement.css("margin")
            }),
            this._proportionallyResize()),
            this.handles = n.handles || (e(".ui-resizable-handle", this.element).length ? {
                n: ".ui-resizable-n",
                e: ".ui-resizable-e",
                s: ".ui-resizable-s",
                w: ".ui-resizable-w",
                se: ".ui-resizable-se",
                sw: ".ui-resizable-sw",
                ne: ".ui-resizable-ne",
                nw: ".ui-resizable-nw"
            } : "e,s,se");
            if (this.handles.constructor == String) {
                this.handles == "all" && (this.handles = "n,e,s,w,se,sw,ne,nw");
                var r = this.handles.split(",");
                this.handles = {};
                for (var i = 0; i < r.length; i++) {
                    var s = e.trim(r[i])
                      , o = "ui-resizable-" + s
                      , u = e('<div class="ui-resizable-handle ' + o + '"></div>');
                    u.css({
                        zIndex: n.zIndex
                    }),
                    "se" == s && u.addClass("ui-icon ui-icon-gripsmall-diagonal-se"),
                    this.handles[s] = ".ui-resizable-" + s,
                    this.element.append(u)
                }
            }
            this._renderAxis = function(t) {
                t = t || this.element;
                for (var n in this.handles) {
                    this.handles[n].constructor == String && (this.handles[n] = e(this.handles[n], this.element).show());
                    if (this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i)) {
                        var r = e(this.handles[n], this.element)
                          , i = 0;
                        i = /sw|ne|nw|se|n|s/.test(n) ? r.outerHeight() : r.outerWidth();
                        var s = ["padding", /ne|nw|n/.test(n) ? "Top" : /se|sw|s/.test(n) ? "Bottom" : /^e$/.test(n) ? "Right" : "Left"].join("");
                        t.css(s, i),
                        this._proportionallyResize()
                    }
                    if (!e(this.handles[n]).length)
                        continue
                }
            }
            ,
            this._renderAxis(this.element),
            this._handles = e(".ui-resizable-handle", this.element).disableSelection(),
            this._handles.mouseover(function() {
                if (!t.resizing) {
                    if (this.className)
                        var e = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);
                    t.axis = e && e[1] ? e[1] : "se"
                }
            }),
            n.autoHide && (this._handles.hide(),
            e(this.element).addClass("ui-resizable-autohide").mouseenter(function() {
                if (n.disabled)
                    return;
                e(this).removeClass("ui-resizable-autohide"),
                t._handles.show()
            }).mouseleave(function() {
                if (n.disabled)
                    return;
                t.resizing || (e(this).addClass("ui-resizable-autohide"),
                t._handles.hide())
            })),
            this._mouseInit()
        },
        _destroy: function() {
            this._mouseDestroy();
            var t = function(t) {
                e(t).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()
            };
            if (this.elementIsWrapper) {
                t(this.element);
                var n = this.element;
                n.after(this.originalElement.css({
                    position: n.css("position"),
                    width: n.outerWidth(),
                    height: n.outerHeight(),
                    top: n.css("top"),
                    left: n.css("left")
                })).remove()
            }
            return this.originalElement.css("resize", this.originalResizeStyle),
            t(this.originalElement),
            this
        },
        _mouseCapture: function(t) {
            var n = !1;
            for (var r in this.handles)
                e(this.handles[r])[0] == t.target && (n = !0);
            return !this.options.disabled && n
        },
        _mouseStart: function(t) {
            var r = this.options
              , i = this.element.position()
              , s = this.element;
            this.resizing = !0,
            this.documentScroll = {
                top: e(document).scrollTop(),
                left: e(document).scrollLeft()
            },
            (s.is(".ui-draggable") || /absolute/.test(s.css("position"))) && s.css({
                position: "absolute",
                top: i.top,
                left: i.left
            }),
            this._renderProxy();
            var o = n(this.helper.css("left"))
              , u = n(this.helper.css("top"));
            r.containment && (o += e(r.containment).scrollLeft() || 0,
            u += e(r.containment).scrollTop() || 0),
            this.offset = this.helper.offset(),
            this.position = {
                left: o,
                top: u
            },
            this.size = this._helper ? {
                width: s.outerWidth(),
                height: s.outerHeight()
            } : {
                width: s.width(),
                height: s.height()
            },
            this.originalSize = this._helper ? {
                width: s.outerWidth(),
                height: s.outerHeight()
            } : {
                width: s.width(),
                height: s.height()
            },
            this.originalPosition = {
                left: o,
                top: u
            },
            this.sizeDiff = {
                width: s.outerWidth() - s.width(),
                height: s.outerHeight() - s.height()
            },
            this.originalMousePosition = {
                left: t.pageX,
                top: t.pageY
            },
            this.aspectRatio = typeof r.aspectRatio == "number" ? r.aspectRatio : this.originalSize.width / this.originalSize.height || 1;
            var a = e(".ui-resizable-" + this.axis).css("cursor");
            return e("body").css("cursor", a == "auto" ? this.axis + "-resize" : a),
            s.addClass("ui-resizable-resizing"),
            this._propagate("start", t),
            !0
        },
        _mouseDrag: function(e) {
            var t = this.helper
              , n = this.options
              , r = {}
              , i = this
              , s = this.originalMousePosition
              , o = this.axis
              , u = e.pageX - s.left || 0
              , a = e.pageY - s.top || 0
              , f = this._change[o];
            if (!f)
                return !1;
            var l = f.apply(this, [e, u, a]);
            this._updateVirtualBoundaries(e.shiftKey);
            if (this._aspectRatio || e.shiftKey)
                l = this._updateRatio(l, e);
            return l = this._respectSize(l, e),
            this._propagate("resize", e),
            t.css({
                top: this.position.top + "px",
                left: this.position.left + "px",
                width: this.size.width + "px",
                height: this.size.height + "px"
            }),
            !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize(),
            this._updateCache(l),
            this._trigger("resize", e, this.ui()),
            !1
        },
        _mouseStop: function(t) {
            this.resizing = !1;
            var n = this.options
              , r = this;
            if (this._helper) {
                var i = this._proportionallyResizeElements
                  , s = i.length && /textarea/i.test(i[0].nodeName)
                  , o = s && e.ui.hasScroll(i[0], "left") ? 0 : r.sizeDiff.height
                  , u = s ? 0 : r.sizeDiff.width
                  , a = {
                    width: r.helper.width() - u,
                    height: r.helper.height() - o
                }
                  , f = parseInt(r.element.css("left"), 10) + (r.position.left - r.originalPosition.left) || null
                  , l = parseInt(r.element.css("top"), 10) + (r.position.top - r.originalPosition.top) || null;
                n.animate || this.element.css(e.extend(a, {
                    top: l,
                    left: f
                })),
                r.helper.height(r.size.height),
                r.helper.width(r.size.width),
                this._helper && !n.animate && this._proportionallyResize()
            }
            return e("body").css("cursor", "auto"),
            this.element.removeClass("ui-resizable-resizing"),
            this._propagate("stop", t),
            this._helper && this.helper.remove(),
            !1
        },
        _updateVirtualBoundaries: function(e) {
            var t = this.options, n, i, s, o, u;
            u = {
                minWidth: r(t.minWidth) ? t.minWidth : 0,
                maxWidth: r(t.maxWidth) ? t.maxWidth : Infinity,
                minHeight: r(t.minHeight) ? t.minHeight : 0,
                maxHeight: r(t.maxHeight) ? t.maxHeight : Infinity
            };
            if (this._aspectRatio || e)
                n = u.minHeight * this.aspectRatio,
                s = u.minWidth / this.aspectRatio,
                i = u.maxHeight * this.aspectRatio,
                o = u.maxWidth / this.aspectRatio,
                n > u.minWidth && (u.minWidth = n),
                s > u.minHeight && (u.minHeight = s),
                i < u.maxWidth && (u.maxWidth = i),
                o < u.maxHeight && (u.maxHeight = o);
            this._vBoundaries = u
        },
        _updateCache: function(e) {
            var t = this.options;
            this.offset = this.helper.offset(),
            r(e.left) && (this.position.left = e.left),
            r(e.top) && (this.position.top = e.top),
            r(e.height) && (this.size.height = e.height),
            r(e.width) && (this.size.width = e.width)
        },
        _updateRatio: function(e, t) {
            var n = this.options
              , i = this.position
              , s = this.size
              , o = this.axis;
            return r(e.height) ? e.width = e.height * this.aspectRatio : r(e.width) && (e.height = e.width / this.aspectRatio),
            o == "sw" && (e.left = i.left + (s.width - e.width),
            e.top = null),
            o == "nw" && (e.top = i.top + (s.height - e.height),
            e.left = i.left + (s.width - e.width)),
            e
        },
        _respectSize: function(e, t) {
            var n = this.helper
              , i = this._vBoundaries
              , s = this._aspectRatio || t.shiftKey
              , o = this.axis
              , u = r(e.width) && i.maxWidth && i.maxWidth < e.width
              , a = r(e.height) && i.maxHeight && i.maxHeight < e.height
              , f = r(e.width) && i.minWidth && i.minWidth > e.width
              , l = r(e.height) && i.minHeight && i.minHeight > e.height;
            f && (e.width = i.minWidth),
            l && (e.height = i.minHeight),
            u && (e.width = i.maxWidth),
            a && (e.height = i.maxHeight);
            var c = this.originalPosition.left + this.originalSize.width
              , h = this.position.top + this.size.height
              , p = /sw|nw|w/.test(o)
              , d = /nw|ne|n/.test(o);
            f && p && (e.left = c - i.minWidth),
            u && p && (e.left = c - i.maxWidth),
            l && d && (e.top = h - i.minHeight),
            a && d && (e.top = h - i.maxHeight);
            var v = !e.width && !e.height;
            return v && !e.left && e.top ? e.top = null : v && !e.top && e.left && (e.left = null),
            e
        },
        _proportionallyResize: function() {
            var t = this.options;
            if (!this._proportionallyResizeElements.length)
                return;
            var n = this.helper || this.element;
            for (var r = 0; r < this._proportionallyResizeElements.length; r++) {
                var i = this._proportionallyResizeElements[r];
                if (!this.borderDif) {
                    var s = [i.css("borderTopWidth"), i.css("borderRightWidth"), i.css("borderBottomWidth"), i.css("borderLeftWidth")]
                      , o = [i.css("paddingTop"), i.css("paddingRight"), i.css("paddingBottom"), i.css("paddingLeft")];
                    this.borderDif = e.map(s, function(e, t) {
                        var n = parseInt(e, 10) || 0
                          , r = parseInt(o[t], 10) || 0;
                        return n + r
                    })
                }
                i.css({
                    height: n.height() - this.borderDif[0] - this.borderDif[2] || 0,
                    width: n.width() - this.borderDif[1] - this.borderDif[3] || 0
                })
            }
        },
        _renderProxy: function() {
            var t = this.element
              , n = this.options;
            this.elementOffset = t.offset();
            if (this._helper) {
                this.helper = this.helper || e('<div style="overflow:hidden;"></div>');
                var r = e.browser.msie && e.browser.version < 7
                  , i = r ? 1 : 0
                  , s = r ? 2 : -1;
                this.helper.addClass(this._helper).css({
                    width: this.element.outerWidth() + s,
                    height: this.element.outerHeight() + s,
                    position: "absolute",
                    left: this.elementOffset.left - i + "px",
                    top: this.elementOffset.top - i + "px",
                    zIndex: ++n.zIndex
                }),
                this.helper.appendTo("body").disableSelection()
            } else
                this.helper = this.element
        },
        _change: {
            e: function(e, t, n) {
                return {
                    width: this.originalSize.width + t
                }
            },
            w: function(e, t, n) {
                var r = this.options
                  , i = this.originalSize
                  , s = this.originalPosition;
                return {
                    left: s.left + t,
                    width: i.width - t
                }
            },
            n: function(e, t, n) {
                var r = this.options
                  , i = this.originalSize
                  , s = this.originalPosition;
                return {
                    top: s.top + n,
                    height: i.height - n
                }
            },
            s: function(e, t, n) {
                return {
                    height: this.originalSize.height + n
                }
            },
            se: function(t, n, r) {
                return e.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [t, n, r]))
            },
            sw: function(t, n, r) {
                return e.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [t, n, r]))
            },
            ne: function(t, n, r) {
                return e.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [t, n, r]))
            },
            nw: function(t, n, r) {
                return e.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [t, n, r]))
            }
        },
        _propagate: function(t, n) {
            e.ui.plugin.call(this, t, [n, this.ui()]),
            t != "resize" && this._trigger(t, n, this.ui())
        },
        plugins: {},
        ui: function() {
            return {
                originalElement: this.originalElement,
                element: this.element,
                helper: this.helper,
                position: this.position,
                size: this.size,
                originalSize: this.originalSize,
                originalPosition: this.originalPosition
            }
        }
    }),
    e.ui.plugin.add("resizable", "alsoResize", {
        start: function(t, n) {
            var r = e(this).data("resizable")
              , i = r.options
              , s = function(t) {
                e(t).each(function() {
                    var t = e(this);
                    t.data("resizable-alsoresize", {
                        width: parseInt(t.width(), 10),
                        height: parseInt(t.height(), 10),
                        left: parseInt(t.css("left"), 10),
                        top: parseInt(t.css("top"), 10)
                    })
                })
            };
            typeof i.alsoResize == "object" && !i.alsoResize.parentNode ? i.alsoResize.length ? (i.alsoResize = i.alsoResize[0],
            s(i.alsoResize)) : e.each(i.alsoResize, function(e) {
                s(e)
            }) : s(i.alsoResize)
        },
        resize: function(t, n) {
            var r = e(this).data("resizable")
              , i = r.options
              , s = r.originalSize
              , o = r.originalPosition
              , u = {
                height: r.size.height - s.height || 0,
                width: r.size.width - s.width || 0,
                top: r.position.top - o.top || 0,
                left: r.position.left - o.left || 0
            }
              , a = function(t, r) {
                e(t).each(function() {
                    var t = e(this)
                      , i = e(this).data("resizable-alsoresize")
                      , s = {}
                      , o = r && r.length ? r : t.parents(n.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];
                    e.each(o, function(e, t) {
                        var n = (i[t] || 0) + (u[t] || 0);
                        n && n >= 0 && (s[t] = n || null)
                    }),
                    t.css(s)
                })
            };
            typeof i.alsoResize == "object" && !i.alsoResize.nodeType ? e.each(i.alsoResize, function(e, t) {
                a(e, t)
            }) : a(i.alsoResize)
        },
        stop: function(t, n) {
            e(this).removeData("resizable-alsoresize")
        }
    }),
    e.ui.plugin.add("resizable", "animate", {
        stop: function(t, n) {
            var r = e(this).data("resizable")
              , i = r.options
              , s = r._proportionallyResizeElements
              , o = s.length && /textarea/i.test(s[0].nodeName)
              , u = o && e.ui.hasScroll(s[0], "left") ? 0 : r.sizeDiff.height
              , a = o ? 0 : r.sizeDiff.width
              , f = {
                width: r.size.width - a,
                height: r.size.height - u
            }
              , l = parseInt(r.element.css("left"), 10) + (r.position.left - r.originalPosition.left) || null
              , c = parseInt(r.element.css("top"), 10) + (r.position.top - r.originalPosition.top) || null;
            r.element.animate(e.extend(f, c && l ? {
                top: c,
                left: l
            } : {}), {
                duration: i.animateDuration,
                easing: i.animateEasing,
                step: function() {
                    var n = {
                        width: parseInt(r.element.css("width"), 10),
                        height: parseInt(r.element.css("height"), 10),
                        top: parseInt(r.element.css("top"), 10),
                        left: parseInt(r.element.css("left"), 10)
                    };
                    s && s.length && e(s[0]).css({
                        width: n.width,
                        height: n.height
                    }),
                    r._updateCache(n),
                    r._propagate("resize", t)
                }
            })
        }
    }),
    e.ui.plugin.add("resizable", "containment", {
        start: function(t, r) {
            var i = e(this).data("resizable")
              , s = i.options
              , o = i.element
              , u = s.containment
              , a = u instanceof e ? u.get(0) : /parent/.test(u) ? o.parent().get(0) : u;
            if (!a)
                return;
            i.containerElement = e(a);
            if (/document/.test(u) || u == document)
                i.containerOffset = {
                    left: 0,
                    top: 0
                },
                i.containerPosition = {
                    left: 0,
                    top: 0
                },
                i.parentData = {
                    element: e(document),
                    left: 0,
                    top: 0,
                    width: e(document).width(),
                    height: e(document).height() || document.body.parentNode.scrollHeight
                };
            else {
                var f = e(a)
                  , l = [];
                e(["Top", "Right", "Left", "Bottom"]).each(function(e, t) {
                    l[e] = n(f.css("padding" + t))
                }),
                i.containerOffset = f.offset(),
                i.containerPosition = f.position(),
                i.containerSize = {
                    height: f.innerHeight() - l[3],
                    width: f.innerWidth() - l[1]
                };
                var c = i.containerOffset
                  , h = i.containerSize.height
                  , p = i.containerSize.width
                  , d = e.ui.hasScroll(a, "left") ? a.scrollWidth : p
                  , v = e.ui.hasScroll(a) ? a.scrollHeight : h;
                i.parentData = {
                    element: a,
                    left: c.left,
                    top: c.top,
                    width: d,
                    height: v
                }
            }
        },
        resize: function(t, n) {
            var r = e(this).data("resizable")
              , i = r.options
              , s = r.containerSize
              , o = r.containerOffset
              , u = r.size
              , a = r.position
              , f = r._aspectRatio || t.shiftKey
              , l = {
                top: 0,
                left: 0
            }
              , c = r.containerElement;
            c[0] != document && /static/.test(c.css("position")) && (l = o),
            a.left < (r._helper ? o.left : 0) && (r.size.width = r.size.width + (r._helper ? r.position.left - o.left : r.position.left - l.left),
            f && (r.size.height = r.size.width / r.aspectRatio),
            r.position.left = i.helper ? o.left : 0),
            a.top < (r._helper ? o.top : 0) && (r.size.height = r.size.height + (r._helper ? r.position.top - o.top : r.position.top),
            f && (r.size.width = r.size.height * r.aspectRatio),
            r.position.top = r._helper ? o.top : 0),
            r.offset.left = r.parentData.left + r.position.left,
            r.offset.top = r.parentData.top + r.position.top;
            var h = Math.abs((r._helper ? r.offset.left - l.left : r.offset.left - l.left) + r.sizeDiff.width)
              , p = Math.abs((r._helper ? r.offset.top - l.top : r.offset.top - o.top) + r.sizeDiff.height)
              , d = r.containerElement.get(0) == r.element.parent().get(0)
              , v = /relative|absolute/.test(r.containerElement.css("position"));
            d && v && (h -= r.parentData.left),
            h + r.size.width >= r.parentData.width && (r.size.width = r.parentData.width - h,
            f && (r.size.height = r.size.width / r.aspectRatio)),
            p + r.size.height >= r.parentData.height && (r.size.height = r.parentData.height - p,
            f && (r.size.width = r.size.height * r.aspectRatio))
        },
        stop: function(t, n) {
            var r = e(this).data("resizable")
              , i = r.options
              , s = r.position
              , o = r.containerOffset
              , u = r.containerPosition
              , a = r.containerElement
              , f = e(r.helper)
              , l = f.offset()
              , c = f.outerWidth() - r.sizeDiff.width
              , h = f.outerHeight() - r.sizeDiff.height;
            r._helper && !i.animate && /relative/.test(a.css("position")) && e(this).css({
                left: l.left - u.left - o.left,
                width: c,
                height: h
            }),
            r._helper && !i.animate && /static/.test(a.css("position")) && e(this).css({
                left: l.left - u.left - o.left,
                width: c,
                height: h
            })
        }
    }),
    e.ui.plugin.add("resizable", "ghost", {
        start: function(t, n) {
            var r = e(this).data("resizable")
              , i = r.options
              , s = r.size;
            r.ghost = r.originalElement.clone(),
            r.ghost.css({
                opacity: .25,
                display: "block",
                position: "relative",
                height: s.height,
                width: s.width,
                margin: 0,
                left: 0,
                top: 0
            }).addClass("ui-resizable-ghost").addClass(typeof i.ghost == "string" ? i.ghost : ""),
            r.ghost.appendTo(r.helper)
        },
        resize: function(t, n) {
            var r = e(this).data("resizable")
              , i = r.options;
            r.ghost && r.ghost.css({
                position: "relative",
                height: r.size.height,
                width: r.size.width
            })
        },
        stop: function(t, n) {
            var r = e(this).data("resizable")
              , i = r.options;
            r.ghost && r.helper && r.helper.get(0).removeChild(r.ghost.get(0))
        }
    }),
    e.ui.plugin.add("resizable", "grid", {
        resize: function(t, n) {
            var r = e(this).data("resizable")
              , i = r.options
              , s = r.size
              , o = r.originalSize
              , u = r.originalPosition
              , a = r.axis
              , f = i._aspectRatio || t.shiftKey;
            i.grid = typeof i.grid == "number" ? [i.grid, i.grid] : i.grid;
            var l = Math.round((s.width - o.width) / (i.grid[0] || 1)) * (i.grid[0] || 1)
              , c = Math.round((s.height - o.height) / (i.grid[1] || 1)) * (i.grid[1] || 1);
            /^(se|s|e)$/.test(a) ? (r.size.width = o.width + l,
            r.size.height = o.height + c) : /^(ne)$/.test(a) ? (r.size.width = o.width + l,
            r.size.height = o.height + c,
            r.position.top = u.top - c) : /^(sw)$/.test(a) ? (r.size.width = o.width + l,
            r.size.height = o.height + c,
            r.position.left = u.left - l) : (r.size.width = o.width + l,
            r.size.height = o.height + c,
            r.position.top = u.top - c,
            r.position.left = u.left - l)
        }
    });
    var n = function(e) {
        return parseInt(e, 10) || 0
    }
      , r = function(e) {
        return !isNaN(parseInt(e, 10))
    }
}
)(jQuery);
(function(e, t) {
    e.widget("ui.selectable", e.ui.mouse, {
        version: "1.9.0",
        options: {
            appendTo: "body",
            autoRefresh: !0,
            distance: 0,
            filter: "*",
            tolerance: "touch"
        },
        _create: function() {
            var t = this;
            this.element.addClass("ui-selectable"),
            this.dragged = !1;
            var n;
            this.refresh = function() {
                n = e(t.options.filter, t.element[0]),
                n.addClass("ui-selectee"),
                n.each(function() {
                    var t = e(this)
                      , n = t.offset();
                    e.data(this, "selectable-item", {
                        element: this,
                        $element: t,
                        left: n.left,
                        top: n.top,
                        right: n.left + t.outerWidth(),
                        bottom: n.top + t.outerHeight(),
                        startselected: !1,
                        selected: t.hasClass("ui-selected"),
                        selecting: t.hasClass("ui-selecting"),
                        unselecting: t.hasClass("ui-unselecting")
                    })
                })
            }
            ,
            this.refresh(),
            this.selectees = n.addClass("ui-selectee"),
            this._mouseInit(),
            this.helper = e("<div class='ui-selectable-helper'></div>")
        },
        _destroy: function() {
            this.selectees.removeClass("ui-selectee").removeData("selectable-item"),
            this.element.removeClass("ui-selectable ui-selectable-disabled"),
            this._mouseDestroy()
        },
        _mouseStart: function(t) {
            var n = this;
            this.opos = [t.pageX, t.pageY];
            if (this.options.disabled)
                return;
            var r = this.options;
            this.selectees = e(r.filter, this.element[0]),
            this._trigger("start", t),
            e(r.appendTo).append(this.helper),
            this.helper.css({
                left: t.clientX,
                top: t.clientY,
                width: 0,
                height: 0
            }),
            r.autoRefresh && this.refresh(),
            this.selectees.filter(".ui-selected").each(function() {
                var r = e.data(this, "selectable-item");
                r.startselected = !0,
                !t.metaKey && !t.ctrlKey && (r.$element.removeClass("ui-selected"),
                r.selected = !1,
                r.$element.addClass("ui-unselecting"),
                r.unselecting = !0,
                n._trigger("unselecting", t, {
                    unselecting: r.element
                }))
            }),
            e(t.target).parents().andSelf().each(function() {
                var r = e.data(this, "selectable-item");
                if (r) {
                    var i = !t.metaKey && !t.ctrlKey || !r.$element.hasClass("ui-selected");
                    return r.$element.removeClass(i ? "ui-unselecting" : "ui-selected").addClass(i ? "ui-selecting" : "ui-unselecting"),
                    r.unselecting = !i,
                    r.selecting = i,
                    r.selected = i,
                    i ? n._trigger("selecting", t, {
                        selecting: r.element
                    }) : n._trigger("unselecting", t, {
                        unselecting: r.element
                    }),
                    !1
                }
            })
        },
        _mouseDrag: function(t) {
            var n = this;
            this.dragged = !0;
            if (this.options.disabled)
                return;
            var r = this.options
              , i = this.opos[0]
              , s = this.opos[1]
              , o = t.pageX
              , u = t.pageY;
            if (i > o) {
                var a = o;
                o = i,
                i = a
            }
            if (s > u) {
                var a = u;
                u = s,
                s = a
            }
            return this.helper.css({
                left: i,
                top: s,
                width: o - i,
                height: u - s
            }),
            this.selectees.each(function() {
                var a = e.data(this, "selectable-item");
                if (!a || a.element == n.element[0])
                    return;
                var f = !1;
                r.tolerance == "touch" ? f = !(a.left > o || a.right < i || a.top > u || a.bottom < s) : r.tolerance == "fit" && (f = a.left > i && a.right < o && a.top > s && a.bottom < u),
                f ? (a.selected && (a.$element.removeClass("ui-selected"),
                a.selected = !1),
                a.unselecting && (a.$element.removeClass("ui-unselecting"),
                a.unselecting = !1),
                a.selecting || (a.$element.addClass("ui-selecting"),
                a.selecting = !0,
                n._trigger("selecting", t, {
                    selecting: a.element
                }))) : (a.selecting && ((t.metaKey || t.ctrlKey) && a.startselected ? (a.$element.removeClass("ui-selecting"),
                a.selecting = !1,
                a.$element.addClass("ui-selected"),
                a.selected = !0) : (a.$element.removeClass("ui-selecting"),
                a.selecting = !1,
                a.startselected && (a.$element.addClass("ui-unselecting"),
                a.unselecting = !0),
                n._trigger("unselecting", t, {
                    unselecting: a.element
                }))),
                a.selected && !t.metaKey && !t.ctrlKey && !a.startselected && (a.$element.removeClass("ui-selected"),
                a.selected = !1,
                a.$element.addClass("ui-unselecting"),
                a.unselecting = !0,
                n._trigger("unselecting", t, {
                    unselecting: a.element
                })))
            }),
            !1
        },
        _mouseStop: function(t) {
            var n = this;
            this.dragged = !1;
            var r = this.options;
            return e(".ui-unselecting", this.element[0]).each(function() {
                var r = e.data(this, "selectable-item");
                r.$element.removeClass("ui-unselecting"),
                r.unselecting = !1,
                r.startselected = !1,
                n._trigger("unselected", t, {
                    unselected: r.element
                })
            }),
            e(".ui-selecting", this.element[0]).each(function() {
                var r = e.data(this, "selectable-item");
                r.$element.removeClass("ui-selecting").addClass("ui-selected"),
                r.selecting = !1,
                r.selected = !0,
                r.startselected = !0,
                n._trigger("selected", t, {
                    selected: r.element
                })
            }),
            this._trigger("stop", t),
            this.helper.remove(),
            !1
        }
    })
}
)(jQuery);
(function(e, t) {
    e.widget("ui.sortable", e.ui.mouse, {
        version: "1.9.0",
        widgetEventPrefix: "sort",
        ready: !1,
        options: {
            appendTo: "parent",
            axis: !1,
            connectWith: !1,
            containment: !1,
            cursor: "auto",
            cursorAt: !1,
            dropOnEmpty: !0,
            forcePlaceholderSize: !1,
            forceHelperSize: !1,
            grid: !1,
            handle: !1,
            helper: "original",
            items: "> *",
            opacity: !1,
            placeholder: !1,
            revert: !1,
            scroll: !0,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            scope: "default",
            tolerance: "intersect",
            zIndex: 1e3
        },
        _create: function() {
            var e = this.options;
            this.containerCache = {},
            this.element.addClass("ui-sortable"),
            this.refresh(),
            this.floating = this.items.length ? e.axis === "x" || /left|right/.test(this.items[0].item.css("float")) || /inline|table-cell/.test(this.items[0].item.css("display")) : !1,
            this.offset = this.element.offset(),
            this._mouseInit(),
            this.ready = !0
        },
        _destroy: function() {
            this.element.removeClass("ui-sortable ui-sortable-disabled"),
            this._mouseDestroy();
            for (var e = this.items.length - 1; e >= 0; e--)
                this.items[e].item.removeData(this.widgetName + "-item");
            return this
        },
        _setOption: function(t, n) {
            t === "disabled" ? (this.options[t] = n,
            this.widget().toggleClass("ui-sortable-disabled", !!n)) : e.Widget.prototype._setOption.apply(this, arguments)
        },
        _mouseCapture: function(t, n) {
            var r = this;
            if (this.reverting)
                return !1;
            if (this.options.disabled || this.options.type == "static")
                return !1;
            this._refreshItems(t);
            var i = null
              , s = e(t.target).parents().each(function() {
                if (e.data(this, r.widgetName + "-item") == r)
                    return i = e(this),
                    !1
            });
            e.data(t.target, r.widgetName + "-item") == r && (i = e(t.target));
            if (!i)
                return !1;
            if (this.options.handle && !n) {
                var o = !1;
                e(this.options.handle, i).find("*").andSelf().each(function() {
                    this == t.target && (o = !0)
                });
                if (!o)
                    return !1
            }
            return this.currentItem = i,
            this._removeCurrentsFromItems(),
            !0
        },
        _mouseStart: function(t, n, r) {
            var i = this.options;
            this.currentContainer = this,
            this.refreshPositions(),
            this.helper = this._createHelper(t),
            this._cacheHelperProportions(),
            this._cacheMargins(),
            this.scrollParent = this.helper.scrollParent(),
            this.offset = this.currentItem.offset(),
            this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            },
            e.extend(this.offset, {
                click: {
                    left: t.pageX - this.offset.left,
                    top: t.pageY - this.offset.top
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            }),
            this.helper.css("position", "absolute"),
            this.cssPosition = this.helper.css("position"),
            this.originalPosition = this._generatePosition(t),
            this.originalPageX = t.pageX,
            this.originalPageY = t.pageY,
            i.cursorAt && this._adjustOffsetFromHelper(i.cursorAt),
            this.domPosition = {
                prev: this.currentItem.prev()[0],
                parent: this.currentItem.parent()[0]
            },
            this.helper[0] != this.currentItem[0] && this.currentItem.hide(),
            this._createPlaceholder(),
            i.containment && this._setContainment(),
            i.cursor && (e("body").css("cursor") && (this._storedCursor = e("body").css("cursor")),
            e("body").css("cursor", i.cursor)),
            i.opacity && (this.helper.css("opacity") && (this._storedOpacity = this.helper.css("opacity")),
            this.helper.css("opacity", i.opacity)),
            i.zIndex && (this.helper.css("zIndex") && (this._storedZIndex = this.helper.css("zIndex")),
            this.helper.css("zIndex", i.zIndex)),
            this.scrollParent[0] != document && this.scrollParent[0].tagName != "HTML" && (this.overflowOffset = this.scrollParent.offset()),
            this._trigger("start", t, this._uiHash()),
            this._preserveHelperProportions || this._cacheHelperProportions();
            if (!r)
                for (var s = this.containers.length - 1; s >= 0; s--)
                    this.containers[s]._trigger("activate", t, this._uiHash(this));
            return e.ui.ddmanager && (e.ui.ddmanager.current = this),
            e.ui.ddmanager && !i.dropBehaviour && e.ui.ddmanager.prepareOffsets(this, t),
            this.dragging = !0,
            this.helper.addClass("ui-sortable-helper"),
            this._mouseDrag(t),
            !0
        },
        _mouseDrag: function(t) {
            this.position = this._generatePosition(t),
            this.positionAbs = this._convertPositionTo("absolute"),
            this.lastPositionAbs || (this.lastPositionAbs = this.positionAbs);
            if (this.options.scroll) {
                var n = this.options
                  , r = !1;
                this.scrollParent[0] != document && this.scrollParent[0].tagName != "HTML" ? (this.overflowOffset.top + this.scrollParent[0].offsetHeight - t.pageY < n.scrollSensitivity ? this.scrollParent[0].scrollTop = r = this.scrollParent[0].scrollTop + n.scrollSpeed : t.pageY - this.overflowOffset.top < n.scrollSensitivity && (this.scrollParent[0].scrollTop = r = this.scrollParent[0].scrollTop - n.scrollSpeed),
                this.overflowOffset.left + this.scrollParent[0].offsetWidth - t.pageX < n.scrollSensitivity ? this.scrollParent[0].scrollLeft = r = this.scrollParent[0].scrollLeft + n.scrollSpeed : t.pageX - this.overflowOffset.left < n.scrollSensitivity && (this.scrollParent[0].scrollLeft = r = this.scrollParent[0].scrollLeft - n.scrollSpeed)) : (t.pageY - e(document).scrollTop() < n.scrollSensitivity ? r = e(document).scrollTop(e(document).scrollTop() - n.scrollSpeed) : e(window).height() - (t.pageY - e(document).scrollTop()) < n.scrollSensitivity && (r = e(document).scrollTop(e(document).scrollTop() + n.scrollSpeed)),
                t.pageX - e(document).scrollLeft() < n.scrollSensitivity ? r = e(document).scrollLeft(e(document).scrollLeft() - n.scrollSpeed) : e(window).width() - (t.pageX - e(document).scrollLeft()) < n.scrollSensitivity && (r = e(document).scrollLeft(e(document).scrollLeft() + n.scrollSpeed))),
                r !== !1 && e.ui.ddmanager && !n.dropBehaviour && e.ui.ddmanager.prepareOffsets(this, t)
            }
            this.positionAbs = this._convertPositionTo("absolute");
            if (!this.options.axis || this.options.axis != "y")
                this.helper[0].style.left = this.position.left + "px";
            if (!this.options.axis || this.options.axis != "x")
                this.helper[0].style.top = this.position.top + "px";
            for (var i = this.items.length - 1; i >= 0; i--) {
                var s = this.items[i]
                  , o = s.item[0]
                  , u = this._intersectsWithPointer(s);
                if (!u)
                    continue;
                if (s.instance !== this.currentContainer)
                    continue;
                if (o != this.currentItem[0] && this.placeholder[u == 1 ? "next" : "prev"]()[0] != o && !e.contains(this.placeholder[0], o) && (this.options.type == "semi-dynamic" ? !e.contains(this.element[0], o) : !0)) {
                    this.direction = u == 1 ? "down" : "up";
                    if (this.options.tolerance != "pointer" && !this._intersectsWithSides(s))
                        break;
                    this._rearrange(t, s),
                    this._trigger("change", t, this._uiHash());
                    break
                }
            }
            return this._contactContainers(t),
            e.ui.ddmanager && e.ui.ddmanager.drag(this, t),
            this._trigger("sort", t, this._uiHash()),
            this.lastPositionAbs = this.positionAbs,
            !1
        },
        _mouseStop: function(t, n) {
            if (!t)
                return;
            e.ui.ddmanager && !this.options.dropBehaviour && e.ui.ddmanager.drop(this, t);
            if (this.options.revert) {
                var r = this
                  , i = this.placeholder.offset();
                this.reverting = !0,
                e(this.helper).animate({
                    left: i.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] == document.body ? 0 : this.offsetParent[0].scrollLeft),
                    top: i.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] == document.body ? 0 : this.offsetParent[0].scrollTop)
                }, parseInt(this.options.revert, 10) || 500, function() {
                    r._clear(t)
                })
            } else
                this._clear(t, n);
            return !1
        },
        cancel: function() {
            if (this.dragging) {
                this._mouseUp({
                    target: null
                }),
                this.options.helper == "original" ? this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper") : this.currentItem.show();
                for (var t = this.containers.length - 1; t >= 0; t--)
                    this.containers[t]._trigger("deactivate", null, this._uiHash(this)),
                    this.containers[t].containerCache.over && (this.containers[t]._trigger("out", null, this._uiHash(this)),
                    this.containers[t].containerCache.over = 0)
            }
            return this.placeholder && (this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]),
            this.options.helper != "original" && this.helper && this.helper[0].parentNode && this.helper.remove(),
            e.extend(this, {
                helper: null,
                dragging: !1,
                reverting: !1,
                _noFinalSort: null
            }),
            this.domPosition.prev ? e(this.domPosition.prev).after(this.currentItem) : e(this.domPosition.parent).prepend(this.currentItem)),
            this
        },
        serialize: function(t) {
            var n = this._getItemsAsjQuery(t && t.connected)
              , r = [];
            return t = t || {},
            e(n).each(function() {
                var n = (e(t.item || this).attr(t.attribute || "id") || "").match(t.expression || /(.+)[-=_](.+)/);
                n && r.push((t.key || n[1] + "[]") + "=" + (t.key && t.expression ? n[1] : n[2]))
            }),
            !r.length && t.key && r.push(t.key + "="),
            r.join("&")
        },
        toArray: function(t) {
            var n = this._getItemsAsjQuery(t && t.connected)
              , r = [];
            return t = t || {},
            n.each(function() {
                r.push(e(t.item || this).attr(t.attribute || "id") || "")
            }),
            r
        },
        _intersectsWith: function(e) {
            var t = this.positionAbs.left
              , n = t + this.helperProportions.width
              , r = this.positionAbs.top
              , i = r + this.helperProportions.height
              , s = e.left
              , o = s + e.width
              , u = e.top
              , a = u + e.height
              , f = this.offset.click.top
              , l = this.offset.click.left
              , c = r + f > u && r + f < a && t + l > s && t + l < o;
            return this.options.tolerance == "pointer" || this.options.forcePointerForContainers || this.options.tolerance != "pointer" && this.helperProportions[this.floating ? "width" : "height"] > e[this.floating ? "width" : "height"] ? c : s < t + this.helperProportions.width / 2 && n - this.helperProportions.width / 2 < o && u < r + this.helperProportions.height / 2 && i - this.helperProportions.height / 2 < a
        },
        _intersectsWithPointer: function(t) {
            var n = this.options.axis === "x" || e.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, t.top, t.height)
              , r = this.options.axis === "y" || e.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, t.left, t.width)
              , i = n && r
              , s = this._getDragVerticalDirection()
              , o = this._getDragHorizontalDirection();
            return i ? this.floating ? o && o == "right" || s == "down" ? 2 : 1 : s && (s == "down" ? 2 : 1) : !1
        },
        _intersectsWithSides: function(t) {
            var n = e.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, t.top + t.height / 2, t.height)
              , r = e.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, t.left + t.width / 2, t.width)
              , i = this._getDragVerticalDirection()
              , s = this._getDragHorizontalDirection();
            return this.floating && s ? s == "right" && r || s == "left" && !r : i && (i == "down" && n || i == "up" && !n)
        },
        _getDragVerticalDirection: function() {
            var e = this.positionAbs.top - this.lastPositionAbs.top;
            return e != 0 && (e > 0 ? "down" : "up")
        },
        _getDragHorizontalDirection: function() {
            var e = this.positionAbs.left - this.lastPositionAbs.left;
            return e != 0 && (e > 0 ? "right" : "left")
        },
        refresh: function(e) {
            return this._refreshItems(e),
            this.refreshPositions(),
            this
        },
        _connectWith: function() {
            var e = this.options;
            return e.connectWith.constructor == String ? [e.connectWith] : e.connectWith
        },
        _getItemsAsjQuery: function(t) {
            var n = []
              , r = []
              , i = this._connectWith();
            if (i && t)
                for (var s = i.length - 1; s >= 0; s--) {
                    var o = e(i[s]);
                    for (var u = o.length - 1; u >= 0; u--) {
                        var a = e.data(o[u], this.widgetName);
                        a && a != this && !a.options.disabled && r.push([e.isFunction(a.options.items) ? a.options.items.call(a.element) : e(a.options.items, a.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), a])
                    }
                }
            r.push([e.isFunction(this.options.items) ? this.options.items.call(this.element, null, {
                options: this.options,
                item: this.currentItem
            }) : e(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]);
            for (var s = r.length - 1; s >= 0; s--)
                r[s][0].each(function() {
                    n.push(this)
                });
            return e(n)
        },
        _removeCurrentsFromItems: function() {
            var e = this.currentItem.find(":data(" + this.widgetName + "-item)");
            for (var t = 0; t < this.items.length; t++)
                for (var n = 0; n < e.length; n++)
                    e[n] == this.items[t].item[0] && this.items.splice(t, 1)
        },
        _refreshItems: function(t) {
            this.items = [],
            this.containers = [this];
            var n = this.items
              , r = [[e.isFunction(this.options.items) ? this.options.items.call(this.element[0], t, {
                item: this.currentItem
            }) : e(this.options.items, this.element), this]]
              , i = this._connectWith();
            if (i && this.ready)
                for (var s = i.length - 1; s >= 0; s--) {
                    var o = e(i[s]);
                    for (var u = o.length - 1; u >= 0; u--) {
                        var a = e.data(o[u], this.widgetName);
                        a && a != this && !a.options.disabled && (r.push([e.isFunction(a.options.items) ? a.options.items.call(a.element[0], t, {
                            item: this.currentItem
                        }) : e(a.options.items, a.element), a]),
                        this.containers.push(a))
                    }
                }
            for (var s = r.length - 1; s >= 0; s--) {
                var f = r[s][1]
                  , l = r[s][0];
                for (var u = 0, c = l.length; u < c; u++) {
                    var h = e(l[u]);
                    h.data(this.widgetName + "-item", f),
                    n.push({
                        item: h,
                        instance: f,
                        width: 0,
                        height: 0,
                        left: 0,
                        top: 0
                    })
                }
            }
        },
        refreshPositions: function(t) {
            this.offsetParent && this.helper && (this.offset.parent = this._getParentOffset());
            for (var n = this.items.length - 1; n >= 0; n--) {
                var r = this.items[n];
                if (r.instance != this.currentContainer && this.currentContainer && r.item[0] != this.currentItem[0])
                    continue;
                var i = this.options.toleranceElement ? e(this.options.toleranceElement, r.item) : r.item;
                t || (r.width = i.outerWidth(),
                r.height = i.outerHeight());
                var s = i.offset();
                r.left = s.left,
                r.top = s.top
            }
            if (this.options.custom && this.options.custom.refreshContainers)
                this.options.custom.refreshContainers.call(this);
            else
                for (var n = this.containers.length - 1; n >= 0; n--) {
                    var s = this.containers[n].element.offset();
                    this.containers[n].containerCache.left = s.left,
                    this.containers[n].containerCache.top = s.top,
                    this.containers[n].containerCache.width = this.containers[n].element.outerWidth(),
                    this.containers[n].containerCache.height = this.containers[n].element.outerHeight()
                }
            return this
        },
        _createPlaceholder: function(t) {
            t = t || this;
            var n = t.options;
            if (!n.placeholder || n.placeholder.constructor == String) {
                var r = n.placeholder;
                n.placeholder = {
                    element: function() {
                        var n = e(document.createElement(t.currentItem[0].nodeName)).addClass(r || t.currentItem[0].className + " ui-sortable-placeholder").removeClass("ui-sortable-helper")[0];
                        return r || (n.style.visibility = "hidden"),
                        n
                    },
                    update: function(e, i) {
                        if (r && !n.forcePlaceholderSize)
                            return;
                        i.height() || i.height(t.currentItem.innerHeight() - parseInt(t.currentItem.css("paddingTop") || 0, 10) - parseInt(t.currentItem.css("paddingBottom") || 0, 10)),
                        i.width() || i.width(t.currentItem.innerWidth() - parseInt(t.currentItem.css("paddingLeft") || 0, 10) - parseInt(t.currentItem.css("paddingRight") || 0, 10))
                    }
                }
            }
            t.placeholder = e(n.placeholder.element.call(t.element, t.currentItem)),
            t.currentItem.after(t.placeholder),
            n.placeholder.update(t, t.placeholder)
        },
        _contactContainers: function(t) {
            var n = null
              , r = null;
            for (var i = this.containers.length - 1; i >= 0; i--) {
                if (e.contains(this.currentItem[0], this.containers[i].element[0]))
                    continue;
                if (this._intersectsWith(this.containers[i].containerCache)) {
                    if (n && e.contains(this.containers[i].element[0], n.element[0]))
                        continue;
                    n = this.containers[i],
                    r = i
                } else
                    this.containers[i].containerCache.over && (this.containers[i]._trigger("out", t, this._uiHash(this)),
                    this.containers[i].containerCache.over = 0)
            }
            if (!n)
                return;
            if (this.containers.length === 1)
                this.containers[r]._trigger("over", t, this._uiHash(this)),
                this.containers[r].containerCache.over = 1;
            else if (this.currentContainer != this.containers[r]) {
                var s = 1e4
                  , o = null
                  , u = this.positionAbs[this.containers[r].floating ? "left" : "top"];
                for (var a = this.items.length - 1; a >= 0; a--) {
                    if (!e.contains(this.containers[r].element[0], this.items[a].item[0]))
                        continue;
                    var f = this.containers[r].floating ? this.items[a].item.offset().left : this.items[a].item.offset().top;
                    Math.abs(f - u) < s && (s = Math.abs(f - u),
                    o = this.items[a],
                    this.direction = f - u > 0 ? "down" : "up")
                }
                if (!o && !this.options.dropOnEmpty)
                    return;
                this.currentContainer = this.containers[r],
                o ? this._rearrange(t, o, null, !0) : this._rearrange(t, null, this.containers[r].element, !0),
                this._trigger("change", t, this._uiHash()),
                this.containers[r]._trigger("change", t, this._uiHash(this)),
                this.options.placeholder.update(this.currentContainer, this.placeholder),
                this.containers[r]._trigger("over", t, this._uiHash(this)),
                this.containers[r].containerCache.over = 1
            }
        },
        _createHelper: function(t) {
            var n = this.options
              , r = e.isFunction(n.helper) ? e(n.helper.apply(this.element[0], [t, this.currentItem])) : n.helper == "clone" ? this.currentItem.clone() : this.currentItem;
            return r.parents("body").length || e(n.appendTo != "parent" ? n.appendTo : this.currentItem[0].parentNode)[0].appendChild(r[0]),
            r[0] == this.currentItem[0] && (this._storedCSS = {
                width: this.currentItem[0].style.width,
                height: this.currentItem[0].style.height,
                position: this.currentItem.css("position"),
                top: this.currentItem.css("top"),
                left: this.currentItem.css("left")
            }),
            (r[0].style.width == "" || n.forceHelperSize) && r.width(this.currentItem.width()),
            (r[0].style.height == "" || n.forceHelperSize) && r.height(this.currentItem.height()),
            r
        },
        _adjustOffsetFromHelper: function(t) {
            typeof t == "string" && (t = t.split(" ")),
            e.isArray(t) && (t = {
                left: +t[0],
                top: +t[1] || 0
            }),
            "left"in t && (this.offset.click.left = t.left + this.margins.left),
            "right"in t && (this.offset.click.left = this.helperProportions.width - t.right + this.margins.left),
            "top"in t && (this.offset.click.top = t.top + this.margins.top),
            "bottom"in t && (this.offset.click.top = this.helperProportions.height - t.bottom + this.margins.top)
        },
        _getParentOffset: function() {
            this.offsetParent = this.helper.offsetParent();
            var t = this.offsetParent.offset();
            this.cssPosition == "absolute" && this.scrollParent[0] != document && e.contains(this.scrollParent[0], this.offsetParent[0]) && (t.left += this.scrollParent.scrollLeft(),
            t.top += this.scrollParent.scrollTop());
            if (this.offsetParent[0] == document.body || this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && e.browser.msie)
                t = {
                    top: 0,
                    left: 0
                };
            return {
                top: t.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: t.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function() {
            if (this.cssPosition == "relative") {
                var e = this.currentItem.position();
                return {
                    top: e.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: e.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                }
            }
            return {
                top: 0,
                left: 0
            }
        },
        _cacheMargins: function() {
            this.margins = {
                left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,
                top: parseInt(this.currentItem.css("marginTop"), 10) || 0
            }
        },
        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            }
        },
        _setContainment: function() {
            var t = this.options;
            t.containment == "parent" && (t.containment = this.helper[0].parentNode);
            if (t.containment == "document" || t.containment == "window")
                this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, e(t.containment == "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (e(t.containment == "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top];
            if (!/^(document|window|parent)$/.test(t.containment)) {
                var n = e(t.containment)[0]
                  , r = e(t.containment).offset()
                  , i = e(n).css("overflow") != "hidden";
                this.containment = [r.left + (parseInt(e(n).css("borderLeftWidth"), 10) || 0) + (parseInt(e(n).css("paddingLeft"), 10) || 0) - this.margins.left, r.top + (parseInt(e(n).css("borderTopWidth"), 10) || 0) + (parseInt(e(n).css("paddingTop"), 10) || 0) - this.margins.top, r.left + (i ? Math.max(n.scrollWidth, n.offsetWidth) : n.offsetWidth) - (parseInt(e(n).css("borderLeftWidth"), 10) || 0) - (parseInt(e(n).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, r.top + (i ? Math.max(n.scrollHeight, n.offsetHeight) : n.offsetHeight) - (parseInt(e(n).css("borderTopWidth"), 10) || 0) - (parseInt(e(n).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top]
            }
        },
        _convertPositionTo: function(t, n) {
            n || (n = this.position);
            var r = t == "absolute" ? 1 : -1
              , i = this.options
              , s = this.cssPosition != "absolute" || this.scrollParent[0] != document && !!e.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent
              , o = /(html|body)/i.test(s[0].tagName);
            return {
                top: n.top + this.offset.relative.top * r + this.offset.parent.top * r - (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : o ? 0 : s.scrollTop()) * r,
                left: n.left + this.offset.relative.left * r + this.offset.parent.left * r - (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : o ? 0 : s.scrollLeft()) * r
            }
        },
        _generatePosition: function(t) {
            var n = this.options
              , r = this.cssPosition != "absolute" || this.scrollParent[0] != document && !!e.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent
              , i = /(html|body)/i.test(r[0].tagName);
            this.cssPosition == "relative" && (this.scrollParent[0] == document || this.scrollParent[0] == this.offsetParent[0]) && (this.offset.relative = this._getRelativeOffset());
            var s = t.pageX
              , o = t.pageY;
            if (this.originalPosition) {
                this.containment && (t.pageX - this.offset.click.left < this.containment[0] && (s = this.containment[0] + this.offset.click.left),
                t.pageY - this.offset.click.top < this.containment[1] && (o = this.containment[1] + this.offset.click.top),
                t.pageX - this.offset.click.left > this.containment[2] && (s = this.containment[2] + this.offset.click.left),
                t.pageY - this.offset.click.top > this.containment[3] && (o = this.containment[3] + this.offset.click.top));
                if (n.grid) {
                    var u = this.originalPageY + Math.round((o - this.originalPageY) / n.grid[1]) * n.grid[1];
                    o = this.containment ? u - this.offset.click.top < this.containment[1] || u - this.offset.click.top > this.containment[3] ? u - this.offset.click.top < this.containment[1] ? u + n.grid[1] : u - n.grid[1] : u : u;
                    var a = this.originalPageX + Math.round((s - this.originalPageX) / n.grid[0]) * n.grid[0];
                    s = this.containment ? a - this.offset.click.left < this.containment[0] || a - this.offset.click.left > this.containment[2] ? a - this.offset.click.left < this.containment[0] ? a + n.grid[0] : a - n.grid[0] : a : a
                }
            }
            return {
                top: o - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : i ? 0 : r.scrollTop()),
                left: s - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : i ? 0 : r.scrollLeft())
            }
        },
        _rearrange: function(e, t, n, r) {
            n ? n[0].appendChild(this.placeholder[0]) : t.item[0].parentNode.insertBefore(this.placeholder[0], this.direction == "down" ? t.item[0] : t.item[0].nextSibling),
            this.counter = this.counter ? ++this.counter : 1;
            var i = this.counter;
            this._delay(function() {
                i == this.counter && this.refreshPositions(!r)
            })
        },
        _clear: function(t, n) {
            this.reverting = !1;
            var r = [];
            !this._noFinalSort && this.currentItem.parent().length && this.placeholder.before(this.currentItem),
            this._noFinalSort = null;
            if (this.helper[0] == this.currentItem[0]) {
                for (var i in this._storedCSS)
                    if (this._storedCSS[i] == "auto" || this._storedCSS[i] == "static")
                        this._storedCSS[i] = "";
                this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")
            } else
                this.currentItem.show();
            this.fromOutside && !n && r.push(function(e) {
                this._trigger("receive", e, this._uiHash(this.fromOutside))
            }),
            (this.fromOutside || this.domPosition.prev != this.currentItem.prev().not(".ui-sortable-helper")[0] || this.domPosition.parent != this.currentItem.parent()[0]) && !n && r.push(function(e) {
                this._trigger("update", e, this._uiHash())
            }),
            this !== this.currentContainer && (n || (r.push(function(e) {
                this._trigger("remove", e, this._uiHash())
            }),
            r.push(function(e) {
                return function(t) {
                    e._trigger("receive", t, this._uiHash(this))
                }
            }
            .call(this, this.currentContainer)),
            r.push(function(e) {
                return function(t) {
                    e._trigger("update", t, this._uiHash(this))
                }
            }
            .call(this, this.currentContainer))));
            for (var i = this.containers.length - 1; i >= 0; i--)
                n || r.push(function(e) {
                    return function(t) {
                        e._trigger("deactivate", t, this._uiHash(this))
                    }
                }
                .call(this, this.containers[i])),
                this.containers[i].containerCache.over && (r.push(function(e) {
                    return function(t) {
                        e._trigger("out", t, this._uiHash(this))
                    }
                }
                .call(this, this.containers[i])),
                this.containers[i].containerCache.over = 0);
            this._storedCursor && e("body").css("cursor", this._storedCursor),
            this._storedOpacity && this.helper.css("opacity", this._storedOpacity),
            this._storedZIndex && this.helper.css("zIndex", this._storedZIndex == "auto" ? "" : this._storedZIndex),
            this.dragging = !1;
            if (this.cancelHelperRemoval) {
                if (!n) {
                    this._trigger("beforeStop", t, this._uiHash());
                    for (var i = 0; i < r.length; i++)
                        r[i].call(this, t);
                    this._trigger("stop", t, this._uiHash())
                }
                return this.fromOutside = !1,
                !1
            }
            n || this._trigger("beforeStop", t, this._uiHash()),
            this.placeholder[0].parentNode.removeChild(this.placeholder[0]),
            this.helper[0] != this.currentItem[0] && this.helper.remove(),
            this.helper = null;
            if (!n) {
                for (var i = 0; i < r.length; i++)
                    r[i].call(this, t);
                this._trigger("stop", t, this._uiHash())
            }
            return this.fromOutside = !1,
            !0
        },
        _trigger: function() {
            e.Widget.prototype._trigger.apply(this, arguments) === !1 && this.cancel()
        },
        _uiHash: function(t) {
            var n = t || this;
            return {
                helper: n.helper,
                placeholder: n.placeholder || e([]),
                position: n.position,
                originalPosition: n.originalPosition,
                offset: n.positionAbs,
                item: n.currentItem,
                sender: t ? t.element : null
            }
        }
    })
}
)(jQuery);
(function(e, t) {
    var n = 0
      , r = {}
      , i = {};
    r.height = r.paddingTop = r.paddingBottom = r.borderTopWidth = r.borderBottomWidth = "hide",
    i.height = i.paddingTop = i.paddingBottom = i.borderTopWidth = i.borderBottomWidth = "show",
    e.widget("ui.accordion", {
        version: "1.9.0",
        options: {
            active: 0,
            animate: {},
            collapsible: !1,
            event: "click",
            header: "> li > :first-child,> :not(li):even",
            heightStyle: "auto",
            icons: {
                activeHeader: "ui-icon-triangle-1-s",
                header: "ui-icon-triangle-1-e"
            },
            activate: null,
            beforeActivate: null
        },
        _create: function() {
            var t = this.accordionId = "ui-accordion-" + (this.element.attr("id") || ++n)
              , r = this.options;
            this.prevShow = this.prevHide = e(),
            this.element.addClass("ui-accordion ui-widget ui-helper-reset"),
            this.headers = this.element.find(r.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all"),
            this._hoverable(this.headers),
            this._focusable(this.headers),
            this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom").hide(),
            !r.collapsible && r.active === !1 && (r.active = 0),
            r.active < 0 && (r.active += this.headers.length),
            this.active = this._findActive(r.active).addClass("ui-accordion-header-active ui-state-active").toggleClass("ui-corner-all ui-corner-top"),
            this.active.next().addClass("ui-accordion-content-active").show(),
            this._createIcons(),
            this.originalHeight = this.element[0].style.height,
            this.refresh(),
            this.element.attr("role", "tablist"),
            this.headers.attr("role", "tab").each(function(n) {
                var r = e(this)
                  , i = r.attr("id")
                  , s = r.next()
                  , o = s.attr("id");
                i || (i = t + "-header-" + n,
                r.attr("id", i)),
                o || (o = t + "-panel-" + n,
                s.attr("id", o)),
                r.attr("aria-controls", o),
                s.attr("aria-labelledby", i)
            }).next().attr("role", "tabpanel"),
            this.headers.not(this.active).attr({
                "aria-selected": "false",
                tabIndex: -1
            }).next().attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            }).hide(),
            this.active.length ? this.active.attr({
                "aria-selected": "true",
                tabIndex: 0
            }).next().attr({
                "aria-expanded": "true",
                "aria-hidden": "false"
            }) : this.headers.eq(0).attr("tabIndex", 0),
            this._on(this.headers, {
                keydown: "_keydown"
            }),
            this._on(this.headers.next(), {
                keydown: "_panelKeyDown"
            }),
            this._setupEvents(r.event)
        },
        _getCreateEventData: function() {
            return {
                header: this.active,
                content: this.active.length ? this.active.next() : e()
            }
        },
        _createIcons: function() {
            var t = this.options.icons;
            t && (e("<span>").addClass("ui-accordion-header-icon ui-icon " + t.header).prependTo(this.headers),
            this.active.children(".ui-accordion-header-icon").removeClass(t.header).addClass(t.activeHeader),
            this.headers.addClass("ui-accordion-icons"))
        },
        _destroyIcons: function() {
            this.headers.removeClass("ui-accordion-icons").children(".ui-accordion-header-icon").remove()
        },
        _destroy: function() {
            var e;
            this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role"),
            this.headers.removeClass("ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-selected").removeAttr("aria-controls").removeAttr("tabIndex").each(function() {
                /^ui-accordion/.test(this.id) && this.removeAttribute("id")
            }),
            this._destroyIcons(),
            e = this.headers.next().css("display", "").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-labelledby").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled").each(function() {
                /^ui-accordion/.test(this.id) && this.removeAttribute("id")
            }),
            this.options.heightStyle !== "content" && (this.element.css("height", this.originalHeight),
            e.css("height", ""))
        },
        _setOption: function(e, t) {
            if (e === "active") {
                this._activate(t);
                return
            }
            e === "event" && (this.options.event && this._off(this.headers, this.options.event),
            this._setupEvents(t)),
            this._super(e, t),
            e === "collapsible" && !t && this.options.active === !1 && this._activate(0),
            e === "icons" && (this._destroyIcons(),
            t && this._createIcons()),
            e === "disabled" && this.headers.add(this.headers.next()).toggleClass("ui-state-disabled", !!t)
        },
        _keydown: function(t) {
            if (t.altKey || t.ctrlKey)
                return;
            var n = e.ui.keyCode
              , r = this.headers.length
              , i = this.headers.index(t.target)
              , s = !1;
            switch (t.keyCode) {
            case n.RIGHT:
            case n.DOWN:
                s = this.headers[(i + 1) % r];
                break;
            case n.LEFT:
            case n.UP:
                s = this.headers[(i - 1 + r) % r];
                break;
            case n.SPACE:
            case n.ENTER:
                this._eventHandler(t);
                break;
            case n.HOME:
                s = this.headers[0];
                break;
            case n.END:
                s = this.headers[r - 1]
            }
            s && (e(t.target).attr("tabIndex", -1),
            e(s).attr("tabIndex", 0),
            s.focus(),
            t.preventDefault())
        },
        _panelKeyDown: function(t) {
            t.keyCode === e.ui.keyCode.UP && t.ctrlKey && e(t.currentTarget).prev().focus()
        },
        refresh: function() {
            var t, n, r = this.options.heightStyle, i = this.element.parent();
            this.element.css("height", this.originalHeight),
            r === "fill" ? (e.support.minHeight || (n = i.css("overflow"),
            i.css("overflow", "hidden")),
            t = i.height(),
            this.element.siblings(":visible").each(function() {
                var n = e(this)
                  , r = n.css("position");
                if (r === "absolute" || r === "fixed")
                    return;
                t -= n.outerHeight(!0)
            }),
            n && i.css("overflow", n),
            this.headers.each(function() {
                t -= e(this).outerHeight(!0)
            }),
            this.headers.next().each(function() {
                e(this).height(Math.max(0, t - e(this).innerHeight() + e(this).height()))
            }).css("overflow", "auto")) : r === "auto" && (t = 0,
            this.headers.next().each(function() {
                t = Math.max(t, e(this).height("").height())
            }).height(t)),
            r !== "content" && this.element.height(this.element.height())
        },
        _activate: function(t) {
            var n = this._findActive(t)[0];
            if (n === this.active[0])
                return;
            n = n || this.active[0],
            this._eventHandler({
                target: n,
                currentTarget: n,
                preventDefault: e.noop
            })
        },
        _findActive: function(t) {
            return typeof t == "number" ? this.headers.eq(t) : e()
        },
        _setupEvents: function(t) {
            var n = {};
            if (!t)
                return;
            e.each(t.split(" "), function(e, t) {
                n[t] = "_eventHandler"
            }),
            this._on(this.headers, n)
        },
        _eventHandler: function(t) {
            var n = this.options
              , r = this.active
              , i = e(t.currentTarget)
              , s = i[0] === r[0]
              , o = s && n.collapsible
              , u = o ? e() : i.next()
              , a = r.next()
              , f = {
                oldHeader: r,
                oldPanel: a,
                newHeader: o ? e() : i,
                newPanel: u
            };
            t.preventDefault();
            if (s && !n.collapsible || this._trigger("beforeActivate", t, f) === !1)
                return;
            n.active = o ? !1 : this.headers.index(i),
            this.active = s ? e() : i,
            this._toggle(f),
            r.removeClass("ui-accordion-header-active ui-state-active"),
            n.icons && r.children(".ui-accordion-header-icon").removeClass(n.icons.activeHeader).addClass(n.icons.header),
            s || (i.removeClass("ui-corner-all").addClass("ui-accordion-header-active ui-state-active ui-corner-top"),
            n.icons && i.children(".ui-accordion-header-icon").removeClass(n.icons.header).addClass(n.icons.activeHeader),
            i.next().addClass("ui-accordion-content-active"))
        },
        _toggle: function(t) {
            var n = t.newPanel
              , r = this.prevShow.length ? this.prevShow : t.oldPanel;
            this.prevShow.add(this.prevHide).stop(!0, !0),
            this.prevShow = n,
            this.prevHide = r,
            this.options.animate ? this._animate(n, r, t) : (r.hide(),
            n.show(),
            this._toggleComplete(t)),
            r.attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            }),
            r.prev().attr("aria-selected", "false"),
            n.length && r.length ? r.prev().attr("tabIndex", -1) : n.length && this.headers.filter(function() {
                return e(this).attr("tabIndex") === 0
            }).attr("tabIndex", -1),
            n.attr({
                "aria-expanded": "true",
                "aria-hidden": "false"
            }).prev().attr({
                "aria-selected": "true",
                tabIndex: 0
            })
        },
        _animate: function(e, t, n) {
            var s, o, u, a = this, f = 0, l = e.length && (!t.length || e.index() < t.index()), c = this.options.animate || {}, h = l && c.down || c, p = function() {
                a._toggleComplete(n)
            };
            typeof h == "number" && (u = h),
            typeof h == "string" && (o = h),
            o = o || h.easing || c.easing,
            u = u || h.duration || c.duration;
            if (!t.length)
                return e.animate(i, u, o, p);
            if (!e.length)
                return t.animate(r, u, o, p);
            s = e.show().outerHeight(),
            t.animate(r, {
                duration: u,
                easing: o,
                step: function(e, t) {
                    t.now = Math.round(e)
                }
            }),
            e.hide().animate(i, {
                duration: u,
                easing: o,
                complete: p,
                step: function(e, n) {
                    n.now = Math.round(e),
                    n.prop !== "height" ? f += n.now : a.options.heightStyle !== "content" && (n.now = Math.round(s - t.outerHeight() - f),
                    f = 0)
                }
            })
        },
        _toggleComplete: function(e) {
            var t = e.oldPanel;
            t.removeClass("ui-accordion-content-active").prev().removeClass("ui-corner-top").addClass("ui-corner-all"),
            t.length && (t.parent()[0].className = t.parent()[0].className),
            this._trigger("activate", null, e)
        }
    }),
    e.uiBackCompat !== !1 && (function(e, t) {
        e.extend(t.options, {
            navigation: !1,
            navigationFilter: function() {
                return this.href.toLowerCase() === location.href.toLowerCase()
            }
        });
        var n = t._create;
        t._create = function() {
            if (this.options.navigation) {
                var t = this
                  , r = this.element.find(this.options.header)
                  , i = r.next()
                  , s = r.add(i).find("a").filter(this.options.navigationFilter)[0];
                s && r.add(i).each(function(n) {
                    if (e.contains(this, s))
                        return t.options.active = Math.floor(n / 2),
                        !1
                })
            }
            n.call(this)
        }
    }(jQuery, jQuery.ui.accordion.prototype),
    function(e, t) {
        e.extend(t.options, {
            heightStyle: null,
            autoHeight: !0,
            clearStyle: !1,
            fillSpace: !1
        });
        var n = t._create
          , r = t._setOption;
        e.extend(t, {
            _create: function() {
                this.options.heightStyle = this.options.heightStyle || this._mergeHeightStyle(),
                n.call(this)
            },
            _setOption: function(e, t) {
                if (e === "autoHeight" || e === "clearStyle" || e === "fillSpace")
                    this.options.heightStyle = this._mergeHeightStyle();
                r.apply(this, arguments)
            },
            _mergeHeightStyle: function() {
                var e = this.options;
                if (e.fillSpace)
                    return "fill";
                if (e.clearStyle)
                    return "content";
                if (e.autoHeight)
                    return "auto"
            }
        })
    }(jQuery, jQuery.ui.accordion.prototype),
    function(e, t) {
        e.extend(t.options.icons, {
            activeHeader: null,
            headerSelected: "ui-icon-triangle-1-s"
        });
        var n = t._createIcons;
        t._createIcons = function() {
            this.options.icons && (this.options.icons.activeHeader = this.options.icons.activeHeader || this.options.icons.headerSelected),
            n.call(this)
        }
    }(jQuery, jQuery.ui.accordion.prototype),
    function(e, t) {
        t.activate = t._activate;
        var n = t._findActive;
        t._findActive = function(e) {
            return e === -1 && (e = !1),
            e && typeof e != "number" && (e = this.headers.index(this.headers.filter(e)),
            e === -1 && (e = !1)),
            n.call(this, e)
        }
    }(jQuery, jQuery.ui.accordion.prototype),
    jQuery.ui.accordion.prototype.resize = jQuery.ui.accordion.prototype.refresh,
    function(e, t) {
        e.extend(t.options, {
            change: null,
            changestart: null
        });
        var n = t._trigger;
        t._trigger = function(e, t, r) {
            var i = n.apply(this, arguments);
            return i ? (e === "beforeActivate" ? i = n.call(this, "changestart", t, {
                oldHeader: r.oldHeader,
                oldContent: r.oldPanel,
                newHeader: r.newHeader,
                newContent: r.newPanel
            }) : e === "activate" && (i = n.call(this, "change", t, {
                oldHeader: r.oldHeader,
                oldContent: r.oldPanel,
                newHeader: r.newHeader,
                newContent: r.newPanel
            })),
            i) : !1
        }
    }(jQuery, jQuery.ui.accordion.prototype),
    function(e, t) {
        e.extend(t.options, {
            animate: null,
            animated: "slide"
        });
        var n = t._create;
        t._create = function() {
            var e = this.options;
            e.animate === null && (e.animated ? e.animated === "slide" ? e.animate = 300 : e.animated === "bounceslide" ? e.animate = {
                duration: 200,
                down: {
                    easing: "easeOutBounce",
                    duration: 1e3
                }
            } : e.animate = e.animated : e.animate = !1),
            n.call(this)
        }
    }(jQuery, jQuery.ui.accordion.prototype))
}
)(jQuery);
(function(e, t) {
    var n = 0;
    e.widget("ui.autocomplete", {
        version: "1.9.0",
        defaultElement: "<input>",
        options: {
            appendTo: "body",
            autoFocus: !1,
            delay: 300,
            minLength: 1,
            position: {
                my: "left top",
                at: "left bottom",
                collision: "none"
            },
            source: null,
            change: null,
            close: null,
            focus: null,
            open: null,
            response: null,
            search: null,
            select: null
        },
        pending: 0,
        _create: function() {
            var t, n, r;
            this.isMultiLine = this._isMultiLine(),
            this.valueMethod = this.element[this.element.is("input,textarea") ? "val" : "text"],
            this.isNewMenu = !0,
            this.element.addClass("ui-autocomplete-input").attr("autocomplete", "off"),
            this._on({
                keydown: function(i) {
                    if (this.element.prop("readOnly")) {
                        t = !0,
                        r = !0,
                        n = !0;
                        return
                    }
                    t = !1,
                    r = !1,
                    n = !1;
                    var s = e.ui.keyCode;
                    switch (i.keyCode) {
                    case s.PAGE_UP:
                        t = !0,
                        this._move("previousPage", i);
                        break;
                    case s.PAGE_DOWN:
                        t = !0,
                        this._move("nextPage", i);
                        break;
                    case s.UP:
                        t = !0,
                        this._keyEvent("previous", i);
                        break;
                    case s.DOWN:
                        t = !0,
                        this._keyEvent("next", i);
                        break;
                    case s.ENTER:
                    case s.NUMPAD_ENTER:
                        this.menu.active && (t = !0,
                        i.preventDefault(),
                        this.menu.select(i));
                        break;
                    case s.TAB:
                        this.menu.active && this.menu.select(i);
                        break;
                    case s.ESCAPE:
                        this.menu.element.is(":visible") && (this._value(this.term),
                        this.close(i),
                        i.preventDefault());
                        break;
                    default:
                        n = !0,
                        this._searchTimeout(i)
                    }
                },
                keypress: function(r) {
                    if (t) {
                        t = !1,
                        r.preventDefault();
                        return
                    }
                    if (n)
                        return;
                    var i = e.ui.keyCode;
                    switch (r.keyCode) {
                    case i.PAGE_UP:
                        this._move("previousPage", r);
                        break;
                    case i.PAGE_DOWN:
                        this._move("nextPage", r);
                        break;
                    case i.UP:
                        this._keyEvent("previous", r);
                        break;
                    case i.DOWN:
                        this._keyEvent("next", r)
                    }
                },
                input: function(e) {
                    if (r) {
                        r = !1,
                        e.preventDefault();
                        return
                    }
                    this._searchTimeout(e)
                },
                focus: function() {
                    this.selectedItem = null,
                    this.previous = this._value()
                },
                blur: function(e) {
                    if (this.cancelBlur) {
                        delete this.cancelBlur;
                        return
                    }
                    clearTimeout(this.searching),
                    this.close(e),
                    this._change(e)
                }
            }),
            this._initSource(),
            this.menu = e("<ul>").addClass("ui-autocomplete").appendTo(this.document.find(this.options.appendTo || "body")[0]).menu({
                input: e(),
                role: null
            }).zIndex(this.element.zIndex() + 1).hide().data("menu"),
            this._on(this.menu.element, {
                mousedown: function(t) {
                    t.preventDefault(),
                    this.cancelBlur = !0,
                    this._delay(function() {
                        delete this.cancelBlur
                    });
                    var n = this.menu.element[0];
                    e(t.target).closest(".ui-menu-item").length || this._delay(function() {
                        var t = this;
                        this.document.one("mousedown", function(r) {
                            r.target !== t.element[0] && r.target !== n && !e.contains(n, r.target) && t.close()
                        })
                    })
                },
                menufocus: function(t, n) {
                    if (this.isNewMenu) {
                        this.isNewMenu = !1;
                        if (t.originalEvent && /^mouse/.test(t.originalEvent.type)) {
                            this.menu.blur(),
                            this.document.one("mousemove", function() {
                                e(t.target).trigger(t.originalEvent)
                            });
                            return
                        }
                    }
                    var r = n.item.data("ui-autocomplete-item") || n.item.data("item.autocomplete");
                    !1 !== this._trigger("focus", t, {
                        item: r
                    }) ? t.originalEvent && /^key/.test(t.originalEvent.type) && this._value(r.value) : this.liveRegion.text(r.value)
                },
                menuselect: function(e, t) {
                    var n = t.item.data("ui-autocomplete-item") || t.item.data("item.autocomplete")
                      , r = this.previous;
                    this.element[0] !== this.document[0].activeElement && (this.element.focus(),
                    this.previous = r,
                    this._delay(function() {
                        this.previous = r,
                        this.selectedItem = n
                    })),
                    !1 !== this._trigger("select", e, {
                        item: n
                    }) && this._value(n.value),
                    this.term = this._value(),
                    this.close(e),
                    this.selectedItem = n
                }
            }),
            this.liveRegion = e("<span>", {
                role: "status",
                "aria-live": "polite"
            }).addClass("ui-helper-hidden-accessible").insertAfter(this.element),
            e.fn.bgiframe && this.menu.element.bgiframe(),
            this._on(this.window, {
                beforeunload: function() {
                    this.element.removeAttr("autocomplete")
                }
            })
        },
        _destroy: function() {
            clearTimeout(this.searching),
            this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete"),
            this.menu.element.remove(),
            this.liveRegion.remove()
        },
        _setOption: function(e, t) {
            this._super(e, t),
            e === "source" && this._initSource(),
            e === "appendTo" && this.menu.element.appendTo(this.document.find(t || "body")[0]),
            e === "disabled" && t && this.xhr && this.xhr.abort()
        },
        _isMultiLine: function() {
            return this.element.is("textarea") ? !0 : this.element.is("input") ? !1 : this.element.prop("isContentEditable")
        },
        _initSource: function() {
            var t, n, r = this;
            e.isArray(this.options.source) ? (t = this.options.source,
            this.source = function(n, r) {
                r(e.ui.autocomplete.filter(t, n.term))
            }
            ) : typeof this.options.source == "string" ? (n = this.options.source,
            this.source = function(t, i) {
                r.xhr && r.xhr.abort(),
                r.xhr = e.ajax({
                    url: n,
                    data: t,
                    dataType: "json",
                    success: function(e, t) {
                        i(e)
                    },
                    error: function() {
                        i([])
                    }
                })
            }
            ) : this.source = this.options.source
        },
        _searchTimeout: function(e) {
            clearTimeout(this.searching),
            this.searching = this._delay(function() {
                this.term !== this._value() && (this.selectedItem = null,
                this.search(null, e))
            }, this.options.delay)
        },
        search: function(e, t) {
            e = e != null ? e : this._value(),
            this.term = this._value();
            if (e.length < this.options.minLength)
                return this.close(t);
            if (this._trigger("search", t) === !1)
                return;
            return this._search(e)
        },
        _search: function(e) {
            this.pending++,
            this.element.addClass("ui-autocomplete-loading"),
            this.cancelSearch = !1,
            this.source({
                term: e
            }, this._response())
        },
        _response: function() {
            var e = this
              , t = ++n;
            return function(r) {
                t === n && e.__response(r),
                e.pending--,
                e.pending || e.element.removeClass("ui-autocomplete-loading")
            }
        },
        __response: function(e) {
            e && (e = this._normalize(e)),
            this._trigger("response", null, {
                content: e
            }),
            !this.options.disabled && e && e.length && !this.cancelSearch ? (this._suggest(e),
            this._trigger("open")) : this._close()
        },
        close: function(e) {
            this.cancelSearch = !0,
            this._close(e)
        },
        _close: function(e) {
            this.menu.element.is(":visible") && (this.menu.element.hide(),
            this.menu.blur(),
            this.isNewMenu = !0,
            this._trigger("close", e))
        },
        _change: function(e) {
            this.previous !== this._value() && this._trigger("change", e, {
                item: this.selectedItem
            })
        },
        _normalize: function(t) {
            return t.length && t[0].label && t[0].value ? t : e.map(t, function(t) {
                return typeof t == "string" ? {
                    label: t,
                    value: t
                } : e.extend({
                    label: t.label || t.value,
                    value: t.value || t.label
                }, t)
            })
        },
        _suggest: function(t) {
            var n = this.menu.element.empty().zIndex(this.element.zIndex() + 1);
            this._renderMenu(n, t),
            this.menu.refresh(),
            n.show(),
            this._resizeMenu(),
            n.position(e.extend({
                of: this.element
            }, this.options.position)),
            this.options.autoFocus && this.menu.next()
        },
        _resizeMenu: function() {
            var e = this.menu.element;
            e.outerWidth(Math.max(e.width("").outerWidth() + 1, this.element.outerWidth()))
        },
        _renderMenu: function(t, n) {
            var r = this;
            e.each(n, function(e, n) {
                r._renderItemData(t, n)
            })
        },
        _renderItemData: function(e, t) {
            return this._renderItem(e, t).data("ui-autocomplete-item", t)
        },
        _renderItem: function(t, n) {
            return e("<li>").append(e("<a>").text(n.label)).appendTo(t)
        },
        _move: function(e, t) {
            if (!this.menu.element.is(":visible")) {
                this.search(null, t);
                return
            }
            if (this.menu.isFirstItem() && /^previous/.test(e) || this.menu.isLastItem() && /^next/.test(e)) {
                this._value(this.term),
                this.menu.blur();
                return
            }
            this.menu[e](t)
        },
        widget: function() {
            return this.menu.element
        },
        _value: function(e) {
            return this.valueMethod.apply(this.element, arguments)
        },
        _keyEvent: function(e, t) {
            if (!this.isMultiLine || this.menu.element.is(":visible"))
                this._move(e, t),
                t.preventDefault()
        }
    }),
    e.extend(e.ui.autocomplete, {
        escapeRegex: function(e) {
            return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
        },
        filter: function(t, n) {
            var r = new RegExp(e.ui.autocomplete.escapeRegex(n),"i");
            return e.grep(t, function(e) {
                return r.test(e.label || e.value || e)
            })
        }
    }),
    e.widget("ui.autocomplete", e.ui.autocomplete, {
        options: {
            messages: {
                noResults: "No search results.",
                results: function(e) {
                    return e + (e > 1 ? " results are" : " result is") + " available, use up and down arrow keys to navigate."
                }
            }
        },
        __response: function(e) {
            var t;
            this._superApply(arguments);
            if (this.options.disabled || this.cancelSearch)
                return;
            e && e.length ? t = this.options.messages.results(e.length) : t = this.options.messages.noResults,
            this.liveRegion.text(t)
        }
    })
}
)(jQuery);
(function(e, t) {
    var n, r, i, s, o = "ui-button ui-widget ui-state-default ui-corner-all", u = "ui-state-hover ui-state-active ", a = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only", f = function() {
        var t = e(this).find(":ui-button");
        setTimeout(function() {
            t.button("refresh")
        }, 1)
    }, l = function(t) {
        var n = t.name
          , r = t.form
          , i = e([]);
        return n && (r ? i = e(r).find("[name='" + n + "']") : i = e("[name='" + n + "']", t.ownerDocument).filter(function() {
            return !this.form
        })),
        i
    };
    e.widget("ui.button", {
        version: "1.9.0",
        defaultElement: "<button>",
        options: {
            disabled: null,
            text: !0,
            label: null,
            icons: {
                primary: null,
                secondary: null
            }
        },
        _create: function() {
            this.element.closest("form").unbind("reset" + this.eventNamespace).bind("reset" + this.eventNamespace, f),
            typeof this.options.disabled != "boolean" ? this.options.disabled = !!this.element.prop("disabled") : this.element.prop("disabled", this.options.disabled),
            this._determineButtonType(),
            this.hasTitle = !!this.buttonElement.attr("title");
            var t = this
              , u = this.options
              , a = this.type === "checkbox" || this.type === "radio"
              , c = "ui-state-hover" + (a ? "" : " ui-state-active")
              , h = "ui-state-focus";
            u.label === null && (u.label = this.type === "input" ? this.buttonElement.val() : this.buttonElement.html()),
            this.buttonElement.addClass(o).attr("role", "button").bind("mouseenter" + this.eventNamespace, function() {
                if (u.disabled)
                    return;
                e(this).addClass("ui-state-hover"),
                this === n && e(this).addClass("ui-state-active")
            }).bind("mouseleave" + this.eventNamespace, function() {
                if (u.disabled)
                    return;
                e(this).removeClass(c)
            }).bind("click" + this.eventNamespace, function(e) {
                u.disabled && (e.preventDefault(),
                e.stopImmediatePropagation())
            }),
            this.element.bind("focus" + this.eventNamespace, function() {
                t.buttonElement.addClass(h)
            }).bind("blur" + this.eventNamespace, function() {
                t.buttonElement.removeClass(h)
            }),
            a && (this.element.bind("change" + this.eventNamespace, function() {
                if (s)
                    return;
                t.refresh()
            }),
            this.buttonElement.bind("mousedown" + this.eventNamespace, function(e) {
                if (u.disabled)
                    return;
                s = !1,
                r = e.pageX,
                i = e.pageY
            }).bind("mouseup" + this.eventNamespace, function(e) {
                if (u.disabled)
                    return;
                if (r !== e.pageX || i !== e.pageY)
                    s = !0
            })),
            this.type === "checkbox" ? this.buttonElement.bind("click" + this.eventNamespace, function() {
                if (u.disabled || s)
                    return !1;
                e(this).toggleClass("ui-state-active"),
                t.buttonElement.attr("aria-pressed", t.element[0].checked)
            }) : this.type === "radio" ? this.buttonElement.bind("click" + this.eventNamespace, function() {
                if (u.disabled || s)
                    return !1;
                e(this).addClass("ui-state-active"),
                t.buttonElement.attr("aria-pressed", "true");
                var n = t.element[0];
                l(n).not(n).map(function() {
                    return e(this).button("widget")[0]
                }).removeClass("ui-state-active").attr("aria-pressed", "false")
            }) : (this.buttonElement.bind("mousedown" + this.eventNamespace, function() {
                if (u.disabled)
                    return !1;
                e(this).addClass("ui-state-active"),
                n = this,
                t.document.one("mouseup", function() {
                    n = null
                })
            }).bind("mouseup" + this.eventNamespace, function() {
                if (u.disabled)
                    return !1;
                e(this).removeClass("ui-state-active")
            }).bind("keydown" + this.eventNamespace, function(t) {
                if (u.disabled)
                    return !1;
                (t.keyCode === e.ui.keyCode.SPACE || t.keyCode === e.ui.keyCode.ENTER) && e(this).addClass("ui-state-active")
            }).bind("keyup" + this.eventNamespace, function() {
                e(this).removeClass("ui-state-active")
            }),
            this.buttonElement.is("a") && this.buttonElement.keyup(function(t) {
                t.keyCode === e.ui.keyCode.SPACE && e(this).click()
            })),
            this._setOption("disabled", u.disabled),
            this._resetButton()
        },
        _determineButtonType: function() {
            var e, t, n;
            this.element.is("[type=checkbox]") ? this.type = "checkbox" : this.element.is("[type=radio]") ? this.type = "radio" : this.element.is("input") ? this.type = "input" : this.type = "button",
            this.type === "checkbox" || this.type === "radio" ? (e = this.element.parents().last(),
            t = "label[for='" + this.element.attr("id") + "']",
            this.buttonElement = e.find(t),
            this.buttonElement.length || (e = e.length ? e.siblings() : this.element.siblings(),
            this.buttonElement = e.filter(t),
            this.buttonElement.length || (this.buttonElement = e.find(t))),
            this.element.addClass("ui-helper-hidden-accessible"),
            n = this.element.is(":checked"),
            n && this.buttonElement.addClass("ui-state-active"),
            this.buttonElement.prop("aria-pressed", n)) : this.buttonElement = this.element
        },
        widget: function() {
            return this.buttonElement
        },
        _destroy: function() {
            this.element.removeClass("ui-helper-hidden-accessible"),
            this.buttonElement.removeClass(o + " " + u + " " + a).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html()),
            this.hasTitle || this.buttonElement.removeAttr("title")
        },
        _setOption: function(e, t) {
            this._super(e, t);
            if (e === "disabled") {
                t ? this.element.prop("disabled", !0) : this.element.prop("disabled", !1);
                return
            }
            this._resetButton()
        },
        refresh: function() {
            var t = this.element.is(":disabled");
            t !== this.options.disabled && this._setOption("disabled", t),
            this.type === "radio" ? l(this.element[0]).each(function() {
                e(this).is(":checked") ? e(this).button("widget").addClass("ui-state-active").attr("aria-pressed", "true") : e(this).button("widget").removeClass("ui-state-active").attr("aria-pressed", "false")
            }) : this.type === "checkbox" && (this.element.is(":checked") ? this.buttonElement.addClass("ui-state-active").attr("aria-pressed", "true") : this.buttonElement.removeClass("ui-state-active").attr("aria-pressed", "false"))
        },
        _resetButton: function() {
            if (this.type === "input") {
                this.options.label && this.element.val(this.options.label);
                return
            }
            var t = this.buttonElement.removeClass(a)
              , n = e("<span></span>", this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(t.empty()).text()
              , r = this.options.icons
              , i = r.primary && r.secondary
              , s = [];
            r.primary || r.secondary ? (this.options.text && s.push("ui-button-text-icon" + (i ? "s" : r.primary ? "-primary" : "-secondary")),
            r.primary && t.prepend("<span class='ui-button-icon-primary ui-icon " + r.primary + "'></span>"),
            r.secondary && t.append("<span class='ui-button-icon-secondary ui-icon " + r.secondary + "'></span>"),
            this.options.text || (s.push(i ? "ui-button-icons-only" : "ui-button-icon-only"),
            this.hasTitle || t.attr("title", e.trim(n)))) : s.push("ui-button-text-only"),
            t.addClass(s.join(" "))
        }
    }),
    e.widget("ui.buttonset", {
        version: "1.9.0",
        options: {
            items: "button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(button)"
        },
        _create: function() {
            this.element.addClass("ui-buttonset")
        },
        _init: function() {
            this.refresh()
        },
        _setOption: function(e, t) {
            e === "disabled" && this.buttons.button("option", e, t),
            this._super(e, t)
        },
        refresh: function() {
            var t = this.element.css("direction") === "rtl";
            this.buttons = this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function() {
                return e(this).button("widget")[0]
            }).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(t ? "ui-corner-right" : "ui-corner-left").end().filter(":last").addClass(t ? "ui-corner-left" : "ui-corner-right").end().end()
        },
        _destroy: function() {
            this.element.removeClass("ui-buttonset"),
            this.buttons.map(function() {
                return e(this).button("widget")[0]
            }).removeClass("ui-corner-left ui-corner-right").end().button("destroy")
        }
    })
}
)(jQuery);
(function($, undefined) {
    function Datepicker() {
        this.debug = !1,
        this._curInst = null,
        this._keyEvent = !1,
        this._disabledInputs = [],
        this._datepickerShowing = !1,
        this._inDialog = !1,
        this._mainDivId = "ui-datepicker-div",
        this._inlineClass = "ui-datepicker-inline",
        this._appendClass = "ui-datepicker-append",
        this._triggerClass = "ui-datepicker-trigger",
        this._dialogClass = "ui-datepicker-dialog",
        this._disableClass = "ui-datepicker-disabled",
        this._unselectableClass = "ui-datepicker-unselectable",
        this._currentClass = "ui-datepicker-current-day",
        this._dayOverClass = "ui-datepicker-days-cell-over",
        this.regional = [],
        this.regional[""] = {
            closeText: "Done",
            prevText: "Prev",
            nextText: "Next",
            currentText: "Today",
            monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
            weekHeader: "Wk",
            dateFormat: "mm/dd/yy",
            firstDay: 0,
            isRTL: !1,
            showMonthAfterYear: !1,
            yearSuffix: ""
        },
        this._defaults = {
            showOn: "focus",
            showAnim: "fadeIn",
            showOptions: {},
            defaultDate: null,
            appendText: "",
            buttonText: "...",
            buttonImage: "",
            buttonImageOnly: !1,
            hideIfNoPrevNext: !1,
            navigationAsDateFormat: !1,
            gotoCurrent: !1,
            changeMonth: !1,
            changeYear: !1,
            yearRange: "c-10:c+10",
            showOtherMonths: !1,
            selectOtherMonths: !1,
            showWeek: !1,
            calculateWeek: this.iso8601Week,
            shortYearCutoff: "+10",
            minDate: null,
            maxDate: null,
            duration: "fast",
            beforeShowDay: null,
            beforeShow: null,
            onSelect: null,
            onChangeMonthYear: null,
            onClose: null,
            numberOfMonths: 1,
            showCurrentAtPos: 0,
            stepMonths: 1,
            stepBigMonths: 12,
            altField: "",
            altFormat: "",
            constrainInput: !0,
            showButtonPanel: !1,
            autoSize: !1,
            disabled: !1
        },
        $.extend(this._defaults, this.regional[""]),
        this.dpDiv = bindHover($('<div id="' + this._mainDivId + '" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))
    }
    function bindHover(e) {
        var t = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
        return e.delegate(t, "mouseout", function() {
            $(this).removeClass("ui-state-hover"),
            this.className.indexOf("ui-datepicker-prev") != -1 && $(this).removeClass("ui-datepicker-prev-hover"),
            this.className.indexOf("ui-datepicker-next") != -1 && $(this).removeClass("ui-datepicker-next-hover")
        }).delegate(t, "mouseover", function() {
            $.datepicker._isDisabledDatepicker(instActive.inline ? e.parent()[0] : instActive.input[0]) || ($(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),
            $(this).addClass("ui-state-hover"),
            this.className.indexOf("ui-datepicker-prev") != -1 && $(this).addClass("ui-datepicker-prev-hover"),
            this.className.indexOf("ui-datepicker-next") != -1 && $(this).addClass("ui-datepicker-next-hover"))
        })
    }
    function extendRemove(e, t) {
        $.extend(e, t);
        for (var n in t)
            if (t[n] == null || t[n] == undefined)
                e[n] = t[n];
        return e
    }
    $.extend($.ui, {
        datepicker: {
            version: "1.9.0"
        }
    });
    var PROP_NAME = "datepicker", dpuuid = (new Date).getTime(), instActive;
    $.extend(Datepicker.prototype, {
        markerClassName: "hasDatepicker",
        maxRows: 4,
        log: function() {
            this.debug && console.log.apply("", arguments)
        },
        _widgetDatepicker: function() {
            return this.dpDiv
        },
        setDefaults: function(e) {
            return extendRemove(this._defaults, e || {}),
            this
        },
        _attachDatepicker: function(target, settings) {
            var inlineSettings = null;
            for (var attrName in this._defaults) {
                var attrValue = target.getAttribute("date:" + attrName);
                if (attrValue) {
                    inlineSettings = inlineSettings || {};
                    try {
                        inlineSettings[attrName] = eval(attrValue)
                    } catch (err) {
                        inlineSettings[attrName] = attrValue
                    }
                }
            }
            var nodeName = target.nodeName.toLowerCase()
              , inline = nodeName == "div" || nodeName == "span";
            target.id || (this.uuid += 1,
            target.id = "dp" + this.uuid);
            var inst = this._newInst($(target), inline);
            inst.settings = $.extend({}, settings || {}, inlineSettings || {}),
            nodeName == "input" ? this._connectDatepicker(target, inst) : inline && this._inlineDatepicker(target, inst)
        },
        _newInst: function(e, t) {
            var n = e[0].id.replace(/([^A-Za-z0-9_-])/g, "\\\\$1");
            return {
                id: n,
                input: e,
                selectedDay: 0,
                selectedMonth: 0,
                selectedYear: 0,
                drawMonth: 0,
                drawYear: 0,
                inline: t,
                dpDiv: t ? bindHover($('<div class="' + this._inlineClass + ' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')) : this.dpDiv
            }
        },
        _connectDatepicker: function(e, t) {
            var n = $(e);
            t.append = $([]),
            t.trigger = $([]);
            if (n.hasClass(this.markerClassName))
                return;
            this._attachments(n, t),
            n.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker", function(e, n, r) {
                t.settings[n] = r
            }).bind("getData.datepicker", function(e, n) {
                return this._get(t, n)
            }),
            this._autoSize(t),
            $.data(e, PROP_NAME, t),
            t.settings.disabled && this._disableDatepicker(e)
        },
        _attachments: function(e, t) {
            var n = this._get(t, "appendText")
              , r = this._get(t, "isRTL");
            t.append && t.append.remove(),
            n && (t.append = $('<span class="' + this._appendClass + '">' + n + "</span>"),
            e[r ? "before" : "after"](t.append)),
            e.unbind("focus", this._showDatepicker),
            t.trigger && t.trigger.remove();
            var i = this._get(t, "showOn");
            (i == "focus" || i == "both") && e.focus(this._showDatepicker);
            if (i == "button" || i == "both") {
                var s = this._get(t, "buttonText")
                  , o = this._get(t, "buttonImage");
                t.trigger = $(this._get(t, "buttonImageOnly") ? $("<img/>").addClass(this._triggerClass).attr({
                    src: o,
                    alt: s,
                    title: s
                }) : $('<button type="button"></button>').addClass(this._triggerClass).html(o == "" ? s : $("<img/>").attr({
                    src: o,
                    alt: s,
                    title: s
                }))),
                e[r ? "before" : "after"](t.trigger),
                t.trigger.click(function() {
                    return $.datepicker._datepickerShowing && $.datepicker._lastInput == e[0] ? $.datepicker._hideDatepicker() : $.datepicker._datepickerShowing && $.datepicker._lastInput != e[0] ? ($.datepicker._hideDatepicker(),
                    $.datepicker._showDatepicker(e[0])) : $.datepicker._showDatepicker(e[0]),
                    !1
                })
            }
        },
        _autoSize: function(e) {
            if (this._get(e, "autoSize") && !e.inline) {
                var t = new Date(2009,11,20)
                  , n = this._get(e, "dateFormat");
                if (n.match(/[DM]/)) {
                    var r = function(e) {
                        var t = 0
                          , n = 0;
                        for (var r = 0; r < e.length; r++)
                            e[r].length > t && (t = e[r].length,
                            n = r);
                        return n
                    };
                    t.setMonth(r(this._get(e, n.match(/MM/) ? "monthNames" : "monthNamesShort"))),
                    t.setDate(r(this._get(e, n.match(/DD/) ? "dayNames" : "dayNamesShort")) + 20 - t.getDay())
                }
                e.input.attr("size", this._formatDate(e, t).length)
            }
        },
        _inlineDatepicker: function(e, t) {
            var n = $(e);
            if (n.hasClass(this.markerClassName))
                return;
            n.addClass(this.markerClassName).append(t.dpDiv).bind("setData.datepicker", function(e, n, r) {
                t.settings[n] = r
            }).bind("getData.datepicker", function(e, n) {
                return this._get(t, n)
            }),
            $.data(e, PROP_NAME, t),
            this._setDate(t, this._getDefaultDate(t), !0),
            this._updateDatepicker(t),
            this._updateAlternate(t),
            t.settings.disabled && this._disableDatepicker(e),
            t.dpDiv.css("display", "block")
        },
        _dialogDatepicker: function(e, t, n, r, i) {
            var s = this._dialogInst;
            if (!s) {
                this.uuid += 1;
                var o = "dp" + this.uuid;
                this._dialogInput = $('<input type="text" id="' + o + '" style="position: absolute; top: -100px; width: 0px;"/>'),
                this._dialogInput.keydown(this._doKeyDown),
                $("body").append(this._dialogInput),
                s = this._dialogInst = this._newInst(this._dialogInput, !1),
                s.settings = {},
                $.data(this._dialogInput[0], PROP_NAME, s)
            }
            extendRemove(s.settings, r || {}),
            t = t && t.constructor == Date ? this._formatDate(s, t) : t,
            this._dialogInput.val(t),
            this._pos = i ? i.length ? i : [i.pageX, i.pageY] : null;
            if (!this._pos) {
                var u = document.documentElement.clientWidth
                  , a = document.documentElement.clientHeight
                  , f = document.documentElement.scrollLeft || document.body.scrollLeft
                  , l = document.documentElement.scrollTop || document.body.scrollTop;
                this._pos = [u / 2 - 100 + f, a / 2 - 150 + l]
            }
            return this._dialogInput.css("left", this._pos[0] + 20 + "px").css("top", this._pos[1] + "px"),
            s.settings.onSelect = n,
            this._inDialog = !0,
            this.dpDiv.addClass(this._dialogClass),
            this._showDatepicker(this._dialogInput[0]),
            $.blockUI && $.blockUI(this.dpDiv),
            $.data(this._dialogInput[0], PROP_NAME, s),
            this
        },
        _destroyDatepicker: function(e) {
            var t = $(e)
              , n = $.data(e, PROP_NAME);
            if (!t.hasClass(this.markerClassName))
                return;
            var r = e.nodeName.toLowerCase();
            $.removeData(e, PROP_NAME),
            r == "input" ? (n.append.remove(),
            n.trigger.remove(),
            t.removeClass(this.markerClassName).unbind("focus", this._showDatepicker).unbind("keydown", this._doKeyDown).unbind("keypress", this._doKeyPress).unbind("keyup", this._doKeyUp)) : (r == "div" || r == "span") && t.removeClass(this.markerClassName).empty()
        },
        _enableDatepicker: function(e) {
            var t = $(e)
              , n = $.data(e, PROP_NAME);
            if (!t.hasClass(this.markerClassName))
                return;
            var r = e.nodeName.toLowerCase();
            if (r == "input")
                e.disabled = !1,
                n.trigger.filter("button").each(function() {
                    this.disabled = !1
                }).end().filter("img").css({
                    opacity: "1.0",
                    cursor: ""
                });
            else if (r == "div" || r == "span") {
                var i = t.children("." + this._inlineClass);
                i.children().removeClass("ui-state-disabled"),
                i.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !1)
            }
            this._disabledInputs = $.map(this._disabledInputs, function(t) {
                return t == e ? null : t
            })
        },
        _disableDatepicker: function(e) {
            var t = $(e)
              , n = $.data(e, PROP_NAME);
            if (!t.hasClass(this.markerClassName))
                return;
            var r = e.nodeName.toLowerCase();
            if (r == "input")
                e.disabled = !0,
                n.trigger.filter("button").each(function() {
                    this.disabled = !0
                }).end().filter("img").css({
                    opacity: "0.5",
                    cursor: "default"
                });
            else if (r == "div" || r == "span") {
                var i = t.children("." + this._inlineClass);
                i.children().addClass("ui-state-disabled"),
                i.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !0)
            }
            this._disabledInputs = $.map(this._disabledInputs, function(t) {
                return t == e ? null : t
            }),
            this._disabledInputs[this._disabledInputs.length] = e
        },
        _isDisabledDatepicker: function(e) {
            if (!e)
                return !1;
            for (var t = 0; t < this._disabledInputs.length; t++)
                if (this._disabledInputs[t] == e)
                    return !0;
            return !1
        },
        _getInst: function(e) {
            try {
                return $.data(e, PROP_NAME)
            } catch (t) {
                throw "Missing instance data for this datepicker"
            }
        },
        _optionDatepicker: function(e, t, n) {
            var r = this._getInst(e);
            if (arguments.length == 2 && typeof t == "string")
                return t == "defaults" ? $.extend({}, $.datepicker._defaults) : r ? t == "all" ? $.extend({}, r.settings) : this._get(r, t) : null;
            var i = t || {};
            typeof t == "string" && (i = {},
            i[t] = n);
            if (r) {
                this._curInst == r && this._hideDatepicker();
                var s = this._getDateDatepicker(e, !0)
                  , o = this._getMinMaxDate(r, "min")
                  , u = this._getMinMaxDate(r, "max");
                extendRemove(r.settings, i),
                o !== null && i.dateFormat !== undefined && i.minDate === undefined && (r.settings.minDate = this._formatDate(r, o)),
                u !== null && i.dateFormat !== undefined && i.maxDate === undefined && (r.settings.maxDate = this._formatDate(r, u)),
                this._attachments($(e), r),
                this._autoSize(r),
                this._setDate(r, s),
                this._updateAlternate(r),
                this._updateDatepicker(r)
            }
        },
        _changeDatepicker: function(e, t, n) {
            this._optionDatepicker(e, t, n)
        },
        _refreshDatepicker: function(e) {
            var t = this._getInst(e);
            t && this._updateDatepicker(t)
        },
        _setDateDatepicker: function(e, t) {
            var n = this._getInst(e);
            n && (this._setDate(n, t),
            this._updateDatepicker(n),
            this._updateAlternate(n))
        },
        _getDateDatepicker: function(e, t) {
            var n = this._getInst(e);
            return n && !n.inline && this._setDateFromField(n, t),
            n ? this._getDate(n) : null
        },
        _doKeyDown: function(e) {
            var t = $.datepicker._getInst(e.target)
              , n = !0
              , r = t.dpDiv.is(".ui-datepicker-rtl");
            t._keyEvent = !0;
            if ($.datepicker._datepickerShowing)
                switch (e.keyCode) {
                case 9:
                    $.datepicker._hideDatepicker(),
                    n = !1;
                    break;
                case 13:
                    var i = $("td." + $.datepicker._dayOverClass + ":not(." + $.datepicker._currentClass + ")", t.dpDiv);
                    i[0] && $.datepicker._selectDay(e.target, t.selectedMonth, t.selectedYear, i[0]);
                    var s = $.datepicker._get(t, "onSelect");
                    if (s) {
                        var o = $.datepicker._formatDate(t);
                        s.apply(t.input ? t.input[0] : null, [o, t])
                    } else
                        $.datepicker._hideDatepicker();
                    return !1;
                case 27:
                    $.datepicker._hideDatepicker();
                    break;
                case 33:
                    $.datepicker._adjustDate(e.target, e.ctrlKey ? -$.datepicker._get(t, "stepBigMonths") : -$.datepicker._get(t, "stepMonths"), "M");
                    break;
                case 34:
                    $.datepicker._adjustDate(e.target, e.ctrlKey ? +$.datepicker._get(t, "stepBigMonths") : +$.datepicker._get(t, "stepMonths"), "M");
                    break;
                case 35:
                    (e.ctrlKey || e.metaKey) && $.datepicker._clearDate(e.target),
                    n = e.ctrlKey || e.metaKey;
                    break;
                case 36:
                    (e.ctrlKey || e.metaKey) && $.datepicker._gotoToday(e.target),
                    n = e.ctrlKey || e.metaKey;
                    break;
                case 37:
                    (e.ctrlKey || e.metaKey) && $.datepicker._adjustDate(e.target, r ? 1 : -1, "D"),
                    n = e.ctrlKey || e.metaKey,
                    e.originalEvent.altKey && $.datepicker._adjustDate(e.target, e.ctrlKey ? -$.datepicker._get(t, "stepBigMonths") : -$.datepicker._get(t, "stepMonths"), "M");
                    break;
                case 38:
                    (e.ctrlKey || e.metaKey) && $.datepicker._adjustDate(e.target, -7, "D"),
                    n = e.ctrlKey || e.metaKey;
                    break;
                case 39:
                    (e.ctrlKey || e.metaKey) && $.datepicker._adjustDate(e.target, r ? -1 : 1, "D"),
                    n = e.ctrlKey || e.metaKey,
                    e.originalEvent.altKey && $.datepicker._adjustDate(e.target, e.ctrlKey ? +$.datepicker._get(t, "stepBigMonths") : +$.datepicker._get(t, "stepMonths"), "M");
                    break;
                case 40:
                    (e.ctrlKey || e.metaKey) && $.datepicker._adjustDate(e.target, 7, "D"),
                    n = e.ctrlKey || e.metaKey;
                    break;
                default:
                    n = !1
                }
            else
                e.keyCode == 36 && e.ctrlKey ? $.datepicker._showDatepicker(this) : n = !1;
            n && (e.preventDefault(),
            e.stopPropagation())
        },
        _doKeyPress: function(e) {
            var t = $.datepicker._getInst(e.target);
            if ($.datepicker._get(t, "constrainInput")) {
                var n = $.datepicker._possibleChars($.datepicker._get(t, "dateFormat"))
                  , r = String.fromCharCode(e.charCode == undefined ? e.keyCode : e.charCode);
                return e.ctrlKey || e.metaKey || r < " " || !n || n.indexOf(r) > -1
            }
        },
        _doKeyUp: function(e) {
            var t = $.datepicker._getInst(e.target);
            if (t.input.val() != t.lastVal)
                try {
                    var n = $.datepicker.parseDate($.datepicker._get(t, "dateFormat"), t.input ? t.input.val() : null, $.datepicker._getFormatConfig(t));
                    n && ($.datepicker._setDateFromField(t),
                    $.datepicker._updateAlternate(t),
                    $.datepicker._updateDatepicker(t))
                } catch (r) {
                    $.datepicker.log(r)
                }
            return !0
        },
        _showDatepicker: function(e) {
            e = e.target || e,
            e.nodeName.toLowerCase() != "input" && (e = $("input", e.parentNode)[0]);
            if ($.datepicker._isDisabledDatepicker(e) || $.datepicker._lastInput == e)
                return;
            var t = $.datepicker._getInst(e);
            $.datepicker._curInst && $.datepicker._curInst != t && ($.datepicker._curInst.dpDiv.stop(!0, !0),
            t && $.datepicker._datepickerShowing && $.datepicker._hideDatepicker($.datepicker._curInst.input[0]));
            var n = $.datepicker._get(t, "beforeShow")
              , r = n ? n.apply(e, [e, t]) : {};
            if (r === !1)
                return;
            extendRemove(t.settings, r),
            t.lastVal = null,
            $.datepicker._lastInput = e,
            $.datepicker._setDateFromField(t),
            $.datepicker._inDialog && (e.value = ""),
            $.datepicker._pos || ($.datepicker._pos = $.datepicker._findPos(e),
            $.datepicker._pos[1] += e.offsetHeight);
            var i = !1;
            $(e).parents().each(function() {
                return i |= $(this).css("position") == "fixed",
                !i
            });
            var s = {
                left: $.datepicker._pos[0],
                top: $.datepicker._pos[1]
            };
            $.datepicker._pos = null,
            t.dpDiv.empty(),
            t.dpDiv.css({
                position: "absolute",
                display: "block",
                top: "-1000px"
            }),
            $.datepicker._updateDatepicker(t),
            s = $.datepicker._checkOffset(t, s, i),
            t.dpDiv.css({
                position: $.datepicker._inDialog && $.blockUI ? "static" : i ? "fixed" : "absolute",
                display: "none",
                left: s.left + "px",
                top: s.top + "px"
            });
            if (!t.inline) {
                var o = $.datepicker._get(t, "showAnim")
                  , u = $.datepicker._get(t, "duration")
                  , a = function() {
                    var e = t.dpDiv.find("iframe.ui-datepicker-cover");
                    if (!!e.length) {
                        var n = $.datepicker._getBorders(t.dpDiv);
                        e.css({
                            left: -n[0],
                            top: -n[1],
                            width: t.dpDiv.outerWidth(),
                            height: t.dpDiv.outerHeight()
                        })
                    }
                };
                t.dpDiv.zIndex($(e).zIndex() + 1),
                $.datepicker._datepickerShowing = !0,
                $.effects && ($.effects.effect[o] || $.effects[o]) ? t.dpDiv.show(o, $.datepicker._get(t, "showOptions"), u, a) : t.dpDiv[o || "show"](o ? u : null, a),
                (!o || !u) && a(),
                t.input.is(":visible") && !t.input.is(":disabled") && t.input.focus(),
                $.datepicker._curInst = t
            }
        },
        _updateDatepicker: function(e) {
            this.maxRows = 4;
            var t = $.datepicker._getBorders(e.dpDiv);
            instActive = e,
            e.dpDiv.empty().append(this._generateHTML(e)),
            this._attachHandlers(e);
            var n = e.dpDiv.find("iframe.ui-datepicker-cover");
            !n.length || n.css({
                left: -t[0],
                top: -t[1],
                width: e.dpDiv.outerWidth(),
                height: e.dpDiv.outerHeight()
            }),
            e.dpDiv.find("." + this._dayOverClass + " a").mouseover();
            var r = this._getNumberOfMonths(e)
              , i = r[1]
              , s = 17;
            e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),
            i > 1 && e.dpDiv.addClass("ui-datepicker-multi-" + i).css("width", s * i + "em"),
            e.dpDiv[(r[0] != 1 || r[1] != 1 ? "add" : "remove") + "Class"]("ui-datepicker-multi"),
            e.dpDiv[(this._get(e, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl"),
            e == $.datepicker._curInst && $.datepicker._datepickerShowing && e.input && e.input.is(":visible") && !e.input.is(":disabled") && e.input[0] != document.activeElement && e.input.focus();
            if (e.yearshtml) {
                var o = e.yearshtml;
                setTimeout(function() {
                    o === e.yearshtml && e.yearshtml && e.dpDiv.find("select.ui-datepicker-year:first").replaceWith(e.yearshtml),
                    o = e.yearshtml = null
                }, 0)
            }
        },
        _getBorders: function(e) {
            var t = function(e) {
                return {
                    thin: 1,
                    medium: 2,
                    thick: 3
                }[e] || e
            };
            return [parseFloat(t(e.css("border-left-width"))), parseFloat(t(e.css("border-top-width")))]
        },
        _checkOffset: function(e, t, n) {
            var r = e.dpDiv.outerWidth()
              , i = e.dpDiv.outerHeight()
              , s = e.input ? e.input.outerWidth() : 0
              , o = e.input ? e.input.outerHeight() : 0
              , u = document.documentElement.clientWidth + (n ? 0 : $(document).scrollLeft())
              , a = document.documentElement.clientHeight + (n ? 0 : $(document).scrollTop());
            return t.left -= this._get(e, "isRTL") ? r - s : 0,
            t.left -= n && t.left == e.input.offset().left ? $(document).scrollLeft() : 0,
            t.top -= n && t.top == e.input.offset().top + o ? $(document).scrollTop() : 0,
            t.left -= Math.min(t.left, t.left + r > u && u > r ? Math.abs(t.left + r - u) : 0),
            t.top -= Math.min(t.top, t.top + i > a && a > i ? Math.abs(i + o) : 0),
            t
        },
        _findPos: function(e) {
            var t = this._getInst(e)
              , n = this._get(t, "isRTL");
            while (e && (e.type == "hidden" || e.nodeType != 1 || $.expr.filters.hidden(e)))
                e = e[n ? "previousSibling" : "nextSibling"];
            var r = $(e).offset();
            return [r.left, r.top]
        },
        _hideDatepicker: function(e) {
            var t = this._curInst;
            if (!t || e && t != $.data(e, PROP_NAME))
                return;
            if (this._datepickerShowing) {
                var n = this._get(t, "showAnim")
                  , r = this._get(t, "duration")
                  , i = function() {
                    $.datepicker._tidyDialog(t)
                };
                $.effects && ($.effects.effect[n] || $.effects[n]) ? t.dpDiv.hide(n, $.datepicker._get(t, "showOptions"), r, i) : t.dpDiv[n == "slideDown" ? "slideUp" : n == "fadeIn" ? "fadeOut" : "hide"](n ? r : null, i),
                n || i(),
                this._datepickerShowing = !1;
                var s = this._get(t, "onClose");
                s && s.apply(t.input ? t.input[0] : null, [t.input ? t.input.val() : "", t]),
                this._lastInput = null,
                this._inDialog && (this._dialogInput.css({
                    position: "absolute",
                    left: "0",
                    top: "-100px"
                }),
                $.blockUI && ($.unblockUI(),
                $("body").append(this.dpDiv))),
                this._inDialog = !1
            }
        },
        _tidyDialog: function(e) {
            e.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")
        },
        _checkExternalClick: function(e) {
            if (!$.datepicker._curInst)
                return;
            var t = $(e.target)
              , n = $.datepicker._getInst(t[0]);
            (t[0].id != $.datepicker._mainDivId && t.parents("#" + $.datepicker._mainDivId).length == 0 && !t.hasClass($.datepicker.markerClassName) && !t.closest("." + $.datepicker._triggerClass).length && $.datepicker._datepickerShowing && (!$.datepicker._inDialog || !$.blockUI) || t.hasClass($.datepicker.markerClassName) && $.datepicker._curInst != n) && $.datepicker._hideDatepicker()
        },
        _adjustDate: function(e, t, n) {
            var r = $(e)
              , i = this._getInst(r[0]);
            if (this._isDisabledDatepicker(r[0]))
                return;
            this._adjustInstDate(i, t + (n == "M" ? this._get(i, "showCurrentAtPos") : 0), n),
            this._updateDatepicker(i)
        },
        _gotoToday: function(e) {
            var t = $(e)
              , n = this._getInst(t[0]);
            if (this._get(n, "gotoCurrent") && n.currentDay)
                n.selectedDay = n.currentDay,
                n.drawMonth = n.selectedMonth = n.currentMonth,
                n.drawYear = n.selectedYear = n.currentYear;
            else {
                var r = new Date;
                n.selectedDay = r.getDate(),
                n.drawMonth = n.selectedMonth = r.getMonth(),
                n.drawYear = n.selectedYear = r.getFullYear()
            }
            this._notifyChange(n),
            this._adjustDate(t)
        },
        _selectMonthYear: function(e, t, n) {
            var r = $(e)
              , i = this._getInst(r[0]);
            i["selected" + (n == "M" ? "Month" : "Year")] = i["draw" + (n == "M" ? "Month" : "Year")] = parseInt(t.options[t.selectedIndex].value, 10),
            this._notifyChange(i),
            this._adjustDate(r)
        },
        _selectDay: function(e, t, n, r) {
            var i = $(e);
            if ($(r).hasClass(this._unselectableClass) || this._isDisabledDatepicker(i[0]))
                return;
            var s = this._getInst(i[0]);
            s.selectedDay = s.currentDay = $("a", r).html(),
            s.selectedMonth = s.currentMonth = t,
            s.selectedYear = s.currentYear = n,
            this._selectDate(e, this._formatDate(s, s.currentDay, s.currentMonth, s.currentYear))
        },
        _clearDate: function(e) {
            var t = $(e)
              , n = this._getInst(t[0]);
            this._selectDate(t, "")
        },
        _selectDate: function(e, t) {
            var n = $(e)
              , r = this._getInst(n[0]);
            t = t != null ? t : this._formatDate(r),
            r.input && r.input.val(t),
            this._updateAlternate(r);
            var i = this._get(r, "onSelect");
            i ? i.apply(r.input ? r.input[0] : null, [t, r]) : r.input && r.input.trigger("change"),
            r.inline ? this._updateDatepicker(r) : (this._hideDatepicker(),
            this._lastInput = r.input[0],
            typeof r.input[0] != "object" && r.input.focus(),
            this._lastInput = null)
        },
        _updateAlternate: function(e) {
            var t = this._get(e, "altField");
            if (t) {
                var n = this._get(e, "altFormat") || this._get(e, "dateFormat")
                  , r = this._getDate(e)
                  , i = this.formatDate(n, r, this._getFormatConfig(e));
                $(t).each(function() {
                    $(this).val(i)
                })
            }
        },
        noWeekends: function(e) {
            var t = e.getDay();
            return [t > 0 && t < 6, ""]
        },
        iso8601Week: function(e) {
            var t = new Date(e.getTime());
            t.setDate(t.getDate() + 4 - (t.getDay() || 7));
            var n = t.getTime();
            return t.setMonth(0),
            t.setDate(1),
            Math.floor(Math.round((n - t) / 864e5) / 7) + 1
        },
        parseDate: function(e, t, n) {
            if (e == null || t == null)
                throw "Invalid arguments";
            t = typeof t == "object" ? t.toString() : t + "";
            if (t == "")
                return null;
            var r = (n ? n.shortYearCutoff : null) || this._defaults.shortYearCutoff;
            r = typeof r != "string" ? r : (new Date).getFullYear() % 100 + parseInt(r, 10);
            var i = (n ? n.dayNamesShort : null) || this._defaults.dayNamesShort
              , s = (n ? n.dayNames : null) || this._defaults.dayNames
              , o = (n ? n.monthNamesShort : null) || this._defaults.monthNamesShort
              , u = (n ? n.monthNames : null) || this._defaults.monthNames
              , a = -1
              , f = -1
              , l = -1
              , c = -1
              , h = !1
              , p = function(t) {
                var n = y + 1 < e.length && e.charAt(y + 1) == t;
                return n && y++,
                n
            }
              , d = function(e) {
                var n = p(e)
                  , r = e == "@" ? 14 : e == "!" ? 20 : e == "y" && n ? 4 : e == "o" ? 3 : 2
                  , i = new RegExp("^\\d{1," + r + "}")
                  , s = t.substring(g).match(i);
                if (!s)
                    throw "Missing number at position " + g;
                return g += s[0].length,
                parseInt(s[0], 10)
            }
              , v = function(e, n, r) {
                var i = $.map(p(e) ? r : n, function(e, t) {
                    return [[t, e]]
                }).sort(function(e, t) {
                    return -(e[1].length - t[1].length)
                })
                  , s = -1;
                $.each(i, function(e, n) {
                    var r = n[1];
                    if (t.substr(g, r.length).toLowerCase() == r.toLowerCase())
                        return s = n[0],
                        g += r.length,
                        !1
                });
                if (s != -1)
                    return s + 1;
                throw "Unknown name at position " + g
            }
              , m = function() {
                if (t.charAt(g) != e.charAt(y))
                    throw "Unexpected literal at position " + g;
                g++
            }
              , g = 0;
            for (var y = 0; y < e.length; y++)
                if (h)
                    e.charAt(y) == "'" && !p("'") ? h = !1 : m();
                else
                    switch (e.charAt(y)) {
                    case "d":
                        l = d("d");
                        break;
                    case "D":
                        v("D", i, s);
                        break;
                    case "o":
                        c = d("o");
                        break;
                    case "m":
                        f = d("m");
                        break;
                    case "M":
                        f = v("M", o, u);
                        break;
                    case "y":
                        a = d("y");
                        break;
                    case "@":
                        var b = new Date(d("@"));
                        a = b.getFullYear(),
                        f = b.getMonth() + 1,
                        l = b.getDate();
                        break;
                    case "!":
                        var b = new Date((d("!") - this._ticksTo1970) / 1e4);
                        a = b.getFullYear(),
                        f = b.getMonth() + 1,
                        l = b.getDate();
                        break;
                    case "'":
                        p("'") ? m() : h = !0;
                        break;
                    default:
                        m()
                    }
            if (g < t.length) {
                var w = t.substr(g);
                if (!/^\s+/.test(w))
                    throw "Extra/unparsed characters found in date: " + w
            }
            a == -1 ? a = (new Date).getFullYear() : a < 100 && (a += (new Date).getFullYear() - (new Date).getFullYear() % 100 + (a <= r ? 0 : -100));
            if (c > -1) {
                f = 1,
                l = c;
                do {
                    var E = this._getDaysInMonth(a, f - 1);
                    if (l <= E)
                        break;
                    f++,
                    l -= E
                } while (!0)
            }
            var b = this._daylightSavingAdjust(new Date(a,f - 1,l));
            if (b.getFullYear() != a || b.getMonth() + 1 != f || b.getDate() != l)
                throw "Invalid date";
            return b
        },
        ATOM: "yy-mm-dd",
        COOKIE: "D, dd M yy",
        ISO_8601: "yy-mm-dd",
        RFC_822: "D, d M y",
        RFC_850: "DD, dd-M-y",
        RFC_1036: "D, d M y",
        RFC_1123: "D, d M yy",
        RFC_2822: "D, d M yy",
        RSS: "D, d M y",
        TICKS: "!",
        TIMESTAMP: "@",
        W3C: "yy-mm-dd",
        _ticksTo1970: (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)) * 24 * 60 * 60 * 1e7,
        formatDate: function(e, t, n) {
            if (!t)
                return "";
            var r = (n ? n.dayNamesShort : null) || this._defaults.dayNamesShort
              , i = (n ? n.dayNames : null) || this._defaults.dayNames
              , s = (n ? n.monthNamesShort : null) || this._defaults.monthNamesShort
              , o = (n ? n.monthNames : null) || this._defaults.monthNames
              , u = function(t) {
                var n = h + 1 < e.length && e.charAt(h + 1) == t;
                return n && h++,
                n
            }
              , a = function(e, t, n) {
                var r = "" + t;
                if (u(e))
                    while (r.length < n)
                        r = "0" + r;
                return r
            }
              , f = function(e, t, n, r) {
                return u(e) ? r[t] : n[t]
            }
              , l = ""
              , c = !1;
            if (t)
                for (var h = 0; h < e.length; h++)
                    if (c)
                        e.charAt(h) == "'" && !u("'") ? c = !1 : l += e.charAt(h);
                    else
                        switch (e.charAt(h)) {
                        case "d":
                            l += a("d", t.getDate(), 2);
                            break;
                        case "D":
                            l += f("D", t.getDay(), r, i);
                            break;
                        case "o":
                            l += a("o", Math.round(((new Date(t.getFullYear(),t.getMonth(),t.getDate())).getTime() - (new Date(t.getFullYear(),0,0)).getTime()) / 864e5), 3);
                            break;
                        case "m":
                            l += a("m", t.getMonth() + 1, 2);
                            break;
                        case "M":
                            l += f("M", t.getMonth(), s, o);
                            break;
                        case "y":
                            l += u("y") ? t.getFullYear() : (t.getYear() % 100 < 10 ? "0" : "") + t.getYear() % 100;
                            break;
                        case "@":
                            l += t.getTime();
                            break;
                        case "!":
                            l += t.getTime() * 1e4 + this._ticksTo1970;
                            break;
                        case "'":
                            u("'") ? l += "'" : c = !0;
                            break;
                        default:
                            l += e.charAt(h)
                        }
            return l
        },
        _possibleChars: function(e) {
            var t = ""
              , n = !1
              , r = function(t) {
                var n = i + 1 < e.length && e.charAt(i + 1) == t;
                return n && i++,
                n
            };
            for (var i = 0; i < e.length; i++)
                if (n)
                    e.charAt(i) == "'" && !r("'") ? n = !1 : t += e.charAt(i);
                else
                    switch (e.charAt(i)) {
                    case "d":
                    case "m":
                    case "y":
                    case "@":
                        t += "0123456789";
                        break;
                    case "D":
                    case "M":
                        return null;
                    case "'":
                        r("'") ? t += "'" : n = !0;
                        break;
                    default:
                        t += e.charAt(i)
                    }
            return t
        },
        _get: function(e, t) {
            return e.settings[t] !== undefined ? e.settings[t] : this._defaults[t]
        },
        _setDateFromField: function(e, t) {
            if (e.input.val() == e.lastVal)
                return;
            var n = this._get(e, "dateFormat"), r = e.lastVal = e.input ? e.input.val() : null, i, s;
            i = s = this._getDefaultDate(e);
            var o = this._getFormatConfig(e);
            try {
                i = this.parseDate(n, r, o) || s
            } catch (u) {
                this.log(u),
                r = t ? "" : r
            }
            e.selectedDay = i.getDate(),
            e.drawMonth = e.selectedMonth = i.getMonth(),
            e.drawYear = e.selectedYear = i.getFullYear(),
            e.currentDay = r ? i.getDate() : 0,
            e.currentMonth = r ? i.getMonth() : 0,
            e.currentYear = r ? i.getFullYear() : 0,
            this._adjustInstDate(e)
        },
        _getDefaultDate: function(e) {
            return this._restrictMinMax(e, this._determineDate(e, this._get(e, "defaultDate"), new Date))
        },
        _determineDate: function(e, t, n) {
            var r = function(e) {
                var t = new Date;
                return t.setDate(t.getDate() + e),
                t
            }
              , i = function(t) {
                try {
                    return $.datepicker.parseDate($.datepicker._get(e, "dateFormat"), t, $.datepicker._getFormatConfig(e))
                } catch (n) {}
                var r = (t.toLowerCase().match(/^c/) ? $.datepicker._getDate(e) : null) || new Date
                  , i = r.getFullYear()
                  , s = r.getMonth()
                  , o = r.getDate()
                  , u = /([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g
                  , a = u.exec(t);
                while (a) {
                    switch (a[2] || "d") {
                    case "d":
                    case "D":
                        o += parseInt(a[1], 10);
                        break;
                    case "w":
                    case "W":
                        o += parseInt(a[1], 10) * 7;
                        break;
                    case "m":
                    case "M":
                        s += parseInt(a[1], 10),
                        o = Math.min(o, $.datepicker._getDaysInMonth(i, s));
                        break;
                    case "y":
                    case "Y":
                        i += parseInt(a[1], 10),
                        o = Math.min(o, $.datepicker._getDaysInMonth(i, s))
                    }
                    a = u.exec(t)
                }
                return new Date(i,s,o)
            }
              , s = t == null || t === "" ? n : typeof t == "string" ? i(t) : typeof t == "number" ? isNaN(t) ? n : r(t) : new Date(t.getTime());
            return s = s && s.toString() == "Invalid Date" ? n : s,
            s && (s.setHours(0),
            s.setMinutes(0),
            s.setSeconds(0),
            s.setMilliseconds(0)),
            this._daylightSavingAdjust(s)
        },
        _daylightSavingAdjust: function(e) {
            return e ? (e.setHours(e.getHours() > 12 ? e.getHours() + 2 : 0),
            e) : null
        },
        _setDate: function(e, t, n) {
            var r = !t
              , i = e.selectedMonth
              , s = e.selectedYear
              , o = this._restrictMinMax(e, this._determineDate(e, t, new Date));
            e.selectedDay = e.currentDay = o.getDate(),
            e.drawMonth = e.selectedMonth = e.currentMonth = o.getMonth(),
            e.drawYear = e.selectedYear = e.currentYear = o.getFullYear(),
            (i != e.selectedMonth || s != e.selectedYear) && !n && this._notifyChange(e),
            this._adjustInstDate(e),
            e.input && e.input.val(r ? "" : this._formatDate(e))
        },
        _getDate: function(e) {
            var t = !e.currentYear || e.input && e.input.val() == "" ? null : this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));
            return t
        },
        _attachHandlers: function(e) {
            var t = this._get(e, "stepMonths")
              , n = "#" + e.id.replace(/\\\\/g, "\\");
            e.dpDiv.find("[data-handler]").map(function() {
                var e = {
                    prev: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._adjustDate(n, -t, "M")
                    },
                    next: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._adjustDate(n, +t, "M")
                    },
                    hide: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._hideDatepicker()
                    },
                    today: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._gotoToday(n)
                    },
                    selectDay: function() {
                        return window["DP_jQuery_" + dpuuid].datepicker._selectDay(n, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this),
                        !1
                    },
                    selectMonth: function() {
                        return window["DP_jQuery_" + dpuuid].datepicker._selectMonthYear(n, this, "M"),
                        !1
                    },
                    selectYear: function() {
                        return window["DP_jQuery_" + dpuuid].datepicker._selectMonthYear(n, this, "Y"),
                        !1
                    }
                };
                $(this).bind(this.getAttribute("data-event"), e[this.getAttribute("data-handler")])
            })
        },
        _generateHTML: function(e) {
            var t = new Date;
            t = this._daylightSavingAdjust(new Date(t.getFullYear(),t.getMonth(),t.getDate()));
            var n = this._get(e, "isRTL")
              , r = this._get(e, "showButtonPanel")
              , i = this._get(e, "hideIfNoPrevNext")
              , s = this._get(e, "navigationAsDateFormat")
              , o = this._getNumberOfMonths(e)
              , u = this._get(e, "showCurrentAtPos")
              , a = this._get(e, "stepMonths")
              , f = o[0] != 1 || o[1] != 1
              , l = this._daylightSavingAdjust(e.currentDay ? new Date(e.currentYear,e.currentMonth,e.currentDay) : new Date(9999,9,9))
              , c = this._getMinMaxDate(e, "min")
              , h = this._getMinMaxDate(e, "max")
              , p = e.drawMonth - u
              , d = e.drawYear;
            p < 0 && (p += 12,
            d--);
            if (h) {
                var v = this._daylightSavingAdjust(new Date(h.getFullYear(),h.getMonth() - o[0] * o[1] + 1,h.getDate()));
                v = c && v < c ? c : v;
                while (this._daylightSavingAdjust(new Date(d,p,1)) > v)
                    p--,
                    p < 0 && (p = 11,
                    d--)
            }
            e.drawMonth = p,
            e.drawYear = d;
            var m = this._get(e, "prevText");
            m = s ? this.formatDate(m, this._daylightSavingAdjust(new Date(d,p - a,1)), this._getFormatConfig(e)) : m;
            var g = this._canAdjustMonth(e, -1, d, p) ? '<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click" title="' + m + '"><span class="ui-icon ui-icon-circle-triangle-' + (n ? "e" : "w") + '">' + m + "</span></a>" : i ? "" : '<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="' + m + '"><span class="ui-icon ui-icon-circle-triangle-' + (n ? "e" : "w") + '">' + m + "</span></a>"
              , y = this._get(e, "nextText");
            y = s ? this.formatDate(y, this._daylightSavingAdjust(new Date(d,p + a,1)), this._getFormatConfig(e)) : y;
            var b = this._canAdjustMonth(e, 1, d, p) ? '<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click" title="' + y + '"><span class="ui-icon ui-icon-circle-triangle-' + (n ? "w" : "e") + '">' + y + "</span></a>" : i ? "" : '<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="' + y + '"><span class="ui-icon ui-icon-circle-triangle-' + (n ? "w" : "e") + '">' + y + "</span></a>"
              , w = this._get(e, "currentText")
              , E = this._get(e, "gotoCurrent") && e.currentDay ? l : t;
            w = s ? this.formatDate(w, E, this._getFormatConfig(e)) : w;
            var S = e.inline ? "" : '<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">' + this._get(e, "closeText") + "</button>"
              , x = r ? '<div class="ui-datepicker-buttonpane ui-widget-content">' + (n ? S : "") + (this._isInRange(e, E) ? '<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click">' + w + "</button>" : "") + (n ? "" : S) + "</div>" : ""
              , T = parseInt(this._get(e, "firstDay"), 10);
            T = isNaN(T) ? 0 : T;
            var N = this._get(e, "showWeek")
              , C = this._get(e, "dayNames")
              , k = this._get(e, "dayNamesShort")
              , L = this._get(e, "dayNamesMin")
              , A = this._get(e, "monthNames")
              , O = this._get(e, "monthNamesShort")
              , M = this._get(e, "beforeShowDay")
              , _ = this._get(e, "showOtherMonths")
              , D = this._get(e, "selectOtherMonths")
              , P = this._get(e, "calculateWeek") || this.iso8601Week
              , H = this._getDefaultDate(e)
              , B = "";
            for (var j = 0; j < o[0]; j++) {
                var F = "";
                this.maxRows = 4;
                for (var I = 0; I < o[1]; I++) {
                    var q = this._daylightSavingAdjust(new Date(d,p,e.selectedDay))
                      , R = " ui-corner-all"
                      , U = "";
                    if (f) {
                        U += '<div class="ui-datepicker-group';
                        if (o[1] > 1)
                            switch (I) {
                            case 0:
                                U += " ui-datepicker-group-first",
                                R = " ui-corner-" + (n ? "right" : "left");
                                break;
                            case o[1] - 1:
                                U += " ui-datepicker-group-last",
                                R = " ui-corner-" + (n ? "left" : "right");
                                break;
                            default:
                                U += " ui-datepicker-group-middle",
                                R = ""
                            }
                        U += '">'
                    }
                    U += '<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix' + R + '">' + (/all|left/.test(R) && j == 0 ? n ? b : g : "") + (/all|right/.test(R) && j == 0 ? n ? g : b : "") + this._generateMonthYearHeader(e, p, d, c, h, j > 0 || I > 0, A, O) + '</div><table class="ui-datepicker-calendar"><thead>' + "<tr>";
                    var z = N ? '<th class="ui-datepicker-week-col">' + this._get(e, "weekHeader") + "</th>" : "";
                    for (var W = 0; W < 7; W++) {
                        var X = (W + T) % 7;
                        z += "<th" + ((W + T + 6) % 7 >= 5 ? ' class="ui-datepicker-week-end"' : "") + ">" + '<span title="' + C[X] + '">' + L[X] + "</span></th>"
                    }
                    U += z + "</tr></thead><tbody>";
                    var V = this._getDaysInMonth(d, p);
                    d == e.selectedYear && p == e.selectedMonth && (e.selectedDay = Math.min(e.selectedDay, V));
                    var J = (this._getFirstDayOfMonth(d, p) - T + 7) % 7
                      , K = Math.ceil((J + V) / 7)
                      , Q = f ? this.maxRows > K ? this.maxRows : K : K;
                    this.maxRows = Q;
                    var G = this._daylightSavingAdjust(new Date(d,p,1 - J));
                    for (var Y = 0; Y < Q; Y++) {
                        U += "<tr>";
                        var Z = N ? '<td class="ui-datepicker-week-col">' + this._get(e, "calculateWeek")(G) + "</td>" : "";
                        for (var W = 0; W < 7; W++) {
                            var et = M ? M.apply(e.input ? e.input[0] : null, [G]) : [!0, ""]
                              , tt = G.getMonth() != p
                              , nt = tt && !D || !et[0] || c && G < c || h && G > h;
                            Z += '<td class="' + ((W + T + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + (tt ? " ui-datepicker-other-month" : "") + (G.getTime() == q.getTime() && p == e.selectedMonth && e._keyEvent || H.getTime() == G.getTime() && H.getTime() == q.getTime() ? " " + this._dayOverClass : "") + (nt ? " " + this._unselectableClass + " ui-state-disabled" : "") + (tt && !_ ? "" : " " + et[1] + (G.getTime() == l.getTime() ? " " + this._currentClass : "") + (G.getTime() == t.getTime() ? " ui-datepicker-today" : "")) + '"' + ((!tt || _) && et[2] ? ' title="' + et[2] + '"' : "") + (nt ? "" : ' data-handler="selectDay" data-event="click" data-month="' + G.getMonth() + '" data-year="' + G.getFullYear() + '"') + ">" + (tt && !_ ? "&#xa0;" : nt ? '<span class="ui-state-default">' + G.getDate() + "</span>" : '<a class="ui-state-default' + (G.getTime() == t.getTime() ? " ui-state-highlight" : "") + (G.getTime() == l.getTime() ? " ui-state-active" : "") + (tt ? " ui-priority-secondary" : "") + '" href="#">' + G.getDate() + "</a>") + "</td>",
                            G.setDate(G.getDate() + 1),
                            G = this._daylightSavingAdjust(G)
                        }
                        U += Z + "</tr>"
                    }
                    p++,
                    p > 11 && (p = 0,
                    d++),
                    U += "</tbody></table>" + (f ? "</div>" + (o[0] > 0 && I == o[1] - 1 ? '<div class="ui-datepicker-row-break"></div>' : "") : ""),
                    F += U
                }
                B += F
            }
            return B += x + ($.browser.msie && parseInt($.browser.version, 10) < 7 && !e.inline ? '<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>' : ""),
            e._keyEvent = !1,
            B
        },
        _generateMonthYearHeader: function(e, t, n, r, i, s, o, u) {
            var a = this._get(e, "changeMonth")
              , f = this._get(e, "changeYear")
              , l = this._get(e, "showMonthAfterYear")
              , c = '<div class="ui-datepicker-title">'
              , h = "";
            if (s || !a)
                h += '<span class="ui-datepicker-month">' + o[t] + "</span>";
            else {
                var p = r && r.getFullYear() == n
                  , d = i && i.getFullYear() == n;
                h += '<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">';
                for (var v = 0; v < 12; v++)
                    (!p || v >= r.getMonth()) && (!d || v <= i.getMonth()) && (h += '<option value="' + v + '"' + (v == t ? ' selected="selected"' : "") + ">" + u[v] + "</option>");
                h += "</select>"
            }
            l || (c += h + (s || !a || !f ? "&#xa0;" : ""));
            if (!e.yearshtml) {
                e.yearshtml = "";
                if (s || !f)
                    c += '<span class="ui-datepicker-year">' + n + "</span>";
                else {
                    var m = this._get(e, "yearRange").split(":")
                      , g = (new Date).getFullYear()
                      , y = function(e) {
                        var t = e.match(/c[+-].*/) ? n + parseInt(e.substring(1), 10) : e.match(/[+-].*/) ? g + parseInt(e, 10) : parseInt(e, 10);
                        return isNaN(t) ? g : t
                    }
                      , b = y(m[0])
                      , w = Math.max(b, y(m[1] || ""));
                    b = r ? Math.max(b, r.getFullYear()) : b,
                    w = i ? Math.min(w, i.getFullYear()) : w,
                    e.yearshtml += '<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';
                    for (; b <= w; b++)
                        e.yearshtml += '<option value="' + b + '"' + (b == n ? ' selected="selected"' : "") + ">" + b + "</option>";
                    e.yearshtml += "</select>",
                    c += e.yearshtml,
                    e.yearshtml = null
                }
            }
            return c += this._get(e, "yearSuffix"),
            l && (c += (s || !a || !f ? "&#xa0;" : "") + h),
            c += "</div>",
            c
        },
        _adjustInstDate: function(e, t, n) {
            var r = e.drawYear + (n == "Y" ? t : 0)
              , i = e.drawMonth + (n == "M" ? t : 0)
              , s = Math.min(e.selectedDay, this._getDaysInMonth(r, i)) + (n == "D" ? t : 0)
              , o = this._restrictMinMax(e, this._daylightSavingAdjust(new Date(r,i,s)));
            e.selectedDay = o.getDate(),
            e.drawMonth = e.selectedMonth = o.getMonth(),
            e.drawYear = e.selectedYear = o.getFullYear(),
            (n == "M" || n == "Y") && this._notifyChange(e)
        },
        _restrictMinMax: function(e, t) {
            var n = this._getMinMaxDate(e, "min")
              , r = this._getMinMaxDate(e, "max")
              , i = n && t < n ? n : t;
            return i = r && i > r ? r : i,
            i
        },
        _notifyChange: function(e) {
            var t = this._get(e, "onChangeMonthYear");
            t && t.apply(e.input ? e.input[0] : null, [e.selectedYear, e.selectedMonth + 1, e])
        },
        _getNumberOfMonths: function(e) {
            var t = this._get(e, "numberOfMonths");
            return t == null ? [1, 1] : typeof t == "number" ? [1, t] : t
        },
        _getMinMaxDate: function(e, t) {
            return this._determineDate(e, this._get(e, t + "Date"), null)
        },
        _getDaysInMonth: function(e, t) {
            return 32 - this._daylightSavingAdjust(new Date(e,t,32)).getDate()
        },
        _getFirstDayOfMonth: function(e, t) {
            return (new Date(e,t,1)).getDay()
        },
        _canAdjustMonth: function(e, t, n, r) {
            var i = this._getNumberOfMonths(e)
              , s = this._daylightSavingAdjust(new Date(n,r + (t < 0 ? t : i[0] * i[1]),1));
            return t < 0 && s.setDate(this._getDaysInMonth(s.getFullYear(), s.getMonth())),
            this._isInRange(e, s)
        },
        _isInRange: function(e, t) {
            var n = this._getMinMaxDate(e, "min")
              , r = this._getMinMaxDate(e, "max");
            return (!n || t.getTime() >= n.getTime()) && (!r || t.getTime() <= r.getTime())
        },
        _getFormatConfig: function(e) {
            var t = this._get(e, "shortYearCutoff");
            return t = typeof t != "string" ? t : (new Date).getFullYear() % 100 + parseInt(t, 10),
            {
                shortYearCutoff: t,
                dayNamesShort: this._get(e, "dayNamesShort"),
                dayNames: this._get(e, "dayNames"),
                monthNamesShort: this._get(e, "monthNamesShort"),
                monthNames: this._get(e, "monthNames")
            }
        },
        _formatDate: function(e, t, n, r) {
            t || (e.currentDay = e.selectedDay,
            e.currentMonth = e.selectedMonth,
            e.currentYear = e.selectedYear);
            var i = t ? typeof t == "object" ? t : this._daylightSavingAdjust(new Date(r,n,t)) : this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));
            return this.formatDate(this._get(e, "dateFormat"), i, this._getFormatConfig(e))
        }
    }),
    $.fn.datepicker = function(e) {
        if (!this.length)
            return this;
        $.datepicker.initialized || ($(document).mousedown($.datepicker._checkExternalClick).find(document.body).append($.datepicker.dpDiv),
        $.datepicker.initialized = !0);
        var t = Array.prototype.slice.call(arguments, 1);
        return typeof e != "string" || e != "isDisabled" && e != "getDate" && e != "widget" ? e == "option" && arguments.length == 2 && typeof arguments[1] == "string" ? $.datepicker["_" + e + "Datepicker"].apply($.datepicker, [this[0]].concat(t)) : this.each(function() {
            typeof e == "string" ? $.datepicker["_" + e + "Datepicker"].apply($.datepicker, [this].concat(t)) : $.datepicker._attachDatepicker(this, e)
        }) : $.datepicker["_" + e + "Datepicker"].apply($.datepicker, [this[0]].concat(t))
    }
    ,
    $.datepicker = new Datepicker,
    $.datepicker.initialized = !1,
    $.datepicker.uuid = (new Date).getTime(),
    $.datepicker.version = "1.9.0",
    window["DP_jQuery_" + dpuuid] = $
}
)(jQuery);
(function(e, t) {
    var n = "ui-dialog ui-widget ui-widget-content ui-corner-all "
      , r = {
        buttons: !0,
        height: !0,
        maxHeight: !0,
        maxWidth: !0,
        minHeight: !0,
        minWidth: !0,
        width: !0
    }
      , i = {
        maxHeight: !0,
        maxWidth: !0,
        minHeight: !0,
        minWidth: !0
    };
    e.widget("ui.dialog", {
        version: "1.9.0",
        options: {
            autoOpen: !0,
            buttons: {},
            closeOnEscape: !0,
            closeText: "close",
            dialogClass: "",
            draggable: !0,
            hide: null,
            height: "auto",
            maxHeight: !1,
            maxWidth: !1,
            minHeight: 150,
            minWidth: 150,
            modal: !1,
            position: {
                my: "center",
                at: "center",
                of: window,
                collision: "fit",
                using: function(t) {
                    var n = e(this).css(t).offset().top;
                    n < 0 && e(this).css("top", t.top - n)
                }
            },
            resizable: !0,
            show: null,
            stack: !0,
            title: "",
            width: 300,
            zIndex: 1e3
        },
        _create: function() {
            this.originalTitle = this.element.attr("title"),
            typeof this.originalTitle != "string" && (this.originalTitle = ""),
            this.oldPosition = {
                parent: this.element.parent(),
                index: this.element.parent().children().index(this.element)
            },
            this.options.title = this.options.title || this.originalTitle;
            var t = this
              , r = this.options
              , i = r.title || "&#160;"
              , s = (this.uiDialog = e("<div>")).addClass(n + r.dialogClass).css({
                display: "none",
                outline: 0,
                zIndex: r.zIndex
            }).attr("tabIndex", -1).keydown(function(n) {
                r.closeOnEscape && !n.isDefaultPrevented() && n.keyCode && n.keyCode === e.ui.keyCode.ESCAPE && (t.close(n),
                n.preventDefault())
            }).mousedown(function(e) {
                t.moveToTop(!1, e)
            }).appendTo("body")
              , o = this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(s)
              , u = (this.uiDialogTitlebar = e("<div>")).addClass("ui-dialog-titlebar  ui-widget-header  ui-corner-all  ui-helper-clearfix").prependTo(s)
              , a = e("<a href='#'></a>").addClass("ui-dialog-titlebar-close  ui-corner-all").attr("role", "button").click(function(e) {
                e.preventDefault(),
                t.close(e)
            }).appendTo(u)
              , f = (this.uiDialogTitlebarCloseText = e("<span>")).addClass("ui-icon ui-icon-closethick").text(r.closeText).appendTo(a)
              , l = e("<span>").uniqueId().addClass("ui-dialog-title").html(i).prependTo(u)
              , c = (this.uiDialogButtonPane = e("<div>")).addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix")
              , h = (this.uiButtonSet = e("<div>")).addClass("ui-dialog-buttonset").appendTo(c);
            s.attr({
                role: "dialog",
                "aria-labelledby": l.attr("id")
            }),
            u.find("*").add(u).disableSelection(),
            this._hoverable(a),
            this._focusable(a),
            r.draggable && e.fn.draggable && this._makeDraggable(),
            r.resizable && e.fn.resizable && this._makeResizable(),
            this._createButtons(r.buttons),
            this._isOpen = !1,
            e.fn.bgiframe && s.bgiframe(),
            this._on(s, {
                keydown: function(t) {
                    if (!r.modal || t.keyCode !== e.ui.keyCode.TAB)
                        return;
                    var n = e(":tabbable", s)
                      , i = n.filter(":first")
                      , o = n.filter(":last");
                    if (t.target === o[0] && !t.shiftKey)
                        return i.focus(1),
                        !1;
                    if (t.target === i[0] && t.shiftKey)
                        return o.focus(1),
                        !1
                }
            })
        },
        _init: function() {
            this.options.autoOpen && this.open()
        },
        _destroy: function() {
            var e, t = this.oldPosition;
            this.overlay && this.overlay.destroy(),
            this.uiDialog.hide(),
            this.element.removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body"),
            this.uiDialog.remove(),
            this.originalTitle && this.element.attr("title", this.originalTitle),
            e = t.parent.children().eq(t.index),
            e.length && e[0] !== this.element[0] ? e.before(this.element) : t.parent.append(this.element)
        },
        widget: function() {
            return this.uiDialog
        },
        close: function(t) {
            var n = this, r, i;
            if (!this._isOpen)
                return;
            if (!1 === this._trigger("beforeClose", t))
                return;
            return this._isOpen = !1,
            this.overlay && this.overlay.destroy(),
            this.options.hide ? this.uiDialog.hide(this.options.hide, function() {
                n._trigger("close", t)
            }) : (this.uiDialog.hide(),
            this._trigger("close", t)),
            e.ui.dialog.overlay.resize(),
            this.options.modal && (r = 0,
            e(".ui-dialog").each(function() {
                this !== n.uiDialog[0] && (i = e(this).css("z-index"),
                isNaN(i) || (r = Math.max(r, i)))
            }),
            e.ui.dialog.maxZ = r),
            this
        },
        isOpen: function() {
            return this._isOpen
        },
        moveToTop: function(t, n) {
            var r = this.options, i;
            return r.modal && !t || !r.stack && !r.modal ? this._trigger("focus", n) : (r.zIndex > e.ui.dialog.maxZ && (e.ui.dialog.maxZ = r.zIndex),
            this.overlay && (e.ui.dialog.maxZ += 1,
            e.ui.dialog.overlay.maxZ = e.ui.dialog.maxZ,
            this.overlay.$el.css("z-index", e.ui.dialog.overlay.maxZ)),
            i = {
                scrollTop: this.element.scrollTop(),
                scrollLeft: this.element.scrollLeft()
            },
            e.ui.dialog.maxZ += 1,
            this.uiDialog.css("z-index", e.ui.dialog.maxZ),
            this.element.attr(i),
            this._trigger("focus", n),
            this)
        },
        open: function() {
            if (this._isOpen)
                return;
            var t, n = this.options, r = this.uiDialog;
            return this._size(),
            this._position(n.position),
            r.show(n.show),
            this.overlay = n.modal ? new e.ui.dialog.overlay(this) : null,
            this.moveToTop(!0),
            t = this.element.find(":tabbable"),
            t.length || (t = this.uiDialogButtonPane.find(":tabbable"),
            t.length || (t = r)),
            t.eq(0).focus(),
            this._isOpen = !0,
            this._trigger("open"),
            this
        },
        _createButtons: function(t) {
            var n, r, i = this, s = !1;
            this.uiDialogButtonPane.remove(),
            this.uiButtonSet.empty(),
            typeof t == "object" && t !== null && e.each(t, function() {
                return !(s = !0)
            }),
            s ? (e.each(t, function(t, n) {
                n = e.isFunction(n) ? {
                    click: n,
                    text: t
                } : n;
                var r = e("<button type='button'>").attr(n, !0).unbind("click").click(function() {
                    n.click.apply(i.element[0], arguments)
                }).appendTo(i.uiButtonSet);
                e.fn.button && r.button()
            }),
            this.uiDialog.addClass("ui-dialog-buttons"),
            this.uiDialogButtonPane.appendTo(this.uiDialog)) : this.uiDialog.removeClass("ui-dialog-buttons")
        },
        _makeDraggable: function() {
            function r(e) {
                return {
                    position: e.position,
                    offset: e.offset
                }
            }
            var t = this
              , n = this.options;
            this.uiDialog.draggable({
                cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
                handle: ".ui-dialog-titlebar",
                containment: "document",
                start: function(n, i) {
                    e(this).addClass("ui-dialog-dragging"),
                    t._trigger("dragStart", n, r(i))
                },
                drag: function(e, n) {
                    t._trigger("drag", e, r(n))
                },
                stop: function(i, s) {
                    n.position = [s.position.left - t.document.scrollLeft(), s.position.top - t.document.scrollTop()],
                    e(this).removeClass("ui-dialog-dragging"),
                    t._trigger("dragStop", i, r(s)),
                    e.ui.dialog.overlay.resize()
                }
            })
        },
        _makeResizable: function(n) {
            function u(e) {
                return {
                    originalPosition: e.originalPosition,
                    originalSize: e.originalSize,
                    position: e.position,
                    size: e.size
                }
            }
            n = n === t ? this.options.resizable : n;
            var r = this
              , i = this.options
              , s = this.uiDialog.css("position")
              , o = typeof n == "string" ? n : "n,e,s,w,se,sw,ne,nw";
            this.uiDialog.resizable({
                cancel: ".ui-dialog-content",
                containment: "document",
                alsoResize: this.element,
                maxWidth: i.maxWidth,
                maxHeight: i.maxHeight,
                minWidth: i.minWidth,
                minHeight: this._minHeight(),
                handles: o,
                start: function(t, n) {
                    e(this).addClass("ui-dialog-resizing"),
                    r._trigger("resizeStart", t, u(n))
                },
                resize: function(e, t) {
                    r._trigger("resize", e, u(t))
                },
                stop: function(t, n) {
                    e(this).removeClass("ui-dialog-resizing"),
                    i.height = e(this).height(),
                    i.width = e(this).width(),
                    r._trigger("resizeStop", t, u(n)),
                    e.ui.dialog.overlay.resize()
                }
            }).css("position", s).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se")
        },
        _minHeight: function() {
            var e = this.options;
            return e.height === "auto" ? e.minHeight : Math.min(e.minHeight, e.height)
        },
        _position: function(t) {
            var n = [], r = [0, 0], i;
            if (t) {
                if (typeof t == "string" || typeof t == "object" && "0"in t)
                    n = t.split ? t.split(" ") : [t[0], t[1]],
                    n.length === 1 && (n[1] = n[0]),
                    e.each(["left", "top"], function(e, t) {
                        +n[e] === n[e] && (r[e] = n[e],
                        n[e] = t)
                    }),
                    t = {
                        my: n.join(" "),
                        at: n.join(" "),
                        offset: r.join(" ")
                    };
                t = e.extend({}, e.ui.dialog.prototype.options.position, t)
            } else
                t = e.ui.dialog.prototype.options.position;
            i = this.uiDialog.is(":visible"),
            i || this.uiDialog.show(),
            this.uiDialog.position(t),
            i || this.uiDialog.hide()
        },
        _setOptions: function(t) {
            var n = this
              , s = {}
              , o = !1;
            e.each(t, function(e, t) {
                n._setOption(e, t),
                e in r && (o = !0),
                e in i && (s[e] = t)
            }),
            o && this._size(),
            this.uiDialog.is(":data(resizable)") && this.uiDialog.resizable("option", s)
        },
        _setOption: function(t, r) {
            var i, s, o = this.uiDialog;
            switch (t) {
            case "buttons":
                this._createButtons(r);
                break;
            case "closeText":
                this.uiDialogTitlebarCloseText.text("" + r);
                break;
            case "dialogClass":
                o.removeClass(this.options.dialogClass).addClass(n + r);
                break;
            case "disabled":
                r ? o.addClass("ui-dialog-disabled") : o.removeClass("ui-dialog-disabled");
                break;
            case "draggable":
                i = o.is(":data(draggable)"),
                i && !r && o.draggable("destroy"),
                !i && r && this._makeDraggable();
                break;
            case "position":
                this._position(r);
                break;
            case "resizable":
                s = o.is(":data(resizable)"),
                s && !r && o.resizable("destroy"),
                s && typeof r == "string" && o.resizable("option", "handles", r),
                !s && r !== !1 && this._makeResizable(r);
                break;
            case "title":
                e(".ui-dialog-title", this.uiDialogTitlebar).html("" + (r || "&#160;"))
            }
            this._super(t, r)
        },
        _size: function() {
            var t, n, r, i = this.options, s = this.uiDialog.is(":visible");
            this.element.show().css({
                width: "auto",
                minHeight: 0,
                height: 0
            }),
            i.minWidth > i.width && (i.width = i.minWidth),
            t = this.uiDialog.css({
                height: "auto",
                width: i.width
            }).outerHeight(),
            n = Math.max(0, i.minHeight - t),
            i.height === "auto" ? e.support.minHeight ? this.element.css({
                minHeight: n,
                height: "auto"
            }) : (this.uiDialog.show(),
            r = this.element.css("height", "auto").height(),
            s || this.uiDialog.hide(),
            this.element.height(Math.max(r, n))) : this.element.height(Math.max(i.height - t, 0)),
            this.uiDialog.is(":data(resizable)") && this.uiDialog.resizable("option", "minHeight", this._minHeight())
        }
    }),
    e.extend(e.ui.dialog, {
        uuid: 0,
        maxZ: 0,
        getTitleId: function(e) {
            var t = e.attr("id");
            return t || (this.uuid += 1,
            t = this.uuid),
            "ui-dialog-title-" + t
        },
        overlay: function(t) {
            this.$el = e.ui.dialog.overlay.create(t)
        }
    }),
    e.extend(e.ui.dialog.overlay, {
        instances: [],
        oldInstances: [],
        maxZ: 0,
        events: e.map("focus,mousedown,mouseup,keydown,keypress,click".split(","), function(e) {
            return e + ".dialog-overlay"
        }).join(" "),
        create: function(t) {
            this.instances.length === 0 && (setTimeout(function() {
                e.ui.dialog.overlay.instances.length && e(document).bind(e.ui.dialog.overlay.events, function(t) {
                    if (e(t.target).zIndex() < e.ui.dialog.overlay.maxZ)
                        return !1
                })
            }, 1),
            e(window).bind("resize.dialog-overlay", e.ui.dialog.overlay.resize));
            var n = this.oldInstances.pop() || e("<div>").addClass("ui-widget-overlay");
            return e(document).bind("keydown.dialog-overlay", function(r) {
                var i = e.ui.dialog.overlay.instances;
                i.length !== 0 && i[i.length - 1] === n && t.options.closeOnEscape && !r.isDefaultPrevented() && r.keyCode && r.keyCode === e.ui.keyCode.ESCAPE && (t.close(r),
                r.preventDefault())
            }),
            n.appendTo(document.body).css({
                width: this.width(),
                height: this.height()
            }),
            e.fn.bgiframe && n.bgiframe(),
            this.instances.push(n),
            n
        },
        destroy: function(t) {
            var n = e.inArray(t, this.instances)
              , r = 0;
            n !== -1 && this.oldInstances.push(this.instances.splice(n, 1)[0]),
            this.instances.length === 0 && e([document, window]).unbind(".dialog-overlay"),
            t.height(0).width(0).remove(),
            e.each(this.instances, function() {
                r = Math.max(r, this.css("z-index"))
            }),
            this.maxZ = r
        },
        height: function() {
            var t, n;
            return e.browser.msie ? (t = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight),
            n = Math.max(document.documentElement.offsetHeight, document.body.offsetHeight),
            t < n ? e(window).height() + "px" : t + "px") : e(document).height() + "px"
        },
        width: function() {
            var t, n;
            return e.browser.msie ? (t = Math.max(document.documentElement.scrollWidth, document.body.scrollWidth),
            n = Math.max(document.documentElement.offsetWidth, document.body.offsetWidth),
            t < n ? e(window).width() + "px" : t + "px") : e(document).width() + "px"
        },
        resize: function() {
            var t = e([]);
            e.each(e.ui.dialog.overlay.instances, function() {
                t = t.add(this)
            }),
            t.css({
                width: 0,
                height: 0
            }).css({
                width: e.ui.dialog.overlay.width(),
                height: e.ui.dialog.overlay.height()
            })
        }
    }),
    e.extend(e.ui.dialog.overlay.prototype, {
        destroy: function() {
            e.ui.dialog.overlay.destroy(this.$el)
        }
    })
}
)(jQuery);
(function(e, t) {
    var n = !1;
    e.widget("ui.menu", {
        version: "1.9.0",
        defaultElement: "<ul>",
        delay: 300,
        options: {
            icons: {
                submenu: "ui-icon-carat-1-e"
            },
            menus: "ul",
            position: {
                my: "left top",
                at: "right top"
            },
            role: "menu",
            blur: null,
            focus: null,
            select: null
        },
        _create: function() {
            this.activeMenu = this.element,
            this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content ui-corner-all").toggleClass("ui-menu-icons", !!this.element.find(".ui-icon").length).attr({
                role: this.options.role,
                tabIndex: 0
            }).bind("click" + this.eventNamespace, e.proxy(function(e) {
                this.options.disabled && e.preventDefault()
            }, this)),
            this.options.disabled && this.element.addClass("ui-state-disabled").attr("aria-disabled", "true"),
            this._on({
                "mousedown .ui-menu-item > a": function(e) {
                    e.preventDefault()
                },
                "click .ui-state-disabled > a": function(e) {
                    e.preventDefault()
                },
                "click .ui-menu-item:has(a)": function(t) {
                    var r = e(t.target).closest(".ui-menu-item");
                    !n && r.not(".ui-state-disabled").length && (n = !0,
                    this.select(t),
                    r.has(".ui-menu").length ? this.expand(t) : this.element.is(":focus") || (this.element.trigger("focus", [!0]),
                    this.active && this.active.parents(".ui-menu").length === 1 && clearTimeout(this.timer)))
                },
                "mouseenter .ui-menu-item": function(t) {
                    var n = e(t.currentTarget);
                    n.siblings().children(".ui-state-active").removeClass("ui-state-active"),
                    this.focus(t, n)
                },
                mouseleave: "collapseAll",
                "mouseleave .ui-menu": "collapseAll",
                focus: function(e, t) {
                    var n = this.active || this.element.children(".ui-menu-item").eq(0);
                    t || this.focus(e, n)
                },
                blur: function(t) {
                    this._delay(function() {
                        e.contains(this.element[0], this.document[0].activeElement) || this.collapseAll(t)
                    })
                },
                keydown: "_keydown"
            }),
            this.refresh(),
            this._on(this.document, {
                click: function(t) {
                    e(t.target).closest(".ui-menu").length || this.collapseAll(t),
                    n = !1
                }
            })
        },
        _destroy: function() {
            this.element.removeAttr("aria-activedescendant").find(".ui-menu").andSelf().removeClass("ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show(),
            this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").children("a").removeUniqueId().removeClass("ui-corner-all ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function() {
                var t = e(this);
                t.data("ui-menu-submenu-carat") && t.remove()
            }),
            this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")
        },
        _keydown: function(t) {
            function a(e) {
                return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
            }
            var n, r, i, s, o, u = !0;
            switch (t.keyCode) {
            case e.ui.keyCode.PAGE_UP:
                this.previousPage(t);
                break;
            case e.ui.keyCode.PAGE_DOWN:
                this.nextPage(t);
                break;
            case e.ui.keyCode.HOME:
                this._move("first", "first", t);
                break;
            case e.ui.keyCode.END:
                this._move("last", "last", t);
                break;
            case e.ui.keyCode.UP:
                this.previous(t);
                break;
            case e.ui.keyCode.DOWN:
                this.next(t);
                break;
            case e.ui.keyCode.LEFT:
                this.collapse(t);
                break;
            case e.ui.keyCode.RIGHT:
                this.active && !this.active.is(".ui-state-disabled") && this.expand(t);
                break;
            case e.ui.keyCode.ENTER:
            case e.ui.keyCode.SPACE:
                this._activate(t);
                break;
            case e.ui.keyCode.ESCAPE:
                this.collapse(t);
                break;
            default:
                u = !1,
                r = this.previousFilter || "",
                i = String.fromCharCode(t.keyCode),
                s = !1,
                clearTimeout(this.filterTimer),
                i === r ? s = !0 : i = r + i,
                o = new RegExp("^" + a(i),"i"),
                n = this.activeMenu.children(".ui-menu-item").filter(function() {
                    return o.test(e(this).children("a").text())
                }),
                n = s && n.index(this.active.next()) !== -1 ? this.active.nextAll(".ui-menu-item") : n,
                n.length || (i = String.fromCharCode(t.keyCode),
                o = new RegExp("^" + a(i),"i"),
                n = this.activeMenu.children(".ui-menu-item").filter(function() {
                    return o.test(e(this).children("a").text())
                })),
                n.length ? (this.focus(t, n),
                n.length > 1 ? (this.previousFilter = i,
                this.filterTimer = this._delay(function() {
                    delete this.previousFilter
                }, 1e3)) : delete this.previousFilter) : delete this.previousFilter
            }
            u && t.preventDefault()
        },
        _activate: function(e) {
            this.active.is(".ui-state-disabled") || (this.active.children("a[aria-haspopup='true']").length ? this.expand(e) : this.select(e))
        },
        refresh: function() {
            var t, n = this.options.icons.submenu, r = this.element.find(this.options.menus + ":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-corner-all").hide().attr({
                role: this.options.role,
                "aria-hidden": "true",
                "aria-expanded": "false"
            });
            t = r.add(this.element),
            t.children(":not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role", "presentation").children("a").uniqueId().addClass("ui-corner-all").attr({
                tabIndex: -1,
                role: this._itemRole()
            }),
            t.children(":not(.ui-menu-item)").each(function() {
                var t = e(this);
                /[^\-—–\s]/.test(t.text()) || t.addClass("ui-widget-content ui-menu-divider")
            }),
            t.children(".ui-state-disabled").attr("aria-disabled", "true"),
            r.each(function() {
                var t = e(this)
                  , r = t.prev("a")
                  , i = e("<span>").addClass("ui-menu-icon ui-icon " + n).data("ui-menu-submenu-carat", !0);
                r.attr("aria-haspopup", "true").prepend(i),
                t.attr("aria-labelledby", r.attr("id"))
            }),
            this.active && !e.contains(this.element[0], this.active[0]) && this.blur()
        },
        _itemRole: function() {
            return {
                menu: "menuitem",
                listbox: "option"
            }[this.options.role]
        },
        focus: function(e, t) {
            var n, r;
            this.blur(e, e && e.type === "focus"),
            this._scrollIntoView(t),
            this.active = t.first(),
            r = this.active.children("a").addClass("ui-state-focus"),
            this.options.role && this.element.attr("aria-activedescendant", r.attr("id")),
            this.active.parent().closest(".ui-menu-item").children("a:first").addClass("ui-state-active"),
            e && e.type === "keydown" ? this._close() : this.timer = this._delay(function() {
                this._close()
            }, this.delay),
            n = t.children(".ui-menu"),
            n.length && /^mouse/.test(e.type) && this._startOpening(n),
            this.activeMenu = t.parent(),
            this._trigger("focus", e, {
                item: t
            })
        },
        _scrollIntoView: function(t) {
            var n, r, i, s, o, u;
            this._hasScroll() && (n = parseFloat(e.css(this.activeMenu[0], "borderTopWidth")) || 0,
            r = parseFloat(e.css(this.activeMenu[0], "paddingTop")) || 0,
            i = t.offset().top - this.activeMenu.offset().top - n - r,
            s = this.activeMenu.scrollTop(),
            o = this.activeMenu.height(),
            u = t.height(),
            i < 0 ? this.activeMenu.scrollTop(s + i) : i + u > o && this.activeMenu.scrollTop(s + i - o + u))
        },
        blur: function(e, t) {
            t || clearTimeout(this.timer);
            if (!this.active)
                return;
            this.active.children("a").removeClass("ui-state-focus"),
            this.active = null,
            this._trigger("blur", e, {
                item: this.active
            })
        },
        _startOpening: function(e) {
            clearTimeout(this.timer);
            if (e.attr("aria-hidden") !== "true")
                return;
            this.timer = this._delay(function() {
                this._close(),
                this._open(e)
            }, this.delay)
        },
        _open: function(t) {
            var n = e.extend({
                of: this.active
            }, this.options.position);
            clearTimeout(this.timer),
            this.element.find(".ui-menu").not(t.parents(".ui-menu")).hide().attr("aria-hidden", "true"),
            t.show().removeAttr("aria-hidden").attr("aria-expanded", "true").position(n)
        },
        collapseAll: function(t, n) {
            clearTimeout(this.timer),
            this.timer = this._delay(function() {
                var r = n ? this.element : e(t && t.target).closest(this.element.find(".ui-menu"));
                r.length || (r = this.element),
                this._close(r),
                this.blur(t),
                this.activeMenu = r
            }, this.delay)
        },
        _close: function(e) {
            e || (e = this.active ? this.active.parent() : this.element),
            e.find(".ui-menu").hide().attr("aria-hidden", "true").attr("aria-expanded", "false").end().find("a.ui-state-active").removeClass("ui-state-active")
        },
        collapse: function(e) {
            var t = this.active && this.active.parent().closest(".ui-menu-item", this.element);
            t && t.length && (this._close(),
            this.focus(e, t))
        },
        expand: function(e) {
            var t = this.active && this.active.children(".ui-menu ").children(".ui-menu-item").first();
            t && t.length && (this._open(t.parent()),
            this._delay(function() {
                this.focus(e, t)
            }))
        },
        next: function(e) {
            this._move("next", "first", e)
        },
        previous: function(e) {
            this._move("prev", "last", e)
        },
        isFirstItem: function() {
            return this.active && !this.active.prevAll(".ui-menu-item").length
        },
        isLastItem: function() {
            return this.active && !this.active.nextAll(".ui-menu-item").length
        },
        _move: function(e, t, n) {
            var r;
            this.active && (e === "first" || e === "last" ? r = this.active[e === "first" ? "prevAll" : "nextAll"](".ui-menu-item").eq(-1) : r = this.active[e + "All"](".ui-menu-item").eq(0));
            if (!r || !r.length || !this.active)
                r = this.activeMenu.children(".ui-menu-item")[t]();
            this.focus(n, r)
        },
        nextPage: function(t) {
            var n, r, i;
            if (!this.active) {
                this.next(t);
                return
            }
            if (this.isLastItem())
                return;
            this._hasScroll() ? (r = this.active.offset().top,
            i = this.element.height(),
            this.active.nextAll(".ui-menu-item").each(function() {
                return n = e(this),
                n.offset().top - r - i < 0
            }),
            this.focus(t, n)) : this.focus(t, this.activeMenu.children(".ui-menu-item")[this.active ? "last" : "first"]())
        },
        previousPage: function(t) {
            var n, r, i;
            if (!this.active) {
                this.next(t);
                return
            }
            if (this.isFirstItem())
                return;
            this._hasScroll() ? (r = this.active.offset().top,
            i = this.element.height(),
            this.active.prevAll(".ui-menu-item").each(function() {
                return n = e(this),
                n.offset().top - r + i > 0
            }),
            this.focus(t, n)) : this.focus(t, this.activeMenu.children(".ui-menu-item").first())
        },
        _hasScroll: function() {
            return this.element.outerHeight() < this.element.prop("scrollHeight")
        },
        select: function(t) {
            this.active = this.active || e(t.target).closest(".ui-menu-item");
            var n = {
                item: this.active
            };
            this.active.has(".ui-menu").length || this.collapseAll(t, !0),
            this._trigger("select", t, n)
        }
    })
}
)(jQuery);
(function(e, t) {
    e.widget("ui.progressbar", {
        version: "1.9.0",
        options: {
            value: 0,
            max: 100
        },
        min: 0,
        _create: function() {
            this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({
                role: "progressbar",
                "aria-valuemin": this.min,
                "aria-valuemax": this.options.max,
                "aria-valuenow": this._value()
            }),
            this.valueDiv = e("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element),
            this.oldValue = this._value(),
            this._refreshValue()
        },
        _destroy: function() {
            this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"),
            this.valueDiv.remove()
        },
        value: function(e) {
            return e === t ? this._value() : (this._setOption("value", e),
            this)
        },
        _setOption: function(e, t) {
            e === "value" && (this.options.value = t,
            this._refreshValue(),
            this._value() === this.options.max && this._trigger("complete")),
            this._super(e, t)
        },
        _value: function() {
            var e = this.options.value;
            return typeof e != "number" && (e = 0),
            Math.min(this.options.max, Math.max(this.min, e))
        },
        _percentage: function() {
            return 100 * this._value() / this.options.max
        },
        _refreshValue: function() {
            var e = this.value()
              , t = this._percentage();
            this.oldValue !== e && (this.oldValue = e,
            this._trigger("change")),
            this.valueDiv.toggle(e > this.min).toggleClass("ui-corner-right", e === this.options.max).width(t.toFixed(0) + "%"),
            this.element.attr("aria-valuenow", e)
        }
    })
}
)(jQuery);
(function(e, t) {
    var n = 5;
    e.widget("ui.slider", e.ui.mouse, {
        version: "1.9.0",
        widgetEventPrefix: "slide",
        options: {
            animate: !1,
            distance: 0,
            max: 100,
            min: 0,
            orientation: "horizontal",
            range: !1,
            step: 1,
            value: 0,
            values: null
        },
        _create: function() {
            var t, r = this.options, i = this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"), s = "<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>", o = r.values && r.values.length || 1, u = [];
            this._keySliding = !1,
            this._mouseSliding = !1,
            this._animateOff = !0,
            this._handleIndex = null,
            this._detectOrientation(),
            this._mouseInit(),
            this.element.addClass("ui-slider ui-slider-" + this.orientation + " ui-widget" + " ui-widget-content" + " ui-corner-all" + (r.disabled ? " ui-slider-disabled ui-disabled" : "")),
            this.range = e([]),
            r.range && (r.range === !0 && (r.values || (r.values = [this._valueMin(), this._valueMin()]),
            r.values.length && r.values.length !== 2 && (r.values = [r.values[0], r.values[0]])),
            this.range = e("<div></div>").appendTo(this.element).addClass("ui-slider-range ui-widget-header" + (r.range === "min" || r.range === "max" ? " ui-slider-range-" + r.range : "")));
            for (t = i.length; t < o; t++)
                u.push(s);
            this.handles = i.add(e(u.join("")).appendTo(this.element)),
            this.handle = this.handles.eq(0),
            this.handles.add(this.range).filter("a").click(function(e) {
                e.preventDefault()
            }).mouseenter(function() {
                r.disabled || e(this).addClass("ui-state-hover")
            }).mouseleave(function() {
                e(this).removeClass("ui-state-hover")
            }).focus(function() {
                r.disabled ? e(this).blur() : (e(".ui-slider .ui-state-focus").removeClass("ui-state-focus"),
                e(this).addClass("ui-state-focus"))
            }).blur(function() {
                e(this).removeClass("ui-state-focus")
            }),
            this.handles.each(function(t) {
                e(this).data("ui-slider-handle-index", t)
            }),
            this._on(this.handles, {
                keydown: function(t) {
                    var r, i, s, o, u = e(t.target).data("ui-slider-handle-index");
                    switch (t.keyCode) {
                    case e.ui.keyCode.HOME:
                    case e.ui.keyCode.END:
                    case e.ui.keyCode.PAGE_UP:
                    case e.ui.keyCode.PAGE_DOWN:
                    case e.ui.keyCode.UP:
                    case e.ui.keyCode.RIGHT:
                    case e.ui.keyCode.DOWN:
                    case e.ui.keyCode.LEFT:
                        t.preventDefault();
                        if (!this._keySliding) {
                            this._keySliding = !0,
                            e(t.target).addClass("ui-state-active"),
                            r = this._start(t, u);
                            if (r === !1)
                                return
                        }
                    }
                    o = this.options.step,
                    this.options.values && this.options.values.length ? i = s = this.values(u) : i = s = this.value();
                    switch (t.keyCode) {
                    case e.ui.keyCode.HOME:
                        s = this._valueMin();
                        break;
                    case e.ui.keyCode.END:
                        s = this._valueMax();
                        break;
                    case e.ui.keyCode.PAGE_UP:
                        s = this._trimAlignValue(i + (this._valueMax() - this._valueMin()) / n);
                        break;
                    case e.ui.keyCode.PAGE_DOWN:
                        s = this._trimAlignValue(i - (this._valueMax() - this._valueMin()) / n);
                        break;
                    case e.ui.keyCode.UP:
                    case e.ui.keyCode.RIGHT:
                        if (i === this._valueMax())
                            return;
                        s = this._trimAlignValue(i + o);
                        break;
                    case e.ui.keyCode.DOWN:
                    case e.ui.keyCode.LEFT:
                        if (i === this._valueMin())
                            return;
                        s = this._trimAlignValue(i - o)
                    }
                    this._slide(t, u, s)
                },
                keyup: function(t) {
                    var n = e(t.target).data("ui-slider-handle-index");
                    this._keySliding && (this._keySliding = !1,
                    this._stop(t, n),
                    this._change(t, n),
                    e(t.target).removeClass("ui-state-active"))
                }
            }),
            this._refreshValue(),
            this._animateOff = !1
        },
        _destroy: function() {
            this.handles.remove(),
            this.range.remove(),
            this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all"),
            this._mouseDestroy()
        },
        _mouseCapture: function(t) {
            var n, r, i, s, o, u, a, f, l = this, c = this.options;
            return c.disabled ? !1 : (this.elementSize = {
                width: this.element.outerWidth(),
                height: this.element.outerHeight()
            },
            this.elementOffset = this.element.offset(),
            n = {
                x: t.pageX,
                y: t.pageY
            },
            r = this._normValueFromMouse(n),
            i = this._valueMax() - this._valueMin() + 1,
            this.handles.each(function(t) {
                var n = Math.abs(r - l.values(t));
                i > n && (i = n,
                s = e(this),
                o = t)
            }),
            c.range === !0 && this.values(1) === c.min && (o += 1,
            s = e(this.handles[o])),
            u = this._start(t, o),
            u === !1 ? !1 : (this._mouseSliding = !0,
            this._handleIndex = o,
            s.addClass("ui-state-active").focus(),
            a = s.offset(),
            f = !e(t.target).parents().andSelf().is(".ui-slider-handle"),
            this._clickOffset = f ? {
                left: 0,
                top: 0
            } : {
                left: t.pageX - a.left - s.width() / 2,
                top: t.pageY - a.top - s.height() / 2 - (parseInt(s.css("borderTopWidth"), 10) || 0) - (parseInt(s.css("borderBottomWidth"), 10) || 0) + (parseInt(s.css("marginTop"), 10) || 0)
            },
            this.handles.hasClass("ui-state-hover") || this._slide(t, o, r),
            this._animateOff = !0,
            !0))
        },
        _mouseStart: function(e) {
            return !0
        },
        _mouseDrag: function(e) {
            var t = {
                x: e.pageX,
                y: e.pageY
            }
              , n = this._normValueFromMouse(t);
            return this._slide(e, this._handleIndex, n),
            !1
        },
        _mouseStop: function(e) {
            return this.handles.removeClass("ui-state-active"),
            this._mouseSliding = !1,
            this._stop(e, this._handleIndex),
            this._change(e, this._handleIndex),
            this._handleIndex = null,
            this._clickOffset = null,
            this._animateOff = !1,
            !1
        },
        _detectOrientation: function() {
            this.orientation = this.options.orientation === "vertical" ? "vertical" : "horizontal"
        },
        _normValueFromMouse: function(e) {
            var t, n, r, i, s;
            return this.orientation === "horizontal" ? (t = this.elementSize.width,
            n = e.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)) : (t = this.elementSize.height,
            n = e.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)),
            r = n / t,
            r > 1 && (r = 1),
            r < 0 && (r = 0),
            this.orientation === "vertical" && (r = 1 - r),
            i = this._valueMax() - this._valueMin(),
            s = this._valueMin() + r * i,
            this._trimAlignValue(s)
        },
        _start: function(e, t) {
            var n = {
                handle: this.handles[t],
                value: this.value()
            };
            return this.options.values && this.options.values.length && (n.value = this.values(t),
            n.values = this.values()),
            this._trigger("start", e, n)
        },
        _slide: function(e, t, n) {
            var r, i, s;
            this.options.values && this.options.values.length ? (r = this.values(t ? 0 : 1),
            this.options.values.length === 2 && this.options.range === !0 && (t === 0 && n > r || t === 1 && n < r) && (n = r),
            n !== this.values(t) && (i = this.values(),
            i[t] = n,
            s = this._trigger("slide", e, {
                handle: this.handles[t],
                value: n,
                values: i
            }),
            r = this.values(t ? 0 : 1),
            s !== !1 && this.values(t, n, !0))) : n !== this.value() && (s = this._trigger("slide", e, {
                handle: this.handles[t],
                value: n
            }),
            s !== !1 && this.value(n))
        },
        _stop: function(e, t) {
            var n = {
                handle: this.handles[t],
                value: this.value()
            };
            this.options.values && this.options.values.length && (n.value = this.values(t),
            n.values = this.values()),
            this._trigger("stop", e, n)
        },
        _change: function(e, t) {
            if (!this._keySliding && !this._mouseSliding) {
                var n = {
                    handle: this.handles[t],
                    value: this.value()
                };
                this.options.values && this.options.values.length && (n.value = this.values(t),
                n.values = this.values()),
                this._trigger("change", e, n)
            }
        },
        value: function(e) {
            if (arguments.length) {
                this.options.value = this._trimAlignValue(e),
                this._refreshValue(),
                this._change(null, 0);
                return
            }
            return this._value()
        },
        values: function(t, n) {
            var r, i, s;
            if (arguments.length > 1) {
                this.options.values[t] = this._trimAlignValue(n),
                this._refreshValue(),
                this._change(null, t);
                return
            }
            if (!arguments.length)
                return this._values();
            if (!e.isArray(arguments[0]))
                return this.options.values && this.options.values.length ? this._values(t) : this.value();
            r = this.options.values,
            i = arguments[0];
            for (s = 0; s < r.length; s += 1)
                r[s] = this._trimAlignValue(i[s]),
                this._change(null, s);
            this._refreshValue()
        },
        _setOption: function(t, n) {
            var r, i = 0;
            e.isArray(this.options.values) && (i = this.options.values.length),
            e.Widget.prototype._setOption.apply(this, arguments);
            switch (t) {
            case "disabled":
                n ? (this.handles.filter(".ui-state-focus").blur(),
                this.handles.removeClass("ui-state-hover"),
                this.handles.prop("disabled", !0),
                this.element.addClass("ui-disabled")) : (this.handles.prop("disabled", !1),
                this.element.removeClass("ui-disabled"));
                break;
            case "orientation":
                this._detectOrientation(),
                this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-" + this.orientation),
                this._refreshValue();
                break;
            case "value":
                this._animateOff = !0,
                this._refreshValue(),
                this._change(null, 0),
                this._animateOff = !1;
                break;
            case "values":
                this._animateOff = !0,
                this._refreshValue();
                for (r = 0; r < i; r += 1)
                    this._change(null, r);
                this._animateOff = !1
            }
        },
        _value: function() {
            var e = this.options.value;
            return e = this._trimAlignValue(e),
            e
        },
        _values: function(e) {
            var t, n, r;
            if (arguments.length)
                return t = this.options.values[e],
                t = this._trimAlignValue(t),
                t;
            n = this.options.values.slice();
            for (r = 0; r < n.length; r += 1)
                n[r] = this._trimAlignValue(n[r]);
            return n
        },
        _trimAlignValue: function(e) {
            if (e <= this._valueMin())
                return this._valueMin();
            if (e >= this._valueMax())
                return this._valueMax();
            var t = this.options.step > 0 ? this.options.step : 1
              , n = (e - this._valueMin()) % t
              , r = e - n;
            return Math.abs(n) * 2 >= t && (r += n > 0 ? t : -t),
            parseFloat(r.toFixed(5))
        },
        _valueMin: function() {
            return this.options.min
        },
        _valueMax: function() {
            return this.options.max
        },
        _refreshValue: function() {
            var t, n, r, i, s, o = this.options.range, u = this.options, a = this, f = this._animateOff ? !1 : u.animate, l = {};
            this.options.values && this.options.values.length ? this.handles.each(function(r, i) {
                n = (a.values(r) - a._valueMin()) / (a._valueMax() - a._valueMin()) * 100,
                l[a.orientation === "horizontal" ? "left" : "bottom"] = n + "%",
                e(this).stop(1, 1)[f ? "animate" : "css"](l, u.animate),
                a.options.range === !0 && (a.orientation === "horizontal" ? (r === 0 && a.range.stop(1, 1)[f ? "animate" : "css"]({
                    left: n + "%"
                }, u.animate),
                r === 1 && a.range[f ? "animate" : "css"]({
                    width: n - t + "%"
                }, {
                    queue: !1,
                    duration: u.animate
                })) : (r === 0 && a.range.stop(1, 1)[f ? "animate" : "css"]({
                    bottom: n + "%"
                }, u.animate),
                r === 1 && a.range[f ? "animate" : "css"]({
                    height: n - t + "%"
                }, {
                    queue: !1,
                    duration: u.animate
                }))),
                t = n
            }) : (r = this.value(),
            i = this._valueMin(),
            s = this._valueMax(),
            n = s !== i ? (r - i) / (s - i) * 100 : 0,
            l[this.orientation === "horizontal" ? "left" : "bottom"] = n + "%",
            this.handle.stop(1, 1)[f ? "animate" : "css"](l, u.animate),
            o === "min" && this.orientation === "horizontal" && this.range.stop(1, 1)[f ? "animate" : "css"]({
                width: n + "%"
            }, u.animate),
            o === "max" && this.orientation === "horizontal" && this.range[f ? "animate" : "css"]({
                width: 100 - n + "%"
            }, {
                queue: !1,
                duration: u.animate
            }),
            o === "min" && this.orientation === "vertical" && this.range.stop(1, 1)[f ? "animate" : "css"]({
                height: n + "%"
            }, u.animate),
            o === "max" && this.orientation === "vertical" && this.range[f ? "animate" : "css"]({
                height: 100 - n + "%"
            }, {
                queue: !1,
                duration: u.animate
            }))
        }
    })
}
)(jQuery);
(function(e) {
    function t(e) {
        return function() {
            var t = this.element.val();
            e.apply(this, arguments),
            this._refresh(),
            t !== this.element.val() && this._trigger("change")
        }
    }
    e.widget("ui.spinner", {
        version: "1.9.0",
        defaultElement: "<input>",
        widgetEventPrefix: "spin",
        options: {
            culture: null,
            icons: {
                down: "ui-icon-triangle-1-s",
                up: "ui-icon-triangle-1-n"
            },
            incremental: !0,
            max: null,
            min: null,
            numberFormat: null,
            page: 10,
            step: 1,
            change: null,
            spin: null,
            start: null,
            stop: null
        },
        _create: function() {
            this._setOption("max", this.options.max),
            this._setOption("min", this.options.min),
            this._setOption("step", this.options.step),
            this._value(this.element.val(), !0),
            this._draw(),
            this._on(this._events),
            this._refresh(),
            this._on(this.window, {
                beforeunload: function() {
                    this.element.removeAttr("autocomplete")
                }
            })
        },
        _getCreateOptions: function() {
            var t = {}
              , n = this.element;
            return e.each(["min", "max", "step"], function(e, r) {
                var i = n.attr(r);
                i !== undefined && i.length && (t[r] = i)
            }),
            t
        },
        _events: {
            keydown: function(e) {
                this._start(e) && this._keydown(e) && e.preventDefault()
            },
            keyup: "_stop",
            focus: function() {
                this.uiSpinner.addClass("ui-state-active"),
                this.previous = this.element.val()
            },
            blur: function(e) {
                if (this.cancelBlur) {
                    delete this.cancelBlur;
                    return
                }
                this._refresh(),
                this.uiSpinner.removeClass("ui-state-active"),
                this.previous !== this.element.val() && this._trigger("change", e)
            },
            mousewheel: function(e, t) {
                if (!t)
                    return;
                if (!this.spinning && !this._start(e))
                    return !1;
                this._spin((t > 0 ? 1 : -1) * this.options.step, e),
                clearTimeout(this.mousewheelTimer),
                this.mousewheelTimer = this._delay(function() {
                    this.spinning && this._stop(e)
                }, 100),
                e.preventDefault()
            },
            "mousedown .ui-spinner-button": function(t) {
                function r() {
                    var e = this.element[0] === this.document[0].activeElement;
                    e || (this.element.focus(),
                    this.previous = n,
                    this._delay(function() {
                        this.previous = n
                    }))
                }
                var n;
                n = this.element[0] === this.document[0].activeElement ? this.previous : this.element.val(),
                t.preventDefault(),
                r.call(this),
                this.cancelBlur = !0,
                this._delay(function() {
                    delete this.cancelBlur,
                    r.call(this)
                });
                if (this._start(t) === !1)
                    return;
                this._repeat(null, e(t.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, t)
            },
            "mouseup .ui-spinner-button": "_stop",
            "mouseenter .ui-spinner-button": function(t) {
                if (!e(t.currentTarget).hasClass("ui-state-active"))
                    return;
                if (this._start(t) === !1)
                    return !1;
                this._repeat(null, e(t.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, t)
            },
            "mouseleave .ui-spinner-button": "_stop"
        },
        _draw: function() {
            var e = this.uiSpinner = this.element.addClass("ui-spinner-input").attr("autocomplete", "off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());
            this._hoverable(e),
            this.element.attr("role", "spinbutton"),
            this.buttons = e.find(".ui-spinner-button").attr("tabIndex", -1).button().removeClass("ui-corner-all"),
            this.buttons.height() > Math.ceil(e.height() * .5) && e.height() > 0 && e.height(e.height()),
            this.options.disabled && this.disable()
        },
        _keydown: function(t) {
            var n = this.options
              , r = e.ui.keyCode;
            switch (t.keyCode) {
            case r.UP:
                return this._repeat(null, 1, t),
                !0;
            case r.DOWN:
                return this._repeat(null, -1, t),
                !0;
            case r.PAGE_UP:
                return this._repeat(null, n.page, t),
                !0;
            case r.PAGE_DOWN:
                return this._repeat(null, -n.page, t),
                !0
            }
            return !1
        },
        _uiSpinnerHtml: function() {
            return "<span class='ui-spinner ui-state-default ui-widget ui-widget-content ui-corner-all'></span>"
        },
        _buttonHtml: function() {
            return "<a class='ui-spinner-button ui-spinner-up ui-corner-tr'><span class='ui-icon " + this.options.icons.up + "'>&#9650;</span>" + "</a>" + "<a class='ui-spinner-button ui-spinner-down ui-corner-br'>" + "<span class='ui-icon " + this.options.icons.down + "'>&#9660;</span>" + "</a>"
        },
        _start: function(e) {
            return !this.spinning && this._trigger("start", e) === !1 ? !1 : (this.counter || (this.counter = 1),
            this.spinning = !0,
            !0)
        },
        _repeat: function(e, t, n) {
            e = e || 500,
            clearTimeout(this.timer),
            this.timer = this._delay(function() {
                this._repeat(40, t, n)
            }, e),
            this._spin(t * this.options.step, n)
        },
        _spin: function(e, t) {
            var n = this.value() || 0;
            this.counter || (this.counter = 1),
            n = this._adjustValue(n + e * this._increment(this.counter));
            if (!this.spinning || this._trigger("spin", t, {
                value: n
            }) !== !1)
                this._value(n),
                this.counter++
        },
        _increment: function(t) {
            var n = this.options.incremental;
            return n ? e.isFunction(n) ? n(t) : Math.floor(t * t * t / 5e4 - t * t / 500 + 17 * t / 200 + 1) : 1
        },
        _precision: function() {
            var e = this._precisionOf(this.options.step);
            return this.options.min !== null && (e = Math.max(e, this._precisionOf(this.options.min))),
            e
        },
        _precisionOf: function(e) {
            var t = e.toString()
              , n = t.indexOf(".");
            return n === -1 ? 0 : t.length - n - 1
        },
        _adjustValue: function(e) {
            var t, n, r = this.options;
            return t = r.min !== null ? r.min : 0,
            n = e - t,
            n = Math.round(n / r.step) * r.step,
            e = t + n,
            e = parseFloat(e.toFixed(this._precision())),
            r.max !== null && e > r.max ? r.max : r.min !== null && e < r.min ? r.min : e
        },
        _stop: function(e) {
            if (!this.spinning)
                return;
            clearTimeout(this.timer),
            clearTimeout(this.mousewheelTimer),
            this.counter = 0,
            this.spinning = !1,
            this._trigger("stop", e)
        },
        _setOption: function(e, t) {
            if (e === "culture" || e === "numberFormat") {
                var n = this._parse(this.element.val());
                this.options[e] = t,
                this.element.val(this._format(n));
                return
            }
            (e === "max" || e === "min" || e === "step") && typeof t == "string" && (t = this._parse(t)),
            this._super(e, t),
            e === "disabled" && (t ? (this.element.prop("disabled", !0),
            this.buttons.button("disable")) : (this.element.prop("disabled", !1),
            this.buttons.button("enable")))
        },
        _setOptions: t(function(e) {
            this._super(e),
            this._value(this.element.val())
        }),
        _parse: function(e) {
            return typeof e == "string" && e !== "" && (e = window.Globalize && this.options.numberFormat ? Globalize.parseFloat(e, 10, this.options.culture) : +e),
            e === "" || isNaN(e) ? null : e
        },
        _format: function(e) {
            return e === "" ? "" : window.Globalize && this.options.numberFormat ? Globalize.format(e, this.options.numberFormat, this.options.culture) : e
        },
        _refresh: function() {
            this.element.attr({
                "aria-valuemin": this.options.min,
                "aria-valuemax": this.options.max,
                "aria-valuenow": this._parse(this.element.val())
            })
        },
        _value: function(e, t) {
            var n;
            e !== "" && (n = this._parse(e),
            n !== null && (t || (n = this._adjustValue(n)),
            e = this._format(n))),
            this.element.val(e),
            this._refresh()
        },
        _destroy: function() {
            this.element.removeClass("ui-spinner-input").prop("disabled", !1).removeAttr("autocomplete").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"),
            this.uiSpinner.replaceWith(this.element)
        },
        stepUp: t(function(e) {
            this._stepUp(e)
        }),
        _stepUp: function(e) {
            this._spin((e || 1) * this.options.step)
        },
        stepDown: t(function(e) {
            this._stepDown(e)
        }),
        _stepDown: function(e) {
            this._spin((e || 1) * -this.options.step)
        },
        pageUp: t(function(e) {
            this._stepUp((e || 1) * this.options.page)
        }),
        pageDown: t(function(e) {
            this._stepDown((e || 1) * this.options.page)
        }),
        value: function(e) {
            if (!arguments.length)
                return this._parse(this.element.val());
            t(this._value).call(this, e)
        },
        widget: function() {
            return this.uiSpinner
        }
    })
}
)(jQuery);
(function(e, t) {
    function i() {
        return ++n
    }
    function s(e) {
        return e = e.cloneNode(!1),
        e.hash.length > 1 && e.href.replace(r, "") === location.href.replace(r, "")
    }
    var n = 0
      , r = /#.*$/;
    e.widget("ui.tabs", {
        version: "1.9.0",
        delay: 300,
        options: {
            active: null,
            collapsible: !1,
            event: "click",
            heightStyle: "content",
            hide: null,
            show: null,
            activate: null,
            beforeActivate: null,
            beforeLoad: null,
            load: null
        },
        _create: function() {
            var t, n = this, r = this.options, i = r.active;
            this.running = !1,
            this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all").toggleClass("ui-tabs-collapsible", r.collapsible).delegate(".ui-tabs-nav > li", "mousedown" + this.eventNamespace, function(t) {
                e(this).is(".ui-state-disabled") && t.preventDefault()
            }).delegate(".ui-tabs-anchor", "focus" + this.eventNamespace, function() {
                e(this).closest("li").is(".ui-state-disabled") && this.blur()
            }),
            this._processTabs();
            if (i === null) {
                location.hash && this.anchors.each(function(e, t) {
                    if (t.hash === location.hash)
                        return i = e,
                        !1
                }),
                i === null && (i = this.tabs.filter(".ui-tabs-active").index());
                if (i === null || i === -1)
                    i = this.tabs.length ? 0 : !1
            }
            i !== !1 && (i = this.tabs.index(this.tabs.eq(i)),
            i === -1 && (i = r.collapsible ? !1 : 0)),
            r.active = i,
            !r.collapsible && r.active === !1 && this.anchors.length && (r.active = 0),
            e.isArray(r.disabled) && (r.disabled = e.unique(r.disabled.concat(e.map(this.tabs.filter(".ui-state-disabled"), function(e) {
                return n.tabs.index(e)
            }))).sort()),
            this.options.active !== !1 && this.anchors.length ? this.active = this._findActive(this.options.active) : this.active = e(),
            this._refresh(),
            this.active.length && this.load(r.active)
        },
        _getCreateEventData: function() {
            return {
                tab: this.active,
                panel: this.active.length ? this._getPanelForTab(this.active) : e()
            }
        },
        _tabKeydown: function(t) {
            var n = e(this.document[0].activeElement).closest("li")
              , r = this.tabs.index(n)
              , i = !0;
            if (this._handlePageNav(t))
                return;
            switch (t.keyCode) {
            case e.ui.keyCode.RIGHT:
            case e.ui.keyCode.DOWN:
                r++;
                break;
            case e.ui.keyCode.UP:
            case e.ui.keyCode.LEFT:
                i = !1,
                r--;
                break;
            case e.ui.keyCode.END:
                r = this.anchors.length - 1;
                break;
            case e.ui.keyCode.HOME:
                r = 0;
                break;
            case e.ui.keyCode.SPACE:
                t.preventDefault(),
                clearTimeout(this.activating),
                this._activate(r);
                return;
            case e.ui.keyCode.ENTER:
                t.preventDefault(),
                clearTimeout(this.activating),
                this._activate(r === this.options.active ? !1 : r);
                return;
            default:
                return
            }
            t.preventDefault(),
            clearTimeout(this.activating),
            r = this._focusNextTab(r, i),
            t.ctrlKey || (n.attr("aria-selected", "false"),
            this.tabs.eq(r).attr("aria-selected", "true"),
            this.activating = this._delay(function() {
                this.option("active", r)
            }, this.delay))
        },
        _panelKeydown: function(t) {
            if (this._handlePageNav(t))
                return;
            t.ctrlKey && t.keyCode === e.ui.keyCode.UP && (t.preventDefault(),
            this.active.focus())
        },
        _handlePageNav: function(t) {
            if (t.altKey && t.keyCode === e.ui.keyCode.PAGE_UP)
                return this._activate(this._focusNextTab(this.options.active - 1, !1)),
                !0;
            if (t.altKey && t.keyCode === e.ui.keyCode.PAGE_DOWN)
                return this._activate(this._focusNextTab(this.options.active + 1, !0)),
                !0
        },
        _findNextTab: function(t, n) {
            function i() {
                return t > r && (t = 0),
                t < 0 && (t = r),
                t
            }
            var r = this.tabs.length - 1;
            while (e.inArray(i(), this.options.disabled) !== -1)
                t = n ? t + 1 : t - 1;
            return t
        },
        _focusNextTab: function(e, t) {
            return e = this._findNextTab(e, t),
            this.tabs.eq(e).focus(),
            e
        },
        _setOption: function(e, t) {
            if (e === "active") {
                this._activate(t);
                return
            }
            if (e === "disabled") {
                this._setupDisabled(t);
                return
            }
            this._super(e, t),
            e === "collapsible" && (this.element.toggleClass("ui-tabs-collapsible", t),
            !t && this.options.active === !1 && this._activate(0)),
            e === "event" && this._setupEvents(t),
            e === "heightStyle" && this._setupHeightStyle(t)
        },
        _tabId: function(e) {
            return e.attr("aria-controls") || "ui-tabs-" + i()
        },
        _sanitizeSelector: function(e) {
            return e ? e.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&") : ""
        },
        refresh: function() {
            var t, n = this.options, r = this.tablist.children(":has(a[href])");
            n.disabled = e.map(r.filter(".ui-state-disabled"), function(e) {
                return r.index(e)
            }),
            this._processTabs(),
            n.active === !1 || !this.anchors.length ? (n.active = !1,
            this.active = e()) : this.active.length && !e.contains(this.tablist[0], this.active[0]) ? this.tabs.length === n.disabled.length ? (n.active = !1,
            this.active = e()) : this._activate(this._findNextTab(Math.max(0, n.active - 1), !1)) : n.active = this.tabs.index(this.active),
            this._refresh()
        },
        _refresh: function() {
            this._setupDisabled(this.options.disabled),
            this._setupEvents(this.options.event),
            this._setupHeightStyle(this.options.heightStyle),
            this.tabs.not(this.active).attr({
                "aria-selected": "false",
                tabIndex: -1
            }),
            this.panels.not(this._getPanelForTab(this.active)).hide().attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            }),
            this.active.length ? (this.active.addClass("ui-tabs-active ui-state-active").attr({
                "aria-selected": "true",
                tabIndex: 0
            }),
            this._getPanelForTab(this.active).show().attr({
                "aria-expanded": "true",
                "aria-hidden": "false"
            })) : this.tabs.eq(0).attr("tabIndex", 0)
        },
        _processTabs: function() {
            var t = this;
            this.tablist = this._getList().addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").attr("role", "tablist"),
            this.tabs = this.tablist.find("> li:has(a[href])").addClass("ui-state-default ui-corner-top").attr({
                role: "tab",
                tabIndex: -1
            }),
            this.anchors = this.tabs.map(function() {
                return e("a", this)[0]
            }).addClass("ui-tabs-anchor").attr({
                role: "presentation",
                tabIndex: -1
            }),
            this.panels = e(),
            this.anchors.each(function(n, r) {
                var i, o, u, a = e(r).uniqueId().attr("id"), f = e(r).closest("li"), l = f.attr("aria-controls");
                s(r) ? (i = r.hash,
                o = t.element.find(t._sanitizeSelector(i))) : (u = t._tabId(f),
                i = "#" + u,
                o = t.element.find(i),
                o.length || (o = t._createPanel(u),
                o.insertAfter(t.panels[n - 1] || t.tablist)),
                o.attr("aria-live", "polite")),
                o.length && (t.panels = t.panels.add(o)),
                l && f.data("ui-tabs-aria-controls", l),
                f.attr({
                    "aria-controls": i.substring(1),
                    "aria-labelledby": a
                }),
                o.attr("aria-labelledby", a)
            }),
            this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").attr("role", "tabpanel")
        },
        _getList: function() {
            return this.element.find("ol,ul").eq(0)
        },
        _createPanel: function(t) {
            return e("<div>").attr("id", t).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy", !0)
        },
        _setupDisabled: function(t) {
            e.isArray(t) && (t.length ? t.length === this.anchors.length && (t = !0) : t = !1);
            for (var n = 0, r; r = this.tabs[n]; n++)
                t === !0 || e.inArray(n, t) !== -1 ? e(r).addClass("ui-state-disabled").attr("aria-disabled", "true") : e(r).removeClass("ui-state-disabled").removeAttr("aria-disabled");
            this.options.disabled = t
        },
        _setupEvents: function(t) {
            var n = {
                click: function(e) {
                    e.preventDefault()
                }
            };
            t && e.each(t.split(" "), function(e, t) {
                n[t] = "_eventHandler"
            }),
            this._off(this.anchors.add(this.tabs).add(this.panels)),
            this._on(this.anchors, n),
            this._on(this.tabs, {
                keydown: "_tabKeydown"
            }),
            this._on(this.panels, {
                keydown: "_panelKeydown"
            }),
            this._focusable(this.tabs),
            this._hoverable(this.tabs)
        },
        _setupHeightStyle: function(t) {
            var n, r, i = this.element.parent();
            t === "fill" ? (e.support.minHeight || (r = i.css("overflow"),
            i.css("overflow", "hidden")),
            n = i.height(),
            this.element.siblings(":visible").each(function() {
                var t = e(this)
                  , r = t.css("position");
                if (r === "absolute" || r === "fixed")
                    return;
                n -= t.outerHeight(!0)
            }),
            r && i.css("overflow", r),
            this.element.children().not(this.panels).each(function() {
                n -= e(this).outerHeight(!0)
            }),
            this.panels.each(function() {
                e(this).height(Math.max(0, n - e(this).innerHeight() + e(this).height()))
            }).css("overflow", "auto")) : t === "auto" && (n = 0,
            this.panels.each(function() {
                n = Math.max(n, e(this).height("").height())
            }).height(n))
        },
        _eventHandler: function(t) {
            var n = this.options
              , r = this.active
              , i = e(t.currentTarget)
              , s = i.closest("li")
              , o = s[0] === r[0]
              , u = o && n.collapsible
              , a = u ? e() : this._getPanelForTab(s)
              , f = r.length ? this._getPanelForTab(r) : e()
              , l = {
                oldTab: r,
                oldPanel: f,
                newTab: u ? e() : s,
                newPanel: a
            };
            t.preventDefault();
            if (s.hasClass("ui-state-disabled") || s.hasClass("ui-tabs-loading") || this.running || o && !n.collapsible || this._trigger("beforeActivate", t, l) === !1)
                return;
            n.active = u ? !1 : this.tabs.index(s),
            this.active = o ? e() : s,
            this.xhr && this.xhr.abort(),
            !f.length && !a.length && e.error("jQuery UI Tabs: Mismatching fragment identifier."),
            a.length && this.load(this.tabs.index(s), t),
            this._toggle(t, l)
        },
        _toggle: function(t, n) {
            function o() {
                r.running = !1,
                r._trigger("activate", t, n)
            }
            function u() {
                n.newTab.closest("li").addClass("ui-tabs-active ui-state-active"),
                i.length && r.options.show ? r._show(i, r.options.show, o) : (i.show(),
                o())
            }
            var r = this
              , i = n.newPanel
              , s = n.oldPanel;
            this.running = !0,
            s.length && this.options.hide ? this._hide(s, this.options.hide, function() {
                n.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),
                u()
            }) : (n.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),
            s.hide(),
            u()),
            s.attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            }),
            n.oldTab.attr("aria-selected", "false"),
            i.length && s.length ? n.oldTab.attr("tabIndex", -1) : i.length && this.tabs.filter(function() {
                return e(this).attr("tabIndex") === 0
            }).attr("tabIndex", -1),
            i.attr({
                "aria-expanded": "true",
                "aria-hidden": "false"
            }),
            n.newTab.attr({
                "aria-selected": "true",
                tabIndex: 0
            })
        },
        _activate: function(t) {
            var n, r = this._findActive(t);
            if (r[0] === this.active[0])
                return;
            r.length || (r = this.active),
            n = r.find(".ui-tabs-anchor")[0],
            this._eventHandler({
                target: n,
                currentTarget: n,
                preventDefault: e.noop
            })
        },
        _findActive: function(t) {
            return t === !1 ? e() : this.tabs.eq(t)
        },
        _getIndex: function(e) {
            return typeof e == "string" && (e = this.anchors.index(this.anchors.filter("[href$='" + e + "']"))),
            e
        },
        _destroy: function() {
            this.xhr && this.xhr.abort(),
            this.element.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible"),
            this.tablist.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").removeAttr("role"),
            this.anchors.removeClass("ui-tabs-anchor").removeAttr("role").removeAttr("tabIndex").removeData("href.tabs").removeData("load.tabs").removeUniqueId(),
            this.tabs.add(this.panels).each(function() {
                e.data(this, "ui-tabs-destroy") ? e(this).remove() : e(this).removeClass("ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel").removeAttr("tabIndex").removeAttr("aria-live").removeAttr("aria-busy").removeAttr("aria-selected").removeAttr("aria-labelledby").removeAttr("aria-hidden").removeAttr("aria-expanded").removeAttr("role")
            }),
            this.tabs.each(function() {
                var t = e(this)
                  , n = t.data("ui-tabs-aria-controls");
                n ? t.attr("aria-controls", n) : t.removeAttr("aria-controls")
            }),
            this.options.heightStyle !== "content" && this.panels.css("height", "")
        },
        enable: function(n) {
            var r = this.options.disabled;
            if (r === !1)
                return;
            n === t ? r = !1 : (n = this._getIndex(n),
            e.isArray(r) ? r = e.map(r, function(e) {
                return e !== n ? e : null
            }) : r = e.map(this.tabs, function(e, t) {
                return t !== n ? t : null
            })),
            this._setupDisabled(r)
        },
        disable: function(n) {
            var r = this.options.disabled;
            if (r === !0)
                return;
            if (n === t)
                r = !0;
            else {
                n = this._getIndex(n);
                if (e.inArray(n, r) !== -1)
                    return;
                e.isArray(r) ? r = e.merge([n], r).sort() : r = [n]
            }
            this._setupDisabled(r)
        },
        load: function(t, n) {
            t = this._getIndex(t);
            var r = this
              , i = this.tabs.eq(t)
              , o = i.find(".ui-tabs-anchor")
              , u = this._getPanelForTab(i)
              , a = {
                tab: i,
                panel: u
            };
            if (s(o[0]))
                return;
            this.xhr = e.ajax(this._ajaxSettings(o, n, a)),
            this.xhr && this.xhr.statusText !== "canceled" && (i.addClass("ui-tabs-loading"),
            u.attr("aria-busy", "true"),
            this.xhr.success(function(e) {
                setTimeout(function() {
                    u.html(e),
                    r._trigger("load", n, a)
                }, 1)
            }).complete(function(e, t) {
                setTimeout(function() {
                    t === "abort" && r.panels.stop(!1, !0),
                    i.removeClass("ui-tabs-loading"),
                    u.removeAttr("aria-busy"),
                    e === r.xhr && delete r.xhr
                }, 1)
            }))
        },
        _ajaxSettings: function(t, n, r) {
            var i = this;
            return {
                url: t.attr("href"),
                beforeSend: function(t, s) {
                    return i._trigger("beforeLoad", n, e.extend({
                        jqXHR: t,
                        ajaxSettings: s
                    }, r))
                }
            }
        },
        _getPanelForTab: function(t) {
            var n = e(t).attr("aria-controls");
            return this.element.find(this._sanitizeSelector("#" + n))
        }
    }),
    e.uiBackCompat !== !1 && (e.ui.tabs.prototype._ui = function(e, t) {
        return {
            tab: e,
            panel: t,
            index: this.anchors.index(e)
        }
    }
    ,
    e.widget("ui.tabs", e.ui.tabs, {
        url: function(e, t) {
            this.anchors.eq(e).attr("href", t)
        }
    }),
    e.widget("ui.tabs", e.ui.tabs, {
        options: {
            ajaxOptions: null,
            cache: !1
        },
        _create: function() {
            this._super();
            var t = this;
            this._on({
                tabsbeforeload: function(n, r) {
                    if (e.data(r.tab[0], "cache.tabs")) {
                        n.preventDefault();
                        return
                    }
                    r.jqXHR.success(function() {
                        t.options.cache && e.data(r.tab[0], "cache.tabs", !0)
                    })
                }
            })
        },
        _ajaxSettings: function(t, n, r) {
            var i = this.options.ajaxOptions;
            return e.extend({}, i, {
                error: function(e, t, n) {
                    try {
                        i.error(e, t, r.tab.closest("li").index(), r.tab[0])
                    } catch (n) {}
                }
            }, this._superApply(arguments))
        },
        _setOption: function(e, t) {
            e === "cache" && t === !1 && this.anchors.removeData("cache.tabs"),
            this._super(e, t)
        },
        _destroy: function() {
            this.anchors.removeData("cache.tabs"),
            this._super()
        },
        url: function(e, t) {
            this.anchors.eq(e).removeData("cache.tabs"),
            this._superApply(arguments)
        }
    }),
    e.widget("ui.tabs", e.ui.tabs, {
        abort: function() {
            this.xhr && this.xhr.abort()
        }
    }),
    e.widget("ui.tabs", e.ui.tabs, {
        options: {
            spinner: "<em>Loading&#8230;</em>"
        },
        _create: function() {
            this._super(),
            this._on({
                tabsbeforeload: function(e, t) {
                    if (e.target !== this.element[0] || !this.options.spinner)
                        return;
                    var n = t.tab.find("span")
                      , r = n.html();
                    n.html(this.options.spinner),
                    t.jqXHR.complete(function() {
                        n.html(r)
                    })
                }
            })
        }
    }),
    e.widget("ui.tabs", e.ui.tabs, {
        options: {
            enable: null,
            disable: null
        },
        enable: function(t) {
            var n = this.options, r;
            if (t && n.disabled === !0 || e.isArray(n.disabled) && e.inArray(t, n.disabled) !== -1)
                r = !0;
            this._superApply(arguments),
            r && this._trigger("enable", null, this._ui(this.anchors[t], this.panels[t]))
        },
        disable: function(t) {
            var n = this.options, r;
            if (t && n.disabled === !1 || e.isArray(n.disabled) && e.inArray(t, n.disabled) === -1)
                r = !0;
            this._superApply(arguments),
            r && this._trigger("disable", null, this._ui(this.anchors[t], this.panels[t]))
        }
    }),
    e.widget("ui.tabs", e.ui.tabs, {
        options: {
            add: null,
            remove: null,
            tabTemplate: "<li><a href='#{href}'><span>#{label}</span></a></li>"
        },
        add: function(n, r, i) {
            i === t && (i = this.anchors.length);
            var s, o, u = this.options, a = e(u.tabTemplate.replace(/#\{href\}/g, n).replace(/#\{label\}/g, r)), f = n.indexOf("#") ? this._tabId(a) : n.replace("#", "");
            return a.addClass("ui-state-default ui-corner-top").data("ui-tabs-destroy", !0),
            a.attr("aria-controls", f),
            s = i >= this.tabs.length,
            o = this.element.find("#" + f),
            o.length || (o = this._createPanel(f),
            s ? i > 0 ? o.insertAfter(this.panels.eq(-1)) : o.appendTo(this.element) : o.insertBefore(this.panels[i])),
            o.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").hide(),
            s ? a.appendTo(this.tablist) : a.insertBefore(this.tabs[i]),
            u.disabled = e.map(u.disabled, function(e) {
                return e >= i ? ++e : e
            }),
            this.refresh(),
            this.tabs.length === 1 && u.active === !1 && this.option("active", 0),
            this._trigger("add", null, this._ui(this.anchors[i], this.panels[i])),
            this
        },
        remove: function(t) {
            t = this._getIndex(t);
            var n = this.options
              , r = this.tabs.eq(t).remove()
              , i = this._getPanelForTab(r).remove();
            return r.hasClass("ui-tabs-active") && this.anchors.length > 2 && this._activate(t + (t + 1 < this.anchors.length ? 1 : -1)),
            n.disabled = e.map(e.grep(n.disabled, function(e) {
                return e !== t
            }), function(e) {
                return e >= t ? --e : e
            }),
            this.refresh(),
            this._trigger("remove", null, this._ui(r.find("a")[0], i[0])),
            this
        }
    }),
    e.widget("ui.tabs", e.ui.tabs, {
        length: function() {
            return this.anchors.length
        }
    }),
    e.widget("ui.tabs", e.ui.tabs, {
        options: {
            idPrefix: "ui-tabs-"
        },
        _tabId: function(t) {
            var n = t.is("li") ? t.find("a[href]") : t;
            return n = n[0],
            e(n).closest("li").attr("aria-controls") || n.title && n.title.replace(/\s/g, "_").replace(/[^\w\u00c0-\uFFFF\-]/g, "") || this.options.idPrefix + i()
        }
    }),
    e.widget("ui.tabs", e.ui.tabs, {
        options: {
            panelTemplate: "<div></div>"
        },
        _createPanel: function(t) {
            return e(this.options.panelTemplate).attr("id", t).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy", !0)
        }
    }),
    e.widget("ui.tabs", e.ui.tabs, {
        _create: function() {
            var e = this.options;
            e.active === null && e.selected !== t && (e.active = e.selected === -1 ? !1 : e.selected),
            this._super(),
            e.selected = e.active,
            e.selected === !1 && (e.selected = -1)
        },
        _setOption: function(e, t) {
            if (e !== "selected")
                return this._super(e, t);
            var n = this.options;
            this._super("active", t === -1 ? !1 : t),
            n.selected = n.active,
            n.selected === !1 && (n.selected = -1)
        },
        _eventHandler: function(e) {
            this._superApply(arguments),
            this.options.selected = this.options.active,
            this.options.selected === !1 && (this.options.selected = -1)
        }
    }),
    e.widget("ui.tabs", e.ui.tabs, {
        options: {
            show: null,
            select: null
        },
        _create: function() {
            this._super(),
            this.options.active !== !1 && this._trigger("show", null, this._ui(this.active.find(".ui-tabs-anchor")[0], this._getPanelForTab(this.active)[0]))
        },
        _trigger: function(e, t, n) {
            var r = this._superApply(arguments);
            return r ? (e === "beforeActivate" && n.newTab.length ? r = this._super("select", t, {
                tab: n.newTab.find(".ui-tabs-anchor")[0],
                panel: n.newPanel[0],
                index: n.newTab.closest("li").index()
            }) : e === "activate" && n.newTab.length && (r = this._super("show", t, {
                tab: n.newTab.find(".ui-tabs-anchor")[0],
                panel: n.newPanel[0],
                index: n.newTab.closest("li").index()
            })),
            r) : !1
        }
    }),
    e.widget("ui.tabs", e.ui.tabs, {
        select: function(e) {
            e = this._getIndex(e);
            if (e === -1) {
                if (!this.options.collapsible || this.options.selected === -1)
                    return;
                e = this.options.selected
            }
            this.anchors.eq(e).trigger(this.options.event + this.eventNamespace)
        }
    }),
    function() {
        var t = 0;
        e.widget("ui.tabs", e.ui.tabs, {
            options: {
                cookie: null
            },
            _create: function() {
                var e = this.options, t;
                e.active == null && e.cookie && (t = parseInt(this._cookie(), 10),
                t === -1 && (t = !1),
                e.active = t),
                this._super()
            },
            _cookie: function(n) {
                var r = [this.cookie || (this.cookie = this.options.cookie.name || "ui-tabs-" + ++t)];
                return arguments.length && (r.push(n === !1 ? -1 : n),
                r.push(this.options.cookie)),
                e.cookie.apply(null, r)
            },
            _refresh: function() {
                this._super(),
                this.options.cookie && this._cookie(this.options.active, this.options.cookie)
            },
            _eventHandler: function(e) {
                this._superApply(arguments),
                this.options.cookie && this._cookie(this.options.active, this.options.cookie)
            },
            _destroy: function() {
                this._super(),
                this.options.cookie && this._cookie(null, this.options.cookie)
            }
        })
    }(),
    e.widget("ui.tabs", e.ui.tabs, {
        _trigger: function(t, n, r) {
            var i = e.extend({}, r);
            return t === "load" && (i.panel = i.panel[0],
            i.tab = i.tab.find(".ui-tabs-anchor")[0]),
            this._super(t, n, i)
        }
    }),
    e.widget("ui.tabs", e.ui.tabs, {
        options: {
            fx: null
        },
        _getFx: function() {
            var t, n, r = this.options.fx;
            return r && (e.isArray(r) ? (t = r[0],
            n = r[1]) : t = n = r),
            r ? {
                show: n,
                hide: t
            } : null
        },
        _toggle: function(e, t) {
            function o() {
                n.running = !1,
                n._trigger("activate", e, t)
            }
            function u() {
                t.newTab.closest("li").addClass("ui-tabs-active ui-state-active"),
                r.length && s.show ? r.animate(s.show, s.show.duration, function() {
                    o()
                }) : (r.show(),
                o())
            }
            var n = this
              , r = t.newPanel
              , i = t.oldPanel
              , s = this._getFx();
            if (!s)
                return this._super(e, t);
            n.running = !0,
            i.length && s.hide ? i.animate(s.hide, s.hide.duration, function() {
                t.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),
                u()
            }) : (t.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),
            i.hide(),
            u())
        }
    }))
}
)(jQuery);
(function(e) {
    function n(t, n) {
        var r = (t.attr("aria-describedby") || "").split(/\s+/);
        r.push(n),
        t.data("ui-tooltip-id", n).attr("aria-describedby", e.trim(r.join(" ")))
    }
    function r(t) {
        var n = t.data("ui-tooltip-id")
          , r = (t.attr("aria-describedby") || "").split(/\s+/)
          , i = e.inArray(n, r);
        i !== -1 && r.splice(i, 1),
        t.removeData("ui-tooltip-id"),
        r = e.trim(r.join(" ")),
        r ? t.attr("aria-describedby", r) : t.removeAttr("aria-describedby")
    }
    var t = 0;
    e.widget("ui.tooltip", {
        version: "1.9.0",
        options: {
            content: function() {
                return e(this).attr("title")
            },
            hide: !0,
            items: "[title]",
            position: {
                my: "left+15 center",
                at: "right center",
                collision: "flipfit flipfit"
            },
            show: !0,
            tooltipClass: null,
            track: !1,
            close: null,
            open: null
        },
        _create: function() {
            this._on({
                mouseover: "open",
                focusin: "open"
            }),
            this.tooltips = {}
        },
        _setOption: function(t, n) {
            var r = this;
            if (t === "disabled") {
                this[n ? "_disable" : "_enable"](),
                this.options[t] = n;
                return
            }
            this._super(t, n),
            t === "content" && e.each(this.tooltips, function(e, t) {
                r._updateContent(t)
            })
        },
        _disable: function() {
            var t = this;
            e.each(this.tooltips, function(n, r) {
                var i = e.Event("blur");
                i.target = i.currentTarget = r[0],
                t.close(i, !0)
            }),
            this.element.find(this.options.items).andSelf().each(function() {
                var t = e(this);
                t.is("[title]") && t.data("ui-tooltip-title", t.attr("title")).attr("title", "")
            })
        },
        _enable: function() {
            this.element.find(this.options.items).andSelf().each(function() {
                var t = e(this);
                t.data("ui-tooltip-title") && t.attr("title", t.data("ui-tooltip-title"))
            })
        },
        open: function(t) {
            var n = e(t ? t.target : this.element).closest(this.options.items);
            if (!n.length)
                return;
            if (this.options.track && n.data("ui-tooltip-id")) {
                this._find(n).position(e.extend({
                    of: n
                }, this.options.position)),
                this._off(this.document, "mousemove");
                return
            }
            n.attr("title") && n.data("ui-tooltip-title", n.attr("title")),
            n.data("tooltip-open", !0),
            this._updateContent(n, t)
        },
        _updateContent: function(e, t) {
            var n, r = this.options.content, i = this;
            if (typeof r == "string")
                return this._open(t, e, r);
            n = r.call(e[0], function(n) {
                if (!e.data("tooltip-open"))
                    return;
                i._delay(function() {
                    this._open(t, e, n)
                })
            }),
            n && this._open(t, e, n)
        },
        _open: function(t, r, i) {
            function u(e) {
                o.of = e,
                s.position(o)
            }
            var s, o;
            if (!i)
                return;
            s = this._find(r);
            if (s.length) {
                s.find(".ui-tooltip-content").html(i);
                return
            }
            r.is("[title]") && (t && t.type === "mouseover" ? r.attr("title", "") : r.removeAttr("title")),
            s = this._tooltip(r),
            n(r, s.attr("id")),
            s.find(".ui-tooltip-content").html(i),
            this.options.track && t && /^mouse/.test(t.originalEvent.type) ? (o = e.extend({}, this.options.position),
            this._on(this.document, {
                mousemove: u
            }),
            u(t)) : s.position(e.extend({
                of: r
            }, this.options.position)),
            s.hide(),
            this._show(s, this.options.show),
            this._trigger("open", t, {
                tooltip: s
            }),
            this._on(r, {
                mouseleave: "close",
                focusout: "close",
                keyup: function(t) {
                    if (t.keyCode === e.ui.keyCode.ESCAPE) {
                        var n = e.Event(t);
                        n.currentTarget = r[0],
                        this.close(n, !0)
                    }
                }
            })
        },
        close: function(t, n) {
            var i = this
              , s = e(t ? t.currentTarget : this.element)
              , o = this._find(s);
            if (this.closing)
                return;
            if (!n && t && t.type !== "focusout" && this.document[0].activeElement === s[0])
                return;
            s.data("ui-tooltip-title") && s.attr("title", s.data("ui-tooltip-title")),
            r(s),
            o.stop(!0),
            this._hide(o, this.options.hide, function() {
                e(this).remove(),
                delete i.tooltips[this.id]
            }),
            s.removeData("tooltip-open"),
            this._off(s, "mouseleave focusout keyup"),
            this._off(this.document, "mousemove"),
            this.closing = !0,
            this._trigger("close", t, {
                tooltip: o
            }),
            this.closing = !1
        },
        _tooltip: function(n) {
            var r = "ui-tooltip-" + t++
              , i = e("<div>").attr({
                id: r,
                role: "tooltip"
            }).addClass("ui-tooltip ui-widget ui-corner-all ui-widget-content " + (this.options.tooltipClass || ""));
            return e("<div>").addClass("ui-tooltip-content").appendTo(i),
            i.appendTo(this.document[0].body),
            e.fn.bgiframe && i.bgiframe(),
            this.tooltips[r] = n,
            i
        },
        _find: function(t) {
            var n = t.data("ui-tooltip-id");
            return n ? e("#" + n) : e()
        },
        _destroy: function() {
            var t = this;
            e.each(this.tooltips, function(n, r) {
                var i = e.Event("blur");
                i.target = i.currentTarget = r[0],
                t.close(i, !0),
                e("#" + n).remove(),
                r.data("ui-tooltip-title") && (r.attr("title", r.data("ui-tooltip-title")),
                r.removeData("ui-tooltip-title"))
            })
        }
    })
}
)(jQuery);
jQuery.effects || function(e, t) {
    var n = e.uiBackCompat !== !1
      , r = "ui-effects-";
    e.effects = {
        effect: {}
    },
    function(t, n) {
        function p(e, t, n) {
            var r = a[t.type] || {};
            return e == null ? n || !t.def ? null : t.def : (e = r.floor ? ~~e : parseFloat(e),
            isNaN(e) ? t.def : r.mod ? (e + r.mod) % r.mod : 0 > e ? 0 : r.max < e ? r.max : e)
        }
        function d(e) {
            var n = o()
              , r = n._rgba = [];
            return e = e.toLowerCase(),
            h(s, function(t, i) {
                var s, o = i.re.exec(e), a = o && i.parse(o), f = i.space || "rgba";
                if (a)
                    return s = n[f](a),
                    n[u[f].cache] = s[u[f].cache],
                    r = n._rgba = s._rgba,
                    !1
            }),
            r.length ? (r.join() === "0,0,0,0" && t.extend(r, c.transparent),
            n) : c[e]
        }
        function v(e, t, n) {
            return n = (n + 1) % 1,
            n * 6 < 1 ? e + (t - e) * n * 6 : n * 2 < 1 ? t : n * 3 < 2 ? e + (t - e) * (2 / 3 - n) * 6 : e
        }
        var r = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor".split(" "), i = /^([\-+])=\s*(\d+\.?\d*)/, s = [{
            re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
            parse: function(e) {
                return [e[1], e[2], e[3], e[4]]
            }
        }, {
            re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
            parse: function(e) {
                return [e[1] * 2.55, e[2] * 2.55, e[3] * 2.55, e[4]]
            }
        }, {
            re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
            parse: function(e) {
                return [parseInt(e[1], 16), parseInt(e[2], 16), parseInt(e[3], 16)]
            }
        }, {
            re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
            parse: function(e) {
                return [parseInt(e[1] + e[1], 16), parseInt(e[2] + e[2], 16), parseInt(e[3] + e[3], 16)]
            }
        }, {
            re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
            space: "hsla",
            parse: function(e) {
                return [e[1], e[2] / 100, e[3] / 100, e[4]]
            }
        }], o = t.Color = function(e, n, r, i) {
            return new t.Color.fn.parse(e,n,r,i)
        }
        , u = {
            rgba: {
                props: {
                    red: {
                        idx: 0,
                        type: "byte"
                    },
                    green: {
                        idx: 1,
                        type: "byte"
                    },
                    blue: {
                        idx: 2,
                        type: "byte"
                    }
                }
            },
            hsla: {
                props: {
                    hue: {
                        idx: 0,
                        type: "degrees"
                    },
                    saturation: {
                        idx: 1,
                        type: "percent"
                    },
                    lightness: {
                        idx: 2,
                        type: "percent"
                    }
                }
            }
        }, a = {
            "byte": {
                floor: !0,
                max: 255
            },
            percent: {
                max: 1
            },
            degrees: {
                mod: 360,
                floor: !0
            }
        }, f = o.support = {}, l = t("<p>")[0], c, h = t.each;
        l.style.cssText = "background-color:rgba(1,1,1,.5)",
        f.rgba = l.style.backgroundColor.indexOf("rgba") > -1,
        h(u, function(e, t) {
            t.cache = "_" + e,
            t.props.alpha = {
                idx: 3,
                type: "percent",
                def: 1
            }
        }),
        o.fn = t.extend(o.prototype, {
            parse: function(r, i, s, a) {
                if (r === n)
                    return this._rgba = [null, null, null, null],
                    this;
                if (r.jquery || r.nodeType)
                    r = t(r).css(i),
                    i = n;
                var f = this, l = t.type(r), v = this._rgba = [], m;
                i !== n && (r = [r, i, s, a],
                l = "array");
                if (l === "string")
                    return this.parse(d(r) || c._default);
                if (l === "array")
                    return h(u.rgba.props, function(e, t) {
                        v[t.idx] = p(r[t.idx], t)
                    }),
                    this;
                if (l === "object")
                    return r instanceof o ? h(u, function(e, t) {
                        r[t.cache] && (f[t.cache] = r[t.cache].slice())
                    }) : h(u, function(t, n) {
                        var i = n.cache;
                        h(n.props, function(e, t) {
                            if (!f[i] && n.to) {
                                if (e === "alpha" || r[e] == null)
                                    return;
                                f[i] = n.to(f._rgba)
                            }
                            f[i][t.idx] = p(r[e], t, !0)
                        }),
                        f[i] && e.inArray(null, f[i].slice(0, 3)) < 0 && (f[i][3] = 1,
                        n.from && (f._rgba = n.from(f[i])))
                    }),
                    this
            },
            is: function(e) {
                var t = o(e)
                  , n = !0
                  , r = this;
                return h(u, function(e, i) {
                    var s, o = t[i.cache];
                    return o && (s = r[i.cache] || i.to && i.to(r._rgba) || [],
                    h(i.props, function(e, t) {
                        if (o[t.idx] != null)
                            return n = o[t.idx] === s[t.idx],
                            n
                    })),
                    n
                }),
                n
            },
            _space: function() {
                var e = []
                  , t = this;
                return h(u, function(n, r) {
                    t[r.cache] && e.push(n)
                }),
                e.pop()
            },
            transition: function(e, t) {
                var n = o(e)
                  , r = n._space()
                  , i = u[r]
                  , s = this.alpha() === 0 ? o("transparent") : this
                  , f = s[i.cache] || i.to(s._rgba)
                  , l = f.slice();
                return n = n[i.cache],
                h(i.props, function(e, r) {
                    var i = r.idx
                      , s = f[i]
                      , o = n[i]
                      , u = a[r.type] || {};
                    if (o === null)
                        return;
                    s === null ? l[i] = o : (u.mod && (o - s > u.mod / 2 ? s += u.mod : s - o > u.mod / 2 && (s -= u.mod)),
                    l[i] = p((o - s) * t + s, r))
                }),
                this[r](l)
            },
            blend: function(e) {
                if (this._rgba[3] === 1)
                    return this;
                var n = this._rgba.slice()
                  , r = n.pop()
                  , i = o(e)._rgba;
                return o(t.map(n, function(e, t) {
                    return (1 - r) * i[t] + r * e
                }))
            },
            toRgbaString: function() {
                var e = "rgba("
                  , n = t.map(this._rgba, function(e, t) {
                    return e == null ? t > 2 ? 1 : 0 : e
                });
                return n[3] === 1 && (n.pop(),
                e = "rgb("),
                e + n.join() + ")"
            },
            toHslaString: function() {
                var e = "hsla("
                  , n = t.map(this.hsla(), function(e, t) {
                    return e == null && (e = t > 2 ? 1 : 0),
                    t && t < 3 && (e = Math.round(e * 100) + "%"),
                    e
                });
                return n[3] === 1 && (n.pop(),
                e = "hsl("),
                e + n.join() + ")"
            },
            toHexString: function(e) {
                var n = this._rgba.slice()
                  , r = n.pop();
                return e && n.push(~~(r * 255)),
                "#" + t.map(n, function(e, t) {
                    return e = (e || 0).toString(16),
                    e.length === 1 ? "0" + e : e
                }).join("")
            },
            toString: function() {
                return this._rgba[3] === 0 ? "transparent" : this.toRgbaString()
            }
        }),
        o.fn.parse.prototype = o.fn,
        u.hsla.to = function(e) {
            if (e[0] == null || e[1] == null || e[2] == null)
                return [null, null, null, e[3]];
            var t = e[0] / 255, n = e[1] / 255, r = e[2] / 255, i = e[3], s = Math.max(t, n, r), o = Math.min(t, n, r), u = s - o, a = s + o, f = a * .5, l, c;
            return o === s ? l = 0 : t === s ? l = 60 * (n - r) / u + 360 : n === s ? l = 60 * (r - t) / u + 120 : l = 60 * (t - n) / u + 240,
            f === 0 || f === 1 ? c = f : f <= .5 ? c = u / a : c = u / (2 - a),
            [Math.round(l) % 360, c, f, i == null ? 1 : i]
        }
        ,
        u.hsla.from = function(e) {
            if (e[0] == null || e[1] == null || e[2] == null)
                return [null, null, null, e[3]];
            var t = e[0] / 360, n = e[1], r = e[2], i = e[3], s = r <= .5 ? r * (1 + n) : r + n - r * n, o = 2 * r - s, u, a, f;
            return [Math.round(v(o, s, t + 1 / 3) * 255), Math.round(v(o, s, t) * 255), Math.round(v(o, s, t - 1 / 3) * 255), i]
        }
        ,
        h(u, function(e, r) {
            var s = r.props
              , u = r.cache
              , a = r.to
              , f = r.from;
            o.fn[e] = function(e) {
                a && !this[u] && (this[u] = a(this._rgba));
                if (e === n)
                    return this[u].slice();
                var r, i = t.type(e), l = i === "array" || i === "object" ? e : arguments, c = this[u].slice();
                return h(s, function(e, t) {
                    var n = l[i === "object" ? e : t.idx];
                    n == null && (n = c[t.idx]),
                    c[t.idx] = p(n, t)
                }),
                f ? (r = o(f(c)),
                r[u] = c,
                r) : o(c)
            }
            ,
            h(s, function(n, r) {
                if (o.fn[n])
                    return;
                o.fn[n] = function(s) {
                    var o = t.type(s), u = n === "alpha" ? this._hsla ? "hsla" : "rgba" : e, a = this[u](), f = a[r.idx], l;
                    return o === "undefined" ? f : (o === "function" && (s = s.call(this, f),
                    o = t.type(s)),
                    s == null && r.empty ? this : (o === "string" && (l = i.exec(s),
                    l && (s = f + parseFloat(l[2]) * (l[1] === "+" ? 1 : -1))),
                    a[r.idx] = s,
                    this[u](a)))
                }
            })
        }),
        h(r, function(e, n) {
            t.cssHooks[n] = {
                set: function(e, r) {
                    var i, s, u = "";
                    if (t.type(r) !== "string" || (i = d(r))) {
                        r = o(i || r);
                        if (!f.rgba && r._rgba[3] !== 1) {
                            s = n === "backgroundColor" ? e.parentNode : e;
                            while ((u === "" || u === "transparent") && s && s.style)
                                try {
                                    u = t.css(s, "backgroundColor"),
                                    s = s.parentNode
                                } catch (a) {}
                            r = r.blend(u && u !== "transparent" ? u : "_default")
                        }
                        r = r.toRgbaString()
                    }
                    try {
                        e.style[n] = r
                    } catch (r) {}
                }
            },
            t.fx.step[n] = function(e) {
                e.colorInit || (e.start = o(e.elem, n),
                e.end = o(e.end),
                e.colorInit = !0),
                t.cssHooks[n].set(e.elem, e.start.transition(e.end, e.pos))
            }
        }),
        t.cssHooks.borderColor = {
            expand: function(e) {
                var t = {};
                return h(["Top", "Right", "Bottom", "Left"], function(n, r) {
                    t["border" + r + "Color"] = e
                }),
                t
            }
        },
        c = t.Color.names = {
            aqua: "#00ffff",
            black: "#000000",
            blue: "#0000ff",
            fuchsia: "#ff00ff",
            gray: "#808080",
            green: "#008000",
            lime: "#00ff00",
            maroon: "#800000",
            navy: "#000080",
            olive: "#808000",
            purple: "#800080",
            red: "#ff0000",
            silver: "#c0c0c0",
            teal: "#008080",
            white: "#ffffff",
            yellow: "#ffff00",
            transparent: [null, null, null, 0],
            _default: "#ffffff"
        }
    }(jQuery),
    function() {
        function i() {
            var t = this.ownerDocument.defaultView ? this.ownerDocument.defaultView.getComputedStyle(this, null) : this.currentStyle, n = {}, r, i, s;
            if (t && t.length && t[0] && t[t[0]]) {
                s = t.length;
                while (s--)
                    r = t[s],
                    typeof t[r] == "string" && (n[e.camelCase(r)] = t[r])
            } else
                for (r in t)
                    typeof t[r] == "string" && (n[r] = t[r]);
            return n
        }
        function s(t, n) {
            var i = {}, s, o;
            for (s in n)
                o = n[s],
                t[s] !== o && !r[s] && (e.fx.step[s] || !isNaN(parseFloat(o))) && (i[s] = o);
            return i
        }
        var n = ["add", "remove", "toggle"]
          , r = {
            border: 1,
            borderBottom: 1,
            borderColor: 1,
            borderLeft: 1,
            borderRight: 1,
            borderTop: 1,
            borderWidth: 1,
            margin: 1,
            padding: 1
        };
        e.each(["borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle"], function(t, n) {
            e.fx.step[n] = function(e) {
                if (e.end !== "none" && !e.setAttr || e.pos === 1 && !e.setAttr)
                    jQuery.style(e.elem, n, e.end),
                    e.setAttr = !0
            }
        }),
        e.effects.animateClass = function(t, r, o, u) {
            var a = e.speed(r, o, u);
            return this.queue(function() {
                var r = e(this), o = r.attr("class") || "", u, f = a.children ? r.find("*").andSelf() : r;
                f = f.map(function() {
                    var t = e(this);
                    return {
                        el: t,
                        start: i.call(this)
                    }
                }),
                u = function() {
                    e.each(n, function(e, n) {
                        t[n] && r[n + "Class"](t[n])
                    })
                }
                ,
                u(),
                f = f.map(function() {
                    return this.end = i.call(this.el[0]),
                    this.diff = s(this.start, this.end),
                    this
                }),
                r.attr("class", o),
                f = f.map(function() {
                    var t = this
                      , n = e.Deferred()
                      , r = jQuery.extend({}, a, {
                        queue: !1,
                        complete: function() {
                            n.resolve(t)
                        }
                    });
                    return this.el.animate(this.diff, r),
                    n.promise()
                }),
                e.when.apply(e, f.get()).done(function() {
                    u(),
                    e.each(arguments, function() {
                        var t = this.el;
                        e.each(this.diff, function(e) {
                            t.css(e, "")
                        })
                    }),
                    a.complete.call(r[0])
                })
            })
        }
        ,
        e.fn.extend({
            _addClass: e.fn.addClass,
            addClass: function(t, n, r, i) {
                return n ? e.effects.animateClass.call(this, {
                    add: t
                }, n, r, i) : this._addClass(t)
            },
            _removeClass: e.fn.removeClass,
            removeClass: function(t, n, r, i) {
                return n ? e.effects.animateClass.call(this, {
                    remove: t
                }, n, r, i) : this._removeClass(t)
            },
            _toggleClass: e.fn.toggleClass,
            toggleClass: function(n, r, i, s, o) {
                return typeof r == "boolean" || r === t ? i ? e.effects.animateClass.call(this, r ? {
                    add: n
                } : {
                    remove: n
                }, i, s, o) : this._toggleClass(n, r) : e.effects.animateClass.call(this, {
                    toggle: n
                }, r, i, s)
            },
            switchClass: function(t, n, r, i, s) {
                return e.effects.animateClass.call(this, {
                    add: n,
                    remove: t
                }, r, i, s)
            }
        })
    }(),
    function() {
        function i(n, r, i, s) {
            e.isPlainObject(n) && (r = n,
            n = n.effect),
            n = {
                effect: n
            },
            r === t && (r = {}),
            e.isFunction(r) && (s = r,
            i = null,
            r = {});
            if (typeof r == "number" || e.fx.speeds[r])
                s = i,
                i = r,
                r = {};
            return e.isFunction(i) && (s = i,
            i = null),
            r && e.extend(n, r),
            i = i || r.duration,
            n.duration = e.fx.off ? 0 : typeof i == "number" ? i : i in e.fx.speeds ? e.fx.speeds[i] : e.fx.speeds._default,
            n.complete = s || r.complete,
            n
        }
        function s(t) {
            return !t || typeof t == "number" || e.fx.speeds[t] ? !0 : typeof t == "string" && !e.effects.effect[t] ? n && e.effects[t] ? !1 : !0 : !1
        }
        e.extend(e.effects, {
            version: "1.9.0",
            save: function(e, t) {
                for (var n = 0; n < t.length; n++)
                    t[n] !== null && e.data(r + t[n], e[0].style[t[n]])
            },
            restore: function(e, n) {
                var i, s;
                for (s = 0; s < n.length; s++)
                    n[s] !== null && (i = e.data(r + n[s]),
                    i === t && (i = ""),
                    e.css(n[s], i))
            },
            setMode: function(e, t) {
                return t === "toggle" && (t = e.is(":hidden") ? "show" : "hide"),
                t
            },
            getBaseline: function(e, t) {
                var n, r;
                switch (e[0]) {
                case "top":
                    n = 0;
                    break;
                case "middle":
                    n = .5;
                    break;
                case "bottom":
                    n = 1;
                    break;
                default:
                    n = e[0] / t.height
                }
                switch (e[1]) {
                case "left":
                    r = 0;
                    break;
                case "center":
                    r = .5;
                    break;
                case "right":
                    r = 1;
                    break;
                default:
                    r = e[1] / t.width
                }
                return {
                    x: r,
                    y: n
                }
            },
            createWrapper: function(t) {
                if (t.parent().is(".ui-effects-wrapper"))
                    return t.parent();
                var n = {
                    width: t.outerWidth(!0),
                    height: t.outerHeight(!0),
                    "float": t.css("float")
                }
                  , r = e("<div></div>").addClass("ui-effects-wrapper").css({
                    fontSize: "100%",
                    background: "transparent",
                    border: "none",
                    margin: 0,
                    padding: 0
                })
                  , i = {
                    width: t.width(),
                    height: t.height()
                }
                  , s = document.activeElement;
                try {
                    s.id
                } catch (o) {
                    s = document.body
                }
                return t.wrap(r),
                (t[0] === s || e.contains(t[0], s)) && e(s).focus(),
                r = t.parent(),
                t.css("position") === "static" ? (r.css({
                    position: "relative"
                }),
                t.css({
                    position: "relative"
                })) : (e.extend(n, {
                    position: t.css("position"),
                    zIndex: t.css("z-index")
                }),
                e.each(["top", "left", "bottom", "right"], function(e, r) {
                    n[r] = t.css(r),
                    isNaN(parseInt(n[r], 10)) && (n[r] = "auto")
                }),
                t.css({
                    position: "relative",
                    top: 0,
                    left: 0,
                    right: "auto",
                    bottom: "auto"
                })),
                t.css(i),
                r.css(n).show()
            },
            removeWrapper: function(t) {
                var n = document.activeElement;
                return t.parent().is(".ui-effects-wrapper") && (t.parent().replaceWith(t),
                (t[0] === n || e.contains(t[0], n)) && e(n).focus()),
                t
            },
            setTransition: function(t, n, r, i) {
                return i = i || {},
                e.each(n, function(e, n) {
                    var s = t.cssUnit(n);
                    s[0] > 0 && (i[n] = s[0] * r + s[1])
                }),
                i
            }
        }),
        e.fn.extend({
            effect: function(t, r, s, o) {
                function h(t) {
                    function s() {
                        e.isFunction(r) && r.call(n[0]),
                        e.isFunction(t) && t()
                    }
                    var n = e(this)
                      , r = u.complete
                      , i = u.mode;
                    (n.is(":hidden") ? i === "hide" : i === "show") ? s() : l.call(n[0], u, s)
                }
                var u = i.apply(this, arguments)
                  , a = u.mode
                  , f = u.queue
                  , l = e.effects.effect[u.effect]
                  , c = !l && n && e.effects[u.effect];
                return e.fx.off || !l && !c ? a ? this[a](u.duration, u.complete) : this.each(function() {
                    u.complete && u.complete.call(this)
                }) : l ? f === !1 ? this.each(h) : this.queue(f || "fx", h) : c.call(this, {
                    options: u,
                    duration: u.duration,
                    callback: u.complete,
                    mode: u.mode
                })
            },
            _show: e.fn.show,
            show: function(e) {
                if (s(e))
                    return this._show.apply(this, arguments);
                var t = i.apply(this, arguments);
                return t.mode = "show",
                this.effect.call(this, t)
            },
            _hide: e.fn.hide,
            hide: function(e) {
                if (s(e))
                    return this._hide.apply(this, arguments);
                var t = i.apply(this, arguments);
                return t.mode = "hide",
                this.effect.call(this, t)
            },
            __toggle: e.fn.toggle,
            toggle: function(t) {
                if (s(t) || typeof t == "boolean" || e.isFunction(t))
                    return this.__toggle.apply(this, arguments);
                var n = i.apply(this, arguments);
                return n.mode = "toggle",
                this.effect.call(this, n)
            },
            cssUnit: function(t) {
                var n = this.css(t)
                  , r = [];
                return e.each(["em", "px", "%", "pt"], function(e, t) {
                    n.indexOf(t) > 0 && (r = [parseFloat(n), t])
                }),
                r
            }
        })
    }(),
    function() {
        var t = {};
        e.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function(e, n) {
            t[n] = function(t) {
                return Math.pow(t, e + 2)
            }
        }),
        e.extend(t, {
            Sine: function(e) {
                return 1 - Math.cos(e * Math.PI / 2)
            },
            Circ: function(e) {
                return 1 - Math.sqrt(1 - e * e)
            },
            Elastic: function(e) {
                return e === 0 || e === 1 ? e : -Math.pow(2, 8 * (e - 1)) * Math.sin(((e - 1) * 80 - 7.5) * Math.PI / 15)
            },
            Back: function(e) {
                return e * e * (3 * e - 2)
            },
            Bounce: function(e) {
                var t, n = 4;
                while (e < ((t = Math.pow(2, --n)) - 1) / 11)
                    ;
                return 1 / Math.pow(4, 3 - n) - 7.5625 * Math.pow((t * 3 - 2) / 22 - e, 2)
            }
        }),
        e.each(t, function(t, n) {
            e.easing["easeIn" + t] = n,
            e.easing["easeOut" + t] = function(e) {
                return 1 - n(1 - e)
            }
            ,
            e.easing["easeInOut" + t] = function(e) {
                return e < .5 ? n(e * 2) / 2 : 1 - n(e * -2 + 2) / 2
            }
        })
    }()
}(jQuery);
(function(e, t) {
    var n = /up|down|vertical/
      , r = /up|left|vertical|horizontal/;
    e.effects.effect.blind = function(t, i) {
        var s = e(this), o = ["position", "top", "bottom", "left", "right", "height", "width"], u = e.effects.setMode(s, t.mode || "hide"), a = t.direction || "up", f = n.test(a), l = f ? "height" : "width", c = f ? "top" : "left", h = r.test(a), p = {}, d = u === "show", v, m, g;
        s.parent().is(".ui-effects-wrapper") ? e.effects.save(s.parent(), o) : e.effects.save(s, o),
        s.show(),
        v = e.effects.createWrapper(s).css({
            overflow: "hidden"
        }),
        m = v[l](),
        g = parseFloat(v.css(c)) || 0,
        p[l] = d ? m : 0,
        h || (s.css(f ? "bottom" : "right", 0).css(f ? "top" : "left", "auto").css({
            position: "absolute"
        }),
        p[c] = d ? g : m + g),
        d && (v.css(l, 0),
        h || v.css(c, g + m)),
        v.animate(p, {
            duration: t.duration,
            easing: t.easing,
            queue: !1,
            complete: function() {
                u === "hide" && s.hide(),
                e.effects.restore(s, o),
                e.effects.removeWrapper(s),
                i()
            }
        })
    }
}
)(jQuery);
(function(e, t) {
    e.effects.effect.bounce = function(t, n) {
        var r = e(this), i = ["position", "top", "bottom", "left", "right", "height", "width"], s = e.effects.setMode(r, t.mode || "effect"), o = s === "hide", u = s === "show", a = t.direction || "up", f = t.distance, l = t.times || 5, c = l * 2 + (u || o ? 1 : 0), h = t.duration / c, p = t.easing, d = a === "up" || a === "down" ? "top" : "left", v = a === "up" || a === "left", m, g, y, b = r.queue(), w = b.length;
        (u || o) && i.push("opacity"),
        e.effects.save(r, i),
        r.show(),
        e.effects.createWrapper(r),
        f || (f = r[d === "top" ? "outerHeight" : "outerWidth"]() / 3),
        u && (y = {
            opacity: 1
        },
        y[d] = 0,
        r.css("opacity", 0).css(d, v ? -f * 2 : f * 2).animate(y, h, p)),
        o && (f /= Math.pow(2, l - 1)),
        y = {},
        y[d] = 0;
        for (m = 0; m < l; m++)
            g = {},
            g[d] = (v ? "-=" : "+=") + f,
            r.animate(g, h, p).animate(y, h, p),
            f = o ? f * 2 : f / 2;
        o && (g = {
            opacity: 0
        },
        g[d] = (v ? "-=" : "+=") + f,
        r.animate(g, h, p)),
        r.queue(function() {
            o && r.hide(),
            e.effects.restore(r, i),
            e.effects.removeWrapper(r),
            n()
        }),
        w > 1 && b.splice.apply(b, [1, 0].concat(b.splice(w, c + 1))),
        r.dequeue()
    }
}
)(jQuery);
(function(e, t) {
    e.effects.effect.clip = function(t, n) {
        var r = e(this), i = ["position", "top", "bottom", "left", "right", "height", "width"], s = e.effects.setMode(r, t.mode || "hide"), o = s === "show", u = t.direction || "vertical", a = u === "vertical", f = a ? "height" : "width", l = a ? "top" : "left", c = {}, h, p, d;
        e.effects.save(r, i),
        r.show(),
        h = e.effects.createWrapper(r).css({
            overflow: "hidden"
        }),
        p = r[0].tagName === "IMG" ? h : r,
        d = p[f](),
        o && (p.css(f, 0),
        p.css(l, d / 2)),
        c[f] = o ? d : 0,
        c[l] = o ? 0 : d / 2,
        p.animate(c, {
            queue: !1,
            duration: t.duration,
            easing: t.easing,
            complete: function() {
                o || r.hide(),
                e.effects.restore(r, i),
                e.effects.removeWrapper(r),
                n()
            }
        })
    }
}
)(jQuery);
(function(e, t) {
    e.effects.effect.drop = function(t, n) {
        var r = e(this), i = ["position", "top", "bottom", "left", "right", "opacity", "height", "width"], s = e.effects.setMode(r, t.mode || "hide"), o = s === "show", u = t.direction || "left", a = u === "up" || u === "down" ? "top" : "left", f = u === "up" || u === "left" ? "pos" : "neg", l = {
            opacity: o ? 1 : 0
        }, c;
        e.effects.save(r, i),
        r.show(),
        e.effects.createWrapper(r),
        c = t.distance || r[a === "top" ? "outerHeight" : "outerWidth"](!0) / 2,
        o && r.css("opacity", 0).css(a, f === "pos" ? -c : c),
        l[a] = (o ? f === "pos" ? "+=" : "-=" : f === "pos" ? "-=" : "+=") + c,
        r.animate(l, {
            queue: !1,
            duration: t.duration,
            easing: t.easing,
            complete: function() {
                s === "hide" && r.hide(),
                e.effects.restore(r, i),
                e.effects.removeWrapper(r),
                n()
            }
        })
    }
}
)(jQuery);
(function(e, t) {
    e.effects.effect.explode = function(t, n) {
        function y() {
            c.push(this),
            c.length === r * i && b()
        }
        function b() {
            s.css({
                visibility: "visible"
            }),
            e(c).remove(),
            u || s.hide(),
            n()
        }
        var r = t.pieces ? Math.round(Math.sqrt(t.pieces)) : 3, i = r, s = e(this), o = e.effects.setMode(s, t.mode || "hide"), u = o === "show", a = s.show().css("visibility", "hidden").offset(), f = Math.ceil(s.outerWidth() / i), l = Math.ceil(s.outerHeight() / r), c = [], h, p, d, v, m, g;
        for (h = 0; h < r; h++) {
            v = a.top + h * l,
            g = h - (r - 1) / 2;
            for (p = 0; p < i; p++)
                d = a.left + p * f,
                m = p - (i - 1) / 2,
                s.clone().appendTo("body").wrap("<div></div>").css({
                    position: "absolute",
                    visibility: "visible",
                    left: -p * f,
                    top: -h * l
                }).parent().addClass("ui-effects-explode").css({
                    position: "absolute",
                    overflow: "hidden",
                    width: f,
                    height: l,
                    left: d + (u ? m * f : 0),
                    top: v + (u ? g * l : 0),
                    opacity: u ? 0 : 1
                }).animate({
                    left: d + (u ? 0 : m * f),
                    top: v + (u ? 0 : g * l),
                    opacity: u ? 1 : 0
                }, t.duration || 500, t.easing, y)
        }
    }
}
)(jQuery);
(function(e, t) {
    e.effects.effect.fade = function(t, n) {
        var r = e(this)
          , i = e.effects.setMode(r, t.mode || "toggle");
        r.animate({
            opacity: i
        }, {
            queue: !1,
            duration: t.duration,
            easing: t.easing,
            complete: n
        })
    }
}
)(jQuery);
(function(e, t) {
    e.effects.effect.fold = function(t, n) {
        var r = e(this), i = ["position", "top", "bottom", "left", "right", "height", "width"], s = e.effects.setMode(r, t.mode || "hide"), o = s === "show", u = s === "hide", a = t.size || 15, f = /([0-9]+)%/.exec(a), l = !!t.horizFirst, c = o !== l, h = c ? ["width", "height"] : ["height", "width"], p = t.duration / 2, d, v, m = {}, g = {};
        e.effects.save(r, i),
        r.show(),
        d = e.effects.createWrapper(r).css({
            overflow: "hidden"
        }),
        v = c ? [d.width(), d.height()] : [d.height(), d.width()],
        f && (a = parseInt(f[1], 10) / 100 * v[u ? 0 : 1]),
        o && d.css(l ? {
            height: 0,
            width: a
        } : {
            height: a,
            width: 0
        }),
        m[h[0]] = o ? v[0] : a,
        g[h[1]] = o ? v[1] : 0,
        d.animate(m, p, t.easing).animate(g, p, t.easing, function() {
            u && r.hide(),
            e.effects.restore(r, i),
            e.effects.removeWrapper(r),
            n()
        })
    }
}
)(jQuery);
(function(e, t) {
    e.effects.effect.highlight = function(t, n) {
        var r = e(this)
          , i = ["backgroundImage", "backgroundColor", "opacity"]
          , s = e.effects.setMode(r, t.mode || "show")
          , o = {
            backgroundColor: r.css("backgroundColor")
        };
        s === "hide" && (o.opacity = 0),
        e.effects.save(r, i),
        r.show().css({
            backgroundImage: "none",
            backgroundColor: t.color || "#ffff99"
        }).animate(o, {
            queue: !1,
            duration: t.duration,
            easing: t.easing,
            complete: function() {
                s === "hide" && r.hide(),
                e.effects.restore(r, i),
                n()
            }
        })
    }
}
)(jQuery);
(function(e, t) {
    e.effects.effect.pulsate = function(t, n) {
        var r = e(this), i = e.effects.setMode(r, t.mode || "show"), s = i === "show", o = i === "hide", u = s || i === "hide", a = (t.times || 5) * 2 + (u ? 1 : 0), f = t.duration / a, l = 0, c = r.queue(), h = c.length, p;
        if (s || !r.is(":visible"))
            r.css("opacity", 0).show(),
            l = 1;
        for (p = 1; p < a; p++)
            r.animate({
                opacity: l
            }, f, t.easing),
            l = 1 - l;
        r.animate({
            opacity: l
        }, f, t.easing),
        r.queue(function() {
            o && r.hide(),
            n()
        }),
        h > 1 && c.splice.apply(c, [1, 0].concat(c.splice(h, a + 1))),
        r.dequeue()
    }
}
)(jQuery);
(function(e, t) {
    e.effects.effect.puff = function(t, n) {
        var r = e(this)
          , i = e.effects.setMode(r, t.mode || "hide")
          , s = i === "hide"
          , o = parseInt(t.percent, 10) || 150
          , u = o / 100
          , a = {
            height: r.height(),
            width: r.width()
        };
        e.extend(t, {
            effect: "scale",
            queue: !1,
            fade: !0,
            mode: i,
            complete: n,
            percent: s ? o : 100,
            from: s ? a : {
                height: a.height * u,
                width: a.width * u
            }
        }),
        r.effect(t)
    }
    ,
    e.effects.effect.scale = function(t, n) {
        var r = e(this)
          , i = e.extend(!0, {}, t)
          , s = e.effects.setMode(r, t.mode || "effect")
          , o = parseInt(t.percent, 10) || (parseInt(t.percent, 10) === 0 ? 0 : s === "hide" ? 0 : 100)
          , u = t.direction || "both"
          , a = t.origin
          , f = {
            height: r.height(),
            width: r.width(),
            outerHeight: r.outerHeight(),
            outerWidth: r.outerWidth()
        }
          , l = {
            y: u !== "horizontal" ? o / 100 : 1,
            x: u !== "vertical" ? o / 100 : 1
        };
        i.effect = "size",
        i.queue = !1,
        i.complete = n,
        s !== "effect" && (i.origin = a || ["middle", "center"],
        i.restore = !0),
        i.from = t.from || (s === "show" ? {
            height: 0,
            width: 0
        } : f),
        i.to = {
            height: f.height * l.y,
            width: f.width * l.x,
            outerHeight: f.outerHeight * l.y,
            outerWidth: f.outerWidth * l.x
        },
        i.fade && (s === "show" && (i.from.opacity = 0,
        i.to.opacity = 1),
        s === "hide" && (i.from.opacity = 1,
        i.to.opacity = 0)),
        r.effect(i)
    }
    ,
    e.effects.effect.size = function(t, n) {
        var r = e(this), i = ["position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity"], s = ["position", "top", "bottom", "left", "right", "overflow", "opacity"], o = ["width", "height", "overflow"], u = ["fontSize"], a = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"], f = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"], l = e.effects.setMode(r, t.mode || "effect"), c = t.restore || l !== "effect", h = t.scale || "both", p = t.origin || ["middle", "center"], d, v, m, g = r.css("position");
        l === "show" && r.show(),
        d = {
            height: r.height(),
            width: r.width(),
            outerHeight: r.outerHeight(),
            outerWidth: r.outerWidth()
        },
        r.from = t.from || d,
        r.to = t.to || d,
        m = {
            from: {
                y: r.from.height / d.height,
                x: r.from.width / d.width
            },
            to: {
                y: r.to.height / d.height,
                x: r.to.width / d.width
            }
        };
        if (h === "box" || h === "both")
            m.from.y !== m.to.y && (i = i.concat(a),
            r.from = e.effects.setTransition(r, a, m.from.y, r.from),
            r.to = e.effects.setTransition(r, a, m.to.y, r.to)),
            m.from.x !== m.to.x && (i = i.concat(f),
            r.from = e.effects.setTransition(r, f, m.from.x, r.from),
            r.to = e.effects.setTransition(r, f, m.to.x, r.to));
        (h === "content" || h === "both") && m.from.y !== m.to.y && (i = i.concat(u),
        r.from = e.effects.setTransition(r, u, m.from.y, r.from),
        r.to = e.effects.setTransition(r, u, m.to.y, r.to)),
        e.effects.save(r, c ? i : s),
        r.show(),
        e.effects.createWrapper(r),
        r.css("overflow", "hidden").css(r.from),
        p && (v = e.effects.getBaseline(p, d),
        r.from.top = (d.outerHeight - r.outerHeight()) * v.y,
        r.from.left = (d.outerWidth - r.outerWidth()) * v.x,
        r.to.top = (d.outerHeight - r.to.outerHeight) * v.y,
        r.to.left = (d.outerWidth - r.to.outerWidth) * v.x),
        r.css(r.from);
        if (h === "content" || h === "both")
            a = a.concat(["marginTop", "marginBottom"]).concat(u),
            f = f.concat(["marginLeft", "marginRight"]),
            o = i.concat(a).concat(f),
            r.find("*[width]").each(function() {
                var n = e(this)
                  , r = {
                    height: n.height(),
                    width: n.width()
                };
                c && e.effects.save(n, o),
                n.from = {
                    height: r.height * m.from.y,
                    width: r.width * m.from.x
                },
                n.to = {
                    height: r.height * m.to.y,
                    width: r.width * m.to.x
                },
                m.from.y !== m.to.y && (n.from = e.effects.setTransition(n, a, m.from.y, n.from),
                n.to = e.effects.setTransition(n, a, m.to.y, n.to)),
                m.from.x !== m.to.x && (n.from = e.effects.setTransition(n, f, m.from.x, n.from),
                n.to = e.effects.setTransition(n, f, m.to.x, n.to)),
                n.css(n.from),
                n.animate(n.to, t.duration, t.easing, function() {
                    c && e.effects.restore(n, o)
                })
            });
        r.animate(r.to, {
            queue: !1,
            duration: t.duration,
            easing: t.easing,
            complete: function() {
                r.to.opacity === 0 && r.css("opacity", r.from.opacity),
                l === "hide" && r.hide(),
                e.effects.restore(r, c ? i : s),
                c || (g === "static" ? r.css({
                    position: "relative",
                    top: r.to.top,
                    left: r.to.left
                }) : e.each(["top", "left"], function(e, t) {
                    r.css(t, function(t, n) {
                        var i = parseInt(n, 10)
                          , s = e ? r.to.left : r.to.top;
                        return n === "auto" ? s + "px" : i + s + "px"
                    })
                })),
                e.effects.removeWrapper(r),
                n()
            }
        })
    }
}
)(jQuery);
(function(e, t) {
    e.effects.effect.shake = function(t, n) {
        var r = e(this), i = ["position", "top", "bottom", "left", "right", "height", "width"], s = e.effects.setMode(r, t.mode || "effect"), o = t.direction || "left", u = t.distance || 20, a = t.times || 3, f = a * 2 + 1, l = Math.round(t.duration / f), c = o === "up" || o === "down" ? "top" : "left", h = o === "up" || o === "left", p = {}, d = {}, v = {}, m, g = r.queue(), y = g.length;
        e.effects.save(r, i),
        r.show(),
        e.effects.createWrapper(r),
        p[c] = (h ? "-=" : "+=") + u,
        d[c] = (h ? "+=" : "-=") + u * 2,
        v[c] = (h ? "-=" : "+=") + u * 2,
        r.animate(p, l, t.easing);
        for (m = 1; m < a; m++)
            r.animate(d, l, t.easing).animate(v, l, t.easing);
        r.animate(d, l, t.easing).animate(p, l / 2, t.easing).queue(function() {
            s === "hide" && r.hide(),
            e.effects.restore(r, i),
            e.effects.removeWrapper(r),
            n()
        }),
        y > 1 && g.splice.apply(g, [1, 0].concat(g.splice(y, f + 1))),
        r.dequeue()
    }
}
)(jQuery);
(function(e, t) {
    e.effects.effect.slide = function(t, n) {
        var r = e(this), i = ["position", "top", "bottom", "left", "right", "width", "height"], s = e.effects.setMode(r, t.mode || "show"), o = s === "show", u = t.direction || "left", a = u === "up" || u === "down" ? "top" : "left", f = u === "up" || u === "left", l, c = {};
        e.effects.save(r, i),
        r.show(),
        l = t.distance || r[a === "top" ? "outerHeight" : "outerWidth"](!0),
        e.effects.createWrapper(r).css({
            overflow: "hidden"
        }),
        o && r.css(a, f ? isNaN(l) ? "-" + l : -l : l),
        c[a] = (o ? f ? "+=" : "-=" : f ? "-=" : "+=") + l,
        r.animate(c, {
            queue: !1,
            duration: t.duration,
            easing: t.easing,
            complete: function() {
                s === "hide" && r.hide(),
                e.effects.restore(r, i),
                e.effects.removeWrapper(r),
                n()
            }
        })
    }
}
)(jQuery);
(function(e, t) {
    e.effects.effect.transfer = function(t, n) {
        var r = e(this)
          , i = e(t.to)
          , s = i.css("position") === "fixed"
          , o = e("body")
          , u = s ? o.scrollTop() : 0
          , a = s ? o.scrollLeft() : 0
          , f = i.offset()
          , l = {
            top: f.top - u,
            left: f.left - a,
            height: i.innerHeight(),
            width: i.innerWidth()
        }
          , c = r.offset()
          , h = e('<div class="ui-effects-transfer"></div>').appendTo(document.body).addClass(t.className).css({
            top: c.top - u,
            left: c.left - a,
            height: r.innerHeight(),
            width: r.innerWidth(),
            position: s ? "fixed" : "absolute"
        }).animate(l, t.duration, t.easing, function() {
            h.remove(),
            n()
        })
    }
}
)(jQuery);
/*
 AngularJS v1.4.5
 (c) 2010-2015 Google, Inc. http://angularjs.org
 License: MIT
*/
(function(N, W, u) {
    'use strict';
    function G(b) {
        return function() {
            var a = arguments[0], c;
            c = "[" + (b ? b + ":" : "") + a + "] http://errors.angularjs.org/1.4.5/" + (b ? b + "/" : "") + a;
            for (a = 1; a < arguments.length; a++) {
                c = c + (1 == a ? "?" : "&") + "p" + (a - 1) + "=";
                var d = encodeURIComponent, e;
                e = arguments[a];
                e = "function" == typeof e ? e.toString().replace(/ \{[\s\S]*$/, "") : "undefined" == typeof e ? "undefined" : "string" != typeof e ? JSON.stringify(e) : e;
                c += d(e)
            }
            return Error(c)
        }
    }
    function Da(b) {
        if (null == b || Ya(b))
            return !1;
        var a = "length"in Object(b) && b.length;
        return b.nodeType === pa && a ? !0 : H(b) || K(b) || 0 === a || "number" === typeof a && 0 < a && a - 1 in b
    }
    function n(b, a, c) {
        var d, e;
        if (b)
            if (B(b))
                for (d in b)
                    "prototype" == d || "length" == d || "name" == d || b.hasOwnProperty && !b.hasOwnProperty(d) || a.call(c, b[d], d, b);
            else if (K(b) || Da(b)) {
                var f = "object" !== typeof b;
                d = 0;
                for (e = b.length; d < e; d++)
                    (f || d in b) && a.call(c, b[d], d, b)
            } else if (b.forEach && b.forEach !== n)
                b.forEach(a, c, b);
            else if (lc(b))
                for (d in b)
                    a.call(c, b[d], d, b);
            else if ("function" === typeof b.hasOwnProperty)
                for (d in b)
                    b.hasOwnProperty(d) && a.call(c, b[d], d, b);
            else
                for (d in b)
                    Na.call(b, d) && a.call(c, b[d], d, b);
        return b
    }
    function mc(b, a, c) {
        for (var d = Object.keys(b).sort(), e = 0; e < d.length; e++)
            a.call(c, b[d[e]], d[e]);
        return d
    }
    function nc(b) {
        return function(a, c) {
            b(c, a)
        }
    }
    function Ud() {
        return ++mb
    }
    function oc(b, a) {
        a ? b.$$hashKey = a : delete b.$$hashKey
    }
    function Mb(b, a, c) {
        for (var d = b.$$hashKey, e = 0, f = a.length; e < f; ++e) {
            var g = a[e];
            if (D(g) || B(g))
                for (var h = Object.keys(g), l = 0, k = h.length; l < k; l++) {
                    var m = h[l]
                      , q = g[m];
                    c && D(q) ? ca(q) ? b[m] = new Date(q.valueOf()) : Oa(q) ? b[m] = new RegExp(q) : (D(b[m]) || (b[m] = K(q) ? [] : {}),
                    Mb(b[m], [q], !0)) : b[m] = q
                }
        }
        oc(b, d);
        return b
    }
    function Q(b) {
        return Mb(b, xa.call(arguments, 1), !1)
    }
    function Vd(b) {
        return Mb(b, xa.call(arguments, 1), !0)
    }
    function Y(b) {
        return parseInt(b, 10)
    }
    function Nb(b, a) {
        return Q(Object.create(b), a)
    }
    function v() {}
    function Za(b) {
        return b
    }
    function qa(b) {
        return function() {
            return b
        }
    }
    function pc(b) {
        return B(b.toString) && b.toString !== Object.prototype.toString
    }
    function y(b) {
        return "undefined" === typeof b
    }
    function x(b) {
        return "undefined" !== typeof b
    }
    function D(b) {
        return null !== b && "object" === typeof b
    }
    function lc(b) {
        return null !== b && "object" === typeof b && !qc(b)
    }
    function H(b) {
        return "string" === typeof b
    }
    function X(b) {
        return "number" === typeof b
    }
    function ca(b) {
        return "[object Date]" === sa.call(b)
    }
    function B(b) {
        return "function" === typeof b
    }
    function Oa(b) {
        return "[object RegExp]" === sa.call(b)
    }
    function Ya(b) {
        return b && b.window === b
    }
    function $a(b) {
        return b && b.$evalAsync && b.$watch
    }
    function ab(b) {
        return "boolean" === typeof b
    }
    function rc(b) {
        return !(!b || !(b.nodeName || b.prop && b.attr && b.find))
    }
    function Wd(b) {
        var a = {};
        b = b.split(",");
        var c;
        for (c = 0; c < b.length; c++)
            a[b[c]] = !0;
        return a
    }
    function ta(b) {
        return I(b.nodeName || b[0] && b[0].nodeName)
    }
    function bb(b, a) {
        var c = b.indexOf(a);
        0 <= c && b.splice(c, 1);
        return c
    }
    function fa(b, a, c, d) {
        if (Ya(b) || $a(b))
            throw Ea("cpws");
        if (sc.test(sa.call(a)))
            throw Ea("cpta");
        if (a) {
            if (b === a)
                throw Ea("cpi");
            c = c || [];
            d = d || [];
            D(b) && (c.push(b),
            d.push(a));
            var e;
            if (K(b))
                for (e = a.length = 0; e < b.length; e++)
                    a.push(fa(b[e], null, c, d));
            else {
                var f = a.$$hashKey;
                K(a) ? a.length = 0 : n(a, function(b, c) {
                    delete a[c]
                });
                if (lc(b))
                    for (e in b)
                        a[e] = fa(b[e], null, c, d);
                else if (b && "function" === typeof b.hasOwnProperty)
                    for (e in b)
                        b.hasOwnProperty(e) && (a[e] = fa(b[e], null, c, d));
                else
                    for (e in b)
                        Na.call(b, e) && (a[e] = fa(b[e], null, c, d));
                oc(a, f)
            }
        } else if (a = b,
        D(b)) {
            if (c && -1 !== (f = c.indexOf(b)))
                return d[f];
            if (K(b))
                return fa(b, [], c, d);
            if (sc.test(sa.call(b)))
                a = new b.constructor(b);
            else if (ca(b))
                a = new Date(b.getTime());
            else if (Oa(b))
                a = new RegExp(b.source,b.toString().match(/[^\/]*$/)[0]),
                a.lastIndex = b.lastIndex;
            else
                return e = Object.create(qc(b)),
                fa(b, e, c, d);
            d && (c.push(b),
            d.push(a))
        }
        return a
    }
    function ia(b, a) {
        if (K(b)) {
            a = a || [];
            for (var c = 0, d = b.length; c < d; c++)
                a[c] = b[c]
        } else if (D(b))
            for (c in a = a || {},
            b)
                if ("$" !== c.charAt(0) || "$" !== c.charAt(1))
                    a[c] = b[c];
        return a || b
    }
    function ka(b, a) {
        if (b === a)
            return !0;
        if (null === b || null === a)
            return !1;
        if (b !== b && a !== a)
            return !0;
        var c = typeof b, d;
        if (c == typeof a && "object" == c)
            if (K(b)) {
                if (!K(a))
                    return !1;
                if ((c = b.length) == a.length) {
                    for (d = 0; d < c; d++)
                        if (!ka(b[d], a[d]))
                            return !1;
                    return !0
                }
            } else {
                if (ca(b))
                    return ca(a) ? ka(b.getTime(), a.getTime()) : !1;
                if (Oa(b))
                    return Oa(a) ? b.toString() == a.toString() : !1;
                if ($a(b) || $a(a) || Ya(b) || Ya(a) || K(a) || ca(a) || Oa(a))
                    return !1;
                c = ga();
                for (d in b)
                    if ("$" !== d.charAt(0) && !B(b[d])) {
                        if (!ka(b[d], a[d]))
                            return !1;
                        c[d] = !0
                    }
                for (d in a)
                    if (!(d in c || "$" === d.charAt(0) || a[d] === u || B(a[d])))
                        return !1;
                return !0
            }
        return !1
    }
    function cb(b, a, c) {
        return b.concat(xa.call(a, c))
    }
    function tc(b, a) {
        var c = 2 < arguments.length ? xa.call(arguments, 2) : [];
        return !B(a) || a instanceof RegExp ? a : c.length ? function() {
            return arguments.length ? a.apply(b, cb(c, arguments, 0)) : a.apply(b, c)
        }
        : function() {
            return arguments.length ? a.apply(b, arguments) : a.call(b)
        }
    }
    function Xd(b, a) {
        var c = a;
        "string" === typeof b && "$" === b.charAt(0) && "$" === b.charAt(1) ? c = u : Ya(a) ? c = "$WINDOW" : a && W === a ? c = "$DOCUMENT" : $a(a) && (c = "$SCOPE");
        return c
    }
    function db(b, a) {
        if ("undefined" === typeof b)
            return u;
        X(a) || (a = a ? 2 : null);
        return JSON.stringify(b, Xd, a)
    }
    function uc(b) {
        return H(b) ? JSON.parse(b) : b
    }
    function vc(b, a) {
        var c = Date.parse("Jan 01, 1970 00:00:00 " + b) / 6E4;
        return isNaN(c) ? a : c
    }
    function Ob(b, a, c) {
        c = c ? -1 : 1;
        var d = vc(a, b.getTimezoneOffset());
        a = b;
        b = c * (d - b.getTimezoneOffset());
        a = new Date(a.getTime());
        a.setMinutes(a.getMinutes() + b);
        return a
    }
    function ua(b) {
        b = z(b).clone();
        try {
            b.empty()
        } catch (a) {}
        var c = z("<div>").append(b).html();
        try {
            return b[0].nodeType === Pa ? I(c) : c.match(/^(<[^>]+>)/)[1].replace(/^<([\w\-]+)/, function(a, b) {
                return "<" + I(b)
            })
        } catch (d) {
            return I(c)
        }
    }
    function wc(b) {
        try {
            return decodeURIComponent(b)
        } catch (a) {}
    }
    function xc(b) {
        var a = {};
        n((b || "").split("&"), function(b) {
            var d, e, f;
            b && (e = b = b.replace(/\+/g, "%20"),
            d = b.indexOf("="),
            -1 !== d && (e = b.substring(0, d),
            f = b.substring(d + 1)),
            e = wc(e),
            x(e) && (f = x(f) ? wc(f) : !0,
            Na.call(a, e) ? K(a[e]) ? a[e].push(f) : a[e] = [a[e], f] : a[e] = f))
        });
        return a
    }
    function Pb(b) {
        var a = [];
        n(b, function(b, d) {
            K(b) ? n(b, function(b) {
                a.push(ma(d, !0) + (!0 === b ? "" : "=" + ma(b, !0)))
            }) : a.push(ma(d, !0) + (!0 === b ? "" : "=" + ma(b, !0)))
        });
        return a.length ? a.join("&") : ""
    }
    function nb(b) {
        return ma(b, !0).replace(/%26/gi, "&").replace(/%3D/gi, "=").replace(/%2B/gi, "+")
    }
    function ma(b, a) {
        return encodeURIComponent(b).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%3B/gi, ";").replace(/%20/g, a ? "%20" : "+")
    }
    function Yd(b, a) {
        var c, d, e = Qa.length;
        for (d = 0; d < e; ++d)
            if (c = Qa[d] + a,
            H(c = b.getAttribute(c)))
                return c;
        return null
    }
    function Zd(b, a) {
        var c, d, e = {};
        n(Qa, function(a) {
            a += "app";
            !c && b.hasAttribute && b.hasAttribute(a) && (c = b,
            d = b.getAttribute(a))
        });
        n(Qa, function(a) {
            a += "app";
            var e;
            !c && (e = b.querySelector("[" + a.replace(":", "\\:") + "]")) && (c = e,
            d = e.getAttribute(a))
        });
        c && (e.strictDi = null !== Yd(c, "strict-di"),
        a(c, d ? [d] : [], e))
    }
    function yc(b, a, c) {
        D(c) || (c = {});
        c = Q({
            strictDi: !1
        }, c);
        var d = function() {
            b = z(b);
            if (b.injector()) {
                var d = b[0] === W ? "document" : ua(b);
                throw Ea("btstrpd", d.replace(/</, "&lt;").replace(/>/, "&gt;"));
            }
            a = a || [];
            a.unshift(["$provide", function(a) {
                a.value("$rootElement", b)
            }
            ]);
            c.debugInfoEnabled && a.push(["$compileProvider", function(a) {
                a.debugInfoEnabled(!0)
            }
            ]);
            a.unshift("ng");
            d = eb(a, c.strictDi);
            d.invoke(["$rootScope", "$rootElement", "$compile", "$injector", function(a, b, c, d) {
                a.$apply(function() {
                    b.data("$injector", d);
                    c(b)(a)
                })
            }
            ]);
            return d
        }
          , e = /^NG_ENABLE_DEBUG_INFO!/
          , f = /^NG_DEFER_BOOTSTRAP!/;
        N && e.test(N.name) && (c.debugInfoEnabled = !0,
        N.name = N.name.replace(e, ""));
        if (N && !f.test(N.name))
            return d();
        N.name = N.name.replace(f, "");
        aa.resumeBootstrap = function(b) {
            n(b, function(b) {
                a.push(b)
            });
            return d()
        }
        ;
        B(aa.resumeDeferredBootstrap) && aa.resumeDeferredBootstrap()
    }
    function $d() {
        N.name = "NG_ENABLE_DEBUG_INFO!" + N.name;
        N.location.reload()
    }
    function ae(b) {
        b = aa.element(b).injector();
        if (!b)
            throw Ea("test");
        return b.get("$$testability")
    }
    function zc(b, a) {
        a = a || "_";
        return b.replace(be, function(b, d) {
            return (d ? a : "") + b.toLowerCase()
        })
    }
    function ce() {
        var b;
        if (!Ac) {
            var a = ob();
            la = N.jQuery;
            x(a) && (la = null === a ? u : N[a]);
            la && la.fn.on ? (z = la,
            Q(la.fn, {
                scope: Ra.scope,
                isolateScope: Ra.isolateScope,
                controller: Ra.controller,
                injector: Ra.injector,
                inheritedData: Ra.inheritedData
            }),
            b = la.cleanData,
            la.cleanData = function(a) {
                var d;
                if (Qb)
                    Qb = !1;
                else
                    for (var e = 0, f; null != (f = a[e]); e++)
                        (d = la._data(f, "events")) && d.$destroy && la(f).triggerHandler("$destroy");
                b(a)
            }
            ) : z = R;
            aa.element = z;
            Ac = !0
        }
    }
    function pb(b, a, c) {
        if (!b)
            throw Ea("areq", a || "?", c || "required");
        return b
    }
    function Sa(b, a, c) {
        c && K(b) && (b = b[b.length - 1]);
        pb(B(b), a, "not a function, got " + (b && "object" === typeof b ? b.constructor.name || "Object" : typeof b));
        return b
    }
    function Ta(b, a) {
        if ("hasOwnProperty" === b)
            throw Ea("badname", a);
    }
    function Bc(b, a, c) {
        if (!a)
            return b;
        a = a.split(".");
        for (var d, e = b, f = a.length, g = 0; g < f; g++)
            d = a[g],
            b && (b = (e = b)[d]);
        return !c && B(b) ? tc(e, b) : b
    }
    function qb(b) {
        var a = b[0];
        b = b[b.length - 1];
        var c = [a];
        do {
            a = a.nextSibling;
            if (!a)
                break;
            c.push(a)
        } while (a !== b);
        return z(c)
    }
    function ga() {
        return Object.create(null)
    }
    function de(b) {
        function a(a, b, c) {
            return a[b] || (a[b] = c())
        }
        var c = G("$injector")
          , d = G("ng");
        b = a(b, "angular", Object);
        b.$$minErr = b.$$minErr || G;
        return a(b, "module", function() {
            var b = {};
            return function(f, g, h) {
                if ("hasOwnProperty" === f)
                    throw d("badname", "module");
                g && b.hasOwnProperty(f) && (b[f] = null);
                return a(b, f, function() {
                    function a(b, c, e, f) {
                        f || (f = d);
                        return function() {
                            f[e || "push"]([b, c, arguments]);
                            return E
                        }
                    }
                    function b(a, c) {
                        return function(b, e) {
                            e && B(e) && (e.$$moduleName = f);
                            d.push([a, c, arguments]);
                            return E
                        }
                    }
                    if (!g)
                        throw c("nomod", f);
                    var d = []
                      , e = []
                      , s = []
                      , t = a("$injector", "invoke", "push", e)
                      , E = {
                        _invokeQueue: d,
                        _configBlocks: e,
                        _runBlocks: s,
                        requires: g,
                        name: f,
                        provider: b("$provide", "provider"),
                        factory: b("$provide", "factory"),
                        service: b("$provide", "service"),
                        value: a("$provide", "value"),
                        constant: a("$provide", "constant", "unshift"),
                        decorator: b("$provide", "decorator"),
                        animation: b("$animateProvider", "register"),
                        filter: b("$filterProvider", "register"),
                        controller: b("$controllerProvider", "register"),
                        directive: b("$compileProvider", "directive"),
                        config: t,
                        run: function(a) {
                            s.push(a);
                            return this
                        }
                    };
                    h && t(h);
                    return E
                })
            }
        })
    }
    function ee(b) {
        Q(b, {
            bootstrap: yc,
            copy: fa,
            extend: Q,
            merge: Vd,
            equals: ka,
            element: z,
            forEach: n,
            injector: eb,
            noop: v,
            bind: tc,
            toJson: db,
            fromJson: uc,
            identity: Za,
            isUndefined: y,
            isDefined: x,
            isString: H,
            isFunction: B,
            isObject: D,
            isNumber: X,
            isElement: rc,
            isArray: K,
            version: fe,
            isDate: ca,
            lowercase: I,
            uppercase: rb,
            callbacks: {
                counter: 0
            },
            getTestability: ae,
            $$minErr: G,
            $$csp: Fa,
            reloadWithDebugInfo: $d
        });
        Rb = de(N);
        Rb("ng", ["ngLocale"], ["$provide", function(a) {
            a.provider({
                $$sanitizeUri: ge
            });
            a.provider("$compile", Cc).directive({
                a: he,
                input: Dc,
                textarea: Dc,
                form: ie,
                script: je,
                select: ke,
                style: le,
                option: me,
                ngBind: ne,
                ngBindHtml: oe,
                ngBindTemplate: pe,
                ngClass: qe,
                ngClassEven: re,
                ngClassOdd: se,
                ngCloak: te,
                ngController: ue,
                ngForm: ve,
                ngHide: we,
                ngIf: xe,
                ngInclude: ye,
                ngInit: ze,
                ngNonBindable: Ae,
                ngPluralize: Be,
                ngRepeat: Ce,
                ngShow: De,
                ngStyle: Ee,
                ngSwitch: Fe,
                ngSwitchWhen: Ge,
                ngSwitchDefault: He,
                ngOptions: Ie,
                ngTransclude: Je,
                ngModel: Ke,
                ngList: Le,
                ngChange: Me,
                pattern: Ec,
                ngPattern: Ec,
                required: Fc,
                ngRequired: Fc,
                minlength: Gc,
                ngMinlength: Gc,
                maxlength: Hc,
                ngMaxlength: Hc,
                ngValue: Ne,
                ngModelOptions: Oe
            }).directive({
                ngInclude: Pe
            }).directive(sb).directive(Ic);
            a.provider({
                $anchorScroll: Qe,
                $animate: Re,
                $animateCss: Se,
                $$animateQueue: Te,
                $$AnimateRunner: Ue,
                $browser: Ve,
                $cacheFactory: We,
                $controller: Xe,
                $document: Ye,
                $exceptionHandler: Ze,
                $filter: Jc,
                $$forceReflow: $e,
                $interpolate: af,
                $interval: bf,
                $http: cf,
                $httpParamSerializer: df,
                $httpParamSerializerJQLike: ef,
                $httpBackend: ff,
                $location: gf,
                $log: hf,
                $parse: jf,
                $rootScope: kf,
                $q: lf,
                $$q: mf,
                $sce: nf,
                $sceDelegate: of,
                $sniffer: pf,
                $templateCache: qf,
                $templateRequest: rf,
                $$testability: sf,
                $timeout: tf,
                $window: uf,
                $$rAF: vf,
                $$jqLite: wf,
                $$HashMap: xf,
                $$cookieReader: yf
            })
        }
        ])
    }
    function fb(b) {
        return b.replace(zf, function(a, b, d, e) {
            return e ? d.toUpperCase() : d
        }).replace(Af, "Moz$1")
    }
    function Kc(b) {
        b = b.nodeType;
        return b === pa || !b || 9 === b
    }
    function Lc(b, a) {
        var c, d, e = a.createDocumentFragment(), f = [];
        if (Sb.test(b)) {
            c = c || e.appendChild(a.createElement("div"));
            d = (Bf.exec(b) || ["", ""])[1].toLowerCase();
            d = na[d] || na._default;
            c.innerHTML = d[1] + b.replace(Cf, "<$1></$2>") + d[2];
            for (d = d[0]; d--; )
                c = c.lastChild;
            f = cb(f, c.childNodes);
            c = e.firstChild;
            c.textContent = ""
        } else
            f.push(a.createTextNode(b));
        e.textContent = "";
        e.innerHTML = "";
        n(f, function(a) {
            e.appendChild(a)
        });
        return e
    }
    function R(b) {
        if (b instanceof R)
            return b;
        var a;
        H(b) && (b = T(b),
        a = !0);
        if (!(this instanceof R)) {
            if (a && "<" != b.charAt(0))
                throw Tb("nosel");
            return new R(b)
        }
        if (a) {
            a = W;
            var c;
            b = (c = Df.exec(b)) ? [a.createElement(c[1])] : (c = Lc(b, a)) ? c.childNodes : []
        }
        Mc(this, b)
    }
    function Ub(b) {
        return b.cloneNode(!0)
    }
    function tb(b, a) {
        a || ub(b);
        if (b.querySelectorAll)
            for (var c = b.querySelectorAll("*"), d = 0, e = c.length; d < e; d++)
                ub(c[d])
    }
    function Nc(b, a, c, d) {
        if (x(d))
            throw Tb("offargs");
        var e = (d = vb(b)) && d.events
          , f = d && d.handle;
        if (f)
            if (a)
                n(a.split(" "), function(a) {
                    if (x(c)) {
                        var d = e[a];
                        bb(d || [], c);
                        if (d && 0 < d.length)
                            return
                    }
                    b.removeEventListener(a, f, !1);
                    delete e[a]
                });
            else
                for (a in e)
                    "$destroy" !== a && b.removeEventListener(a, f, !1),
                    delete e[a]
    }
    function ub(b, a) {
        var c = b.ng339
          , d = c && gb[c];
        d && (a ? delete d.data[a] : (d.handle && (d.events.$destroy && d.handle({}, "$destroy"),
        Nc(b)),
        delete gb[c],
        b.ng339 = u))
    }
    function vb(b, a) {
        var c = b.ng339
          , c = c && gb[c];
        a && !c && (b.ng339 = c = ++Ef,
        c = gb[c] = {
            events: {},
            data: {},
            handle: u
        });
        return c
    }
    function Vb(b, a, c) {
        if (Kc(b)) {
            var d = x(c)
              , e = !d && a && !D(a)
              , f = !a;
            b = (b = vb(b, !e)) && b.data;
            if (d)
                b[a] = c;
            else {
                if (f)
                    return b;
                if (e)
                    return b && b[a];
                Q(b, a)
            }
        }
    }
    function wb(b, a) {
        return b.getAttribute ? -1 < (" " + (b.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ").indexOf(" " + a + " ") : !1
    }
    function xb(b, a) {
        a && b.setAttribute && n(a.split(" "), function(a) {
            b.setAttribute("class", T((" " + (b.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ").replace(" " + T(a) + " ", " ")))
        })
    }
    function yb(b, a) {
        if (a && b.setAttribute) {
            var c = (" " + (b.getAttribute("class") || "") + " ").replace(/[\n\t]/g, " ");
            n(a.split(" "), function(a) {
                a = T(a);
                -1 === c.indexOf(" " + a + " ") && (c += a + " ")
            });
            b.setAttribute("class", T(c))
        }
    }
    function Mc(b, a) {
        if (a)
            if (a.nodeType)
                b[b.length++] = a;
            else {
                var c = a.length;
                if ("number" === typeof c && a.window !== a) {
                    if (c)
                        for (var d = 0; d < c; d++)
                            b[b.length++] = a[d]
                } else
                    b[b.length++] = a
            }
    }
    function Oc(b, a) {
        return zb(b, "$" + (a || "ngController") + "Controller")
    }
    function zb(b, a, c) {
        9 == b.nodeType && (b = b.documentElement);
        for (a = K(a) ? a : [a]; b; ) {
            for (var d = 0, e = a.length; d < e; d++)
                if ((c = z.data(b, a[d])) !== u)
                    return c;
            b = b.parentNode || 11 === b.nodeType && b.host
        }
    }
    function Pc(b) {
        for (tb(b, !0); b.firstChild; )
            b.removeChild(b.firstChild)
    }
    function Wb(b, a) {
        a || tb(b);
        var c = b.parentNode;
        c && c.removeChild(b)
    }
    function Ff(b, a) {
        a = a || N;
        if ("complete" === a.document.readyState)
            a.setTimeout(b);
        else
            z(a).on("load", b)
    }
    function Qc(b, a) {
        var c = Ab[a.toLowerCase()];
        return c && Rc[ta(b)] && c
    }
    function Gf(b, a) {
        var c = b.nodeName;
        return ("INPUT" === c || "TEXTAREA" === c) && Sc[a]
    }
    function Hf(b, a) {
        var c = function(c, e) {
            c.isDefaultPrevented = function() {
                return c.defaultPrevented
            }
            ;
            var f = a[e || c.type]
              , g = f ? f.length : 0;
            if (g) {
                if (y(c.immediatePropagationStopped)) {
                    var h = c.stopImmediatePropagation;
                    c.stopImmediatePropagation = function() {
                        c.immediatePropagationStopped = !0;
                        c.stopPropagation && c.stopPropagation();
                        h && h.call(c)
                    }
                }
                c.isImmediatePropagationStopped = function() {
                    return !0 === c.immediatePropagationStopped
                }
                ;
                1 < g && (f = ia(f));
                for (var l = 0; l < g; l++)
                    c.isImmediatePropagationStopped() || f[l].call(b, c)
            }
        };
        c.elem = b;
        return c
    }
    function wf() {
        this.$get = function() {
            return Q(R, {
                hasClass: function(b, a) {
                    b.attr && (b = b[0]);
                    return wb(b, a)
                },
                addClass: function(b, a) {
                    b.attr && (b = b[0]);
                    return yb(b, a)
                },
                removeClass: function(b, a) {
                    b.attr && (b = b[0]);
                    return xb(b, a)
                }
            })
        }
    }
    function Ga(b, a) {
        var c = b && b.$$hashKey;
        if (c)
            return "function" === typeof c && (c = b.$$hashKey()),
            c;
        c = typeof b;
        return c = "function" == c || "object" == c && null !== b ? b.$$hashKey = c + ":" + (a || Ud)() : c + ":" + b
    }
    function Ua(b, a) {
        if (a) {
            var c = 0;
            this.nextUid = function() {
                return ++c
            }
        }
        n(b, this.put, this)
    }
    function If(b) {
        return (b = b.toString().replace(Tc, "").match(Uc)) ? "function(" + (b[1] || "").replace(/[\s\r\n]+/, " ") + ")" : "fn"
    }
    function eb(b, a) {
        function c(a) {
            return function(b, c) {
                if (D(b))
                    n(b, nc(a));
                else
                    return a(b, c)
            }
        }
        function d(a, b) {
            Ta(a, "service");
            if (B(b) || K(b))
                b = s.instantiate(b);
            if (!b.$get)
                throw Ha("pget", a);
            return q[a + "Provider"] = b
        }
        function e(a, b) {
            return function() {
                var c = E.invoke(b, this);
                if (y(c))
                    throw Ha("undef", a);
                return c
            }
        }
        function f(a, b, c) {
            return d(a, {
                $get: !1 !== c ? e(a, b) : b
            })
        }
        function g(a) {
            pb(y(a) || K(a), "modulesToLoad", "not an array");
            var b = [], c;
            n(a, function(a) {
                function d(a) {
                    var b, c;
                    b = 0;
                    for (c = a.length; b < c; b++) {
                        var e = a[b]
                          , f = s.get(e[0]);
                        f[e[1]].apply(f, e[2])
                    }
                }
                if (!m.get(a)) {
                    m.put(a, !0);
                    try {
                        H(a) ? (c = Rb(a),
                        b = b.concat(g(c.requires)).concat(c._runBlocks),
                        d(c._invokeQueue),
                        d(c._configBlocks)) : B(a) ? b.push(s.invoke(a)) : K(a) ? b.push(s.invoke(a)) : Sa(a, "module")
                    } catch (e) {
                        throw K(a) && (a = a[a.length - 1]),
                        e.message && e.stack && -1 == e.stack.indexOf(e.message) && (e = e.message + "\n" + e.stack),
                        Ha("modulerr", a, e.stack || e.message || e);
                    }
                }
            });
            return b
        }
        function h(b, c) {
            function d(a, e) {
                if (b.hasOwnProperty(a)) {
                    if (b[a] === l)
                        throw Ha("cdep", a + " <- " + k.join(" <- "));
                    return b[a]
                }
                try {
                    return k.unshift(a),
                    b[a] = l,
                    b[a] = c(a, e)
                } catch (f) {
                    throw b[a] === l && delete b[a],
                    f;
                } finally {
                    k.shift()
                }
            }
            function e(b, c, f, g) {
                "string" === typeof f && (g = f,
                f = null);
                var h = [], k = eb.$$annotate(b, a, g), l, s, m;
                s = 0;
                for (l = k.length; s < l; s++) {
                    m = k[s];
                    if ("string" !== typeof m)
                        throw Ha("itkn", m);
                    h.push(f && f.hasOwnProperty(m) ? f[m] : d(m, g))
                }
                K(b) && (b = b[l]);
                return b.apply(c, h)
            }
            return {
                invoke: e,
                instantiate: function(a, b, c) {
                    var d = Object.create((K(a) ? a[a.length - 1] : a).prototype || null);
                    a = e(a, d, b, c);
                    return D(a) || B(a) ? a : d
                },
                get: d,
                annotate: eb.$$annotate,
                has: function(a) {
                    return q.hasOwnProperty(a + "Provider") || b.hasOwnProperty(a)
                }
            }
        }
        a = !0 === a;
        var l = {}
          , k = []
          , m = new Ua([],!0)
          , q = {
            $provide: {
                provider: c(d),
                factory: c(f),
                service: c(function(a, b) {
                    return f(a, ["$injector", function(a) {
                        return a.instantiate(b)
                    }
                    ])
                }),
                value: c(function(a, b) {
                    return f(a, qa(b), !1)
                }),
                constant: c(function(a, b) {
                    Ta(a, "constant");
                    q[a] = b;
                    t[a] = b
                }),
                decorator: function(a, b) {
                    var c = s.get(a + "Provider")
                      , d = c.$get;
                    c.$get = function() {
                        var a = E.invoke(d, c);
                        return E.invoke(b, null, {
                            $delegate: a
                        })
                    }
                }
            }
        }
          , s = q.$injector = h(q, function(a, b) {
            aa.isString(b) && k.push(b);
            throw Ha("unpr", k.join(" <- "));
        })
          , t = {}
          , E = t.$injector = h(t, function(a, b) {
            var c = s.get(a + "Provider", b);
            return E.invoke(c.$get, c, u, a)
        });
        n(g(b), function(a) {
            a && E.invoke(a)
        });
        return E
    }
    function Qe() {
        var b = !0;
        this.disableAutoScrolling = function() {
            b = !1
        }
        ;
        this.$get = ["$window", "$location", "$rootScope", function(a, c, d) {
            function e(a) {
                var b = null;
                Array.prototype.some.call(a, function(a) {
                    if ("a" === ta(a))
                        return b = a,
                        !0
                });
                return b
            }
            function f(b) {
                if (b) {
                    b.scrollIntoView();
                    var c;
                    c = g.yOffset;
                    B(c) ? c = c() : rc(c) ? (c = c[0],
                    c = "fixed" !== a.getComputedStyle(c).position ? 0 : c.getBoundingClientRect().bottom) : X(c) || (c = 0);
                    c && (b = b.getBoundingClientRect().top,
                    a.scrollBy(0, b - c))
                } else
                    a.scrollTo(0, 0)
            }
            function g(a) {
                a = H(a) ? a : c.hash();
                var b;
                a ? (b = h.getElementById(a)) ? f(b) : (b = e(h.getElementsByName(a))) ? f(b) : "top" === a && f(null) : f(null)
            }
            var h = a.document;
            b && d.$watch(function() {
                return c.hash()
            }, function(a, b) {
                a === b && "" === a || Ff(function() {
                    d.$evalAsync(g)
                })
            });
            return g
        }
        ]
    }
    function hb(b, a) {
        if (!b && !a)
            return "";
        if (!b)
            return a;
        if (!a)
            return b;
        K(b) && (b = b.join(" "));
        K(a) && (a = a.join(" "));
        return b + " " + a
    }
    function Jf(b) {
        H(b) && (b = b.split(" "));
        var a = ga();
        n(b, function(b) {
            b.length && (a[b] = !0)
        });
        return a
    }
    function Ia(b) {
        return D(b) ? b : {}
    }
    function Kf(b, a, c, d) {
        function e(a) {
            try {
                a.apply(null, xa.call(arguments, 1))
            } finally {
                if (E--,
                0 === E)
                    for (; L.length; )
                        try {
                            L.pop()()
                        } catch (b) {
                            c.error(b)
                        }
            }
        }
        function f() {
            g();
            h()
        }
        function g() {
            a: {
                try {
                    w = m.state;
                    break a
                } catch (a) {}
                w = void 0
            }
            w = y(w) ? null : w;
            ka(w, F) && (w = F);
            F = w
        }
        function h() {
            if (A !== l.url() || p !== w)
                A = l.url(),
                p = w,
                n(O, function(a) {
                    a(l.url(), w)
                })
        }
        var l = this
          , k = b.location
          , m = b.history
          , q = b.setTimeout
          , s = b.clearTimeout
          , t = {};
        l.isMock = !1;
        var E = 0
          , L = [];
        l.$$completeOutstandingRequest = e;
        l.$$incOutstandingRequestCount = function() {
            E++
        }
        ;
        l.notifyWhenNoOutstandingRequests = function(a) {
            0 === E ? a() : L.push(a)
        }
        ;
        var w, p, A = k.href, r = a.find("base"), M = null;
        g();
        p = w;
        l.url = function(a, c, e) {
            y(e) && (e = null);
            k !== b.location && (k = b.location);
            m !== b.history && (m = b.history);
            if (a) {
                var f = p === e;
                if (A === a && (!d.history || f))
                    return l;
                var h = A && Ja(A) === Ja(a);
                A = a;
                p = e;
                if (!d.history || h && f) {
                    if (!h || M)
                        M = a;
                    c ? k.replace(a) : h ? (c = k,
                    e = a.indexOf("#"),
                    a = -1 === e ? "" : a.substr(e),
                    c.hash = a) : k.href = a
                } else
                    m[c ? "replaceState" : "pushState"](e, "", a),
                    g(),
                    p = w;
                return l
            }
            return M || k.href.replace(/%27/g, "'")
        }
        ;
        l.state = function() {
            return w
        }
        ;
        var O = []
          , J = !1
          , F = null;
        l.onUrlChange = function(a) {
            if (!J) {
                if (d.history)
                    z(b).on("popstate", f);
                z(b).on("hashchange", f);
                J = !0
            }
            O.push(a);
            return a
        }
        ;
        l.$$applicationDestroyed = function() {
            z(b).off("hashchange popstate", f)
        }
        ;
        l.$$checkUrlChange = h;
        l.baseHref = function() {
            var a = r.attr("href");
            return a ? a.replace(/^(https?\:)?\/\/[^\/]*/, "") : ""
        }
        ;
        l.defer = function(a, b) {
            var c;
            E++;
            c = q(function() {
                delete t[c];
                e(a)
            }, b || 0);
            t[c] = !0;
            return c
        }
        ;
        l.defer.cancel = function(a) {
            return t[a] ? (delete t[a],
            s(a),
            e(v),
            !0) : !1
        }
    }
    function Ve() {
        this.$get = ["$window", "$log", "$sniffer", "$document", function(b, a, c, d) {
            return new Kf(b,d,a,c)
        }
        ]
    }
    function We() {
        this.$get = function() {
            function b(b, d) {
                function e(a) {
                    a != q && (s ? s == a && (s = a.n) : s = a,
                    f(a.n, a.p),
                    f(a, q),
                    q = a,
                    q.n = null)
                }
                function f(a, b) {
                    a != b && (a && (a.p = b),
                    b && (b.n = a))
                }
                if (b in a)
                    throw G("$cacheFactory")("iid", b);
                var g = 0
                  , h = Q({}, d, {
                    id: b
                })
                  , l = {}
                  , k = d && d.capacity || Number.MAX_VALUE
                  , m = {}
                  , q = null
                  , s = null;
                return a[b] = {
                    put: function(a, b) {
                        if (!y(b)) {
                            if (k < Number.MAX_VALUE) {
                                var c = m[a] || (m[a] = {
                                    key: a
                                });
                                e(c)
                            }
                            a in l || g++;
                            l[a] = b;
                            g > k && this.remove(s.key);
                            return b
                        }
                    },
                    get: function(a) {
                        if (k < Number.MAX_VALUE) {
                            var b = m[a];
                            if (!b)
                                return;
                            e(b)
                        }
                        return l[a]
                    },
                    remove: function(a) {
                        if (k < Number.MAX_VALUE) {
                            var b = m[a];
                            if (!b)
                                return;
                            b == q && (q = b.p);
                            b == s && (s = b.n);
                            f(b.n, b.p);
                            delete m[a]
                        }
                        delete l[a];
                        g--
                    },
                    removeAll: function() {
                        l = {};
                        g = 0;
                        m = {};
                        q = s = null
                    },
                    destroy: function() {
                        m = h = l = null;
                        delete a[b]
                    },
                    info: function() {
                        return Q({}, h, {
                            size: g
                        })
                    }
                }
            }
            var a = {};
            b.info = function() {
                var b = {};
                n(a, function(a, e) {
                    b[e] = a.info()
                });
                return b
            }
            ;
            b.get = function(b) {
                return a[b]
            }
            ;
            return b
        }
    }
    function qf() {
        this.$get = ["$cacheFactory", function(b) {
            return b("templates")
        }
        ]
    }
    function Cc(b, a) {
        function c(a, b, c) {
            var d = /^\s*([@&]|=(\*?))(\??)\s*(\w*)\s*$/
              , e = {};
            n(a, function(a, f) {
                var g = a.match(d);
                if (!g)
                    throw ea("iscp", b, f, a, c ? "controller bindings definition" : "isolate scope definition");
                e[f] = {
                    mode: g[1][0],
                    collection: "*" === g[2],
                    optional: "?" === g[3],
                    attrName: g[4] || f
                }
            });
            return e
        }
        function d(a) {
            var b = a.charAt(0);
            if (!b || b !== I(b))
                throw ea("baddir", a);
            if (a !== a.trim())
                throw ea("baddir", a);
        }
        var e = {}
          , f = /^\s*directive\:\s*([\w\-]+)\s+(.*)$/
          , g = /(([\w\-]+)(?:\:([^;]+))?;?)/
          , h = Wd("ngSrc,ngSrcset,src,srcset")
          , l = /^(?:(\^\^?)?(\?)?(\^\^?)?)?/
          , k = /^(on[a-z]+|formaction)$/;
        this.directive = function s(a, f) {
            Ta(a, "directive");
            H(a) ? (d(a),
            pb(f, "directiveFactory"),
            e.hasOwnProperty(a) || (e[a] = [],
            b.factory(a + "Directive", ["$injector", "$exceptionHandler", function(b, d) {
                var f = [];
                n(e[a], function(e, g) {
                    try {
                        var h = b.invoke(e);
                        B(h) ? h = {
                            compile: qa(h)
                        } : !h.compile && h.link && (h.compile = qa(h.link));
                        h.priority = h.priority || 0;
                        h.index = g;
                        h.name = h.name || a;
                        h.require = h.require || h.controller && h.name;
                        h.restrict = h.restrict || "EA";
                        var l = h
                          , k = h
                          , s = h.name
                          , m = {
                            isolateScope: null,
                            bindToController: null
                        };
                        D(k.scope) && (!0 === k.bindToController ? (m.bindToController = c(k.scope, s, !0),
                        m.isolateScope = {}) : m.isolateScope = c(k.scope, s, !1));
                        D(k.bindToController) && (m.bindToController = c(k.bindToController, s, !0));
                        if (D(m.bindToController)) {
                            var S = k.controller
                              , E = k.controllerAs;
                            if (!S)
                                throw ea("noctrl", s);
                            var ha;
                            a: if (E && H(E))
                                ha = E;
                            else {
                                if (H(S)) {
                                    var n = Vc.exec(S);
                                    if (n) {
                                        ha = n[3];
                                        break a
                                    }
                                }
                                ha = void 0
                            }
                            if (!ha)
                                throw ea("noident", s);
                        }
                        var r = l.$$bindings = m;
                        D(r.isolateScope) && (h.$$isolateBindings = r.isolateScope);
                        h.$$moduleName = e.$$moduleName;
                        f.push(h)
                    } catch (u) {
                        d(u)
                    }
                });
                return f
            }
            ])),
            e[a].push(f)) : n(a, nc(s));
            return this
        }
        ;
        this.aHrefSanitizationWhitelist = function(b) {
            return x(b) ? (a.aHrefSanitizationWhitelist(b),
            this) : a.aHrefSanitizationWhitelist()
        }
        ;
        this.imgSrcSanitizationWhitelist = function(b) {
            return x(b) ? (a.imgSrcSanitizationWhitelist(b),
            this) : a.imgSrcSanitizationWhitelist()
        }
        ;
        var m = !0;
        this.debugInfoEnabled = function(a) {
            return x(a) ? (m = a,
            this) : m
        }
        ;
        this.$get = ["$injector", "$interpolate", "$exceptionHandler", "$templateRequest", "$parse", "$controller", "$rootScope", "$document", "$sce", "$animate", "$$sanitizeUri", function(a, b, c, d, w, p, A, r, M, O, J) {
            function F(a, b) {
                try {
                    a.addClass(b)
                } catch (c) {}
            }
            function V(a, b, c, d, e) {
                a instanceof z || (a = z(a));
                n(a, function(b, c) {
                    b.nodeType == Pa && b.nodeValue.match(/\S+/) && (a[c] = z(b).wrap("<span></span>").parent()[0])
                });
                var f = S(a, b, a, c, d, e);
                V.$$addScopeClass(a);
                var g = null;
                return function(b, c, d) {
                    pb(b, "scope");
                    d = d || {};
                    var e = d.parentBoundTranscludeFn
                      , h = d.transcludeControllers;
                    d = d.futureParentElement;
                    e && e.$$boundTransclude && (e = e.$$boundTransclude);
                    g || (g = (d = d && d[0]) ? "foreignobject" !== ta(d) && d.toString().match(/SVG/) ? "svg" : "html" : "html");
                    d = "html" !== g ? z(Xb(g, z("<div>").append(a).html())) : c ? Ra.clone.call(a) : a;
                    if (h)
                        for (var k in h)
                            d.data("$" + k + "Controller", h[k].instance);
                    V.$$addScopeInfo(d, b);
                    c && c(d, b);
                    f && f(b, d, d, e);
                    return d
                }
            }
            function S(a, b, c, d, e, f) {
                function g(a, c, d, e) {
                    var f, k, l, m, s, t, O;
                    if (p)
                        for (O = Array(c.length),
                        m = 0; m < h.length; m += 3)
                            f = h[m],
                            O[f] = c[f];
                    else
                        O = c;
                    m = 0;
                    for (s = h.length; m < s; )
                        if (k = O[h[m++]],
                        c = h[m++],
                        f = h[m++],
                        c) {
                            if (c.scope) {
                                if (l = a.$new(),
                                V.$$addScopeInfo(z(k), l),
                                t = c.$$destroyBindings)
                                    c.$$destroyBindings = null,
                                    l.$on("$destroyed", t)
                            } else
                                l = a;
                            t = c.transcludeOnThisElement ? P(a, c.transclude, e) : !c.templateOnThisElement && e ? e : !e && b ? P(a, b) : null;
                            c(f, l, k, d, t, c)
                        } else
                            f && f(a, k.childNodes, u, e)
                }
                for (var h = [], k, l, m, s, p, t = 0; t < a.length; t++) {
                    k = new aa;
                    l = ha(a[t], [], k, 0 === t ? d : u, e);
                    (f = l.length ? C(l, a[t], k, b, c, null, [], [], f) : null) && f.scope && V.$$addScopeClass(k.$$element);
                    k = f && f.terminal || !(m = a[t].childNodes) || !m.length ? null : S(m, f ? (f.transcludeOnThisElement || !f.templateOnThisElement) && f.transclude : b);
                    if (f || k)
                        h.push(t, f, k),
                        s = !0,
                        p = p || f;
                    f = null
                }
                return s ? g : null
            }
            function P(a, b, c) {
                return function(d, e, f, g, h) {
                    d || (d = a.$new(!1, h),
                    d.$$transcluded = !0);
                    return b(d, e, {
                        parentBoundTranscludeFn: c,
                        transcludeControllers: f,
                        futureParentElement: g
                    })
                }
            }
            function ha(a, b, c, d, e) {
                var h = c.$attr, k;
                switch (a.nodeType) {
                case pa:
                    x(b, va(ta(a)), "E", d, e);
                    for (var l, m, s, p = a.attributes, t = 0, O = p && p.length; t < O; t++) {
                        var L = !1
                          , J = !1;
                        l = p[t];
                        k = l.name;
                        m = T(l.value);
                        l = va(k);
                        if (s = ia.test(l))
                            k = k.replace(Xc, "").substr(8).replace(/_(.)/g, function(a, b) {
                                return b.toUpperCase()
                            });
                        var S = l.replace(/(Start|End)$/, "");
                        G(S) && l === S + "Start" && (L = k,
                        J = k.substr(0, k.length - 5) + "end",
                        k = k.substr(0, k.length - 6));
                        l = va(k.toLowerCase());
                        h[l] = k;
                        if (s || !c.hasOwnProperty(l))
                            c[l] = m,
                            Qc(a, l) && (c[l] = !0);
                        X(a, b, m, l, s);
                        x(b, l, "A", d, e, L, J)
                    }
                    a = a.className;
                    D(a) && (a = a.animVal);
                    if (H(a) && "" !== a)
                        for (; k = g.exec(a); )
                            l = va(k[2]),
                            x(b, l, "C", d, e) && (c[l] = T(k[3])),
                            a = a.substr(k.index + k[0].length);
                    break;
                case Pa:
                    if (11 === Va)
                        for (; a.parentNode && a.nextSibling && a.nextSibling.nodeType === Pa; )
                            a.nodeValue += a.nextSibling.nodeValue,
                            a.parentNode.removeChild(a.nextSibling);
                    wa(b, a.nodeValue);
                    break;
                case 8:
                    try {
                        if (k = f.exec(a.nodeValue))
                            l = va(k[1]),
                            x(b, l, "M", d, e) && (c[l] = T(k[2]))
                    } catch (E) {}
                }
                b.sort(za);
                return b
            }
            function ya(a, b, c) {
                var d = []
                  , e = 0;
                if (b && a.hasAttribute && a.hasAttribute(b)) {
                    do {
                        if (!a)
                            throw ea("uterdir", b, c);
                        a.nodeType == pa && (a.hasAttribute(b) && e++,
                        a.hasAttribute(c) && e--);
                        d.push(a);
                        a = a.nextSibling
                    } while (0 < e)
                } else
                    d.push(a);
                return z(d)
            }
            function Wc(a, b, c) {
                return function(d, e, f, g, h) {
                    e = ya(e[0], b, c);
                    return a(d, e, f, g, h)
                }
            }
            function C(a, b, d, e, f, g, h, k, m) {
                function s(a, b, c, d) {
                    if (a) {
                        c && (a = Wc(a, c, d));
                        a.require = C.require;
                        a.directiveName = x;
                        if (P === C || C.$$isolateScope)
                            a = Z(a, {
                                isolateScope: !0
                            });
                        h.push(a)
                    }
                    if (b) {
                        c && (b = Wc(b, c, d));
                        b.require = C.require;
                        b.directiveName = x;
                        if (P === C || C.$$isolateScope)
                            b = Z(b, {
                                isolateScope: !0
                            });
                        k.push(b)
                    }
                }
                function t(a, b, c, d) {
                    var e;
                    if (H(b)) {
                        var f = b.match(l);
                        b = b.substring(f[0].length);
                        var g = f[1] || f[3]
                          , f = "?" === f[2];
                        "^^" === g ? c = c.parent() : e = (e = d && d[b]) && e.instance;
                        e || (d = "$" + b + "Controller",
                        e = g ? c.inheritedData(d) : c.data(d));
                        if (!e && !f)
                            throw ea("ctreq", b, a);
                    } else if (K(b))
                        for (e = [],
                        g = 0,
                        f = b.length; g < f; g++)
                            e[g] = t(a, b[g], c, d);
                    return e || null
                }
                function O(a, b, c, d, e, f) {
                    var g = ga(), h;
                    for (h in d) {
                        var k = d[h]
                          , l = {
                            $scope: k === P || k.$$isolateScope ? e : f,
                            $element: a,
                            $attrs: b,
                            $transclude: c
                        }
                          , m = k.controller;
                        "@" == m && (m = b[k.name]);
                        l = p(m, l, !0, k.controllerAs);
                        g[k.name] = l;
                        r || a.data("$" + k.name + "Controller", l.instance)
                    }
                    return g
                }
                function L(a, c, e, f, g, l) {
                    function m(a, b, c) {
                        var d;
                        $a(a) || (c = b,
                        b = a,
                        a = u);
                        r && (d = A);
                        c || (c = r ? ja.parent() : ja);
                        return g(a, b, d, c, ya)
                    }
                    var s, p, J, E, A, ha, ja;
                    b === e ? (f = d,
                    ja = d.$$element) : (ja = z(e),
                    f = new aa(ja,d));
                    P && (E = c.$new(!0));
                    g && (ha = m,
                    ha.$$boundTransclude = g);
                    w && (A = O(ja, f, ha, w, E, c));
                    P && (V.$$addScopeInfo(ja, E, !0, !(F && (F === P || F === P.$$originalDirective))),
                    V.$$addScopeClass(ja, !0),
                    E.$$isolateBindings = P.$$isolateBindings,
                    Y(c, f, E, E.$$isolateBindings, P, E));
                    if (A) {
                        var n = P || S, M;
                        n && A[n.name] && (p = n.$$bindings.bindToController,
                        (J = A[n.name]) && J.identifier && p && (M = J,
                        l.$$destroyBindings = Y(c, f, J.instance, p, n)));
                        for (s in A) {
                            J = A[s];
                            var C = J();
                            C !== J.instance && (J.instance = C,
                            ja.data("$" + s + "Controller", C),
                            J === M && (l.$$destroyBindings(),
                            l.$$destroyBindings = Y(c, f, C, p, n)))
                        }
                    }
                    s = 0;
                    for (l = h.length; s < l; s++)
                        p = h[s],
                        $(p, p.isolateScope ? E : c, ja, f, p.require && t(p.directiveName, p.require, ja, A), ha);
                    var ya = c;
                    P && (P.template || null === P.templateUrl) && (ya = E);
                    a && a(ya, e.childNodes, u, g);
                    for (s = k.length - 1; 0 <= s; s--)
                        p = k[s],
                        $(p, p.isolateScope ? E : c, ja, f, p.require && t(p.directiveName, p.require, ja, A), ha)
                }
                m = m || {};
                for (var J = -Number.MAX_VALUE, S = m.newScopeDirective, w = m.controllerDirectives, P = m.newIsolateScopeDirective, F = m.templateDirective, A = m.nonTlbTranscludeDirective, n = !1, M = !1, r = m.hasElementTranscludeDirective, ba = d.$$element = z(b), C, x, v, y = e, za, wa = 0, G = a.length; wa < G; wa++) {
                    C = a[wa];
                    var Bb = C.$$start
                      , I = C.$$end;
                    Bb && (ba = ya(b, Bb, I));
                    v = u;
                    if (J > C.priority)
                        break;
                    if (v = C.scope)
                        C.templateUrl || (D(v) ? (N("new/isolated scope", P || S, C, ba),
                        P = C) : N("new/isolated scope", P, C, ba)),
                        S = S || C;
                    x = C.name;
                    !C.templateUrl && C.controller && (v = C.controller,
                    w = w || ga(),
                    N("'" + x + "' controller", w[x], C, ba),
                    w[x] = C);
                    if (v = C.transclude)
                        n = !0,
                        C.$$tlb || (N("transclusion", A, C, ba),
                        A = C),
                        "element" == v ? (r = !0,
                        J = C.priority,
                        v = ba,
                        ba = d.$$element = z(W.createComment(" " + x + ": " + d[x] + " ")),
                        b = ba[0],
                        U(f, xa.call(v, 0), b),
                        y = V(v, e, J, g && g.name, {
                            nonTlbTranscludeDirective: A
                        })) : (v = z(Ub(b)).contents(),
                        ba.empty(),
                        y = V(v, e));
                    if (C.template)
                        if (M = !0,
                        N("template", F, C, ba),
                        F = C,
                        v = B(C.template) ? C.template(ba, d) : C.template,
                        v = fa(v),
                        C.replace) {
                            g = C;
                            v = Sb.test(v) ? Yc(Xb(C.templateNamespace, T(v))) : [];
                            b = v[0];
                            if (1 != v.length || b.nodeType !== pa)
                                throw ea("tplrt", x, "");
                            U(f, ba, b);
                            G = {
                                $attr: {}
                            };
                            v = ha(b, [], G);
                            var Q = a.splice(wa + 1, a.length - (wa + 1));
                            P && Zc(v);
                            a = a.concat(v).concat(Q);
                            $c(d, G);
                            G = a.length
                        } else
                            ba.html(v);
                    if (C.templateUrl)
                        M = !0,
                        N("template", F, C, ba),
                        F = C,
                        C.replace && (g = C),
                        L = Lf(a.splice(wa, a.length - wa), ba, d, f, n && y, h, k, {
                            controllerDirectives: w,
                            newScopeDirective: S !== C && S,
                            newIsolateScopeDirective: P,
                            templateDirective: F,
                            nonTlbTranscludeDirective: A
                        }),
                        G = a.length;
                    else if (C.compile)
                        try {
                            za = C.compile(ba, d, y),
                            B(za) ? s(null, za, Bb, I) : za && s(za.pre, za.post, Bb, I)
                        } catch (R) {
                            c(R, ua(ba))
                        }
                    C.terminal && (L.terminal = !0,
                    J = Math.max(J, C.priority))
                }
                L.scope = S && !0 === S.scope;
                L.transcludeOnThisElement = n;
                L.templateOnThisElement = M;
                L.transclude = y;
                m.hasElementTranscludeDirective = r;
                return L
            }
            function Zc(a) {
                for (var b = 0, c = a.length; b < c; b++)
                    a[b] = Nb(a[b], {
                        $$isolateScope: !0
                    })
            }
            function x(b, d, f, g, h, k, l) {
                if (d === h)
                    return null;
                h = null;
                if (e.hasOwnProperty(d)) {
                    var m;
                    d = a.get(d + "Directive");
                    for (var p = 0, t = d.length; p < t; p++)
                        try {
                            m = d[p],
                            (g === u || g > m.priority) && -1 != m.restrict.indexOf(f) && (k && (m = Nb(m, {
                                $$start: k,
                                $$end: l
                            })),
                            b.push(m),
                            h = m)
                        } catch (J) {
                            c(J)
                        }
                }
                return h
            }
            function G(b) {
                if (e.hasOwnProperty(b))
                    for (var c = a.get(b + "Directive"), d = 0, f = c.length; d < f; d++)
                        if (b = c[d],
                        b.multiElement)
                            return !0;
                return !1
            }
            function $c(a, b) {
                var c = b.$attr
                  , d = a.$attr
                  , e = a.$$element;
                n(a, function(d, e) {
                    "$" != e.charAt(0) && (b[e] && b[e] !== d && (d += ("style" === e ? ";" : " ") + b[e]),
                    a.$set(e, d, !0, c[e]))
                });
                n(b, function(b, f) {
                    "class" == f ? (F(e, b),
                    a["class"] = (a["class"] ? a["class"] + " " : "") + b) : "style" == f ? (e.attr("style", e.attr("style") + ";" + b),
                    a.style = (a.style ? a.style + ";" : "") + b) : "$" == f.charAt(0) || a.hasOwnProperty(f) || (a[f] = b,
                    d[f] = c[f])
                })
            }
            function Lf(a, b, c, e, f, g, h, k) {
                var l = [], m, s, p = b[0], t = a.shift(), J = Nb(t, {
                    templateUrl: null,
                    transclude: null,
                    replace: null,
                    $$originalDirective: t
                }), O = B(t.templateUrl) ? t.templateUrl(b, c) : t.templateUrl, E = t.templateNamespace;
                b.empty();
                d(O).then(function(d) {
                    var L, w;
                    d = fa(d);
                    if (t.replace) {
                        d = Sb.test(d) ? Yc(Xb(E, T(d))) : [];
                        L = d[0];
                        if (1 != d.length || L.nodeType !== pa)
                            throw ea("tplrt", t.name, O);
                        d = {
                            $attr: {}
                        };
                        U(e, b, L);
                        var A = ha(L, [], d);
                        D(t.scope) && Zc(A);
                        a = A.concat(a);
                        $c(c, d)
                    } else
                        L = p,
                        b.html(d);
                    a.unshift(J);
                    m = C(a, L, c, f, b, t, g, h, k);
                    n(e, function(a, c) {
                        a == L && (e[c] = b[0])
                    });
                    for (s = S(b[0].childNodes, f); l.length; ) {
                        d = l.shift();
                        w = l.shift();
                        var M = l.shift()
                          , V = l.shift()
                          , A = b[0];
                        if (!d.$$destroyed) {
                            if (w !== p) {
                                var ya = w.className;
                                k.hasElementTranscludeDirective && t.replace || (A = Ub(L));
                                U(M, z(w), A);
                                F(z(A), ya)
                            }
                            w = m.transcludeOnThisElement ? P(d, m.transclude, V) : V;
                            m(s, d, A, e, w, m)
                        }
                    }
                    l = null
                });
                return function(a, b, c, d, e) {
                    a = e;
                    b.$$destroyed || (l ? l.push(b, c, d, a) : (m.transcludeOnThisElement && (a = P(b, m.transclude, e)),
                    m(s, b, c, d, a, m)))
                }
            }
            function za(a, b) {
                var c = b.priority - a.priority;
                return 0 !== c ? c : a.name !== b.name ? a.name < b.name ? -1 : 1 : a.index - b.index
            }
            function N(a, b, c, d) {
                function e(a) {
                    return a ? " (module: " + a + ")" : ""
                }
                if (b)
                    throw ea("multidir", b.name, e(b.$$moduleName), c.name, e(c.$$moduleName), a, ua(d));
            }
            function wa(a, c) {
                var d = b(c, !0);
                d && a.push({
                    priority: 0,
                    compile: function(a) {
                        a = a.parent();
                        var b = !!a.length;
                        b && V.$$addBindingClass(a);
                        return function(a, c) {
                            var e = c.parent();
                            b || V.$$addBindingClass(e);
                            V.$$addBindingInfo(e, d.expressions);
                            a.$watch(d, function(a) {
                                c[0].nodeValue = a
                            })
                        }
                    }
                })
            }
            function Xb(a, b) {
                a = I(a || "html");
                switch (a) {
                case "svg":
                case "math":
                    var c = W.createElement("div");
                    c.innerHTML = "<" + a + ">" + b + "</" + a + ">";
                    return c.childNodes[0].childNodes;
                default:
                    return b
                }
            }
            function R(a, b) {
                if ("srcdoc" == b)
                    return M.HTML;
                var c = ta(a);
                if ("xlinkHref" == b || "form" == c && "action" == b || "img" != c && ("src" == b || "ngSrc" == b))
                    return M.RESOURCE_URL
            }
            function X(a, c, d, e, f) {
                var g = R(a, e);
                f = h[e] || f;
                var l = b(d, !0, g, f);
                if (l) {
                    if ("multiple" === e && "select" === ta(a))
                        throw ea("selmulti", ua(a));
                    c.push({
                        priority: 100,
                        compile: function() {
                            return {
                                pre: function(a, c, h) {
                                    c = h.$$observers || (h.$$observers = {});
                                    if (k.test(e))
                                        throw ea("nodomevents");
                                    var m = h[e];
                                    m !== d && (l = m && b(m, !0, g, f),
                                    d = m);
                                    l && (h[e] = l(a),
                                    (c[e] || (c[e] = [])).$$inter = !0,
                                    (h.$$observers && h.$$observers[e].$$scope || a).$watch(l, function(a, b) {
                                        "class" === e && a != b ? h.$updateClass(a, b) : h.$set(e, a)
                                    }))
                                }
                            }
                        }
                    })
                }
            }
            function U(a, b, c) {
                var d = b[0], e = b.length, f = d.parentNode, g, h;
                if (a)
                    for (g = 0,
                    h = a.length; g < h; g++)
                        if (a[g] == d) {
                            a[g++] = c;
                            h = g + e - 1;
                            for (var k = a.length; g < k; g++,
                            h++)
                                h < k ? a[g] = a[h] : delete a[g];
                            a.length -= e - 1;
                            a.context === d && (a.context = c);
                            break
                        }
                f && f.replaceChild(c, d);
                a = W.createDocumentFragment();
                a.appendChild(d);
                z.hasData(d) && (z(c).data(z(d).data()),
                la ? (Qb = !0,
                la.cleanData([d])) : delete z.cache[d[z.expando]]);
                d = 1;
                for (e = b.length; d < e; d++)
                    f = b[d],
                    z(f).remove(),
                    a.appendChild(f),
                    delete b[d];
                b[0] = c;
                b.length = 1
            }
            function Z(a, b) {
                return Q(function() {
                    return a.apply(null, arguments)
                }, a, b)
            }
            function $(a, b, d, e, f, g) {
                try {
                    a(b, d, e, f, g)
                } catch (h) {
                    c(h, ua(d))
                }
            }
            function Y(a, c, d, e, f, g) {
                var h;
                n(e, function(e, g) {
                    var k = e.attrName, l = e.optional, m, s, p, L;
                    switch (e.mode) {
                    case "@":
                        l || Na.call(c, k) || (d[g] = c[k] = void 0);
                        c.$observe(k, function(a) {
                            H(a) && (d[g] = a)
                        });
                        c.$$observers[k].$$scope = a;
                        H(c[k]) && (d[g] = b(c[k])(a));
                        break;
                    case "=":
                        if (!Na.call(c, k)) {
                            if (l)
                                break;
                            c[k] = void 0
                        }
                        if (l && !c[k])
                            break;
                        s = w(c[k]);
                        L = s.literal ? ka : function(a, b) {
                            return a === b || a !== a && b !== b
                        }
                        ;
                        p = s.assign || function() {
                            m = d[g] = s(a);
                            throw ea("nonassign", c[k], f.name);
                        }
                        ;
                        m = d[g] = s(a);
                        l = function(b) {
                            L(b, d[g]) || (L(b, m) ? p(a, b = d[g]) : d[g] = b);
                            return m = b
                        }
                        ;
                        l.$stateful = !0;
                        l = e.collection ? a.$watchCollection(c[k], l) : a.$watch(w(c[k], l), null, s.literal);
                        h = h || [];
                        h.push(l);
                        break;
                    case "&":
                        s = c.hasOwnProperty(k) ? w(c[k]) : v;
                        if (s === v && l)
                            break;
                        d[g] = function(b) {
                            return s(a, b)
                        }
                    }
                });
                e = h ? function() {
                    for (var a = 0, b = h.length; a < b; ++a)
                        h[a]()
                }
                : v;
                return g && e !== v ? (g.$on("$destroy", e),
                v) : e
            }
            var aa = function(a, b) {
                if (b) {
                    var c = Object.keys(b), d, e, f;
                    d = 0;
                    for (e = c.length; d < e; d++)
                        f = c[d],
                        this[f] = b[f]
                } else
                    this.$attr = {};
                this.$$element = a
            };
            aa.prototype = {
                $normalize: va,
                $addClass: function(a) {
                    a && 0 < a.length && O.addClass(this.$$element, a)
                },
                $removeClass: function(a) {
                    a && 0 < a.length && O.removeClass(this.$$element, a)
                },
                $updateClass: function(a, b) {
                    var c = ad(a, b);
                    c && c.length && O.addClass(this.$$element, c);
                    (c = ad(b, a)) && c.length && O.removeClass(this.$$element, c)
                },
                $set: function(a, b, d, e) {
                    var f = this.$$element[0]
                      , g = Qc(f, a)
                      , h = Gf(f, a)
                      , f = a;
                    g ? (this.$$element.prop(a, b),
                    e = g) : h && (this[h] = b,
                    f = h);
                    this[a] = b;
                    e ? this.$attr[a] = e : (e = this.$attr[a]) || (this.$attr[a] = e = zc(a, "-"));
                    g = ta(this.$$element);
                    if ("a" === g && "href" === a || "img" === g && "src" === a)
                        this[a] = b = J(b, "src" === a);
                    else if ("img" === g && "srcset" === a) {
                        for (var g = "", h = T(b), k = /(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/, k = /\s/.test(h) ? k : /(,)/, h = h.split(k), k = Math.floor(h.length / 2), l = 0; l < k; l++)
                            var m = 2 * l
                              , g = g + J(T(h[m]), !0)
                              , g = g + (" " + T(h[m + 1]));
                        h = T(h[2 * l]).split(/\s/);
                        g += J(T(h[0]), !0);
                        2 === h.length && (g += " " + T(h[1]));
                        this[a] = b = g
                    }
                    !1 !== d && (null === b || b === u ? this.$$element.removeAttr(e) : this.$$element.attr(e, b));
                    (a = this.$$observers) && n(a[f], function(a) {
                        try {
                            a(b)
                        } catch (d) {
                            c(d)
                        }
                    })
                },
                $observe: function(a, b) {
                    var c = this
                      , d = c.$$observers || (c.$$observers = ga())
                      , e = d[a] || (d[a] = []);
                    e.push(b);
                    A.$evalAsync(function() {
                        e.$$inter || !c.hasOwnProperty(a) || y(c[a]) || b(c[a])
                    });
                    return function() {
                        bb(e, b)
                    }
                }
            };
            var ca = b.startSymbol()
              , da = b.endSymbol()
              , fa = "{{" == ca || "}}" == da ? Za : function(a) {
                return a.replace(/\{\{/g, ca).replace(/}}/g, da)
            }
              , ia = /^ngAttr[A-Z]/;
            V.$$addBindingInfo = m ? function(a, b) {
                var c = a.data("$binding") || [];
                K(b) ? c = c.concat(b) : c.push(b);
                a.data("$binding", c)
            }
            : v;
            V.$$addBindingClass = m ? function(a) {
                F(a, "ng-binding")
            }
            : v;
            V.$$addScopeInfo = m ? function(a, b, c, d) {
                a.data(c ? d ? "$isolateScopeNoTemplate" : "$isolateScope" : "$scope", b)
            }
            : v;
            V.$$addScopeClass = m ? function(a, b) {
                F(a, b ? "ng-isolate-scope" : "ng-scope")
            }
            : v;
            return V
        }
        ]
    }
    function va(b) {
        return fb(b.replace(Xc, ""))
    }
    function ad(b, a) {
        var c = ""
          , d = b.split(/\s+/)
          , e = a.split(/\s+/)
          , f = 0;
        a: for (; f < d.length; f++) {
            for (var g = d[f], h = 0; h < e.length; h++)
                if (g == e[h])
                    continue a;
            c += (0 < c.length ? " " : "") + g
        }
        return c
    }
    function Yc(b) {
        b = z(b);
        var a = b.length;
        if (1 >= a)
            return b;
        for (; a--; )
            8 === b[a].nodeType && Mf.call(b, a, 1);
        return b
    }
    function Xe() {
        var b = {}
          , a = !1;
        this.register = function(a, d) {
            Ta(a, "controller");
            D(a) ? Q(b, a) : b[a] = d
        }
        ;
        this.allowGlobals = function() {
            a = !0
        }
        ;
        this.$get = ["$injector", "$window", function(c, d) {
            function e(a, b, c, d) {
                if (!a || !D(a.$scope))
                    throw G("$controller")("noscp", d, b);
                a.$scope[b] = c
            }
            return function(f, g, h, l) {
                var k, m, q;
                h = !0 === h;
                l && H(l) && (q = l);
                if (H(f)) {
                    l = f.match(Vc);
                    if (!l)
                        throw Nf("ctrlfmt", f);
                    m = l[1];
                    q = q || l[3];
                    f = b.hasOwnProperty(m) ? b[m] : Bc(g.$scope, m, !0) || (a ? Bc(d, m, !0) : u);
                    Sa(f, m, !0)
                }
                if (h)
                    return h = (K(f) ? f[f.length - 1] : f).prototype,
                    k = Object.create(h || null),
                    q && e(g, q, k, m || f.name),
                    Q(function() {
                        var a = c.invoke(f, k, g, m);
                        a !== k && (D(a) || B(a)) && (k = a,
                        q && e(g, q, k, m || f.name));
                        return k
                    }, {
                        instance: k,
                        identifier: q
                    });
                k = c.instantiate(f, g, m);
                q && e(g, q, k, m || f.name);
                return k
            }
        }
        ]
    }
    function Ye() {
        this.$get = ["$window", function(b) {
            return z(b.document)
        }
        ]
    }
    function Ze() {
        this.$get = ["$log", function(b) {
            return function(a, c) {
                b.error.apply(b, arguments)
            }
        }
        ]
    }
    function Yb(b) {
        return D(b) ? ca(b) ? b.toISOString() : db(b) : b
    }
    function df() {
        this.$get = function() {
            return function(b) {
                if (!b)
                    return "";
                var a = [];
                mc(b, function(b, d) {
                    null === b || y(b) || (K(b) ? n(b, function(b, c) {
                        a.push(ma(d) + "=" + ma(Yb(b)))
                    }) : a.push(ma(d) + "=" + ma(Yb(b))))
                });
                return a.join("&")
            }
        }
    }
    function ef() {
        this.$get = function() {
            return function(b) {
                function a(b, e, f) {
                    null === b || y(b) || (K(b) ? n(b, function(b, c) {
                        a(b, e + "[" + (D(b) ? c : "") + "]")
                    }) : D(b) && !ca(b) ? mc(b, function(b, c) {
                        a(b, e + (f ? "" : "[") + c + (f ? "" : "]"))
                    }) : c.push(ma(e) + "=" + ma(Yb(b))))
                }
                if (!b)
                    return "";
                var c = [];
                a(b, "", !0);
                return c.join("&")
            }
        }
    }
    function Zb(b, a) {
        if (H(b)) {
            var c = b.replace(Of, "").trim();
            if (c) {
                var d = a("Content-Type");
                (d = d && 0 === d.indexOf(bd)) || (d = (d = c.match(Pf)) && Qf[d[0]].test(c));
                d && (b = uc(c))
            }
        }
        return b
    }
    function cd(b) {
        var a = ga(), c;
        H(b) ? n(b.split("\n"), function(b) {
            c = b.indexOf(":");
            var e = I(T(b.substr(0, c)));
            b = T(b.substr(c + 1));
            e && (a[e] = a[e] ? a[e] + ", " + b : b)
        }) : D(b) && n(b, function(b, c) {
            var f = I(c)
              , g = T(b);
            f && (a[f] = a[f] ? a[f] + ", " + g : g)
        });
        return a
    }
    function dd(b) {
        var a;
        return function(c) {
            a || (a = cd(b));
            return c ? (c = a[I(c)],
            void 0 === c && (c = null),
            c) : a
        }
    }
    function ed(b, a, c, d) {
        if (B(d))
            return d(b, a, c);
        n(d, function(d) {
            b = d(b, a, c)
        });
        return b
    }
    function cf() {
        var b = this.defaults = {
            transformResponse: [Zb],
            transformRequest: [function(a) {
                return D(a) && "[object File]" !== sa.call(a) && "[object Blob]" !== sa.call(a) && "[object FormData]" !== sa.call(a) ? db(a) : a
            }
            ],
            headers: {
                common: {
                    Accept: "application/json, text/plain, */*"
                },
                post: ia($b),
                put: ia($b),
                patch: ia($b)
            },
            xsrfCookieName: "XSRF-TOKEN",
            xsrfHeaderName: "X-XSRF-TOKEN",
            paramSerializer: "$httpParamSerializer"
        }
          , a = !1;
        this.useApplyAsync = function(b) {
            return x(b) ? (a = !!b,
            this) : a
        }
        ;
        var c = !0;
        this.useLegacyPromiseExtensions = function(a) {
            return x(a) ? (c = !!a,
            this) : c
        }
        ;
        var d = this.interceptors = [];
        this.$get = ["$httpBackend", "$$cookieReader", "$cacheFactory", "$rootScope", "$q", "$injector", function(e, f, g, h, l, k) {
            function m(a) {
                function d(a) {
                    var b = Q({}, a);
                    b.data = a.data ? ed(a.data, a.headers, a.status, f.transformResponse) : a.data;
                    a = a.status;
                    return 200 <= a && 300 > a ? b : l.reject(b)
                }
                function e(a, b) {
                    var c, d = {};
                    n(a, function(a, e) {
                        B(a) ? (c = a(b),
                        null != c && (d[e] = c)) : d[e] = a
                    });
                    return d
                }
                if (!aa.isObject(a))
                    throw G("$http")("badreq", a);
                var f = Q({
                    method: "get",
                    transformRequest: b.transformRequest,
                    transformResponse: b.transformResponse,
                    paramSerializer: b.paramSerializer
                }, a);
                f.headers = function(a) {
                    var c = b.headers, d = Q({}, a.headers), f, g, h, c = Q({}, c.common, c[I(a.method)]);
                    a: for (f in c) {
                        g = I(f);
                        for (h in d)
                            if (I(h) === g)
                                continue a;
                        d[f] = c[f]
                    }
                    return e(d, ia(a))
                }(a);
                f.method = rb(f.method);
                f.paramSerializer = H(f.paramSerializer) ? k.get(f.paramSerializer) : f.paramSerializer;
                var g = [function(a) {
                    var c = a.headers
                      , e = ed(a.data, dd(c), u, a.transformRequest);
                    y(e) && n(c, function(a, b) {
                        "content-type" === I(b) && delete c[b]
                    });
                    y(a.withCredentials) && !y(b.withCredentials) && (a.withCredentials = b.withCredentials);
                    return q(a, e).then(d, d)
                }
                , u]
                  , h = l.when(f);
                for (n(E, function(a) {
                    (a.request || a.requestError) && g.unshift(a.request, a.requestError);
                    (a.response || a.responseError) && g.push(a.response, a.responseError)
                }); g.length; ) {
                    a = g.shift();
                    var m = g.shift()
                      , h = h.then(a, m)
                }
                c ? (h.success = function(a) {
                    Sa(a, "fn");
                    h.then(function(b) {
                        a(b.data, b.status, b.headers, f)
                    });
                    return h
                }
                ,
                h.error = function(a) {
                    Sa(a, "fn");
                    h.then(null, function(b) {
                        a(b.data, b.status, b.headers, f)
                    });
                    return h
                }
                ) : (h.success = fd("success"),
                h.error = fd("error"));
                return h
            }
            function q(c, d) {
                function g(b, c, d, e) {
                    function f() {
                        k(c, b, d, e)
                    }
                    F && (200 <= b && 300 > b ? F.put(P, [b, c, cd(d), e]) : F.remove(P));
                    a ? h.$applyAsync(f) : (f(),
                    h.$$phase || h.$apply())
                }
                function k(a, b, d, e) {
                    b = Math.max(b, 0);
                    (200 <= b && 300 > b ? O.resolve : O.reject)({
                        data: a,
                        status: b,
                        headers: dd(d),
                        config: c,
                        statusText: e
                    })
                }
                function q(a) {
                    k(a.data, a.status, ia(a.headers()), a.statusText)
                }
                function E() {
                    var a = m.pendingRequests.indexOf(c);
                    -1 !== a && m.pendingRequests.splice(a, 1)
                }
                var O = l.defer(), J = O.promise, F, n, S = c.headers, P = s(c.url, c.paramSerializer(c.params));
                m.pendingRequests.push(c);
                J.then(E, E);
                !c.cache && !b.cache || !1 === c.cache || "GET" !== c.method && "JSONP" !== c.method || (F = D(c.cache) ? c.cache : D(b.cache) ? b.cache : t);
                F && (n = F.get(P),
                x(n) ? n && B(n.then) ? n.then(q, q) : K(n) ? k(n[1], n[0], ia(n[2]), n[3]) : k(n, 200, {}, "OK") : F.put(P, J));
                y(n) && ((n = gd(c.url) ? f()[c.xsrfCookieName || b.xsrfCookieName] : u) && (S[c.xsrfHeaderName || b.xsrfHeaderName] = n),
                e(c.method, P, d, g, S, c.timeout, c.withCredentials, c.responseType));
                return J
            }
            function s(a, b) {
                0 < b.length && (a += (-1 == a.indexOf("?") ? "?" : "&") + b);
                return a
            }
            var t = g("$http");
            b.paramSerializer = H(b.paramSerializer) ? k.get(b.paramSerializer) : b.paramSerializer;
            var E = [];
            n(d, function(a) {
                E.unshift(H(a) ? k.get(a) : k.invoke(a))
            });
            m.pendingRequests = [];
            (function(a) {
                n(arguments, function(a) {
                    m[a] = function(b, c) {
                        return m(Q({}, c || {}, {
                            method: a,
                            url: b
                        }))
                    }
                })
            }
            )("get", "delete", "head", "jsonp");
            (function(a) {
                n(arguments, function(a) {
                    m[a] = function(b, c, d) {
                        return m(Q({}, d || {}, {
                            method: a,
                            url: b,
                            data: c
                        }))
                    }
                })
            }
            )("post", "put", "patch");
            m.defaults = b;
            return m
        }
        ]
    }
    function Rf() {
        return new N.XMLHttpRequest
    }
    function ff() {
        this.$get = ["$browser", "$window", "$document", function(b, a, c) {
            return Sf(b, Rf, b.defer, a.angular.callbacks, c[0])
        }
        ]
    }
    function Sf(b, a, c, d, e) {
        function f(a, b, c) {
            var f = e.createElement("script")
              , m = null;
            f.type = "text/javascript";
            f.src = a;
            f.async = !0;
            m = function(a) {
                f.removeEventListener("load", m, !1);
                f.removeEventListener("error", m, !1);
                e.body.removeChild(f);
                f = null;
                var g = -1
                  , t = "unknown";
                a && ("load" !== a.type || d[b].called || (a = {
                    type: "error"
                }),
                t = a.type,
                g = "error" === a.type ? 404 : 200);
                c && c(g, t)
            }
            ;
            f.addEventListener("load", m, !1);
            f.addEventListener("error", m, !1);
            e.body.appendChild(f);
            return m
        }
        return function(e, h, l, k, m, q, s, t) {
            function E() {
                p && p();
                A && A.abort()
            }
            function L(a, d, e, f, g) {
                M !== u && c.cancel(M);
                p = A = null;
                a(d, e, f, g);
                b.$$completeOutstandingRequest(v)
            }
            b.$$incOutstandingRequestCount();
            h = h || b.url();
            if ("jsonp" == I(e)) {
                var w = "_" + (d.counter++).toString(36);
                d[w] = function(a) {
                    d[w].data = a;
                    d[w].called = !0
                }
                ;
                var p = f(h.replace("JSON_CALLBACK", "angular.callbacks." + w), w, function(a, b) {
                    L(k, a, d[w].data, "", b);
                    d[w] = v
                })
            } else {
                var A = a();
                A.open(e, h, !0);
                n(m, function(a, b) {
                    x(a) && A.setRequestHeader(b, a)
                });
                A.onload = function() {
                    var a = A.statusText || ""
                      , b = "response"in A ? A.response : A.responseText
                      , c = 1223 === A.status ? 204 : A.status;
                    0 === c && (c = b ? 200 : "file" == Aa(h).protocol ? 404 : 0);
                    L(k, c, b, A.getAllResponseHeaders(), a)
                }
                ;
                e = function() {
                    L(k, -1, null, null, "")
                }
                ;
                A.onerror = e;
                A.onabort = e;
                s && (A.withCredentials = !0);
                if (t)
                    try {
                        A.responseType = t
                    } catch (r) {
                        if ("json" !== t)
                            throw r;
                    }
                A.send(l)
            }
            if (0 < q)
                var M = c(E, q);
            else
                q && B(q.then) && q.then(E)
        }
    }
    function af() {
        var b = "{{"
          , a = "}}";
        this.startSymbol = function(a) {
            return a ? (b = a,
            this) : b
        }
        ;
        this.endSymbol = function(b) {
            return b ? (a = b,
            this) : a
        }
        ;
        this.$get = ["$parse", "$exceptionHandler", "$sce", function(c, d, e) {
            function f(a) {
                return "\\\\\\" + a
            }
            function g(c) {
                return c.replace(m, b).replace(q, a)
            }
            function h(f, h, m, q) {
                function w(a) {
                    try {
                        var b = a;
                        a = m ? e.getTrusted(m, b) : e.valueOf(b);
                        var c;
                        if (q && !x(a))
                            c = a;
                        else if (null == a)
                            c = "";
                        else {
                            switch (typeof a) {
                            case "string":
                                break;
                            case "number":
                                a = "" + a;
                                break;
                            default:
                                a = db(a)
                            }
                            c = a
                        }
                        return c
                    } catch (g) {
                        d(Ka.interr(f, g))
                    }
                }
                q = !!q;
                for (var p, n, r = 0, M = [], O = [], J = f.length, F = [], V = []; r < J; )
                    if (-1 != (p = f.indexOf(b, r)) && -1 != (n = f.indexOf(a, p + l)))
                        r !== p && F.push(g(f.substring(r, p))),
                        r = f.substring(p + l, n),
                        M.push(r),
                        O.push(c(r, w)),
                        r = n + k,
                        V.push(F.length),
                        F.push("");
                    else {
                        r !== J && F.push(g(f.substring(r)));
                        break
                    }
                m && 1 < F.length && Ka.throwNoconcat(f);
                if (!h || M.length) {
                    var S = function(a) {
                        for (var b = 0, c = M.length; b < c; b++) {
                            if (q && y(a[b]))
                                return;
                            F[V[b]] = a[b]
                        }
                        return F.join("")
                    };
                    return Q(function(a) {
                        var b = 0
                          , c = M.length
                          , e = Array(c);
                        try {
                            for (; b < c; b++)
                                e[b] = O[b](a);
                            return S(e)
                        } catch (g) {
                            d(Ka.interr(f, g))
                        }
                    }, {
                        exp: f,
                        expressions: M,
                        $$watchDelegate: function(a, b) {
                            var c;
                            return a.$watchGroup(O, function(d, e) {
                                var f = S(d);
                                B(b) && b.call(this, f, d !== e ? c : f, a);
                                c = f
                            })
                        }
                    })
                }
            }
            var l = b.length
              , k = a.length
              , m = new RegExp(b.replace(/./g, f),"g")
              , q = new RegExp(a.replace(/./g, f),"g");
            h.startSymbol = function() {
                return b
            }
            ;
            h.endSymbol = function() {
                return a
            }
            ;
            return h
        }
        ]
    }
    function bf() {
        this.$get = ["$rootScope", "$window", "$q", "$$q", function(b, a, c, d) {
            function e(e, h, l, k) {
                var m = 4 < arguments.length
                  , q = m ? xa.call(arguments, 4) : []
                  , s = a.setInterval
                  , t = a.clearInterval
                  , E = 0
                  , L = x(k) && !k
                  , w = (L ? d : c).defer()
                  , p = w.promise;
                l = x(l) ? l : 0;
                p.then(null, null, m ? function() {
                    e.apply(null, q)
                }
                : e);
                p.$$intervalId = s(function() {
                    w.notify(E++);
                    0 < l && E >= l && (w.resolve(E),
                    t(p.$$intervalId),
                    delete f[p.$$intervalId]);
                    L || b.$apply()
                }, h);
                f[p.$$intervalId] = w;
                return p
            }
            var f = {};
            e.cancel = function(b) {
                return b && b.$$intervalId in f ? (f[b.$$intervalId].reject("canceled"),
                a.clearInterval(b.$$intervalId),
                delete f[b.$$intervalId],
                !0) : !1
            }
            ;
            return e
        }
        ]
    }
    function ac(b) {
        b = b.split("/");
        for (var a = b.length; a--; )
            b[a] = nb(b[a]);
        return b.join("/")
    }
    function hd(b, a) {
        var c = Aa(b);
        a.$$protocol = c.protocol;
        a.$$host = c.hostname;
        a.$$port = Y(c.port) || Tf[c.protocol] || null
    }
    function id(b, a) {
        var c = "/" !== b.charAt(0);
        c && (b = "/" + b);
        var d = Aa(b);
        a.$$path = decodeURIComponent(c && "/" === d.pathname.charAt(0) ? d.pathname.substring(1) : d.pathname);
        a.$$search = xc(d.search);
        a.$$hash = decodeURIComponent(d.hash);
        a.$$path && "/" != a.$$path.charAt(0) && (a.$$path = "/" + a.$$path)
    }
    function ra(b, a) {
        if (0 === a.indexOf(b))
            return a.substr(b.length)
    }
    function Ja(b) {
        var a = b.indexOf("#");
        return -1 == a ? b : b.substr(0, a)
    }
    function Cb(b) {
        return b.replace(/(#.+)|#$/, "$1")
    }
    function bc(b, a, c) {
        this.$$html5 = !0;
        c = c || "";
        hd(b, this);
        this.$$parse = function(b) {
            var c = ra(a, b);
            if (!H(c))
                throw Db("ipthprfx", b, a);
            id(c, this);
            this.$$path || (this.$$path = "/");
            this.$$compose()
        }
        ;
        this.$$compose = function() {
            var b = Pb(this.$$search)
              , c = this.$$hash ? "#" + nb(this.$$hash) : "";
            this.$$url = ac(this.$$path) + (b ? "?" + b : "") + c;
            this.$$absUrl = a + this.$$url.substr(1)
        }
        ;
        this.$$parseLinkUrl = function(d, e) {
            if (e && "#" === e[0])
                return this.hash(e.slice(1)),
                !0;
            var f, g;
            (f = ra(b, d)) !== u ? (g = f,
            g = (f = ra(c, f)) !== u ? a + (ra("/", f) || f) : b + g) : (f = ra(a, d)) !== u ? g = a + f : a == d + "/" && (g = a);
            g && this.$$parse(g);
            return !!g
        }
    }
    function cc(b, a, c) {
        hd(b, this);
        this.$$parse = function(d) {
            var e = ra(b, d) || ra(a, d), f;
            y(e) || "#" !== e.charAt(0) ? this.$$html5 ? f = e : (f = "",
            y(e) && (b = d,
            this.replace())) : (f = ra(c, e),
            y(f) && (f = e));
            id(f, this);
            d = this.$$path;
            var e = b
              , g = /^\/[A-Z]:(\/.*)/;
            0 === f.indexOf(e) && (f = f.replace(e, ""));
            g.exec(f) || (d = (f = g.exec(d)) ? f[1] : d);
            this.$$path = d;
            this.$$compose()
        }
        ;
        this.$$compose = function() {
            var a = Pb(this.$$search)
              , e = this.$$hash ? "#" + nb(this.$$hash) : "";
            this.$$url = ac(this.$$path) + (a ? "?" + a : "") + e;
            this.$$absUrl = b + (this.$$url ? c + this.$$url : "")
        }
        ;
        this.$$parseLinkUrl = function(a, c) {
            return Ja(b) == Ja(a) ? (this.$$parse(a),
            !0) : !1
        }
    }
    function jd(b, a, c) {
        this.$$html5 = !0;
        cc.apply(this, arguments);
        this.$$parseLinkUrl = function(d, e) {
            if (e && "#" === e[0])
                return this.hash(e.slice(1)),
                !0;
            var f, g;
            b == Ja(d) ? f = d : (g = ra(a, d)) ? f = b + c + g : a === d + "/" && (f = a);
            f && this.$$parse(f);
            return !!f
        }
        ;
        this.$$compose = function() {
            var a = Pb(this.$$search)
              , e = this.$$hash ? "#" + nb(this.$$hash) : "";
            this.$$url = ac(this.$$path) + (a ? "?" + a : "") + e;
            this.$$absUrl = b + c + this.$$url
        }
    }
    function Eb(b) {
        return function() {
            return this[b]
        }
    }
    function kd(b, a) {
        return function(c) {
            if (y(c))
                return this[b];
            this[b] = a(c);
            this.$$compose();
            return this
        }
    }
    function gf() {
        var b = ""
          , a = {
            enabled: !1,
            requireBase: !0,
            rewriteLinks: !0
        };
        this.hashPrefix = function(a) {
            return x(a) ? (b = a,
            this) : b
        }
        ;
        this.html5Mode = function(b) {
            return ab(b) ? (a.enabled = b,
            this) : D(b) ? (ab(b.enabled) && (a.enabled = b.enabled),
            ab(b.requireBase) && (a.requireBase = b.requireBase),
            ab(b.rewriteLinks) && (a.rewriteLinks = b.rewriteLinks),
            this) : a
        }
        ;
        this.$get = ["$rootScope", "$browser", "$sniffer", "$rootElement", "$window", function(c, d, e, f, g) {
            function h(a, b, c) {
                var e = k.url()
                  , f = k.$$state;
                try {
                    d.url(a, b, c),
                    k.$$state = d.state()
                } catch (g) {
                    throw k.url(e),
                    k.$$state = f,
                    g;
                }
            }
            function l(a, b) {
                c.$broadcast("$locationChangeSuccess", k.absUrl(), a, k.$$state, b)
            }
            var k, m;
            m = d.baseHref();
            var q = d.url(), s;
            if (a.enabled) {
                if (!m && a.requireBase)
                    throw Db("nobase");
                s = q.substring(0, q.indexOf("/", q.indexOf("//") + 2)) + (m || "/");
                m = e.history ? bc : jd
            } else
                s = Ja(q),
                m = cc;
            var t = s.substr(0, Ja(s).lastIndexOf("/") + 1);
            k = new m(s,t,"#" + b);
            k.$$parseLinkUrl(q, q);
            k.$$state = d.state();
            var E = /^\s*(javascript|mailto):/i;
            f.on("click", function(b) {
                if (a.rewriteLinks && !b.ctrlKey && !b.metaKey && !b.shiftKey && 2 != b.which && 2 != b.button) {
                    for (var e = z(b.target); "a" !== ta(e[0]); )
                        if (e[0] === f[0] || !(e = e.parent())[0])
                            return;
                    var h = e.prop("href")
                      , l = e.attr("href") || e.attr("xlink:href");
                    D(h) && "[object SVGAnimatedString]" === h.toString() && (h = Aa(h.animVal).href);
                    E.test(h) || !h || e.attr("target") || b.isDefaultPrevented() || !k.$$parseLinkUrl(h, l) || (b.preventDefault(),
                    k.absUrl() != d.url() && (c.$apply(),
                    g.angular["ff-684208-preventDefault"] = !0))
                }
            });
            Cb(k.absUrl()) != Cb(q) && d.url(k.absUrl(), !0);
            var L = !0;
            d.onUrlChange(function(a, b) {
                y(ra(t, a)) ? g.location.href = a : (c.$evalAsync(function() {
                    var d = k.absUrl(), e = k.$$state, f;
                    k.$$parse(a);
                    k.$$state = b;
                    f = c.$broadcast("$locationChangeStart", a, d, b, e).defaultPrevented;
                    k.absUrl() === a && (f ? (k.$$parse(d),
                    k.$$state = e,
                    h(d, !1, e)) : (L = !1,
                    l(d, e)))
                }),
                c.$$phase || c.$digest())
            });
            c.$watch(function() {
                var a = Cb(d.url())
                  , b = Cb(k.absUrl())
                  , f = d.state()
                  , g = k.$$replace
                  , m = a !== b || k.$$html5 && e.history && f !== k.$$state;
                if (L || m)
                    L = !1,
                    c.$evalAsync(function() {
                        var b = k.absUrl()
                          , d = c.$broadcast("$locationChangeStart", b, a, k.$$state, f).defaultPrevented;
                        k.absUrl() === b && (d ? (k.$$parse(a),
                        k.$$state = f) : (m && h(b, g, f === k.$$state ? null : k.$$state),
                        l(a, f)))
                    });
                k.$$replace = !1
            });
            return k
        }
        ]
    }
    function hf() {
        var b = !0
          , a = this;
        this.debugEnabled = function(a) {
            return x(a) ? (b = a,
            this) : b
        }
        ;
        this.$get = ["$window", function(c) {
            function d(a) {
                a instanceof Error && (a.stack ? a = a.message && -1 === a.stack.indexOf(a.message) ? "Error: " + a.message + "\n" + a.stack : a.stack : a.sourceURL && (a = a.message + "\n" + a.sourceURL + ":" + a.line));
                return a
            }
            function e(a) {
                var b = c.console || {}
                  , e = b[a] || b.log || v;
                a = !1;
                try {
                    a = !!e.apply
                } catch (l) {}
                return a ? function() {
                    var a = [];
                    n(arguments, function(b) {
                        a.push(d(b))
                    });
                    return e.apply(b, a)
                }
                : function(a, b) {
                    e(a, null == b ? "" : b)
                }
            }
            return {
                log: e("log"),
                info: e("info"),
                warn: e("warn"),
                error: e("error"),
                debug: function() {
                    var c = e("debug");
                    return function() {
                        b && c.apply(a, arguments)
                    }
                }()
            }
        }
        ]
    }
    function Wa(b, a) {
        if ("__defineGetter__" === b || "__defineSetter__" === b || "__lookupGetter__" === b || "__lookupSetter__" === b || "__proto__" === b)
            throw da("isecfld", a);
        return b
    }
    function Ba(b, a) {
        if (b) {
            if (b.constructor === b)
                throw da("isecfn", a);
            if (b.window === b)
                throw da("isecwindow", a);
            if (b.children && (b.nodeName || b.prop && b.attr && b.find))
                throw da("isecdom", a);
            if (b === Object)
                throw da("isecobj", a);
        }
        return b
    }
    function ld(b, a) {
        if (b) {
            if (b.constructor === b)
                throw da("isecfn", a);
            if (b === Uf || b === Vf || b === Wf)
                throw da("isecff", a);
        }
    }
    function Xf(b, a) {
        return "undefined" !== typeof b ? b : a
    }
    function md(b, a) {
        return "undefined" === typeof b ? a : "undefined" === typeof a ? b : b + a
    }
    function U(b, a) {
        var c, d;
        switch (b.type) {
        case r.Program:
            c = !0;
            n(b.body, function(b) {
                U(b.expression, a);
                c = c && b.expression.constant
            });
            b.constant = c;
            break;
        case r.Literal:
            b.constant = !0;
            b.toWatch = [];
            break;
        case r.UnaryExpression:
            U(b.argument, a);
            b.constant = b.argument.constant;
            b.toWatch = b.argument.toWatch;
            break;
        case r.BinaryExpression:
            U(b.left, a);
            U(b.right, a);
            b.constant = b.left.constant && b.right.constant;
            b.toWatch = b.left.toWatch.concat(b.right.toWatch);
            break;
        case r.LogicalExpression:
            U(b.left, a);
            U(b.right, a);
            b.constant = b.left.constant && b.right.constant;
            b.toWatch = b.constant ? [] : [b];
            break;
        case r.ConditionalExpression:
            U(b.test, a);
            U(b.alternate, a);
            U(b.consequent, a);
            b.constant = b.test.constant && b.alternate.constant && b.consequent.constant;
            b.toWatch = b.constant ? [] : [b];
            break;
        case r.Identifier:
            b.constant = !1;
            b.toWatch = [b];
            break;
        case r.MemberExpression:
            U(b.object, a);
            b.computed && U(b.property, a);
            b.constant = b.object.constant && (!b.computed || b.property.constant);
            b.toWatch = [b];
            break;
        case r.CallExpression:
            c = b.filter ? !a(b.callee.name).$stateful : !1;
            d = [];
            n(b.arguments, function(b) {
                U(b, a);
                c = c && b.constant;
                b.constant || d.push.apply(d, b.toWatch)
            });
            b.constant = c;
            b.toWatch = b.filter && !a(b.callee.name).$stateful ? d : [b];
            break;
        case r.AssignmentExpression:
            U(b.left, a);
            U(b.right, a);
            b.constant = b.left.constant && b.right.constant;
            b.toWatch = [b];
            break;
        case r.ArrayExpression:
            c = !0;
            d = [];
            n(b.elements, function(b) {
                U(b, a);
                c = c && b.constant;
                b.constant || d.push.apply(d, b.toWatch)
            });
            b.constant = c;
            b.toWatch = d;
            break;
        case r.ObjectExpression:
            c = !0;
            d = [];
            n(b.properties, function(b) {
                U(b.value, a);
                c = c && b.value.constant;
                b.value.constant || d.push.apply(d, b.value.toWatch)
            });
            b.constant = c;
            b.toWatch = d;
            break;
        case r.ThisExpression:
            b.constant = !1,
            b.toWatch = []
        }
    }
    function nd(b) {
        if (1 == b.length) {
            b = b[0].expression;
            var a = b.toWatch;
            return 1 !== a.length ? a : a[0] !== b ? a : u
        }
    }
    function od(b) {
        return b.type === r.Identifier || b.type === r.MemberExpression
    }
    function pd(b) {
        if (1 === b.body.length && od(b.body[0].expression))
            return {
                type: r.AssignmentExpression,
                left: b.body[0].expression,
                right: {
                    type: r.NGValueParameter
                },
                operator: "="
            }
    }
    function qd(b) {
        return 0 === b.body.length || 1 === b.body.length && (b.body[0].expression.type === r.Literal || b.body[0].expression.type === r.ArrayExpression || b.body[0].expression.type === r.ObjectExpression)
    }
    function rd(b, a) {
        this.astBuilder = b;
        this.$filter = a
    }
    function sd(b, a) {
        this.astBuilder = b;
        this.$filter = a
    }
    function Fb(b) {
        return "constructor" == b
    }
    function dc(b) {
        return B(b.valueOf) ? b.valueOf() : Yf.call(b)
    }
    function jf() {
        var b = ga()
          , a = ga();
        this.$get = ["$filter", function(c) {
            function d(a, b) {
                return null == a || null == b ? a === b : "object" === typeof a && (a = dc(a),
                "object" === typeof a) ? !1 : a === b || a !== a && b !== b
            }
            function e(a, b, c, e, f) {
                var g = e.inputs, h;
                if (1 === g.length) {
                    var k = d
                      , g = g[0];
                    return a.$watch(function(a) {
                        var b = g(a);
                        d(b, k) || (h = e(a, u, u, [b]),
                        k = b && dc(b));
                        return h
                    }, b, c, f)
                }
                for (var l = [], m = [], q = 0, n = g.length; q < n; q++)
                    l[q] = d,
                    m[q] = null;
                return a.$watch(function(a) {
                    for (var b = !1, c = 0, f = g.length; c < f; c++) {
                        var k = g[c](a);
                        if (b || (b = !d(k, l[c])))
                            m[c] = k,
                            l[c] = k && dc(k)
                    }
                    b && (h = e(a, u, u, m));
                    return h
                }, b, c, f)
            }
            function f(a, b, c, d) {
                var e, f;
                return e = a.$watch(function(a) {
                    return d(a)
                }, function(a, c, d) {
                    f = a;
                    B(b) && b.apply(this, arguments);
                    x(a) && d.$$postDigest(function() {
                        x(f) && e()
                    })
                }, c)
            }
            function g(a, b, c, d) {
                function e(a) {
                    var b = !0;
                    n(a, function(a) {
                        x(a) || (b = !1)
                    });
                    return b
                }
                var f, g;
                return f = a.$watch(function(a) {
                    return d(a)
                }, function(a, c, d) {
                    g = a;
                    B(b) && b.call(this, a, c, d);
                    e(a) && d.$$postDigest(function() {
                        e(g) && f()
                    })
                }, c)
            }
            function h(a, b, c, d) {
                var e;
                return e = a.$watch(function(a) {
                    return d(a)
                }, function(a, c, d) {
                    B(b) && b.apply(this, arguments);
                    e()
                }, c)
            }
            function l(a, b) {
                if (!b)
                    return a;
                var c = a.$$watchDelegate
                  , c = c !== g && c !== f ? function(c, d, e, f) {
                    e = a(c, d, e, f);
                    return b(e, c, d)
                }
                : function(c, d, e, f) {
                    e = a(c, d, e, f);
                    c = b(e, c, d);
                    return x(e) ? c : e
                }
                ;
                a.$$watchDelegate && a.$$watchDelegate !== e ? c.$$watchDelegate = a.$$watchDelegate : b.$stateful || (c.$$watchDelegate = e,
                c.inputs = a.inputs ? a.inputs : [a]);
                return c
            }
            var k = Fa().noUnsafeEval
              , m = {
                csp: k,
                expensiveChecks: !1
            }
              , q = {
                csp: k,
                expensiveChecks: !0
            };
            return function(d, k, E) {
                var n, w, p;
                switch (typeof d) {
                case "string":
                    p = d = d.trim();
                    var r = E ? a : b;
                    n = r[p];
                    n || (":" === d.charAt(0) && ":" === d.charAt(1) && (w = !0,
                    d = d.substring(2)),
                    E = E ? q : m,
                    n = new ec(E),
                    n = (new fc(n,c,E)).parse(d),
                    n.constant ? n.$$watchDelegate = h : w ? n.$$watchDelegate = n.literal ? g : f : n.inputs && (n.$$watchDelegate = e),
                    r[p] = n);
                    return l(n, k);
                case "function":
                    return l(d, k);
                default:
                    return v
                }
            }
        }
        ]
    }
    function lf() {
        this.$get = ["$rootScope", "$exceptionHandler", function(b, a) {
            return td(function(a) {
                b.$evalAsync(a)
            }, a)
        }
        ]
    }
    function mf() {
        this.$get = ["$browser", "$exceptionHandler", function(b, a) {
            return td(function(a) {
                b.defer(a)
            }, a)
        }
        ]
    }
    function td(b, a) {
        function c(a, b, c) {
            function d(b) {
                return function(c) {
                    e || (e = !0,
                    b.call(a, c))
                }
            }
            var e = !1;
            return [d(b), d(c)]
        }
        function d() {
            this.$$state = {
                status: 0
            }
        }
        function e(a, b) {
            return function(c) {
                b.call(a, c)
            }
        }
        function f(c) {
            !c.processScheduled && c.pending && (c.processScheduled = !0,
            b(function() {
                var b, d, e;
                e = c.pending;
                c.processScheduled = !1;
                c.pending = u;
                for (var f = 0, g = e.length; f < g; ++f) {
                    d = e[f][0];
                    b = e[f][c.status];
                    try {
                        B(b) ? d.resolve(b(c.value)) : 1 === c.status ? d.resolve(c.value) : d.reject(c.value)
                    } catch (h) {
                        d.reject(h),
                        a(h)
                    }
                }
            }))
        }
        function g() {
            this.promise = new d;
            this.resolve = e(this, this.resolve);
            this.reject = e(this, this.reject);
            this.notify = e(this, this.notify)
        }
        var h = G("$q", TypeError);
        Q(d.prototype, {
            then: function(a, b, c) {
                if (y(a) && y(b) && y(c))
                    return this;
                var d = new g;
                this.$$state.pending = this.$$state.pending || [];
                this.$$state.pending.push([d, a, b, c]);
                0 < this.$$state.status && f(this.$$state);
                return d.promise
            },
            "catch": function(a) {
                return this.then(null, a)
            },
            "finally": function(a, b) {
                return this.then(function(b) {
                    return k(b, !0, a)
                }, function(b) {
                    return k(b, !1, a)
                }, b)
            }
        });
        Q(g.prototype, {
            resolve: function(a) {
                this.promise.$$state.status || (a === this.promise ? this.$$reject(h("qcycle", a)) : this.$$resolve(a))
            },
            $$resolve: function(b) {
                var d, e;
                e = c(this, this.$$resolve, this.$$reject);
                try {
                    if (D(b) || B(b))
                        d = b && b.then;
                    B(d) ? (this.promise.$$state.status = -1,
                    d.call(b, e[0], e[1], this.notify)) : (this.promise.$$state.value = b,
                    this.promise.$$state.status = 1,
                    f(this.promise.$$state))
                } catch (g) {
                    e[1](g),
                    a(g)
                }
            },
            reject: function(a) {
                this.promise.$$state.status || this.$$reject(a)
            },
            $$reject: function(a) {
                this.promise.$$state.value = a;
                this.promise.$$state.status = 2;
                f(this.promise.$$state)
            },
            notify: function(c) {
                var d = this.promise.$$state.pending;
                0 >= this.promise.$$state.status && d && d.length && b(function() {
                    for (var b, e, f = 0, g = d.length; f < g; f++) {
                        e = d[f][0];
                        b = d[f][3];
                        try {
                            e.notify(B(b) ? b(c) : c)
                        } catch (h) {
                            a(h)
                        }
                    }
                })
            }
        });
        var l = function(a, b) {
            var c = new g;
            b ? c.resolve(a) : c.reject(a);
            return c.promise
        }
          , k = function(a, b, c) {
            var d = null;
            try {
                B(c) && (d = c())
            } catch (e) {
                return l(e, !1)
            }
            return d && B(d.then) ? d.then(function() {
                return l(a, b)
            }, function(a) {
                return l(a, !1)
            }) : l(a, b)
        }
          , m = function(a, b, c, d) {
            var e = new g;
            e.resolve(a);
            return e.promise.then(b, c, d)
        }
          , q = function t(a) {
            if (!B(a))
                throw h("norslvr", a);
            if (!(this instanceof t))
                return new t(a);
            var b = new g;
            a(function(a) {
                b.resolve(a)
            }, function(a) {
                b.reject(a)
            });
            return b.promise
        };
        q.defer = function() {
            return new g
        }
        ;
        q.reject = function(a) {
            var b = new g;
            b.reject(a);
            return b.promise
        }
        ;
        q.when = m;
        q.resolve = m;
        q.all = function(a) {
            var b = new g
              , c = 0
              , d = K(a) ? [] : {};
            n(a, function(a, e) {
                c++;
                m(a).then(function(a) {
                    d.hasOwnProperty(e) || (d[e] = a,
                    --c || b.resolve(d))
                }, function(a) {
                    d.hasOwnProperty(e) || b.reject(a)
                })
            });
            0 === c && b.resolve(d);
            return b.promise
        }
        ;
        return q
    }
    function vf() {
        this.$get = ["$window", "$timeout", function(b, a) {
            var c = b.requestAnimationFrame || b.webkitRequestAnimationFrame
              , d = b.cancelAnimationFrame || b.webkitCancelAnimationFrame || b.webkitCancelRequestAnimationFrame
              , e = !!c
              , f = e ? function(a) {
                var b = c(a);
                return function() {
                    d(b)
                }
            }
            : function(b) {
                var c = a(b, 16.66, !1);
                return function() {
                    a.cancel(c)
                }
            }
            ;
            f.supported = e;
            return f
        }
        ]
    }
    function kf() {
        function b(a) {
            function b() {
                this.$$watchers = this.$$nextSibling = this.$$childHead = this.$$childTail = null;
                this.$$listeners = {};
                this.$$listenerCount = {};
                this.$$watchersCount = 0;
                this.$id = ++mb;
                this.$$ChildScope = null
            }
            b.prototype = a;
            return b
        }
        var a = 10
          , c = G("$rootScope")
          , d = null
          , e = null;
        this.digestTtl = function(b) {
            arguments.length && (a = b);
            return a
        }
        ;
        this.$get = ["$injector", "$exceptionHandler", "$parse", "$browser", function(f, g, h, l) {
            function k(a) {
                a.currentScope.$$destroyed = !0
            }
            function m() {
                this.$id = ++mb;
                this.$$phase = this.$parent = this.$$watchers = this.$$nextSibling = this.$$prevSibling = this.$$childHead = this.$$childTail = null;
                this.$root = this;
                this.$$destroyed = !1;
                this.$$listeners = {};
                this.$$listenerCount = {};
                this.$$watchersCount = 0;
                this.$$isolateBindings = null
            }
            function q(a) {
                if (p.$$phase)
                    throw c("inprog", p.$$phase);
                p.$$phase = a
            }
            function s(a, b) {
                do
                    a.$$watchersCount += b;
                while (a = a.$parent)
            }
            function t(a, b, c) {
                do
                    a.$$listenerCount[c] -= b,
                    0 === a.$$listenerCount[c] && delete a.$$listenerCount[c];
                while (a = a.$parent)
            }
            function r() {}
            function L() {
                for (; M.length; )
                    try {
                        M.shift()()
                    } catch (a) {
                        g(a)
                    }
                e = null
            }
            function w() {
                null === e && (e = l.defer(function() {
                    p.$apply(L)
                }))
            }
            m.prototype = {
                constructor: m,
                $new: function(a, c) {
                    var d;
                    c = c || this;
                    a ? (d = new m,
                    d.$root = this.$root) : (this.$$ChildScope || (this.$$ChildScope = b(this)),
                    d = new this.$$ChildScope);
                    d.$parent = c;
                    d.$$prevSibling = c.$$childTail;
                    c.$$childHead ? (c.$$childTail.$$nextSibling = d,
                    c.$$childTail = d) : c.$$childHead = c.$$childTail = d;
                    (a || c != this) && d.$on("$destroy", k);
                    return d
                },
                $watch: function(a, b, c, e) {
                    var f = h(a);
                    if (f.$$watchDelegate)
                        return f.$$watchDelegate(this, b, c, f, a);
                    var g = this
                      , k = g.$$watchers
                      , l = {
                        fn: b,
                        last: r,
                        get: f,
                        exp: e || a,
                        eq: !!c
                    };
                    d = null;
                    B(b) || (l.fn = v);
                    k || (k = g.$$watchers = []);
                    k.unshift(l);
                    s(this, 1);
                    return function() {
                        0 <= bb(k, l) && s(g, -1);
                        d = null
                    }
                },
                $watchGroup: function(a, b) {
                    function c() {
                        h = !1;
                        k ? (k = !1,
                        b(e, e, g)) : b(e, d, g)
                    }
                    var d = Array(a.length)
                      , e = Array(a.length)
                      , f = []
                      , g = this
                      , h = !1
                      , k = !0;
                    if (!a.length) {
                        var l = !0;
                        g.$evalAsync(function() {
                            l && b(e, e, g)
                        });
                        return function() {
                            l = !1
                        }
                    }
                    if (1 === a.length)
                        return this.$watch(a[0], function(a, c, f) {
                            e[0] = a;
                            d[0] = c;
                            b(e, a === c ? e : d, f)
                        });
                    n(a, function(a, b) {
                        var k = g.$watch(a, function(a, f) {
                            e[b] = a;
                            d[b] = f;
                            h || (h = !0,
                            g.$evalAsync(c))
                        });
                        f.push(k)
                    });
                    return function() {
                        for (; f.length; )
                            f.shift()()
                    }
                },
                $watchCollection: function(a, b) {
                    function c(a) {
                        e = a;
                        var b, d, g, h;
                        if (!y(e)) {
                            if (D(e))
                                if (Da(e))
                                    for (f !== q && (f = q,
                                    t = f.length = 0,
                                    l++),
                                    a = e.length,
                                    t !== a && (l++,
                                    f.length = t = a),
                                    b = 0; b < a; b++)
                                        h = f[b],
                                        g = e[b],
                                        d = h !== h && g !== g,
                                        d || h === g || (l++,
                                        f[b] = g);
                                else {
                                    f !== s && (f = s = {},
                                    t = 0,
                                    l++);
                                    a = 0;
                                    for (b in e)
                                        e.hasOwnProperty(b) && (a++,
                                        g = e[b],
                                        h = f[b],
                                        b in f ? (d = h !== h && g !== g,
                                        d || h === g || (l++,
                                        f[b] = g)) : (t++,
                                        f[b] = g,
                                        l++));
                                    if (t > a)
                                        for (b in l++,
                                        f)
                                            e.hasOwnProperty(b) || (t--,
                                            delete f[b])
                                }
                            else
                                f !== e && (f = e,
                                l++);
                            return l
                        }
                    }
                    c.$stateful = !0;
                    var d = this, e, f, g, k = 1 < b.length, l = 0, m = h(a, c), q = [], s = {}, p = !0, t = 0;
                    return this.$watch(m, function() {
                        p ? (p = !1,
                        b(e, e, d)) : b(e, g, d);
                        if (k)
                            if (D(e))
                                if (Da(e)) {
                                    g = Array(e.length);
                                    for (var a = 0; a < e.length; a++)
                                        g[a] = e[a]
                                } else
                                    for (a in g = {},
                                    e)
                                        Na.call(e, a) && (g[a] = e[a]);
                            else
                                g = e
                    })
                },
                $digest: function() {
                    var b, f, h, k, m, s, t = a, n, w = [], C, M;
                    q("$digest");
                    l.$$checkUrlChange();
                    this === p && null !== e && (l.defer.cancel(e),
                    L());
                    d = null;
                    do {
                        s = !1;
                        for (n = this; u.length; ) {
                            try {
                                M = u.shift(),
                                M.scope.$eval(M.expression, M.locals)
                            } catch (v) {
                                g(v)
                            }
                            d = null
                        }
                        a: do {
                            if (k = n.$$watchers)
                                for (m = k.length; m--; )
                                    try {
                                        if (b = k[m])
                                            if ((f = b.get(n)) !== (h = b.last) && !(b.eq ? ka(f, h) : "number" === typeof f && "number" === typeof h && isNaN(f) && isNaN(h)))
                                                s = !0,
                                                d = b,
                                                b.last = b.eq ? fa(f, null) : f,
                                                b.fn(f, h === r ? f : h, n),
                                                5 > t && (C = 4 - t,
                                                w[C] || (w[C] = []),
                                                w[C].push({
                                                    msg: B(b.exp) ? "fn: " + (b.exp.name || b.exp.toString()) : b.exp,
                                                    newVal: f,
                                                    oldVal: h
                                                }));
                                            else if (b === d) {
                                                s = !1;
                                                break a
                                            }
                                    } catch (y) {
                                        g(y)
                                    }
                            if (!(k = n.$$watchersCount && n.$$childHead || n !== this && n.$$nextSibling))
                                for (; n !== this && !(k = n.$$nextSibling); )
                                    n = n.$parent
                        } while (n = k);
                        if ((s || u.length) && !t--)
                            throw p.$$phase = null,
                            c("infdig", a, w);
                    } while (s || u.length);
                    for (p.$$phase = null; x.length; )
                        try {
                            x.shift()()
                        } catch (z) {
                            g(z)
                        }
                },
                $destroy: function() {
                    if (!this.$$destroyed) {
                        var a = this.$parent;
                        this.$broadcast("$destroy");
                        this.$$destroyed = !0;
                        this === p && l.$$applicationDestroyed();
                        s(this, -this.$$watchersCount);
                        for (var b in this.$$listenerCount)
                            t(this, this.$$listenerCount[b], b);
                        a && a.$$childHead == this && (a.$$childHead = this.$$nextSibling);
                        a && a.$$childTail == this && (a.$$childTail = this.$$prevSibling);
                        this.$$prevSibling && (this.$$prevSibling.$$nextSibling = this.$$nextSibling);
                        this.$$nextSibling && (this.$$nextSibling.$$prevSibling = this.$$prevSibling);
                        this.$destroy = this.$digest = this.$apply = this.$evalAsync = this.$applyAsync = v;
                        this.$on = this.$watch = this.$watchGroup = function() {
                            return v
                        }
                        ;
                        this.$$listeners = {};
                        this.$parent = this.$$nextSibling = this.$$prevSibling = this.$$childHead = this.$$childTail = this.$root = this.$$watchers = null
                    }
                },
                $eval: function(a, b) {
                    return h(a)(this, b)
                },
                $evalAsync: function(a, b) {
                    p.$$phase || u.length || l.defer(function() {
                        u.length && p.$digest()
                    });
                    u.push({
                        scope: this,
                        expression: a,
                        locals: b
                    })
                },
                $$postDigest: function(a) {
                    x.push(a)
                },
                $apply: function(a) {
                    try {
                        q("$apply");
                        try {
                            return this.$eval(a)
                        } finally {
                            p.$$phase = null
                        }
                    } catch (b) {
                        g(b)
                    } finally {
                        try {
                            p.$digest()
                        } catch (c) {
                            throw g(c),
                            c;
                        }
                    }
                },
                $applyAsync: function(a) {
                    function b() {
                        c.$eval(a)
                    }
                    var c = this;
                    a && M.push(b);
                    w()
                },
                $on: function(a, b) {
                    var c = this.$$listeners[a];
                    c || (this.$$listeners[a] = c = []);
                    c.push(b);
                    var d = this;
                    do
                        d.$$listenerCount[a] || (d.$$listenerCount[a] = 0),
                        d.$$listenerCount[a]++;
                    while (d = d.$parent);
                    var e = this;
                    return function() {
                        var d = c.indexOf(b);
                        -1 !== d && (c[d] = null,
                        t(e, 1, a))
                    }
                },
                $emit: function(a, b) {
                    var c = [], d, e = this, f = !1, h = {
                        name: a,
                        targetScope: e,
                        stopPropagation: function() {
                            f = !0
                        },
                        preventDefault: function() {
                            h.defaultPrevented = !0
                        },
                        defaultPrevented: !1
                    }, k = cb([h], arguments, 1), l, m;
                    do {
                        d = e.$$listeners[a] || c;
                        h.currentScope = e;
                        l = 0;
                        for (m = d.length; l < m; l++)
                            if (d[l])
                                try {
                                    d[l].apply(null, k)
                                } catch (q) {
                                    g(q)
                                }
                            else
                                d.splice(l, 1),
                                l--,
                                m--;
                        if (f)
                            return h.currentScope = null,
                            h;
                        e = e.$parent
                    } while (e);
                    h.currentScope = null;
                    return h
                },
                $broadcast: function(a, b) {
                    var c = this
                      , d = this
                      , e = {
                        name: a,
                        targetScope: this,
                        preventDefault: function() {
                            e.defaultPrevented = !0
                        },
                        defaultPrevented: !1
                    };
                    if (!this.$$listenerCount[a])
                        return e;
                    for (var f = cb([e], arguments, 1), h, k; c = d; ) {
                        e.currentScope = c;
                        d = c.$$listeners[a] || [];
                        h = 0;
                        for (k = d.length; h < k; h++)
                            if (d[h])
                                try {
                                    d[h].apply(null, f)
                                } catch (l) {
                                    g(l)
                                }
                            else
                                d.splice(h, 1),
                                h--,
                                k--;
                        if (!(d = c.$$listenerCount[a] && c.$$childHead || c !== this && c.$$nextSibling))
                            for (; c !== this && !(d = c.$$nextSibling); )
                                c = c.$parent
                    }
                    e.currentScope = null;
                    return e
                }
            };
            var p = new m
              , u = p.$$asyncQueue = []
              , x = p.$$postDigestQueue = []
              , M = p.$$applyAsyncQueue = [];
            return p
        }
        ]
    }
    function ge() {
        var b = /^\s*(https?|ftp|mailto|tel|file):/
          , a = /^\s*((https?|ftp|file|blob):|data:image\/)/;
        this.aHrefSanitizationWhitelist = function(a) {
            return x(a) ? (b = a,
            this) : b
        }
        ;
        this.imgSrcSanitizationWhitelist = function(b) {
            return x(b) ? (a = b,
            this) : a
        }
        ;
        this.$get = function() {
            return function(c, d) {
                var e = d ? a : b, f;
                f = Aa(c).href;
                return "" === f || f.match(e) ? c : "unsafe:" + f
            }
        }
    }
    function Zf(b) {
        if ("self" === b)
            return b;
        if (H(b)) {
            if (-1 < b.indexOf("***"))
                throw Ca("iwcard", b);
            b = ud(b).replace("\\*\\*", ".*").replace("\\*", "[^:/.?&;]*");
            return new RegExp("^" + b + "$")
        }
        if (Oa(b))
            return new RegExp("^" + b.source + "$");
        throw Ca("imatcher");
    }
    function vd(b) {
        var a = [];
        x(b) && n(b, function(b) {
            a.push(Zf(b))
        });
        return a
    }
    function of() {
        this.SCE_CONTEXTS = oa;
        var b = ["self"]
          , a = [];
        this.resourceUrlWhitelist = function(a) {
            arguments.length && (b = vd(a));
            return b
        }
        ;
        this.resourceUrlBlacklist = function(b) {
            arguments.length && (a = vd(b));
            return a
        }
        ;
        this.$get = ["$injector", function(c) {
            function d(a, b) {
                return "self" === a ? gd(b) : !!a.exec(b.href)
            }
            function e(a) {
                var b = function(a) {
                    this.$$unwrapTrustedValue = function() {
                        return a
                    }
                };
                a && (b.prototype = new a);
                b.prototype.valueOf = function() {
                    return this.$$unwrapTrustedValue()
                }
                ;
                b.prototype.toString = function() {
                    return this.$$unwrapTrustedValue().toString()
                }
                ;
                return b
            }
            var f = function(a) {
                throw Ca("unsafe");
            };
            c.has("$sanitize") && (f = c.get("$sanitize"));
            var g = e()
              , h = {};
            h[oa.HTML] = e(g);
            h[oa.CSS] = e(g);
            h[oa.URL] = e(g);
            h[oa.JS] = e(g);
            h[oa.RESOURCE_URL] = e(h[oa.URL]);
            return {
                trustAs: function(a, b) {
                    var c = h.hasOwnProperty(a) ? h[a] : null;
                    if (!c)
                        throw Ca("icontext", a, b);
                    if (null === b || b === u || "" === b)
                        return b;
                    if ("string" !== typeof b)
                        throw Ca("itype", a);
                    return new c(b)
                },
                getTrusted: function(c, e) {
                    if (null === e || e === u || "" === e)
                        return e;
                    var g = h.hasOwnProperty(c) ? h[c] : null;
                    if (g && e instanceof g)
                        return e.$$unwrapTrustedValue();
                    if (c === oa.RESOURCE_URL) {
                        var g = Aa(e.toString()), q, s, t = !1;
                        q = 0;
                        for (s = b.length; q < s; q++)
                            if (d(b[q], g)) {
                                t = !0;
                                break
                            }
                        if (t)
                            for (q = 0,
                            s = a.length; q < s; q++)
                                if (d(a[q], g)) {
                                    t = !1;
                                    break
                                }
                        if (t)
                            return e;
                        throw Ca("insecurl", e.toString());
                    }
                    if (c === oa.HTML)
                        return f(e);
                    throw Ca("unsafe");
                },
                valueOf: function(a) {
                    return a instanceof g ? a.$$unwrapTrustedValue() : a
                }
            }
        }
        ]
    }
    function nf() {
        var b = !0;
        this.enabled = function(a) {
            arguments.length && (b = !!a);
            return b
        }
        ;
        this.$get = ["$parse", "$sceDelegate", function(a, c) {
            if (b && 8 > Va)
                throw Ca("iequirks");
            var d = ia(oa);
            d.isEnabled = function() {
                return b
            }
            ;
            d.trustAs = c.trustAs;
            d.getTrusted = c.getTrusted;
            d.valueOf = c.valueOf;
            b || (d.trustAs = d.getTrusted = function(a, b) {
                return b
            }
            ,
            d.valueOf = Za);
            d.parseAs = function(b, c) {
                var e = a(c);
                return e.literal && e.constant ? e : a(c, function(a) {
                    return d.getTrusted(b, a)
                })
            }
            ;
            var e = d.parseAs
              , f = d.getTrusted
              , g = d.trustAs;
            n(oa, function(a, b) {
                var c = I(b);
                d[fb("parse_as_" + c)] = function(b) {
                    return e(a, b)
                }
                ;
                d[fb("get_trusted_" + c)] = function(b) {
                    return f(a, b)
                }
                ;
                d[fb("trust_as_" + c)] = function(b) {
                    return g(a, b)
                }
            });
            return d
        }
        ]
    }
    function pf() {
        this.$get = ["$window", "$document", function(b, a) {
            var c = {}, d = Y((/android (\d+)/.exec(I((b.navigator || {}).userAgent)) || [])[1]), e = /Boxee/i.test((b.navigator || {}).userAgent), f = a[0] || {}, g, h = /^(Moz|webkit|ms)(?=[A-Z])/, l = f.body && f.body.style, k = !1, m = !1;
            if (l) {
                for (var q in l)
                    if (k = h.exec(q)) {
                        g = k[0];
                        g = g.substr(0, 1).toUpperCase() + g.substr(1);
                        break
                    }
                g || (g = "WebkitOpacity"in l && "webkit");
                k = !!("transition"in l || g + "Transition"in l);
                m = !!("animation"in l || g + "Animation"in l);
                !d || k && m || (k = H(l.webkitTransition),
                m = H(l.webkitAnimation))
            }
            return {
                history: !(!b.history || !b.history.pushState || 4 > d || e),
                hasEvent: function(a) {
                    if ("input" === a && 11 >= Va)
                        return !1;
                    if (y(c[a])) {
                        var b = f.createElement("div");
                        c[a] = "on" + a in b
                    }
                    return c[a]
                },
                csp: Fa(),
                vendorPrefix: g,
                transitions: k,
                animations: m,
                android: d
            }
        }
        ]
    }
    function rf() {
        this.$get = ["$templateCache", "$http", "$q", "$sce", function(b, a, c, d) {
            function e(f, g) {
                e.totalPendingRequests++;
                H(f) && b.get(f) || (f = d.getTrustedResourceUrl(f));
                var h = a.defaults && a.defaults.transformResponse;
                K(h) ? h = h.filter(function(a) {
                    return a !== Zb
                }) : h === Zb && (h = null);
                return a.get(f, {
                    cache: b,
                    transformResponse: h
                })["finally"](function() {
                    e.totalPendingRequests--
                }).then(function(a) {
                    b.put(f, a.data);
                    return a.data
                }, function(a) {
                    if (!g)
                        throw ea("tpload", f, a.status, a.statusText);
                    return c.reject(a)
                })
            }
            e.totalPendingRequests = 0;
            return e
        }
        ]
    }
    function sf() {
        this.$get = ["$rootScope", "$browser", "$location", function(b, a, c) {
            return {
                findBindings: function(a, b, c) {
                    a = a.getElementsByClassName("ng-binding");
                    var g = [];
                    n(a, function(a) {
                        var d = aa.element(a).data("$binding");
                        d && n(d, function(d) {
                            c ? (new RegExp("(^|\\s)" + ud(b) + "(\\s|\\||$)")).test(d) && g.push(a) : -1 != d.indexOf(b) && g.push(a)
                        })
                    });
                    return g
                },
                findModels: function(a, b, c) {
                    for (var g = ["ng-", "data-ng-", "ng\\:"], h = 0; h < g.length; ++h) {
                        var l = a.querySelectorAll("[" + g[h] + "model" + (c ? "=" : "*=") + '"' + b + '"]');
                        if (l.length)
                            return l
                    }
                },
                getLocation: function() {
                    return c.url()
                },
                setLocation: function(a) {
                    a !== c.url() && (c.url(a),
                    b.$digest())
                },
                whenStable: function(b) {
                    a.notifyWhenNoOutstandingRequests(b)
                }
            }
        }
        ]
    }
    function tf() {
        this.$get = ["$rootScope", "$browser", "$q", "$$q", "$exceptionHandler", function(b, a, c, d, e) {
            function f(f, l, k) {
                B(f) || (k = l,
                l = f,
                f = v);
                var m = xa.call(arguments, 3), q = x(k) && !k, s = (q ? d : c).defer(), t = s.promise, n;
                n = a.defer(function() {
                    try {
                        s.resolve(f.apply(null, m))
                    } catch (a) {
                        s.reject(a),
                        e(a)
                    } finally {
                        delete g[t.$$timeoutId]
                    }
                    q || b.$apply()
                }, l);
                t.$$timeoutId = n;
                g[n] = s;
                return t
            }
            var g = {};
            f.cancel = function(b) {
                return b && b.$$timeoutId in g ? (g[b.$$timeoutId].reject("canceled"),
                delete g[b.$$timeoutId],
                a.defer.cancel(b.$$timeoutId)) : !1
            }
            ;
            return f
        }
        ]
    }
    function Aa(b) {
        Va && (Z.setAttribute("href", b),
        b = Z.href);
        Z.setAttribute("href", b);
        return {
            href: Z.href,
            protocol: Z.protocol ? Z.protocol.replace(/:$/, "") : "",
            host: Z.host,
            search: Z.search ? Z.search.replace(/^\?/, "") : "",
            hash: Z.hash ? Z.hash.replace(/^#/, "") : "",
            hostname: Z.hostname,
            port: Z.port,
            pathname: "/" === Z.pathname.charAt(0) ? Z.pathname : "/" + Z.pathname
        }
    }
    function gd(b) {
        b = H(b) ? Aa(b) : b;
        return b.protocol === wd.protocol && b.host === wd.host
    }
    function uf() {
        this.$get = qa(N)
    }
    function xd(b) {
        function a(a) {
            try {
                return decodeURIComponent(a)
            } catch (b) {
                return a
            }
        }
        var c = b[0] || {}
          , d = {}
          , e = "";
        return function() {
            var b, g, h, l, k;
            b = c.cookie || "";
            if (b !== e)
                for (e = b,
                b = e.split("; "),
                d = {},
                h = 0; h < b.length; h++)
                    g = b[h],
                    l = g.indexOf("="),
                    0 < l && (k = a(g.substring(0, l)),
                    d[k] === u && (d[k] = a(g.substring(l + 1))));
            return d
        }
    }
    function yf() {
        this.$get = xd
    }
    function Jc(b) {
        function a(c, d) {
            if (D(c)) {
                var e = {};
                n(c, function(b, c) {
                    e[c] = a(c, b)
                });
                return e
            }
            return b.factory(c + "Filter", d)
        }
        this.register = a;
        this.$get = ["$injector", function(a) {
            return function(b) {
                return a.get(b + "Filter")
            }
        }
        ];
        a("currency", yd);
        a("date", zd);
        a("filter", $f);
        a("json", ag);
        a("limitTo", bg);
        a("lowercase", cg);
        a("number", Ad);
        a("orderBy", Bd);
        a("uppercase", dg)
    }
    function $f() {
        return function(b, a, c) {
            if (!Da(b)) {
                if (null == b)
                    return b;
                throw G("filter")("notarray", b);
            }
            var d;
            switch (gc(a)) {
            case "function":
                break;
            case "boolean":
            case "null":
            case "number":
            case "string":
                d = !0;
            case "object":
                a = eg(a, c, d);
                break;
            default:
                return b
            }
            return Array.prototype.filter.call(b, a)
        }
    }
    function eg(b, a, c) {
        var d = D(b) && "$"in b;
        !0 === a ? a = ka : B(a) || (a = function(a, b) {
            if (y(a))
                return !1;
            if (null === a || null === b)
                return a === b;
            if (D(b) || D(a) && !pc(a))
                return !1;
            a = I("" + a);
            b = I("" + b);
            return -1 !== a.indexOf(b)
        }
        );
        return function(e) {
            return d && !D(e) ? La(e, b.$, a, !1) : La(e, b, a, c)
        }
    }
    function La(b, a, c, d, e) {
        var f = gc(b)
          , g = gc(a);
        if ("string" === g && "!" === a.charAt(0))
            return !La(b, a.substring(1), c, d);
        if (K(b))
            return b.some(function(b) {
                return La(b, a, c, d)
            });
        switch (f) {
        case "object":
            var h;
            if (d) {
                for (h in b)
                    if ("$" !== h.charAt(0) && La(b[h], a, c, !0))
                        return !0;
                return e ? !1 : La(b, a, c, !1)
            }
            if ("object" === g) {
                for (h in a)
                    if (e = a[h],
                    !B(e) && !y(e) && (f = "$" === h,
                    !La(f ? b : b[h], e, c, f, f)))
                        return !1;
                return !0
            }
            return c(b, a);
        case "function":
            return !1;
        default:
            return c(b, a)
        }
    }
    function gc(b) {
        return null === b ? "null" : typeof b
    }
    function yd(b) {
        var a = b.NUMBER_FORMATS;
        return function(b, d, e) {
            y(d) && (d = a.CURRENCY_SYM);
            y(e) && (e = a.PATTERNS[1].maxFrac);
            return null == b ? b : Cd(b, a.PATTERNS[1], a.GROUP_SEP, a.DECIMAL_SEP, e).replace(/\u00A4/g, d)
        }
    }
    function Ad(b) {
        var a = b.NUMBER_FORMATS;
        return function(b, d) {
            return null == b ? b : Cd(b, a.PATTERNS[0], a.GROUP_SEP, a.DECIMAL_SEP, d)
        }
    }
    function Cd(b, a, c, d, e) {
        if (D(b))
            return "";
        var f = 0 > b;
        b = Math.abs(b);
        var g = Infinity === b;
        if (!g && !isFinite(b))
            return "";
        var h = b + ""
          , l = ""
          , k = !1
          , m = [];
        g && (l = "\u221e");
        if (!g && -1 !== h.indexOf("e")) {
            var q = h.match(/([\d\.]+)e(-?)(\d+)/);
            q && "-" == q[2] && q[3] > e + 1 ? b = 0 : (l = h,
            k = !0)
        }
        if (g || k)
            0 < e && 1 > b && (l = b.toFixed(e),
            b = parseFloat(l));
        else {
            g = (h.split(Dd)[1] || "").length;
            y(e) && (e = Math.min(Math.max(a.minFrac, g), a.maxFrac));
            b = +(Math.round(+(b.toString() + "e" + e)).toString() + "e" + -e);
            var g = ("" + b).split(Dd)
              , h = g[0]
              , g = g[1] || ""
              , q = 0
              , s = a.lgSize
              , t = a.gSize;
            if (h.length >= s + t)
                for (q = h.length - s,
                k = 0; k < q; k++)
                    0 === (q - k) % t && 0 !== k && (l += c),
                    l += h.charAt(k);
            for (k = q; k < h.length; k++)
                0 === (h.length - k) % s && 0 !== k && (l += c),
                l += h.charAt(k);
            for (; g.length < e; )
                g += "0";
            e && "0" !== e && (l += d + g.substr(0, e))
        }
        0 === b && (f = !1);
        m.push(f ? a.negPre : a.posPre, l, f ? a.negSuf : a.posSuf);
        return m.join("")
    }
    function Gb(b, a, c) {
        var d = "";
        0 > b && (d = "-",
        b = -b);
        for (b = "" + b; b.length < a; )
            b = "0" + b;
        c && (b = b.substr(b.length - a));
        return d + b
    }
    function $(b, a, c, d) {
        c = c || 0;
        return function(e) {
            e = e["get" + b]();
            if (0 < c || e > -c)
                e += c;
            0 === e && -12 == c && (e = 12);
            return Gb(e, a, d)
        }
    }
    function Hb(b, a) {
        return function(c, d) {
            var e = c["get" + b]()
              , f = rb(a ? "SHORT" + b : b);
            return d[f][e]
        }
    }
    function Ed(b) {
        var a = (new Date(b,0,1)).getDay();
        return new Date(b,0,(4 >= a ? 5 : 12) - a)
    }
    function Fd(b) {
        return function(a) {
            var c = Ed(a.getFullYear());
            a = +new Date(a.getFullYear(),a.getMonth(),a.getDate() + (4 - a.getDay())) - +c;
            a = 1 + Math.round(a / 6048E5);
            return Gb(a, b)
        }
    }
    function hc(b, a) {
        return 0 >= b.getFullYear() ? a.ERAS[0] : a.ERAS[1]
    }
    function zd(b) {
        function a(a) {
            var b;
            if (b = a.match(c)) {
                a = new Date(0);
                var f = 0
                  , g = 0
                  , h = b[8] ? a.setUTCFullYear : a.setFullYear
                  , l = b[8] ? a.setUTCHours : a.setHours;
                b[9] && (f = Y(b[9] + b[10]),
                g = Y(b[9] + b[11]));
                h.call(a, Y(b[1]), Y(b[2]) - 1, Y(b[3]));
                f = Y(b[4] || 0) - f;
                g = Y(b[5] || 0) - g;
                h = Y(b[6] || 0);
                b = Math.round(1E3 * parseFloat("0." + (b[7] || 0)));
                l.call(a, f, g, h, b)
            }
            return a
        }
        var c = /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;
        return function(c, e, f) {
            var g = "", h = [], l, k;
            e = e || "mediumDate";
            e = b.DATETIME_FORMATS[e] || e;
            H(c) && (c = fg.test(c) ? Y(c) : a(c));
            X(c) && (c = new Date(c));
            if (!ca(c) || !isFinite(c.getTime()))
                return c;
            for (; e; )
                (k = gg.exec(e)) ? (h = cb(h, k, 1),
                e = h.pop()) : (h.push(e),
                e = null);
            var m = c.getTimezoneOffset();
            f && (m = vc(f, c.getTimezoneOffset()),
            c = Ob(c, f, !0));
            n(h, function(a) {
                l = hg[a];
                g += l ? l(c, b.DATETIME_FORMATS, m) : a.replace(/(^'|'$)/g, "").replace(/''/g, "'")
            });
            return g
        }
    }
    function ag() {
        return function(b, a) {
            y(a) && (a = 2);
            return db(b, a)
        }
    }
    function bg() {
        return function(b, a, c) {
            a = Infinity === Math.abs(Number(a)) ? Number(a) : Y(a);
            if (isNaN(a))
                return b;
            X(b) && (b = b.toString());
            if (!K(b) && !H(b))
                return b;
            c = !c || isNaN(c) ? 0 : Y(c);
            c = 0 > c && c >= -b.length ? b.length + c : c;
            return 0 <= a ? b.slice(c, c + a) : 0 === c ? b.slice(a, b.length) : b.slice(Math.max(0, c + a), c)
        }
    }
    function Bd(b) {
        function a(a, c) {
            c = c ? -1 : 1;
            return a.map(function(a) {
                var d = 1
                  , h = Za;
                if (B(a))
                    h = a;
                else if (H(a)) {
                    if ("+" == a.charAt(0) || "-" == a.charAt(0))
                        d = "-" == a.charAt(0) ? -1 : 1,
                        a = a.substring(1);
                    if ("" !== a && (h = b(a),
                    h.constant))
                        var l = h()
                          , h = function(a) {
                            return a[l]
                        }
                }
                return {
                    get: h,
                    descending: d * c
                }
            })
        }
        function c(a) {
            switch (typeof a) {
            case "number":
            case "boolean":
            case "string":
                return !0;
            default:
                return !1
            }
        }
        return function(b, e, f) {
            if (!Da(b))
                return b;
            K(e) || (e = [e]);
            0 === e.length && (e = ["+"]);
            var g = a(e, f);
            g.push({
                get: function() {
                    return {}
                },
                descending: f ? -1 : 1
            });
            b = Array.prototype.map.call(b, function(a, b) {
                return {
                    value: a,
                    predicateValues: g.map(function(d) {
                        var e = d.get(a);
                        d = typeof e;
                        if (null === e)
                            d = "string",
                            e = "null";
                        else if ("string" === d)
                            e = e.toLowerCase();
                        else if ("object" === d)
                            a: {
                                if ("function" === typeof e.valueOf && (e = e.valueOf(),
                                c(e)))
                                    break a;
                                if (pc(e) && (e = e.toString(),
                                c(e)))
                                    break a;
                                e = b
                            }
                        return {
                            value: e,
                            type: d
                        }
                    })
                }
            });
            b.sort(function(a, b) {
                for (var c = 0, d = 0, e = g.length; d < e; ++d) {
                    var c = a.predicateValues[d]
                      , f = b.predicateValues[d]
                      , t = 0;
                    c.type === f.type ? c.value !== f.value && (t = c.value < f.value ? -1 : 1) : t = c.type < f.type ? -1 : 1;
                    if (c = t * g[d].descending)
                        break
                }
                return c
            });
            return b = b.map(function(a) {
                return a.value
            })
        }
    }
    function Ma(b) {
        B(b) && (b = {
            link: b
        });
        b.restrict = b.restrict || "AC";
        return qa(b)
    }
    function Gd(b, a, c, d, e) {
        var f = this
          , g = []
          , h = f.$$parentForm = b.parent().controller("form") || Ib;
        f.$error = {};
        f.$$success = {};
        f.$pending = u;
        f.$name = e(a.name || a.ngForm || "")(c);
        f.$dirty = !1;
        f.$pristine = !0;
        f.$valid = !0;
        f.$invalid = !1;
        f.$submitted = !1;
        h.$addControl(f);
        f.$rollbackViewValue = function() {
            n(g, function(a) {
                a.$rollbackViewValue()
            })
        }
        ;
        f.$commitViewValue = function() {
            n(g, function(a) {
                a.$commitViewValue()
            })
        }
        ;
        f.$addControl = function(a) {
            Ta(a.$name, "input");
            g.push(a);
            a.$name && (f[a.$name] = a)
        }
        ;
        f.$$renameControl = function(a, b) {
            var c = a.$name;
            f[c] === a && delete f[c];
            f[b] = a;
            a.$name = b
        }
        ;
        f.$removeControl = function(a) {
            a.$name && f[a.$name] === a && delete f[a.$name];
            n(f.$pending, function(b, c) {
                f.$setValidity(c, null, a)
            });
            n(f.$error, function(b, c) {
                f.$setValidity(c, null, a)
            });
            n(f.$$success, function(b, c) {
                f.$setValidity(c, null, a)
            });
            bb(g, a)
        }
        ;
        Hd({
            ctrl: this,
            $element: b,
            set: function(a, b, c) {
                var d = a[b];
                d ? -1 === d.indexOf(c) && d.push(c) : a[b] = [c]
            },
            unset: function(a, b, c) {
                var d = a[b];
                d && (bb(d, c),
                0 === d.length && delete a[b])
            },
            parentForm: h,
            $animate: d
        });
        f.$setDirty = function() {
            d.removeClass(b, Xa);
            d.addClass(b, Jb);
            f.$dirty = !0;
            f.$pristine = !1;
            h.$setDirty()
        }
        ;
        f.$setPristine = function() {
            d.setClass(b, Xa, Jb + " ng-submitted");
            f.$dirty = !1;
            f.$pristine = !0;
            f.$submitted = !1;
            n(g, function(a) {
                a.$setPristine()
            })
        }
        ;
        f.$setUntouched = function() {
            n(g, function(a) {
                a.$setUntouched()
            })
        }
        ;
        f.$setSubmitted = function() {
            d.addClass(b, "ng-submitted");
            f.$submitted = !0;
            h.$setSubmitted()
        }
    }
    function ic(b) {
        b.$formatters.push(function(a) {
            return b.$isEmpty(a) ? a : a.toString()
        })
    }
    function ib(b, a, c, d, e, f) {
        var g = I(a[0].type);
        if (!e.android) {
            var h = !1;
            a.on("compositionstart", function(a) {
                h = !0
            });
            a.on("compositionend", function() {
                h = !1;
                l()
            })
        }
        var l = function(b) {
            k && (f.defer.cancel(k),
            k = null);
            if (!h) {
                var e = a.val();
                b = b && b.type;
                "password" === g || c.ngTrim && "false" === c.ngTrim || (e = T(e));
                (d.$viewValue !== e || "" === e && d.$$hasNativeValidators) && d.$setViewValue(e, b)
            }
        };
        if (e.hasEvent("input"))
            a.on("input", l);
        else {
            var k, m = function(a, b, c) {
                k || (k = f.defer(function() {
                    k = null;
                    b && b.value === c || l(a)
                }))
            };
            a.on("keydown", function(a) {
                var b = a.keyCode;
                91 === b || 15 < b && 19 > b || 37 <= b && 40 >= b || m(a, this, this.value)
            });
            if (e.hasEvent("paste"))
                a.on("paste cut", m)
        }
        a.on("change", l);
        d.$render = function() {
            var b = d.$isEmpty(d.$viewValue) ? "" : d.$viewValue;
            a.val() !== b && a.val(b)
        }
    }
    function Kb(b, a) {
        return function(c, d) {
            var e, f;
            if (ca(c))
                return c;
            if (H(c)) {
                '"' == c.charAt(0) && '"' == c.charAt(c.length - 1) && (c = c.substring(1, c.length - 1));
                if (ig.test(c))
                    return new Date(c);
                b.lastIndex = 0;
                if (e = b.exec(c))
                    return e.shift(),
                    f = d ? {
                        yyyy: d.getFullYear(),
                        MM: d.getMonth() + 1,
                        dd: d.getDate(),
                        HH: d.getHours(),
                        mm: d.getMinutes(),
                        ss: d.getSeconds(),
                        sss: d.getMilliseconds() / 1E3
                    } : {
                        yyyy: 1970,
                        MM: 1,
                        dd: 1,
                        HH: 0,
                        mm: 0,
                        ss: 0,
                        sss: 0
                    },
                    n(e, function(b, c) {
                        c < a.length && (f[a[c]] = +b)
                    }),
                    new Date(f.yyyy,f.MM - 1,f.dd,f.HH,f.mm,f.ss || 0,1E3 * f.sss || 0)
            }
            return NaN
        }
    }
    function jb(b, a, c, d) {
        return function(e, f, g, h, l, k, m) {
            function q(a) {
                return a && !(a.getTime && a.getTime() !== a.getTime())
            }
            function s(a) {
                return x(a) ? ca(a) ? a : c(a) : u
            }
            Id(e, f, g, h);
            ib(e, f, g, h, l, k);
            var t = h && h.$options && h.$options.timezone, n;
            h.$$parserName = b;
            h.$parsers.push(function(b) {
                return h.$isEmpty(b) ? null : a.test(b) ? (b = c(b, n),
                t && (b = Ob(b, t)),
                b) : u
            });
            h.$formatters.push(function(a) {
                if (a && !ca(a))
                    throw kb("datefmt", a);
                if (q(a))
                    return (n = a) && t && (n = Ob(n, t, !0)),
                    m("date")(a, d, t);
                n = null;
                return ""
            });
            if (x(g.min) || g.ngMin) {
                var r;
                h.$validators.min = function(a) {
                    return !q(a) || y(r) || c(a) >= r
                }
                ;
                g.$observe("min", function(a) {
                    r = s(a);
                    h.$validate()
                })
            }
            if (x(g.max) || g.ngMax) {
                var w;
                h.$validators.max = function(a) {
                    return !q(a) || y(w) || c(a) <= w
                }
                ;
                g.$observe("max", function(a) {
                    w = s(a);
                    h.$validate()
                })
            }
        }
    }
    function Id(b, a, c, d) {
        (d.$$hasNativeValidators = D(a[0].validity)) && d.$parsers.push(function(b) {
            var c = a.prop("validity") || {};
            return c.badInput && !c.typeMismatch ? u : b
        })
    }
    function Jd(b, a, c, d, e) {
        if (x(d)) {
            b = b(d);
            if (!b.constant)
                throw kb("constexpr", c, d);
            return b(a)
        }
        return e
    }
    function jc(b, a) {
        b = "ngClass" + b;
        return ["$animate", function(c) {
            function d(a, b) {
                var c = []
                  , d = 0;
                a: for (; d < a.length; d++) {
                    for (var e = a[d], m = 0; m < b.length; m++)
                        if (e == b[m])
                            continue a;
                    c.push(e)
                }
                return c
            }
            function e(a) {
                var b = [];
                return K(a) ? (n(a, function(a) {
                    b = b.concat(e(a))
                }),
                b) : H(a) ? a.split(" ") : D(a) ? (n(a, function(a, c) {
                    a && (b = b.concat(c.split(" ")))
                }),
                b) : a
            }
            return {
                restrict: "AC",
                link: function(f, g, h) {
                    function l(a, b) {
                        var c = g.data("$classCounts") || ga()
                          , d = [];
                        n(a, function(a) {
                            if (0 < b || c[a])
                                c[a] = (c[a] || 0) + b,
                                c[a] === +(0 < b) && d.push(a)
                        });
                        g.data("$classCounts", c);
                        return d.join(" ")
                    }
                    function k(b) {
                        if (!0 === a || f.$index % 2 === a) {
                            var k = e(b || []);
                            if (!m) {
                                var n = l(k, 1);
                                h.$addClass(n)
                            } else if (!ka(b, m)) {
                                var r = e(m)
                                  , n = d(k, r)
                                  , k = d(r, k)
                                  , n = l(n, 1)
                                  , k = l(k, -1);
                                n && n.length && c.addClass(g, n);
                                k && k.length && c.removeClass(g, k)
                            }
                        }
                        m = ia(b)
                    }
                    var m;
                    f.$watch(h[b], k, !0);
                    h.$observe("class", function(a) {
                        k(f.$eval(h[b]))
                    });
                    "ngClass" !== b && f.$watch("$index", function(c, d) {
                        var g = c & 1;
                        if (g !== (d & 1)) {
                            var k = e(f.$eval(h[b]));
                            g === a ? (g = l(k, 1),
                            h.$addClass(g)) : (g = l(k, -1),
                            h.$removeClass(g))
                        }
                    })
                }
            }
        }
        ]
    }
    function Hd(b) {
        function a(a, b) {
            b && !f[a] ? (k.addClass(e, a),
            f[a] = !0) : !b && f[a] && (k.removeClass(e, a),
            f[a] = !1)
        }
        function c(b, c) {
            b = b ? "-" + zc(b, "-") : "";
            a(lb + b, !0 === c);
            a(Kd + b, !1 === c)
        }
        var d = b.ctrl
          , e = b.$element
          , f = {}
          , g = b.set
          , h = b.unset
          , l = b.parentForm
          , k = b.$animate;
        f[Kd] = !(f[lb] = e.hasClass(lb));
        d.$setValidity = function(b, e, f) {
            e === u ? (d.$pending || (d.$pending = {}),
            g(d.$pending, b, f)) : (d.$pending && h(d.$pending, b, f),
            Ld(d.$pending) && (d.$pending = u));
            ab(e) ? e ? (h(d.$error, b, f),
            g(d.$$success, b, f)) : (g(d.$error, b, f),
            h(d.$$success, b, f)) : (h(d.$error, b, f),
            h(d.$$success, b, f));
            d.$pending ? (a(Md, !0),
            d.$valid = d.$invalid = u,
            c("", null)) : (a(Md, !1),
            d.$valid = Ld(d.$error),
            d.$invalid = !d.$valid,
            c("", d.$valid));
            e = d.$pending && d.$pending[b] ? u : d.$error[b] ? !1 : d.$$success[b] ? !0 : null;
            c(b, e);
            l.$setValidity(b, e, d)
        }
    }
    function Ld(b) {
        if (b)
            for (var a in b)
                if (b.hasOwnProperty(a))
                    return !1;
        return !0
    }
    var jg = /^\/(.+)\/([a-z]*)$/, I = function(b) {
        return H(b) ? b.toLowerCase() : b
    }, Na = Object.prototype.hasOwnProperty, rb = function(b) {
        return H(b) ? b.toUpperCase() : b
    }, Va, z, la, xa = [].slice, Mf = [].splice, kg = [].push, sa = Object.prototype.toString, qc = Object.getPrototypeOf, Ea = G("ng"), aa = N.angular || (N.angular = {}), Rb, mb = 0;
    Va = W.documentMode;
    v.$inject = [];
    Za.$inject = [];
    var K = Array.isArray, sc = /^\[object (Uint8(Clamped)?)|(Uint16)|(Uint32)|(Int8)|(Int16)|(Int32)|(Float(32)|(64))Array\]$/, T = function(b) {
        return H(b) ? b.trim() : b
    }, ud = function(b) {
        return b.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
    }, Fa = function() {
        if (!x(Fa.rules)) {
            var b = W.querySelector("[ng-csp]") || W.querySelector("[data-ng-csp]");
            if (b) {
                var a = b.getAttribute("ng-csp") || b.getAttribute("data-ng-csp");
                Fa.rules = {
                    noUnsafeEval: !a || -1 !== a.indexOf("no-unsafe-eval"),
                    noInlineStyle: !a || -1 !== a.indexOf("no-inline-style")
                }
            } else {
                b = Fa;
                try {
                    new Function(""),
                    a = !1
                } catch (c) {
                    a = !0
                }
                b.rules = {
                    noUnsafeEval: a,
                    noInlineStyle: !1
                }
            }
        }
        return Fa.rules
    }, ob = function() {
        if (x(ob.name_))
            return ob.name_;
        var b, a, c = Qa.length, d, e;
        for (a = 0; a < c; ++a)
            if (d = Qa[a],
            b = W.querySelector("[" + d.replace(":", "\\:") + "jq]")) {
                e = b.getAttribute(d + "jq");
                break
            }
        return ob.name_ = e
    }, Qa = ["ng-", "data-ng-", "ng:", "x-ng-"], be = /[A-Z]/g, Ac = !1, Qb, pa = 1, Pa = 3, fe = {
        full: "1.4.5",
        major: 1,
        minor: 4,
        dot: 5,
        codeName: "permanent-internship"
    };
    R.expando = "ng339";
    var gb = R.cache = {}
      , Ef = 1;
    R._data = function(b) {
        return this.cache[b[this.expando]] || {}
    }
    ;
    var zf = /([\:\-\_]+(.))/g
      , Af = /^moz([A-Z])/
      , lg = {
        mouseleave: "mouseout",
        mouseenter: "mouseover"
    }
      , Tb = G("jqLite")
      , Df = /^<(\w+)\s*\/?>(?:<\/\1>|)$/
      , Sb = /<|&#?\w+;/
      , Bf = /<([\w:]+)/
      , Cf = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi
      , na = {
        option: [1, '<select multiple="multiple">', "</select>"],
        thead: [1, "<table>", "</table>"],
        col: [2, "<table><colgroup>", "</colgroup></table>"],
        tr: [2, "<table><tbody>", "</tbody></table>"],
        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        _default: [0, "", ""]
    };
    na.optgroup = na.option;
    na.tbody = na.tfoot = na.colgroup = na.caption = na.thead;
    na.th = na.td;
    var Ra = R.prototype = {
        ready: function(b) {
            function a() {
                c || (c = !0,
                b())
            }
            var c = !1;
            "complete" === W.readyState ? setTimeout(a) : (this.on("DOMContentLoaded", a),
            R(N).on("load", a))
        },
        toString: function() {
            var b = [];
            n(this, function(a) {
                b.push("" + a)
            });
            return "[" + b.join(", ") + "]"
        },
        eq: function(b) {
            return 0 <= b ? z(this[b]) : z(this[this.length + b])
        },
        length: 0,
        push: kg,
        sort: [].sort,
        splice: [].splice
    }
      , Ab = {};
    n("multiple selected checked disabled readOnly required open".split(" "), function(b) {
        Ab[I(b)] = b
    });
    var Rc = {};
    n("input select option textarea button form details".split(" "), function(b) {
        Rc[b] = !0
    });
    var Sc = {
        ngMinlength: "minlength",
        ngMaxlength: "maxlength",
        ngMin: "min",
        ngMax: "max",
        ngPattern: "pattern"
    };
    n({
        data: Vb,
        removeData: ub,
        hasData: function(b) {
            for (var a in gb[b.ng339])
                return !0;
            return !1
        }
    }, function(b, a) {
        R[a] = b
    });
    n({
        data: Vb,
        inheritedData: zb,
        scope: function(b) {
            return z.data(b, "$scope") || zb(b.parentNode || b, ["$isolateScope", "$scope"])
        },
        isolateScope: function(b) {
            return z.data(b, "$isolateScope") || z.data(b, "$isolateScopeNoTemplate")
        },
        controller: Oc,
        injector: function(b) {
            return zb(b, "$injector")
        },
        removeAttr: function(b, a) {
            b.removeAttribute(a)
        },
        hasClass: wb,
        css: function(b, a, c) {
            a = fb(a);
            if (x(c))
                b.style[a] = c;
            else
                return b.style[a]
        },
        attr: function(b, a, c) {
            var d = b.nodeType;
            if (d !== Pa && 2 !== d && 8 !== d)
                if (d = I(a),
                Ab[d])
                    if (x(c))
                        c ? (b[a] = !0,
                        b.setAttribute(a, d)) : (b[a] = !1,
                        b.removeAttribute(d));
                    else
                        return b[a] || (b.attributes.getNamedItem(a) || v).specified ? d : u;
                else if (x(c))
                    b.setAttribute(a, c);
                else if (b.getAttribute)
                    return b = b.getAttribute(a, 2),
                    null === b ? u : b
        },
        prop: function(b, a, c) {
            if (x(c))
                b[a] = c;
            else
                return b[a]
        },
        text: function() {
            function b(a, b) {
                if (y(b)) {
                    var d = a.nodeType;
                    return d === pa || d === Pa ? a.textContent : ""
                }
                a.textContent = b
            }
            b.$dv = "";
            return b
        }(),
        val: function(b, a) {
            if (y(a)) {
                if (b.multiple && "select" === ta(b)) {
                    var c = [];
                    n(b.options, function(a) {
                        a.selected && c.push(a.value || a.text)
                    });
                    return 0 === c.length ? null : c
                }
                return b.value
            }
            b.value = a
        },
        html: function(b, a) {
            if (y(a))
                return b.innerHTML;
            tb(b, !0);
            b.innerHTML = a
        },
        empty: Pc
    }, function(b, a) {
        R.prototype[a] = function(a, d) {
            var e, f, g = this.length;
            if (b !== Pc && (2 == b.length && b !== wb && b !== Oc ? a : d) === u) {
                if (D(a)) {
                    for (e = 0; e < g; e++)
                        if (b === Vb)
                            b(this[e], a);
                        else
                            for (f in a)
                                b(this[e], f, a[f]);
                    return this
                }
                e = b.$dv;
                g = e === u ? Math.min(g, 1) : g;
                for (f = 0; f < g; f++) {
                    var h = b(this[f], a, d);
                    e = e ? e + h : h
                }
                return e
            }
            for (e = 0; e < g; e++)
                b(this[e], a, d);
            return this
        }
    });
    n({
        removeData: ub,
        on: function a(c, d, e, f) {
            if (x(f))
                throw Tb("onargs");
            if (Kc(c)) {
                var g = vb(c, !0);
                f = g.events;
                var h = g.handle;
                h || (h = g.handle = Hf(c, f));
                for (var g = 0 <= d.indexOf(" ") ? d.split(" ") : [d], l = g.length; l--; ) {
                    d = g[l];
                    var k = f[d];
                    k || (f[d] = [],
                    "mouseenter" === d || "mouseleave" === d ? a(c, lg[d], function(a) {
                        var c = a.relatedTarget;
                        c && (c === this || this.contains(c)) || h(a, d)
                    }) : "$destroy" !== d && c.addEventListener(d, h, !1),
                    k = f[d]);
                    k.push(e)
                }
            }
        },
        off: Nc,
        one: function(a, c, d) {
            a = z(a);
            a.on(c, function f() {
                a.off(c, d);
                a.off(c, f)
            });
            a.on(c, d)
        },
        replaceWith: function(a, c) {
            var d, e = a.parentNode;
            tb(a);
            n(new R(c), function(c) {
                d ? e.insertBefore(c, d.nextSibling) : e.replaceChild(c, a);
                d = c
            })
        },
        children: function(a) {
            var c = [];
            n(a.childNodes, function(a) {
                a.nodeType === pa && c.push(a)
            });
            return c
        },
        contents: function(a) {
            return a.contentDocument || a.childNodes || []
        },
        append: function(a, c) {
            var d = a.nodeType;
            if (d === pa || 11 === d) {
                c = new R(c);
                for (var d = 0, e = c.length; d < e; d++)
                    a.appendChild(c[d])
            }
        },
        prepend: function(a, c) {
            if (a.nodeType === pa) {
                var d = a.firstChild;
                n(new R(c), function(c) {
                    a.insertBefore(c, d)
                })
            }
        },
        wrap: function(a, c) {
            c = z(c).eq(0).clone()[0];
            var d = a.parentNode;
            d && d.replaceChild(c, a);
            c.appendChild(a)
        },
        remove: Wb,
        detach: function(a) {
            Wb(a, !0)
        },
        after: function(a, c) {
            var d = a
              , e = a.parentNode;
            c = new R(c);
            for (var f = 0, g = c.length; f < g; f++) {
                var h = c[f];
                e.insertBefore(h, d.nextSibling);
                d = h
            }
        },
        addClass: yb,
        removeClass: xb,
        toggleClass: function(a, c, d) {
            c && n(c.split(" "), function(c) {
                var f = d;
                y(f) && (f = !wb(a, c));
                (f ? yb : xb)(a, c)
            })
        },
        parent: function(a) {
            return (a = a.parentNode) && 11 !== a.nodeType ? a : null
        },
        next: function(a) {
            return a.nextElementSibling
        },
        find: function(a, c) {
            return a.getElementsByTagName ? a.getElementsByTagName(c) : []
        },
        clone: Ub,
        triggerHandler: function(a, c, d) {
            var e, f, g = c.type || c, h = vb(a);
            if (h = (h = h && h.events) && h[g])
                e = {
                    preventDefault: function() {
                        this.defaultPrevented = !0
                    },
                    isDefaultPrevented: function() {
                        return !0 === this.defaultPrevented
                    },
                    stopImmediatePropagation: function() {
                        this.immediatePropagationStopped = !0
                    },
                    isImmediatePropagationStopped: function() {
                        return !0 === this.immediatePropagationStopped
                    },
                    stopPropagation: v,
                    type: g,
                    target: a
                },
                c.type && (e = Q(e, c)),
                c = ia(h),
                f = d ? [e].concat(d) : [e],
                n(c, function(c) {
                    e.isImmediatePropagationStopped() || c.apply(a, f)
                })
        }
    }, function(a, c) {
        R.prototype[c] = function(c, e, f) {
            for (var g, h = 0, l = this.length; h < l; h++)
                y(g) ? (g = a(this[h], c, e, f),
                x(g) && (g = z(g))) : Mc(g, a(this[h], c, e, f));
            return x(g) ? g : this
        }
        ;
        R.prototype.bind = R.prototype.on;
        R.prototype.unbind = R.prototype.off
    });
    Ua.prototype = {
        put: function(a, c) {
            this[Ga(a, this.nextUid)] = c
        },
        get: function(a) {
            return this[Ga(a, this.nextUid)]
        },
        remove: function(a) {
            var c = this[a = Ga(a, this.nextUid)];
            delete this[a];
            return c
        }
    };
    var xf = [function() {
        this.$get = [function() {
            return Ua
        }
        ]
    }
    ]
      , Uc = /^[^\(]*\(\s*([^\)]*)\)/m
      , mg = /,/
      , ng = /^\s*(_?)(\S+?)\1\s*$/
      , Tc = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg
      , Ha = G("$injector");
    eb.$$annotate = function(a, c, d) {
        var e;
        if ("function" === typeof a) {
            if (!(e = a.$inject)) {
                e = [];
                if (a.length) {
                    if (c)
                        throw H(d) && d || (d = a.name || If(a)),
                        Ha("strictdi", d);
                    c = a.toString().replace(Tc, "");
                    c = c.match(Uc);
                    n(c[1].split(mg), function(a) {
                        a.replace(ng, function(a, c, d) {
                            e.push(d)
                        })
                    })
                }
                a.$inject = e
            }
        } else
            K(a) ? (c = a.length - 1,
            Sa(a[c], "fn"),
            e = a.slice(0, c)) : Sa(a, "fn", !0);
        return e
    }
    ;
    var Nd = G("$animate")
      , Ue = function() {
        this.$get = ["$q", "$$rAF", function(a, c) {
            function d() {}
            d.all = v;
            d.chain = v;
            d.prototype = {
                end: v,
                cancel: v,
                resume: v,
                pause: v,
                complete: v,
                then: function(d, f) {
                    return a(function(a) {
                        c(function() {
                            a()
                        })
                    }).then(d, f)
                }
            };
            return d
        }
        ]
    }
      , Te = function() {
        var a = new Ua
          , c = [];
        this.$get = ["$$AnimateRunner", "$rootScope", function(d, e) {
            function f(d, f, l) {
                var k = a.get(d);
                k || (a.put(d, k = {}),
                c.push(d));
                d = function(a, c) {
                    var d = !1;
                    a && (a = H(a) ? a.split(" ") : K(a) ? a : [],
                    n(a, function(a) {
                        a && (d = !0,
                        k[a] = c)
                    }));
                    return d
                }
                ;
                f = d(f, !0);
                l = d(l, !1);
                !f && !l || 1 < c.length || e.$$postDigest(function() {
                    n(c, function(c) {
                        var d = a.get(c);
                        if (d) {
                            var e = Jf(c.attr("class"))
                              , f = ""
                              , g = "";
                            n(d, function(a, c) {
                                a !== !!e[c] && (a ? f += (f.length ? " " : "") + c : g += (g.length ? " " : "") + c)
                            });
                            n(c, function(a) {
                                f && yb(a, f);
                                g && xb(a, g)
                            });
                            a.remove(c)
                        }
                    });
                    c.length = 0
                })
            }
            return {
                enabled: v,
                on: v,
                off: v,
                pin: v,
                push: function(a, c, e, k) {
                    k && k();
                    e = e || {};
                    e.from && a.css(e.from);
                    e.to && a.css(e.to);
                    (e.addClass || e.removeClass) && f(a, e.addClass, e.removeClass);
                    return new d
                }
            }
        }
        ]
    }
      , Re = ["$provide", function(a) {
        var c = this;
        this.$$registeredAnimations = Object.create(null);
        this.register = function(d, e) {
            if (d && "." !== d.charAt(0))
                throw Nd("notcsel", d);
            var f = d + "-animation";
            c.$$registeredAnimations[d.substr(1)] = f;
            a.factory(f, e)
        }
        ;
        this.classNameFilter = function(a) {
            if (1 === arguments.length && (this.$$classNameFilter = a instanceof RegExp ? a : null) && /(\s+|\/)ng-animate(\s+|\/)/.test(this.$$classNameFilter.toString()))
                throw Nd("nongcls", "ng-animate");
            return this.$$classNameFilter
        }
        ;
        this.$get = ["$$animateQueue", function(a) {
            function c(a, d, e) {
                if (e) {
                    var l;
                    a: {
                        for (l = 0; l < e.length; l++) {
                            var k = e[l];
                            if (1 === k.nodeType) {
                                l = k;
                                break a
                            }
                        }
                        l = void 0
                    }
                    !l || l.parentNode || l.previousElementSibling || (e = null)
                }
                e ? e.after(a) : d.prepend(a)
            }
            return {
                on: a.on,
                off: a.off,
                pin: a.pin,
                enabled: a.enabled,
                cancel: function(a) {
                    a.end && a.end()
                },
                enter: function(f, g, h, l) {
                    g = g && z(g);
                    h = h && z(h);
                    g = g || h.parent();
                    c(f, g, h);
                    return a.push(f, "enter", Ia(l))
                },
                move: function(f, g, h, l) {
                    g = g && z(g);
                    h = h && z(h);
                    g = g || h.parent();
                    c(f, g, h);
                    return a.push(f, "move", Ia(l))
                },
                leave: function(c, e) {
                    return a.push(c, "leave", Ia(e), function() {
                        c.remove()
                    })
                },
                addClass: function(c, e, h) {
                    h = Ia(h);
                    h.addClass = hb(h.addclass, e);
                    return a.push(c, "addClass", h)
                },
                removeClass: function(c, e, h) {
                    h = Ia(h);
                    h.removeClass = hb(h.removeClass, e);
                    return a.push(c, "removeClass", h)
                },
                setClass: function(c, e, h, l) {
                    l = Ia(l);
                    l.addClass = hb(l.addClass, e);
                    l.removeClass = hb(l.removeClass, h);
                    return a.push(c, "setClass", l)
                },
                animate: function(c, e, h, l, k) {
                    k = Ia(k);
                    k.from = k.from ? Q(k.from, e) : e;
                    k.to = k.to ? Q(k.to, h) : h;
                    k.tempClasses = hb(k.tempClasses, l || "ng-inline-animate");
                    return a.push(c, "animate", k)
                }
            }
        }
        ]
    }
    ]
      , Se = function() {
        this.$get = ["$$rAF", "$q", function(a, c) {
            var d = function() {};
            d.prototype = {
                done: function(a) {
                    this.defer && this.defer[!0 === a ? "reject" : "resolve"]()
                },
                end: function() {
                    this.done()
                },
                cancel: function() {
                    this.done(!0)
                },
                getPromise: function() {
                    this.defer || (this.defer = c.defer());
                    return this.defer.promise
                },
                then: function(a, c) {
                    return this.getPromise().then(a, c)
                },
                "catch": function(a) {
                    return this.getPromise()["catch"](a)
                },
                "finally": function(a) {
                    return this.getPromise()["finally"](a)
                }
            };
            return function(c, f) {
                function g() {
                    a(function() {
                        f.addClass && (c.addClass(f.addClass),
                        f.addClass = null);
                        f.removeClass && (c.removeClass(f.removeClass),
                        f.removeClass = null);
                        f.to && (c.css(f.to),
                        f.to = null);
                        h || l.done();
                        h = !0
                    });
                    return l
                }
                f.from && (c.css(f.from),
                f.from = null);
                var h, l = new d;
                return {
                    start: g,
                    end: g
                }
            }
        }
        ]
    }
      , ea = G("$compile");
    Cc.$inject = ["$provide", "$$sanitizeUriProvider"];
    var Xc = /^((?:x|data)[\:\-_])/i
      , Nf = G("$controller")
      , Vc = /^(\S+)(\s+as\s+(\w+))?$/
      , $e = function() {
        this.$get = ["$document", function(a) {
            return function(c) {
                c ? !c.nodeType && c instanceof z && (c = c[0]) : c = a[0].body;
                return c.offsetWidth + 1
            }
        }
        ]
    }
      , bd = "application/json"
      , $b = {
        "Content-Type": bd + ";charset=utf-8"
    }
      , Pf = /^\[|^\{(?!\{)/
      , Qf = {
        "[": /]$/,
        "{": /}$/
    }
      , Of = /^\)\]\}',?\n/
      , og = G("$http")
      , fd = function(a) {
        return function() {
            throw og("legacy", a);
        }
    }
      , Ka = aa.$interpolateMinErr = G("$interpolate");
    Ka.throwNoconcat = function(a) {
        throw Ka("noconcat", a);
    }
    ;
    Ka.interr = function(a, c) {
        return Ka("interr", a, c.toString())
    }
    ;
    var pg = /^([^\?#]*)(\?([^#]*))?(#(.*))?$/
      , Tf = {
        http: 80,
        https: 443,
        ftp: 21
    }
      , Db = G("$location")
      , qg = {
        $$html5: !1,
        $$replace: !1,
        absUrl: Eb("$$absUrl"),
        url: function(a) {
            if (y(a))
                return this.$$url;
            var c = pg.exec(a);
            (c[1] || "" === a) && this.path(decodeURIComponent(c[1]));
            (c[2] || c[1] || "" === a) && this.search(c[3] || "");
            this.hash(c[5] || "");
            return this
        },
        protocol: Eb("$$protocol"),
        host: Eb("$$host"),
        port: Eb("$$port"),
        path: kd("$$path", function(a) {
            a = null !== a ? a.toString() : "";
            return "/" == a.charAt(0) ? a : "/" + a
        }),
        search: function(a, c) {
            switch (arguments.length) {
            case 0:
                return this.$$search;
            case 1:
                if (H(a) || X(a))
                    a = a.toString(),
                    this.$$search = xc(a);
                else if (D(a))
                    a = fa(a, {}),
                    n(a, function(c, e) {
                        null == c && delete a[e]
                    }),
                    this.$$search = a;
                else
                    throw Db("isrcharg");
                break;
            default:
                y(c) || null === c ? delete this.$$search[a] : this.$$search[a] = c
            }
            this.$$compose();
            return this
        },
        hash: kd("$$hash", function(a) {
            return null !== a ? a.toString() : ""
        }),
        replace: function() {
            this.$$replace = !0;
            return this
        }
    };
    n([jd, cc, bc], function(a) {
        a.prototype = Object.create(qg);
        a.prototype.state = function(c) {
            if (!arguments.length)
                return this.$$state;
            if (a !== bc || !this.$$html5)
                throw Db("nostate");
            this.$$state = y(c) ? null : c;
            return this
        }
    });
    var da = G("$parse")
      , Uf = Function.prototype.call
      , Vf = Function.prototype.apply
      , Wf = Function.prototype.bind
      , Lb = ga();
    n("+ - * / % === !== == != < > <= >= && || ! = |".split(" "), function(a) {
        Lb[a] = !0
    });
    var rg = {
        n: "\n",
        f: "\f",
        r: "\r",
        t: "\t",
        v: "\v",
        "'": "'",
        '"': '"'
    }
      , ec = function(a) {
        this.options = a
    };
    ec.prototype = {
        constructor: ec,
        lex: function(a) {
            this.text = a;
            this.index = 0;
            for (this.tokens = []; this.index < this.text.length; )
                if (a = this.text.charAt(this.index),
                '"' === a || "'" === a)
                    this.readString(a);
                else if (this.isNumber(a) || "." === a && this.isNumber(this.peek()))
                    this.readNumber();
                else if (this.isIdent(a))
                    this.readIdent();
                else if (this.is(a, "(){}[].,;:?"))
                    this.tokens.push({
                        index: this.index,
                        text: a
                    }),
                    this.index++;
                else if (this.isWhitespace(a))
                    this.index++;
                else {
                    var c = a + this.peek()
                      , d = c + this.peek(2)
                      , e = Lb[c]
                      , f = Lb[d];
                    Lb[a] || e || f ? (a = f ? d : e ? c : a,
                    this.tokens.push({
                        index: this.index,
                        text: a,
                        operator: !0
                    }),
                    this.index += a.length) : this.throwError("Unexpected next character ", this.index, this.index + 1)
                }
            return this.tokens
        },
        is: function(a, c) {
            return -1 !== c.indexOf(a)
        },
        peek: function(a) {
            a = a || 1;
            return this.index + a < this.text.length ? this.text.charAt(this.index + a) : !1
        },
        isNumber: function(a) {
            return "0" <= a && "9" >= a && "string" === typeof a
        },
        isWhitespace: function(a) {
            return " " === a || "\r" === a || "\t" === a || "\n" === a || "\v" === a || "\u00a0" === a
        },
        isIdent: function(a) {
            return "a" <= a && "z" >= a || "A" <= a && "Z" >= a || "_" === a || "$" === a
        },
        isExpOperator: function(a) {
            return "-" === a || "+" === a || this.isNumber(a)
        },
        throwError: function(a, c, d) {
            d = d || this.index;
            c = x(c) ? "s " + c + "-" + this.index + " [" + this.text.substring(c, d) + "]" : " " + d;
            throw da("lexerr", a, c, this.text);
        },
        readNumber: function() {
            for (var a = "", c = this.index; this.index < this.text.length; ) {
                var d = I(this.text.charAt(this.index));
                if ("." == d || this.isNumber(d))
                    a += d;
                else {
                    var e = this.peek();
                    if ("e" == d && this.isExpOperator(e))
                        a += d;
                    else if (this.isExpOperator(d) && e && this.isNumber(e) && "e" == a.charAt(a.length - 1))
                        a += d;
                    else if (!this.isExpOperator(d) || e && this.isNumber(e) || "e" != a.charAt(a.length - 1))
                        break;
                    else
                        this.throwError("Invalid exponent")
                }
                this.index++
            }
            this.tokens.push({
                index: c,
                text: a,
                constant: !0,
                value: Number(a)
            })
        },
        readIdent: function() {
            for (var a = this.index; this.index < this.text.length; ) {
                var c = this.text.charAt(this.index);
                if (!this.isIdent(c) && !this.isNumber(c))
                    break;
                this.index++
            }
            this.tokens.push({
                index: a,
                text: this.text.slice(a, this.index),
                identifier: !0
            })
        },
        readString: function(a) {
            var c = this.index;
            this.index++;
            for (var d = "", e = a, f = !1; this.index < this.text.length; ) {
                var g = this.text.charAt(this.index)
                  , e = e + g;
                if (f)
                    "u" === g ? (f = this.text.substring(this.index + 1, this.index + 5),
                    f.match(/[\da-f]{4}/i) || this.throwError("Invalid unicode escape [\\u" + f + "]"),
                    this.index += 4,
                    d += String.fromCharCode(parseInt(f, 16))) : d += rg[g] || g,
                    f = !1;
                else if ("\\" === g)
                    f = !0;
                else {
                    if (g === a) {
                        this.index++;
                        this.tokens.push({
                            index: c,
                            text: e,
                            constant: !0,
                            value: d
                        });
                        return
                    }
                    d += g
                }
                this.index++
            }
            this.throwError("Unterminated quote", c)
        }
    };
    var r = function(a, c) {
        this.lexer = a;
        this.options = c
    };
    r.Program = "Program";
    r.ExpressionStatement = "ExpressionStatement";
    r.AssignmentExpression = "AssignmentExpression";
    r.ConditionalExpression = "ConditionalExpression";
    r.LogicalExpression = "LogicalExpression";
    r.BinaryExpression = "BinaryExpression";
    r.UnaryExpression = "UnaryExpression";
    r.CallExpression = "CallExpression";
    r.MemberExpression = "MemberExpression";
    r.Identifier = "Identifier";
    r.Literal = "Literal";
    r.ArrayExpression = "ArrayExpression";
    r.Property = "Property";
    r.ObjectExpression = "ObjectExpression";
    r.ThisExpression = "ThisExpression";
    r.NGValueParameter = "NGValueParameter";
    r.prototype = {
        ast: function(a) {
            this.text = a;
            this.tokens = this.lexer.lex(a);
            a = this.program();
            0 !== this.tokens.length && this.throwError("is an unexpected token", this.tokens[0]);
            return a
        },
        program: function() {
            for (var a = []; ; )
                if (0 < this.tokens.length && !this.peek("}", ")", ";", "]") && a.push(this.expressionStatement()),
                !this.expect(";"))
                    return {
                        type: r.Program,
                        body: a
                    }
        },
        expressionStatement: function() {
            return {
                type: r.ExpressionStatement,
                expression: this.filterChain()
            }
        },
        filterChain: function() {
            for (var a = this.expression(); this.expect("|"); )
                a = this.filter(a);
            return a
        },
        expression: function() {
            return this.assignment()
        },
        assignment: function() {
            var a = this.ternary();
            this.expect("=") && (a = {
                type: r.AssignmentExpression,
                left: a,
                right: this.assignment(),
                operator: "="
            });
            return a
        },
        ternary: function() {
            var a = this.logicalOR(), c, d;
            return this.expect("?") && (c = this.expression(),
            this.consume(":")) ? (d = this.expression(),
            {
                type: r.ConditionalExpression,
                test: a,
                alternate: c,
                consequent: d
            }) : a
        },
        logicalOR: function() {
            for (var a = this.logicalAND(); this.expect("||"); )
                a = {
                    type: r.LogicalExpression,
                    operator: "||",
                    left: a,
                    right: this.logicalAND()
                };
            return a
        },
        logicalAND: function() {
            for (var a = this.equality(); this.expect("&&"); )
                a = {
                    type: r.LogicalExpression,
                    operator: "&&",
                    left: a,
                    right: this.equality()
                };
            return a
        },
        equality: function() {
            for (var a = this.relational(), c; c = this.expect("==", "!=", "===", "!=="); )
                a = {
                    type: r.BinaryExpression,
                    operator: c.text,
                    left: a,
                    right: this.relational()
                };
            return a
        },
        relational: function() {
            for (var a = this.additive(), c; c = this.expect("<", ">", "<=", ">="); )
                a = {
                    type: r.BinaryExpression,
                    operator: c.text,
                    left: a,
                    right: this.additive()
                };
            return a
        },
        additive: function() {
            for (var a = this.multiplicative(), c; c = this.expect("+", "-"); )
                a = {
                    type: r.BinaryExpression,
                    operator: c.text,
                    left: a,
                    right: this.multiplicative()
                };
            return a
        },
        multiplicative: function() {
            for (var a = this.unary(), c; c = this.expect("*", "/", "%"); )
                a = {
                    type: r.BinaryExpression,
                    operator: c.text,
                    left: a,
                    right: this.unary()
                };
            return a
        },
        unary: function() {
            var a;
            return (a = this.expect("+", "-", "!")) ? {
                type: r.UnaryExpression,
                operator: a.text,
                prefix: !0,
                argument: this.unary()
            } : this.primary()
        },
        primary: function() {
            var a;
            this.expect("(") ? (a = this.filterChain(),
            this.consume(")")) : this.expect("[") ? a = this.arrayDeclaration() : this.expect("{") ? a = this.object() : this.constants.hasOwnProperty(this.peek().text) ? a = fa(this.constants[this.consume().text]) : this.peek().identifier ? a = this.identifier() : this.peek().constant ? a = this.constant() : this.throwError("not a primary expression", this.peek());
            for (var c; c = this.expect("(", "[", "."); )
                "(" === c.text ? (a = {
                    type: r.CallExpression,
                    callee: a,
                    arguments: this.parseArguments()
                },
                this.consume(")")) : "[" === c.text ? (a = {
                    type: r.MemberExpression,
                    object: a,
                    property: this.expression(),
                    computed: !0
                },
                this.consume("]")) : "." === c.text ? a = {
                    type: r.MemberExpression,
                    object: a,
                    property: this.identifier(),
                    computed: !1
                } : this.throwError("IMPOSSIBLE");
            return a
        },
        filter: function(a) {
            a = [a];
            for (var c = {
                type: r.CallExpression,
                callee: this.identifier(),
                arguments: a,
                filter: !0
            }; this.expect(":"); )
                a.push(this.expression());
            return c
        },
        parseArguments: function() {
            var a = [];
            if (")" !== this.peekToken().text) {
                do
                    a.push(this.expression());
                while (this.expect(","))
            }
            return a
        },
        identifier: function() {
            var a = this.consume();
            a.identifier || this.throwError("is not a valid identifier", a);
            return {
                type: r.Identifier,
                name: a.text
            }
        },
        constant: function() {
            return {
                type: r.Literal,
                value: this.consume().value
            }
        },
        arrayDeclaration: function() {
            var a = [];
            if ("]" !== this.peekToken().text) {
                do {
                    if (this.peek("]"))
                        break;
                    a.push(this.expression())
                } while (this.expect(","))
            }
            this.consume("]");
            return {
                type: r.ArrayExpression,
                elements: a
            }
        },
        object: function() {
            var a = [], c;
            if ("}" !== this.peekToken().text) {
                do {
                    if (this.peek("}"))
                        break;
                    c = {
                        type: r.Property,
                        kind: "init"
                    };
                    this.peek().constant ? c.key = this.constant() : this.peek().identifier ? c.key = this.identifier() : this.throwError("invalid key", this.peek());
                    this.consume(":");
                    c.value = this.expression();
                    a.push(c)
                } while (this.expect(","))
            }
            this.consume("}");
            return {
                type: r.ObjectExpression,
                properties: a
            }
        },
        throwError: function(a, c) {
            throw da("syntax", c.text, a, c.index + 1, this.text, this.text.substring(c.index));
        },
        consume: function(a) {
            if (0 === this.tokens.length)
                throw da("ueoe", this.text);
            var c = this.expect(a);
            c || this.throwError("is unexpected, expecting [" + a + "]", this.peek());
            return c
        },
        peekToken: function() {
            if (0 === this.tokens.length)
                throw da("ueoe", this.text);
            return this.tokens[0]
        },
        peek: function(a, c, d, e) {
            return this.peekAhead(0, a, c, d, e)
        },
        peekAhead: function(a, c, d, e, f) {
            if (this.tokens.length > a) {
                a = this.tokens[a];
                var g = a.text;
                if (g === c || g === d || g === e || g === f || !(c || d || e || f))
                    return a
            }
            return !1
        },
        expect: function(a, c, d, e) {
            return (a = this.peek(a, c, d, e)) ? (this.tokens.shift(),
            a) : !1
        },
        constants: {
            "true": {
                type: r.Literal,
                value: !0
            },
            "false": {
                type: r.Literal,
                value: !1
            },
            "null": {
                type: r.Literal,
                value: null
            },
            undefined: {
                type: r.Literal,
                value: u
            },
            "this": {
                type: r.ThisExpression
            }
        }
    };
    rd.prototype = {
        compile: function(a, c) {
            var d = this
              , e = this.astBuilder.ast(a);
            this.state = {
                nextId: 0,
                filters: {},
                expensiveChecks: c,
                fn: {
                    vars: [],
                    body: [],
                    own: {}
                },
                assign: {
                    vars: [],
                    body: [],
                    own: {}
                },
                inputs: []
            };
            U(e, d.$filter);
            var f = "", g;
            this.stage = "assign";
            if (g = pd(e))
                this.state.computing = "assign",
                f = this.nextId(),
                this.recurse(g, f),
                f = "fn.assign=" + this.generateFunction("assign", "s,v,l");
            g = nd(e.body);
            d.stage = "inputs";
            n(g, function(a, c) {
                var e = "fn" + c;
                d.state[e] = {
                    vars: [],
                    body: [],
                    own: {}
                };
                d.state.computing = e;
                var f = d.nextId();
                d.recurse(a, f);
                d.return_(f);
                d.state.inputs.push(e);
                a.watchId = c
            });
            this.state.computing = "fn";
            this.stage = "main";
            this.recurse(e);
            f = '"' + this.USE + " " + this.STRICT + '";\n' + this.filterPrefix() + "var fn=" + this.generateFunction("fn", "s,l,a,i") + f + this.watchFns() + "return fn;";
            f = (new Function("$filter","ensureSafeMemberName","ensureSafeObject","ensureSafeFunction","ifDefined","plus","text",f))(this.$filter, Wa, Ba, ld, Xf, md, a);
            this.state = this.stage = u;
            f.literal = qd(e);
            f.constant = e.constant;
            return f
        },
        USE: "use",
        STRICT: "strict",
        watchFns: function() {
            var a = []
              , c = this.state.inputs
              , d = this;
            n(c, function(c) {
                a.push("var " + c + "=" + d.generateFunction(c, "s"))
            });
            c.length && a.push("fn.inputs=[" + c.join(",") + "];");
            return a.join("")
        },
        generateFunction: function(a, c) {
            return "function(" + c + "){" + this.varsPrefix(a) + this.body(a) + "};"
        },
        filterPrefix: function() {
            var a = []
              , c = this;
            n(this.state.filters, function(d, e) {
                a.push(d + "=$filter(" + c.escape(e) + ")")
            });
            return a.length ? "var " + a.join(",") + ";" : ""
        },
        varsPrefix: function(a) {
            return this.state[a].vars.length ? "var " + this.state[a].vars.join(",") + ";" : ""
        },
        body: function(a) {
            return this.state[a].body.join("")
        },
        recurse: function(a, c, d, e, f, g) {
            var h, l, k = this, m, q;
            e = e || v;
            if (!g && x(a.watchId))
                c = c || this.nextId(),
                this.if_("i", this.lazyAssign(c, this.computedMember("i", a.watchId)), this.lazyRecurse(a, c, d, e, f, !0));
            else
                switch (a.type) {
                case r.Program:
                    n(a.body, function(c, d) {
                        k.recurse(c.expression, u, u, function(a) {
                            l = a
                        });
                        d !== a.body.length - 1 ? k.current().body.push(l, ";") : k.return_(l)
                    });
                    break;
                case r.Literal:
                    q = this.escape(a.value);
                    this.assign(c, q);
                    e(q);
                    break;
                case r.UnaryExpression:
                    this.recurse(a.argument, u, u, function(a) {
                        l = a
                    });
                    q = a.operator + "(" + this.ifDefined(l, 0) + ")";
                    this.assign(c, q);
                    e(q);
                    break;
                case r.BinaryExpression:
                    this.recurse(a.left, u, u, function(a) {
                        h = a
                    });
                    this.recurse(a.right, u, u, function(a) {
                        l = a
                    });
                    q = "+" === a.operator ? this.plus(h, l) : "-" === a.operator ? this.ifDefined(h, 0) + a.operator + this.ifDefined(l, 0) : "(" + h + ")" + a.operator + "(" + l + ")";
                    this.assign(c, q);
                    e(q);
                    break;
                case r.LogicalExpression:
                    c = c || this.nextId();
                    k.recurse(a.left, c);
                    k.if_("&&" === a.operator ? c : k.not(c), k.lazyRecurse(a.right, c));
                    e(c);
                    break;
                case r.ConditionalExpression:
                    c = c || this.nextId();
                    k.recurse(a.test, c);
                    k.if_(c, k.lazyRecurse(a.alternate, c), k.lazyRecurse(a.consequent, c));
                    e(c);
                    break;
                case r.Identifier:
                    c = c || this.nextId();
                    d && (d.context = "inputs" === k.stage ? "s" : this.assign(this.nextId(), this.getHasOwnProperty("l", a.name) + "?l:s"),
                    d.computed = !1,
                    d.name = a.name);
                    Wa(a.name);
                    k.if_("inputs" === k.stage || k.not(k.getHasOwnProperty("l", a.name)), function() {
                        k.if_("inputs" === k.stage || "s", function() {
                            f && 1 !== f && k.if_(k.not(k.nonComputedMember("s", a.name)), k.lazyAssign(k.nonComputedMember("s", a.name), "{}"));
                            k.assign(c, k.nonComputedMember("s", a.name))
                        })
                    }, c && k.lazyAssign(c, k.nonComputedMember("l", a.name)));
                    (k.state.expensiveChecks || Fb(a.name)) && k.addEnsureSafeObject(c);
                    e(c);
                    break;
                case r.MemberExpression:
                    h = d && (d.context = this.nextId()) || this.nextId();
                    c = c || this.nextId();
                    k.recurse(a.object, h, u, function() {
                        k.if_(k.notNull(h), function() {
                            if (a.computed)
                                l = k.nextId(),
                                k.recurse(a.property, l),
                                k.addEnsureSafeMemberName(l),
                                f && 1 !== f && k.if_(k.not(k.computedMember(h, l)), k.lazyAssign(k.computedMember(h, l), "{}")),
                                q = k.ensureSafeObject(k.computedMember(h, l)),
                                k.assign(c, q),
                                d && (d.computed = !0,
                                d.name = l);
                            else {
                                Wa(a.property.name);
                                f && 1 !== f && k.if_(k.not(k.nonComputedMember(h, a.property.name)), k.lazyAssign(k.nonComputedMember(h, a.property.name), "{}"));
                                q = k.nonComputedMember(h, a.property.name);
                                if (k.state.expensiveChecks || Fb(a.property.name))
                                    q = k.ensureSafeObject(q);
                                k.assign(c, q);
                                d && (d.computed = !1,
                                d.name = a.property.name)
                            }
                        }, function() {
                            k.assign(c, "undefined")
                        });
                        e(c)
                    }, !!f);
                    break;
                case r.CallExpression:
                    c = c || this.nextId();
                    a.filter ? (l = k.filter(a.callee.name),
                    m = [],
                    n(a.arguments, function(a) {
                        var c = k.nextId();
                        k.recurse(a, c);
                        m.push(c)
                    }),
                    q = l + "(" + m.join(",") + ")",
                    k.assign(c, q),
                    e(c)) : (l = k.nextId(),
                    h = {},
                    m = [],
                    k.recurse(a.callee, l, h, function() {
                        k.if_(k.notNull(l), function() {
                            k.addEnsureSafeFunction(l);
                            n(a.arguments, function(a) {
                                k.recurse(a, k.nextId(), u, function(a) {
                                    m.push(k.ensureSafeObject(a))
                                })
                            });
                            h.name ? (k.state.expensiveChecks || k.addEnsureSafeObject(h.context),
                            q = k.member(h.context, h.name, h.computed) + "(" + m.join(",") + ")") : q = l + "(" + m.join(",") + ")";
                            q = k.ensureSafeObject(q);
                            k.assign(c, q)
                        }, function() {
                            k.assign(c, "undefined")
                        });
                        e(c)
                    }));
                    break;
                case r.AssignmentExpression:
                    l = this.nextId();
                    h = {};
                    if (!od(a.left))
                        throw da("lval");
                    this.recurse(a.left, u, h, function() {
                        k.if_(k.notNull(h.context), function() {
                            k.recurse(a.right, l);
                            k.addEnsureSafeObject(k.member(h.context, h.name, h.computed));
                            q = k.member(h.context, h.name, h.computed) + a.operator + l;
                            k.assign(c, q);
                            e(c || q)
                        })
                    }, 1);
                    break;
                case r.ArrayExpression:
                    m = [];
                    n(a.elements, function(a) {
                        k.recurse(a, k.nextId(), u, function(a) {
                            m.push(a)
                        })
                    });
                    q = "[" + m.join(",") + "]";
                    this.assign(c, q);
                    e(q);
                    break;
                case r.ObjectExpression:
                    m = [];
                    n(a.properties, function(a) {
                        k.recurse(a.value, k.nextId(), u, function(c) {
                            m.push(k.escape(a.key.type === r.Identifier ? a.key.name : "" + a.key.value) + ":" + c)
                        })
                    });
                    q = "{" + m.join(",") + "}";
                    this.assign(c, q);
                    e(q);
                    break;
                case r.ThisExpression:
                    this.assign(c, "s");
                    e("s");
                    break;
                case r.NGValueParameter:
                    this.assign(c, "v"),
                    e("v")
                }
        },
        getHasOwnProperty: function(a, c) {
            var d = a + "." + c
              , e = this.current().own;
            e.hasOwnProperty(d) || (e[d] = this.nextId(!1, a + "&&(" + this.escape(c) + " in " + a + ")"));
            return e[d]
        },
        assign: function(a, c) {
            if (a)
                return this.current().body.push(a, "=", c, ";"),
                a
        },
        filter: function(a) {
            this.state.filters.hasOwnProperty(a) || (this.state.filters[a] = this.nextId(!0));
            return this.state.filters[a]
        },
        ifDefined: function(a, c) {
            return "ifDefined(" + a + "," + this.escape(c) + ")"
        },
        plus: function(a, c) {
            return "plus(" + a + "," + c + ")"
        },
        return_: function(a) {
            this.current().body.push("return ", a, ";")
        },
        if_: function(a, c, d) {
            if (!0 === a)
                c();
            else {
                var e = this.current().body;
                e.push("if(", a, "){");
                c();
                e.push("}");
                d && (e.push("else{"),
                d(),
                e.push("}"))
            }
        },
        not: function(a) {
            return "!(" + a + ")"
        },
        notNull: function(a) {
            return a + "!=null"
        },
        nonComputedMember: function(a, c) {
            return a + "." + c
        },
        computedMember: function(a, c) {
            return a + "[" + c + "]"
        },
        member: function(a, c, d) {
            return d ? this.computedMember(a, c) : this.nonComputedMember(a, c)
        },
        addEnsureSafeObject: function(a) {
            this.current().body.push(this.ensureSafeObject(a), ";")
        },
        addEnsureSafeMemberName: function(a) {
            this.current().body.push(this.ensureSafeMemberName(a), ";")
        },
        addEnsureSafeFunction: function(a) {
            this.current().body.push(this.ensureSafeFunction(a), ";")
        },
        ensureSafeObject: function(a) {
            return "ensureSafeObject(" + a + ",text)"
        },
        ensureSafeMemberName: function(a) {
            return "ensureSafeMemberName(" + a + ",text)"
        },
        ensureSafeFunction: function(a) {
            return "ensureSafeFunction(" + a + ",text)"
        },
        lazyRecurse: function(a, c, d, e, f, g) {
            var h = this;
            return function() {
                h.recurse(a, c, d, e, f, g)
            }
        },
        lazyAssign: function(a, c) {
            var d = this;
            return function() {
                d.assign(a, c)
            }
        },
        stringEscapeRegex: /[^ a-zA-Z0-9]/g,
        stringEscapeFn: function(a) {
            return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4)
        },
        escape: function(a) {
            if (H(a))
                return "'" + a.replace(this.stringEscapeRegex, this.stringEscapeFn) + "'";
            if (X(a))
                return a.toString();
            if (!0 === a)
                return "true";
            if (!1 === a)
                return "false";
            if (null === a)
                return "null";
            if ("undefined" === typeof a)
                return "undefined";
            throw da("esc");
        },
        nextId: function(a, c) {
            var d = "v" + this.state.nextId++;
            a || this.current().vars.push(d + (c ? "=" + c : ""));
            return d
        },
        current: function() {
            return this.state[this.state.computing]
        }
    };
    sd.prototype = {
        compile: function(a, c) {
            var d = this
              , e = this.astBuilder.ast(a);
            this.expression = a;
            this.expensiveChecks = c;
            U(e, d.$filter);
            var f, g;
            if (f = pd(e))
                g = this.recurse(f);
            f = nd(e.body);
            var h;
            f && (h = [],
            n(f, function(a, c) {
                var e = d.recurse(a);
                a.input = e;
                h.push(e);
                a.watchId = c
            }));
            var l = [];
            n(e.body, function(a) {
                l.push(d.recurse(a.expression))
            });
            f = 0 === e.body.length ? function() {}
            : 1 === e.body.length ? l[0] : function(a, c) {
                var d;
                n(l, function(e) {
                    d = e(a, c)
                });
                return d
            }
            ;
            g && (f.assign = function(a, c, d) {
                return g(a, d, c)
            }
            );
            h && (f.inputs = h);
            f.literal = qd(e);
            f.constant = e.constant;
            return f
        },
        recurse: function(a, c, d) {
            var e, f, g = this, h;
            if (a.input)
                return this.inputs(a.input, a.watchId);
            switch (a.type) {
            case r.Literal:
                return this.value(a.value, c);
            case r.UnaryExpression:
                return f = this.recurse(a.argument),
                this["unary" + a.operator](f, c);
            case r.BinaryExpression:
                return e = this.recurse(a.left),
                f = this.recurse(a.right),
                this["binary" + a.operator](e, f, c);
            case r.LogicalExpression:
                return e = this.recurse(a.left),
                f = this.recurse(a.right),
                this["binary" + a.operator](e, f, c);
            case r.ConditionalExpression:
                return this["ternary?:"](this.recurse(a.test), this.recurse(a.alternate), this.recurse(a.consequent), c);
            case r.Identifier:
                return Wa(a.name, g.expression),
                g.identifier(a.name, g.expensiveChecks || Fb(a.name), c, d, g.expression);
            case r.MemberExpression:
                return e = this.recurse(a.object, !1, !!d),
                a.computed || (Wa(a.property.name, g.expression),
                f = a.property.name),
                a.computed && (f = this.recurse(a.property)),
                a.computed ? this.computedMember(e, f, c, d, g.expression) : this.nonComputedMember(e, f, g.expensiveChecks, c, d, g.expression);
            case r.CallExpression:
                return h = [],
                n(a.arguments, function(a) {
                    h.push(g.recurse(a))
                }),
                a.filter && (f = this.$filter(a.callee.name)),
                a.filter || (f = this.recurse(a.callee, !0)),
                a.filter ? function(a, d, e, g) {
                    for (var n = [], t = 0; t < h.length; ++t)
                        n.push(h[t](a, d, e, g));
                    a = f.apply(u, n, g);
                    return c ? {
                        context: u,
                        name: u,
                        value: a
                    } : a
                }
                : function(a, d, e, q) {
                    var n = f(a, d, e, q), t;
                    if (null != n.value) {
                        Ba(n.context, g.expression);
                        ld(n.value, g.expression);
                        t = [];
                        for (var r = 0; r < h.length; ++r)
                            t.push(Ba(h[r](a, d, e, q), g.expression));
                        t = Ba(n.value.apply(n.context, t), g.expression)
                    }
                    return c ? {
                        value: t
                    } : t
                }
                ;
            case r.AssignmentExpression:
                return e = this.recurse(a.left, !0, 1),
                f = this.recurse(a.right),
                function(a, d, h, q) {
                    var n = e(a, d, h, q);
                    a = f(a, d, h, q);
                    Ba(n.value, g.expression);
                    n.context[n.name] = a;
                    return c ? {
                        value: a
                    } : a
                }
                ;
            case r.ArrayExpression:
                return h = [],
                n(a.elements, function(a) {
                    h.push(g.recurse(a))
                }),
                function(a, d, e, f) {
                    for (var g = [], n = 0; n < h.length; ++n)
                        g.push(h[n](a, d, e, f));
                    return c ? {
                        value: g
                    } : g
                }
                ;
            case r.ObjectExpression:
                return h = [],
                n(a.properties, function(a) {
                    h.push({
                        key: a.key.type === r.Identifier ? a.key.name : "" + a.key.value,
                        value: g.recurse(a.value)
                    })
                }),
                function(a, d, e, f) {
                    for (var g = {}, n = 0; n < h.length; ++n)
                        g[h[n].key] = h[n].value(a, d, e, f);
                    return c ? {
                        value: g
                    } : g
                }
                ;
            case r.ThisExpression:
                return function(a) {
                    return c ? {
                        value: a
                    } : a
                }
                ;
            case r.NGValueParameter:
                return function(a, d, e, f) {
                    return c ? {
                        value: e
                    } : e
                }
            }
        },
        "unary+": function(a, c) {
            return function(d, e, f, g) {
                d = a(d, e, f, g);
                d = x(d) ? +d : 0;
                return c ? {
                    value: d
                } : d
            }
        },
        "unary-": function(a, c) {
            return function(d, e, f, g) {
                d = a(d, e, f, g);
                d = x(d) ? -d : 0;
                return c ? {
                    value: d
                } : d
            }
        },
        "unary!": function(a, c) {
            return function(d, e, f, g) {
                d = !a(d, e, f, g);
                return c ? {
                    value: d
                } : d
            }
        },
        "binary+": function(a, c, d) {
            return function(e, f, g, h) {
                var l = a(e, f, g, h);
                e = c(e, f, g, h);
                l = md(l, e);
                return d ? {
                    value: l
                } : l
            }
        },
        "binary-": function(a, c, d) {
            return function(e, f, g, h) {
                var l = a(e, f, g, h);
                e = c(e, f, g, h);
                l = (x(l) ? l : 0) - (x(e) ? e : 0);
                return d ? {
                    value: l
                } : l
            }
        },
        "binary*": function(a, c, d) {
            return function(e, f, g, h) {
                e = a(e, f, g, h) * c(e, f, g, h);
                return d ? {
                    value: e
                } : e
            }
        },
        "binary/": function(a, c, d) {
            return function(e, f, g, h) {
                e = a(e, f, g, h) / c(e, f, g, h);
                return d ? {
                    value: e
                } : e
            }
        },
        "binary%": function(a, c, d) {
            return function(e, f, g, h) {
                e = a(e, f, g, h) % c(e, f, g, h);
                return d ? {
                    value: e
                } : e
            }
        },
        "binary===": function(a, c, d) {
            return function(e, f, g, h) {
                e = a(e, f, g, h) === c(e, f, g, h);
                return d ? {
                    value: e
                } : e
            }
        },
        "binary!==": function(a, c, d) {
            return function(e, f, g, h) {
                e = a(e, f, g, h) !== c(e, f, g, h);
                return d ? {
                    value: e
                } : e
            }
        },
        "binary==": function(a, c, d) {
            return function(e, f, g, h) {
                e = a(e, f, g, h) == c(e, f, g, h);
                return d ? {
                    value: e
                } : e
            }
        },
        "binary!=": function(a, c, d) {
            return function(e, f, g, h) {
                e = a(e, f, g, h) != c(e, f, g, h);
                return d ? {
                    value: e
                } : e
            }
        },
        "binary<": function(a, c, d) {
            return function(e, f, g, h) {
                e = a(e, f, g, h) < c(e, f, g, h);
                return d ? {
                    value: e
                } : e
            }
        },
        "binary>": function(a, c, d) {
            return function(e, f, g, h) {
                e = a(e, f, g, h) > c(e, f, g, h);
                return d ? {
                    value: e
                } : e
            }
        },
        "binary<=": function(a, c, d) {
            return function(e, f, g, h) {
                e = a(e, f, g, h) <= c(e, f, g, h);
                return d ? {
                    value: e
                } : e
            }
        },
        "binary>=": function(a, c, d) {
            return function(e, f, g, h) {
                e = a(e, f, g, h) >= c(e, f, g, h);
                return d ? {
                    value: e
                } : e
            }
        },
        "binary&&": function(a, c, d) {
            return function(e, f, g, h) {
                e = a(e, f, g, h) && c(e, f, g, h);
                return d ? {
                    value: e
                } : e
            }
        },
        "binary||": function(a, c, d) {
            return function(e, f, g, h) {
                e = a(e, f, g, h) || c(e, f, g, h);
                return d ? {
                    value: e
                } : e
            }
        },
        "ternary?:": function(a, c, d, e) {
            return function(f, g, h, l) {
                f = a(f, g, h, l) ? c(f, g, h, l) : d(f, g, h, l);
                return e ? {
                    value: f
                } : f
            }
        },
        value: function(a, c) {
            return function() {
                return c ? {
                    context: u,
                    name: u,
                    value: a
                } : a
            }
        },
        identifier: function(a, c, d, e, f) {
            return function(g, h, l, k) {
                g = h && a in h ? h : g;
                e && 1 !== e && g && !g[a] && (g[a] = {});
                h = g ? g[a] : u;
                c && Ba(h, f);
                return d ? {
                    context: g,
                    name: a,
                    value: h
                } : h
            }
        },
        computedMember: function(a, c, d, e, f) {
            return function(g, h, l, k) {
                var m = a(g, h, l, k), q, n;
                null != m && (q = c(g, h, l, k),
                Wa(q, f),
                e && 1 !== e && m && !m[q] && (m[q] = {}),
                n = m[q],
                Ba(n, f));
                return d ? {
                    context: m,
                    name: q,
                    value: n
                } : n
            }
        },
        nonComputedMember: function(a, c, d, e, f, g) {
            return function(h, l, k, m) {
                h = a(h, l, k, m);
                f && 1 !== f && h && !h[c] && (h[c] = {});
                l = null != h ? h[c] : u;
                (d || Fb(c)) && Ba(l, g);
                return e ? {
                    context: h,
                    name: c,
                    value: l
                } : l
            }
        },
        inputs: function(a, c) {
            return function(d, e, f, g) {
                return g ? g[c] : a(d, e, f)
            }
        }
    };
    var fc = function(a, c, d) {
        this.lexer = a;
        this.$filter = c;
        this.options = d;
        this.ast = new r(this.lexer);
        this.astCompiler = d.csp ? new sd(this.ast,c) : new rd(this.ast,c)
    };
    fc.prototype = {
        constructor: fc,
        parse: function(a) {
            return this.astCompiler.compile(a, this.options.expensiveChecks)
        }
    };
    ga();
    ga();
    var Yf = Object.prototype.valueOf
      , Ca = G("$sce")
      , oa = {
        HTML: "html",
        CSS: "css",
        URL: "url",
        RESOURCE_URL: "resourceUrl",
        JS: "js"
    }
      , ea = G("$compile")
      , Z = W.createElement("a")
      , wd = Aa(N.location.href);
    xd.$inject = ["$document"];
    Jc.$inject = ["$provide"];
    yd.$inject = ["$locale"];
    Ad.$inject = ["$locale"];
    var Dd = "."
      , hg = {
        yyyy: $("FullYear", 4),
        yy: $("FullYear", 2, 0, !0),
        y: $("FullYear", 1),
        MMMM: Hb("Month"),
        MMM: Hb("Month", !0),
        MM: $("Month", 2, 1),
        M: $("Month", 1, 1),
        dd: $("Date", 2),
        d: $("Date", 1),
        HH: $("Hours", 2),
        H: $("Hours", 1),
        hh: $("Hours", 2, -12),
        h: $("Hours", 1, -12),
        mm: $("Minutes", 2),
        m: $("Minutes", 1),
        ss: $("Seconds", 2),
        s: $("Seconds", 1),
        sss: $("Milliseconds", 3),
        EEEE: Hb("Day"),
        EEE: Hb("Day", !0),
        a: function(a, c) {
            return 12 > a.getHours() ? c.AMPMS[0] : c.AMPMS[1]
        },
        Z: function(a, c, d) {
            a = -1 * d;
            return a = (0 <= a ? "+" : "") + (Gb(Math[0 < a ? "floor" : "ceil"](a / 60), 2) + Gb(Math.abs(a % 60), 2))
        },
        ww: Fd(2),
        w: Fd(1),
        G: hc,
        GG: hc,
        GGG: hc,
        GGGG: function(a, c) {
            return 0 >= a.getFullYear() ? c.ERANAMES[0] : c.ERANAMES[1]
        }
    }
      , gg = /((?:[^yMdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/
      , fg = /^\-?\d+$/;
    zd.$inject = ["$locale"];
    var cg = qa(I)
      , dg = qa(rb);
    Bd.$inject = ["$parse"];
    var he = qa({
        restrict: "E",
        compile: function(a, c) {
            if (!c.href && !c.xlinkHref)
                return function(a, c) {
                    if ("a" === c[0].nodeName.toLowerCase()) {
                        var f = "[object SVGAnimatedString]" === sa.call(c.prop("href")) ? "xlink:href" : "href";
                        c.on("click", function(a) {
                            c.attr(f) || a.preventDefault()
                        })
                    }
                }
        }
    })
      , sb = {};
    n(Ab, function(a, c) {
        function d(a, d, f) {
            a.$watch(f[e], function(a) {
                f.$set(c, !!a)
            })
        }
        if ("multiple" != a) {
            var e = va("ng-" + c)
              , f = d;
            "checked" === a && (f = function(a, c, f) {
                f.ngModel !== f[e] && d(a, c, f)
            }
            );
            sb[e] = function() {
                return {
                    restrict: "A",
                    priority: 100,
                    link: f
                }
            }
        }
    });
    n(Sc, function(a, c) {
        sb[c] = function() {
            return {
                priority: 100,
                link: function(a, e, f) {
                    if ("ngPattern" === c && "/" == f.ngPattern.charAt(0) && (e = f.ngPattern.match(jg))) {
                        f.$set("ngPattern", new RegExp(e[1],e[2]));
                        return
                    }
                    a.$watch(f[c], function(a) {
                        f.$set(c, a)
                    })
                }
            }
        }
    });
    n(["src", "srcset", "href"], function(a) {
        var c = va("ng-" + a);
        sb[c] = function() {
            return {
                priority: 99,
                link: function(d, e, f) {
                    var g = a
                      , h = a;
                    "href" === a && "[object SVGAnimatedString]" === sa.call(e.prop("href")) && (h = "xlinkHref",
                    f.$attr[h] = "xlink:href",
                    g = null);
                    f.$observe(c, function(c) {
                        c ? (f.$set(h, c),
                        Va && g && e.prop(g, f[h])) : "href" === a && f.$set(h, null)
                    })
                }
            }
        }
    });
    var Ib = {
        $addControl: v,
        $$renameControl: function(a, c) {
            a.$name = c
        },
        $removeControl: v,
        $setValidity: v,
        $setDirty: v,
        $setPristine: v,
        $setSubmitted: v
    };
    Gd.$inject = ["$element", "$attrs", "$scope", "$animate", "$interpolate"];
    var Od = function(a) {
        return ["$timeout", "$parse", function(c, d) {
            function e(a) {
                return "" === a ? d('this[""]').assign : d(a).assign || v
            }
            return {
                name: "form",
                restrict: a ? "EAC" : "E",
                controller: Gd,
                compile: function(d, g) {
                    d.addClass(Xa).addClass(lb);
                    var h = g.name ? "name" : a && g.ngForm ? "ngForm" : !1;
                    return {
                        pre: function(a, d, f, g) {
                            if (!("action"in f)) {
                                var n = function(c) {
                                    a.$apply(function() {
                                        g.$commitViewValue();
                                        g.$setSubmitted()
                                    });
                                    c.preventDefault()
                                };
                                d[0].addEventListener("submit", n, !1);
                                d.on("$destroy", function() {
                                    c(function() {
                                        d[0].removeEventListener("submit", n, !1)
                                    }, 0, !1)
                                })
                            }
                            var t = g.$$parentForm
                              , r = h ? e(g.$name) : v;
                            h && (r(a, g),
                            f.$observe(h, function(c) {
                                g.$name !== c && (r(a, u),
                                t.$$renameControl(g, c),
                                r = e(g.$name),
                                r(a, g))
                            }));
                            d.on("$destroy", function() {
                                t.$removeControl(g);
                                r(a, u);
                                Q(g, Ib)
                            })
                        }
                    }
                }
            }
        }
        ]
    }
      , ie = Od()
      , ve = Od(!0)
      , ig = /\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z)/
      , sg = /^(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?$/
      , tg = /^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i
      , ug = /^\s*(\-|\+)?(\d+|(\d*(\.\d*)))([eE][+-]?\d+)?\s*$/
      , Pd = /^(\d{4})-(\d{2})-(\d{2})$/
      , Qd = /^(\d{4})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/
      , kc = /^(\d{4})-W(\d\d)$/
      , Rd = /^(\d{4})-(\d\d)$/
      , Sd = /^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/
      , Td = {
        text: function(a, c, d, e, f, g) {
            ib(a, c, d, e, f, g);
            ic(e)
        },
        date: jb("date", Pd, Kb(Pd, ["yyyy", "MM", "dd"]), "yyyy-MM-dd"),
        "datetime-local": jb("datetimelocal", Qd, Kb(Qd, "yyyy MM dd HH mm ss sss".split(" ")), "yyyy-MM-ddTHH:mm:ss.sss"),
        time: jb("time", Sd, Kb(Sd, ["HH", "mm", "ss", "sss"]), "HH:mm:ss.sss"),
        week: jb("week", kc, function(a, c) {
            if (ca(a))
                return a;
            if (H(a)) {
                kc.lastIndex = 0;
                var d = kc.exec(a);
                if (d) {
                    var e = +d[1]
                      , f = +d[2]
                      , g = d = 0
                      , h = 0
                      , l = 0
                      , k = Ed(e)
                      , f = 7 * (f - 1);
                    c && (d = c.getHours(),
                    g = c.getMinutes(),
                    h = c.getSeconds(),
                    l = c.getMilliseconds());
                    return new Date(e,0,k.getDate() + f,d,g,h,l)
                }
            }
            return NaN
        }, "yyyy-Www"),
        month: jb("month", Rd, Kb(Rd, ["yyyy", "MM"]), "yyyy-MM"),
        number: function(a, c, d, e, f, g) {
            Id(a, c, d, e);
            ib(a, c, d, e, f, g);
            e.$$parserName = "number";
            e.$parsers.push(function(a) {
                return e.$isEmpty(a) ? null : ug.test(a) ? parseFloat(a) : u
            });
            e.$formatters.push(function(a) {
                if (!e.$isEmpty(a)) {
                    if (!X(a))
                        throw kb("numfmt", a);
                    a = a.toString()
                }
                return a
            });
            if (x(d.min) || d.ngMin) {
                var h;
                e.$validators.min = function(a) {
                    return e.$isEmpty(a) || y(h) || a >= h
                }
                ;
                d.$observe("min", function(a) {
                    x(a) && !X(a) && (a = parseFloat(a, 10));
                    h = X(a) && !isNaN(a) ? a : u;
                    e.$validate()
                })
            }
            if (x(d.max) || d.ngMax) {
                var l;
                e.$validators.max = function(a) {
                    return e.$isEmpty(a) || y(l) || a <= l
                }
                ;
                d.$observe("max", function(a) {
                    x(a) && !X(a) && (a = parseFloat(a, 10));
                    l = X(a) && !isNaN(a) ? a : u;
                    e.$validate()
                })
            }
        },
        url: function(a, c, d, e, f, g) {
            ib(a, c, d, e, f, g);
            ic(e);
            e.$$parserName = "url";
            e.$validators.url = function(a, c) {
                var d = a || c;
                return e.$isEmpty(d) || sg.test(d)
            }
        },
        email: function(a, c, d, e, f, g) {
            ib(a, c, d, e, f, g);
            ic(e);
            e.$$parserName = "email";
            e.$validators.email = function(a, c) {
                var d = a || c;
                return e.$isEmpty(d) || tg.test(d)
            }
        },
        radio: function(a, c, d, e) {
            y(d.name) && c.attr("name", ++mb);
            c.on("click", function(a) {
                c[0].checked && e.$setViewValue(d.value, a && a.type)
            });
            e.$render = function() {
                c[0].checked = d.value == e.$viewValue
            }
            ;
            d.$observe("value", e.$render)
        },
        checkbox: function(a, c, d, e, f, g, h, l) {
            var k = Jd(l, a, "ngTrueValue", d.ngTrueValue, !0)
              , m = Jd(l, a, "ngFalseValue", d.ngFalseValue, !1);
            c.on("click", function(a) {
                e.$setViewValue(c[0].checked, a && a.type)
            });
            e.$render = function() {
                c[0].checked = e.$viewValue
            }
            ;
            e.$isEmpty = function(a) {
                return !1 === a
            }
            ;
            e.$formatters.push(function(a) {
                return ka(a, k)
            });
            e.$parsers.push(function(a) {
                return a ? k : m
            })
        },
        hidden: v,
        button: v,
        submit: v,
        reset: v,
        file: v
    }
      , Dc = ["$browser", "$sniffer", "$filter", "$parse", function(a, c, d, e) {
        return {
            restrict: "E",
            require: ["?ngModel"],
            link: {
                pre: function(f, g, h, l) {
                    l[0] && (Td[I(h.type)] || Td.text)(f, g, h, l[0], c, a, d, e)
                }
            }
        }
    }
    ]
      , vg = /^(true|false|\d+)$/
      , Ne = function() {
        return {
            restrict: "A",
            priority: 100,
            compile: function(a, c) {
                return vg.test(c.ngValue) ? function(a, c, f) {
                    f.$set("value", a.$eval(f.ngValue))
                }
                : function(a, c, f) {
                    a.$watch(f.ngValue, function(a) {
                        f.$set("value", a)
                    })
                }
            }
        }
    }
      , ne = ["$compile", function(a) {
        return {
            restrict: "AC",
            compile: function(c) {
                a.$$addBindingClass(c);
                return function(c, e, f) {
                    a.$$addBindingInfo(e, f.ngBind);
                    e = e[0];
                    c.$watch(f.ngBind, function(a) {
                        e.textContent = a === u ? "" : a
                    })
                }
            }
        }
    }
    ]
      , pe = ["$interpolate", "$compile", function(a, c) {
        return {
            compile: function(d) {
                c.$$addBindingClass(d);
                return function(d, f, g) {
                    d = a(f.attr(g.$attr.ngBindTemplate));
                    c.$$addBindingInfo(f, d.expressions);
                    f = f[0];
                    g.$observe("ngBindTemplate", function(a) {
                        f.textContent = a === u ? "" : a
                    })
                }
            }
        }
    }
    ]
      , oe = ["$sce", "$parse", "$compile", function(a, c, d) {
        return {
            restrict: "A",
            compile: function(e, f) {
                var g = c(f.ngBindHtml)
                  , h = c(f.ngBindHtml, function(a) {
                    return (a || "").toString()
                });
                d.$$addBindingClass(e);
                return function(c, e, f) {
                    d.$$addBindingInfo(e, f.ngBindHtml);
                    c.$watch(h, function() {
                        e.html(a.getTrustedHtml(g(c)) || "")
                    })
                }
            }
        }
    }
    ]
      , Me = qa({
        restrict: "A",
        require: "ngModel",
        link: function(a, c, d, e) {
            e.$viewChangeListeners.push(function() {
                a.$eval(d.ngChange)
            })
        }
    })
      , qe = jc("", !0)
      , se = jc("Odd", 0)
      , re = jc("Even", 1)
      , te = Ma({
        compile: function(a, c) {
            c.$set("ngCloak", u);
            a.removeClass("ng-cloak")
        }
    })
      , ue = [function() {
        return {
            restrict: "A",
            scope: !0,
            controller: "@",
            priority: 500
        }
    }
    ]
      , Ic = {}
      , wg = {
        blur: !0,
        focus: !0
    };
    n("click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste".split(" "), function(a) {
        var c = va("ng-" + a);
        Ic[c] = ["$parse", "$rootScope", function(d, e) {
            return {
                restrict: "A",
                compile: function(f, g) {
                    var h = d(g[c], null, !0);
                    return function(c, d) {
                        d.on(a, function(d) {
                            var f = function() {
                                h(c, {
                                    $event: d
                                })
                            };
                            wg[a] && e.$$phase ? c.$evalAsync(f) : c.$apply(f)
                        })
                    }
                }
            }
        }
        ]
    });
    var xe = ["$animate", function(a) {
        return {
            multiElement: !0,
            transclude: "element",
            priority: 600,
            terminal: !0,
            restrict: "A",
            $$tlb: !0,
            link: function(c, d, e, f, g) {
                var h, l, k;
                c.$watch(e.ngIf, function(c) {
                    c ? l || g(function(c, f) {
                        l = f;
                        c[c.length++] = W.createComment(" end ngIf: " + e.ngIf + " ");
                        h = {
                            clone: c
                        };
                        a.enter(c, d.parent(), d)
                    }) : (k && (k.remove(),
                    k = null),
                    l && (l.$destroy(),
                    l = null),
                    h && (k = qb(h.clone),
                    a.leave(k).then(function() {
                        k = null
                    }),
                    h = null))
                })
            }
        }
    }
    ]
      , ye = ["$templateRequest", "$anchorScroll", "$animate", function(a, c, d) {
        return {
            restrict: "ECA",
            priority: 400,
            terminal: !0,
            transclude: "element",
            controller: aa.noop,
            compile: function(e, f) {
                var g = f.ngInclude || f.src
                  , h = f.onload || ""
                  , l = f.autoscroll;
                return function(e, f, n, s, r) {
                    var u = 0, v, w, p, A = function() {
                        w && (w.remove(),
                        w = null);
                        v && (v.$destroy(),
                        v = null);
                        p && (d.leave(p).then(function() {
                            w = null
                        }),
                        w = p,
                        p = null)
                    };
                    e.$watch(g, function(g) {
                        var n = function() {
                            !x(l) || l && !e.$eval(l) || c()
                        }
                          , q = ++u;
                        g ? (a(g, !0).then(function(a) {
                            if (q === u) {
                                var c = e.$new();
                                s.template = a;
                                a = r(c, function(a) {
                                    A();
                                    d.enter(a, null, f).then(n)
                                });
                                v = c;
                                p = a;
                                v.$emit("$includeContentLoaded", g);
                                e.$eval(h)
                            }
                        }, function() {
                            q === u && (A(),
                            e.$emit("$includeContentError", g))
                        }),
                        e.$emit("$includeContentRequested", g)) : (A(),
                        s.template = null)
                    })
                }
            }
        }
    }
    ]
      , Pe = ["$compile", function(a) {
        return {
            restrict: "ECA",
            priority: -400,
            require: "ngInclude",
            link: function(c, d, e, f) {
                /SVG/.test(d[0].toString()) ? (d.empty(),
                a(Lc(f.template, W).childNodes)(c, function(a) {
                    d.append(a)
                }, {
                    futureParentElement: d
                })) : (d.html(f.template),
                a(d.contents())(c))
            }
        }
    }
    ]
      , ze = Ma({
        priority: 450,
        compile: function() {
            return {
                pre: function(a, c, d) {
                    a.$eval(d.ngInit)
                }
            }
        }
    })
      , Le = function() {
        return {
            restrict: "A",
            priority: 100,
            require: "ngModel",
            link: function(a, c, d, e) {
                var f = c.attr(d.$attr.ngList) || ", "
                  , g = "false" !== d.ngTrim
                  , h = g ? T(f) : f;
                e.$parsers.push(function(a) {
                    if (!y(a)) {
                        var c = [];
                        a && n(a.split(h), function(a) {
                            a && c.push(g ? T(a) : a)
                        });
                        return c
                    }
                });
                e.$formatters.push(function(a) {
                    return K(a) ? a.join(f) : u
                });
                e.$isEmpty = function(a) {
                    return !a || !a.length
                }
            }
        }
    }
      , lb = "ng-valid"
      , Kd = "ng-invalid"
      , Xa = "ng-pristine"
      , Jb = "ng-dirty"
      , Md = "ng-pending"
      , kb = G("ngModel")
      , xg = ["$scope", "$exceptionHandler", "$attrs", "$element", "$parse", "$animate", "$timeout", "$rootScope", "$q", "$interpolate", function(a, c, d, e, f, g, h, l, k, m) {
        this.$modelValue = this.$viewValue = Number.NaN;
        this.$$rawModelValue = u;
        this.$validators = {};
        this.$asyncValidators = {};
        this.$parsers = [];
        this.$formatters = [];
        this.$viewChangeListeners = [];
        this.$untouched = !0;
        this.$touched = !1;
        this.$pristine = !0;
        this.$dirty = !1;
        this.$valid = !0;
        this.$invalid = !1;
        this.$error = {};
        this.$$success = {};
        this.$pending = u;
        this.$name = m(d.name || "", !1)(a);
        var q = f(d.ngModel), s = q.assign, r = q, E = s, L = null, w, p = this;
        this.$$setOptions = function(a) {
            if ((p.$options = a) && a.getterSetter) {
                var c = f(d.ngModel + "()")
                  , g = f(d.ngModel + "($$$p)");
                r = function(a) {
                    var d = q(a);
                    B(d) && (d = c(a));
                    return d
                }
                ;
                E = function(a, c) {
                    B(q(a)) ? g(a, {
                        $$$p: p.$modelValue
                    }) : s(a, p.$modelValue)
                }
            } else if (!q.assign)
                throw kb("nonassign", d.ngModel, ua(e));
        }
        ;
        this.$render = v;
        this.$isEmpty = function(a) {
            return y(a) || "" === a || null === a || a !== a
        }
        ;
        var A = e.inheritedData("$formController") || Ib
          , z = 0;
        Hd({
            ctrl: this,
            $element: e,
            set: function(a, c) {
                a[c] = !0
            },
            unset: function(a, c) {
                delete a[c]
            },
            parentForm: A,
            $animate: g
        });
        this.$setPristine = function() {
            p.$dirty = !1;
            p.$pristine = !0;
            g.removeClass(e, Jb);
            g.addClass(e, Xa)
        }
        ;
        this.$setDirty = function() {
            p.$dirty = !0;
            p.$pristine = !1;
            g.removeClass(e, Xa);
            g.addClass(e, Jb);
            A.$setDirty()
        }
        ;
        this.$setUntouched = function() {
            p.$touched = !1;
            p.$untouched = !0;
            g.setClass(e, "ng-untouched", "ng-touched")
        }
        ;
        this.$setTouched = function() {
            p.$touched = !0;
            p.$untouched = !1;
            g.setClass(e, "ng-touched", "ng-untouched")
        }
        ;
        this.$rollbackViewValue = function() {
            h.cancel(L);
            p.$viewValue = p.$$lastCommittedViewValue;
            p.$render()
        }
        ;
        this.$validate = function() {
            if (!X(p.$modelValue) || !isNaN(p.$modelValue)) {
                var a = p.$$rawModelValue
                  , c = p.$valid
                  , d = p.$modelValue
                  , e = p.$options && p.$options.allowInvalid;
                p.$$runValidators(a, p.$$lastCommittedViewValue, function(f) {
                    e || c === f || (p.$modelValue = f ? a : u,
                    p.$modelValue !== d && p.$$writeModelToScope())
                })
            }
        }
        ;
        this.$$runValidators = function(a, c, d) {
            function e() {
                var d = !0;
                n(p.$validators, function(e, f) {
                    var h = e(a, c);
                    d = d && h;
                    g(f, h)
                });
                return d ? !0 : (n(p.$asyncValidators, function(a, c) {
                    g(c, null)
                }),
                !1)
            }
            function f() {
                var d = []
                  , e = !0;
                n(p.$asyncValidators, function(f, h) {
                    var k = f(a, c);
                    if (!k || !B(k.then))
                        throw kb("$asyncValidators", k);
                    g(h, u);
                    d.push(k.then(function() {
                        g(h, !0)
                    }, function(a) {
                        e = !1;
                        g(h, !1)
                    }))
                });
                d.length ? k.all(d).then(function() {
                    h(e)
                }, v) : h(!0)
            }
            function g(a, c) {
                l === z && p.$setValidity(a, c)
            }
            function h(a) {
                l === z && d(a)
            }
            z++;
            var l = z;
            (function() {
                var a = p.$$parserName || "parse";
                if (w === u)
                    g(a, null);
                else
                    return w || (n(p.$validators, function(a, c) {
                        g(c, null)
                    }),
                    n(p.$asyncValidators, function(a, c) {
                        g(c, null)
                    })),
                    g(a, w),
                    w;
                return !0
            }
            )() ? e() ? f() : h(!1) : h(!1)
        }
        ;
        this.$commitViewValue = function() {
            var a = p.$viewValue;
            h.cancel(L);
            if (p.$$lastCommittedViewValue !== a || "" === a && p.$$hasNativeValidators)
                p.$$lastCommittedViewValue = a,
                p.$pristine && this.$setDirty(),
                this.$$parseAndValidate()
        }
        ;
        this.$$parseAndValidate = function() {
            var c = p.$$lastCommittedViewValue;
            if (w = y(c) ? u : !0)
                for (var d = 0; d < p.$parsers.length; d++)
                    if (c = p.$parsers[d](c),
                    y(c)) {
                        w = !1;
                        break
                    }
            X(p.$modelValue) && isNaN(p.$modelValue) && (p.$modelValue = r(a));
            var e = p.$modelValue
              , f = p.$options && p.$options.allowInvalid;
            p.$$rawModelValue = c;
            f && (p.$modelValue = c,
            p.$modelValue !== e && p.$$writeModelToScope());
            p.$$runValidators(c, p.$$lastCommittedViewValue, function(a) {
                f || (p.$modelValue = a ? c : u,
                p.$modelValue !== e && p.$$writeModelToScope())
            })
        }
        ;
        this.$$writeModelToScope = function() {
            E(a, p.$modelValue);
            n(p.$viewChangeListeners, function(a) {
                try {
                    a()
                } catch (d) {
                    c(d)
                }
            })
        }
        ;
        this.$setViewValue = function(a, c) {
            p.$viewValue = a;
            p.$options && !p.$options.updateOnDefault || p.$$debounceViewValueCommit(c)
        }
        ;
        this.$$debounceViewValueCommit = function(c) {
            var d = 0
              , e = p.$options;
            e && x(e.debounce) && (e = e.debounce,
            X(e) ? d = e : X(e[c]) ? d = e[c] : X(e["default"]) && (d = e["default"]));
            h.cancel(L);
            d ? L = h(function() {
                p.$commitViewValue()
            }, d) : l.$$phase ? p.$commitViewValue() : a.$apply(function() {
                p.$commitViewValue()
            })
        }
        ;
        a.$watch(function() {
            var c = r(a);
            if (c !== p.$modelValue && (p.$modelValue === p.$modelValue || c === c)) {
                p.$modelValue = p.$$rawModelValue = c;
                w = u;
                for (var d = p.$formatters, e = d.length, f = c; e--; )
                    f = d[e](f);
                p.$viewValue !== f && (p.$viewValue = p.$$lastCommittedViewValue = f,
                p.$render(),
                p.$$runValidators(c, f, v))
            }
            return c
        })
    }
    ]
      , Ke = ["$rootScope", function(a) {
        return {
            restrict: "A",
            require: ["ngModel", "^?form", "^?ngModelOptions"],
            controller: xg,
            priority: 1,
            compile: function(c) {
                c.addClass(Xa).addClass("ng-untouched").addClass(lb);
                return {
                    pre: function(a, c, f, g) {
                        var h = g[0]
                          , l = g[1] || Ib;
                        h.$$setOptions(g[2] && g[2].$options);
                        l.$addControl(h);
                        f.$observe("name", function(a) {
                            h.$name !== a && l.$$renameControl(h, a)
                        });
                        a.$on("$destroy", function() {
                            l.$removeControl(h)
                        })
                    },
                    post: function(c, e, f, g) {
                        var h = g[0];
                        if (h.$options && h.$options.updateOn)
                            e.on(h.$options.updateOn, function(a) {
                                h.$$debounceViewValueCommit(a && a.type)
                            });
                        e.on("blur", function(e) {
                            h.$touched || (a.$$phase ? c.$evalAsync(h.$setTouched) : c.$apply(h.$setTouched))
                        })
                    }
                }
            }
        }
    }
    ]
      , yg = /(\s+|^)default(\s+|$)/
      , Oe = function() {
        return {
            restrict: "A",
            controller: ["$scope", "$attrs", function(a, c) {
                var d = this;
                this.$options = fa(a.$eval(c.ngModelOptions));
                this.$options.updateOn !== u ? (this.$options.updateOnDefault = !1,
                this.$options.updateOn = T(this.$options.updateOn.replace(yg, function() {
                    d.$options.updateOnDefault = !0;
                    return " "
                }))) : this.$options.updateOnDefault = !0
            }
            ]
        }
    }
      , Ae = Ma({
        terminal: !0,
        priority: 1E3
    })
      , zg = G("ngOptions")
      , Ag = /^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/
      , Ie = ["$compile", "$parse", function(a, c) {
        function d(a, d, e) {
            function f(a, c, d, e, g) {
                this.selectValue = a;
                this.viewValue = c;
                this.label = d;
                this.group = e;
                this.disabled = g
            }
            function m(a) {
                var c;
                if (!r && Da(a))
                    c = a;
                else {
                    c = [];
                    for (var d in a)
                        a.hasOwnProperty(d) && "$" !== d.charAt(0) && c.push(d)
                }
                return c
            }
            var n = a.match(Ag);
            if (!n)
                throw zg("iexp", a, ua(d));
            var s = n[5] || n[7]
              , r = n[6];
            a = / as /.test(n[0]) && n[1];
            var u = n[9];
            d = c(n[2] ? n[1] : s);
            var v = a && c(a) || d
              , w = u && c(u)
              , p = u ? function(a, c) {
                return w(e, c)
            }
            : function(a) {
                return Ga(a)
            }
              , A = function(a, c) {
                return p(a, B(a, c))
            }
              , x = c(n[2] || n[1])
              , z = c(n[3] || "")
              , y = c(n[4] || "")
              , J = c(n[8])
              , F = {}
              , B = r ? function(a, c) {
                F[r] = c;
                F[s] = a;
                return F
            }
            : function(a) {
                F[s] = a;
                return F
            }
            ;
            return {
                trackBy: u,
                getTrackByValue: A,
                getWatchables: c(J, function(a) {
                    var c = [];
                    a = a || [];
                    for (var d = m(a), f = d.length, g = 0; g < f; g++) {
                        var h = a === d ? g : d[g]
                          , k = B(a[h], h)
                          , h = p(a[h], k);
                        c.push(h);
                        if (n[2] || n[1])
                            h = x(e, k),
                            c.push(h);
                        n[4] && (k = y(e, k),
                        c.push(k))
                    }
                    return c
                }),
                getOptions: function() {
                    for (var a = [], c = {}, d = J(e) || [], g = m(d), h = g.length, n = 0; n < h; n++) {
                        var q = d === g ? n : g[n]
                          , s = B(d[q], q)
                          , r = v(e, s)
                          , q = p(r, s)
                          , t = x(e, s)
                          , w = z(e, s)
                          , s = y(e, s)
                          , r = new f(q,r,t,w,s);
                        a.push(r);
                        c[q] = r
                    }
                    return {
                        items: a,
                        selectValueMap: c,
                        getOptionFromViewValue: function(a) {
                            return c[A(a)]
                        },
                        getViewValueFromOption: function(a) {
                            return u ? aa.copy(a.viewValue) : a.viewValue
                        }
                    }
                }
            }
        }
        var e = W.createElement("option")
          , f = W.createElement("optgroup");
        return {
            restrict: "A",
            terminal: !0,
            require: ["select", "?ngModel"],
            link: function(c, h, l, k) {
                function m(a, c) {
                    a.element = c;
                    c.disabled = a.disabled;
                    a.value !== c.value && (c.value = a.selectValue);
                    a.label !== c.label && (c.label = a.label,
                    c.textContent = a.label)
                }
                function q(a, c, d, e) {
                    c && I(c.nodeName) === d ? d = c : (d = e.cloneNode(!1),
                    c ? a.insertBefore(d, c) : a.appendChild(d));
                    return d
                }
                function s(a) {
                    for (var c; a; )
                        c = a.nextSibling,
                        Wb(a),
                        a = c
                }
                function r(a) {
                    var c = p && p[0]
                      , d = J && J[0];
                    if (c || d)
                        for (; a && (a === c || a === d); )
                            a = a.nextSibling;
                    return a
                }
                function u() {
                    var a = F && w.readValue();
                    F = D.getOptions();
                    var c = {}
                      , d = h[0].firstChild;
                    O && h.prepend(p);
                    d = r(d);
                    F.items.forEach(function(a) {
                        var g, k;
                        a.group ? (g = c[a.group],
                        g || (g = q(h[0], d, "optgroup", f),
                        d = g.nextSibling,
                        g.label = a.group,
                        g = c[a.group] = {
                            groupElement: g,
                            currentOptionElement: g.firstChild
                        }),
                        k = q(g.groupElement, g.currentOptionElement, "option", e),
                        m(a, k),
                        g.currentOptionElement = k.nextSibling) : (k = q(h[0], d, "option", e),
                        m(a, k),
                        d = k.nextSibling)
                    });
                    Object.keys(c).forEach(function(a) {
                        s(c[a].currentOptionElement)
                    });
                    s(d);
                    v.$render();
                    if (!v.$isEmpty(a)) {
                        var g = w.readValue();
                        (D.trackBy ? ka(a, g) : a === g) || (v.$setViewValue(g),
                        v.$render())
                    }
                }
                var v = k[1];
                if (v) {
                    var w = k[0];
                    k = l.multiple;
                    for (var p, x = 0, y = h.children(), B = y.length; x < B; x++)
                        if ("" === y[x].value) {
                            p = y.eq(x);
                            break
                        }
                    var O = !!p
                      , J = z(e.cloneNode(!1));
                    J.val("?");
                    var F, D = d(l.ngOptions, h, c);
                    k ? (v.$isEmpty = function(a) {
                        return !a || 0 === a.length
                    }
                    ,
                    w.writeValue = function(a) {
                        F.items.forEach(function(a) {
                            a.element.selected = !1
                        });
                        a && a.forEach(function(a) {
                            (a = F.getOptionFromViewValue(a)) && !a.disabled && (a.element.selected = !0)
                        })
                    }
                    ,
                    w.readValue = function() {
                        var a = h.val() || []
                          , c = [];
                        n(a, function(a) {
                            (a = F.selectValueMap[a]) && !a.disabled && c.push(F.getViewValueFromOption(a))
                        });
                        return c
                    }
                    ,
                    D.trackBy && c.$watchCollection(function() {
                        if (K(v.$viewValue))
                            return v.$viewValue.map(function(a) {
                                return D.getTrackByValue(a)
                            })
                    }, function() {
                        v.$render()
                    })) : (w.writeValue = function(a) {
                        var c = F.getOptionFromViewValue(a);
                        c && !c.disabled ? h[0].value !== c.selectValue && (J.remove(),
                        O || p.remove(),
                        h[0].value = c.selectValue,
                        c.element.selected = !0,
                        c.element.setAttribute("selected", "selected")) : null === a || O ? (J.remove(),
                        O || h.prepend(p),
                        h.val(""),
                        p.prop("selected", !0),
                        p.attr("selected", !0)) : (O || p.remove(),
                        h.prepend(J),
                        h.val("?"),
                        J.prop("selected", !0),
                        J.attr("selected", !0))
                    }
                    ,
                    w.readValue = function() {
                        var a = F.selectValueMap[h.val()];
                        return a && !a.disabled ? (O || p.remove(),
                        J.remove(),
                        F.getViewValueFromOption(a)) : null
                    }
                    ,
                    D.trackBy && c.$watch(function() {
                        return D.getTrackByValue(v.$viewValue)
                    }, function() {
                        v.$render()
                    }));
                    O ? (p.remove(),
                    a(p)(c),
                    p.removeClass("ng-scope")) : p = z(e.cloneNode(!1));
                    u();
                    c.$watchCollection(D.getWatchables, u)
                }
            }
        }
    }
    ]
      , Be = ["$locale", "$interpolate", "$log", function(a, c, d) {
        var e = /{}/g
          , f = /^when(Minus)?(.+)$/;
        return {
            link: function(g, h, l) {
                function k(a) {
                    h.text(a || "")
                }
                var m = l.count, q = l.$attr.when && h.attr(l.$attr.when), s = l.offset || 0, r = g.$eval(q) || {}, u = {}, x = c.startSymbol(), w = c.endSymbol(), p = x + m + "-" + s + w, A = aa.noop, z;
                n(l, function(a, c) {
                    var d = f.exec(c);
                    d && (d = (d[1] ? "-" : "") + I(d[2]),
                    r[d] = h.attr(l.$attr[c]))
                });
                n(r, function(a, d) {
                    u[d] = c(a.replace(e, p))
                });
                g.$watch(m, function(c) {
                    var e = parseFloat(c)
                      , f = isNaN(e);
                    f || e in r || (e = a.pluralCat(e - s));
                    e === z || f && X(z) && isNaN(z) || (A(),
                    f = u[e],
                    y(f) ? (null != c && d.debug("ngPluralize: no rule defined for '" + e + "' in " + q),
                    A = v,
                    k()) : A = g.$watch(f, k),
                    z = e)
                })
            }
        }
    }
    ]
      , Ce = ["$parse", "$animate", function(a, c) {
        var d = G("ngRepeat")
          , e = function(a, c, d, e, k, m, n) {
            a[d] = e;
            k && (a[k] = m);
            a.$index = c;
            a.$first = 0 === c;
            a.$last = c === n - 1;
            a.$middle = !(a.$first || a.$last);
            a.$odd = !(a.$even = 0 === (c & 1))
        };
        return {
            restrict: "A",
            multiElement: !0,
            transclude: "element",
            priority: 1E3,
            terminal: !0,
            $$tlb: !0,
            compile: function(f, g) {
                var h = g.ngRepeat
                  , l = W.createComment(" end ngRepeat: " + h + " ")
                  , k = h.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);
                if (!k)
                    throw d("iexp", h);
                var m = k[1]
                  , q = k[2]
                  , r = k[3]
                  , t = k[4]
                  , k = m.match(/^(?:(\s*[\$\w]+)|\(\s*([\$\w]+)\s*,\s*([\$\w]+)\s*\))$/);
                if (!k)
                    throw d("iidexp", m);
                var v = k[3] || k[1]
                  , x = k[2];
                if (r && (!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(r) || /^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(r)))
                    throw d("badident", r);
                var w, p, A, y, B = {
                    $id: Ga
                };
                t ? w = a(t) : (A = function(a, c) {
                    return Ga(c)
                }
                ,
                y = function(a) {
                    return a
                }
                );
                return function(a, f, g, k, m) {
                    w && (p = function(c, d, e) {
                        x && (B[x] = c);
                        B[v] = d;
                        B.$index = e;
                        return w(a, B)
                    }
                    );
                    var t = ga();
                    a.$watchCollection(q, function(g) {
                        var k, q, w = f[0], B, D = ga(), F, H, K, G, M, I, N;
                        r && (a[r] = g);
                        if (Da(g))
                            M = g,
                            q = p || A;
                        else
                            for (N in q = p || y,
                            M = [],
                            g)
                                g.hasOwnProperty(N) && "$" !== N.charAt(0) && M.push(N);
                        F = M.length;
                        N = Array(F);
                        for (k = 0; k < F; k++)
                            if (H = g === M ? k : M[k],
                            K = g[H],
                            G = q(H, K, k),
                            t[G])
                                I = t[G],
                                delete t[G],
                                D[G] = I,
                                N[k] = I;
                            else {
                                if (D[G])
                                    throw n(N, function(a) {
                                        a && a.scope && (t[a.id] = a)
                                    }),
                                    d("dupes", h, G, K);
                                N[k] = {
                                    id: G,
                                    scope: u,
                                    clone: u
                                };
                                D[G] = !0
                            }
                        for (B in t) {
                            I = t[B];
                            G = qb(I.clone);
                            c.leave(G);
                            if (G[0].parentNode)
                                for (k = 0,
                                q = G.length; k < q; k++)
                                    G[k].$$NG_REMOVED = !0;
                            I.scope.$destroy()
                        }
                        for (k = 0; k < F; k++)
                            if (H = g === M ? k : M[k],
                            K = g[H],
                            I = N[k],
                            I.scope) {
                                B = w;
                                do
                                    B = B.nextSibling;
                                while (B && B.$$NG_REMOVED);
                                I.clone[0] != B && c.move(qb(I.clone), null, z(w));
                                w = I.clone[I.clone.length - 1];
                                e(I.scope, k, v, K, x, H, F)
                            } else
                                m(function(a, d) {
                                    I.scope = d;
                                    var f = l.cloneNode(!1);
                                    a[a.length++] = f;
                                    c.enter(a, null, z(w));
                                    w = f;
                                    I.clone = a;
                                    D[I.id] = I;
                                    e(I.scope, k, v, K, x, H, F)
                                });
                        t = D
                    })
                }
            }
        }
    }
    ]
      , De = ["$animate", function(a) {
        return {
            restrict: "A",
            multiElement: !0,
            link: function(c, d, e) {
                c.$watch(e.ngShow, function(c) {
                    a[c ? "removeClass" : "addClass"](d, "ng-hide", {
                        tempClasses: "ng-hide-animate"
                    })
                })
            }
        }
    }
    ]
      , we = ["$animate", function(a) {
        return {
            restrict: "A",
            multiElement: !0,
            link: function(c, d, e) {
                c.$watch(e.ngHide, function(c) {
                    a[c ? "addClass" : "removeClass"](d, "ng-hide", {
                        tempClasses: "ng-hide-animate"
                    })
                })
            }
        }
    }
    ]
      , Ee = Ma(function(a, c, d) {
        a.$watch(d.ngStyle, function(a, d) {
            d && a !== d && n(d, function(a, d) {
                c.css(d, "")
            });
            a && c.css(a)
        }, !0)
    })
      , Fe = ["$animate", function(a) {
        return {
            require: "ngSwitch",
            controller: ["$scope", function() {
                this.cases = {}
            }
            ],
            link: function(c, d, e, f) {
                var g = []
                  , h = []
                  , l = []
                  , k = []
                  , m = function(a, c) {
                    return function() {
                        a.splice(c, 1)
                    }
                };
                c.$watch(e.ngSwitch || e.on, function(c) {
                    var d, e;
                    d = 0;
                    for (e = l.length; d < e; ++d)
                        a.cancel(l[d]);
                    d = l.length = 0;
                    for (e = k.length; d < e; ++d) {
                        var r = qb(h[d].clone);
                        k[d].$destroy();
                        (l[d] = a.leave(r)).then(m(l, d))
                    }
                    h.length = 0;
                    k.length = 0;
                    (g = f.cases["!" + c] || f.cases["?"]) && n(g, function(c) {
                        c.transclude(function(d, e) {
                            k.push(e);
                            var f = c.element;
                            d[d.length++] = W.createComment(" end ngSwitchWhen: ");
                            h.push({
                                clone: d
                            });
                            a.enter(d, f.parent(), f)
                        })
                    })
                })
            }
        }
    }
    ]
      , Ge = Ma({
        transclude: "element",
        priority: 1200,
        require: "^ngSwitch",
        multiElement: !0,
        link: function(a, c, d, e, f) {
            e.cases["!" + d.ngSwitchWhen] = e.cases["!" + d.ngSwitchWhen] || [];
            e.cases["!" + d.ngSwitchWhen].push({
                transclude: f,
                element: c
            })
        }
    })
      , He = Ma({
        transclude: "element",
        priority: 1200,
        require: "^ngSwitch",
        multiElement: !0,
        link: function(a, c, d, e, f) {
            e.cases["?"] = e.cases["?"] || [];
            e.cases["?"].push({
                transclude: f,
                element: c
            })
        }
    })
      , Je = Ma({
        restrict: "EAC",
        link: function(a, c, d, e, f) {
            if (!f)
                throw G("ngTransclude")("orphan", ua(c));
            f(function(a) {
                c.empty();
                c.append(a)
            })
        }
    })
      , je = ["$templateCache", function(a) {
        return {
            restrict: "E",
            terminal: !0,
            compile: function(c, d) {
                "text/ng-template" == d.type && a.put(d.id, c[0].text)
            }
        }
    }
    ]
      , Bg = {
        $setViewValue: v,
        $render: v
    }
      , Cg = ["$element", "$scope", "$attrs", function(a, c, d) {
        var e = this
          , f = new Ua;
        e.ngModelCtrl = Bg;
        e.unknownOption = z(W.createElement("option"));
        e.renderUnknownOption = function(c) {
            c = "? " + Ga(c) + " ?";
            e.unknownOption.val(c);
            a.prepend(e.unknownOption);
            a.val(c)
        }
        ;
        c.$on("$destroy", function() {
            e.renderUnknownOption = v
        });
        e.removeUnknownOption = function() {
            e.unknownOption.parent() && e.unknownOption.remove()
        }
        ;
        e.readValue = function() {
            e.removeUnknownOption();
            return a.val()
        }
        ;
        e.writeValue = function(c) {
            e.hasOption(c) ? (e.removeUnknownOption(),
            a.val(c),
            "" === c && e.emptyOption.prop("selected", !0)) : null == c && e.emptyOption ? (e.removeUnknownOption(),
            a.val("")) : e.renderUnknownOption(c)
        }
        ;
        e.addOption = function(a, c) {
            Ta(a, '"option value"');
            "" === a && (e.emptyOption = c);
            var d = f.get(a) || 0;
            f.put(a, d + 1)
        }
        ;
        e.removeOption = function(a) {
            var c = f.get(a);
            c && (1 === c ? (f.remove(a),
            "" === a && (e.emptyOption = u)) : f.put(a, c - 1))
        }
        ;
        e.hasOption = function(a) {
            return !!f.get(a)
        }
    }
    ]
      , ke = function() {
        return {
            restrict: "E",
            require: ["select", "?ngModel"],
            controller: Cg,
            link: function(a, c, d, e) {
                var f = e[1];
                if (f) {
                    var g = e[0];
                    g.ngModelCtrl = f;
                    f.$render = function() {
                        g.writeValue(f.$viewValue)
                    }
                    ;
                    c.on("change", function() {
                        a.$apply(function() {
                            f.$setViewValue(g.readValue())
                        })
                    });
                    if (d.multiple) {
                        g.readValue = function() {
                            var a = [];
                            n(c.find("option"), function(c) {
                                c.selected && a.push(c.value)
                            });
                            return a
                        }
                        ;
                        g.writeValue = function(a) {
                            var d = new Ua(a);
                            n(c.find("option"), function(a) {
                                a.selected = x(d.get(a.value))
                            })
                        }
                        ;
                        var h, l = NaN;
                        a.$watch(function() {
                            l !== f.$viewValue || ka(h, f.$viewValue) || (h = ia(f.$viewValue),
                            f.$render());
                            l = f.$viewValue
                        });
                        f.$isEmpty = function(a) {
                            return !a || 0 === a.length
                        }
                    }
                }
            }
        }
    }
      , me = ["$interpolate", function(a) {
        function c(a) {
            a[0].hasAttribute("selected") && (a[0].selected = !0)
        }
        return {
            restrict: "E",
            priority: 100,
            compile: function(d, e) {
                if (y(e.value)) {
                    var f = a(d.text(), !0);
                    f || e.$set("value", d.text())
                }
                return function(a, d, e) {
                    var k = d.parent()
                      , m = k.data("$selectController") || k.parent().data("$selectController");
                    m && m.ngModelCtrl && (f ? a.$watch(f, function(a, f) {
                        e.$set("value", a);
                        f !== a && m.removeOption(f);
                        m.addOption(a, d);
                        m.ngModelCtrl.$render();
                        c(d)
                    }) : (m.addOption(e.value, d),
                    m.ngModelCtrl.$render(),
                    c(d)),
                    d.on("$destroy", function() {
                        m.removeOption(e.value);
                        m.ngModelCtrl.$render()
                    }))
                }
            }
        }
    }
    ]
      , le = qa({
        restrict: "E",
        terminal: !1
    })
      , Fc = function() {
        return {
            restrict: "A",
            require: "?ngModel",
            link: function(a, c, d, e) {
                e && (d.required = !0,
                e.$validators.required = function(a, c) {
                    return !d.required || !e.$isEmpty(c)
                }
                ,
                d.$observe("required", function() {
                    e.$validate()
                }))
            }
        }
    }
      , Ec = function() {
        return {
            restrict: "A",
            require: "?ngModel",
            link: function(a, c, d, e) {
                if (e) {
                    var f, g = d.ngPattern || d.pattern;
                    d.$observe("pattern", function(a) {
                        H(a) && 0 < a.length && (a = new RegExp("^" + a + "$"));
                        if (a && !a.test)
                            throw G("ngPattern")("noregexp", g, a, ua(c));
                        f = a || u;
                        e.$validate()
                    });
                    e.$validators.pattern = function(a, c) {
                        return e.$isEmpty(c) || y(f) || f.test(c)
                    }
                }
            }
        }
    }
      , Hc = function() {
        return {
            restrict: "A",
            require: "?ngModel",
            link: function(a, c, d, e) {
                if (e) {
                    var f = -1;
                    d.$observe("maxlength", function(a) {
                        a = Y(a);
                        f = isNaN(a) ? -1 : a;
                        e.$validate()
                    });
                    e.$validators.maxlength = function(a, c) {
                        return 0 > f || e.$isEmpty(c) || c.length <= f
                    }
                }
            }
        }
    }
      , Gc = function() {
        return {
            restrict: "A",
            require: "?ngModel",
            link: function(a, c, d, e) {
                if (e) {
                    var f = 0;
                    d.$observe("minlength", function(a) {
                        f = Y(a) || 0;
                        e.$validate()
                    });
                    e.$validators.minlength = function(a, c) {
                        return e.$isEmpty(c) || c.length >= f
                    }
                }
            }
        }
    };
    N.angular.bootstrap ? console.log("WARNING: Tried to load angular more than once.") : (ce(),
    ee(aa),
    aa.module("ngLocale", [], ["$provide", function(a) {
        function c(a) {
            a += "";
            var c = a.indexOf(".");
            return -1 == c ? 0 : a.length - c - 1
        }
        a.value("$locale", {
            DATETIME_FORMATS: {
                AMPMS: ["AM", "PM"],
                DAY: "Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),
                ERANAMES: ["Before Christ", "Anno Domini"],
                ERAS: ["BC", "AD"],
                FIRSTDAYOFWEEK: 6,
                MONTH: "January February March April May June July August September October November December".split(" "),
                SHORTDAY: "Sun Mon Tue Wed Thu Fri Sat".split(" "),
                SHORTMONTH: "Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),
                WEEKENDRANGE: [5, 6],
                fullDate: "EEEE, MMMM d, y",
                longDate: "MMMM d, y",
                medium: "MMM d, y h:mm:ss a",
                mediumDate: "MMM d, y",
                mediumTime: "h:mm:ss a",
                "short": "M/d/yy h:mm a",
                shortDate: "M/d/yy",
                shortTime: "h:mm a"
            },
            NUMBER_FORMATS: {
                CURRENCY_SYM: "$",
                DECIMAL_SEP: ".",
                GROUP_SEP: ",",
                PATTERNS: [{
                    gSize: 3,
                    lgSize: 3,
                    maxFrac: 3,
                    minFrac: 0,
                    minInt: 1,
                    negPre: "-",
                    negSuf: "",
                    posPre: "",
                    posSuf: ""
                }, {
                    gSize: 3,
                    lgSize: 3,
                    maxFrac: 2,
                    minFrac: 2,
                    minInt: 1,
                    negPre: "-\u00a4",
                    negSuf: "",
                    posPre: "\u00a4",
                    posSuf: ""
                }]
            },
            id: "en-us",
            pluralCat: function(a, e) {
                var f = a | 0
                  , g = e;
                u === g && (g = Math.min(c(a), 3));
                Math.pow(10, g);
                return 1 == f && 0 == g ? "one" : "other"
            }
        })
    }
    ]),
    z(W).ready(function() {
        Zd(W, yc)
    }))
}
)(window, document);
!window.angular.$$csp().noInlineStyle && window.angular.element(document.head).prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>');
/**
 * State-based routing for AngularJS
 * @version v0.2.15
 * @link http://angular-ui.github.com/
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
"undefined" != typeof module && "undefined" != typeof exports && module.exports === exports && (module.exports = "ui.router"),
function(a, b, c) {
    "use strict";
    function d(a, b) {
        return N(new (N(function() {}, {
            prototype: a
        })), b)
    }
    function e(a) {
        return M(arguments, function(b) {
            b !== a && M(b, function(b, c) {
                a.hasOwnProperty(c) || (a[c] = b)
            })
        }),
        a
    }
    function f(a, b) {
        var c = [];
        for (var d in a.path) {
            if (a.path[d] !== b.path[d])
                break;
            c.push(a.path[d])
        }
        return c
    }
    function g(a) {
        if (Object.keys)
            return Object.keys(a);
        var b = [];
        return M(a, function(a, c) {
            b.push(c)
        }),
        b
    }
    function h(a, b) {
        if (Array.prototype.indexOf)
            return a.indexOf(b, Number(arguments[2]) || 0);
        var c = a.length >>> 0
          , d = Number(arguments[2]) || 0;
        for (d = 0 > d ? Math.ceil(d) : Math.floor(d),
        0 > d && (d += c); c > d; d++)
            if (d in a && a[d] === b)
                return d;
        return -1
    }
    function i(a, b, c, d) {
        var e, i = f(c, d), j = {}, k = [];
        for (var l in i)
            if (i[l].params && (e = g(i[l].params),
            e.length))
                for (var m in e)
                    h(k, e[m]) >= 0 || (k.push(e[m]),
                    j[e[m]] = a[e[m]]);
        return N({}, j, b)
    }
    function j(a, b, c) {
        if (!c) {
            c = [];
            for (var d in a)
                c.push(d)
        }
        for (var e = 0; e < c.length; e++) {
            var f = c[e];
            if (a[f] != b[f])
                return !1
        }
        return !0
    }
    function k(a, b) {
        var c = {};
        return M(a, function(a) {
            c[a] = b[a]
        }),
        c
    }
    function l(a) {
        var b = {}
          , c = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));
        return M(c, function(c) {
            c in a && (b[c] = a[c])
        }),
        b
    }
    function m(a) {
        var b = {}
          , c = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));
        for (var d in a)
            -1 == h(c, d) && (b[d] = a[d]);
        return b
    }
    function n(a, b) {
        var c = L(a)
          , d = c ? [] : {};
        return M(a, function(a, e) {
            b(a, e) && (d[c ? d.length : e] = a)
        }),
        d
    }
    function o(a, b) {
        var c = L(a) ? [] : {};
        return M(a, function(a, d) {
            c[d] = b(a, d)
        }),
        c
    }
    function p(a, b) {
        var d = 1
          , f = 2
          , i = {}
          , j = []
          , k = i
          , l = N(a.when(i), {
            $$promises: i,
            $$values: i
        });
        this.study = function(i) {
            function n(a, c) {
                if (s[c] !== f) {
                    if (r.push(c),
                    s[c] === d)
                        throw r.splice(0, h(r, c)),
                        new Error("Cyclic dependency: " + r.join(" -> "));
                    if (s[c] = d,
                    J(a))
                        q.push(c, [function() {
                            return b.get(a)
                        }
                        ], j);
                    else {
                        var e = b.annotate(a);
                        M(e, function(a) {
                            a !== c && i.hasOwnProperty(a) && n(i[a], a)
                        }),
                        q.push(c, a, e)
                    }
                    r.pop(),
                    s[c] = f
                }
            }
            function o(a) {
                return K(a) && a.then && a.$$promises
            }
            if (!K(i))
                throw new Error("'invocables' must be an object");
            var p = g(i || {})
              , q = []
              , r = []
              , s = {};
            return M(i, n),
            i = r = s = null,
            function(d, f, g) {
                function h() {
                    --u || (v || e(t, f.$$values),
                    r.$$values = t,
                    r.$$promises = r.$$promises || !0,
                    delete r.$$inheritedValues,
                    n.resolve(t))
                }
                function i(a) {
                    r.$$failure = a,
                    n.reject(a)
                }
                function j(c, e, f) {
                    function j(a) {
                        l.reject(a),
                        i(a)
                    }
                    function k() {
                        if (!H(r.$$failure))
                            try {
                                l.resolve(b.invoke(e, g, t)),
                                l.promise.then(function(a) {
                                    t[c] = a,
                                    h()
                                }, j)
                            } catch (a) {
                                j(a)
                            }
                    }
                    var l = a.defer()
                      , m = 0;
                    M(f, function(a) {
                        s.hasOwnProperty(a) && !d.hasOwnProperty(a) && (m++,
                        s[a].then(function(b) {
                            t[a] = b,
                            --m || k()
                        }, j))
                    }),
                    m || k(),
                    s[c] = l.promise
                }
                if (o(d) && g === c && (g = f,
                f = d,
                d = null),
                d) {
                    if (!K(d))
                        throw new Error("'locals' must be an object")
                } else
                    d = k;
                if (f) {
                    if (!o(f))
                        throw new Error("'parent' must be a promise returned by $resolve.resolve()")
                } else
                    f = l;
                var n = a.defer()
                  , r = n.promise
                  , s = r.$$promises = {}
                  , t = N({}, d)
                  , u = 1 + q.length / 3
                  , v = !1;
                if (H(f.$$failure))
                    return i(f.$$failure),
                    r;
                f.$$inheritedValues && e(t, m(f.$$inheritedValues, p)),
                N(s, f.$$promises),
                f.$$values ? (v = e(t, m(f.$$values, p)),
                r.$$inheritedValues = m(f.$$values, p),
                h()) : (f.$$inheritedValues && (r.$$inheritedValues = m(f.$$inheritedValues, p)),
                f.then(h, i));
                for (var w = 0, x = q.length; x > w; w += 3)
                    d.hasOwnProperty(q[w]) ? h() : j(q[w], q[w + 1], q[w + 2]);
                return r
            }
        }
        ,
        this.resolve = function(a, b, c, d) {
            return this.study(a)(b, c, d)
        }
    }
    function q(a, b, c) {
        this.fromConfig = function(a, b, c) {
            return H(a.template) ? this.fromString(a.template, b) : H(a.templateUrl) ? this.fromUrl(a.templateUrl, b) : H(a.templateProvider) ? this.fromProvider(a.templateProvider, b, c) : null
        }
        ,
        this.fromString = function(a, b) {
            return I(a) ? a(b) : a
        }
        ,
        this.fromUrl = function(c, d) {
            return I(c) && (c = c(d)),
            null == c ? null : a.get(c, {
                cache: b,
                headers: {
                    Accept: "text/html"
                }
            }).then(function(a) {
                return a.data
            })
        }
        ,
        this.fromProvider = function(a, b, d) {
            return c.invoke(a, null, d || {
                params: b
            })
        }
    }
    function r(a, b, e) {
        function f(b, c, d, e) {
            if (q.push(b),
            o[b])
                return o[b];
            if (!/^\w+(-+\w+)*(?:\[\])?$/.test(b))
                throw new Error("Invalid parameter name '" + b + "' in pattern '" + a + "'");
            if (p[b])
                throw new Error("Duplicate parameter name '" + b + "' in pattern '" + a + "'");
            return p[b] = new P.Param(b,c,d,e),
            p[b]
        }
        function g(a, b, c, d) {
            var e = ["", ""]
              , f = a.replace(/[\\\[\]\^$*+?.()|{}]/g, "\\$&");
            if (!b)
                return f;
            switch (c) {
            case !1:
                e = ["(", ")" + (d ? "?" : "")];
                break;
            case !0:
                e = ["?(", ")?"];
                break;
            default:
                e = ["(" + c + "|", ")?"]
            }
            return f + e[0] + b + e[1]
        }
        function h(e, f) {
            var g, h, i, j, k;
            return g = e[2] || e[3],
            k = b.params[g],
            i = a.substring(m, e.index),
            h = f ? e[4] : e[4] || ("*" == e[1] ? ".*" : null),
            j = P.type(h || "string") || d(P.type("string"), {
                pattern: new RegExp(h,b.caseInsensitive ? "i" : c)
            }),
            {
                id: g,
                regexp: h,
                segment: i,
                type: j,
                cfg: k
            }
        }
        b = N({
            params: {}
        }, K(b) ? b : {});
        var i, j = /([:*])([\w\[\]]+)|\{([\w\[\]]+)(?:\:((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g, k = /([:]?)([\w\[\]-]+)|\{([\w\[\]-]+)(?:\:((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g, l = "^", m = 0, n = this.segments = [], o = e ? e.params : {}, p = this.params = e ? e.params.$$new() : new P.ParamSet, q = [];
        this.source = a;
        for (var r, s, t; (i = j.exec(a)) && (r = h(i, !1),
        !(r.segment.indexOf("?") >= 0)); )
            s = f(r.id, r.type, r.cfg, "path"),
            l += g(r.segment, s.type.pattern.source, s.squash, s.isOptional),
            n.push(r.segment),
            m = j.lastIndex;
        t = a.substring(m);
        var u = t.indexOf("?");
        if (u >= 0) {
            var v = this.sourceSearch = t.substring(u);
            if (t = t.substring(0, u),
            this.sourcePath = a.substring(0, m + u),
            v.length > 0)
                for (m = 0; i = k.exec(v); )
                    r = h(i, !0),
                    s = f(r.id, r.type, r.cfg, "search"),
                    m = j.lastIndex
        } else
            this.sourcePath = a,
            this.sourceSearch = "";
        l += g(t) + (b.strict === !1 ? "/?" : "") + "$",
        n.push(t),
        this.regexp = new RegExp(l,b.caseInsensitive ? "i" : c),
        this.prefix = n[0],
        this.$$paramNames = q
    }
    function s(a) {
        N(this, a)
    }
    function t() {
        function a(a) {
            return null != a ? a.toString().replace(/\//g, "%2F") : a
        }
        function e(a) {
            return null != a ? a.toString().replace(/%2F/g, "/") : a
        }
        function f() {
            return {
                strict: p,
                caseInsensitive: m
            }
        }
        function i(a) {
            return I(a) || L(a) && I(a[a.length - 1])
        }
        function j() {
            for (; w.length; ) {
                var a = w.shift();
                if (a.pattern)
                    throw new Error("You cannot override a type's .pattern at runtime.");
                b.extend(u[a.name], l.invoke(a.def))
            }
        }
        function k(a) {
            N(this, a || {})
        }
        P = this;
        var l, m = !1, p = !0, q = !1, u = {}, v = !0, w = [], x = {
            string: {
                encode: a,
                decode: e,
                is: function(a) {
                    return null == a || !H(a) || "string" == typeof a
                },
                pattern: /[^/]*/
            },
            "int": {
                encode: a,
                decode: function(a) {
                    return parseInt(a, 10)
                },
                is: function(a) {
                    return H(a) && this.decode(a.toString()) === a
                },
                pattern: /\d+/
            },
            bool: {
                encode: function(a) {
                    return a ? 1 : 0
                },
                decode: function(a) {
                    return 0 !== parseInt(a, 10)
                },
                is: function(a) {
                    return a === !0 || a === !1
                },
                pattern: /0|1/
            },
            date: {
                encode: function(a) {
                    return this.is(a) ? [a.getFullYear(), ("0" + (a.getMonth() + 1)).slice(-2), ("0" + a.getDate()).slice(-2)].join("-") : c
                },
                decode: function(a) {
                    if (this.is(a))
                        return a;
                    var b = this.capture.exec(a);
                    return b ? new Date(b[1],b[2] - 1,b[3]) : c
                },
                is: function(a) {
                    return a instanceof Date && !isNaN(a.valueOf())
                },
                equals: function(a, b) {
                    return this.is(a) && this.is(b) && a.toISOString() === b.toISOString()
                },
                pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,
                capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/
            },
            json: {
                encode: b.toJson,
                decode: b.fromJson,
                is: b.isObject,
                equals: b.equals,
                pattern: /[^/]*/
            },
            any: {
                encode: b.identity,
                decode: b.identity,
                equals: b.equals,
                pattern: /.*/
            }
        };
        t.$$getDefaultValue = function(a) {
            if (!i(a.value))
                return a.value;
            if (!l)
                throw new Error("Injectable functions cannot be called at configuration time");
            return l.invoke(a.value)
        }
        ,
        this.caseInsensitive = function(a) {
            return H(a) && (m = a),
            m
        }
        ,
        this.strictMode = function(a) {
            return H(a) && (p = a),
            p
        }
        ,
        this.defaultSquashPolicy = function(a) {
            if (!H(a))
                return q;
            if (a !== !0 && a !== !1 && !J(a))
                throw new Error("Invalid squash policy: " + a + ". Valid policies: false, true, arbitrary-string");
            return q = a,
            a
        }
        ,
        this.compile = function(a, b) {
            return new r(a,N(f(), b))
        }
        ,
        this.isMatcher = function(a) {
            if (!K(a))
                return !1;
            var b = !0;
            return M(r.prototype, function(c, d) {
                I(c) && (b = b && H(a[d]) && I(a[d]))
            }),
            b
        }
        ,
        this.type = function(a, b, c) {
            if (!H(b))
                return u[a];
            if (u.hasOwnProperty(a))
                throw new Error("A type named '" + a + "' has already been defined.");
            return u[a] = new s(N({
                name: a
            }, b)),
            c && (w.push({
                name: a,
                def: c
            }),
            v || j()),
            this
        }
        ,
        M(x, function(a, b) {
            u[b] = new s(N({
                name: b
            }, a))
        }),
        u = d(u, {}),
        this.$get = ["$injector", function(a) {
            return l = a,
            v = !1,
            j(),
            M(x, function(a, b) {
                u[b] || (u[b] = new s(a))
            }),
            this
        }
        ],
        this.Param = function(a, b, d, e) {
            function f(a) {
                var b = K(a) ? g(a) : []
                  , c = -1 === h(b, "value") && -1 === h(b, "type") && -1 === h(b, "squash") && -1 === h(b, "array");
                return c && (a = {
                    value: a
                }),
                a.$$fn = i(a.value) ? a.value : function() {
                    return a.value
                }
                ,
                a
            }
            function j(b, c, d) {
                if (b.type && c)
                    throw new Error("Param '" + a + "' has two type configurations.");
                return c ? c : b.type ? b.type instanceof s ? b.type : new s(b.type) : "config" === d ? u.any : u.string
            }
            function k() {
                var b = {
                    array: "search" === e ? "auto" : !1
                }
                  , c = a.match(/\[\]$/) ? {
                    array: !0
                } : {};
                return N(b, c, d).array
            }
            function m(a, b) {
                var c = a.squash;
                if (!b || c === !1)
                    return !1;
                if (!H(c) || null == c)
                    return q;
                if (c === !0 || J(c))
                    return c;
                throw new Error("Invalid squash policy: '" + c + "'. Valid policies: false, true, or arbitrary string")
            }
            function p(a, b, d, e) {
                var f, g, i = [{
                    from: "",
                    to: d || b ? c : ""
                }, {
                    from: null,
                    to: d || b ? c : ""
                }];
                return f = L(a.replace) ? a.replace : [],
                J(e) && f.push({
                    from: e,
                    to: c
                }),
                g = o(f, function(a) {
                    return a.from
                }),
                n(i, function(a) {
                    return -1 === h(g, a.from)
                }).concat(f)
            }
            function r() {
                if (!l)
                    throw new Error("Injectable functions cannot be called at configuration time");
                var a = l.invoke(d.$$fn);
                if (null !== a && a !== c && !w.type.is(a))
                    throw new Error("Default value (" + a + ") for parameter '" + w.id + "' is not an instance of Type (" + w.type.name + ")");
                return a
            }
            function t(a) {
                function b(a) {
                    return function(b) {
                        return b.from === a
                    }
                }
                function c(a) {
                    var c = o(n(w.replace, b(a)), function(a) {
                        return a.to
                    });
                    return c.length ? c[0] : a
                }
                return a = c(a),
                H(a) ? w.type.$normalize(a) : r()
            }
            function v() {
                return "{Param:" + a + " " + b + " squash: '" + z + "' optional: " + y + "}"
            }
            var w = this;
            d = f(d),
            b = j(d, b, e);
            var x = k();
            b = x ? b.$asArray(x, "search" === e) : b,
            "string" !== b.name || x || "path" !== e || d.value !== c || (d.value = "");
            var y = d.value !== c
              , z = m(d, y)
              , A = p(d, x, y, z);
            N(this, {
                id: a,
                type: b,
                location: e,
                array: x,
                squash: z,
                replace: A,
                isOptional: y,
                value: t,
                dynamic: c,
                config: d,
                toString: v
            })
        }
        ,
        k.prototype = {
            $$new: function() {
                return d(this, N(new k, {
                    $$parent: this
                }))
            },
            $$keys: function() {
                for (var a = [], b = [], c = this, d = g(k.prototype); c; )
                    b.push(c),
                    c = c.$$parent;
                return b.reverse(),
                M(b, function(b) {
                    M(g(b), function(b) {
                        -1 === h(a, b) && -1 === h(d, b) && a.push(b)
                    })
                }),
                a
            },
            $$values: function(a) {
                var b = {}
                  , c = this;
                return M(c.$$keys(), function(d) {
                    b[d] = c[d].value(a && a[d])
                }),
                b
            },
            $$equals: function(a, b) {
                var c = !0
                  , d = this;
                return M(d.$$keys(), function(e) {
                    var f = a && a[e]
                      , g = b && b[e];
                    d[e].type.equals(f, g) || (c = !1)
                }),
                c
            },
            $$validates: function(a) {
                var d, e, f, g, h, i = this.$$keys();
                for (d = 0; d < i.length && (e = this[i[d]],
                f = a[i[d]],
                f !== c && null !== f || !e.isOptional); d++) {
                    if (g = e.type.$normalize(f),
                    !e.type.is(g))
                        return !1;
                    if (h = e.type.encode(g),
                    b.isString(h) && !e.type.pattern.exec(h))
                        return !1
                }
                return !0
            },
            $$parent: c
        },
        this.ParamSet = k
    }
    function u(a, d) {
        function e(a) {
            var b = /^\^((?:\\[^a-zA-Z0-9]|[^\\\[\]\^$*+?.()|{}]+)*)/.exec(a.source);
            return null != b ? b[1].replace(/\\(.)/g, "$1") : ""
        }
        function f(a, b) {
            return a.replace(/\$(\$|\d{1,2})/, function(a, c) {
                return b["$" === c ? 0 : Number(c)]
            })
        }
        function g(a, b, c) {
            if (!c)
                return !1;
            var d = a.invoke(b, b, {
                $match: c
            });
            return H(d) ? d : !0
        }
        function h(d, e, f, g) {
            function h(a, b, c) {
                return "/" === p ? a : b ? p.slice(0, -1) + a : c ? p.slice(1) + a : a
            }
            function m(a) {
                function b(a) {
                    var b = a(f, d);
                    return b ? (J(b) && d.replace().url(b),
                    !0) : !1
                }
                if (!a || !a.defaultPrevented) {
                    o && d.url() === o;
                    o = c;
                    var e, g = j.length;
                    for (e = 0; g > e; e++)
                        if (b(j[e]))
                            return;
                    k && b(k)
                }
            }
            function n() {
                return i = i || e.$on("$locationChangeSuccess", m)
            }
            var o, p = g.baseHref(), q = d.url();
            return l || n(),
            {
                sync: function() {
                    m()
                },
                listen: function() {
                    return n()
                },
                update: function(a) {
                    return a ? void (q = d.url()) : void (d.url() !== q && (d.url(q),
                    d.replace()))
                },
                push: function(a, b, e) {
                    var f = a.format(b || {});
                    null !== f && b && b["#"] && (f += "#" + b["#"]),
                    d.url(f),
                    o = e && e.$$avoidResync ? d.url() : c,
                    e && e.replace && d.replace()
                },
                href: function(c, e, f) {
                    if (!c.validates(e))
                        return null;
                    var g = a.html5Mode();
                    b.isObject(g) && (g = g.enabled);
                    var i = c.format(e);
                    if (f = f || {},
                    g || null === i || (i = "#" + a.hashPrefix() + i),
                    null !== i && e && e["#"] && (i += "#" + e["#"]),
                    i = h(i, g, f.absolute),
                    !f.absolute || !i)
                        return i;
                    var j = !g && i ? "/" : ""
                      , k = d.port();
                    return k = 80 === k || 443 === k ? "" : ":" + k,
                    [d.protocol(), "://", d.host(), k, j, i].join("")
                }
            }
        }
        var i, j = [], k = null, l = !1;
        this.rule = function(a) {
            if (!I(a))
                throw new Error("'rule' must be a function");
            return j.push(a),
            this
        }
        ,
        this.otherwise = function(a) {
            if (J(a)) {
                var b = a;
                a = function() {
                    return b
                }
            } else if (!I(a))
                throw new Error("'rule' must be a function");
            return k = a,
            this
        }
        ,
        this.when = function(a, b) {
            var c, h = J(b);
            if (J(a) && (a = d.compile(a)),
            !h && !I(b) && !L(b))
                throw new Error("invalid 'handler' in when()");
            var i = {
                matcher: function(a, b) {
                    return h && (c = d.compile(b),
                    b = ["$match", function(a) {
                        return c.format(a)
                    }
                    ]),
                    N(function(c, d) {
                        return g(c, b, a.exec(d.path(), d.search()))
                    }, {
                        prefix: J(a.prefix) ? a.prefix : ""
                    })
                },
                regex: function(a, b) {
                    if (a.global || a.sticky)
                        throw new Error("when() RegExp must not be global or sticky");
                    return h && (c = b,
                    b = ["$match", function(a) {
                        return f(c, a)
                    }
                    ]),
                    N(function(c, d) {
                        return g(c, b, a.exec(d.path()))
                    }, {
                        prefix: e(a)
                    })
                }
            }
              , j = {
                matcher: d.isMatcher(a),
                regex: a instanceof RegExp
            };
            for (var k in j)
                if (j[k])
                    return this.rule(i[k](a, b));
            throw new Error("invalid 'what' in when()")
        }
        ,
        this.deferIntercept = function(a) {
            a === c && (a = !0),
            l = a
        }
        ,
        this.$get = h,
        h.$inject = ["$location", "$rootScope", "$injector", "$browser"]
    }
    function v(a, e) {
        function f(a) {
            return 0 === a.indexOf(".") || 0 === a.indexOf("^")
        }
        function m(a, b) {
            if (!a)
                return c;
            var d = J(a)
              , e = d ? a : a.name
              , g = f(e);
            if (g) {
                if (!b)
                    throw new Error("No reference point given for path '" + e + "'");
                b = m(b);
                for (var h = e.split("."), i = 0, j = h.length, k = b; j > i; i++)
                    if ("" !== h[i] || 0 !== i) {
                        if ("^" !== h[i])
                            break;
                        if (!k.parent)
                            throw new Error("Path '" + e + "' not valid for state '" + b.name + "'");
                        k = k.parent
                    } else
                        k = b;
                h = h.slice(i).join("."),
                e = k.name + (k.name && h ? "." : "") + h
            }
            var l = z[e];
            return !l || !d && (d || l !== a && l.self !== a) ? c : l
        }
        function n(a, b) {
            A[a] || (A[a] = []),
            A[a].push(b)
        }
        function p(a) {
            for (var b = A[a] || []; b.length; )
                q(b.shift())
        }
        function q(b) {
            b = d(b, {
                self: b,
                resolve: b.resolve || {},
                toString: function() {
                    return this.name
                }
            });
            var c = b.name;
            if (!J(c) || c.indexOf("@") >= 0)
                throw new Error("State must have a valid name");
            if (z.hasOwnProperty(c))
                throw new Error("State '" + c + "'' is already defined");
            var e = -1 !== c.indexOf(".") ? c.substring(0, c.lastIndexOf(".")) : J(b.parent) ? b.parent : K(b.parent) && J(b.parent.name) ? b.parent.name : "";
            if (e && !z[e])
                return n(e, b.self);
            for (var f in C)
                I(C[f]) && (b[f] = C[f](b, C.$delegates[f]));
            return z[c] = b,
            !b[B] && b.url && a.when(b.url, ["$match", "$stateParams", function(a, c) {
                y.$current.navigable == b && j(a, c) || y.transitionTo(b, a, {
                    inherit: !0,
                    location: !1
                })
            }
            ]),
            p(c),
            b
        }
        function r(a) {
            return a.indexOf("*") > -1
        }
        function s(a) {
            for (var b = a.split("."), c = y.$current.name.split("."), d = 0, e = b.length; e > d; d++)
                "*" === b[d] && (c[d] = "*");
            return "**" === b[0] && (c = c.slice(h(c, b[1])),
            c.unshift("**")),
            "**" === b[b.length - 1] && (c.splice(h(c, b[b.length - 2]) + 1, Number.MAX_VALUE),
            c.push("**")),
            b.length != c.length ? !1 : c.join("") === b.join("")
        }
        function t(a, b) {
            return J(a) && !H(b) ? C[a] : I(b) && J(a) ? (C[a] && !C.$delegates[a] && (C.$delegates[a] = C[a]),
            C[a] = b,
            this) : this
        }
        function u(a, b) {
            return K(a) ? b = a : b.name = a,
            q(b),
            this
        }
        function v(a, e, f, h, l, n, p, q, t) {
            function u(b, c, d, f) {
                var g = a.$broadcast("$stateNotFound", b, c, d);
                if (g.defaultPrevented)
                    return p.update(),
                    D;
                if (!g.retry)
                    return null;
                if (f.$retry)
                    return p.update(),
                    E;
                var h = y.transition = e.when(g.retry);
                return h.then(function() {
                    return h !== y.transition ? A : (b.options.$retry = !0,
                    y.transitionTo(b.to, b.toParams, b.options))
                }, function() {
                    return D
                }),
                p.update(),
                h
            }
            function v(a, c, d, g, i, j) {
                function m() {
                    var c = [];
                    return M(a.views, function(d, e) {
                        var g = d.resolve && d.resolve !== a.resolve ? d.resolve : {};
                        g.$template = [function() {
                            return f.load(e, {
                                view: d,
                                locals: i.globals,
                                params: n,
                                notify: j.notify
                            }) || ""
                        }
                        ],
                        c.push(l.resolve(g, i.globals, i.resolve, a).then(function(c) {
                            if (I(d.controllerProvider) || L(d.controllerProvider)) {
                                var f = b.extend({}, g, i.globals);
                                c.$$controller = h.invoke(d.controllerProvider, null, f)
                            } else
                                c.$$controller = d.controller;
                            c.$$state = a,
                            c.$$controllerAs = d.controllerAs,
                            i[e] = c
                        }))
                    }),
                    e.all(c).then(function() {
                        return i.globals
                    })
                }
                var n = d ? c : k(a.params.$$keys(), c)
                  , o = {
                    $stateParams: n
                };
                i.resolve = l.resolve(a.resolve, o, i.resolve, a);
                var p = [i.resolve.then(function(a) {
                    i.globals = a
                })];
                return g && p.push(g),
                e.all(p).then(m).then(function(a) {
                    return i
                })
            }
            var A = e.reject(new Error("transition superseded"))
              , C = e.reject(new Error("transition prevented"))
              , D = e.reject(new Error("transition aborted"))
              , E = e.reject(new Error("transition failed"));
            return x.locals = {
                resolve: null,
                globals: {
                    $stateParams: {}
                }
            },
            y = {
                params: {},
                current: x.self,
                $current: x,
                transition: null
            },
            y.reload = function(a) {
                return y.transitionTo(y.current, n, {
                    reload: a || !0,
                    inherit: !1,
                    notify: !0
                })
            }
            ,
            y.go = function(a, b, c) {
                return y.transitionTo(a, b, N({
                    inherit: !0,
                    relative: y.$current
                }, c))
            }
            ,
            y.transitionTo = function(b, c, f) {
                c = c || {},
                f = N({
                    location: !0,
                    inherit: !1,
                    relative: null,
                    notify: !0,
                    reload: !1,
                    $retry: !1
                }, f || {});
                var g, j = y.$current, l = y.params, o = j.path, q = m(b, f.relative), r = c["#"];
                if (!H(q)) {
                    var s = {
                        to: b,
                        toParams: c,
                        options: f
                    }
                      , t = u(s, j.self, l, f);
                    if (t)
                        return t;
                    if (b = s.to,
                    c = s.toParams,
                    f = s.options,
                    q = m(b, f.relative),
                    !H(q)) {
                        if (!f.relative)
                            throw new Error("No such state '" + b + "'");
                        throw new Error("Could not resolve '" + b + "' from state '" + f.relative + "'")
                    }
                }
                if (q[B])
                    throw new Error("Cannot transition to abstract state '" + b + "'");
                if (f.inherit && (c = i(n, c || {}, y.$current, q)),
                !q.params.$$validates(c))
                    return E;
                c = q.params.$$values(c),
                b = q;
                var z = b.path
                  , D = 0
                  , F = z[D]
                  , G = x.locals
                  , I = [];
                if (f.reload) {
                    if (J(f.reload) || K(f.reload)) {
                        if (K(f.reload) && !f.reload.name)
                            throw new Error("Invalid reload state object");
                        var L = f.reload === !0 ? o[0] : m(f.reload);
                        if (f.reload && !L)
                            throw new Error("No such reload state '" + (J(f.reload) ? f.reload : f.reload.name) + "'");
                        for (; F && F === o[D] && F !== L; )
                            G = I[D] = F.locals,
                            D++,
                            F = z[D]
                    }
                } else
                    for (; F && F === o[D] && F.ownParams.$$equals(c, l); )
                        G = I[D] = F.locals,
                        D++,
                        F = z[D];
                if (w(b, c, j, l, G, f))
                    return r && (c["#"] = r),
                    y.params = c,
                    O(y.params, n),
                    f.location && b.navigable && b.navigable.url && (p.push(b.navigable.url, c, {
                        $$avoidResync: !0,
                        replace: "replace" === f.location
                    }),
                    p.update(!0)),
                    y.transition = null,
                    e.when(y.current);
                if (c = k(b.params.$$keys(), c || {}),
                f.notify && a.$broadcast("$stateChangeStart", b.self, c, j.self, l).defaultPrevented)
                    return a.$broadcast("$stateChangeCancel", b.self, c, j.self, l),
                    p.update(),
                    C;
                for (var M = e.when(G), P = D; P < z.length; P++,
                F = z[P])
                    G = I[P] = d(G),
                    M = v(F, c, F === b, M, G, f);
                var Q = y.transition = M.then(function() {
                    var d, e, g;
                    if (y.transition !== Q)
                        return A;
                    for (d = o.length - 1; d >= D; d--)
                        g = o[d],
                        g.self.onExit && h.invoke(g.self.onExit, g.self, g.locals.globals),
                        g.locals = null;
                    for (d = D; d < z.length; d++)
                        e = z[d],
                        e.locals = I[d],
                        e.self.onEnter && h.invoke(e.self.onEnter, e.self, e.locals.globals);
                    return r && (c["#"] = r),
                    y.transition !== Q ? A : (y.$current = b,
                    y.current = b.self,
                    y.params = c,
                    O(y.params, n),
                    y.transition = null,
                    f.location && b.navigable && p.push(b.navigable.url, b.navigable.locals.globals.$stateParams, {
                        $$avoidResync: !0,
                        replace: "replace" === f.location
                    }),
                    f.notify && a.$broadcast("$stateChangeSuccess", b.self, c, j.self, l),
                    p.update(!0),
                    y.current)
                }, function(d) {
                    return y.transition !== Q ? A : (y.transition = null,
                    g = a.$broadcast("$stateChangeError", b.self, c, j.self, l, d),
                    g.defaultPrevented || p.update(),
                    e.reject(d))
                });
                return Q
            }
            ,
            y.is = function(a, b, d) {
                d = N({
                    relative: y.$current
                }, d || {});
                var e = m(a, d.relative);
                return H(e) ? y.$current !== e ? !1 : b ? j(e.params.$$values(b), n) : !0 : c
            }
            ,
            y.includes = function(a, b, d) {
                if (d = N({
                    relative: y.$current
                }, d || {}),
                J(a) && r(a)) {
                    if (!s(a))
                        return !1;
                    a = y.$current.name
                }
                var e = m(a, d.relative);
                return H(e) ? H(y.$current.includes[e.name]) ? b ? j(e.params.$$values(b), n, g(b)) : !0 : !1 : c
            }
            ,
            y.href = function(a, b, d) {
                d = N({
                    lossy: !0,
                    inherit: !0,
                    absolute: !1,
                    relative: y.$current
                }, d || {});
                var e = m(a, d.relative);
                if (!H(e))
                    return null;
                d.inherit && (b = i(n, b || {}, y.$current, e));
                var f = e && d.lossy ? e.navigable : e;
                return f && f.url !== c && null !== f.url ? p.href(f.url, k(e.params.$$keys().concat("#"), b || {}), {
                    absolute: d.absolute
                }) : null
            }
            ,
            y.get = function(a, b) {
                if (0 === arguments.length)
                    return o(g(z), function(a) {
                        return z[a].self
                    });
                var c = m(a, b || y.$current);
                return c && c.self ? c.self : null
            }
            ,
            y
        }
        function w(a, b, c, d, e, f) {
            function g(a, b, c) {
                function d(b) {
                    return "search" != a.params[b].location
                }
                var e = a.params.$$keys().filter(d)
                  , f = l.apply({}, [a.params].concat(e))
                  , g = new P.ParamSet(f);
                return g.$$equals(b, c)
            }
            return !f.reload && a === c && (e === c.locals || a.self.reloadOnSearch === !1 && g(c, d, b)) ? !0 : void 0
        }
        var x, y, z = {}, A = {}, B = "abstract", C = {
            parent: function(a) {
                if (H(a.parent) && a.parent)
                    return m(a.parent);
                var b = /^(.+)\.[^.]+$/.exec(a.name);
                return b ? m(b[1]) : x
            },
            data: function(a) {
                return a.parent && a.parent.data && (a.data = a.self.data = N({}, a.parent.data, a.data)),
                a.data
            },
            url: function(a) {
                var b = a.url
                  , c = {
                    params: a.params || {}
                };
                if (J(b))
                    return "^" == b.charAt(0) ? e.compile(b.substring(1), c) : (a.parent.navigable || x).url.concat(b, c);
                if (!b || e.isMatcher(b))
                    return b;
                throw new Error("Invalid url '" + b + "' in state '" + a + "'")
            },
            navigable: function(a) {
                return a.url ? a : a.parent ? a.parent.navigable : null
            },
            ownParams: function(a) {
                var b = a.url && a.url.params || new P.ParamSet;
                return M(a.params || {}, function(a, c) {
                    b[c] || (b[c] = new P.Param(c,null,a,"config"))
                }),
                b
            },
            params: function(a) {
                return a.parent && a.parent.params ? N(a.parent.params.$$new(), a.ownParams) : new P.ParamSet
            },
            views: function(a) {
                var b = {};
                return M(H(a.views) ? a.views : {
                    "": a
                }, function(c, d) {
                    d.indexOf("@") < 0 && (d += "@" + a.parent.name),
                    b[d] = c
                }),
                b
            },
            path: function(a) {
                return a.parent ? a.parent.path.concat(a) : []
            },
            includes: function(a) {
                var b = a.parent ? N({}, a.parent.includes) : {};
                return b[a.name] = !0,
                b
            },
            $delegates: {}
        };
        x = q({
            name: "",
            url: "^",
            views: null,
            "abstract": !0
        }),
        x.navigable = null,
        this.decorator = t,
        this.state = u,
        this.$get = v,
        v.$inject = ["$rootScope", "$q", "$view", "$injector", "$resolve", "$stateParams", "$urlRouter", "$location", "$urlMatcherFactory"]
    }
    function w() {
        function a(a, b) {
            return {
                load: function(c, d) {
                    var e, f = {
                        template: null,
                        controller: null,
                        view: null,
                        locals: null,
                        notify: !0,
                        async: !0,
                        params: {}
                    };
                    return d = N(f, d),
                    d.view && (e = b.fromConfig(d.view, d.params, d.locals)),
                    e && d.notify && a.$broadcast("$viewContentLoading", d),
                    e
                }
            }
        }
        this.$get = a,
        a.$inject = ["$rootScope", "$templateFactory"]
    }
    function x() {
        var a = !1;
        this.useAnchorScroll = function() {
            a = !0
        }
        ,
        this.$get = ["$anchorScroll", "$timeout", function(b, c) {
            return a ? b : function(a) {
                return c(function() {
                    a[0].scrollIntoView()
                }, 0, !1)
            }
        }
        ]
    }
    function y(a, c, d, e) {
        function f() {
            return c.has ? function(a) {
                return c.has(a) ? c.get(a) : null
            }
            : function(a) {
                try {
                    return c.get(a)
                } catch (b) {
                    return null
                }
            }
        }
        function g(a, b) {
            var c = function() {
                return {
                    enter: function(a, b, c) {
                        b.after(a),
                        c()
                    },
                    leave: function(a, b) {
                        a.remove(),
                        b()
                    }
                }
            };
            if (j)
                return {
                    enter: function(a, b, c) {
                        var d = j.enter(a, null, b, c);
                        d && d.then && d.then(c)
                    },
                    leave: function(a, b) {
                        var c = j.leave(a, b);
                        c && c.then && c.then(b)
                    }
                };
            if (i) {
                var d = i && i(b, a);
                return {
                    enter: function(a, b, c) {
                        d.enter(a, null, b),
                        c()
                    },
                    leave: function(a, b) {
                        d.leave(a),
                        b()
                    }
                }
            }
            return c()
        }
        var h = f()
          , i = h("$animator")
          , j = h("$animate")
          , k = {
            restrict: "ECA",
            terminal: !0,
            priority: 400,
            transclude: "element",
            compile: function(c, f, h) {
                return function(c, f, i) {
                    function j() {
                        l && (l.remove(),
                        l = null),
                        n && (n.$destroy(),
                        n = null),
                        m && (r.leave(m, function() {
                            l = null
                        }),
                        l = m,
                        m = null)
                    }
                    function k(g) {
                        var k, l = A(c, i, f, e), s = l && a.$current && a.$current.locals[l];
                        if (g || s !== o) {
                            k = c.$new(),
                            o = a.$current.locals[l];
                            var t = h(k, function(a) {
                                r.enter(a, f, function() {
                                    n && n.$emit("$viewContentAnimationEnded"),
                                    (b.isDefined(q) && !q || c.$eval(q)) && d(a)
                                }),
                                j()
                            });
                            m = t,
                            n = k,
                            n.$emit("$viewContentLoaded"),
                            n.$eval(p)
                        }
                    }
                    var l, m, n, o, p = i.onload || "", q = i.autoscroll, r = g(i, c);
                    c.$on("$stateChangeSuccess", function() {
                        k(!1)
                    }),
                    c.$on("$viewContentLoading", function() {
                        k(!1)
                    }),
                    k(!0)
                }
            }
        };
        return k
    }
    function z(a, b, c, d) {
        return {
            restrict: "ECA",
            priority: -400,
            compile: function(e) {
                var f = e.html();
                return function(e, g, h) {
                    var i = c.$current
                      , j = A(e, h, g, d)
                      , k = i && i.locals[j];
                    if (k) {
                        g.data("$uiView", {
                            name: j,
                            state: k.$$state
                        }),
                        g.html(k.$template ? k.$template : f);
                        var l = a(g.contents());
                        if (k.$$controller) {
                            k.$scope = e,
                            k.$element = g;
                            var m = b(k.$$controller, k);
                            k.$$controllerAs && (e[k.$$controllerAs] = m),
                            g.data("$ngControllerController", m),
                            g.children().data("$ngControllerController", m)
                        }
                        l(e)
                    }
                }
            }
        }
    }
    function A(a, b, c, d) {
        var e = d(b.uiView || b.name || "")(a)
          , f = c.inheritedData("$uiView");
        return e.indexOf("@") >= 0 ? e : e + "@" + (f ? f.state.name : "")
    }
    function B(a, b) {
        var c, d = a.match(/^\s*({[^}]*})\s*$/);
        if (d && (a = b + "(" + d[1] + ")"),
        c = a.replace(/\n/g, " ").match(/^([^(]+?)\s*(\((.*)\))?$/),
        !c || 4 !== c.length)
            throw new Error("Invalid state ref '" + a + "'");
        return {
            state: c[1],
            paramExpr: c[3] || null
        }
    }
    function C(a) {
        var b = a.parent().inheritedData("$uiView");
        return b && b.state && b.state.name ? b.state : void 0
    }
    function D(a, c) {
        var d = ["location", "inherit", "reload", "absolute"];
        return {
            restrict: "A",
            require: ["?^uiSrefActive", "?^uiSrefActiveEq"],
            link: function(e, f, g, h) {
                var i = B(g.uiSref, a.current.name)
                  , j = null
                  , k = C(f) || a.$current
                  , l = "[object SVGAnimatedString]" === Object.prototype.toString.call(f.prop("href")) ? "xlink:href" : "href"
                  , m = null
                  , n = "A" === f.prop("tagName").toUpperCase()
                  , o = "FORM" === f[0].nodeName
                  , p = o ? "action" : l
                  , q = !0
                  , r = {
                    relative: k,
                    inherit: !0
                }
                  , s = e.$eval(g.uiSrefOpts) || {};
                b.forEach(d, function(a) {
                    a in s && (r[a] = s[a])
                });
                var t = function(c) {
                    if (c && (j = b.copy(c)),
                    q) {
                        m = a.href(i.state, j, r);
                        var d = h[1] || h[0];
                        return d && d.$$addStateInfo(i.state, j),
                        null === m ? (q = !1,
                        !1) : void g.$set(p, m)
                    }
                };
                i.paramExpr && (e.$watch(i.paramExpr, function(a, b) {
                    a !== j && t(a)
                }, !0),
                j = b.copy(e.$eval(i.paramExpr))),
                t(),
                o || f.bind("click", function(b) {
                    var d = b.which || b.button;
                    if (!(d > 1 || b.ctrlKey || b.metaKey || b.shiftKey || f.attr("target"))) {
                        var e = c(function() {
                            a.go(i.state, j, r)
                        });
                        b.preventDefault();
                        var g = n && !m ? 1 : 0;
                        b.preventDefault = function() {
                            g-- <= 0 && c.cancel(e)
                        }
                    }
                })
            }
        }
    }
    function E(a, b, c) {
        return {
            restrict: "A",
            controller: ["$scope", "$element", "$attrs", function(b, d, e) {
                function f() {
                    g() ? d.addClass(i) : d.removeClass(i)
                }
                function g() {
                    for (var a = 0; a < j.length; a++)
                        if (h(j[a].state, j[a].params))
                            return !0;
                    return !1
                }
                function h(b, c) {
                    return "undefined" != typeof e.uiSrefActiveEq ? a.is(b.name, c) : a.includes(b.name, c)
                }
                var i, j = [];
                i = c(e.uiSrefActiveEq || e.uiSrefActive || "", !1)(b),
                this.$$addStateInfo = function(b, c) {
                    var e = a.get(b, C(d));
                    j.push({
                        state: e || {
                            name: b
                        },
                        params: c
                    }),
                    f()
                }
                ,
                b.$on("$stateChangeSuccess", f)
            }
            ]
        }
    }
    function F(a) {
        var b = function(b) {
            return a.is(b)
        };
        return b.$stateful = !0,
        b
    }
    function G(a) {
        var b = function(b) {
            return a.includes(b)
        };
        return b.$stateful = !0,
        b
    }
    var H = b.isDefined
      , I = b.isFunction
      , J = b.isString
      , K = b.isObject
      , L = b.isArray
      , M = b.forEach
      , N = b.extend
      , O = b.copy;
    b.module("ui.router.util", ["ng"]),
    b.module("ui.router.router", ["ui.router.util"]),
    b.module("ui.router.state", ["ui.router.router", "ui.router.util"]),
    b.module("ui.router", ["ui.router.state"]),
    b.module("ui.router.compat", ["ui.router"]),
    p.$inject = ["$q", "$injector"],
    b.module("ui.router.util").service("$resolve", p),
    q.$inject = ["$http", "$templateCache", "$injector"],
    b.module("ui.router.util").service("$templateFactory", q);
    var P;
    r.prototype.concat = function(a, b) {
        var c = {
            caseInsensitive: P.caseInsensitive(),
            strict: P.strictMode(),
            squash: P.defaultSquashPolicy()
        };
        return new r(this.sourcePath + a + this.sourceSearch,N(c, b),this)
    }
    ,
    r.prototype.toString = function() {
        return this.source
    }
    ,
    r.prototype.exec = function(a, b) {
        function c(a) {
            function b(a) {
                return a.split("").reverse().join("")
            }
            function c(a) {
                return a.replace(/\\-/g, "-")
            }
            var d = b(a).split(/-(?!\\)/)
              , e = o(d, b);
            return o(e, c).reverse()
        }
        var d = this.regexp.exec(a);
        if (!d)
            return null;
        b = b || {};
        var e, f, g, h = this.parameters(), i = h.length, j = this.segments.length - 1, k = {};
        if (j !== d.length - 1)
            throw new Error("Unbalanced capture group in route '" + this.source + "'");
        for (e = 0; j > e; e++) {
            g = h[e];
            var l = this.params[g]
              , m = d[e + 1];
            for (f = 0; f < l.replace; f++)
                l.replace[f].from === m && (m = l.replace[f].to);
            m && l.array === !0 && (m = c(m)),
            k[g] = l.value(m)
        }
        for (; i > e; e++)
            g = h[e],
            k[g] = this.params[g].value(b[g]);
        return k
    }
    ,
    r.prototype.parameters = function(a) {
        return H(a) ? this.params[a] || null : this.$$paramNames
    }
    ,
    r.prototype.validates = function(a) {
        return this.params.$$validates(a)
    }
    ,
    r.prototype.format = function(a) {
        function b(a) {
            return encodeURIComponent(a).replace(/-/g, function(a) {
                return "%5C%" + a.charCodeAt(0).toString(16).toUpperCase()
            })
        }
        a = a || {};
        var c = this.segments
          , d = this.parameters()
          , e = this.params;
        if (!this.validates(a))
            return null;
        var f, g = !1, h = c.length - 1, i = d.length, j = c[0];
        for (f = 0; i > f; f++) {
            var k = h > f
              , l = d[f]
              , m = e[l]
              , n = m.value(a[l])
              , p = m.isOptional && m.type.equals(m.value(), n)
              , q = p ? m.squash : !1
              , r = m.type.encode(n);
            if (k) {
                var s = c[f + 1];
                if (q === !1)
                    null != r && (j += L(r) ? o(r, b).join("-") : encodeURIComponent(r)),
                    j += s;
                else if (q === !0) {
                    var t = j.match(/\/$/) ? /\/?(.*)/ : /(.*)/;
                    j += s.match(t)[1]
                } else
                    J(q) && (j += q + s)
            } else {
                if (null == r || p && q !== !1)
                    continue;
                L(r) || (r = [r]),
                r = o(r, encodeURIComponent).join("&" + l + "="),
                j += (g ? "&" : "?") + (l + "=" + r),
                g = !0
            }
        }
        return j
    }
    ,
    s.prototype.is = function(a, b) {
        return !0
    }
    ,
    s.prototype.encode = function(a, b) {
        return a
    }
    ,
    s.prototype.decode = function(a, b) {
        return a
    }
    ,
    s.prototype.equals = function(a, b) {
        return a == b
    }
    ,
    s.prototype.$subPattern = function() {
        var a = this.pattern.toString();
        return a.substr(1, a.length - 2)
    }
    ,
    s.prototype.pattern = /.*/,
    s.prototype.toString = function() {
        return "{Type:" + this.name + "}"
    }
    ,
    s.prototype.$normalize = function(a) {
        return this.is(a) ? a : this.decode(a)
    }
    ,
    s.prototype.$asArray = function(a, b) {
        function d(a, b) {
            function d(a, b) {
                return function() {
                    return a[b].apply(a, arguments)
                }
            }
            function e(a) {
                return L(a) ? a : H(a) ? [a] : []
            }
            function f(a) {
                switch (a.length) {
                case 0:
                    return c;
                case 1:
                    return "auto" === b ? a[0] : a;
                default:
                    return a
                }
            }
            function g(a) {
                return !a
            }
            function h(a, b) {
                return function(c) {
                    c = e(c);
                    var d = o(c, a);
                    return b === !0 ? 0 === n(d, g).length : f(d)
                }
            }
            function i(a) {
                return function(b, c) {
                    var d = e(b)
                      , f = e(c);
                    if (d.length !== f.length)
                        return !1;
                    for (var g = 0; g < d.length; g++)
                        if (!a(d[g], f[g]))
                            return !1;
                    return !0
                }
            }
            this.encode = h(d(a, "encode")),
            this.decode = h(d(a, "decode")),
            this.is = h(d(a, "is"), !0),
            this.equals = i(d(a, "equals")),
            this.pattern = a.pattern,
            this.$normalize = h(d(a, "$normalize")),
            this.name = a.name,
            this.$arrayMode = b
        }
        if (!a)
            return this;
        if ("auto" === a && !b)
            throw new Error("'auto' array mode is for query parameters only");
        return new d(this,a)
    }
    ,
    b.module("ui.router.util").provider("$urlMatcherFactory", t),
    b.module("ui.router.util").run(["$urlMatcherFactory", function(a) {}
    ]),
    u.$inject = ["$locationProvider", "$urlMatcherFactoryProvider"],
    b.module("ui.router.router").provider("$urlRouter", u),
    v.$inject = ["$urlRouterProvider", "$urlMatcherFactoryProvider"],
    b.module("ui.router.state").value("$stateParams", {}).provider("$state", v),
    w.$inject = [],
    b.module("ui.router.state").provider("$view", w),
    b.module("ui.router.state").provider("$uiViewScroll", x),
    y.$inject = ["$state", "$injector", "$uiViewScroll", "$interpolate"],
    z.$inject = ["$compile", "$controller", "$state", "$interpolate"],
    b.module("ui.router.state").directive("uiView", y),
    b.module("ui.router.state").directive("uiView", z),
    D.$inject = ["$state", "$timeout"],
    E.$inject = ["$state", "$stateParams", "$interpolate"],
    b.module("ui.router.state").directive("uiSref", D).directive("uiSrefActive", E).directive("uiSrefActiveEq", E),
    F.$inject = ["$state"],
    G.$inject = ["$state"],
    b.module("ui.router.state").filter("isState", F).filter("includedByState", G)
}(window, window.angular);
(function(p, g, l) {
    'use strict';
    function m(b, a, f) {
        var c = f.baseHref()
          , k = b[0];
        return function(b, d, e) {
            var f, h;
            e = e || {};
            h = e.expires;
            f = g.isDefined(e.path) ? e.path : c;
            d === l && (h = "Thu, 01 Jan 1970 00:00:00 GMT",
            d = "");
            g.isString(h) && (h = new Date(h));
            d = encodeURIComponent(b) + "=" + encodeURIComponent(d);
            d = d + (f ? ";path=" + f : "") + (e.domain ? ";domain=" + e.domain : "");
            d += h ? ";expires=" + h.toUTCString() : "";
            d += e.secure ? ";secure" : "";
            e = d.length + 1;
            4096 < e && a.warn("Cookie '" + b + "' possibly not set or overflowed because it was too large (" + e + " > 4096 bytes)!");
            k.cookie = d
        }
    }
    g.module("ngCookies", ["ng"]).provider("$cookies", [function() {
        var b = this.defaults = {};
        this.$get = ["$$cookieReader", "$$cookieWriter", function(a, f) {
            return {
                get: function(c) {
                    return a()[c]
                },
                getObject: function(c) {
                    return (c = this.get(c)) ? g.fromJson(c) : c
                },
                getAll: function() {
                    return a()
                },
                put: function(c, a, n) {
                    f(c, a, n ? g.extend({}, b, n) : b)
                },
                putObject: function(c, b, a) {
                    this.put(c, g.toJson(b), a)
                },
                remove: function(a, k) {
                    f(a, l, k ? g.extend({}, b, k) : b)
                }
            }
        }
        ]
    }
    ]);
    g.module("ngCookies").factory("$cookieStore", ["$cookies", function(b) {
        return {
            get: function(a) {
                return b.getObject(a)
            },
            put: function(a, f) {
                b.putObject(a, f)
            },
            remove: function(a) {
                b.remove(a)
            }
        }
    }
    ]);
    m.$inject = ["$document", "$log", "$browser"];
    g.module("ngCookies").provider("$$cookieWriter", function() {
        this.$get = m
    })
}
)(window, window.angular);
// ┌────────────────────────────────────────────────────────────────────┐ \\
// │ Raphaël 2.1.0 - JavaScript Vector Library                          │ \\
// ├────────────────────────────────────────────────────────────────────┤ \\
// │ Copyright © 2008-2012 Dmitry Baranovskiy (http://raphaeljs.com)    │ \\
// │ Copyright © 2008-2012 Sencha Labs (http://sencha.com)              │ \\
// ├────────────────────────────────────────────────────────────────────┤ \\
// │ Licensed under the MIT (http://raphaeljs.com/license.html) license.│ \\
// └────────────────────────────────────────────────────────────────────┘ \\

// ┌──────────────────────────────────────────────────────────────────────────────────────┐ \\
// │ Eve 0.3.4 - JavaScript Events Library                                                │ \\
// ├──────────────────────────────────────────────────────────────────────────────────────┤ \\
// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://dmitry.baranovskiy.com/)          │ \\
// │ Licensed under the MIT (http://www.opensource.org/licenses/mit-license.php) license. │ \\
// └──────────────────────────────────────────────────────────────────────────────────────┘ \\
(function(glob) {
    var version = "0.3.4", has = "hasOwnProperty", separator = /[\.\/]/, wildcard = "*", fun = function() {}, numsort = function(a, b) {
        return a - b;
    }, current_event, stop, events = {
        n: {}
    },
    eve = function(name, scope) {
        var e = events, oldstop = stop, args = Array.prototype.slice.call(arguments, 2), listeners = eve.listeners(name), z = 0, f = false, l, indexed = [], queue = {}, out = [], ce = current_event, errors = [];
        current_event = name;
        stop = 0;
        for (var i = 0, ii = listeners.length; i < ii; i++)
            if ("zIndex"in listeners[i]) {
                indexed.push(listeners[i].zIndex);
                if (listeners[i].zIndex < 0) {
                    queue[listeners[i].zIndex] = listeners[i];
                }
            }
        indexed.sort(numsort);
        while (indexed[z] < 0) {
            l = queue[indexed[z++]];
            out.push(l.apply(scope, args));
            if (stop) {
                stop = oldstop;
                return out;
            }
        }
        for (i = 0; i < ii; i++) {
            l = listeners[i];
            if ("zIndex"in l) {
                if (l.zIndex == indexed[z]) {
                    out.push(l.apply(scope, args));
                    if (stop) {
                        break;
                    }
                    do {
                        z++;
                        l = queue[indexed[z]];
                        l && out.push(l.apply(scope, args));
                        if (stop) {
                            break;
                        }
                    } while (l)
                } else {
                    queue[l.zIndex] = l;
                }
            } else {
                out.push(l.apply(scope, args));
                if (stop) {
                    break;
                }
            }
        }
        stop = oldstop;
        current_event = ce;
        return out.length ? out : null;
    };

    eve.listeners = function(name) {
        var names = name.split(separator), e = events, item, items, k, i, ii, j, jj, nes, es = [e], out = [];
        for (i = 0,
        ii = names.length; i < ii; i++) {
            nes = [];
            for (j = 0,
            jj = es.length; j < jj; j++) {
                e = es[j].n;
                items = [e[names[i]], e[wildcard]];
                k = 2;
                while (k--) {
                    item = items[k];
                    if (item) {
                        nes.push(item);
                        out = out.concat(item.f || []);
                    }
                }
            }
            es = nes;
        }
        return out;
    }
    ;

    eve.on = function(name, f) {
        var names = name.split(separator)
          , e = events;
        for (var i = 0, ii = names.length; i < ii; i++) {
            e = e.n;
            !e[names[i]] && (e[names[i]] = {
                n: {}
            });
            e = e[names[i]];
        }
        e.f = e.f || [];
        for (i = 0,
        ii = e.f.length; i < ii; i++)
            if (e.f[i] == f) {
                return fun;
            }
        e.f.push(f);
        return function(zIndex) {
            if (+zIndex == +zIndex) {
                f.zIndex = +zIndex;
            }
        }
        ;
    }
    ;

    eve.stop = function() {
        stop = 1;
    }
    ;

    eve.nt = function(subname) {
        if (subname) {
            return new RegExp("(?:\\.|\\/|^)" + subname + "(?:\\.|\\/|$)").test(current_event);
        }
        return current_event;
    }
    ;

    eve.off = eve.unbind = function(name, f) {
        var names = name.split(separator), e, key, splice, i, ii, j, jj, cur = [events];
        for (i = 0,
        ii = names.length; i < ii; i++) {
            for (j = 0; j < cur.length; j += splice.length - 2) {
                splice = [j, 1];
                e = cur[j].n;
                if (names[i] != wildcard) {
                    if (e[names[i]]) {
                        splice.push(e[names[i]]);
                    }
                } else {
                    for (key in e)
                        if (e[has](key)) {
                            splice.push(e[key]);
                        }
                }
                cur.splice.apply(cur, splice);
            }
        }
        for (i = 0,
        ii = cur.length; i < ii; i++) {
            e = cur[i];
            while (e.n) {
                if (f) {
                    if (e.f) {
                        for (j = 0,
                        jj = e.f.length; j < jj; j++)
                            if (e.f[j] == f) {
                                e.f.splice(j, 1);
                                break;
                            }
                        !e.f.length && delete e.f;
                    }
                    for (key in e.n)
                        if (e.n[has](key) && e.n[key].f) {
                            var funcs = e.n[key].f;
                            for (j = 0,
                            jj = funcs.length; j < jj; j++)
                                if (funcs[j] == f) {
                                    funcs.splice(j, 1);
                                    break;
                                }
                            !funcs.length && delete e.n[key].f;
                        }
                } else {
                    delete e.f;
                    for (key in e.n)
                        if (e.n[has](key) && e.n[key].f) {
                            delete e.n[key].f;
                        }
                }
                e = e.n;
            }
        }
    }
    ;

    eve.once = function(name, f) {
        var f2 = function() {
            var res = f.apply(this, arguments);
            eve.unbind(name, f2);
            return res;
        };
        return eve.on(name, f2);
    }
    ;

    eve.version = version;
    eve.toString = function() {
        return "You are running Eve " + version;
    }
    ;
    (typeof module != "undefined" && module.exports) ? (module.exports = eve) : (typeof define != "undefined" ? (define("eve", [], function() {
        return eve;
    })) : (glob.eve = eve));
}
)(this);

// ┌─────────────────────────────────────────────────────────────────────┐ \\
// │ "Raphaël 2.1.0" - JavaScript Vector Library                         │ \\
// ├─────────────────────────────────────────────────────────────────────┤ \\
// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://raphaeljs.com)   │ \\
// │ Copyright (c) 2008-2011 Sencha Labs (http://sencha.com)             │ \\
// │ Licensed under the MIT (http://raphaeljs.com/license.html) license. │ \\
// └─────────────────────────────────────────────────────────────────────┘ \\
(function() {

    function R(first) {
        if (R.is(first, "function")) {
            return loaded ? first() : eve.on("raphael.DOMload", first);
        } else if (R.is(first, array)) {
            return R._engine.create[apply](R, first.splice(0, 3 + R.is(first[0], nu))).add(first);
        } else {
            var args = Array.prototype.slice.call(arguments, 0);
            if (R.is(args[args.length - 1], "function")) {
                var f = args.pop();
                return loaded ? f.call(R._engine.create[apply](R, args)) : eve.on("raphael.DOMload", function() {
                    f.call(R._engine.create[apply](R, args));
                });
            } else {
                return R._engine.create[apply](R, arguments);
            }
        }
    }
    R.version = "2.1.0";
    R.eve = eve;
    var loaded, separator = /[, ]+/, elements = {
        circle: 1,
        rect: 1,
        path: 1,
        ellipse: 1,
        text: 1,
        image: 1
    }, formatrg = /\{(\d+)\}/g, proto = "prototype", has = "hasOwnProperty", g = {
        doc: document,
        win: window
    }, oldRaphael = {
        was: Object.prototype[has].call(g.win, "Raphael"),
        is: g.win.Raphael
    }, Paper = function() {

        this.ca = this.customAttributes = {};
    }, paperproto, appendChild = "appendChild", apply = "apply", concat = "concat", supportsTouch = "createTouch"in g.doc, E = "", S = " ", Str = String, split = "split", events = "click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel"[split](S), touchMap = {
        mousedown: "touchstart",
        mousemove: "touchmove",
        mouseup: "touchend"
    }, lowerCase = Str.prototype.toLowerCase, math = Math, mmax = math.max, mmin = math.min, abs = math.abs, pow = math.pow, PI = math.PI, nu = "number", string = "string", array = "array", toString = "toString", fillString = "fill", objectToString = Object.prototype.toString, paper = {}, push = "push", ISURL = R._ISURL = /^url\(['"]?([^\)]+?)['"]?\)$/i, colourRegExp = /^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgba?\(\s*([\d\.]+%?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+%?)?)\s*\)|hsba?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\)|hsla?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\))\s*$/i, isnan = {
        "NaN": 1,
        "Infinity": 1,
        "-Infinity": 1
    }, bezierrg = /^(?:cubic-)?bezier\(([^,]+),([^,]+),([^,]+),([^\)]+)\)/, round = math.round, setAttribute = "setAttribute", toFloat = parseFloat, toInt = parseInt, upperCase = Str.prototype.toUpperCase, availableAttrs = R._availableAttrs = {
        "arrow-end": "none",
        "arrow-start": "none",
        blur: 0,
        "clip-rect": "0 0 1e9 1e9",
        cursor: "default",
        cx: 0,
        cy: 0,
        fill: "#fff",
        "fill-opacity": 1,
        font: '10px "Arial"',
        "font-family": '"Arial"',
        "font-size": "10",
        "font-style": "normal",
        "font-weight": 400,
        gradient: 0,
        height: 0,
        href: "http://raphaeljs.com/",
        "letter-spacing": 0,
        opacity: 1,
        path: "M0,0",
        r: 0,
        rx: 0,
        ry: 0,
        src: "",
        stroke: "#000",
        "stroke-dasharray": "",
        "stroke-linecap": "butt",
        "stroke-linejoin": "butt",
        "stroke-miterlimit": 0,
        "stroke-opacity": 1,
        "stroke-width": 1,
        target: "_blank",
        "text-anchor": "middle",
        title: "Raphael",
        transform: "",
        width: 0,
        x: 0,
        y: 0
    }, availableAnimAttrs = R._availableAnimAttrs = {
        blur: nu,
        "clip-rect": "csv",
        cx: nu,
        cy: nu,
        fill: "colour",
        "fill-opacity": nu,
        "font-size": nu,
        height: nu,
        opacity: nu,
        path: "path",
        r: nu,
        rx: nu,
        ry: nu,
        stroke: "colour",
        "stroke-opacity": nu,
        "stroke-width": nu,
        transform: "transform",
        width: nu,
        x: nu,
        y: nu
    }, whitespace = /[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]/g, commaSpaces = /[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/, hsrg = {
        hs: 1,
        rg: 1
    }, p2s = /,?([achlmqrstvxz]),?/gi, pathCommand = /([achlmrqstvz])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/ig, tCommand = /([rstm])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/ig, pathValues = /(-?\d*\.?\d*(?:e[\-+]?\d+)?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/ig, radial_gradient = R._radial_gradient = /^r(?:\(([^,]+?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*([^\)]+?)\))?/, eldata = {}, sortByKey = function(a, b) {
        return a.key - b.key;
    }, sortByNumber = function(a, b) {
        return toFloat(a) - toFloat(b);
    }, fun = function() {}, pipe = function(x) {
        return x;
    }, rectPath = R._rectPath = function(x, y, w, h, r) {
        if (r) {
            return [["M", x + r, y], ["l", w - r * 2, 0], ["a", r, r, 0, 0, 1, r, r], ["l", 0, h - r * 2], ["a", r, r, 0, 0, 1, -r, r], ["l", r * 2 - w, 0], ["a", r, r, 0, 0, 1, -r, -r], ["l", 0, r * 2 - h], ["a", r, r, 0, 0, 1, r, -r], ["z"]];
        }
        return [["M", x, y], ["l", w, 0], ["l", 0, h], ["l", -w, 0], ["z"]];
    }
    , ellipsePath = function(x, y, rx, ry) {
        if (ry == null) {
            ry = rx;
        }
        return [["M", x, y], ["m", 0, -ry], ["a", rx, ry, 0, 1, 1, 0, 2 * ry], ["a", rx, ry, 0, 1, 1, 0, -2 * ry], ["z"]];
    }, getPath = R._getPath = {
        path: function(el) {
            return el.attr("path");
        },
        circle: function(el) {
            var a = el.attrs;
            return ellipsePath(a.cx, a.cy, a.r);
        },
        ellipse: function(el) {
            var a = el.attrs;
            return ellipsePath(a.cx, a.cy, a.rx, a.ry);
        },
        rect: function(el) {
            var a = el.attrs;
            return rectPath(a.x, a.y, a.width, a.height, a.r);
        },
        image: function(el) {
            var a = el.attrs;
            return rectPath(a.x, a.y, a.width, a.height);
        },
        text: function(el) {
            var bbox = el._getBBox();
            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);
        }
    },
    mapPath = R.mapPath = function(path, matrix) {
        if (!matrix) {
            return path;
        }
        var x, y, i, j, ii, jj, pathi;
        path = path2curve(path);
        for (i = 0,
        ii = path.length; i < ii; i++) {
            pathi = path[i];
            for (j = 1,
            jj = pathi.length; j < jj; j += 2) {
                x = matrix.x(pathi[j], pathi[j + 1]);
                y = matrix.y(pathi[j], pathi[j + 1]);
                pathi[j] = x;
                pathi[j + 1] = y;
            }
        }
        return path;
    }
    ;

    R._g = g;

    R.type = (g.win.SVGAngle || g.doc.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure", "1.1") ? "SVG" : "VML");
    if (R.type == "VML") {
        var d = g.doc.createElement("div"), b;
        d.innerHTML = '<v:shape adj="1"/>';
        b = d.firstChild;
        b.style.behavior = "url(#default#VML)";
        if (!(b && typeof b.adj == "object")) {
            return (R.type = E);
        }
        d = null;
    }

    R.svg = !(R.vml = R.type == "VML");
    R._Paper = Paper;

    R.fn = paperproto = Paper.prototype = R.prototype;
    R._id = 0;
    R._oid = 0;

    R.is = function(o, type) {
        type = lowerCase.call(type);
        if (type == "finite") {
            return !isnan[has](+o);
        }
        if (type == "array") {
            return o instanceof Array;
        }
        return (type == "null" && o === null) || (type == typeof o && o !== null) || (type == "object" && o === Object(o)) || (type == "array" && Array.isArray && Array.isArray(o)) || objectToString.call(o).slice(8, -1).toLowerCase() == type;
    }
    ;

    function clone(obj) {
        if (Object(obj) !== obj) {
            return obj;
        }
        var res = new obj.constructor;
        for (var key in obj)
            if (obj[has](key)) {
                res[key] = clone(obj[key]);
            }
        return res;
    }

    R.angle = function(x1, y1, x2, y2, x3, y3) {
        if (x3 == null) {
            var x = x1 - x2
              , y = y1 - y2;
            if (!x && !y) {
                return 0;
            }
            return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;
        } else {
            return R.angle(x1, y1, x3, y3) - R.angle(x2, y2, x3, y3);
        }
    }
    ;

    R.rad = function(deg) {
        return deg % 360 * PI / 180;
    }
    ;

    R.deg = function(rad) {
        return rad * 180 / PI % 360;
    }
    ;

    R.snapTo = function(values, value, tolerance) {
        tolerance = R.is(tolerance, "finite") ? tolerance : 10;
        if (R.is(values, array)) {
            var i = values.length;
            while (i--)
                if (abs(values[i] - value) <= tolerance) {
                    return values[i];
                }
        } else {
            values = +values;
            var rem = value % values;
            if (rem < tolerance) {
                return value - rem;
            }
            if (rem > values - tolerance) {
                return value - rem + values;
            }
        }
        return value;
    }
    ;

    var createUUID = R.createUUID = (function(uuidRegEx, uuidReplacer) {
        return function() {
            return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(uuidRegEx, uuidReplacer).toUpperCase();
        }
        ;
    }
    )(/[xy]/g, function(c) {
        var r = math.random() * 16 | 0
          , v = c == "x" ? r : (r & 3 | 8);
        return v.toString(16);
    });

    R.setWindow = function(newwin) {
        eve("raphael.setWindow", R, g.win, newwin);
        g.win = newwin;
        g.doc = g.win.document;
        if (R._engine.initWin) {
            R._engine.initWin(g.win);
        }
    }
    ;
    var toHex = function(color) {
        if (R.vml) {
            // http://dean.edwards.name/weblog/2009/10/convert-any-colour-value-to-hex-in-msie/
            var trim = /^\s+|\s+$/g;
            var bod;
            try {
                var docum = new ActiveXObject("htmlfile");
                docum.write("<body>");
                docum.close();
                bod = docum.body;
            } catch (e) {
                bod = createPopup().document.body;
            }
            var range = bod.createTextRange();
            toHex = cacher(function(color) {
                try {
                    bod.style.color = Str(color).replace(trim, E);
                    var value = range.queryCommandValue("ForeColor");
                    value = ((value & 255) << 16) | (value & 65280) | ((value & 16711680) >>> 16);
                    return "#" + ("000000" + value.toString(16)).slice(-6);
                } catch (e) {
                    return "none";
                }
            });
        } else {
            var i = g.doc.createElement("i");
            i.title = "Rapha\xebl Colour Picker";
            i.style.display = "none";
            g.doc.body.appendChild(i);
            toHex = cacher(function(color) {
                i.style.color = color;
                return g.doc.defaultView.getComputedStyle(i, E).getPropertyValue("color");
            });
        }
        return toHex(color);
    }
      , hsbtoString = function() {
        return "hsb(" + [this.h, this.s, this.b] + ")";
    }
      , hsltoString = function() {
        return "hsl(" + [this.h, this.s, this.l] + ")";
    }
      , rgbtoString = function() {
        return this.hex;
    }
      , prepareRGB = function(r, g, b) {
        if (g == null && R.is(r, "object") && "r"in r && "g"in r && "b"in r) {
            b = r.b;
            g = r.g;
            r = r.r;
        }
        if (g == null && R.is(r, string)) {
            var clr = R.getRGB(r);
            r = clr.r;
            g = clr.g;
            b = clr.b;
        }
        if (r > 1 || g > 1 || b > 1) {
            r /= 255;
            g /= 255;
            b /= 255;
        }

        return [r, g, b];
    }
      , packageRGB = function(r, g, b, o) {
        r *= 255;
        g *= 255;
        b *= 255;
        var rgb = {
            r: r,
            g: g,
            b: b,
            hex: R.rgb(r, g, b),
            toString: rgbtoString
        };
        R.is(o, "finite") && (rgb.opacity = o);
        return rgb;
    };

    R.color = function(clr) {
        var rgb;
        if (R.is(clr, "object") && "h"in clr && "s"in clr && "b"in clr) {
            rgb = R.hsb2rgb(clr);
            clr.r = rgb.r;
            clr.g = rgb.g;
            clr.b = rgb.b;
            clr.hex = rgb.hex;
        } else if (R.is(clr, "object") && "h"in clr && "s"in clr && "l"in clr) {
            rgb = R.hsl2rgb(clr);
            clr.r = rgb.r;
            clr.g = rgb.g;
            clr.b = rgb.b;
            clr.hex = rgb.hex;
        } else {
            if (R.is(clr, "string")) {
                clr = R.getRGB(clr);
            }
            if (R.is(clr, "object") && "r"in clr && "g"in clr && "b"in clr) {
                rgb = R.rgb2hsl(clr);
                clr.h = rgb.h;
                clr.s = rgb.s;
                clr.l = rgb.l;
                rgb = R.rgb2hsb(clr);
                clr.v = rgb.b;
            } else {
                clr = {
                    hex: "none"
                };
                clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;
            }
        }
        clr.toString = rgbtoString;
        return clr;
    }
    ;

    R.hsb2rgb = function(h, s, v, o) {
        if (this.is(h, "object") && "h"in h && "s"in h && "b"in h) {
            v = h.b;
            s = h.s;
            h = h.h;
            o = h.o;
        }
        h *= 360;
        var R, G, B, X, C;
        h = (h % 360) / 60;
        C = v * s;
        X = C * (1 - abs(h % 2 - 1));
        R = G = B = v - C;

        h = ~~h;
        R += [C, X, 0, 0, X, C][h];
        G += [X, C, C, X, 0, 0][h];
        B += [0, 0, X, C, C, X][h];
        return packageRGB(R, G, B, o);
    }
    ;

    R.hsl2rgb = function(h, s, l, o) {
        if (this.is(h, "object") && "h"in h && "s"in h && "l"in h) {
            l = h.l;
            s = h.s;
            h = h.h;
        }
        if (h > 1 || s > 1 || l > 1) {
            h /= 360;
            s /= 100;
            l /= 100;
        }
        h *= 360;
        var R, G, B, X, C;
        h = (h % 360) / 60;
        C = 2 * s * (l < .5 ? l : 1 - l);
        X = C * (1 - abs(h % 2 - 1));
        R = G = B = l - C / 2;

        h = ~~h;
        R += [C, X, 0, 0, X, C][h];
        G += [X, C, C, X, 0, 0][h];
        B += [0, 0, X, C, C, X][h];
        return packageRGB(R, G, B, o);
    }
    ;

    R.rgb2hsb = function(r, g, b) {
        b = prepareRGB(r, g, b);
        r = b[0];
        g = b[1];
        b = b[2];

        var H, S, V, C;
        V = mmax(r, g, b);
        C = V - mmin(r, g, b);
        H = (C == 0 ? null : V == r ? (g - b) / C : V == g ? (b - r) / C + 2 : (r - g) / C + 4);
        H = ((H + 360) % 6) * 60 / 360;
        S = C == 0 ? 0 : C / V;
        return {
            h: H,
            s: S,
            b: V,
            toString: hsbtoString
        };
    }
    ;

    R.rgb2hsl = function(r, g, b) {
        b = prepareRGB(r, g, b);
        r = b[0];
        g = b[1];
        b = b[2];

        var H, S, L, M, m, C;
        M = mmax(r, g, b);
        m = mmin(r, g, b);
        C = M - m;
        H = (C == 0 ? null : M == r ? (g - b) / C : M == g ? (b - r) / C + 2 : (r - g) / C + 4);
        H = ((H + 360) % 6) * 60 / 360;
        L = (M + m) / 2;
        S = (C == 0 ? 0 : L < .5 ? C / (2 * L) : C / (2 - 2 * L));
        return {
            h: H,
            s: S,
            l: L,
            toString: hsltoString
        };
    }
    ;
    R._path2string = function() {
        return this.join(",").replace(p2s, "$1");
    }
    ;
    function repush(array, item) {
        for (var i = 0, ii = array.length; i < ii; i++)
            if (array[i] === item) {
                return array.push(array.splice(i, 1)[0]);
            }
    }
    function cacher(f, scope, postprocessor) {
        function newf() {
            var arg = Array.prototype.slice.call(arguments, 0)
              , args = arg.join("\u2400")
              , cache = newf.cache = newf.cache || {}
              , count = newf.count = newf.count || [];
            if (cache[has](args)) {
                repush(count, args);
                return postprocessor ? postprocessor(cache[args]) : cache[args];
            }
            count.length >= 1e3 && delete cache[count.shift()];
            count.push(args);
            cache[args] = f[apply](scope, arg);
            return postprocessor ? postprocessor(cache[args]) : cache[args];
        }
        return newf;
    }

    var preload = R._preload = function(src, f) {
        var img = g.doc.createElement("img");
        img.style.cssText = "position:absolute;left:-9999em;top:-9999em";
        img.onload = function() {
            f.call(this);
            this.onload = null;
            g.doc.body.removeChild(this);
        }
        ;
        img.onerror = function() {
            g.doc.body.removeChild(this);
        }
        ;
        g.doc.body.appendChild(img);
        img.src = src;
    }
    ;

    function clrToString() {
        return this.hex;
    }

    R.getRGB = cacher(function(colour) {
        if (!colour || !!((colour = Str(colour)).indexOf("-") + 1)) {
            return {
                r: -1,
                g: -1,
                b: -1,
                hex: "none",
                error: 1,
                toString: clrToString
            };
        }
        if (colour == "none") {
            return {
                r: -1,
                g: -1,
                b: -1,
                hex: "none",
                toString: clrToString
            };
        }
        !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == "#") && (colour = toHex(colour));
        var res, red, green, blue, opacity, t, values, rgb = colour.match(colourRegExp);
        if (rgb) {
            if (rgb[2]) {
                blue = toInt(rgb[2].substring(5), 16);
                green = toInt(rgb[2].substring(3, 5), 16);
                red = toInt(rgb[2].substring(1, 3), 16);
            }
            if (rgb[3]) {
                blue = toInt((t = rgb[3].charAt(3)) + t, 16);
                green = toInt((t = rgb[3].charAt(2)) + t, 16);
                red = toInt((t = rgb[3].charAt(1)) + t, 16);
            }
            if (rgb[4]) {
                values = rgb[4][split](commaSpaces);
                red = toFloat(values[0]);
                values[0].slice(-1) == "%" && (red *= 2.55);
                green = toFloat(values[1]);
                values[1].slice(-1) == "%" && (green *= 2.55);
                blue = toFloat(values[2]);
                values[2].slice(-1) == "%" && (blue *= 2.55);
                rgb[1].toLowerCase().slice(0, 4) == "rgba" && (opacity = toFloat(values[3]));
                values[3] && values[3].slice(-1) == "%" && (opacity /= 100);
            }
            if (rgb[5]) {
                values = rgb[5][split](commaSpaces);
                red = toFloat(values[0]);
                values[0].slice(-1) == "%" && (red *= 2.55);
                green = toFloat(values[1]);
                values[1].slice(-1) == "%" && (green *= 2.55);
                blue = toFloat(values[2]);
                values[2].slice(-1) == "%" && (blue *= 2.55);
                (values[0].slice(-3) == "deg" || values[0].slice(-1) == "\xb0") && (red /= 360);
                rgb[1].toLowerCase().slice(0, 4) == "hsba" && (opacity = toFloat(values[3]));
                values[3] && values[3].slice(-1) == "%" && (opacity /= 100);
                return R.hsb2rgb(red, green, blue, opacity);
            }
            if (rgb[6]) {
                values = rgb[6][split](commaSpaces);
                red = toFloat(values[0]);
                values[0].slice(-1) == "%" && (red *= 2.55);
                green = toFloat(values[1]);
                values[1].slice(-1) == "%" && (green *= 2.55);
                blue = toFloat(values[2]);
                values[2].slice(-1) == "%" && (blue *= 2.55);
                (values[0].slice(-3) == "deg" || values[0].slice(-1) == "\xb0") && (red /= 360);
                rgb[1].toLowerCase().slice(0, 4) == "hsla" && (opacity = toFloat(values[3]));
                values[3] && values[3].slice(-1) == "%" && (opacity /= 100);
                return R.hsl2rgb(red, green, blue, opacity);
            }
            rgb = {
                r: red,
                g: green,
                b: blue,
                toString: clrToString
            };
            rgb.hex = "#" + (16777216 | blue | (green << 8) | (red << 16)).toString(16).slice(1);
            R.is(opacity, "finite") && (rgb.opacity = opacity);
            return rgb;
        }
        return {
            r: -1,
            g: -1,
            b: -1,
            hex: "none",
            error: 1,
            toString: clrToString
        };
    }, R);

    R.hsb = cacher(function(h, s, b) {
        return R.hsb2rgb(h, s, b).hex;
    });

    R.hsl = cacher(function(h, s, l) {
        return R.hsl2rgb(h, s, l).hex;
    });

    R.rgb = cacher(function(r, g, b) {
        return "#" + (16777216 | b | (g << 8) | (r << 16)).toString(16).slice(1);
    });

    R.getColor = function(value) {
        var start = this.getColor.start = this.getColor.start || {
            h: 0,
            s: 1,
            b: value || .75
        }
          , rgb = this.hsb2rgb(start.h, start.s, start.b);
        start.h += .075;
        if (start.h > 1) {
            start.h = 0;
            start.s -= .2;
            start.s <= 0 && (this.getColor.start = {
                h: 0,
                s: 1,
                b: start.b
            });
        }
        return rgb.hex;
    }
    ;

    R.getColor.reset = function() {
        delete this.start;
    }
    ;

    // http://schepers.cc/getting-to-the-point
    function catmullRom2bezier(crp, z) {
        var d = [];
        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {
            var p = [{
                x: +crp[i - 2],
                y: +crp[i - 1]
            }, {
                x: +crp[i],
                y: +crp[i + 1]
            }, {
                x: +crp[i + 2],
                y: +crp[i + 3]
            }, {
                x: +crp[i + 4],
                y: +crp[i + 5]
            }];
            if (z) {
                if (!i) {
                    p[0] = {
                        x: +crp[iLen - 2],
                        y: +crp[iLen - 1]
                    };
                } else if (iLen - 4 == i) {
                    p[3] = {
                        x: +crp[0],
                        y: +crp[1]
                    };
                } else if (iLen - 2 == i) {
                    p[2] = {
                        x: +crp[0],
                        y: +crp[1]
                    };
                    p[3] = {
                        x: +crp[2],
                        y: +crp[3]
                    };
                }
            } else {
                if (iLen - 4 == i) {
                    p[3] = p[2];
                } else if (!i) {
                    p[0] = {
                        x: +crp[i],
                        y: +crp[i + 1]
                    };
                }
            }
            d.push(["C", (-p[0].x + 6 * p[1].x + p[2].x) / 6, (-p[0].y + 6 * p[1].y + p[2].y) / 6, (p[1].x + 6 * p[2].x - p[3].x) / 6, (p[1].y + 6 * p[2].y - p[3].y) / 6, p[2].x, p[2].y]);
        }

        return d;
    }

    R.parsePathString = function(pathString) {
        if (!pathString) {
            return null;
        }
        var pth = paths(pathString);
        if (pth.arr) {
            return pathClone(pth.arr);
        }

        var paramCounts = {
            a: 7,
            c: 6,
            h: 1,
            l: 2,
            m: 2,
            r: 4,
            q: 4,
            s: 4,
            t: 2,
            v: 1,
            z: 0
        }
          , data = [];
        if (R.is(pathString, array) && R.is(pathString[0], array)) {
            // rough assumption
            data = pathClone(pathString);
        }
        if (!data.length) {
            Str(pathString).replace(pathCommand, function(a, b, c) {
                var params = []
                  , name = b.toLowerCase();
                c.replace(pathValues, function(a, b) {
                    b && params.push(+b);
                });
                if (name == "m" && params.length > 2) {
                    data.push([b][concat](params.splice(0, 2)));
                    name = "l";
                    b = b == "m" ? "l" : "L";
                }
                if (name == "r") {
                    data.push([b][concat](params));
                } else
                    while (params.length >= paramCounts[name]) {
                        data.push([b][concat](params.splice(0, paramCounts[name])));
                        if (!paramCounts[name]) {
                            break;
                        }
                    }
            });
        }
        data.toString = R._path2string;
        pth.arr = pathClone(data);
        return data;
    }
    ;

    R.parseTransformString = cacher(function(TString) {
        if (!TString) {
            return null;
        }
        var paramCounts = {
            r: 3,
            s: 4,
            t: 2,
            m: 6
        }
          , data = [];
        if (R.is(TString, array) && R.is(TString[0], array)) {
            // rough assumption
            data = pathClone(TString);
        }
        if (!data.length) {
            Str(TString).replace(tCommand, function(a, b, c) {
                var params = []
                  , name = lowerCase.call(b);
                c.replace(pathValues, function(a, b) {
                    b && params.push(+b);
                });
                data.push([b][concat](params));
            });
        }
        data.toString = R._path2string;
        return data;
    });
    // PATHS
    var paths = function(ps) {
        var p = paths.ps = paths.ps || {};
        if (p[ps]) {
            p[ps].sleep = 100;
        } else {
            p[ps] = {
                sleep: 100
            };
        }
        setTimeout(function() {
            for (var key in p)
                if (p[has](key) && key != ps) {
                    p[key].sleep--;
                    !p[key].sleep && delete p[key];
                }
        });
        return p[ps];
    };

    R.findDotsAtSegment = function(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {
        var t1 = 1 - t
          , t13 = pow(t1, 3)
          , t12 = pow(t1, 2)
          , t2 = t * t
          , t3 = t2 * t
          , x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x
          , y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y
          , mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x)
          , my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y)
          , nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x)
          , ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y)
          , ax = t1 * p1x + t * c1x
          , ay = t1 * p1y + t * c1y
          , cx = t1 * c2x + t * p2x
          , cy = t1 * c2y + t * p2y
          , alpha = (90 - math.atan2(mx - nx, my - ny) * 180 / PI);
        (mx > nx || my < ny) && (alpha += 180);
        return {
            x: x,
            y: y,
            m: {
                x: mx,
                y: my
            },
            n: {
                x: nx,
                y: ny
            },
            start: {
                x: ax,
                y: ay
            },
            end: {
                x: cx,
                y: cy
            },
            alpha: alpha
        };
    }
    ;

    R.bezierBBox = function(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {
        if (!R.is(p1x, "array")) {
            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];
        }
        var bbox = curveDim.apply(null, p1x);
        return {
            x: bbox.min.x,
            y: bbox.min.y,
            x2: bbox.max.x,
            y2: bbox.max.y,
            width: bbox.max.x - bbox.min.x,
            height: bbox.max.y - bbox.min.y
        };
    }
    ;

    R.isPointInsideBBox = function(bbox, x, y) {
        return x >= bbox.x && x <= bbox.x2 && y >= bbox.y && y <= bbox.y2;
    }
    ;

    R.isBBoxIntersect = function(bbox1, bbox2) {
        var i = R.isPointInsideBBox;
        return i(bbox2, bbox1.x, bbox1.y) || i(bbox2, bbox1.x2, bbox1.y) || i(bbox2, bbox1.x, bbox1.y2) || i(bbox2, bbox1.x2, bbox1.y2) || i(bbox1, bbox2.x, bbox2.y) || i(bbox1, bbox2.x2, bbox2.y) || i(bbox1, bbox2.x, bbox2.y2) || i(bbox1, bbox2.x2, bbox2.y2) || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x) && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);
    }
    ;
    function base3(t, p1, p2, p3, p4) {
        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4
          , t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;
        return t * t2 - 3 * p1 + 3 * p2;
    }
    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {
        if (z == null) {
            z = 1;
        }
        z = z > 1 ? 1 : z < 0 ? 0 : z;
        var z2 = z / 2
          , n = 12
          , Tvalues = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816]
          , Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472]
          , sum = 0;
        for (var i = 0; i < n; i++) {
            var ct = z2 * Tvalues[i] + z2
              , xbase = base3(ct, x1, x2, x3, x4)
              , ybase = base3(ct, y1, y2, y3, y4)
              , comb = xbase * xbase + ybase * ybase;
            sum += Cvalues[i] * math.sqrt(comb);
        }
        return z2 * sum;
    }
    function getTatLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {
        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {
            return;
        }
        var t = 1, step = t / 2, t2 = t - step, l, e = .01;
        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);
        while (abs(l - ll) > e) {
            step /= 2;
            t2 += (l < ll ? 1 : -1) * step;
            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);
        }
        return t2;
    }
    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {
        if (mmax(x1, x2) < mmin(x3, x4) || mmin(x1, x2) > mmax(x3, x4) || mmax(y1, y2) < mmin(y3, y4) || mmin(y1, y2) > mmax(y3, y4)) {
            return;
        }
        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4)
          , ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4)
          , denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);

        if (!denominator) {
            return;
        }
        var px = nx / denominator
          , py = ny / denominator
          , px2 = +px.toFixed(2)
          , py2 = +py.toFixed(2);
        if (px2 < +mmin(x1, x2).toFixed(2) || px2 > +mmax(x1, x2).toFixed(2) || px2 < +mmin(x3, x4).toFixed(2) || px2 > +mmax(x3, x4).toFixed(2) || py2 < +mmin(y1, y2).toFixed(2) || py2 > +mmax(y1, y2).toFixed(2) || py2 < +mmin(y3, y4).toFixed(2) || py2 > +mmax(y3, y4).toFixed(2)) {
            return;
        }
        return {
            x: px,
            y: py
        };
    }
    function inter(bez1, bez2) {
        return interHelper(bez1, bez2);
    }
    function interCount(bez1, bez2) {
        return interHelper(bez1, bez2, 1);
    }
    function interHelper(bez1, bez2, justCount) {
        var bbox1 = R.bezierBBox(bez1)
          , bbox2 = R.bezierBBox(bez2);
        if (!R.isBBoxIntersect(bbox1, bbox2)) {
            return justCount ? 0 : [];
        }
        var l1 = bezlen.apply(0, bez1)
          , l2 = bezlen.apply(0, bez2)
          , n1 = ~~(l1 / 5)
          , n2 = ~~(l2 / 5)
          , dots1 = []
          , dots2 = []
          , xy = {}
          , res = justCount ? 0 : [];
        for (var i = 0; i < n1 + 1; i++) {
            var p = R.findDotsAtSegment.apply(R, bez1.concat(i / n1));
            dots1.push({
                x: p.x,
                y: p.y,
                t: i / n1
            });
        }
        for (i = 0; i < n2 + 1; i++) {
            p = R.findDotsAtSegment.apply(R, bez2.concat(i / n2));
            dots2.push({
                x: p.x,
                y: p.y,
                t: i / n2
            });
        }
        for (i = 0; i < n1; i++) {
            for (var j = 0; j < n2; j++) {
                var di = dots1[i]
                  , di1 = dots1[i + 1]
                  , dj = dots2[j]
                  , dj1 = dots2[j + 1]
                  , ci = abs(di1.x - di.x) < .001 ? "y" : "x"
                  , cj = abs(dj1.x - dj.x) < .001 ? "y" : "x"
                  , is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);
                if (is) {
                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {
                        continue;
                    }
                    xy[is.x.toFixed(4)] = is.y.toFixed(4);
                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t)
                      , t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);
                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {
                        if (justCount) {
                            res++;
                        } else {
                            res.push({
                                x: is.x,
                                y: is.y,
                                t1: t1,
                                t2: t2
                            });
                        }
                    }
                }
            }
        }
        return res;
    }

    R.pathIntersection = function(path1, path2) {
        return interPathHelper(path1, path2);
    }
    ;
    R.pathIntersectionNumber = function(path1, path2) {
        return interPathHelper(path1, path2, 1);
    }
    ;
    function interPathHelper(path1, path2, justCount) {
        path1 = R._path2curve(path1);
        path2 = R._path2curve(path2);
        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2, res = justCount ? 0 : [];
        for (var i = 0, ii = path1.length; i < ii; i++) {
            var pi = path1[i];
            if (pi[0] == "M") {
                x1 = x1m = pi[1];
                y1 = y1m = pi[2];
            } else {
                if (pi[0] == "C") {
                    bez1 = [x1, y1].concat(pi.slice(1));
                    x1 = bez1[6];
                    y1 = bez1[7];
                } else {
                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];
                    x1 = x1m;
                    y1 = y1m;
                }
                for (var j = 0, jj = path2.length; j < jj; j++) {
                    var pj = path2[j];
                    if (pj[0] == "M") {
                        x2 = x2m = pj[1];
                        y2 = y2m = pj[2];
                    } else {
                        if (pj[0] == "C") {
                            bez2 = [x2, y2].concat(pj.slice(1));
                            x2 = bez2[6];
                            y2 = bez2[7];
                        } else {
                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];
                            x2 = x2m;
                            y2 = y2m;
                        }
                        var intr = interHelper(bez1, bez2, justCount);
                        if (justCount) {
                            res += intr;
                        } else {
                            for (var k = 0, kk = intr.length; k < kk; k++) {
                                intr[k].segment1 = i;
                                intr[k].segment2 = j;
                                intr[k].bez1 = bez1;
                                intr[k].bez2 = bez2;
                            }
                            res = res.concat(intr);
                        }
                    }
                }
            }
        }
        return res;
    }

    R.isPointInsidePath = function(path, x, y) {
        var bbox = R.pathBBox(path);
        return R.isPointInsideBBox(bbox, x, y) && interPathHelper(path, [["M", x, y], ["H", bbox.x2 + 10]], 1) % 2 == 1;
    }
    ;
    R._removedFactory = function(methodname) {
        return function() {
            eve("raphael.log", null, "Rapha\xebl: you are calling to method \u201c" + methodname + "\u201d of removed object", methodname);
        }
        ;
    }
    ;

    var pathDimensions = R.pathBBox = function(path) {
        var pth = paths(path);
        if (pth.bbox) {
            return pth.bbox;
        }
        if (!path) {
            return {
                x: 0,
                y: 0,
                width: 0,
                height: 0,
                x2: 0,
                y2: 0
            };
        }
        path = path2curve(path);
        var x = 0, y = 0, X = [], Y = [], p;
        for (var i = 0, ii = path.length; i < ii; i++) {
            p = path[i];
            if (p[0] == "M") {
                x = p[1];
                y = p[2];
                X.push(x);
                Y.push(y);
            } else {
                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);
                X = X[concat](dim.min.x, dim.max.x);
                Y = Y[concat](dim.min.y, dim.max.y);
                x = p[5];
                y = p[6];
            }
        }
        var xmin = mmin[apply](0, X)
          , ymin = mmin[apply](0, Y)
          , xmax = mmax[apply](0, X)
          , ymax = mmax[apply](0, Y)
          , bb = {
            x: xmin,
            y: ymin,
            x2: xmax,
            y2: ymax,
            width: xmax - xmin,
            height: ymax - ymin
        };
        pth.bbox = clone(bb);
        return bb;
    }
      , pathClone = function(pathArray) {
        var res = clone(pathArray);
        res.toString = R._path2string;
        return res;
    }
      , pathToRelative = R._pathToRelative = function(pathArray) {
        var pth = paths(pathArray);
        if (pth.rel) {
            return pathClone(pth.rel);
        }
        if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) {
            // rough assumption
            pathArray = R.parsePathString(pathArray);
        }
        var res = []
          , x = 0
          , y = 0
          , mx = 0
          , my = 0
          , start = 0;
        if (pathArray[0][0] == "M") {
            x = pathArray[0][1];
            y = pathArray[0][2];
            mx = x;
            my = y;
            start++;
            res.push(["M", x, y]);
        }
        for (var i = start, ii = pathArray.length; i < ii; i++) {
            var r = res[i] = []
              , pa = pathArray[i];
            if (pa[0] != lowerCase.call(pa[0])) {
                r[0] = lowerCase.call(pa[0]);
                switch (r[0]) {
                case "a":
                    r[1] = pa[1];
                    r[2] = pa[2];
                    r[3] = pa[3];
                    r[4] = pa[4];
                    r[5] = pa[5];
                    r[6] = +(pa[6] - x).toFixed(3);
                    r[7] = +(pa[7] - y).toFixed(3);
                    break;
                case "v":
                    r[1] = +(pa[1] - y).toFixed(3);
                    break;
                case "m":
                    mx = pa[1];
                    my = pa[2];
                default:
                    for (var j = 1, jj = pa.length; j < jj; j++) {
                        r[j] = +(pa[j] - ((j % 2) ? x : y)).toFixed(3);
                    }
                }
            } else {
                r = res[i] = [];
                if (pa[0] == "m") {
                    mx = pa[1] + x;
                    my = pa[2] + y;
                }
                for (var k = 0, kk = pa.length; k < kk; k++) {
                    res[i][k] = pa[k];
                }
            }
            var len = res[i].length;
            switch (res[i][0]) {
            case "z":
                x = mx;
                y = my;
                break;
            case "h":
                x += +res[i][len - 1];
                break;
            case "v":
                y += +res[i][len - 1];
                break;
            default:
                x += +res[i][len - 2];
                y += +res[i][len - 1];
            }
        }
        res.toString = R._path2string;
        pth.rel = pathClone(res);
        return res;
    }
      , pathToAbsolute = R._pathToAbsolute = function(pathArray) {
        var pth = paths(pathArray);
        if (pth.abs) {
            return pathClone(pth.abs);
        }
        if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) {
            // rough assumption
            pathArray = R.parsePathString(pathArray);
        }
        if (!pathArray || !pathArray.length) {
            return [["M", 0, 0]];
        }
        var res = []
          , x = 0
          , y = 0
          , mx = 0
          , my = 0
          , start = 0;
        if (pathArray[0][0] == "M") {
            x = +pathArray[0][1];
            y = +pathArray[0][2];
            mx = x;
            my = y;
            start++;
            res[0] = ["M", x, y];
        }
        var crz = pathArray.length == 3 && pathArray[0][0] == "M" && pathArray[1][0].toUpperCase() == "R" && pathArray[2][0].toUpperCase() == "Z";
        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {
            res.push(r = []);
            pa = pathArray[i];
            if (pa[0] != upperCase.call(pa[0])) {
                r[0] = upperCase.call(pa[0]);
                switch (r[0]) {
                case "A":
                    r[1] = pa[1];
                    r[2] = pa[2];
                    r[3] = pa[3];
                    r[4] = pa[4];
                    r[5] = pa[5];
                    r[6] = +(pa[6] + x);
                    r[7] = +(pa[7] + y);
                    break;
                case "V":
                    r[1] = +pa[1] + y;
                    break;
                case "H":
                    r[1] = +pa[1] + x;
                    break;
                case "R":
                    var dots = [x, y][concat](pa.slice(1));
                    for (var j = 2, jj = dots.length; j < jj; j++) {
                        dots[j] = +dots[j] + x;
                        dots[++j] = +dots[j] + y;
                    }
                    res.pop();
                    res = res[concat](catmullRom2bezier(dots, crz));
                    break;
                case "M":
                    mx = +pa[1] + x;
                    my = +pa[2] + y;
                default:
                    for (j = 1,
                    jj = pa.length; j < jj; j++) {
                        r[j] = +pa[j] + ((j % 2) ? x : y);
                    }
                }
            } else if (pa[0] == "R") {
                dots = [x, y][concat](pa.slice(1));
                res.pop();
                res = res[concat](catmullRom2bezier(dots, crz));
                r = ["R"][concat](pa.slice(-2));
            } else {
                for (var k = 0, kk = pa.length; k < kk; k++) {
                    r[k] = pa[k];
                }
            }
            switch (r[0]) {
            case "Z":
                x = mx;
                y = my;
                break;
            case "H":
                x = r[1];
                break;
            case "V":
                y = r[1];
                break;
            case "M":
                mx = r[r.length - 2];
                my = r[r.length - 1];
            default:
                x = r[r.length - 2];
                y = r[r.length - 1];
            }
        }
        res.toString = R._path2string;
        pth.abs = pathClone(res);
        return res;
    }
      , l2c = function(x1, y1, x2, y2) {
        return [x1, y1, x2, y2, x2, y2];
    }
      , q2c = function(x1, y1, ax, ay, x2, y2) {
        var _13 = 1 / 3
          , _23 = 2 / 3;
        return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];
    }
      , a2c = function(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {
        // for more information of where this math came from visit:
        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes
        var _120 = PI * 120 / 180, rad = PI / 180 * (+angle || 0), res = [], xy, rotate = cacher(function(x, y, rad) {
            var X = x * math.cos(rad) - y * math.sin(rad)
              , Y = x * math.sin(rad) + y * math.cos(rad);
            return {
                x: X,
                y: Y
            };
        });
        if (!recursive) {
            xy = rotate(x1, y1, -rad);
            x1 = xy.x;
            y1 = xy.y;
            xy = rotate(x2, y2, -rad);
            x2 = xy.x;
            y2 = xy.y;
            var cos = math.cos(PI / 180 * angle)
              , sin = math.sin(PI / 180 * angle)
              , x = (x1 - x2) / 2
              , y = (y1 - y2) / 2;
            var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);
            if (h > 1) {
                h = math.sqrt(h);
                rx = h * rx;
                ry = h * ry;
            }
            var rx2 = rx * rx
              , ry2 = ry * ry
              , k = (large_arc_flag == sweep_flag ? -1 : 1) * math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x)))
              , cx = k * rx * y / ry + (x1 + x2) / 2
              , cy = k * -ry * x / rx + (y1 + y2) / 2
              , f1 = math.asin(((y1 - cy) / ry).toFixed(9))
              , f2 = math.asin(((y2 - cy) / ry).toFixed(9));

            f1 = x1 < cx ? PI - f1 : f1;
            f2 = x2 < cx ? PI - f2 : f2;
            f1 < 0 && (f1 = PI * 2 + f1);
            f2 < 0 && (f2 = PI * 2 + f2);
            if (sweep_flag && f1 > f2) {
                f1 = f1 - PI * 2;
            }
            if (!sweep_flag && f2 > f1) {
                f2 = f2 - PI * 2;
            }
        } else {
            f1 = recursive[0];
            f2 = recursive[1];
            cx = recursive[2];
            cy = recursive[3];
        }
        var df = f2 - f1;
        if (abs(df) > _120) {
            var f2old = f2
              , x2old = x2
              , y2old = y2;
            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);
            x2 = cx + rx * math.cos(f2);
            y2 = cy + ry * math.sin(f2);
            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);
        }
        df = f2 - f1;
        var c1 = math.cos(f1)
          , s1 = math.sin(f1)
          , c2 = math.cos(f2)
          , s2 = math.sin(f2)
          , t = math.tan(df / 4)
          , hx = 4 / 3 * rx * t
          , hy = 4 / 3 * ry * t
          , m1 = [x1, y1]
          , m2 = [x1 + hx * s1, y1 - hy * c1]
          , m3 = [x2 + hx * s2, y2 - hy * c2]
          , m4 = [x2, y2];
        m2[0] = 2 * m1[0] - m2[0];
        m2[1] = 2 * m1[1] - m2[1];
        if (recursive) {
            return [m2, m3, m4][concat](res);
        } else {
            res = [m2, m3, m4][concat](res).join()[split](",");
            var newres = [];
            for (var i = 0, ii = res.length; i < ii; i++) {
                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;
            }
            return newres;
        }
    }
      , findDotAtSegment = function(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {
        var t1 = 1 - t;
        return {
            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,
            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y
        };
    }
      , curveDim = cacher(function(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {
        var a = (c2x - 2 * c1x + p1x) - (p2x - 2 * c2x + c1x), b = 2 * (c1x - p1x) - 2 * (c2x - c1x), c = p1x - c1x, t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a, t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a, y = [p1y, p2y], x = [p1x, p2x], dot;
        abs(t1) > "1e12" && (t1 = .5);
        abs(t2) > "1e12" && (t2 = .5);
        if (t1 > 0 && t1 < 1) {
            dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);
            x.push(dot.x);
            y.push(dot.y);
        }
        if (t2 > 0 && t2 < 1) {
            dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);
            x.push(dot.x);
            y.push(dot.y);
        }
        a = (c2y - 2 * c1y + p1y) - (p2y - 2 * c2y + c1y);
        b = 2 * (c1y - p1y) - 2 * (c2y - c1y);
        c = p1y - c1y;
        t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a;
        t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a;
        abs(t1) > "1e12" && (t1 = .5);
        abs(t2) > "1e12" && (t2 = .5);
        if (t1 > 0 && t1 < 1) {
            dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);
            x.push(dot.x);
            y.push(dot.y);
        }
        if (t2 > 0 && t2 < 1) {
            dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);
            x.push(dot.x);
            y.push(dot.y);
        }
        return {
            min: {
                x: mmin[apply](0, x),
                y: mmin[apply](0, y)
            },
            max: {
                x: mmax[apply](0, x),
                y: mmax[apply](0, y)
            }
        };
    })
      , path2curve = R._path2curve = cacher(function(path, path2) {
        var pth = !path2 && paths(path);
        if (!path2 && pth.curve) {
            return pathClone(pth.curve);
        }
        var p = pathToAbsolute(path)
          , p2 = path2 && pathToAbsolute(path2)
          , attrs = {
            x: 0,
            y: 0,
            bx: 0,
            by: 0,
            X: 0,
            Y: 0,
            qx: null,
            qy: null
        }
          , attrs2 = {
            x: 0,
            y: 0,
            bx: 0,
            by: 0,
            X: 0,
            Y: 0,
            qx: null,
            qy: null
        }
          , processPath = function(path, d) {
            var nx, ny;
            if (!path) {
                return ["C", d.x, d.y, d.x, d.y, d.x, d.y];
            }
            !(path[0]in {
                T: 1,
                Q: 1
            }) && (d.qx = d.qy = null);
            switch (path[0]) {
            case "M":
                d.X = path[1];
                d.Y = path[2];
                break;
            case "A":
                path = ["C"][concat](a2c[apply](0, [d.x, d.y][concat](path.slice(1))));
                break;
            case "S":
                nx = d.x + (d.x - (d.bx || d.x));
                ny = d.y + (d.y - (d.by || d.y));
                path = ["C", nx, ny][concat](path.slice(1));
                break;
            case "T":
                d.qx = d.x + (d.x - (d.qx || d.x));
                d.qy = d.y + (d.y - (d.qy || d.y));
                path = ["C"][concat](q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));
                break;
            case "Q":
                d.qx = path[1];
                d.qy = path[2];
                path = ["C"][concat](q2c(d.x, d.y, path[1], path[2], path[3], path[4]));
                break;
            case "L":
                path = ["C"][concat](l2c(d.x, d.y, path[1], path[2]));
                break;
            case "H":
                path = ["C"][concat](l2c(d.x, d.y, path[1], d.y));
                break;
            case "V":
                path = ["C"][concat](l2c(d.x, d.y, d.x, path[1]));
                break;
            case "Z":
                path = ["C"][concat](l2c(d.x, d.y, d.X, d.Y));
                break;
            }
            return path;
        }
          , fixArc = function(pp, i) {
            if (pp[i].length > 7) {
                pp[i].shift();
                var pi = pp[i];
                while (pi.length) {
                    pp.splice(i++, 0, ["C"][concat](pi.splice(0, 6)));
                }
                pp.splice(i, 1);
                ii = mmax(p.length, p2 && p2.length || 0);
            }
        }
          , fixM = function(path1, path2, a1, a2, i) {
            if (path1 && path2 && path1[i][0] == "M" && path2[i][0] != "M") {
                path2.splice(i, 0, ["M", a2.x, a2.y]);
                a1.bx = 0;
                a1.by = 0;
                a1.x = path1[i][1];
                a1.y = path1[i][2];
                ii = mmax(p.length, p2 && p2.length || 0);
            }
        };
        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {
            p[i] = processPath(p[i], attrs);
            fixArc(p, i);
            p2 && (p2[i] = processPath(p2[i], attrs2));
            p2 && fixArc(p2, i);
            fixM(p, p2, attrs, attrs2, i);
            fixM(p2, p, attrs2, attrs, i);
            var seg = p[i]
              , seg2 = p2 && p2[i]
              , seglen = seg.length
              , seg2len = p2 && seg2.length;
            attrs.x = seg[seglen - 2];
            attrs.y = seg[seglen - 1];
            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;
            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;
            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);
            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);
            attrs2.x = p2 && seg2[seg2len - 2];
            attrs2.y = p2 && seg2[seg2len - 1];
        }
        if (!p2) {
            pth.curve = pathClone(p);
        }
        return p2 ? [p, p2] : p;
    }, null, pathClone)
      , parseDots = R._parseDots = cacher(function(gradient) {
        var dots = [];
        for (var i = 0, ii = gradient.length; i < ii; i++) {
            var dot = {}
              , par = gradient[i].match(/^([^:]*):?([\d\.]*)/);
            dot.color = R.getRGB(par[1]);
            if (dot.color.error) {
                return null;
            }
            dot.color = dot.color.hex;
            par[2] && (dot.offset = par[2] + "%");
            dots.push(dot);
        }
        for (i = 1,
        ii = dots.length - 1; i < ii; i++) {
            if (!dots[i].offset) {
                var start = toFloat(dots[i - 1].offset || 0)
                  , end = 0;
                for (var j = i + 1; j < ii; j++) {
                    if (dots[j].offset) {
                        end = dots[j].offset;
                        break;
                    }
                }
                if (!end) {
                    end = 100;
                    j = ii;
                }
                end = toFloat(end);
                var d = (end - start) / (j - i + 1);
                for (; i < j; i++) {
                    start += d;
                    dots[i].offset = start + "%";
                }
            }
        }
        return dots;
    })
      , tear = R._tear = function(el, paper) {
        el == paper.top && (paper.top = el.prev);
        el == paper.bottom && (paper.bottom = el.next);
        el.next && (el.next.prev = el.prev);
        el.prev && (el.prev.next = el.next);
    }
      , tofront = R._tofront = function(el, paper) {
        if (paper.top === el) {
            return;
        }
        tear(el, paper);
        el.next = null;
        el.prev = paper.top;
        paper.top.next = el;
        paper.top = el;
    }
      , toback = R._toback = function(el, paper) {
        if (paper.bottom === el) {
            return;
        }
        tear(el, paper);
        el.next = paper.bottom;
        el.prev = null;
        paper.bottom.prev = el;
        paper.bottom = el;
    }
      , insertafter = R._insertafter = function(el, el2, paper) {
        tear(el, paper);
        el2 == paper.top && (paper.top = el);
        el2.next && (el2.next.prev = el);
        el.next = el2.next;
        el.prev = el2;
        el2.next = el;
    }
      , insertbefore = R._insertbefore = function(el, el2, paper) {
        tear(el, paper);
        el2 == paper.bottom && (paper.bottom = el);
        el2.prev && (el2.prev.next = el);
        el.prev = el2.prev;
        el2.prev = el;
        el.next = el2;
    }
      ,
    toMatrix = R.toMatrix = function(path, transform) {
        var bb = pathDimensions(path)
          , el = {
            _: {
                transform: E
            },
            getBBox: function() {
                return bb;
            }
        };
        extractTransform(el, transform);
        return el.matrix;
    }
      ,
    transformPath = R.transformPath = function(path, transform) {
        return mapPath(path, toMatrix(path, transform));
    }
      , extractTransform = R._extractTransform = function(el, tstr) {
        if (tstr == null) {
            return el._.transform;
        }
        tstr = Str(tstr).replace(/\.{3}|\u2026/g, el._.transform || E);
        var tdata = R.parseTransformString(tstr)
          , deg = 0
          , dx = 0
          , dy = 0
          , sx = 1
          , sy = 1
          , _ = el._
          , m = new Matrix;
        _.transform = tdata || [];
        if (tdata) {
            for (var i = 0, ii = tdata.length; i < ii; i++) {
                var t = tdata[i], tlen = t.length, command = Str(t[0]).toLowerCase(), absolute = t[0] != command, inver = absolute ? m.invert() : 0, x1, y1, x2, y2, bb;
                if (command == "t" && tlen == 3) {
                    if (absolute) {
                        x1 = inver.x(0, 0);
                        y1 = inver.y(0, 0);
                        x2 = inver.x(t[1], t[2]);
                        y2 = inver.y(t[1], t[2]);
                        m.translate(x2 - x1, y2 - y1);
                    } else {
                        m.translate(t[1], t[2]);
                    }
                } else if (command == "r") {
                    if (tlen == 2) {
                        bb = bb || el.getBBox(1);
                        m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);
                        deg += t[1];
                    } else if (tlen == 4) {
                        if (absolute) {
                            x2 = inver.x(t[2], t[3]);
                            y2 = inver.y(t[2], t[3]);
                            m.rotate(t[1], x2, y2);
                        } else {
                            m.rotate(t[1], t[2], t[3]);
                        }
                        deg += t[1];
                    }
                } else if (command == "s") {
                    if (tlen == 2 || tlen == 3) {
                        bb = bb || el.getBBox(1);
                        m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);
                        sx *= t[1];
                        sy *= t[tlen - 1];
                    } else if (tlen == 5) {
                        if (absolute) {
                            x2 = inver.x(t[3], t[4]);
                            y2 = inver.y(t[3], t[4]);
                            m.scale(t[1], t[2], x2, y2);
                        } else {
                            m.scale(t[1], t[2], t[3], t[4]);
                        }
                        sx *= t[1];
                        sy *= t[2];
                    }
                } else if (command == "m" && tlen == 7) {
                    m.add(t[1], t[2], t[3], t[4], t[5], t[6]);
                }
                _.dirtyT = 1;
                el.matrix = m;
            }
        }

        el.matrix = m;

        _.sx = sx;
        _.sy = sy;
        _.deg = deg;
        _.dx = dx = m.e;
        _.dy = dy = m.f;

        if (sx == 1 && sy == 1 && !deg && _.bbox) {
            _.bbox.x += +dx;
            _.bbox.y += +dy;
        } else {
            _.dirtyT = 1;
        }
    }
      , getEmpty = function(item) {
        var l = item[0];
        switch (l.toLowerCase()) {
        case "t":
            return [l, 0, 0];
        case "m":
            return [l, 1, 0, 0, 1, 0, 0];
        case "r":
            if (item.length == 4) {
                return [l, 0, item[2], item[3]];
            } else {
                return [l, 0];
            }
        case "s":
            if (item.length == 5) {
                return [l, 1, 1, item[3], item[4]];
            } else if (item.length == 3) {
                return [l, 1, 1];
            } else {
                return [l, 1];
            }
        }
    }
      , equaliseTransform = R._equaliseTransform = function(t1, t2) {
        t2 = Str(t2).replace(/\.{3}|\u2026/g, t1);
        t1 = R.parseTransformString(t1) || [];
        t2 = R.parseTransformString(t2) || [];
        var maxlength = mmax(t1.length, t2.length), from = [], to = [], i = 0, j, jj, tt1, tt2;
        for (; i < maxlength; i++) {
            tt1 = t1[i] || getEmpty(t2[i]);
            tt2 = t2[i] || getEmpty(tt1);
            if ((tt1[0] != tt2[0]) || (tt1[0].toLowerCase() == "r" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) || (tt1[0].toLowerCase() == "s" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))) {
                return;
            }
            from[i] = [];
            to[i] = [];
            for (j = 0,
            jj = mmax(tt1.length, tt2.length); j < jj; j++) {
                j in tt1 && (from[i][j] = tt1[j]);
                j in tt2 && (to[i][j] = tt2[j]);
            }
        }
        return {
            from: from,
            to: to
        };
    }
    ;
    R._getContainer = function(x, y, w, h) {
        var container;
        container = h == null && !R.is(x, "object") ? g.doc.getElementById(x) : x;
        if (container == null) {
            return;
        }
        if (container.tagName) {
            if (y == null) {
                return {
                    container: container,
                    width: container.style.pixelWidth || container.offsetWidth,
                    height: container.style.pixelHeight || container.offsetHeight
                };
            } else {
                return {
                    container: container,
                    width: y,
                    height: w
                };
            }
        }
        return {
            container: 1,
            x: x,
            y: y,
            width: w,
            height: h
        };
    }
    ;

    R.pathToRelative = pathToRelative;
    R._engine = {};

    R.path2curve = path2curve;

    R.matrix = function(a, b, c, d, e, f) {
        return new Matrix(a,b,c,d,e,f);
    }
    ;
    function Matrix(a, b, c, d, e, f) {
        if (a != null) {
            this.a = +a;
            this.b = +b;
            this.c = +c;
            this.d = +d;
            this.e = +e;
            this.f = +f;
        } else {
            this.a = 1;
            this.b = 0;
            this.c = 0;
            this.d = 1;
            this.e = 0;
            this.f = 0;
        }
    }
    (function(matrixproto) {

        matrixproto.add = function(a, b, c, d, e, f) {
            var out = [[], [], []], m = [[this.a, this.c, this.e], [this.b, this.d, this.f], [0, 0, 1]], matrix = [[a, c, e], [b, d, f], [0, 0, 1]], x, y, z, res;

            if (a && a instanceof Matrix) {
                matrix = [[a.a, a.c, a.e], [a.b, a.d, a.f], [0, 0, 1]];
            }

            for (x = 0; x < 3; x++) {
                for (y = 0; y < 3; y++) {
                    res = 0;
                    for (z = 0; z < 3; z++) {
                        res += m[x][z] * matrix[z][y];
                    }
                    out[x][y] = res;
                }
            }
            this.a = out[0][0];
            this.b = out[1][0];
            this.c = out[0][1];
            this.d = out[1][1];
            this.e = out[0][2];
            this.f = out[1][2];
        }
        ;

        matrixproto.invert = function() {
            var me = this
              , x = me.a * me.d - me.b * me.c;
            return new Matrix(me.d / x,-me.b / x,-me.c / x,me.a / x,(me.c * me.f - me.d * me.e) / x,(me.b * me.e - me.a * me.f) / x);
        }
        ;

        matrixproto.clone = function() {
            return new Matrix(this.a,this.b,this.c,this.d,this.e,this.f);
        }
        ;

        matrixproto.translate = function(x, y) {
            this.add(1, 0, 0, 1, x, y);
        }
        ;

        matrixproto.scale = function(x, y, cx, cy) {
            y == null && (y = x);
            (cx || cy) && this.add(1, 0, 0, 1, cx, cy);
            this.add(x, 0, 0, y, 0, 0);
            (cx || cy) && this.add(1, 0, 0, 1, -cx, -cy);
        }
        ;

        matrixproto.rotate = function(a, x, y) {
            a = R.rad(a);
            x = x || 0;
            y = y || 0;
            var cos = +math.cos(a).toFixed(9)
              , sin = +math.sin(a).toFixed(9);
            this.add(cos, sin, -sin, cos, x, y);
            this.add(1, 0, 0, 1, -x, -y);
        }
        ;

        matrixproto.x = function(x, y) {
            return x * this.a + y * this.c + this.e;
        }
        ;

        matrixproto.y = function(x, y) {
            return x * this.b + y * this.d + this.f;
        }
        ;
        matrixproto.get = function(i) {
            return +this[Str.fromCharCode(97 + i)].toFixed(4);
        }
        ;
        matrixproto.toString = function() {
            return R.svg ? "matrix(" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + ")" : [this.get(0), this.get(2), this.get(1), this.get(3), 0, 0].join();
        }
        ;
        matrixproto.toFilter = function() {
            return "progid:DXImageTransform.Microsoft.Matrix(M11=" + this.get(0) + ", M12=" + this.get(2) + ", M21=" + this.get(1) + ", M22=" + this.get(3) + ", Dx=" + this.get(4) + ", Dy=" + this.get(5) + ", sizingmethod='auto expand')";
        }
        ;
        matrixproto.offset = function() {
            return [this.e.toFixed(4), this.f.toFixed(4)];
        }
        ;
        function norm(a) {
            return a[0] * a[0] + a[1] * a[1];
        }
        function normalize(a) {
            var mag = math.sqrt(norm(a));
            a[0] && (a[0] /= mag);
            a[1] && (a[1] /= mag);
        }

        matrixproto.split = function() {
            var out = {};
            // translation
            out.dx = this.e;
            out.dy = this.f;

            // scale and shear
            var row = [[this.a, this.c], [this.b, this.d]];
            out.scalex = math.sqrt(norm(row[0]));
            normalize(row[0]);

            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];
            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];

            out.scaley = math.sqrt(norm(row[1]));
            normalize(row[1]);
            out.shear /= out.scaley;

            // rotation
            var sin = -row[0][1]
              , cos = row[1][1];
            if (cos < 0) {
                out.rotate = R.deg(math.acos(cos));
                if (sin < 0) {
                    out.rotate = 360 - out.rotate;
                }
            } else {
                out.rotate = R.deg(math.asin(sin));
            }

            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);
            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;
            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;
            return out;
        }
        ;

        matrixproto.toTransformString = function(shorter) {
            var s = shorter || this[split]();
            if (s.isSimple) {
                s.scalex = +s.scalex.toFixed(4);
                s.scaley = +s.scaley.toFixed(4);
                s.rotate = +s.rotate.toFixed(4);
                return (s.dx || s.dy ? "t" + [s.dx, s.dy] : E) + (s.scalex != 1 || s.scaley != 1 ? "s" + [s.scalex, s.scaley, 0, 0] : E) + (s.rotate ? "r" + [s.rotate, 0, 0] : E);
            } else {
                return "m" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];
            }
        }
        ;
    }
    )(Matrix.prototype);

    // WebKit rendering bug workaround method
    var version = navigator.userAgent.match(/Version\/(.*?)\s/) || navigator.userAgent.match(/Chrome\/(\d+)/);
    if ((navigator.vendor == "Apple Computer, Inc.") && (version && version[1] < 4 || navigator.platform.slice(0, 2) == "iP") || (navigator.vendor == "Google Inc." && version && version[1] < 8)) {

        paperproto.safari = function() {
            var rect = this.rect(-99, -99, this.width + 99, this.height + 99).attr({
                stroke: "none"
            });
            setTimeout(function() {
                rect.remove();
            });
        }
        ;
    } else {
        paperproto.safari = fun;
    }

    var preventDefault = function() {
        this.returnValue = false;
    }
      , preventTouch = function() {
        return this.originalEvent.preventDefault();
    }
      , stopPropagation = function() {
        this.cancelBubble = true;
    }
      , stopTouch = function() {
        return this.originalEvent.stopPropagation();
    }
      , addEvent = (function() {
        if (g.doc.addEventListener) {
            return function(obj, type, fn, element) {
                var realName = supportsTouch && touchMap[type] ? touchMap[type] : type
                  , f = function(e) {
                    var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop
                      , scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft
                      , x = e.clientX + scrollX
                      , y = e.clientY + scrollY;
                    if (supportsTouch && touchMap[has](type)) {
                        for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {
                            if (e.targetTouches[i].target == obj) {
                                var olde = e;
                                e = e.targetTouches[i];
                                e.originalEvent = olde;
                                e.preventDefault = preventTouch;
                                e.stopPropagation = stopTouch;
                                break;
                            }
                        }
                    }
                    return fn.call(element, e, x, y);
                };
                obj.addEventListener(realName, f, false);
                return function() {
                    obj.removeEventListener(realName, f, false);
                    return true;
                }
                ;
            }
            ;
        } else if (g.doc.attachEvent) {
            return function(obj, type, fn, element) {
                var f = function(e) {
                    e = e || g.win.event;
                    var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop
                      , scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft
                      , x = e.clientX + scrollX
                      , y = e.clientY + scrollY;
                    e.preventDefault = e.preventDefault || preventDefault;
                    e.stopPropagation = e.stopPropagation || stopPropagation;
                    return fn.call(element, e, x, y);
                };
                obj.attachEvent("on" + type, f);
                var detacher = function() {
                    obj.detachEvent("on" + type, f);
                    return true;
                };
                return detacher;
            }
            ;
        }
    }
    )()
      , drag = []
      , dragMove = function(e) {
        var x = e.clientX, y = e.clientY, scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop, scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft, dragi, j = drag.length;
        while (j--) {
            dragi = drag[j];
            if (supportsTouch) {
                var i = e.touches.length, touch;
                while (i--) {
                    touch = e.touches[i];
                    if (touch.identifier == dragi.el._drag.id) {
                        x = touch.clientX;
                        y = touch.clientY;
                        (e.originalEvent ? e.originalEvent : e).preventDefault();
                        break;
                    }
                }
            } else {
                e.preventDefault();
            }
            var node = dragi.el.node, o, next = node.nextSibling, parent = node.parentNode, display = node.style.display;
            g.win.opera && parent.removeChild(node);
            node.style.display = "none";
            o = dragi.el.paper.getElementByPoint(x, y);
            node.style.display = display;
            g.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));
            o && eve("raphael.drag.over." + dragi.el.id, dragi.el, o);
            x += scrollX;
            y += scrollY;
            eve("raphael.drag.move." + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);
        }
    }
      , dragUp = function(e) {
        R.unmousemove(dragMove).unmouseup(dragUp);
        var i = drag.length, dragi;
        while (i--) {
            dragi = drag[i];
            dragi.el._drag = {};
            eve("raphael.drag.end." + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);
        }
        drag = [];
    }
      ,
    elproto = R.el = {};

    for (var i = events.length; i--; ) {
        (function(eventName) {
            R[eventName] = elproto[eventName] = function(fn, scope) {
                if (R.is(fn, "function")) {
                    this.events = this.events || [];
                    this.events.push({
                        name: eventName,
                        f: fn,
                        unbind: addEvent(this.shape || this.node || g.doc, eventName, fn, scope || this)
                    });
                }
                return this;
            }
            ;
            R["un" + eventName] = elproto["un" + eventName] = function(fn) {
                var events = this.events || []
                  , l = events.length;
                while (l--)
                    if (events[l].name == eventName && events[l].f == fn) {
                        events[l].unbind();
                        events.splice(l, 1);
                        !events.length && delete this.events;
                        return this;
                    }
                return this;
            }
            ;
        }
        )(events[i]);
    }

    elproto.data = function(key, value) {
        var data = eldata[this.id] = eldata[this.id] || {};
        if (arguments.length == 1) {
            if (R.is(key, "object")) {
                for (var i in key)
                    if (key[has](i)) {
                        this.data(i, key[i]);
                    }
                return this;
            }
            eve("raphael.data.get." + this.id, this, data[key], key);
            return data[key];
        }
        data[key] = value;
        eve("raphael.data.set." + this.id, this, value, key);
        return this;
    }
    ;

    elproto.removeData = function(key) {
        if (key == null) {
            eldata[this.id] = {};
        } else {
            eldata[this.id] && delete eldata[this.id][key];
        }
        return this;
    }
    ;

    elproto.hover = function(f_in, f_out, scope_in, scope_out) {
        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);
    }
    ;

    elproto.unhover = function(f_in, f_out) {
        return this.unmouseover(f_in).unmouseout(f_out);
    }
    ;
    var draggable = [];

    elproto.drag = function(onmove, onstart, onend, move_scope, start_scope, end_scope) {
        function start(e) {
            (e.originalEvent || e).preventDefault();
            var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop
              , scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;
            this._drag.x = e.clientX + scrollX;
            this._drag.y = e.clientY + scrollY;
            this._drag.id = e.identifier;
            !drag.length && R.mousemove(dragMove).mouseup(dragUp);
            drag.push({
                el: this,
                move_scope: move_scope,
                start_scope: start_scope,
                end_scope: end_scope
            });
            onstart && eve.on("raphael.drag.start." + this.id, onstart);
            onmove && eve.on("raphael.drag.move." + this.id, onmove);
            onend && eve.on("raphael.drag.end." + this.id, onend);
            eve("raphael.drag.start." + this.id, start_scope || move_scope || this, e.clientX + scrollX, e.clientY + scrollY, e);
        }
        this._drag = {};
        draggable.push({
            el: this,
            start: start
        });
        this.mousedown(start);
        return this;
    }
    ;

    elproto.onDragOver = function(f) {
        f ? eve.on("raphael.drag.over." + this.id, f) : eve.unbind("raphael.drag.over." + this.id);
    }
    ;

    elproto.undrag = function() {
        var i = draggable.length;
        while (i--)
            if (draggable[i].el == this) {
                this.unmousedown(draggable[i].start);
                draggable.splice(i, 1);
                eve.unbind("raphael.drag.*." + this.id);
            }
        !draggable.length && R.unmousemove(dragMove).unmouseup(dragUp);
    }
    ;

    paperproto.circle = function(x, y, r) {
        var out = R._engine.circle(this, x || 0, y || 0, r || 0);
        this.__set__ && this.__set__.push(out);
        return out;
    }
    ;

    paperproto.rect = function(x, y, w, h, r) {
        var out = R._engine.rect(this, x || 0, y || 0, w || 0, h || 0, r || 0);
        this.__set__ && this.__set__.push(out);
        return out;
    }
    ;

    paperproto.ellipse = function(x, y, rx, ry) {
        var out = R._engine.ellipse(this, x || 0, y || 0, rx || 0, ry || 0);
        this.__set__ && this.__set__.push(out);
        return out;
    }
    ;

    paperproto.path = function(pathString) {
        pathString && !R.is(pathString, string) && !R.is(pathString[0], array) && (pathString += E);
        var out = R._engine.path(R.format[apply](R, arguments), this);
        this.__set__ && this.__set__.push(out);
        return out;
    }
    ;

    paperproto.image = function(src, x, y, w, h) {
        var out = R._engine.image(this, src || "about:blank", x || 0, y || 0, w || 0, h || 0);
        this.__set__ && this.__set__.push(out);
        return out;
    }
    ;

    paperproto.text = function(x, y, text) {
        var out = R._engine.text(this, x || 0, y || 0, Str(text));
        this.__set__ && this.__set__.push(out);
        return out;
    }
    ;

    paperproto.set = function(itemsArray) {
        !R.is(itemsArray, "array") && (itemsArray = Array.prototype.splice.call(arguments, 0, arguments.length));
        var out = new Set(itemsArray);
        this.__set__ && this.__set__.push(out);
        return out;
    }
    ;

    paperproto.setStart = function(set) {
        this.__set__ = set || this.set();
    }
    ;

    paperproto.setFinish = function(set) {
        var out = this.__set__;
        delete this.__set__;
        return out;
    }
    ;

    paperproto.setSize = function(width, height) {
        return R._engine.setSize.call(this, width, height);
    }
    ;

    paperproto.setViewBox = function(x, y, w, h, fit) {
        return R._engine.setViewBox.call(this, x, y, w, h, fit);
    }
    ;

    paperproto.top = paperproto.bottom = null;

    paperproto.raphael = R;
    var getOffset = function(elem) {
        var box = elem.getBoundingClientRect()
          , doc = elem.ownerDocument
          , body = doc.body
          , docElem = doc.documentElement
          , clientTop = docElem.clientTop || body.clientTop || 0
          , clientLeft = docElem.clientLeft || body.clientLeft || 0
          , top = box.top + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop) - clientTop
          , left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;
        return {
            y: top,
            x: left
        };
    };

    paperproto.getElementByPoint = function(x, y) {
        var paper = this
          , svg = paper.canvas
          , target = g.doc.elementFromPoint(x, y);
        if (g.win.opera && target.tagName == "svg") {
            var so = getOffset(svg)
              , sr = svg.createSVGRect();
            sr.x = x - so.x;
            sr.y = y - so.y;
            sr.width = sr.height = 1;
            var hits = svg.getIntersectionList(sr, null);
            if (hits.length) {
                target = hits[hits.length - 1];
            }
        }
        if (!target) {
            return null;
        }
        while (target.parentNode && target != svg.parentNode && !target.raphael) {
            target = target.parentNode;
        }
        target == paper.canvas.parentNode && (target = svg);
        target = target && target.raphael ? paper.getById(target.raphaelid) : null;
        return target;
    }
    ;

    paperproto.getById = function(id) {
        var bot = this.bottom;
        while (bot) {
            if (bot.id == id) {
                return bot;
            }
            bot = bot.next;
        }
        return null;
    }
    ;

    paperproto.forEach = function(callback, thisArg) {
        var bot = this.bottom;
        while (bot) {
            if (callback.call(thisArg, bot) === false) {
                return this;
            }
            bot = bot.next;
        }
        return this;
    }
    ;

    paperproto.getElementsByPoint = function(x, y) {
        var set = this.set();
        this.forEach(function(el) {
            if (el.isPointInside(x, y)) {
                set.push(el);
            }
        });
        return set;
    }
    ;
    function x_y() {
        return this.x + S + this.y;
    }
    function x_y_w_h() {
        return this.x + S + this.y + S + this.width + " \xd7 " + this.height;
    }

    elproto.isPointInside = function(x, y) {
        var rp = this.realPath = this.realPath || getPath[this.type](this);
        return R.isPointInsidePath(rp, x, y);
    }
    ;

    elproto.getBBox = function(isWithoutTransform) {
        if (this.removed) {
            return {};
        }
        var _ = this._;
        if (isWithoutTransform) {
            if (_.dirty || !_.bboxwt) {
                this.realPath = getPath[this.type](this);
                _.bboxwt = pathDimensions(this.realPath);
                _.bboxwt.toString = x_y_w_h;
                _.dirty = 0;
            }
            return _.bboxwt;
        }
        if (_.dirty || _.dirtyT || !_.bbox) {
            if (_.dirty || !this.realPath) {
                _.bboxwt = 0;
                this.realPath = getPath[this.type](this);
            }
            _.bbox = pathDimensions(mapPath(this.realPath, this.matrix));
            _.bbox.toString = x_y_w_h;
            _.dirty = _.dirtyT = 0;
        }
        return _.bbox;
    }
    ;

    elproto.clone = function() {
        if (this.removed) {
            return null;
        }
        var out = this.paper[this.type]().attr(this.attr());
        this.__set__ && this.__set__.push(out);
        return out;
    }
    ;

    elproto.glow = function(glow) {
        if (this.type == "text") {
            return null;
        }
        glow = glow || {};
        var s = {
            width: (glow.width || 10) + (+this.attr("stroke-width") || 1),
            fill: glow.fill || false,
            opacity: glow.opacity || .5,
            offsetx: glow.offsetx || 0,
            offsety: glow.offsety || 0,
            color: glow.color || "#000"
        }
          , c = s.width / 2
          , r = this.paper
          , out = r.set()
          , path = this.realPath || getPath[this.type](this);
        path = this.matrix ? mapPath(path, this.matrix) : path;
        for (var i = 1; i < c + 1; i++) {
            out.push(r.path(path).attr({
                stroke: s.color,
                fill: s.fill ? s.color : "none",
                "stroke-linejoin": "round",
                "stroke-linecap": "round",
                "stroke-width": +(s.width / c * i).toFixed(3),
                opacity: +(s.opacity / c).toFixed(3)
            }));
        }
        return out.insertBefore(this).translate(s.offsetx, s.offsety);
    }
    ;
    var curveslengths = {}
      , getPointAtSegmentLength = function(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {
        if (length == null) {
            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);
        } else {
            return R.findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, getTatLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));
        }
    }
      , getLengthFactory = function(istotal, subpath) {
        return function(path, length, onlystart) {
            path = path2curve(path);
            var x, y, p, l, sp = "", subpaths = {}, point, len = 0;
            for (var i = 0, ii = path.length; i < ii; i++) {
                p = path[i];
                if (p[0] == "M") {
                    x = +p[1];
                    y = +p[2];
                } else {
                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);
                    if (len + l > length) {
                        if (subpath && !subpaths.start) {
                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);
                            sp += ["C" + point.start.x, point.start.y, point.m.x, point.m.y, point.x, point.y];
                            if (onlystart) {
                                return sp;
                            }
                            subpaths.start = sp;
                            sp = ["M" + point.x, point.y + "C" + point.n.x, point.n.y, point.end.x, point.end.y, p[5], p[6]].join();
                            len += l;
                            x = +p[5];
                            y = +p[6];
                            continue;
                        }
                        if (!istotal && !subpath) {
                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);
                            return {
                                x: point.x,
                                y: point.y,
                                alpha: point.alpha
                            };
                        }
                    }
                    len += l;
                    x = +p[5];
                    y = +p[6];
                }
                sp += p.shift() + p;
            }
            subpaths.end = sp;
            point = istotal ? len : subpath ? subpaths : R.findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);
            point.alpha && (point = {
                x: point.x,
                y: point.y,
                alpha: point.alpha
            });
            return point;
        }
        ;
    };
    var getTotalLength = getLengthFactory(1)
      , getPointAtLength = getLengthFactory()
      , getSubpathsAtLength = getLengthFactory(0, 1);

    R.getTotalLength = getTotalLength;

    R.getPointAtLength = getPointAtLength;

    R.getSubpath = function(path, from, to) {
        if (this.getTotalLength(path) - to < 1e-6) {
            return getSubpathsAtLength(path, from).end;
        }
        var a = getSubpathsAtLength(path, to, 1);
        return from ? getSubpathsAtLength(a, from).end : a;
    }
    ;

    elproto.getTotalLength = function() {
        if (this.type != "path") {
            return;
        }
        if (this.node.getTotalLength) {
            return this.node.getTotalLength();
        }
        return getTotalLength(this.attrs.path);
    }
    ;

    elproto.getPointAtLength = function(length) {
        if (this.type != "path") {
            return;
        }
        return getPointAtLength(this.attrs.path, length);
    }
    ;

    elproto.getSubpath = function(from, to) {
        if (this.type != "path") {
            return;
        }
        return R.getSubpath(this.attrs.path, from, to);
    }
    ;

    var ef = R.easing_formulas = {
        linear: function(n) {
            return n;
        },
        "<": function(n) {
            return pow(n, 1.7);
        },
        ">": function(n) {
            return pow(n, .48);
        },
        "<>": function(n) {
            var q = .48 - n / 1.04
              , Q = math.sqrt(.1734 + q * q)
              , x = Q - q
              , X = pow(abs(x), 1 / 3) * (x < 0 ? -1 : 1)
              , y = -Q - q
              , Y = pow(abs(y), 1 / 3) * (y < 0 ? -1 : 1)
              , t = X + Y + .5;
            return (1 - t) * 3 * t * t + t * t * t;
        },
        backIn: function(n) {
            var s = 1.70158;
            return n * n * ((s + 1) * n - s);
        },
        backOut: function(n) {
            n = n - 1;
            var s = 1.70158;
            return n * n * ((s + 1) * n + s) + 1;
        },
        elastic: function(n) {
            if (n == !!n) {
                return n;
            }
            return pow(2, -10 * n) * math.sin((n - .075) * (2 * PI) / .3) + 1;
        },
        bounce: function(n) {
            var s = 7.5625, p = 2.75, l;
            if (n < (1 / p)) {
                l = s * n * n;
            } else {
                if (n < (2 / p)) {
                    n -= (1.5 / p);
                    l = s * n * n + .75;
                } else {
                    if (n < (2.5 / p)) {
                        n -= (2.25 / p);
                        l = s * n * n + .9375;
                    } else {
                        n -= (2.625 / p);
                        l = s * n * n + .984375;
                    }
                }
            }
            return l;
        }
    };
    ef.easeIn = ef["ease-in"] = ef["<"];
    ef.easeOut = ef["ease-out"] = ef[">"];
    ef.easeInOut = ef["ease-in-out"] = ef["<>"];
    ef["back-in"] = ef.backIn;
    ef["back-out"] = ef.backOut;

    var animationElements = []
      , requestAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback) {
        setTimeout(callback, 16);
    }
      , animation = function() {
        var Now = +new Date
          , l = 0;
        for (; l < animationElements.length; l++) {
            var e = animationElements[l];
            if (e.el.removed || e.paused) {
                continue;
            }
            var time = Now - e.start, ms = e.ms, easing = e.easing, from = e.from, diff = e.diff, to = e.to, t = e.t, that = e.el, set = {}, now, init = {}, key;
            if (e.initstatus) {
                time = (e.initstatus * e.anim.top - e.prev) / (e.percent - e.prev) * ms;
                e.status = e.initstatus;
                delete e.initstatus;
                e.stop && animationElements.splice(l--, 1);
            } else {
                e.status = (e.prev + (e.percent - e.prev) * (time / ms)) / e.anim.top;
            }
            if (time < 0) {
                continue;
            }
            if (time < ms) {
                var pos = easing(time / ms);
                for (var attr in from)
                    if (from[has](attr)) {
                        switch (availableAnimAttrs[attr]) {
                        case nu:
                            now = +from[attr] + pos * ms * diff[attr];
                            break;
                        case "colour":
                            now = "rgb(" + [upto255(round(from[attr].r + pos * ms * diff[attr].r)), upto255(round(from[attr].g + pos * ms * diff[attr].g)), upto255(round(from[attr].b + pos * ms * diff[attr].b))].join(",") + ")";
                            break;
                        case "path":
                            now = [];
                            for (var i = 0, ii = from[attr].length; i < ii; i++) {
                                now[i] = [from[attr][i][0]];
                                for (var j = 1, jj = from[attr][i].length; j < jj; j++) {
                                    now[i][j] = +from[attr][i][j] + pos * ms * diff[attr][i][j];
                                }
                                now[i] = now[i].join(S);
                            }
                            now = now.join(S);
                            break;
                        case "transform":
                            if (diff[attr].real) {
                                now = [];
                                for (i = 0,
                                ii = from[attr].length; i < ii; i++) {
                                    now[i] = [from[attr][i][0]];
                                    for (j = 1,
                                    jj = from[attr][i].length; j < jj; j++) {
                                        now[i][j] = from[attr][i][j] + pos * ms * diff[attr][i][j];
                                    }
                                }
                            } else {
                                var get = function(i) {
                                    return +from[attr][i] + pos * ms * diff[attr][i];
                                };
                                // now = [["r", get(2), 0, 0], ["t", get(3), get(4)], ["s", get(0), get(1), 0, 0]];
                                now = [["m", get(0), get(1), get(2), get(3), get(4), get(5)]];
                            }
                            break;
                        case "csv":
                            if (attr == "clip-rect") {
                                now = [];
                                i = 4;
                                while (i--) {
                                    now[i] = +from[attr][i] + pos * ms * diff[attr][i];
                                }
                            }
                            break;
                        default:
                            var from2 = [][concat](from[attr]);
                            now = [];
                            i = that.paper.customAttributes[attr].length;
                            while (i--) {
                                now[i] = +from2[i] + pos * ms * diff[attr][i];
                            }
                            break;
                        }
                        set[attr] = now;
                    }
                that.attr(set);
                (function(id, that, anim) {
                    setTimeout(function() {
                        eve("raphael.anim.frame." + id, that, anim);
                    });
                }
                )(that.id, that, e.anim);
            } else {
                (function(f, el, a) {
                    setTimeout(function() {
                        eve("raphael.anim.frame." + el.id, el, a);
                        eve("raphael.anim.finish." + el.id, el, a);
                        R.is(f, "function") && f.call(el);
                    });
                }
                )(e.callback, that, e.anim);
                that.attr(to);
                animationElements.splice(l--, 1);
                if (e.repeat > 1 && !e.next) {
                    for (key in to)
                        if (to[has](key)) {
                            init[key] = e.totalOrigin[key];
                        }
                    e.el.attr(init);
                    runAnimation(e.anim, e.el, e.anim.percents[0], null, e.totalOrigin, e.repeat - 1);
                }
                if (e.next && !e.stop) {
                    runAnimation(e.anim, e.el, e.next, null, e.totalOrigin, e.repeat);
                }
            }
        }
        R.svg && that && that.paper && that.paper.safari();
        animationElements.length && requestAnimFrame(animation);
    }
      , upto255 = function(color) {
        return color > 255 ? 255 : color < 0 ? 0 : color;
    };

    elproto.animateWith = function(el, anim, params, ms, easing, callback) {
        var element = this;
        if (element.removed) {
            callback && callback.call(element);
            return element;
        }
        var a = params instanceof Animation ? params : R.animation(params, ms, easing, callback), x, y;
        runAnimation(a, element, a.percents[0], null, element.attr());
        for (var i = 0, ii = animationElements.length; i < ii; i++) {
            if (animationElements[i].anim == anim && animationElements[i].el == el) {
                animationElements[ii - 1].start = animationElements[i].start;
                break;
            }
        }
        return element;
        // 
        // 
        // var a = params ? R.animation(params, ms, easing, callback) : anim,
        //     status = element.status(anim);
        // return this.animate(a).status(a, status * anim.ms / a.ms);
    }
    ;
    function CubicBezierAtTime(t, p1x, p1y, p2x, p2y, duration) {
        var cx = 3 * p1x
          , bx = 3 * (p2x - p1x) - cx
          , ax = 1 - cx - bx
          , cy = 3 * p1y
          , by = 3 * (p2y - p1y) - cy
          , ay = 1 - cy - by;
        function sampleCurveX(t) {
            return ((ax * t + bx) * t + cx) * t;
        }
        function solve(x, epsilon) {
            var t = solveCurveX(x, epsilon);
            return ((ay * t + by) * t + cy) * t;
        }
        function solveCurveX(x, epsilon) {
            var t0, t1, t2, x2, d2, i;
            for (t2 = x,
            i = 0; i < 8; i++) {
                x2 = sampleCurveX(t2) - x;
                if (abs(x2) < epsilon) {
                    return t2;
                }
                d2 = (3 * ax * t2 + 2 * bx) * t2 + cx;
                if (abs(d2) < 1e-6) {
                    break;
                }
                t2 = t2 - x2 / d2;
            }
            t0 = 0;
            t1 = 1;
            t2 = x;
            if (t2 < t0) {
                return t0;
            }
            if (t2 > t1) {
                return t1;
            }
            while (t0 < t1) {
                x2 = sampleCurveX(t2);
                if (abs(x2 - x) < epsilon) {
                    return t2;
                }
                if (x > x2) {
                    t0 = t2;
                } else {
                    t1 = t2;
                }
                t2 = (t1 - t0) / 2 + t0;
            }
            return t2;
        }
        return solve(t, 1 / (200 * duration));
    }
    elproto.onAnimation = function(f) {
        f ? eve.on("raphael.anim.frame." + this.id, f) : eve.unbind("raphael.anim.frame." + this.id);
        return this;
    }
    ;
    function Animation(anim, ms) {
        var percents = []
          , newAnim = {};
        this.ms = ms;
        this.times = 1;
        if (anim) {
            for (var attr in anim)
                if (anim[has](attr)) {
                    newAnim[toFloat(attr)] = anim[attr];
                    percents.push(toFloat(attr));
                }
            percents.sort(sortByNumber);
        }
        this.anim = newAnim;
        this.top = percents[percents.length - 1];
        this.percents = percents;
    }

    Animation.prototype.delay = function(delay) {
        var a = new Animation(this.anim,this.ms);
        a.times = this.times;
        a.del = +delay || 0;
        return a;
    }
    ;

    Animation.prototype.repeat = function(times) {
        var a = new Animation(this.anim,this.ms);
        a.del = this.del;
        a.times = math.floor(mmax(times, 0)) || 1;
        return a;
    }
    ;
    function runAnimation(anim, element, percent, status, totalOrigin, times) {
        percent = toFloat(percent);
        var params, isInAnim, isInAnimSet, percents = [], next, prev, timestamp, ms = anim.ms, from = {}, to = {}, diff = {};
        if (status) {
            for (i = 0,
            ii = animationElements.length; i < ii; i++) {
                var e = animationElements[i];
                if (e.el.id == element.id && e.anim == anim) {
                    if (e.percent != percent) {
                        animationElements.splice(i, 1);
                        isInAnimSet = 1;
                    } else {
                        isInAnim = e;
                    }
                    element.attr(e.totalOrigin);
                    break;
                }
            }
        } else {
            status = +to;
            // NaN
        }
        for (var i = 0, ii = anim.percents.length; i < ii; i++) {
            if (anim.percents[i] == percent || anim.percents[i] > status * anim.top) {
                percent = anim.percents[i];
                prev = anim.percents[i - 1] || 0;
                ms = ms / anim.top * (percent - prev);
                next = anim.percents[i + 1];
                params = anim.anim[percent];
                break;
            } else if (status) {
                element.attr(anim.anim[anim.percents[i]]);
            }
        }
        if (!params) {
            return;
        }
        if (!isInAnim) {
            for (var attr in params)
                if (params[has](attr)) {
                    if (availableAnimAttrs[has](attr) || element.paper.customAttributes[has](attr)) {
                        from[attr] = element.attr(attr);
                        (from[attr] == null) && (from[attr] = availableAttrs[attr]);
                        to[attr] = params[attr];
                        switch (availableAnimAttrs[attr]) {
                        case nu:
                            diff[attr] = (to[attr] - from[attr]) / ms;
                            break;
                        case "colour":
                            from[attr] = R.getRGB(from[attr]);
                            var toColour = R.getRGB(to[attr]);
                            diff[attr] = {
                                r: (toColour.r - from[attr].r) / ms,
                                g: (toColour.g - from[attr].g) / ms,
                                b: (toColour.b - from[attr].b) / ms
                            };
                            break;
                        case "path":
                            var pathes = path2curve(from[attr], to[attr])
                              , toPath = pathes[1];
                            from[attr] = pathes[0];
                            diff[attr] = [];
                            for (i = 0,
                            ii = from[attr].length; i < ii; i++) {
                                diff[attr][i] = [0];
                                for (var j = 1, jj = from[attr][i].length; j < jj; j++) {
                                    diff[attr][i][j] = (toPath[i][j] - from[attr][i][j]) / ms;
                                }
                            }
                            break;
                        case "transform":
                            var _ = element._
                              , eq = equaliseTransform(_[attr], to[attr]);
                            if (eq) {
                                from[attr] = eq.from;
                                to[attr] = eq.to;
                                diff[attr] = [];
                                diff[attr].real = true;
                                for (i = 0,
                                ii = from[attr].length; i < ii; i++) {
                                    diff[attr][i] = [from[attr][i][0]];
                                    for (j = 1,
                                    jj = from[attr][i].length; j < jj; j++) {
                                        diff[attr][i][j] = (to[attr][i][j] - from[attr][i][j]) / ms;
                                    }
                                }
                            } else {
                                var m = (element.matrix || new Matrix)
                                  , to2 = {
                                    _: {
                                        transform: _.transform
                                    },
                                    getBBox: function() {
                                        return element.getBBox(1);
                                    }
                                };
                                from[attr] = [m.a, m.b, m.c, m.d, m.e, m.f];
                                extractTransform(to2, to[attr]);
                                to[attr] = to2._.transform;
                                diff[attr] = [(to2.matrix.a - m.a) / ms, (to2.matrix.b - m.b) / ms, (to2.matrix.c - m.c) / ms, (to2.matrix.d - m.d) / ms, (to2.matrix.e - m.e) / ms, (to2.matrix.f - m.f) / ms];
                                // from[attr] = [_.sx, _.sy, _.deg, _.dx, _.dy];
                                // var to2 = {_:{}, getBBox: function () { return element.getBBox(); }};
                                // extractTransform(to2, to[attr]);
                                // diff[attr] = [
                                //     (to2._.sx - _.sx) / ms,
                                //     (to2._.sy - _.sy) / ms,
                                //     (to2._.deg - _.deg) / ms,
                                //     (to2._.dx - _.dx) / ms,
                                //     (to2._.dy - _.dy) / ms
                                // ];
                            }
                            break;
                        case "csv":
                            var values = Str(params[attr])[split](separator)
                              , from2 = Str(from[attr])[split](separator);
                            if (attr == "clip-rect") {
                                from[attr] = from2;
                                diff[attr] = [];
                                i = from2.length;
                                while (i--) {
                                    diff[attr][i] = (values[i] - from[attr][i]) / ms;
                                }
                            }
                            to[attr] = values;
                            break;
                        default:
                            values = [][concat](params[attr]);
                            from2 = [][concat](from[attr]);
                            diff[attr] = [];
                            i = element.paper.customAttributes[attr].length;
                            while (i--) {
                                diff[attr][i] = ((values[i] || 0) - (from2[i] || 0)) / ms;
                            }
                            break;
                        }
                    }
                }
            var easing = params.easing
              , easyeasy = R.easing_formulas[easing];
            if (!easyeasy) {
                easyeasy = Str(easing).match(bezierrg);
                if (easyeasy && easyeasy.length == 5) {
                    var curve = easyeasy;
                    easyeasy = function(t) {
                        return CubicBezierAtTime(t, +curve[1], +curve[2], +curve[3], +curve[4], ms);
                    }
                    ;
                } else {
                    easyeasy = pipe;
                }
            }
            timestamp = params.start || anim.start || +new Date;
            e = {
                anim: anim,
                percent: percent,
                timestamp: timestamp,
                start: timestamp + (anim.del || 0),
                status: 0,
                initstatus: status || 0,
                stop: false,
                ms: ms,
                easing: easyeasy,
                from: from,
                diff: diff,
                to: to,
                el: element,
                callback: params.callback,
                prev: prev,
                next: next,
                repeat: times || anim.times,
                origin: element.attr(),
                totalOrigin: totalOrigin
            };
            animationElements.push(e);
            if (status && !isInAnim && !isInAnimSet) {
                e.stop = true;
                e.start = new Date - ms * status;
                if (animationElements.length == 1) {
                    return animation();
                }
            }
            if (isInAnimSet) {
                e.start = new Date - e.ms * status;
            }
            animationElements.length == 1 && requestAnimFrame(animation);
        } else {
            isInAnim.initstatus = status;
            isInAnim.start = new Date - isInAnim.ms * status;
        }
        eve("raphael.anim.start." + element.id, element, anim);
    }

    R.animation = function(params, ms, easing, callback) {
        if (params instanceof Animation) {
            return params;
        }
        if (R.is(easing, "function") || !easing) {
            callback = callback || easing || null;
            easing = null;
        }
        params = Object(params);
        ms = +ms || 0;
        var p = {}, json, attr;
        for (attr in params)
            if (params[has](attr) && toFloat(attr) != attr && toFloat(attr) + "%" != attr) {
                json = true;
                p[attr] = params[attr];
            }
        if (!json) {
            return new Animation(params,ms);
        } else {
            easing && (p.easing = easing);
            callback && (p.callback = callback);
            return new Animation({
                100: p
            },ms);
        }
    }
    ;

    elproto.animate = function(params, ms, easing, callback) {
        var element = this;
        if (element.removed) {
            callback && callback.call(element);
            return element;
        }
        var anim = params instanceof Animation ? params : R.animation(params, ms, easing, callback);
        runAnimation(anim, element, anim.percents[0], null, element.attr());
        return element;
    }
    ;

    elproto.setTime = function(anim, value) {
        if (anim && value != null) {
            this.status(anim, mmin(value, anim.ms) / anim.ms);
        }
        return this;
    }
    ;

    elproto.status = function(anim, value) {
        var out = [], i = 0, len, e;
        if (value != null) {
            runAnimation(anim, this, -1, mmin(value, 1));
            return this;
        } else {
            len = animationElements.length;
            for (; i < len; i++) {
                e = animationElements[i];
                if (e.el.id == this.id && (!anim || e.anim == anim)) {
                    if (anim) {
                        return e.status;
                    }
                    out.push({
                        anim: e.anim,
                        status: e.status
                    });
                }
            }
            if (anim) {
                return 0;
            }
            return out;
        }
    }
    ;

    elproto.pause = function(anim) {
        for (var i = 0; i < animationElements.length; i++)
            if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {
                if (eve("raphael.anim.pause." + this.id, this, animationElements[i].anim) !== false) {
                    animationElements[i].paused = true;
                }
            }
        return this;
    }
    ;

    elproto.resume = function(anim) {
        for (var i = 0; i < animationElements.length; i++)
            if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {
                var e = animationElements[i];
                if (eve("raphael.anim.resume." + this.id, this, e.anim) !== false) {
                    delete e.paused;
                    this.status(e.anim, e.status);
                }
            }
        return this;
    }
    ;

    elproto.stop = function(anim) {
        for (var i = 0; i < animationElements.length; i++)
            if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {
                if (eve("raphael.anim.stop." + this.id, this, animationElements[i].anim) !== false) {
                    animationElements.splice(i--, 1);
                }
            }
        return this;
    }
    ;
    function stopAnimation(paper) {
        for (var i = 0; i < animationElements.length; i++)
            if (animationElements[i].el.paper == paper) {
                animationElements.splice(i--, 1);
            }
    }
    eve.on("raphael.remove", stopAnimation);
    eve.on("raphael.clear", stopAnimation);
    elproto.toString = function() {
        return "Rapha\xebl\u2019s object";
    }
    ;

    // Set
    var Set = function(items) {
        this.items = [];
        this.length = 0;
        this.type = "set";
        if (items) {
            for (var i = 0, ii = items.length; i < ii; i++) {
                if (items[i] && (items[i].constructor == elproto.constructor || items[i].constructor == Set)) {
                    this[this.items.length] = this.items[this.items.length] = items[i];
                    this.length++;
                }
            }
        }
    }
      , setproto = Set.prototype;

    setproto.push = function() {
        var item, len;
        for (var i = 0, ii = arguments.length; i < ii; i++) {
            item = arguments[i];
            if (item && (item.constructor == elproto.constructor || item.constructor == Set)) {
                len = this.items.length;
                this[len] = this.items[len] = item;
                this.length++;
            }
        }
        return this;
    }
    ;

    setproto.pop = function() {
        this.length && delete this[this.length--];
        return this.items.pop();
    }
    ;

    setproto.forEach = function(callback, thisArg) {
        for (var i = 0, ii = this.items.length; i < ii; i++) {
            if (callback.call(thisArg, this.items[i], i) === false) {
                return this;
            }
        }
        return this;
    }
    ;
    for (var method in elproto)
        if (elproto[has](method)) {
            setproto[method] = (function(methodname) {
                return function() {
                    var arg = arguments;
                    return this.forEach(function(el) {
                        el[methodname][apply](el, arg);
                    });
                }
                ;
            }
            )(method);
        }
    setproto.attr = function(name, value) {
        if (name && R.is(name, array) && R.is(name[0], "object")) {
            for (var j = 0, jj = name.length; j < jj; j++) {
                this.items[j].attr(name[j]);
            }
        } else {
            for (var i = 0, ii = this.items.length; i < ii; i++) {
                this.items[i].attr(name, value);
            }
        }
        return this;
    }
    ;

    setproto.clear = function() {
        while (this.length) {
            this.pop();
        }
    }
    ;

    setproto.splice = function(index, count, insertion) {
        index = index < 0 ? mmax(this.length + index, 0) : index;
        count = mmax(0, mmin(this.length - index, count));
        var tail = [], todel = [], args = [], i;
        for (i = 2; i < arguments.length; i++) {
            args.push(arguments[i]);
        }
        for (i = 0; i < count; i++) {
            todel.push(this[index + i]);
        }
        for (; i < this.length - index; i++) {
            tail.push(this[index + i]);
        }
        var arglen = args.length;
        for (i = 0; i < arglen + tail.length; i++) {
            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];
        }
        i = this.items.length = this.length -= count - arglen;
        while (this[i]) {
            delete this[i++];
        }
        return new Set(todel);
    }
    ;

    setproto.exclude = function(el) {
        for (var i = 0, ii = this.length; i < ii; i++)
            if (this[i] == el) {
                this.splice(i, 1);
                return true;
            }
    }
    ;
    setproto.animate = function(params, ms, easing, callback) {
        (R.is(easing, "function") || !easing) && (callback = easing || null);
        var len = this.items.length, i = len, item, set = this, collector;
        if (!len) {
            return this;
        }
        callback && (collector = function() {
            !--len && callback.call(set);
        }
        );
        easing = R.is(easing, string) ? easing : collector;
        var anim = R.animation(params, ms, easing, collector);
        item = this.items[--i].animate(anim);
        while (i--) {
            this.items[i] && !this.items[i].removed && this.items[i].animateWith(item, anim, anim);
        }
        return this;
    }
    ;
    setproto.insertAfter = function(el) {
        var i = this.items.length;
        while (i--) {
            this.items[i].insertAfter(el);
        }
        return this;
    }
    ;
    setproto.getBBox = function() {
        var x = []
          , y = []
          , x2 = []
          , y2 = [];
        for (var i = this.items.length; i--; )
            if (!this.items[i].removed) {
                var box = this.items[i].getBBox();
                x.push(box.x);
                y.push(box.y);
                x2.push(box.x + box.width);
                y2.push(box.y + box.height);
            }
        x = mmin[apply](0, x);
        y = mmin[apply](0, y);
        x2 = mmax[apply](0, x2);
        y2 = mmax[apply](0, y2);
        return {
            x: x,
            y: y,
            x2: x2,
            y2: y2,
            width: x2 - x,
            height: y2 - y
        };
    }
    ;
    setproto.clone = function(s) {
        s = new Set;
        for (var i = 0, ii = this.items.length; i < ii; i++) {
            s.push(this.items[i].clone());
        }
        return s;
    }
    ;
    setproto.toString = function() {
        return "Rapha\xebl\u2018s set";
    }
    ;

    R.registerFont = function(font) {
        if (!font.face) {
            return font;
        }
        this.fonts = this.fonts || {};
        var fontcopy = {
            w: font.w,
            face: {},
            glyphs: {}
        }
          , family = font.face["font-family"];
        for (var prop in font.face)
            if (font.face[has](prop)) {
                fontcopy.face[prop] = font.face[prop];
            }
        if (this.fonts[family]) {
            this.fonts[family].push(fontcopy);
        } else {
            this.fonts[family] = [fontcopy];
        }
        if (!font.svg) {
            fontcopy.face["units-per-em"] = toInt(font.face["units-per-em"], 10);
            for (var glyph in font.glyphs)
                if (font.glyphs[has](glyph)) {
                    var path = font.glyphs[glyph];
                    fontcopy.glyphs[glyph] = {
                        w: path.w,
                        k: {},
                        d: path.d && "M" + path.d.replace(/[mlcxtrv]/g, function(command) {
                            return {
                                l: "L",
                                c: "C",
                                x: "z",
                                t: "m",
                                r: "l",
                                v: "c"
                            }[command] || "M";
                        }) + "z"
                    };
                    if (path.k) {
                        for (var k in path.k)
                            if (path[has](k)) {
                                fontcopy.glyphs[glyph].k[k] = path.k[k];
                            }
                    }
                }
        }
        return font;
    }
    ;

    paperproto.getFont = function(family, weight, style, stretch) {
        stretch = stretch || "normal";
        style = style || "normal";
        weight = +weight || {
            normal: 400,
            bold: 700,
            lighter: 300,
            bolder: 800
        }[weight] || 400;
        if (!R.fonts) {
            return;
        }
        var font = R.fonts[family];
        if (!font) {
            var name = new RegExp("(^|\\s)" + family.replace(/[^\w\d\s+!~.:_-]/g, E) + "(\\s|$)","i");
            for (var fontName in R.fonts)
                if (R.fonts[has](fontName)) {
                    if (name.test(fontName)) {
                        font = R.fonts[fontName];
                        break;
                    }
                }
        }
        var thefont;
        if (font) {
            for (var i = 0, ii = font.length; i < ii; i++) {
                thefont = font[i];
                if (thefont.face["font-weight"] == weight && (thefont.face["font-style"] == style || !thefont.face["font-style"]) && thefont.face["font-stretch"] == stretch) {
                    break;
                }
            }
        }
        return thefont;
    }
    ;

    paperproto.print = function(x, y, string, font, size, origin, letter_spacing) {
        origin = origin || "middle";
        // baseline|middle
        letter_spacing = mmax(mmin(letter_spacing || 0, 1), -1);
        var letters = Str(string)[split](E), shift = 0, notfirst = 0, path = E, scale;
        R.is(font, string) && (font = this.getFont(font));
        if (font) {
            scale = (size || 16) / font.face["units-per-em"];
            var bb = font.face.bbox[split](separator)
              , top = +bb[0]
              , lineHeight = bb[3] - bb[1]
              , shifty = 0
              , height = +bb[1] + (origin == "baseline" ? lineHeight + (+font.face.descent) : lineHeight / 2);
            for (var i = 0, ii = letters.length; i < ii; i++) {
                if (letters[i] == "\n") {
                    shift = 0;
                    curr = 0;
                    notfirst = 0;
                    shifty += lineHeight;
                } else {
                    var prev = notfirst && font.glyphs[letters[i - 1]] || {}
                      , curr = font.glyphs[letters[i]];
                    shift += notfirst ? (prev.w || font.w) + (prev.k && prev.k[letters[i]] || 0) + (font.w * letter_spacing) : 0;
                    notfirst = 1;
                }
                if (curr && curr.d) {
                    path += R.transformPath(curr.d, ["t", shift * scale, shifty * scale, "s", scale, scale, top, height, "t", (x - top) / scale, (y - height) / scale]);
                }
            }
        }
        return this.path(path).attr({
            fill: "#000",
            stroke: "none"
        });
    }
    ;

    paperproto.add = function(json) {
        if (R.is(json, "array")) {
            var res = this.set(), i = 0, ii = json.length, j;
            for (; i < ii; i++) {
                j = json[i] || {};
                elements[has](j.type) && res.push(this[j.type]().attr(j));
            }
        }
        return res;
    }
    ;

    R.format = function(token, params) {
        var args = R.is(params, array) ? [0][concat](params) : arguments;
        token && R.is(token, string) && args.length - 1 && (token = token.replace(formatrg, function(str, i) {
            return args[++i] == null ? E : args[i];
        }));
        return token || E;
    }
    ;

    R.fullfill = (function() {
        var tokenRegex = /\{([^\}]+)\}/g
          , objNotationRegex = /(?:(?:^|\.)(.+?)(?=\[|\.|$|\()|\[('|")(.+?)\2\])(\(\))?/g
          , // matches .xxxxx or ["xxxxx"] to run over object properties
        replacer = function(all, key, obj) {
            var res = obj;
            key.replace(objNotationRegex, function(all, name, quote, quotedName, isFunc) {
                name = name || quotedName;
                if (res) {
                    if (name in res) {
                        res = res[name];
                    }
                    typeof res == "function" && isFunc && (res = res());
                }
            });
            res = (res == null || res == obj ? all : res) + "";
            return res;
        };
        return function(str, obj) {
            return String(str).replace(tokenRegex, function(all, key) {
                return replacer(all, key, obj);
            });
        }
        ;
    }
    )();

    R.ninja = function() {
        oldRaphael.was ? (g.win.Raphael = oldRaphael.is) : delete Raphael;
        return R;
    }
    ;

    R.st = setproto;
    // Firefox <3.6 fix: http://webreflection.blogspot.com/2009/11/195-chars-to-help-lazy-loading.html
    (function(doc, loaded, f) {
        if (doc.readyState == null && doc.addEventListener) {
            doc.addEventListener(loaded, f = function() {
                doc.removeEventListener(loaded, f, false);
                doc.readyState = "complete";
            }
            , false);
            doc.readyState = "loading";
        }
        function isLoaded() {
            (/in/).test(doc.readyState) ? setTimeout(isLoaded, 9) : R.eve("raphael.DOMload");
        }
        isLoaded();
    }
    )(document, "DOMContentLoaded");

    oldRaphael.was ? (g.win.Raphael = R) : (Raphael = R);

    eve.on("raphael.DOMload", function() {
        loaded = true;
    });
}
)();

// ┌─────────────────────────────────────────────────────────────────────┐ \\
// │ Raphaël - JavaScript Vector Library                                 │ \\
// ├─────────────────────────────────────────────────────────────────────┤ \\
// │ SVG Module                                                          │ \\
// ├─────────────────────────────────────────────────────────────────────┤ \\
// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://raphaeljs.com)   │ \\
// │ Copyright (c) 2008-2011 Sencha Labs (http://sencha.com)             │ \\
// │ Licensed under the MIT (http://raphaeljs.com/license.html) license. │ \\
// └─────────────────────────────────────────────────────────────────────┘ \\
window.Raphael.svg && function(R) {
    var has = "hasOwnProperty"
      , Str = String
      , toFloat = parseFloat
      , toInt = parseInt
      , math = Math
      , mmax = math.max
      , abs = math.abs
      , pow = math.pow
      , separator = /[, ]+/
      , eve = R.eve
      , E = ""
      , S = " ";
    var xlink = "http://www.w3.org/1999/xlink"
      , markers = {
        block: "M5,0 0,2.5 5,5z",
        classic: "M5,0 0,2.5 5,5 3.5,3 3.5,2z",
        diamond: "M2.5,0 5,2.5 2.5,5 0,2.5z",
        open: "M6,1 1,3.5 6,6",
        oval: "M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z"
    }
      , markerCounter = {};
    R.toString = function() {
        return "Your browser supports SVG.\nYou are running Rapha\xebl " + this.version;
    }
    ;
    var $ = function(el, attr) {
        if (attr) {
            if (typeof el == "string") {
                el = $(el);
            }
            for (var key in attr)
                if (attr[has](key)) {
                    if (key.substring(0, 6) == "xlink:") {
                        el.setAttributeNS(xlink, key.substring(6), Str(attr[key]));
                    } else {
                        el.setAttribute(key, Str(attr[key]));
                    }
                }
        } else {
            el = R._g.doc.createElementNS("http://www.w3.org/2000/svg", el);
            el.style && (el.style.webkitTapHighlightColor = "rgba(0,0,0,0)");
        }
        return el;
    }
      , addGradientFill = function(element, gradient) {
        var type = "linear"
          , id = element.id + gradient
          , fx = .5
          , fy = .5
          , o = element.node
          , SVG = element.paper
          , s = o.style
          , el = R._g.doc.getElementById(id);
        if (!el) {
            gradient = Str(gradient).replace(R._radial_gradient, function(all, _fx, _fy) {
                type = "radial";
                if (_fx && _fy) {
                    fx = toFloat(_fx);
                    fy = toFloat(_fy);
                    var dir = ((fy > .5) * 2 - 1);
                    pow(fx - .5, 2) + pow(fy - .5, 2) > .25 && (fy = math.sqrt(.25 - pow(fx - .5, 2)) * dir + .5) && fy != .5 && (fy = fy.toFixed(5) - 1e-5 * dir);
                }
                return E;
            });
            gradient = gradient.split(/\s*\-\s*/);
            if (type == "linear") {
                var angle = gradient.shift();
                angle = -toFloat(angle);
                if (isNaN(angle)) {
                    return null;
                }
                var vector = [0, 0, math.cos(R.rad(angle)), math.sin(R.rad(angle))]
                  , max = 1 / (mmax(abs(vector[2]), abs(vector[3])) || 1);
                vector[2] *= max;
                vector[3] *= max;
                if (vector[2] < 0) {
                    vector[0] = -vector[2];
                    vector[2] = 0;
                }
                if (vector[3] < 0) {
                    vector[1] = -vector[3];
                    vector[3] = 0;
                }
            }
            var dots = R._parseDots(gradient);
            if (!dots) {
                return null;
            }
            id = id.replace(/[\(\)\s,\xb0#]/g, "_");

            if (element.gradient && id != element.gradient.id) {
                SVG.defs.removeChild(element.gradient);
                delete element.gradient;
            }

            if (!element.gradient) {
                el = $(type + "Gradient", {
                    id: id
                });
                element.gradient = el;
                $(el, type == "radial" ? {
                    fx: fx,
                    fy: fy
                } : {
                    x1: vector[0],
                    y1: vector[1],
                    x2: vector[2],
                    y2: vector[3]// MODIFIED (Sandberger): Need to disable transformation of gradient in order to have it work with elements that are transformed themselves.
                    // See https://github.com/DmitryBaranovskiy/raphael/issues/476 for details!
                    //gradientTransform: element.matrix.invert()
                });
                SVG.defs.appendChild(el);
                for (var i = 0, ii = dots.length; i < ii; i++) {
                    el.appendChild($("stop", {
                        offset: dots[i].offset ? dots[i].offset : i ? "100%" : "0%",
                        "stop-color": dots[i].color || "#fff"
                    }));
                }
            }
        }
        $(o, {
            fill: "url(#" + id + ")",
            opacity: 1,
            "fill-opacity": 1
        });
        s.fill = E;
        s.opacity = 1;
        s.fillOpacity = 1;
        return 1;
    }
      , updatePosition = function(o) {
        var bbox = o.getBBox(1);
        $(o.pattern, {
            patternTransform: o.matrix.invert() + " translate(" + bbox.x + "," + bbox.y + ")"
        });
    }
      , addArrow = function(o, value, isEnd) {
        if (o.type == "path") {
            var values = Str(value).toLowerCase().split("-"), p = o.paper, se = isEnd ? "end" : "start", node = o.node, attrs = o.attrs, stroke = attrs["stroke-width"], i = values.length, type = "classic", from, to, dx, refX, attr, w = 3, h = 3, t = 5;
            while (i--) {
                switch (values[i]) {
                case "block":
                case "classic":
                case "oval":
                case "diamond":
                case "open":
                case "none":
                    type = values[i];
                    break;
                case "wide":
                    h = 5;
                    break;
                case "narrow":
                    h = 2;
                    break;
                case "long":
                    w = 5;
                    break;
                case "short":
                    w = 2;
                    break;
                }
            }
            if (type == "open") {
                w += 2;
                h += 2;
                t += 2;
                dx = 1;
                refX = isEnd ? 4 : 1;
                attr = {
                    fill: "none",
                    stroke: attrs.stroke
                };
            } else {
                refX = dx = w / 2;
                attr = {
                    fill: attrs.stroke,
                    stroke: "none"
                };
            }
            if (o._.arrows) {
                if (isEnd) {
                    o._.arrows.endPath && markerCounter[o._.arrows.endPath]--;
                    o._.arrows.endMarker && markerCounter[o._.arrows.endMarker]--;
                } else {
                    o._.arrows.startPath && markerCounter[o._.arrows.startPath]--;
                    o._.arrows.startMarker && markerCounter[o._.arrows.startMarker]--;
                }
            } else {
                o._.arrows = {};
            }
            if (type != "none") {
                var pathId = "raphael-marker-" + type
                  , markerId = "raphael-marker-" + se + type + w + h;
                if (!R._g.doc.getElementById(pathId)) {
                    p.defs.appendChild($($("path"), {
                        "stroke-linecap": "round",
                        d: markers[type],
                        id: pathId
                    }));
                    markerCounter[pathId] = 1;
                } else {
                    markerCounter[pathId]++;
                }
                var marker = R._g.doc.getElementById(markerId), use;
                if (!marker) {
                    marker = $($("marker"), {
                        id: markerId,
                        markerHeight: h,
                        markerWidth: w,
                        orient: "auto",
                        refX: refX,
                        refY: h / 2
                    });
                    use = $($("use"), {
                        "xlink:href": "#" + pathId,
                        transform: (isEnd ? "rotate(180 " + w / 2 + " " + h / 2 + ") " : E) + "scale(" + w / t + "," + h / t + ")",
                        "stroke-width": (1 / ((w / t + h / t) / 2)).toFixed(4)
                    });
                    marker.appendChild(use);
                    p.defs.appendChild(marker);
                    markerCounter[markerId] = 1;
                } else {
                    markerCounter[markerId]++;
                    use = marker.getElementsByTagName("use")[0];
                }
                $(use, attr);
                var delta = dx * (type != "diamond" && type != "oval");
                if (isEnd) {
                    from = o._.arrows.startdx * stroke || 0;
                    to = R.getTotalLength(attrs.path) - delta * stroke;
                } else {
                    from = delta * stroke;
                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);
                }
                attr = {};
                attr["marker-" + se] = "url(#" + markerId + ")";
                if (to || from) {
                    attr.d = Raphael.getSubpath(attrs.path, from, to);
                }
                $(node, attr);
                o._.arrows[se + "Path"] = pathId;
                o._.arrows[se + "Marker"] = markerId;
                o._.arrows[se + "dx"] = delta;
                o._.arrows[se + "Type"] = type;
                o._.arrows[se + "String"] = value;
            } else {
                if (isEnd) {
                    from = o._.arrows.startdx * stroke || 0;
                    to = R.getTotalLength(attrs.path) - from;
                } else {
                    from = 0;
                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);
                }
                o._.arrows[se + "Path"] && $(node, {
                    d: Raphael.getSubpath(attrs.path, from, to)
                });
                delete o._.arrows[se + "Path"];
                delete o._.arrows[se + "Marker"];
                delete o._.arrows[se + "dx"];
                delete o._.arrows[se + "Type"];
                delete o._.arrows[se + "String"];
            }
            for (attr in markerCounter)
                if (markerCounter[has](attr) && !markerCounter[attr]) {
                    var item = R._g.doc.getElementById(attr);
                    item && item.parentNode.removeChild(item);
                }
        }
    }
      , dasharray = {
        "": [0],
        "none": [0],
        "-": [3, 1],
        ".": [1, 1],
        "-.": [3, 1, 1, 1],
        "-..": [3, 1, 1, 1, 1, 1],
        ". ": [1, 3],
        "- ": [4, 3],
        "--": [8, 3],
        "- .": [4, 3, 1, 3],
        "--.": [8, 3, 1, 3],
        "--..": [8, 3, 1, 3, 1, 3]
    }
      , addDashes = function(o, value, params) {
        value = dasharray[Str(value).toLowerCase()];
        if (value) {
            var width = o.attrs["stroke-width"] || "1"
              , butt = {
                round: width,
                square: width,
                butt: 0
            }[o.attrs["stroke-linecap"] || params["stroke-linecap"]] || 0
              , dashes = []
              , i = value.length;
            while (i--) {
                dashes[i] = value[i] * width + ((i % 2) ? 1 : -1) * butt;
            }
            $(o.node, {
                "stroke-dasharray": dashes.join(",")
            });
        }
    }
      , setFillAndStroke = function(o, params) {
        var node = o.node
          , attrs = o.attrs
          , vis = node.style.visibility;
        node.style.visibility = "hidden";
        for (var att in params) {
            if (params[has](att)) {
                if (!R._availableAttrs[has](att)) {
                    continue;
                }
                var value = params[att];
                attrs[att] = value;
                switch (att) {
                case "blur":
                    o.blur(value);
                    break;
                case "href":
                case "title":
                case "target":
                    var pn = node.parentNode;
                    if (pn.tagName.toLowerCase() != "a") {
                        var hl = $("a");
                        pn.insertBefore(hl, node);
                        hl.appendChild(node);
                        pn = hl;
                    }
                    if (att == "target") {
                        pn.setAttributeNS(xlink, "show", value == "blank" ? "new" : value);
                    } else {
                        pn.setAttributeNS(xlink, att, value);
                    }
                    break;
                case "cursor":
                    node.style.cursor = value;
                    break;
                case "transform":
                    o.transform(value);
                    break;
                case "arrow-start":
                    addArrow(o, value);
                    break;
                case "arrow-end":
                    addArrow(o, value, 1);
                    break;
                case "clip-rect":
                    var rect = Str(value).split(separator);
                    if (rect.length == 4) {
                        o.clip && o.clip.parentNode.parentNode.removeChild(o.clip.parentNode);
                        var el = $("clipPath")
                          , rc = $("rect");
                        el.id = R.createUUID();
                        $(rc, {
                            x: rect[0],
                            y: rect[1],
                            width: rect[2],
                            height: rect[3]
                        });
                        el.appendChild(rc);
                        o.paper.defs.appendChild(el);
                        $(node, {
                            "clip-path": "url(#" + el.id + ")"
                        });
                        o.clip = rc;
                    }
                    if (!value) {
                        var path = node.getAttribute("clip-path");
                        if (path) {
                            var clip = R._g.doc.getElementById(path.replace(/(^url\(#|\)$)/g, E));
                            clip && clip.parentNode.removeChild(clip);
                            $(node, {
                                "clip-path": E
                            });
                            delete o.clip;
                        }
                    }
                    break;
                case "path":
                    if (o.type == "path") {
                        $(node, {
                            d: value ? attrs.path = R._pathToAbsolute(value) : "M0,0"
                        });
                        o._.dirty = 1;
                        if (o._.arrows) {
                            "startString"in o._.arrows && addArrow(o, o._.arrows.startString);
                            "endString"in o._.arrows && addArrow(o, o._.arrows.endString, 1);
                        }
                    }
                    break;
                case "width":
                    node.setAttribute(att, value);
                    o._.dirty = 1;
                    if (attrs.fx) {
                        att = "x";
                        value = attrs.x;
                    } else {
                        break;
                    }
                case "x":
                    if (attrs.fx) {
                        value = -attrs.x - (attrs.width || 0);
                    }
                case "rx":
                    if (att == "rx" && o.type == "rect") {
                        break;
                    }
                case "cx":
                    node.setAttribute(att, value);
                    o.pattern && updatePosition(o);
                    o._.dirty = 1;
                    break;
                case "height":
                    node.setAttribute(att, value);
                    o._.dirty = 1;
                    if (attrs.fy) {
                        att = "y";
                        value = attrs.y;
                    } else {
                        break;
                    }
                case "y":
                    if (attrs.fy) {
                        value = -attrs.y - (attrs.height || 0);
                    }
                case "ry":
                    if (att == "ry" && o.type == "rect") {
                        break;
                    }
                case "cy":
                    node.setAttribute(att, value);
                    o.pattern && updatePosition(o);
                    o._.dirty = 1;
                    break;
                case "r":
                    if (o.type == "rect") {
                        $(node, {
                            rx: value,
                            ry: value
                        });
                    } else {
                        node.setAttribute(att, value);
                    }
                    o._.dirty = 1;
                    break;
                case "src":
                    if (o.type == "image") {
                        node.setAttributeNS(xlink, "href", value);
                    }
                    break;
                case "stroke-width":
                    if (o._.sx != 1 || o._.sy != 1) {
                        value /= mmax(abs(o._.sx), abs(o._.sy)) || 1;
                    }
                    if (o.paper._vbSize) {
                        value *= o.paper._vbSize;
                    }
                    node.setAttribute(att, value);
                    if (attrs["stroke-dasharray"]) {
                        addDashes(o, attrs["stroke-dasharray"], params);
                    }
                    if (o._.arrows) {
                        "startString"in o._.arrows && addArrow(o, o._.arrows.startString);
                        "endString"in o._.arrows && addArrow(o, o._.arrows.endString, 1);
                    }
                    break;
                case "stroke-dasharray":
                    addDashes(o, value, params);
                    break;
                case "fill":
                    var isURL = Str(value).match(R._ISURL);
                    if (isURL) {
                        el = $("pattern");
                        var ig = $("image");
                        el.id = R.createUUID();
                        $(el, {
                            x: 0,
                            y: 0,
                            patternUnits: "userSpaceOnUse",
                            height: 1,
                            width: 1
                        });
                        $(ig, {
                            x: 0,
                            y: 0,
                            "xlink:href": isURL[1]
                        });
                        el.appendChild(ig);

                        (function(el) {
                            R._preload(isURL[1], function() {
                                var w = this.offsetWidth
                                  , h = this.offsetHeight;
                                $(el, {
                                    width: w,
                                    height: h
                                });
                                $(ig, {
                                    width: w,
                                    height: h
                                });
                                o.paper.safari();
                            });
                        }
                        )(el);
                        o.paper.defs.appendChild(el);
                        $(node, {
                            fill: "url(#" + el.id + ")"
                        });
                        o.pattern = el;
                        o.pattern && updatePosition(o);
                        break;
                    }
                    var clr = R.getRGB(value);
                    if (!clr.error) {
                        delete params.gradient;
                        delete attrs.gradient;
                        !R.is(attrs.opacity, "undefined") && R.is(params.opacity, "undefined") && $(node, {
                            opacity: attrs.opacity
                        });
                        !R.is(attrs["fill-opacity"], "undefined") && R.is(params["fill-opacity"], "undefined") && $(node, {
                            "fill-opacity": attrs["fill-opacity"]
                        });
                    } else if ((o.type == "circle" || o.type == "ellipse" || Str(value).charAt() != "r") && addGradientFill(o, value)) {
                        if ("opacity"in attrs || "fill-opacity"in attrs) {
                            var gradient = R._g.doc.getElementById(node.getAttribute("fill").replace(/^url\(#|\)$/g, E));
                            if (gradient) {
                                var stops = gradient.getElementsByTagName("stop");
                                $(stops[stops.length - 1], {
                                    "stop-opacity": ("opacity"in attrs ? attrs.opacity : 1) * ("fill-opacity"in attrs ? attrs["fill-opacity"] : 1)
                                });
                            }
                        }
                        attrs.gradient = value;
                        attrs.fill = "none";
                        break;
                    }
                    clr[has]("opacity") && $(node, {
                        "fill-opacity": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity
                    });
                case "stroke":
                    clr = R.getRGB(value);
                    node.setAttribute(att, clr.hex);
                    att == "stroke" && clr[has]("opacity") && $(node, {
                        "stroke-opacity": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity
                    });
                    if (att == "stroke" && o._.arrows) {
                        "startString"in o._.arrows && addArrow(o, o._.arrows.startString);
                        "endString"in o._.arrows && addArrow(o, o._.arrows.endString, 1);
                    }
                    break;
                case "gradient":
                    (o.type == "circle" || o.type == "ellipse" || Str(value).charAt() != "r") && addGradientFill(o, value);
                    break;
                case "opacity":
                    if (attrs.gradient && !attrs[has]("stroke-opacity")) {
                        $(node, {
                            "stroke-opacity": value > 1 ? value / 100 : value
                        });
                    }
                    // fall
                case "fill-opacity":
                    if (attrs.gradient) {
                        gradient = R._g.doc.getElementById(node.getAttribute("fill").replace(/^url\(#|\)$/g, E));
                        if (gradient) {
                            stops = gradient.getElementsByTagName("stop");
                            $(stops[stops.length - 1], {
                                "stop-opacity": value
                            });
                        }
                        break;
                    }
                default:
                    att == "font-size" && (value = toInt(value, 10) + "px");
                    var cssrule = att.replace(/(\-.)/g, function(w) {
                        return w.substring(1).toUpperCase();
                    });
                    node.style[cssrule] = value;
                    o._.dirty = 1;
                    node.setAttribute(att, value);
                    break;
                }
            }
        }

        tuneText(o, params);
        node.style.visibility = vis;
    }
      , leading = 1.2
      , tuneText = function(el, params) {
        if (el.type != "text" || !(params[has]("text") || params[has]("font") || params[has]("font-size") || params[has]("x") || params[has]("y"))) {
            return;
        }
        var a = el.attrs
          , node = el.node
          , fontSize = node.firstChild ? toInt(R._g.doc.defaultView.getComputedStyle(node.firstChild, E).getPropertyValue("font-size"), 10) : 10;

        if (params[has]("text")) {
            a.text = params.text;
            while (node.firstChild) {
                node.removeChild(node.firstChild);
            }
            var texts = Str(params.text).split("\n"), tspans = [], tspan;
            for (var i = 0, ii = texts.length; i < ii; i++) {
                tspan = $("tspan");
                i && $(tspan, {
                    dy: fontSize * leading,
                    x: a.x
                });
                tspan.appendChild(R._g.doc.createTextNode(texts[i]));
                node.appendChild(tspan);
                tspans[i] = tspan;
            }
        } else {
            tspans = node.getElementsByTagName("tspan");
            for (i = 0,
            ii = tspans.length; i < ii; i++)
                if (i) {
                    $(tspans[i], {
                        dy: fontSize * leading,
                        x: a.x
                    });
                } else {
                    $(tspans[0], {
                        dy: 0
                    });
                }
        }
        $(node, {
            x: a.x,
            y: a.y
        });
        el._.dirty = 1;
        var bb = el._getBBox()
          , dif = a.y - (bb.y + bb.height / 2);
        dif && R.is(dif, "finite") && $(tspans[0], {
            dy: dif
        });
    }
      , Element = function(node, svg) {
        var X = 0
          , Y = 0;

        this[0] = this.node = node;

        node.raphael = true;

        this.id = R._oid++;
        node.raphaelid = this.id;
        this.matrix = R.matrix();
        this.realPath = null;

        this.paper = svg;
        this.attrs = this.attrs || {};
        this._ = {
            transform: [],
            sx: 1,
            sy: 1,
            deg: 0,
            dx: 0,
            dy: 0,
            dirty: 1
        };
        !svg.bottom && (svg.bottom = this);

        this.prev = svg.top;
        svg.top && (svg.top.next = this);
        svg.top = this;

        this.next = null;
    }
      , elproto = R.el;

    Element.prototype = elproto;
    elproto.constructor = Element;

    R._engine.path = function(pathString, SVG) {
        var el = $("path");
        SVG.canvas && SVG.canvas.appendChild(el);
        var p = new Element(el,SVG);
        p.type = "path";
        setFillAndStroke(p, {
            fill: "none",
            stroke: "#000",
            path: pathString
        });
        return p;
    }
    ;

    elproto.rotate = function(deg, cx, cy) {
        if (this.removed) {
            return this;
        }
        deg = Str(deg).split(separator);
        if (deg.length - 1) {
            cx = toFloat(deg[1]);
            cy = toFloat(deg[2]);
        }
        deg = toFloat(deg[0]);
        (cy == null) && (cx = cy);
        if (cx == null || cy == null) {
            var bbox = this.getBBox(1);
            cx = bbox.x + bbox.width / 2;
            cy = bbox.y + bbox.height / 2;
        }
        this.transform(this._.transform.concat([["r", deg, cx, cy]]));
        return this;
    }
    ;

    elproto.scale = function(sx, sy, cx, cy) {
        if (this.removed) {
            return this;
        }
        sx = Str(sx).split(separator);
        if (sx.length - 1) {
            sy = toFloat(sx[1]);
            cx = toFloat(sx[2]);
            cy = toFloat(sx[3]);
        }
        sx = toFloat(sx[0]);
        (sy == null) && (sy = sx);
        (cy == null) && (cx = cy);
        if (cx == null || cy == null) {
            var bbox = this.getBBox(1);
        }
        cx = cx == null ? bbox.x + bbox.width / 2 : cx;
        cy = cy == null ? bbox.y + bbox.height / 2 : cy;
        this.transform(this._.transform.concat([["s", sx, sy, cx, cy]]));
        return this;
    }
    ;

    elproto.translate = function(dx, dy) {
        if (this.removed) {
            return this;
        }
        dx = Str(dx).split(separator);
        if (dx.length - 1) {
            dy = toFloat(dx[1]);
        }
        dx = toFloat(dx[0]) || 0;
        dy = +dy || 0;
        this.transform(this._.transform.concat([["t", dx, dy]]));
        return this;
    }
    ;

    elproto.transform = function(tstr) {
        var _ = this._;
        if (tstr == null) {
            return _.transform;
        }
        R._extractTransform(this, tstr);

        this.clip && $(this.clip, {
            transform: this.matrix.invert()
        });
        this.pattern && updatePosition(this);
        this.node && $(this.node, {
            transform: this.matrix
        });

        if (_.sx != 1 || _.sy != 1) {
            var sw = this.attrs[has]("stroke-width") ? this.attrs["stroke-width"] : 1;
            this.attr({
                "stroke-width": sw
            });
        }

        return this;
    }
    ;

    elproto.hide = function() {
        !this.removed && this.paper.safari(this.node.style.display = "none");
        return this;
    }
    ;

    elproto.show = function() {
        !this.removed && this.paper.safari(this.node.style.display = "");
        return this;
    }
    ;

    elproto.remove = function() {
        if (this.removed || !this.node.parentNode) {
            return;
        }
        var paper = this.paper;
        paper.__set__ && paper.__set__.exclude(this);
        eve.unbind("raphael.*.*." + this.id);
        if (this.gradient) {
            paper.defs.removeChild(this.gradient);
        }
        R._tear(this, paper);
        if (this.node.parentNode.tagName.toLowerCase() == "a") {
            this.node.parentNode.parentNode.removeChild(this.node.parentNode);
        } else {
            this.node.parentNode.removeChild(this.node);
        }
        for (var i in this) {
            this[i] = typeof this[i] == "function" ? R._removedFactory(i) : null;
        }
        this.removed = true;
    }
    ;
    elproto._getBBox = function() {
        if (this.node.style.display == "none") {
            this.show();
            var hide = true;
        }
        var bbox = {};
        try {
            bbox = this.node.getBBox();
        } catch (e) {// Firefox 3.0.x plays badly here
        } finally {
            bbox = bbox || {};
        }
        hide && this.hide();
        return bbox;
    }
    ;

    elproto.attr = function(name, value) {
        if (this.removed) {
            return this;
        }
        if (name == null) {
            var res = {};
            for (var a in this.attrs)
                if (this.attrs[has](a)) {
                    res[a] = this.attrs[a];
                }
            res.gradient && res.fill == "none" && (res.fill = res.gradient) && delete res.gradient;
            res.transform = this._.transform;
            return res;
        }
        if (value == null && R.is(name, "string")) {
            if (name == "fill" && this.attrs.fill == "none" && this.attrs.gradient) {
                return this.attrs.gradient;
            }
            if (name == "transform") {
                return this._.transform;
            }
            var names = name.split(separator)
              , out = {};
            for (var i = 0, ii = names.length; i < ii; i++) {
                name = names[i];
                if (name in this.attrs) {
                    out[name] = this.attrs[name];
                } else if (R.is(this.paper.customAttributes[name], "function")) {
                    out[name] = this.paper.customAttributes[name].def;
                } else {
                    out[name] = R._availableAttrs[name];
                }
            }
            return ii - 1 ? out : out[names[0]];
        }
        if (value == null && R.is(name, "array")) {
            out = {};
            for (i = 0,
            ii = name.length; i < ii; i++) {
                out[name[i]] = this.attr(name[i]);
            }
            return out;
        }
        if (value != null) {
            var params = {};
            params[name] = value;
        } else if (name != null && R.is(name, "object")) {
            params = name;
        }
        for (var key in params) {
            eve("raphael.attr." + key + "." + this.id, this, params[key]);
        }
        for (key in this.paper.customAttributes)
            if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], "function")) {
                var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));
                this.attrs[key] = params[key];
                for (var subkey in par)
                    if (par[has](subkey)) {
                        params[subkey] = par[subkey];
                    }
            }
        setFillAndStroke(this, params);
        return this;
    }
    ;

    elproto.toFront = function() {
        if (this.removed) {
            return this;
        }
        if (this.node.parentNode.tagName.toLowerCase() == "a") {
            this.node.parentNode.parentNode.appendChild(this.node.parentNode);
        } else {
            this.node.parentNode.appendChild(this.node);
        }
        var svg = this.paper;
        svg.top != this && R._tofront(this, svg);
        return this;
    }
    ;

    elproto.toBack = function() {
        if (this.removed) {
            return this;
        }
        var parent = this.node.parentNode;
        if (parent.tagName.toLowerCase() == "a") {
            parent.parentNode.insertBefore(this.node.parentNode, this.node.parentNode.parentNode.firstChild);
        } else if (parent.firstChild != this.node) {
            parent.insertBefore(this.node, this.node.parentNode.firstChild);
        }
        R._toback(this, this.paper);
        var svg = this.paper;
        return this;
    }
    ;

    elproto.insertAfter = function(element) {
        if (this.removed) {
            return this;
        }
        var node = element.node || element[element.length - 1].node;
        if (node.nextSibling) {
            node.parentNode.insertBefore(this.node, node.nextSibling);
        } else {
            node.parentNode.appendChild(this.node);
        }
        R._insertafter(this, element, this.paper);
        return this;
    }
    ;

    elproto.insertBefore = function(element) {
        if (this.removed) {
            return this;
        }
        var node = element.node || element[0].node;
        node.parentNode.insertBefore(this.node, node);
        R._insertbefore(this, element, this.paper);
        return this;
    }
    ;
    elproto.blur = function(size) {
        // Experimental. No Safari support. Use it on your own risk.
        var t = this;
        if (+size !== 0) {
            var fltr = $("filter")
              , blur = $("feGaussianBlur");
            t.attrs.blur = size;
            fltr.id = R.createUUID();
            $(blur, {
                stdDeviation: +size || 1.5
            });
            fltr.appendChild(blur);
            t.paper.defs.appendChild(fltr);
            t._blur = fltr;
            $(t.node, {
                filter: "url(#" + fltr.id + ")"
            });
        } else {
            if (t._blur) {
                t._blur.parentNode.removeChild(t._blur);
                delete t._blur;
                delete t.attrs.blur;
            }
            t.node.removeAttribute("filter");
        }
    }
    ;
    R._engine.circle = function(svg, x, y, r) {
        var el = $("circle");
        svg.canvas && svg.canvas.appendChild(el);
        var res = new Element(el,svg);
        res.attrs = {
            cx: x,
            cy: y,
            r: r,
            fill: "none",
            stroke: "#000"
        };
        res.type = "circle";
        $(el, res.attrs);
        return res;
    }
    ;
    R._engine.rect = function(svg, x, y, w, h, r) {
        var el = $("rect");
        svg.canvas && svg.canvas.appendChild(el);
        var res = new Element(el,svg);
        res.attrs = {
            x: x,
            y: y,
            width: w,
            height: h,
            r: r || 0,
            rx: r || 0,
            ry: r || 0,
            fill: "none",
            stroke: "#000"
        };
        res.type = "rect";
        $(el, res.attrs);
        return res;
    }
    ;
    R._engine.ellipse = function(svg, x, y, rx, ry) {
        var el = $("ellipse");
        svg.canvas && svg.canvas.appendChild(el);
        var res = new Element(el,svg);
        res.attrs = {
            cx: x,
            cy: y,
            rx: rx,
            ry: ry,
            fill: "none",
            stroke: "#000"
        };
        res.type = "ellipse";
        $(el, res.attrs);
        return res;
    }
    ;
    R._engine.image = function(svg, src, x, y, w, h) {
        var el = $("image");
        $(el, {
            x: x,
            y: y,
            width: w,
            height: h,
            preserveAspectRatio: "none"
        });
        el.setAttributeNS(xlink, "href", src);
        svg.canvas && svg.canvas.appendChild(el);
        var res = new Element(el,svg);
        res.attrs = {
            x: x,
            y: y,
            width: w,
            height: h,
            src: src
        };
        res.type = "image";
        return res;
    }
    ;
    R._engine.text = function(svg, x, y, text) {
        var el = $("text");
        svg.canvas && svg.canvas.appendChild(el);
        var res = new Element(el,svg);
        res.attrs = {
            x: x,
            y: y,
            "text-anchor": "middle",
            text: text,
            font: R._availableAttrs.font,
            stroke: "none",
            fill: "#000"
        };
        res.type = "text";
        setFillAndStroke(res, res.attrs);
        return res;
    }
    ;
    R._engine.setSize = function(width, height) {
        this.width = width || this.width;
        this.height = height || this.height;
        this.canvas.setAttribute("width", this.width);
        this.canvas.setAttribute("height", this.height);
        if (this._viewBox) {
            this.setViewBox.apply(this, this._viewBox);
        }
        return this;
    }
    ;
    R._engine.create = function() {
        var con = R._getContainer.apply(0, arguments)
          , container = con && con.container
          , x = con.x
          , y = con.y
          , width = con.width
          , height = con.height;
        if (!container) {
            throw new Error("SVG container not found.");
        }
        var cnvs = $("svg"), css = "overflow:hidden;", isFloating;
        x = x || 0;
        y = y || 0;
        width = width || 512;
        height = height || 342;
        $(cnvs, {
            height: height,
            version: 1.1,
            width: width,
            xmlns: "http://www.w3.org/2000/svg"
        });
        if (container == 1) {
            cnvs.style.cssText = css + "position:absolute;left:" + x + "px;top:" + y + "px";
            R._g.doc.body.appendChild(cnvs);
            isFloating = 1;
        } else {
            cnvs.style.cssText = css + "position:relative";
            if (container.firstChild) {
                container.insertBefore(cnvs, container.firstChild);
            } else {
                container.appendChild(cnvs);
            }
        }
        container = new R._Paper;
        container.width = width;
        container.height = height;
        container.canvas = cnvs;
        container.clear();
        container._left = container._top = 0;
        isFloating && (container.renderfix = function() {}
        );
        container.renderfix();
        return container;
    }
    ;
    R._engine.setViewBox = function(x, y, w, h, fit) {
        eve("raphael.setViewBox", this, this._viewBox, [x, y, w, h, fit]);
        var size = mmax(w / this.width, h / this.height), top = this.top, aspectRatio = fit ? "meet" : "xMinYMin", vb, sw;
        if (x == null) {
            if (this._vbSize) {
                size = 1;
            }
            delete this._vbSize;
            vb = "0 0 " + this.width + S + this.height;
        } else {
            this._vbSize = size;
            vb = x + S + y + S + w + S + h;
        }
        $(this.canvas, {
            viewBox: vb,
            preserveAspectRatio: aspectRatio
        });
        while (size && top) {
            sw = "stroke-width"in top.attrs ? top.attrs["stroke-width"] : 1;
            top.attr({
                "stroke-width": sw
            });
            top._.dirty = 1;
            top._.dirtyT = 1;
            top = top.prev;
        }
        this._viewBox = [x, y, w, h, !!fit];
        return this;
    }
    ;

    R.prototype.renderfix = function() {
        var cnvs = this.canvas, s = cnvs.style, pos;
        try {
            pos = cnvs.getScreenCTM() || cnvs.createSVGMatrix();
        } catch (e) {
            pos = cnvs.createSVGMatrix();
        }
        var left = -pos.e % 1
          , top = -pos.f % 1;
        if (left || top) {
            if (left) {
                this._left = (this._left + left) % 1;
                s.left = this._left + "px";
            }
            if (top) {
                this._top = (this._top + top) % 1;
                s.top = this._top + "px";
            }
        }
    }
    ;

    R.prototype.clear = function() {
        R.eve("raphael.clear", this);
        var c = this.canvas;
        while (c.firstChild) {
            c.removeChild(c.firstChild);
        }
        this.bottom = this.top = null;
        (this.desc = $("desc")).appendChild(R._g.doc.createTextNode("Created with Rapha\xebl " + R.version));
        c.appendChild(this.desc);
        c.appendChild(this.defs = $("defs"));
    }
    ;

    R.prototype.remove = function() {
        eve("raphael.remove", this);
        this.canvas.parentNode && this.canvas.parentNode.removeChild(this.canvas);
        for (var i in this) {
            this[i] = typeof this[i] == "function" ? R._removedFactory(i) : null;
        }
    }
    ;
    var setproto = R.st;
    for (var method in elproto)
        if (elproto[has](method) && !setproto[has](method)) {
            setproto[method] = (function(methodname) {
                return function() {
                    var arg = arguments;
                    return this.forEach(function(el) {
                        el[methodname].apply(el, arg);
                    });
                }
                ;
            }
            )(method);
        }
}(window.Raphael);

// ┌─────────────────────────────────────────────────────────────────────┐ \\
// │ Raphaël - JavaScript Vector Library                                 │ \\
// ├─────────────────────────────────────────────────────────────────────┤ \\
// │ VML Module                                                          │ \\
// ├─────────────────────────────────────────────────────────────────────┤ \\
// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://raphaeljs.com)   │ \\
// │ Copyright (c) 2008-2011 Sencha Labs (http://sencha.com)             │ \\
// │ Licensed under the MIT (http://raphaeljs.com/license.html) license. │ \\
// └─────────────────────────────────────────────────────────────────────┘ \\
window.Raphael.vml && function(R) {
    var has = "hasOwnProperty"
      , Str = String
      , toFloat = parseFloat
      , math = Math
      , round = math.round
      , mmax = math.max
      , mmin = math.min
      , abs = math.abs
      , fillString = "fill"
      , separator = /[, ]+/
      , eve = R.eve
      , ms = " progid:DXImageTransform.Microsoft"
      , S = " "
      , E = ""
      , map = {
        M: "m",
        L: "l",
        C: "c",
        Z: "x",
        m: "t",
        l: "r",
        c: "v",
        z: "x"
    }
      , bites = /([clmz]),?([^clmz]*)/gi
      , blurregexp = / progid:\S+Blur\([^\)]+\)/g
      , val = /-?[^,\s-]+/g
      , cssDot = "position:absolute;left:0;top:0;width:1px;height:1px"
      , zoom = 21600
      , pathTypes = {
        path: 1,
        rect: 1,
        image: 1
    }
      , ovalTypes = {
        circle: 1,
        ellipse: 1
    }
      , path2vml = function(path) {
        var total = /[ahqstv]/ig
          , command = R._pathToAbsolute;
        Str(path).match(total) && (command = R._path2curve);
        total = /[clmz]/g;
        if (command == R._pathToAbsolute && !Str(path).match(total)) {
            var res = Str(path).replace(bites, function(all, command, args) {
                var vals = []
                  , isMove = command.toLowerCase() == "m"
                  , res = map[command];
                args.replace(val, function(value) {
                    if (isMove && vals.length == 2) {
                        res += vals + map[command == "m" ? "l" : "L"];
                        vals = [];
                    }
                    vals.push(round(value * zoom));
                });
                return res + vals;
            });
            return res;
        }
        var pa = command(path), p, r;
        res = [];
        for (var i = 0, ii = pa.length; i < ii; i++) {
            p = pa[i];
            r = pa[i][0].toLowerCase();
            r == "z" && (r = "x");
            for (var j = 1, jj = p.length; j < jj; j++) {
                r += round(p[j] * zoom) + (j != jj - 1 ? "," : E);
            }
            res.push(r);
        }
        return res.join(S);
    }
      , compensation = function(deg, dx, dy) {
        var m = R.matrix();
        m.rotate(-deg, .5, .5);
        return {
            dx: m.x(dx, dy),
            dy: m.y(dx, dy)
        };
    }
      , setCoords = function(p, sx, sy, dx, dy, deg) {
        var _ = p._, m = p.matrix, fillpos = _.fillpos, o = p.node, s = o.style, y = 1, flip = "", dxdy, kx = zoom / sx, ky = zoom / sy;
        s.visibility = "hidden";
        if (!sx || !sy) {
            return;
        }
        o.coordsize = abs(kx) + S + abs(ky);
        s.rotation = deg * (sx * sy < 0 ? -1 : 1);
        if (deg) {
            var c = compensation(deg, dx, dy);
            dx = c.dx;
            dy = c.dy;
        }
        sx < 0 && (flip += "x");
        sy < 0 && (flip += " y") && (y = -1);
        s.flip = flip;
        o.coordorigin = (dx * -kx) + S + (dy * -ky);
        if (fillpos || _.fillsize) {
            var fill = o.getElementsByTagName(fillString);
            fill = fill && fill[0];
            o.removeChild(fill);
            if (fillpos) {
                c = compensation(deg, m.x(fillpos[0], fillpos[1]), m.y(fillpos[0], fillpos[1]));
                fill.position = c.dx * y + S + c.dy * y;
            }
            if (_.fillsize) {
                fill.size = _.fillsize[0] * abs(sx) + S + _.fillsize[1] * abs(sy);
            }
            o.appendChild(fill);
        }
        s.visibility = "visible";
    };
    R.toString = function() {
        return "Your browser doesn\u2019t support SVG. Falling down to VML.\nYou are running Rapha\xebl " + this.version;
    }
    ;
    var addArrow = function(o, value, isEnd) {
        var values = Str(value).toLowerCase().split("-")
          , se = isEnd ? "end" : "start"
          , i = values.length
          , type = "classic"
          , w = "medium"
          , h = "medium";
        while (i--) {
            switch (values[i]) {
            case "block":
            case "classic":
            case "oval":
            case "diamond":
            case "open":
            case "none":
                type = values[i];
                break;
            case "wide":
            case "narrow":
                h = values[i];
                break;
            case "long":
            case "short":
                w = values[i];
                break;
            }
        }
        var stroke = o.node.getElementsByTagName("stroke")[0];
        stroke[se + "arrow"] = type;
        stroke[se + "arrowlength"] = w;
        stroke[se + "arrowwidth"] = h;
    }
      , setFillAndStroke = function(o, params) {
        // o.paper.canvas.style.display = "none";
        o.attrs = o.attrs || {};
        var node = o.node, a = o.attrs, s = node.style, xy, newpath = pathTypes[o.type] && (params.x != a.x || params.y != a.y || params.width != a.width || params.height != a.height || params.cx != a.cx || params.cy != a.cy || params.rx != a.rx || params.ry != a.ry || params.r != a.r), isOval = ovalTypes[o.type] && (a.cx != params.cx || a.cy != params.cy || a.r != params.r || a.rx != params.rx || a.ry != params.ry), res = o;

        for (var par in params)
            if (params[has](par)) {
                a[par] = params[par];
            }
        if (newpath) {
            a.path = R._getPath[o.type](o);
            o._.dirty = 1;
        }
        params.href && (node.href = params.href);
        params.title && (node.title = params.title);
        params.target && (node.target = params.target);
        params.cursor && (s.cursor = params.cursor);
        "blur"in params && o.blur(params.blur);
        if (params.path && o.type == "path" || newpath) {
            node.path = path2vml(~Str(a.path).toLowerCase().indexOf("r") ? R._pathToAbsolute(a.path) : a.path);
            if (o.type == "image") {
                o._.fillpos = [a.x, a.y];
                o._.fillsize = [a.width, a.height];
                setCoords(o, 1, 1, 0, 0, 0);
            }
        }
        "transform"in params && o.transform(params.transform);
        if (isOval) {
            var cx = +a.cx
              , cy = +a.cy
              , rx = +a.rx || +a.r || 0
              , ry = +a.ry || +a.r || 0;
            node.path = R.format("ar{0},{1},{2},{3},{4},{1},{4},{1}x", round((cx - rx) * zoom), round((cy - ry) * zoom), round((cx + rx) * zoom), round((cy + ry) * zoom), round(cx * zoom));
        }
        if ("clip-rect"in params) {
            var rect = Str(params["clip-rect"]).split(separator);
            if (rect.length == 4) {
                rect[2] = +rect[2] + (+rect[0]);
                rect[3] = +rect[3] + (+rect[1]);
                var div = node.clipRect || R._g.doc.createElement("div")
                  , dstyle = div.style;
                dstyle.clip = R.format("rect({1}px {2}px {3}px {0}px)", rect);
                if (!node.clipRect) {
                    dstyle.position = "absolute";
                    dstyle.top = 0;
                    dstyle.left = 0;
                    dstyle.width = o.paper.width + "px";
                    dstyle.height = o.paper.height + "px";
                    node.parentNode.insertBefore(div, node);
                    div.appendChild(node);
                    node.clipRect = div;
                }
            }
            if (!params["clip-rect"]) {
                node.clipRect && (node.clipRect.style.clip = "auto");
            }
        }
        if (o.textpath) {
            var textpathStyle = o.textpath.style;
            params.font && (textpathStyle.font = params.font);
            params["font-family"] && (textpathStyle.fontFamily = '"' + params["font-family"].split(",")[0].replace(/^['"]+|['"]+$/g, E) + '"');
            params["font-size"] && (textpathStyle.fontSize = params["font-size"]);
            params["font-weight"] && (textpathStyle.fontWeight = params["font-weight"]);
            params["font-style"] && (textpathStyle.fontStyle = params["font-style"]);
        }
        if ("arrow-start"in params) {
            addArrow(res, params["arrow-start"]);
        }
        if ("arrow-end"in params) {
            addArrow(res, params["arrow-end"], 1);
        }
        if (params.opacity != null || params["stroke-width"] != null || params.fill != null || params.src != null || params.stroke != null || params["stroke-width"] != null || params["stroke-opacity"] != null || params["fill-opacity"] != null || params["stroke-dasharray"] != null || params["stroke-miterlimit"] != null || params["stroke-linejoin"] != null || params["stroke-linecap"] != null) {
            var fill = node.getElementsByTagName(fillString)
              , newfill = false;
            fill = fill && fill[0];
            !fill && (newfill = fill = createNode(fillString));
            if (o.type == "image" && params.src) {
                fill.src = params.src;
            }
            params.fill && (fill.on = true);
            if (fill.on == null || params.fill == "none" || params.fill === null) {
                fill.on = false;
            }
            if (fill.on && params.fill) {
                var isURL = Str(params.fill).match(R._ISURL);
                if (isURL) {
                    fill.parentNode == node && node.removeChild(fill);
                    fill.rotate = true;
                    fill.src = isURL[1];
                    fill.type = "tile";
                    var bbox = o.getBBox(1);
                    fill.position = bbox.x + S + bbox.y;
                    o._.fillpos = [bbox.x, bbox.y];

                    R._preload(isURL[1], function() {
                        o._.fillsize = [this.offsetWidth, this.offsetHeight];
                    });
                } else {
                    fill.color = R.getRGB(params.fill).hex;
                    fill.src = E;
                    fill.type = "solid";
                    if (R.getRGB(params.fill).error && (res.type in {
                        circle: 1,
                        ellipse: 1
                    } || Str(params.fill).charAt() != "r") && addGradientFill(res, params.fill, fill)) {
                        a.fill = "none";
                        a.gradient = params.fill;
                        fill.rotate = false;
                    }
                }
            }
            if ("fill-opacity"in params || "opacity"in params) {
                var opacity = ((+a["fill-opacity"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+R.getRGB(params.fill).o + 1 || 2) - 1);
                opacity = mmin(mmax(opacity, 0), 1);
                fill.opacity = opacity;
                if (fill.src) {
                    fill.color = "none";
                }
            }
            node.appendChild(fill);
            var stroke = (node.getElementsByTagName("stroke") && node.getElementsByTagName("stroke")[0])
              , newstroke = false;
            !stroke && (newstroke = stroke = createNode("stroke"));
            if ((params.stroke && params.stroke != "none") || params["stroke-width"] || params["stroke-opacity"] != null || params["stroke-dasharray"] || params["stroke-miterlimit"] || params["stroke-linejoin"] || params["stroke-linecap"]) {
                stroke.on = true;
            }
            (params.stroke == "none" || params.stroke === null || stroke.on == null || params.stroke == 0 || params["stroke-width"] == 0) && (stroke.on = false);
            var strokeColor = R.getRGB(params.stroke);
            stroke.on && params.stroke && (stroke.color = strokeColor.hex);
            opacity = ((+a["stroke-opacity"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+strokeColor.o + 1 || 2) - 1);
            var width = (toFloat(params["stroke-width"]) || 1) * .75;
            opacity = mmin(mmax(opacity, 0), 1);
            params["stroke-width"] == null && (width = a["stroke-width"]);
            params["stroke-width"] && (stroke.weight = width);
            width && width < 1 && (opacity *= width) && (stroke.weight = 1);
            stroke.opacity = opacity;

            params["stroke-linejoin"] && (stroke.joinstyle = params["stroke-linejoin"] || "miter");
            stroke.miterlimit = params["stroke-miterlimit"] || 8;
            params["stroke-linecap"] && (stroke.endcap = params["stroke-linecap"] == "butt" ? "flat" : params["stroke-linecap"] == "square" ? "square" : "round");
            if (params["stroke-dasharray"]) {
                var dasharray = {
                    "-": "shortdash",
                    ".": "shortdot",
                    "-.": "shortdashdot",
                    "-..": "shortdashdotdot",
                    ". ": "dot",
                    "- ": "dash",
                    "--": "longdash",
                    "- .": "dashdot",
                    "--.": "longdashdot",
                    "--..": "longdashdotdot"
                };
                stroke.dashstyle = dasharray[has](params["stroke-dasharray"]) ? dasharray[params["stroke-dasharray"]] : E;
            }
            newstroke && node.appendChild(stroke);
        }
        if (res.type == "text") {
            res.paper.canvas.style.display = E;
            var span = res.paper.span
              , m = 100
              , fontSize = a.font && a.font.match(/\d+(?:\.\d*)?(?=px)/);
            s = span.style;
            a.font && (s.font = a.font);
            a["font-family"] && (s.fontFamily = a["font-family"]);
            a["font-weight"] && (s.fontWeight = a["font-weight"]);
            a["font-style"] && (s.fontStyle = a["font-style"]);
            fontSize = toFloat(a["font-size"] || fontSize && fontSize[0]) || 10;
            s.fontSize = fontSize * m + "px";
            res.textpath.string && (span.innerHTML = Str(res.textpath.string).replace(/</g, "&#60;").replace(/&/g, "&#38;").replace(/\n/g, "<br>"));
            var brect = span.getBoundingClientRect();
            res.W = a.w = (brect.right - brect.left) / m;
            res.H = a.h = (brect.bottom - brect.top) / m;
            // res.paper.canvas.style.display = "none";
            res.X = a.x;
            res.Y = a.y + res.H / 2;

            ("x"in params || "y"in params) && (res.path.v = R.format("m{0},{1}l{2},{1}", round(a.x * zoom), round(a.y * zoom), round(a.x * zoom) + 1));
            var dirtyattrs = ["x", "y", "text", "font", "font-family", "font-weight", "font-style", "font-size"];
            for (var d = 0, dd = dirtyattrs.length; d < dd; d++)
                if (dirtyattrs[d]in params) {
                    res._.dirty = 1;
                    break;
                }

            // text-anchor emulation
            switch (a["text-anchor"]) {
            case "start":
                res.textpath.style["v-text-align"] = "left";
                res.bbx = res.W / 2;
                break;
            case "end":
                res.textpath.style["v-text-align"] = "right";
                res.bbx = -res.W / 2;
                break;
            default:
                res.textpath.style["v-text-align"] = "center";
                res.bbx = 0;
                break;
            }
            res.textpath.style["v-text-kern"] = true;
        }
        // res.paper.canvas.style.display = E;
    }
      , addGradientFill = function(o, gradient, fill) {
        o.attrs = o.attrs || {};
        var attrs = o.attrs, pow = Math.pow, opacity, oindex, type = "linear", fxfy = ".5 .5";
        o.attrs.gradient = gradient;
        gradient = Str(gradient).replace(R._radial_gradient, function(all, fx, fy) {
            type = "radial";
            if (fx && fy) {
                fx = toFloat(fx);
                fy = toFloat(fy);
                pow(fx - .5, 2) + pow(fy - .5, 2) > .25 && (fy = math.sqrt(.25 - pow(fx - .5, 2)) * ((fy > .5) * 2 - 1) + .5);
                fxfy = fx + S + fy;
            }
            return E;
        });
        gradient = gradient.split(/\s*\-\s*/);
        if (type == "linear") {
            var angle = gradient.shift();
            angle = -toFloat(angle);
            if (isNaN(angle)) {
                return null;
            }
        }
        var dots = R._parseDots(gradient);
        if (!dots) {
            return null;
        }
        o = o.shape || o.node;
        if (dots.length) {
            o.removeChild(fill);
            fill.on = true;
            fill.method = "none";
            fill.color = dots[0].color;
            fill.color2 = dots[dots.length - 1].color;
            var clrs = [];
            for (var i = 0, ii = dots.length; i < ii; i++) {
                dots[i].offset && clrs.push(dots[i].offset + S + dots[i].color);
            }
            fill.colors = clrs.length ? clrs.join() : "0% " + fill.color;
            if (type == "radial") {
                fill.type = "gradientTitle";
                fill.focus = "100%";
                fill.focussize = "0 0";
                fill.focusposition = fxfy;
                fill.angle = 0;
            } else {
                // fill.rotate= true;
                fill.type = "gradient";
                fill.angle = (270 - angle) % 360;
            }
            o.appendChild(fill);
        }
        return 1;
    }
      , Element = function(node, vml) {
        this[0] = this.node = node;
        node.raphael = true;
        this.id = R._oid++;
        node.raphaelid = this.id;
        this.X = 0;
        this.Y = 0;
        this.attrs = {};
        this.paper = vml;
        this.matrix = R.matrix();
        this._ = {
            transform: [],
            sx: 1,
            sy: 1,
            dx: 0,
            dy: 0,
            deg: 0,
            dirty: 1,
            dirtyT: 1
        };
        !vml.bottom && (vml.bottom = this);
        this.prev = vml.top;
        vml.top && (vml.top.next = this);
        vml.top = this;
        this.next = null;
    };
    var elproto = R.el;

    Element.prototype = elproto;
    elproto.constructor = Element;
    elproto.transform = function(tstr) {
        if (tstr == null) {
            return this._.transform;
        }
        var vbs = this.paper._viewBoxShift, vbt = vbs ? "s" + [vbs.scale, vbs.scale] + "-1-1t" + [vbs.dx, vbs.dy] : E, oldt;
        if (vbs) {
            oldt = tstr = Str(tstr).replace(/\.{3}|\u2026/g, this._.transform || E);
        }
        R._extractTransform(this, vbt + tstr);
        var matrix = this.matrix.clone(), skew = this.skew, o = this.node, split, isGrad = ~Str(this.attrs.fill).indexOf("-"), isPatt = !Str(this.attrs.fill).indexOf("url(");
        matrix.translate(-.5, -.5);
        if (isPatt || isGrad || this.type == "image") {
            skew.matrix = "1 0 0 1";
            skew.offset = "0 0";
            split = matrix.split();
            if ((isGrad && split.noRotation) || !split.isSimple) {
                o.style.filter = matrix.toFilter();
                var bb = this.getBBox()
                  , bbt = this.getBBox(1)
                  , dx = bb.x - bbt.x
                  , dy = bb.y - bbt.y;
                o.coordorigin = (dx * -zoom) + S + (dy * -zoom);
                setCoords(this, 1, 1, dx, dy, 0);
            } else {
                o.style.filter = E;
                setCoords(this, split.scalex, split.scaley, split.dx, split.dy, split.rotate);
            }
        } else {
            o.style.filter = E;
            skew.matrix = Str(matrix);
            skew.offset = matrix.offset();
        }
        oldt && (this._.transform = oldt);
        return this;
    }
    ;
    elproto.rotate = function(deg, cx, cy) {
        if (this.removed) {
            return this;
        }
        if (deg == null) {
            return;
        }
        deg = Str(deg).split(separator);
        if (deg.length - 1) {
            cx = toFloat(deg[1]);
            cy = toFloat(deg[2]);
        }
        deg = toFloat(deg[0]);
        (cy == null) && (cx = cy);
        if (cx == null || cy == null) {
            var bbox = this.getBBox(1);
            cx = bbox.x + bbox.width / 2;
            cy = bbox.y + bbox.height / 2;
        }
        this._.dirtyT = 1;
        this.transform(this._.transform.concat([["r", deg, cx, cy]]));
        return this;
    }
    ;
    elproto.translate = function(dx, dy) {
        if (this.removed) {
            return this;
        }
        dx = Str(dx).split(separator);
        if (dx.length - 1) {
            dy = toFloat(dx[1]);
        }
        dx = toFloat(dx[0]) || 0;
        dy = +dy || 0;
        if (this._.bbox) {
            this._.bbox.x += dx;
            this._.bbox.y += dy;
        }
        this.transform(this._.transform.concat([["t", dx, dy]]));
        return this;
    }
    ;
    elproto.scale = function(sx, sy, cx, cy) {
        if (this.removed) {
            return this;
        }
        sx = Str(sx).split(separator);
        if (sx.length - 1) {
            sy = toFloat(sx[1]);
            cx = toFloat(sx[2]);
            cy = toFloat(sx[3]);
            isNaN(cx) && (cx = null);
            isNaN(cy) && (cy = null);
        }
        sx = toFloat(sx[0]);
        (sy == null) && (sy = sx);
        (cy == null) && (cx = cy);
        if (cx == null || cy == null) {
            var bbox = this.getBBox(1);
        }
        cx = cx == null ? bbox.x + bbox.width / 2 : cx;
        cy = cy == null ? bbox.y + bbox.height / 2 : cy;

        this.transform(this._.transform.concat([["s", sx, sy, cx, cy]]));
        this._.dirtyT = 1;
        return this;
    }
    ;
    elproto.hide = function() {
        !this.removed && (this.node.style.display = "none");
        return this;
    }
    ;
    elproto.show = function() {
        !this.removed && (this.node.style.display = E);
        return this;
    }
    ;
    elproto._getBBox = function() {
        if (this.removed) {
            return {};
        }
        return {
            x: this.X + (this.bbx || 0) - this.W / 2,
            y: this.Y - this.H,
            width: this.W,
            height: this.H
        };
    }
    ;
    elproto.remove = function() {
        if (this.removed || !this.node.parentNode) {
            return;
        }
        this.paper.__set__ && this.paper.__set__.exclude(this);
        R.eve.unbind("raphael.*.*." + this.id);
        R._tear(this, this.paper);
        this.node.parentNode.removeChild(this.node);
        this.shape && this.shape.parentNode.removeChild(this.shape);
        for (var i in this) {
            this[i] = typeof this[i] == "function" ? R._removedFactory(i) : null;
        }
        this.removed = true;
    }
    ;
    elproto.attr = function(name, value) {
        if (this.removed) {
            return this;
        }
        if (name == null) {
            var res = {};
            for (var a in this.attrs)
                if (this.attrs[has](a)) {
                    res[a] = this.attrs[a];
                }
            res.gradient && res.fill == "none" && (res.fill = res.gradient) && delete res.gradient;
            res.transform = this._.transform;
            return res;
        }
        if (value == null && R.is(name, "string")) {
            if (name == fillString && this.attrs.fill == "none" && this.attrs.gradient) {
                return this.attrs.gradient;
            }
            var names = name.split(separator)
              , out = {};
            for (var i = 0, ii = names.length; i < ii; i++) {
                name = names[i];
                if (name in this.attrs) {
                    out[name] = this.attrs[name];
                } else if (R.is(this.paper.customAttributes[name], "function")) {
                    out[name] = this.paper.customAttributes[name].def;
                } else {
                    out[name] = R._availableAttrs[name];
                }
            }
            return ii - 1 ? out : out[names[0]];
        }
        if (this.attrs && value == null && R.is(name, "array")) {
            out = {};
            for (i = 0,
            ii = name.length; i < ii; i++) {
                out[name[i]] = this.attr(name[i]);
            }
            return out;
        }
        var params;
        if (value != null) {
            params = {};
            params[name] = value;
        }
        value == null && R.is(name, "object") && (params = name);
        for (var key in params) {
            eve("raphael.attr." + key + "." + this.id, this, params[key]);
        }
        if (params) {
            for (key in this.paper.customAttributes)
                if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], "function")) {
                    var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));
                    this.attrs[key] = params[key];
                    for (var subkey in par)
                        if (par[has](subkey)) {
                            params[subkey] = par[subkey];
                        }
                }
            // this.paper.canvas.style.display = "none";
            if (params.text && this.type == "text") {
                this.textpath.string = params.text;
            }
            setFillAndStroke(this, params);
            // this.paper.canvas.style.display = E;
        }
        return this;
    }
    ;
    elproto.toFront = function() {
        !this.removed && this.node.parentNode.appendChild(this.node);
        this.paper && this.paper.top != this && R._tofront(this, this.paper);
        return this;
    }
    ;
    elproto.toBack = function() {
        if (this.removed) {
            return this;
        }
        if (this.node.parentNode.firstChild != this.node) {
            this.node.parentNode.insertBefore(this.node, this.node.parentNode.firstChild);
            R._toback(this, this.paper);
        }
        return this;
    }
    ;
    elproto.insertAfter = function(element) {
        if (this.removed) {
            return this;
        }
        if (element.constructor == R.st.constructor) {
            element = element[element.length - 1];
        }
        if (element.node.nextSibling) {
            element.node.parentNode.insertBefore(this.node, element.node.nextSibling);
        } else {
            element.node.parentNode.appendChild(this.node);
        }
        R._insertafter(this, element, this.paper);
        return this;
    }
    ;
    elproto.insertBefore = function(element) {
        if (this.removed) {
            return this;
        }
        if (element.constructor == R.st.constructor) {
            element = element[0];
        }
        element.node.parentNode.insertBefore(this.node, element.node);
        R._insertbefore(this, element, this.paper);
        return this;
    }
    ;
    elproto.blur = function(size) {
        var s = this.node.runtimeStyle
          , f = s.filter;
        f = f.replace(blurregexp, E);
        if (+size !== 0) {
            this.attrs.blur = size;
            s.filter = f + S + ms + ".Blur(pixelradius=" + (+size || 1.5) + ")";
            s.margin = R.format("-{0}px 0 0 -{0}px", round(+size || 1.5));
        } else {
            s.filter = f;
            s.margin = 0;
            delete this.attrs.blur;
        }
    }
    ;

    R._engine.path = function(pathString, vml) {
        var el = createNode("shape");
        el.style.cssText = cssDot;
        el.coordsize = zoom + S + zoom;
        el.coordorigin = vml.coordorigin;
        var p = new Element(el,vml)
          , attr = {
            fill: "none",
            stroke: "#000"
        };
        pathString && (attr.path = pathString);
        p.type = "path";
        p.path = [];
        p.Path = E;
        setFillAndStroke(p, attr);
        vml.canvas.appendChild(el);
        var skew = createNode("skew");
        skew.on = true;
        el.appendChild(skew);
        p.skew = skew;
        p.transform(E);
        return p;
    }
    ;
    R._engine.rect = function(vml, x, y, w, h, r) {
        var path = R._rectPath(x, y, w, h, r)
          , res = vml.path(path)
          , a = res.attrs;
        res.X = a.x = x;
        res.Y = a.y = y;
        res.W = a.width = w;
        res.H = a.height = h;
        a.r = r;
        a.path = path;
        res.type = "rect";
        return res;
    }
    ;
    R._engine.ellipse = function(vml, x, y, rx, ry) {
        var res = vml.path()
          , a = res.attrs;
        res.X = x - rx;
        res.Y = y - ry;
        res.W = rx * 2;
        res.H = ry * 2;
        res.type = "ellipse";
        setFillAndStroke(res, {
            cx: x,
            cy: y,
            rx: rx,
            ry: ry
        });
        return res;
    }
    ;
    R._engine.circle = function(vml, x, y, r) {
        var res = vml.path()
          , a = res.attrs;
        res.X = x - r;
        res.Y = y - r;
        res.W = res.H = r * 2;
        res.type = "circle";
        setFillAndStroke(res, {
            cx: x,
            cy: y,
            r: r
        });
        return res;
    }
    ;
    R._engine.image = function(vml, src, x, y, w, h) {
        var path = R._rectPath(x, y, w, h)
          , res = vml.path(path).attr({
            stroke: "none"
        })
          , a = res.attrs
          , node = res.node
          , fill = node.getElementsByTagName(fillString)[0];
        a.src = src;
        res.X = a.x = x;
        res.Y = a.y = y;
        res.W = a.width = w;
        res.H = a.height = h;
        a.path = path;
        res.type = "image";
        fill.parentNode == node && node.removeChild(fill);
        fill.rotate = true;
        fill.src = src;
        fill.type = "tile";
        res._.fillpos = [x, y];
        res._.fillsize = [w, h];
        node.appendChild(fill);
        setCoords(res, 1, 1, 0, 0, 0);
        return res;
    }
    ;
    R._engine.text = function(vml, x, y, text) {
        var el = createNode("shape")
          , path = createNode("path")
          , o = createNode("textpath");
        x = x || 0;
        y = y || 0;
        text = text || "";
        path.v = R.format("m{0},{1}l{2},{1}", round(x * zoom), round(y * zoom), round(x * zoom) + 1);
        path.textpathok = true;
        o.string = Str(text);
        o.on = true;
        el.style.cssText = cssDot;
        el.coordsize = zoom + S + zoom;
        el.coordorigin = "0 0";
        var p = new Element(el,vml)
          , attr = {
            fill: "#000",
            stroke: "none",
            font: R._availableAttrs.font,
            text: text
        };
        p.shape = el;
        p.path = path;
        p.textpath = o;
        p.type = "text";
        p.attrs.text = Str(text);
        p.attrs.x = x;
        p.attrs.y = y;
        p.attrs.w = 1;
        p.attrs.h = 1;
        setFillAndStroke(p, attr);
        el.appendChild(o);
        el.appendChild(path);
        vml.canvas.appendChild(el);
        var skew = createNode("skew");
        skew.on = true;
        el.appendChild(skew);
        p.skew = skew;
        p.transform(E);
        return p;
    }
    ;
    R._engine.setSize = function(width, height) {
        var cs = this.canvas.style;
        this.width = width;
        this.height = height;
        width == +width && (width += "px");
        height == +height && (height += "px");
        cs.width = width;
        cs.height = height;
        cs.clip = "rect(0 " + width + " " + height + " 0)";
        if (this._viewBox) {
            R._engine.setViewBox.apply(this, this._viewBox);
        }
        return this;
    }
    ;
    R._engine.setViewBox = function(x, y, w, h, fit) {
        R.eve("raphael.setViewBox", this, this._viewBox, [x, y, w, h, fit]);
        var width = this.width, height = this.height, size = 1 / mmax(w / width, h / height), H, W;
        if (fit) {
            H = height / h;
            W = width / w;
            if (w * H < width) {
                x -= (width - w * H) / 2 / H;
            }
            if (h * W < height) {
                y -= (height - h * W) / 2 / W;
            }
        }
        this._viewBox = [x, y, w, h, !!fit];
        this._viewBoxShift = {
            dx: -x,
            dy: -y,
            scale: size
        };
        this.forEach(function(el) {
            el.transform("...");
        });
        return this;
    }
    ;
    var createNode;
    R._engine.initWin = function(win) {
        var doc = win.document;
        doc.createStyleSheet().addRule(".rvml", "behavior:url(#default#VML)");
        try {
            !doc.namespaces.rvml && doc.namespaces.add("rvml", "urn:schemas-microsoft-com:vml");
            createNode = function(tagName) {
                return doc.createElement('<rvml:' + tagName + ' class="rvml">');
            }
            ;
        } catch (e) {
            createNode = function(tagName) {
                return doc.createElement('<' + tagName + ' xmlns="urn:schemas-microsoft.com:vml" class="rvml">');
            }
            ;
        }
    }
    ;
    R._engine.initWin(R._g.win);
    R._engine.create = function() {
        var con = R._getContainer.apply(0, arguments), container = con.container, height = con.height, s, width = con.width, x = con.x, y = con.y;
        if (!container) {
            throw new Error("VML container not found.");
        }
        var res = new R._Paper
          , c = res.canvas = R._g.doc.createElement("div")
          , cs = c.style;
        x = x || 0;
        y = y || 0;
        width = width || 512;
        height = height || 342;
        res.width = width;
        res.height = height;
        width == +width && (width += "px");
        height == +height && (height += "px");
        res.coordsize = zoom * 1e3 + S + zoom * 1e3;
        res.coordorigin = "0 0";
        res.span = R._g.doc.createElement("span");
        res.span.style.cssText = "position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;";
        c.appendChild(res.span);
        cs.cssText = R.format("top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden", width, height);
        if (container == 1) {
            R._g.doc.body.appendChild(c);
            cs.left = x + "px";
            cs.top = y + "px";
            cs.position = "absolute";
        } else {
            if (container.firstChild) {
                container.insertBefore(c, container.firstChild);
            } else {
                container.appendChild(c);
            }
        }
        res.renderfix = function() {}
        ;
        return res;
    }
    ;
    R.prototype.clear = function() {
        R.eve("raphael.clear", this);
        this.canvas.innerHTML = E;
        this.span = R._g.doc.createElement("span");
        this.span.style.cssText = "position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;";
        this.canvas.appendChild(this.span);
        this.bottom = this.top = null;
    }
    ;
    R.prototype.remove = function() {
        R.eve("raphael.remove", this);
        this.canvas.parentNode.removeChild(this.canvas);
        for (var i in this) {
            this[i] = typeof this[i] == "function" ? R._removedFactory(i) : null;
        }
        return true;
    }
    ;

    var setproto = R.st;
    for (var method in elproto)
        if (elproto[has](method) && !setproto[has](method)) {
            setproto[method] = (function(methodname) {
                return function() {
                    var arg = arguments;
                    return this.forEach(function(el) {
                        el[methodname].apply(el, arg);
                    });
                }
                ;
            }
            )(method);
        }
}(window.Raphael);
/**
 * Copyright 2010 Tim Down.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Hashtable = (function() {
    var p = "function";
    var n = (typeof Array.prototype.splice == p) ? function(s, r) {
        s.splice(r, 1)
    }
    : function(u, t) {
        var s, v, r;
        if (t === u.length - 1) {
            u.length = t
        } else {
            s = u.slice(t + 1);
            u.length = t;
            for (v = 0,
            r = s.length; v < r; ++v) {
                u[t + v] = s[v]
            }
        }
    }
    ;
    function a(t) {
        var r;
        if (typeof t == "string") {
            return t
        } else {
            if (typeof t.hashCode == p) {
                r = t.hashCode();
                return (typeof r == "string") ? r : a(r)
            } else {
                if (typeof t.toString == p) {
                    return t.toString()
                } else {
                    try {
                        return String(t)
                    } catch (s) {
                        return Object.prototype.toString.call(t)
                    }
                }
            }
        }
    }
    function g(r, s) {
        return r.equals(s)
    }
    function e(r, s) {
        return (typeof s.equals == p) ? s.equals(r) : (r === s)
    }
    function c(r) {
        return function(s) {
            if (s === null) {
                throw new Error("null is not a valid " + r)
            } else {
                if (typeof s == "undefined") {
                    throw new Error(r + " must not be undefined")
                }
            }
        }
    }
    var q = c("key")
      , l = c("value");
    function d(u, s, t, r) {
        this[0] = u;
        this.entries = [];
        this.addEntry(s, t);
        if (r !== null) {
            this.getEqualityFunction = function() {
                return r
            }
        }
    }
    var h = 0
      , j = 1
      , f = 2;
    function o(r) {
        return function(t) {
            var s = this.entries.length, v, u = this.getEqualityFunction(t);
            while (s--) {
                v = this.entries[s];
                if (u(t, v[0])) {
                    switch (r) {
                    case h:
                        return true;
                    case j:
                        return v;
                    case f:
                        return [s, v[1]]
                    }
                }
            }
            return false
        }
    }
    function k(r) {
        return function(u) {
            var v = u.length;
            for (var t = 0, s = this.entries.length; t < s; ++t) {
                u[v + t] = this.entries[t][r]
            }
        }
    }
    d.prototype = {
        getEqualityFunction: function(r) {
            return (typeof r.equals == p) ? g : e
        },
        getEntryForKey: o(j),
        getEntryAndIndexForKey: o(f),
        removeEntryForKey: function(s) {
            var r = this.getEntryAndIndexForKey(s);
            if (r) {
                n(this.entries, r[0]);
                return r[1]
            }
            return null
        },
        addEntry: function(r, s) {
            this.entries[this.entries.length] = [r, s]
        },
        keys: k(0),
        values: k(1),
        getEntries: function(s) {
            var u = s.length;
            for (var t = 0, r = this.entries.length; t < r; ++t) {
                s[u + t] = this.entries[t].slice(0)
            }
        },
        containsKey: o(h),
        containsValue: function(s) {
            var r = this.entries.length;
            while (r--) {
                if (s === this.entries[r][1]) {
                    return true
                }
            }
            return false
        }
    };
    function m(s, t) {
        var r = s.length, u;
        while (r--) {
            u = s[r];
            if (t === u[0]) {
                return r
            }
        }
        return null
    }
    function i(r, s) {
        var t = r[s];
        return (t && (t instanceof d)) ? t : null
    }
    function b(t, r) {
        var w = this;
        var v = [];
        var u = {};
        var x = (typeof t == p) ? t : a;
        var s = (typeof r == p) ? r : null;
        this.put = function(B, C) {
            q(B);
            l(C);
            var D = x(B), E, A, z = null;
            E = i(u, D);
            if (E) {
                A = E.getEntryForKey(B);
                if (A) {
                    z = A[1];
                    A[1] = C
                } else {
                    E.addEntry(B, C)
                }
            } else {
                E = new d(D,B,C,s);
                v[v.length] = E;
                u[D] = E
            }
            return z
        }
        ;
        this.get = function(A) {
            q(A);
            var B = x(A);
            var C = i(u, B);
            if (C) {
                var z = C.getEntryForKey(A);
                if (z) {
                    return z[1]
                }
            }
            return null
        }
        ;
        this.containsKey = function(A) {
            q(A);
            var z = x(A);
            var B = i(u, z);
            return B ? B.containsKey(A) : false
        }
        ;
        this.containsValue = function(A) {
            l(A);
            var z = v.length;
            while (z--) {
                if (v[z].containsValue(A)) {
                    return true
                }
            }
            return false
        }
        ;
        this.clear = function() {
            v.length = 0;
            u = {}
        }
        ;
        this.isEmpty = function() {
            return !v.length
        }
        ;
        var y = function(z) {
            return function() {
                var A = []
                  , B = v.length;
                while (B--) {
                    v[B][z](A)
                }
                return A
            }
        };
        this.keys = y("keys");
        this.values = y("values");
        this.entries = y("getEntries");
        this.remove = function(B) {
            q(B);
            var C = x(B), z, A = null;
            var D = i(u, C);
            if (D) {
                A = D.removeEntryForKey(B);
                if (A !== null) {
                    if (!D.entries.length) {
                        z = m(v, C);
                        n(v, z);
                        delete u[C]
                    }
                }
            }
            return A
        }
        ;
        this.size = function() {
            var A = 0
              , z = v.length;
            while (z--) {
                A += v[z].entries.length
            }
            return A
        }
        ;
        this.each = function(C) {
            var z = w.entries(), A = z.length, B;
            while (A--) {
                B = z[A];
                C(B[0], B[1])
            }
        }
        ;
        this.putAll = function(H, C) {
            var B = H.entries();
            var E, F, D, z, A = B.length;
            var G = (typeof C == p);
            while (A--) {
                E = B[A];
                F = E[0];
                D = E[1];
                if (G && (z = w.get(F))) {
                    D = C(F, z, D)
                }
                w.put(F, D)
            }
        }
        ;
        this.clone = function() {
            var z = new b(t,r);
            z.putAll(w);
            return z
        }
    }
    return b
}
)();
(function(jQuery) {
    var nfLocales = new Hashtable();
    var nfLocalesLikeUS = ['ae', 'au', 'ca', 'cn', 'eg', 'gb', 'hk', 'il', 'in', 'jp', 'sk', 'th', 'tw', 'us'];
    var nfLocalesLikeDE = ['at', 'br', 'de', 'dk', 'es', 'gr', 'it', 'nl', 'pt', 'tr', 'vn'];
    var nfLocalesLikeFR = ['cz', 'fi', 'fr', 'ru', 'se', 'pl'];
    var nfLocalesLikeCH = ['ch'];
    var nfLocaleFormatting = [[".", ","], [",", "."], [",", " "], [".", "'"]];
    var nfAllLocales = [nfLocalesLikeUS, nfLocalesLikeDE, nfLocalesLikeFR, nfLocalesLikeCH]
    function FormatData(dec, group, neg) {
        this.dec = dec;
        this.group = group;
        this.neg = neg;
    }
    ;function init() {
        for (var localeGroupIdx = 0; localeGroupIdx < nfAllLocales.length; localeGroupIdx++) {
            localeGroup = nfAllLocales[localeGroupIdx];
            for (var i = 0; i < localeGroup.length; i++) {
                nfLocales.put(localeGroup[i], localeGroupIdx);
            }
        }
    }
    ;function formatCodes(locale, isFullLocale) {
        if (nfLocales.size() == 0)
            init();
        var dec = ".";
        var group = ",";
        var neg = "-";
        if (isFullLocale == false) {
            if (locale.indexOf('_') != -1)
                locale = locale.split('_')[1].toLowerCase();
            else if (locale.indexOf('-') != -1)
                locale = locale.split('-')[1].toLowerCase();
        }
        var codesIndex = nfLocales.get(locale);
        if (codesIndex) {
            var codes = nfLocaleFormatting[codesIndex];
            if (codes) {
                dec = codes[0];
                group = codes[1];
            }
        }
        return new FormatData(dec,group,neg);
    }
    ;jQuery.fn.formatNumber = function(options, writeBack, giveReturnValue) {
        return this.each(function() {
            if (writeBack == null)
                writeBack = true;
            if (giveReturnValue == null)
                giveReturnValue = true;
            var text;
            if (jQuery(this).is(":input"))
                text = new String(jQuery(this).val());
            else
                text = new String(jQuery(this).text());
            var returnString = jQuery.formatNumber(text, options);
            if (writeBack) {
                if (jQuery(this).is(":input"))
                    jQuery(this).val(returnString);
                else
                    jQuery(this).text(returnString);
            }
            if (giveReturnValue)
                return returnString;
        });
    }
    ;
    jQuery.formatNumber = function(numberString, options) {
        var options = jQuery.extend({}, jQuery.fn.formatNumber.defaults, options);
        var formatData = formatCodes(options.locale.toLowerCase(), options.isFullLocale);
        var dec = formatData.dec;
        var group = formatData.group;
        var neg = formatData.neg;
        var validFormat = "0#-,.";
        var prefix = "";
        var negativeInFront = false;
        for (var i = 0; i < options.format.length; i++) {
            if (validFormat.indexOf(options.format.charAt(i)) == -1)
                prefix = prefix + options.format.charAt(i);
            else if (i == 0 && options.format.charAt(i) == '-') {
                negativeInFront = true;
                continue;
            } else
                break;
        }
        var suffix = "";
        for (var i = options.format.length - 1; i >= 0; i--) {
            if (validFormat.indexOf(options.format.charAt(i)) == -1)
                suffix = options.format.charAt(i) + suffix;
            else
                break;
        }
        options.format = options.format.substring(prefix.length);
        options.format = options.format.substring(0, options.format.length - suffix.length);
        var number = new Number(numberString);
        return jQuery._formatNumber(number, options, suffix, prefix, negativeInFront);
    }
    ;
    jQuery._formatNumber = function(number, options, suffix, prefix, negativeInFront) {
        var options = jQuery.extend({}, jQuery.fn.formatNumber.defaults, options);
        var formatData = formatCodes(options.locale.toLowerCase(), options.isFullLocale);
        var dec = formatData.dec;
        var group = formatData.group;
        var neg = formatData.neg;
        var forcedToZero = false;
        if (isNaN(number)) {
            if (options.nanForceZero == true) {
                number = 0;
                forcedToZero = true;
            } else
                return null;
        }
        if (suffix == "%")
            number = number * 100;
        var returnString = "";
        if (options.format.indexOf(".") > -1) {
            var decimalPortion = dec;
            var decimalFormat = options.format.substring(options.format.lastIndexOf(".") + 1);
            if (options.round == true)
                number = new Number(number.toFixed(decimalFormat.length));
            else {
                var numStr = number.toString();
                numStr = numStr.substring(0, numStr.lastIndexOf('.') + decimalFormat.length + 1);
                number = new Number(numStr);
            }
            var decimalValue = number % 1;
            var decimalString = new String(decimalValue.toFixed(decimalFormat.length));
            decimalString = decimalString.substring(decimalString.lastIndexOf(".") + 1);
            for (var i = 0; i < decimalFormat.length; i++) {
                if (decimalFormat.charAt(i) == '#' && decimalString.charAt(i) != '0') {
                    decimalPortion += decimalString.charAt(i);
                    continue;
                } else if (decimalFormat.charAt(i) == '#' && decimalString.charAt(i) == '0') {
                    var notParsed = decimalString.substring(i);
                    if (notParsed.match('[1-9]')) {
                        decimalPortion += decimalString.charAt(i);
                        continue;
                    } else
                        break;
                } else if (decimalFormat.charAt(i) == "0")
                    decimalPortion += decimalString.charAt(i);
            }
            returnString += decimalPortion
        } else
            number = Math.round(number);
        var ones = Math.floor(number);
        if (number < 0)
            ones = Math.ceil(number);
        var onesFormat = "";
        if (options.format.indexOf(".") == -1)
            onesFormat = options.format;
        else
            onesFormat = options.format.substring(0, options.format.indexOf("."));
        var onePortion = "";
        if (!(ones == 0 && onesFormat.substr(onesFormat.length - 1) == '#') || forcedToZero) {
            var oneText = new String(Math.abs(ones));
            var groupLength = 9999;
            if (onesFormat.lastIndexOf(",") != -1)
                groupLength = onesFormat.length - onesFormat.lastIndexOf(",") - 1;
            var groupCount = 0;
            for (var i = oneText.length - 1; i > -1; i--) {
                onePortion = oneText.charAt(i) + onePortion;
                groupCount++;
                if (groupCount == groupLength && i != 0) {
                    onePortion = group + onePortion;
                    groupCount = 0;
                }
            }
            if (onesFormat.length > onePortion.length) {
                var padStart = onesFormat.indexOf('0');
                if (padStart != -1) {
                    var padLen = onesFormat.length - padStart;
                    var pos = onesFormat.length - onePortion.length - 1;
                    while (onePortion.length < padLen) {
                        var padChar = onesFormat.charAt(pos);
                        if (padChar == ',')
                            padChar = group;
                        onePortion = padChar + onePortion;
                        pos--;
                    }
                }
            }
        }
        if (!onePortion && onesFormat.indexOf('0', onesFormat.length - 1) !== -1)
            onePortion = '0';
        returnString = onePortion + returnString;
        if (number < 0 && negativeInFront && prefix.length > 0)
            prefix = neg + prefix;
        else if (number < 0)
            returnString = neg + returnString;
        if (!options.decimalSeparatorAlwaysShown) {
            if (returnString.lastIndexOf(dec) == returnString.length - 1) {
                returnString = returnString.substring(0, returnString.length - 1);
            }
        }
        returnString = prefix + returnString + suffix;
        return returnString;
    }
    ;
    jQuery.fn.parseNumber = function(options, writeBack, giveReturnValue) {
        if (writeBack == null)
            writeBack = true;
        if (giveReturnValue == null)
            giveReturnValue = true;
        var text;
        if (jQuery(this).is(":input"))
            text = new String(jQuery(this).val());
        else
            text = new String(jQuery(this).text());
        var number = jQuery.parseNumber(text, options);
        if (number) {
            if (writeBack) {
                if (jQuery(this).is(":input"))
                    jQuery(this).val(number.toString());
                else
                    jQuery(this).text(number.toString());
            }
            if (giveReturnValue)
                return number;
        }
    }
    ;
    jQuery.parseNumber = function(numberString, options) {
        var options = jQuery.extend({}, jQuery.fn.parseNumber.defaults, options);
        var formatData = formatCodes(options.locale.toLowerCase(), options.isFullLocale);
        var dec = formatData.dec;
        var group = formatData.group;
        var neg = formatData.neg;
        var valid = "1234567890.-";
        while (numberString.indexOf(group) > -1)
            numberString = numberString.replace(group, '');
        numberString = numberString.replace(dec, ".").replace(neg, "-");
        var validText = "";
        var hasPercent = false;
        if (numberString.charAt(numberString.length - 1) == "%" || options.isPercentage == true)
            hasPercent = true;
        for (var i = 0; i < numberString.length; i++) {
            if (valid.indexOf(numberString.charAt(i)) > -1)
                validText = validText + numberString.charAt(i);
        }
        var number = new Number(validText);
        if (hasPercent) {
            number = number / 100;
            var decimalPos = validText.indexOf('.');
            if (decimalPos != -1) {
                var decimalPoints = validText.length - decimalPos - 1;
                number = number.toFixed(decimalPoints + 2);
            } else {
                number = number.toFixed(validText.length - 1);
            }
        }
        return number;
    }
    ;
    jQuery.fn.parseNumber.defaults = {
        locale: "us",
        decimalSeparatorAlwaysShown: false,
        isPercentage: false,
        isFullLocale: false
    };
    jQuery.fn.formatNumber.defaults = {
        format: "#,###.00",
        locale: "us",
        decimalSeparatorAlwaysShown: false,
        nanForceZero: true,
        round: true,
        isFullLocale: false
    };
    Number.prototype.toFixed = function(precision) {
        return jQuery._roundNumber(this, precision);
    }
    ;
    jQuery._roundNumber = function(number, decimalPlaces) {
        var power = Math.pow(10, decimalPlaces || 0);
        var value = String(Math.round(number * power) / power);
        if (decimalPlaces > 0) {
            var dp = value.indexOf(".");
            if (dp == -1) {
                value += '.';
                dp = 0;
            } else {
                dp = value.length - (dp + 1);
            }
            while (dp < decimalPlaces) {
                value += '0';
                dp++;
            }
        }
        return value;
    }
    ;
}
)(jQuery);
/*!
 * angular-translate - v2.9.0 - 2016-01-24
 * 
 * Copyright (c) 2016 The angular-translate team, Pascal Precht; Licensed MIT
 */
!function(a, b) {
    "function" == typeof define && define.amd ? define([], function() {
        return b()
    }) : "object" == typeof exports ? module.exports = b() : b()
}(this, function() {
    function a(a) {
        "use strict";
        var b = a.storageKey()
          , c = a.storage()
          , d = function() {
            var d = a.preferredLanguage();
            angular.isString(d) ? a.use(d) : c.put(b, a.use())
        };
        d.displayName = "fallbackFromIncorrectStorageValue",
        c ? c.get(b) ? a.use(c.get(b))["catch"](d) : d() : angular.isString(a.preferredLanguage()) && a.use(a.preferredLanguage())
    }
    function b() {
        "use strict";
        var a, b, c = null, d = !1, e = !1;
        b = {
            sanitize: function(a, b) {
                return "text" === b && (a = g(a)),
                a
            },
            escape: function(a, b) {
                return "text" === b && (a = f(a)),
                a
            },
            sanitizeParameters: function(a, b) {
                return "params" === b && (a = h(a, g)),
                a
            },
            escapeParameters: function(a, b) {
                return "params" === b && (a = h(a, f)),
                a
            }
        },
        b.escaped = b.escapeParameters,
        this.addStrategy = function(a, c) {
            return b[a] = c,
            this
        }
        ,
        this.removeStrategy = function(a) {
            return delete b[a],
            this
        }
        ,
        this.useStrategy = function(a) {
            return d = !0,
            c = a,
            this
        }
        ,
        this.$get = ["$injector", "$log", function(f, g) {
            var h = {}
              , i = function(a, c, d) {
                return angular.forEach(d, function(d) {
                    if (angular.isFunction(d))
                        a = d(a, c);
                    else if (angular.isFunction(b[d]))
                        a = b[d](a, c);
                    else {
                        if (!angular.isString(b[d]))
                            throw new Error("pascalprecht.translate.$translateSanitization: Unknown sanitization strategy: '" + d + "'");
                        if (!h[b[d]])
                            try {
                                h[b[d]] = f.get(b[d])
                            } catch (e) {
                                throw h[b[d]] = function() {}
                                ,
                                new Error("pascalprecht.translate.$translateSanitization: Unknown sanitization strategy: '" + d + "'")
                            }
                        a = h[b[d]](a, c)
                    }
                }),
                a
            }
              , j = function() {
                d || e || (g.warn("pascalprecht.translate.$translateSanitization: No sanitization strategy has been configured. This can have serious security implications. See http://angular-translate.github.io/docs/#/guide/19_security for details."),
                e = !0)
            };
            return f.has("$sanitize") && (a = f.get("$sanitize")),
            {
                useStrategy: function(a) {
                    return function(b) {
                        a.useStrategy(b)
                    }
                }(this),
                sanitize: function(a, b, d) {
                    if (c || j(),
                    arguments.length < 3 && (d = c),
                    !d)
                        return a;
                    var e = angular.isArray(d) ? d : [d];
                    return i(a, b, e)
                }
            }
        }
        ];
        var f = function(a) {
            var b = angular.element("<div></div>");
            return b.text(a),
            b.html()
        }
          , g = function(b) {
            if (!a)
                throw new Error("pascalprecht.translate.$translateSanitization: Error cannot find $sanitize service. Either include the ngSanitize module (https://docs.angularjs.org/api/ngSanitize) or use a sanitization strategy which does not depend on $sanitize, such as 'escape'.");
            return a(b)
        }
          , h = function(a, b) {
            if (angular.isObject(a)) {
                var c = angular.isArray(a) ? [] : {};
                return angular.forEach(a, function(a, d) {
                    c[d] = h(a, b)
                }),
                c
            }
            return angular.isNumber(a) ? a : b(a)
        }
    }
    function c(a, b, c, d) {
        "use strict";
        var e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t = {}, u = [], v = a, w = [], x = "translate-cloak", y = !1, z = !1, A = ".", B = !1, C = 0, D = !0, E = "default", F = {
            "default": function(a) {
                return (a || "").split("-").join("_")
            },
            java: function(a) {
                var b = (a || "").split("-").join("_")
                  , c = b.split("_");
                return c.length > 1 ? c[0].toLowerCase() + "_" + c[1].toUpperCase() : b
            },
            bcp47: function(a) {
                var b = (a || "").split("_").join("-")
                  , c = b.split("-");
                return c.length > 1 ? c[0].toLowerCase() + "-" + c[1].toUpperCase() : b
            }
        }, G = "2.9.0", H = function() {
            if (angular.isFunction(d.getLocale))
                return d.getLocale();
            var a, c, e = b.$get().navigator, f = ["language", "browserLanguage", "systemLanguage", "userLanguage"];
            if (angular.isArray(e.languages))
                for (a = 0; a < e.languages.length; a++)
                    if (c = e.languages[a],
                    c && c.length)
                        return c;
            for (a = 0; a < f.length; a++)
                if (c = e[f[a]],
                c && c.length)
                    return c;
            return null
        };
        H.displayName = "angular-translate/service: getFirstBrowserLanguage";
        var I = function() {
            var a = H() || "";
            return F[E] && (a = F[E](a)),
            a
        };
        I.displayName = "angular-translate/service: getLocale";
        var J = function(a, b) {
            for (var c = 0, d = a.length; d > c; c++)
                if (a[c] === b)
                    return c;
            return -1
        }
          , K = function() {
            return this.toString().replace(/^\s+|\s+$/g, "")
        }
          , L = function(a) {
            if (a) {
                for (var b = [], c = angular.lowercase(a), d = 0, e = u.length; e > d; d++)
                    b.push(angular.lowercase(u[d]));
                if (J(b, c) > -1)
                    return a;
                if (f) {
                    var g;
                    for (var h in f) {
                        var i = !1
                          , j = Object.prototype.hasOwnProperty.call(f, h) && angular.lowercase(h) === angular.lowercase(a);
                        if ("*" === h.slice(-1) && (i = h.slice(0, -1) === a.slice(0, h.length - 1)),
                        (j || i) && (g = f[h],
                        J(b, angular.lowercase(g)) > -1))
                            return g
                    }
                }
                var k = a.split("_");
                return k.length > 1 && J(b, angular.lowercase(k[0])) > -1 ? k[0] : void 0
            }
        }
          , M = function(a, b) {
            if (!a && !b)
                return t;
            if (a && !b) {
                if (angular.isString(a))
                    return t[a]
            } else
                angular.isObject(t[a]) || (t[a] = {}),
                angular.extend(t[a], N(b));
            return this
        };
        this.translations = M,
        this.cloakClassName = function(a) {
            return a ? (x = a,
            this) : x
        }
        ,
        this.nestedObjectDelimeter = function(a) {
            return a ? (A = a,
            this) : A
        }
        ;
        var N = function(a, b, c, d) {
            var e, f, g, h;
            b || (b = []),
            c || (c = {});
            for (e in a)
                Object.prototype.hasOwnProperty.call(a, e) && (h = a[e],
                angular.isObject(h) ? N(h, b.concat(e), c, e) : (f = b.length ? "" + b.join(A) + A + e : e,
                b.length && e === d && (g = "" + b.join(A),
                c[g] = "@:" + f),
                c[f] = h));
            return c
        };
        N.displayName = "flatObject",
        this.addInterpolation = function(a) {
            return w.push(a),
            this
        }
        ,
        this.useMessageFormatInterpolation = function() {
            return this.useInterpolation("$translateMessageFormatInterpolation")
        }
        ,
        this.useInterpolation = function(a) {
            return n = a,
            this
        }
        ,
        this.useSanitizeValueStrategy = function(a) {
            return c.useStrategy(a),
            this
        }
        ,
        this.preferredLanguage = function(a) {
            return a ? (O(a),
            this) : e
        }
        ;
        var O = function(a) {
            return a && (e = a),
            e
        };
        this.translationNotFoundIndicator = function(a) {
            return this.translationNotFoundIndicatorLeft(a),
            this.translationNotFoundIndicatorRight(a),
            this
        }
        ,
        this.translationNotFoundIndicatorLeft = function(a) {
            return a ? (q = a,
            this) : q
        }
        ,
        this.translationNotFoundIndicatorRight = function(a) {
            return a ? (r = a,
            this) : r
        }
        ,
        this.fallbackLanguage = function(a) {
            return P(a),
            this
        }
        ;
        var P = function(a) {
            return a ? (angular.isString(a) ? (h = !0,
            g = [a]) : angular.isArray(a) && (h = !1,
            g = a),
            angular.isString(e) && J(g, e) < 0 && g.push(e),
            this) : h ? g[0] : g
        };
        this.use = function(a) {
            if (a) {
                if (!t[a] && !o)
                    throw new Error("$translateProvider couldn't find translationTable for langKey: '" + a + "'");
                return i = a,
                this
            }
            return i
        }
        ;
        var Q = function(a) {
            return a ? (v = a,
            this) : l ? l + v : v
        };
        this.storageKey = Q,
        this.useUrlLoader = function(a, b) {
            return this.useLoader("$translateUrlLoader", angular.extend({
                url: a
            }, b))
        }
        ,
        this.useStaticFilesLoader = function(a) {
            return this.useLoader("$translateStaticFilesLoader", a)
        }
        ,
        this.useLoader = function(a, b) {
            return o = a,
            p = b || {},
            this
        }
        ,
        this.useLocalStorage = function() {
            return this.useStorage("$translateLocalStorage")
        }
        ,
        this.useCookieStorage = function() {
            return this.useStorage("$translateCookieStorage")
        }
        ,
        this.useStorage = function(a) {
            return k = a,
            this
        }
        ,
        this.storagePrefix = function(a) {
            return a ? (l = a,
            this) : a
        }
        ,
        this.useMissingTranslationHandlerLog = function() {
            return this.useMissingTranslationHandler("$translateMissingTranslationHandlerLog")
        }
        ,
        this.useMissingTranslationHandler = function(a) {
            return m = a,
            this
        }
        ,
        this.usePostCompiling = function(a) {
            return y = !!a,
            this
        }
        ,
        this.forceAsyncReload = function(a) {
            return z = !!a,
            this
        }
        ,
        this.uniformLanguageTag = function(a) {
            return a ? angular.isString(a) && (a = {
                standard: a
            }) : a = {},
            E = a.standard,
            this
        }
        ,
        this.determinePreferredLanguage = function(a) {
            var b = a && angular.isFunction(a) ? a() : I();
            return e = u.length ? L(b) || b : b,
            this
        }
        ,
        this.registerAvailableLanguageKeys = function(a, b) {
            return a ? (u = a,
            b && (f = b),
            this) : u
        }
        ,
        this.useLoaderCache = function(a) {
            return a === !1 ? s = void 0 : a === !0 ? s = !0 : "undefined" == typeof a ? s = "$translationCache" : a && (s = a),
            this
        }
        ,
        this.directivePriority = function(a) {
            return void 0 === a ? C : (C = a,
            this)
        }
        ,
        this.statefulFilter = function(a) {
            return void 0 === a ? D : (D = a,
            this)
        }
        ,
        this.$get = ["$log", "$injector", "$rootScope", "$q", function(a, b, c, d) {
            var f, l, u, E = b.get(n || "$translateDefaultInterpolation"), F = !1, H = {}, I = {}, R = function(a, b, c, h, j) {
                var m = j && j !== i ? L(j) || j : i;
                if (angular.isArray(a)) {
                    var n = function(a) {
                        for (var e = {}, f = [], g = function(a) {
                            var f = d.defer()
                              , g = function(b) {
                                e[a] = b,
                                f.resolve([a, b])
                            };
                            return R(a, b, c, h, j).then(g, g),
                            f.promise
                        }, i = 0, k = a.length; k > i; i++)
                            f.push(g(a[i]));
                        return d.all(f).then(function() {
                            return e
                        })
                    };
                    return n(a)
                }
                var o = d.defer();
                a && (a = K.apply(a));
                var p = function() {
                    var a = e ? I[e] : I[m];
                    if (l = 0,
                    k && !a) {
                        var b = f.get(v);
                        if (a = I[b],
                        g && g.length) {
                            var c = J(g, b);
                            l = 0 === c ? 1 : 0,
                            J(g, e) < 0 && g.push(e)
                        }
                    }
                    return a
                }();
                if (p) {
                    var q = function() {
                        j || (m = i),
                        ca(a, b, c, h, m).then(o.resolve, o.reject)
                    };
                    q.displayName = "promiseResolved",
                    p["finally"](q, o.reject)
                } else
                    ca(a, b, c, h, m).then(o.resolve, o.reject);
                return o.promise
            }, S = function(a) {
                return q && (a = [q, a].join(" ")),
                r && (a = [a, r].join(" ")),
                a
            }, T = function(a) {
                i = a,
                k && f.put(R.storageKey(), i),
                c.$emit("$translateChangeSuccess", {
                    language: a
                }),
                E.setLocale(i);
                var b = function(a, b) {
                    H[b].setLocale(i)
                };
                b.displayName = "eachInterpolatorLocaleSetter",
                angular.forEach(H, b),
                c.$emit("$translateChangeEnd", {
                    language: a
                })
            }, U = function(a) {
                if (!a)
                    throw "No language key specified for loading.";
                var e = d.defer();
                c.$emit("$translateLoadingStart", {
                    language: a
                }),
                F = !0;
                var f = s;
                "string" == typeof f && (f = b.get(f));
                var g = angular.extend({}, p, {
                    key: a,
                    $http: angular.extend({}, {
                        cache: f
                    }, p.$http)
                })
                  , h = function(b) {
                    var d = {};
                    c.$emit("$translateLoadingSuccess", {
                        language: a
                    }),
                    angular.isArray(b) ? angular.forEach(b, function(a) {
                        angular.extend(d, N(a))
                    }) : angular.extend(d, N(b)),
                    F = !1,
                    e.resolve({
                        key: a,
                        table: d
                    }),
                    c.$emit("$translateLoadingEnd", {
                        language: a
                    })
                };
                h.displayName = "onLoaderSuccess";
                var i = function(a) {
                    c.$emit("$translateLoadingError", {
                        language: a
                    }),
                    e.reject(a),
                    c.$emit("$translateLoadingEnd", {
                        language: a
                    })
                };
                return i.displayName = "onLoaderError",
                b.get(o)(g).then(h, i),
                e.promise
            };
            if (k && (f = b.get(k),
            !f.get || !f.put))
                throw new Error("Couldn't use storage '" + k + "', missing get() or put() method!");
            if (w.length) {
                var V = function(a) {
                    var c = b.get(a);
                    c.setLocale(e || i),
                    H[c.getInterpolationIdentifier()] = c
                };
                V.displayName = "interpolationFactoryAdder",
                angular.forEach(w, V)
            }
            var W = function(a) {
                var b = d.defer();
                if (Object.prototype.hasOwnProperty.call(t, a))
                    b.resolve(t[a]);
                else if (I[a]) {
                    var c = function(a) {
                        M(a.key, a.table),
                        b.resolve(a.table)
                    };
                    c.displayName = "translationTableResolver",
                    I[a].then(c, b.reject)
                } else
                    b.reject();
                return b.promise
            }
              , X = function(a, b, c, e) {
                var f = d.defer()
                  , g = function(d) {
                    if (Object.prototype.hasOwnProperty.call(d, b)) {
                        e.setLocale(a);
                        var g = d[b];
                        "@:" === g.substr(0, 2) ? X(a, g.substr(2), c, e).then(f.resolve, f.reject) : f.resolve(e.interpolate(d[b], c)),
                        e.setLocale(i)
                    } else
                        f.reject()
                };
                return g.displayName = "fallbackTranslationResolver",
                W(a).then(g, f.reject),
                f.promise
            }
              , Y = function(a, b, c, d) {
                var e, f = t[a];
                if (f && Object.prototype.hasOwnProperty.call(f, b)) {
                    if (d.setLocale(a),
                    e = d.interpolate(f[b], c),
                    "@:" === e.substr(0, 2))
                        return Y(a, e.substr(2), c, d);
                    d.setLocale(i)
                }
                return e
            }
              , Z = function(a, c) {
                if (m) {
                    var d = b.get(m)(a, i, c);
                    return void 0 !== d ? d : a
                }
                return a
            }
              , $ = function(a, b, c, e, f) {
                var h = d.defer();
                if (a < g.length) {
                    var i = g[a];
                    X(i, b, c, e).then(h.resolve, function() {
                        $(a + 1, b, c, e, f).then(h.resolve)
                    })
                } else
                    f ? h.resolve(f) : h.resolve(Z(b, c));
                return h.promise
            }
              , _ = function(a, b, c, d) {
                var e;
                if (a < g.length) {
                    var f = g[a];
                    e = Y(f, b, c, d),
                    e || (e = _(a + 1, b, c, d))
                }
                return e
            }
              , aa = function(a, b, c, d) {
                return $(u > 0 ? u : l, a, b, c, d)
            }
              , ba = function(a, b, c) {
                return _(u > 0 ? u : l, a, b, c)
            }
              , ca = function(a, b, c, e, f) {
                var h = d.defer()
                  , i = f ? t[f] : t
                  , j = c ? H[c] : E;
                if (i && Object.prototype.hasOwnProperty.call(i, a)) {
                    var k = i[a];
                    "@:" === k.substr(0, 2) ? R(k.substr(2), b, c, e, f).then(h.resolve, h.reject) : h.resolve(j.interpolate(k, b))
                } else {
                    var l;
                    m && !F && (l = Z(a, b)),
                    f && g && g.length ? aa(a, b, j, e).then(function(a) {
                        h.resolve(a)
                    }, function(a) {
                        h.reject(S(a))
                    }) : m && !F && l ? e ? h.resolve(e) : h.resolve(l) : e ? h.resolve(e) : h.reject(S(a))
                }
                return h.promise
            }
              , da = function(a, b, c, d) {
                var e, f = d ? t[d] : t, h = E;
                if (H && Object.prototype.hasOwnProperty.call(H, c) && (h = H[c]),
                f && Object.prototype.hasOwnProperty.call(f, a)) {
                    var i = f[a];
                    e = "@:" === i.substr(0, 2) ? da(i.substr(2), b, c, d) : h.interpolate(i, b)
                } else {
                    var j;
                    m && !F && (j = Z(a, b)),
                    d && g && g.length ? (l = 0,
                    e = ba(a, b, h)) : e = m && !F && j ? j : S(a)
                }
                return e
            }
              , ea = function(a) {
                j === a && (j = void 0),
                I[a] = void 0
            };
            R.preferredLanguage = function(a) {
                return a && O(a),
                e
            }
            ,
            R.cloakClassName = function() {
                return x
            }
            ,
            R.nestedObjectDelimeter = function() {
                return A
            }
            ,
            R.fallbackLanguage = function(a) {
                if (void 0 !== a && null !== a) {
                    if (P(a),
                    o && g && g.length)
                        for (var b = 0, c = g.length; c > b; b++)
                            I[g[b]] || (I[g[b]] = U(g[b]));
                    R.use(R.use())
                }
                return h ? g[0] : g
            }
            ,
            R.useFallbackLanguage = function(a) {
                if (void 0 !== a && null !== a)
                    if (a) {
                        var b = J(g, a);
                        b > -1 && (u = b)
                    } else
                        u = 0
            }
            ,
            R.proposedLanguage = function() {
                return j
            }
            ,
            R.storage = function() {
                return f
            }
            ,
            R.negotiateLocale = L,
            R.use = function(a) {
                if (!a)
                    return i;
                var b = d.defer();
                c.$emit("$translateChangeStart", {
                    language: a
                });
                var e = L(a);
                return e && (a = e),
                !z && t[a] || !o || I[a] ? j === a && I[a] ? I[a].then(function(a) {
                    return b.resolve(a.key),
                    a
                }, function(a) {
                    return b.reject(a),
                    d.reject(a)
                }) : (b.resolve(a),
                T(a)) : (j = a,
                I[a] = U(a).then(function(c) {
                    return M(c.key, c.table),
                    b.resolve(c.key),
                    j === a && T(c.key),
                    c
                }, function(a) {
                    return c.$emit("$translateChangeError", {
                        language: a
                    }),
                    b.reject(a),
                    c.$emit("$translateChangeEnd", {
                        language: a
                    }),
                    d.reject(a)
                }),
                I[a]["finally"](function() {
                    ea(a)
                })),
                b.promise
            }
            ,
            R.storageKey = function() {
                return Q()
            }
            ,
            R.isPostCompilingEnabled = function() {
                return y
            }
            ,
            R.isForceAsyncReloadEnabled = function() {
                return z
            }
            ,
            R.refresh = function(a) {
                function b() {
                    f.resolve(),
                    c.$emit("$translateRefreshEnd", {
                        language: a
                    })
                }
                function e() {
                    f.reject(),
                    c.$emit("$translateRefreshEnd", {
                        language: a
                    })
                }
                if (!o)
                    throw new Error("Couldn't refresh translation table, no loader registered!");
                var f = d.defer();
                if (c.$emit("$translateRefreshStart", {
                    language: a
                }),
                a)
                    if (t[a]) {
                        var h = function(c) {
                            M(c.key, c.table),
                            a === i && T(i),
                            b()
                        };
                        h.displayName = "refreshPostProcessor",
                        U(a).then(h, e)
                    } else
                        e();
                else {
                    var j = []
                      , k = {};
                    if (g && g.length)
                        for (var l = 0, m = g.length; m > l; l++)
                            j.push(U(g[l])),
                            k[g[l]] = !0;
                    i && !k[i] && j.push(U(i));
                    var n = function(a) {
                        t = {},
                        angular.forEach(a, function(a) {
                            M(a.key, a.table)
                        }),
                        i && T(i),
                        b()
                    };
                    n.displayName = "refreshPostProcessor",
                    d.all(j).then(n, e)
                }
                return f.promise
            }
            ,
            R.instant = function(a, b, c, d) {
                var f = d && d !== i ? L(d) || d : i;
                if (null === a || angular.isUndefined(a))
                    return a;
                if (angular.isArray(a)) {
                    for (var h = {}, j = 0, k = a.length; k > j; j++)
                        h[a[j]] = R.instant(a[j], b, c, d);
                    return h
                }
                if (angular.isString(a) && a.length < 1)
                    return a;
                a && (a = K.apply(a));
                var l, n = [];
                e && n.push(e),
                f && n.push(f),
                g && g.length && (n = n.concat(g));
                for (var o = 0, p = n.length; p > o; o++) {
                    var s = n[o];
                    if (t[s] && "undefined" != typeof t[s][a] && (l = da(a, b, c, f)),
                    "undefined" != typeof l)
                        break
                }
                return l || "" === l || (q || r ? l = S(a) : (l = E.interpolate(a, b),
                m && !F && (l = Z(a, b)))),
                l
            }
            ,
            R.versionInfo = function() {
                return G
            }
            ,
            R.loaderCache = function() {
                return s
            }
            ,
            R.directivePriority = function() {
                return C
            }
            ,
            R.statefulFilter = function() {
                return D
            }
            ,
            R.isReady = function() {
                return B
            }
            ;
            var fa = d.defer();
            fa.promise.then(function() {
                B = !0
            }),
            R.onReady = function(a) {
                var b = d.defer();
                return angular.isFunction(a) && b.promise.then(a),
                B ? b.resolve() : fa.promise.then(b.resolve),
                b.promise
            }
            ;
            var ga = c.$on("$translateReady", function() {
                fa.resolve(),
                ga(),
                ga = null
            })
              , ha = c.$on("$translateChangeEnd", function() {
                fa.resolve(),
                ha(),
                ha = null
            });
            if (o) {
                if (angular.equals(t, {}) && R.use() && R.use(R.use()),
                g && g.length)
                    for (var ia = function(a) {
                        return M(a.key, a.table),
                        c.$emit("$translateChangeEnd", {
                            language: a.key
                        }),
                        a
                    }, ja = 0, ka = g.length; ka > ja; ja++) {
                        var la = g[ja];
                        (z || !t[la]) && (I[la] = U(la).then(ia))
                    }
            } else
                c.$emit("$translateReady", {
                    language: R.use()
                });
            return R
        }
        ]
    }
    function d(a, b) {
        "use strict";
        var c, d = {}, e = "default";
        return d.setLocale = function(a) {
            c = a
        }
        ,
        d.getInterpolationIdentifier = function() {
            return e
        }
        ,
        d.useSanitizeValueStrategy = function(a) {
            return b.useStrategy(a),
            this
        }
        ,
        d.interpolate = function(c, d) {
            d = d || {},
            d = b.sanitize(d, "params");
            var e = a(c)(d);
            return e = b.sanitize(e, "text")
        }
        ,
        d
    }
    function e(a, b, c, d, e, g) {
        "use strict";
        var h = function() {
            return this.toString().replace(/^\s+|\s+$/g, "")
        };
        return {
            restrict: "AE",
            scope: !0,
            priority: a.directivePriority(),
            compile: function(b, i) {
                var j = i.translateValues ? i.translateValues : void 0
                  , k = i.translateInterpolation ? i.translateInterpolation : void 0
                  , l = b[0].outerHTML.match(/translate-value-+/i)
                  , m = "^(.*)(" + c.startSymbol() + ".*" + c.endSymbol() + ")(.*)"
                  , n = "^(.*)" + c.startSymbol() + "(.*)" + c.endSymbol() + "(.*)";
                return function(b, o, p) {
                    b.interpolateParams = {},
                    b.preText = "",
                    b.postText = "",
                    b.translateNamespace = f(b);
                    var q = {}
                      , r = function(a, c, d) {
                        if (c.translateValues && angular.extend(a, e(c.translateValues)(b.$parent)),
                        l)
                            for (var f in d)
                                if (Object.prototype.hasOwnProperty.call(c, f) && "translateValue" === f.substr(0, 14) && "translateValues" !== f) {
                                    var g = angular.lowercase(f.substr(14, 1)) + f.substr(15);
                                    a[g] = d[f]
                                }
                    }
                      , s = function(a) {
                        if (angular.isFunction(s._unwatchOld) && (s._unwatchOld(),
                        s._unwatchOld = void 0),
                        angular.equals(a, "") || !angular.isDefined(a)) {
                            var d = h.apply(o.text())
                              , e = d.match(m);
                            if (angular.isArray(e)) {
                                b.preText = e[1],
                                b.postText = e[3],
                                q.translate = c(e[2])(b.$parent);
                                var f = d.match(n);
                                angular.isArray(f) && f[2] && f[2].length && (s._unwatchOld = b.$watch(f[2], function(a) {
                                    q.translate = a,
                                    y()
                                }))
                            } else
                                q.translate = d ? d : void 0
                        } else
                            q.translate = a;
                        y()
                    }
                      , t = function(a) {
                        p.$observe(a, function(b) {
                            q[a] = b,
                            y()
                        })
                    };
                    r(b.interpolateParams, p, i);
                    var u = !0;
                    p.$observe("translate", function(a) {
                        "undefined" == typeof a ? s("") : "" === a && u || (q.translate = a,
                        y()),
                        u = !1
                    });
                    for (var v in p)
                        p.hasOwnProperty(v) && "translateAttr" === v.substr(0, 13) && t(v);
                    if (p.$observe("translateDefault", function(a) {
                        b.defaultText = a,
                        y()
                    }),
                    j && p.$observe("translateValues", function(a) {
                        a && b.$parent.$watch(function() {
                            angular.extend(b.interpolateParams, e(a)(b.$parent))
                        })
                    }),
                    l) {
                        var w = function(a) {
                            p.$observe(a, function(c) {
                                var d = angular.lowercase(a.substr(14, 1)) + a.substr(15);
                                b.interpolateParams[d] = c
                            })
                        };
                        for (var x in p)
                            Object.prototype.hasOwnProperty.call(p, x) && "translateValue" === x.substr(0, 14) && "translateValues" !== x && w(x)
                    }
                    var y = function() {
                        for (var a in q)
                            q.hasOwnProperty(a) && void 0 !== q[a] && z(a, q[a], b, b.interpolateParams, b.defaultText, b.translateNamespace)
                    }
                      , z = function(b, c, d, e, f, g) {
                        c ? (g && "." === c.charAt(0) && (c = g + c),
                        a(c, e, k, f, d.translateLanguage).then(function(a) {
                            A(a, d, !0, b)
                        }, function(a) {
                            A(a, d, !1, b)
                        })) : A(c, d, !1, b)
                    }
                      , A = function(b, c, e, f) {
                        if ("translate" === f) {
                            e || "undefined" == typeof c.defaultText || (b = c.defaultText),
                            o.empty().append(c.preText + b + c.postText);
                            var g = a.isPostCompilingEnabled()
                              , h = "undefined" != typeof i.translateCompile
                              , j = h && "false" !== i.translateCompile;
                            (g && !h || j) && d(o.contents())(c)
                        } else {
                            e || "undefined" == typeof c.defaultText || (b = c.defaultText);
                            var k = p.$attr[f];
                            "data-" === k.substr(0, 5) && (k = k.substr(5)),
                            k = k.substr(15),
                            o.attr(k, b)
                        }
                    };
                    (j || l || p.translateDefault) && b.$watch("interpolateParams", y, !0),
                    b.$watch("translateLanguage", y);
                    var B = g.$on("$translateChangeSuccess", y);
                    o.text().length ? s(p.translate ? p.translate : "") : p.translate && s(p.translate),
                    y(),
                    b.$on("$destroy", B)
                }
            }
        }
    }
    function f(a) {
        "use strict";
        return a.translateNamespace ? a.translateNamespace : a.$parent ? f(a.$parent) : void 0
    }
    function g(a, b) {
        "use strict";
        return {
            compile: function(c) {
                var d = function() {
                    c.addClass(a.cloakClassName())
                }
                  , e = function() {
                    c.removeClass(a.cloakClassName())
                };
                return a.onReady(function() {
                    e()
                }),
                d(),
                function(c, f, g) {
                    g.translateCloak && g.translateCloak.length && (g.$observe("translateCloak", function(b) {
                        a(b).then(e, d)
                    }),
                    b.$on("$translateChangeSuccess", function() {
                        a(g.translateCloak).then(e, d)
                    }))
                }
            }
        }
    }
    function h() {
        "use strict";
        return {
            restrict: "A",
            scope: !0,
            compile: function() {
                return {
                    pre: function(a, b, c) {
                        a.translateNamespace = f(a),
                        a.translateNamespace && "." === c.translateNamespace.charAt(0) ? a.translateNamespace += c.translateNamespace : a.translateNamespace = c.translateNamespace
                    }
                }
            }
        }
    }
    function f(a) {
        "use strict";
        return a.translateNamespace ? a.translateNamespace : a.$parent ? f(a.$parent) : void 0
    }
    function i() {
        "use strict";
        return {
            restrict: "A",
            scope: !0,
            compile: function() {
                return function(a, b, c) {
                    c.$observe("translateLanguage", function(b) {
                        a.translateLanguage = b
                    })
                }
            }
        }
    }
    function j(a, b) {
        "use strict";
        var c = function(c, d, e, f) {
            return angular.isObject(d) || (d = a(d)(this)),
            b.instant(c, d, e, f)
        };
        return b.statefulFilter() && (c.$stateful = !0),
        c
    }
    function k(a) {
        "use strict";
        return a("translations")
    }
    return angular.module("pascalprecht.translate", ["ng"]).run(a),
    a.$inject = ["$translate"],
    a.displayName = "runTranslate",
    angular.module("pascalprecht.translate").provider("$translateSanitization", b),
    angular.module("pascalprecht.translate").constant("pascalprechtTranslateOverrider", {}).provider("$translate", c),
    c.$inject = ["$STORAGE_KEY", "$windowProvider", "$translateSanitizationProvider", "pascalprechtTranslateOverrider"],
    c.displayName = "displayName",
    angular.module("pascalprecht.translate").factory("$translateDefaultInterpolation", d),
    d.$inject = ["$interpolate", "$translateSanitization"],
    d.displayName = "$translateDefaultInterpolation",
    angular.module("pascalprecht.translate").constant("$STORAGE_KEY", "NG_TRANSLATE_LANG_KEY"),
    angular.module("pascalprecht.translate").directive("translate", e),
    e.$inject = ["$translate", "$q", "$interpolate", "$compile", "$parse", "$rootScope"],
    e.displayName = "translateDirective",
    angular.module("pascalprecht.translate").directive("translateCloak", g),
    g.$inject = ["$translate", "$rootScope"],
    g.displayName = "translateCloakDirective",
    angular.module("pascalprecht.translate").directive("translateNamespace", h),
    h.displayName = "translateNamespaceDirective",
    angular.module("pascalprecht.translate").directive("translateLanguage", i),
    i.displayName = "translateLanguageDirective",
    angular.module("pascalprecht.translate").filter("translate", j),
    j.$inject = ["$parse", "$translate"],
    j.displayName = "translateFilterFactory",
    angular.module("pascalprecht.translate").factory("$translationCache", k),
    k.$inject = ["$cacheFactory"],
    k.displayName = "$translationCache",
    "pascalprecht.translate"
});
/*!
 * angular-translate - v2.9.0 - 2016-01-24
 * 
 * Copyright (c) 2016 The angular-translate team, Pascal Precht; Licensed MIT
 */
!function(a, b) {
    "function" == typeof define && define.amd ? define([], function() {
        return b()
    }) : "object" == typeof exports ? module.exports = b() : b()
}(this, function() {
    function a(a, b) {
        "use strict";
        return function(c) {
            if (!(c && (angular.isArray(c.files) || angular.isString(c.prefix) && angular.isString(c.suffix))))
                throw new Error("Couldn't load static files, no files and prefix or suffix specified!");
            c.files || (c.files = [{
                prefix: c.prefix,
                suffix: c.suffix
            }]);
            for (var d = function(d) {
                if (!d || !angular.isString(d.prefix) || !angular.isString(d.suffix))
                    throw new Error("Couldn't load static file, no prefix or suffix specified!");
                return b(angular.extend({
                    url: [d.prefix, c.key, d.suffix].join(""),
                    method: "GET",
                    params: ""
                }, c.$http)).then(function(a) {
                    return a.data
                }, function() {
                    return a.reject(c.key)
                })
            }, e = [], f = c.files.length, g = 0; f > g; g++)
                e.push(d({
                    prefix: c.files[g].prefix,
                    key: c.key,
                    suffix: c.files[g].suffix
                }));
            return a.all(e).then(function(a) {
                for (var b = a.length, c = {}, d = 0; b > d; d++)
                    for (var e in a[d])
                        c[e] = a[d][e];
                return c
            })
        }
    }
    return angular.module("pascalprecht.translate").factory("$translateStaticFilesLoader", a),
    a.$inject = ["$q", "$http"],
    a.displayName = "$translateStaticFilesLoader",
    "pascalprecht.translate"
});
(function(e) {
    typeof define == "function" && define.amd ? define(e) : window.purl = e()
}
)(function() {
    function s(e, n) {
        var i = decodeURI(e)
          , s = r[n || !1 ? "strict" : "loose"].exec(i)
          , o = {
            attr: {},
            param: {},
            seg: {}
        }
          , u = 14;
        while (u--)
            o.attr[t[u]] = s[u] || "";
        return o.param.query = l(o.attr.query),
        o.param.fragment = l(o.attr.fragment),
        o.seg.path = o.attr.path.replace(/^\/+|\/+$/g, "").split("/"),
        o.seg.fragment = o.attr.fragment.replace(/^\/+|\/+$/g, "").split("/"),
        o.attr.base = o.attr.host ? (o.attr.protocol ? o.attr.protocol + "://" + o.attr.host : o.attr.host) + (o.attr.port ? ":" + o.attr.port : "") : "",
        o
    }
    function o(t) {
        var n = t.tagName;
        return typeof n != "undefined" ? e[n.toLowerCase()] : n
    }
    function u(e, t) {
        if (e[t].length === 0)
            return e[t] = {};
        var n = {};
        for (var r in e[t])
            n[r] = e[t][r];
        return e[t] = n,
        n
    }
    function a(e, t, n, r) {
        var s = e.shift();
        if (!s)
            d(t[n]) ? t[n].push(r) : "object" == typeof t[n] ? t[n] = r : "undefined" == typeof t[n] ? t[n] = r : t[n] = [t[n], r];
        else {
            var o = t[n] = t[n] || [];
            "]" == s ? d(o) ? "" !== r && o.push(r) : "object" == typeof o ? o[v(o).length] = r : o = t[n] = [t[n], r] : ~s.indexOf("]") ? (s = s.substr(0, s.length - 1),
            !i.test(s) && d(o) && (o = u(t, n)),
            a(e, o, s, r)) : (!i.test(s) && d(o) && (o = u(t, n)),
            a(e, o, s, r))
        }
    }
    function f(e, t, n) {
        if (~t.indexOf("]")) {
            var r = t.split("[");
            a(r, e, "base", n)
        } else {
            if (!i.test(t) && d(e.base)) {
                var s = {};
                for (var o in e.base)
                    s[o] = e.base[o];
                e.base = s
            }
            t !== "" && c(e.base, t, n)
        }
        return e
    }
    function l(e) {
        return p(String(e).split(/&|;/), function(e, t) {
            try {
                t = decodeURIComponent(t.replace(/\+/g, " "))
            } catch (n) {}
            var r = t.indexOf("=")
              , i = h(t)
              , s = t.substr(0, i || r)
              , o = t.substr(i || r, t.length);
            return o = o.substr(o.indexOf("=") + 1, o.length),
            s === "" && (s = t,
            o = ""),
            f(e, s, o)
        }, {
            base: {}
        }).base
    }
    function c(e, t, n) {
        var r = e[t];
        typeof r == "undefined" ? e[t] = n : d(r) ? r.push(n) : e[t] = [r, n]
    }
    function h(e) {
        var t = e.length, n, r;
        for (var i = 0; i < t; ++i) {
            r = e[i],
            "]" == r && (n = !1),
            "[" == r && (n = !0);
            if ("=" == r && !n)
                return i
        }
    }
    function p(e, t) {
        var n = 0
          , r = e.length >> 0
          , i = arguments[2];
        while (n < r)
            n in e && (i = t.call(undefined, i, e[n], n, e)),
            ++n;
        return i
    }
    function d(e) {
        return Object.prototype.toString.call(e) === "[object Array]"
    }
    function v(e) {
        var t = [];
        for (var n in e)
            e.hasOwnProperty(n) && t.push(n);
        return t
    }
    function m(e, t) {
        return arguments.length === 1 && e === !0 && (t = !0,
        e = undefined),
        t = t || !1,
        e = e || window.location.toString(),
        {
            data: s(e, t),
            attr: function(e) {
                return e = n[e] || e,
                typeof e != "undefined" ? this.data.attr[e] : this.data.attr
            },
            param: function(e) {
                return typeof e != "undefined" ? this.data.param.query[e] : this.data.param.query
            },
            fparam: function(e) {
                return typeof e != "undefined" ? this.data.param.fragment[e] : this.data.param.fragment
            },
            segment: function(e) {
                return typeof e == "undefined" ? this.data.seg.path : (e = e < 0 ? this.data.seg.path.length + e : e - 1,
                this.data.seg.path[e])
            },
            fsegment: function(e) {
                return typeof e == "undefined" ? this.data.seg.fragment : (e = e < 0 ? this.data.seg.fragment.length + e : e - 1,
                this.data.seg.fragment[e])
            }
        }
    }
    var e = {
        a: "href",
        img: "src",
        form: "action",
        base: "href",
        script: "src",
        iframe: "src",
        link: "href",
        embed: "src",
        object: "data"
    }
      , t = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "fragment"]
      , n = {
        anchor: "fragment"
    }
      , r = {
        strict: /^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*):?([^:@]*))?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,
        loose: /^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*):?([^:@]*))?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/
    }
      , i = /^[0-9]+$/;
    return m.jQuery = function(e) {
        e != null && (e.fn.url = function(t) {
            var n = "";
            return this.length && (n = e(this).attr(o(this[0])) || ""),
            m(n, t)
        }
        ,
        e.url = m)
    }
    ,
    m.jQuery(window.jQuery),
    m
});
!function(e, a) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = a() : "function" == typeof define && define.amd ? define(a) : e.moment = a()
}(this, function() {
    "use strict";
    var e, n;
    function l() {
        return e.apply(null, arguments)
    }
    function _(e) {
        return e instanceof Array || "[object Array]" === Object.prototype.toString.call(e)
    }
    function i(e) {
        return null != e && "[object Object]" === Object.prototype.toString.call(e)
    }
    function o(e) {
        return void 0 === e
    }
    function m(e) {
        return "number" == typeof e || "[object Number]" === Object.prototype.toString.call(e)
    }
    function u(e) {
        return e instanceof Date || "[object Date]" === Object.prototype.toString.call(e)
    }
    function M(e, a) {
        var t, s = [];
        for (t = 0; t < e.length; ++t)
            s.push(a(e[t], t));
        return s
    }
    function h(e, a) {
        return Object.prototype.hasOwnProperty.call(e, a)
    }
    function L(e, a) {
        for (var t in a)
            h(a, t) && (e[t] = a[t]);
        return h(a, "toString") && (e.toString = a.toString),
        h(a, "valueOf") && (e.valueOf = a.valueOf),
        e
    }
    function c(e, a, t, s) {
        return Sa(e, a, t, s, !0).utc()
    }
    function Y(e) {
        return null == e._pf && (e._pf = {
            empty: !1,
            unusedTokens: [],
            unusedInput: [],
            overflow: -2,
            charsLeftOver: 0,
            nullInput: !1,
            invalidMonth: null,
            invalidFormat: !1,
            userInvalidated: !1,
            iso: !1,
            parsedDateParts: [],
            meridiem: null,
            rfc2822: !1,
            weekdayMismatch: !1
        }),
        e._pf
    }
    function y(e) {
        if (null == e._isValid) {
            var a = Y(e)
              , t = n.call(a.parsedDateParts, function(e) {
                return null != e
            })
              , s = !isNaN(e._d.getTime()) && a.overflow < 0 && !a.empty && !a.invalidMonth && !a.invalidWeekday && !a.weekdayMismatch && !a.nullInput && !a.invalidFormat && !a.userInvalidated && (!a.meridiem || a.meridiem && t);
            if (e._strict && (s = s && 0 === a.charsLeftOver && 0 === a.unusedTokens.length && void 0 === a.bigHour),
            null != Object.isFrozen && Object.isFrozen(e))
                return s;
            e._isValid = s
        }
        return e._isValid
    }
    function f(e) {
        var a = c(NaN);
        return null != e ? L(Y(a), e) : Y(a).userInvalidated = !0,
        a
    }
    n = Array.prototype.some ? Array.prototype.some : function(e) {
        for (var a = Object(this), t = a.length >>> 0, s = 0; s < t; s++)
            if (s in a && e.call(this, a[s], s, a))
                return !0;
        return !1
    }
    ;
    var d = l.momentProperties = [];
    function k(e, a) {
        var t, s, n;
        if (o(a._isAMomentObject) || (e._isAMomentObject = a._isAMomentObject),
        o(a._i) || (e._i = a._i),
        o(a._f) || (e._f = a._f),
        o(a._l) || (e._l = a._l),
        o(a._strict) || (e._strict = a._strict),
        o(a._tzm) || (e._tzm = a._tzm),
        o(a._isUTC) || (e._isUTC = a._isUTC),
        o(a._offset) || (e._offset = a._offset),
        o(a._pf) || (e._pf = Y(a)),
        o(a._locale) || (e._locale = a._locale),
        0 < d.length)
            for (t = 0; t < d.length; t++)
                o(n = a[s = d[t]]) || (e[s] = n);
        return e
    }
    var a = !1;
    function p(e) {
        k(this, e),
        this._d = new Date(null != e._d ? e._d.getTime() : NaN),
        this.isValid() || (this._d = new Date(NaN)),
        !1 === a && (a = !0,
        l.updateOffset(this),
        a = !1)
    }
    function D(e) {
        return e instanceof p || null != e && null != e._isAMomentObject
    }
    function T(e) {
        return e < 0 ? Math.ceil(e) || 0 : Math.floor(e)
    }
    function g(e) {
        var a = +e
          , t = 0;
        return 0 !== a && isFinite(a) && (t = T(a)),
        t
    }
    function r(e, a, t) {
        var s, n = Math.min(e.length, a.length), d = Math.abs(e.length - a.length), r = 0;
        for (s = 0; s < n; s++)
            (t && e[s] !== a[s] || !t && g(e[s]) !== g(a[s])) && r++;
        return r + d
    }
    function w(e) {
        !1 === l.suppressDeprecationWarnings && "undefined" != typeof console && console.warn && console.warn("Deprecation warning: " + e)
    }
    function t(n, d) {
        var r = !0;
        return L(function() {
            if (null != l.deprecationHandler && l.deprecationHandler(null, n),
            r) {
                for (var e, a = [], t = 0; t < arguments.length; t++) {
                    if (e = "",
                    "object" == typeof arguments[t]) {
                        for (var s in e += "\n[" + t + "] ",
                        arguments[0])
                            e += s + ": " + arguments[0][s] + ", ";
                        e = e.slice(0, -2)
                    } else
                        e = arguments[t];
                    a.push(e)
                }
                w(n + "\nArguments: " + Array.prototype.slice.call(a).join("") + "\n" + (new Error).stack),
                r = !1
            }
            return d.apply(this, arguments)
        }, d)
    }
    var s, v = {};
    function S(e, a) {
        null != l.deprecationHandler && l.deprecationHandler(e, a),
        v[e] || (w(a),
        v[e] = !0)
    }
    function H(e) {
        return e instanceof Function || "[object Function]" === Object.prototype.toString.call(e)
    }
    function b(e, a) {
        var t, s = L({}, e);
        for (t in a)
            h(a, t) && (i(e[t]) && i(a[t]) ? (s[t] = {},
            L(s[t], e[t]),
            L(s[t], a[t])) : null != a[t] ? s[t] = a[t] : delete s[t]);
        for (t in e)
            h(e, t) && !h(a, t) && i(e[t]) && (s[t] = L({}, s[t]));
        return s
    }
    function j(e) {
        null != e && this.set(e)
    }
    l.suppressDeprecationWarnings = !1,
    l.deprecationHandler = null,
    s = Object.keys ? Object.keys : function(e) {
        var a, t = [];
        for (a in e)
            h(e, a) && t.push(a);
        return t
    }
    ;
    var x = {};
    function O(e, a) {
        var t = e.toLowerCase();
        x[t] = x[t + "s"] = x[a] = e
    }
    function P(e) {
        return "string" == typeof e ? x[e] || x[e.toLowerCase()] : void 0
    }
    function W(e) {
        var a, t, s = {};
        for (t in e)
            h(e, t) && (a = P(t)) && (s[a] = e[t]);
        return s
    }
    var A = {};
    function E(e, a) {
        A[e] = a
    }
    function F(e, a, t) {
        var s = "" + Math.abs(e)
          , n = a - s.length;
        return (0 <= e ? t ? "+" : "" : "-") + Math.pow(10, Math.max(0, n)).toString().substr(1) + s
    }
    var z = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g
      , J = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g
      , N = {}
      , R = {};
    function C(e, a, t, s) {
        var n = s;
        "string" == typeof s && (n = function() {
            return this[s]()
        }
        ),
        e && (R[e] = n),
        a && (R[a[0]] = function() {
            return F(n.apply(this, arguments), a[1], a[2])
        }
        ),
        t && (R[t] = function() {
            return this.localeData().ordinal(n.apply(this, arguments), e)
        }
        )
    }
    function I(e, a) {
        return e.isValid() ? (a = U(a, e.localeData()),
        N[a] = N[a] || function(s) {
            var e, n, a, d = s.match(z);
            for (e = 0,
            n = d.length; e < n; e++)
                R[d[e]] ? d[e] = R[d[e]] : d[e] = (a = d[e]).match(/\[[\s\S]/) ? a.replace(/^\[|\]$/g, "") : a.replace(/\\/g, "");
            return function(e) {
                var a, t = "";
                for (a = 0; a < n; a++)
                    t += H(d[a]) ? d[a].call(e, s) : d[a];
                return t
            }
        }(a),
        N[a](e)) : e.localeData().invalidDate()
    }
    function U(e, a) {
        var t = 5;
        function s(e) {
            return a.longDateFormat(e) || e
        }
        for (J.lastIndex = 0; 0 <= t && J.test(e); )
            e = e.replace(J, s),
            J.lastIndex = 0,
            t -= 1;
        return e
    }
    var G = /\d/
      , V = /\d\d/
      , K = /\d{3}/
      , Z = /\d{4}/
      , $ = /[+-]?\d{6}/
      , B = /\d\d?/
      , q = /\d\d\d\d?/
      , Q = /\d\d\d\d\d\d?/
      , X = /\d{1,3}/
      , ee = /\d{1,4}/
      , ae = /[+-]?\d{1,6}/
      , te = /\d+/
      , se = /[+-]?\d+/
      , ne = /Z|[+-]\d\d:?\d\d/gi
      , de = /Z|[+-]\d\d(?::?\d\d)?/gi
      , re = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i
      , _e = {};
    function ie(e, t, s) {
        _e[e] = H(t) ? t : function(e, a) {
            return e && s ? s : t
        }
    }
    function oe(e, a) {
        return h(_e, e) ? _e[e](a._strict, a._locale) : new RegExp(me(e.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(e, a, t, s, n) {
            return a || t || s || n
        })))
    }
    function me(e) {
        return e.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&")
    }
    var ue = {};
    function le(e, t) {
        var a, s = t;
        for ("string" == typeof e && (e = [e]),
        m(t) && (s = function(e, a) {
            a[t] = g(e)
        }
        ),
        a = 0; a < e.length; a++)
            ue[e[a]] = s
    }
    function Me(e, n) {
        le(e, function(e, a, t, s) {
            t._w = t._w || {},
            n(e, t._w, t, s)
        })
    }
    var he = 0
      , Le = 1
      , ce = 2
      , Ye = 3
      , ye = 4
      , fe = 5
      , ke = 6
      , pe = 7
      , De = 8;
    function Te(e) {
        return ge(e) ? 366 : 365
    }
    function ge(e) {
        return e % 4 == 0 && e % 100 != 0 || e % 400 == 0
    }
    C("Y", 0, 0, function() {
        var e = this.year();
        return e <= 9999 ? "" + e : "+" + e
    }),
    C(0, ["YY", 2], 0, function() {
        return this.year() % 100
    }),
    C(0, ["YYYY", 4], 0, "year"),
    C(0, ["YYYYY", 5], 0, "year"),
    C(0, ["YYYYYY", 6, !0], 0, "year"),
    O("year", "y"),
    E("year", 1),
    ie("Y", se),
    ie("YY", B, V),
    ie("YYYY", ee, Z),
    ie("YYYYY", ae, $),
    ie("YYYYYY", ae, $),
    le(["YYYYY", "YYYYYY"], he),
    le("YYYY", function(e, a) {
        a[he] = 2 === e.length ? l.parseTwoDigitYear(e) : g(e)
    }),
    le("YY", function(e, a) {
        a[he] = l.parseTwoDigitYear(e)
    }),
    le("Y", function(e, a) {
        a[he] = parseInt(e, 10)
    }),
    l.parseTwoDigitYear = function(e) {
        return g(e) + (68 < g(e) ? 1900 : 2e3)
    }
    ;
    var we, ve = Se("FullYear", !0);
    function Se(a, t) {
        return function(e) {
            return null != e ? (be(this, a, e),
            l.updateOffset(this, t),
            this) : He(this, a)
        }
    }
    function He(e, a) {
        return e.isValid() ? e._d["get" + (e._isUTC ? "UTC" : "") + a]() : NaN
    }
    function be(e, a, t) {
        e.isValid() && !isNaN(t) && ("FullYear" === a && ge(e.year()) && 1 === e.month() && 29 === e.date() ? e._d["set" + (e._isUTC ? "UTC" : "") + a](t, e.month(), je(t, e.month())) : e._d["set" + (e._isUTC ? "UTC" : "") + a](t))
    }
    function je(e, a) {
        if (isNaN(e) || isNaN(a))
            return NaN;
        var t, s = (a % (t = 12) + t) % t;
        return e += (a - s) / 12,
        1 === s ? ge(e) ? 29 : 28 : 31 - s % 7 % 2
    }
    we = Array.prototype.indexOf ? Array.prototype.indexOf : function(e) {
        var a;
        for (a = 0; a < this.length; ++a)
            if (this[a] === e)
                return a;
        return -1
    }
    ,
    C("M", ["MM", 2], "Mo", function() {
        return this.month() + 1
    }),
    C("MMM", 0, 0, function(e) {
        return this.localeData().monthsShort(this, e)
    }),
    C("MMMM", 0, 0, function(e) {
        return this.localeData().months(this, e)
    }),
    O("month", "M"),
    E("month", 8),
    ie("M", B),
    ie("MM", B, V),
    ie("MMM", function(e, a) {
        return a.monthsShortRegex(e)
    }),
    ie("MMMM", function(e, a) {
        return a.monthsRegex(e)
    }),
    le(["M", "MM"], function(e, a) {
        a[Le] = g(e) - 1
    }),
    le(["MMM", "MMMM"], function(e, a, t, s) {
        var n = t._locale.monthsParse(e, s, t._strict);
        null != n ? a[Le] = n : Y(t).invalidMonth = e
    });
    var xe = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/
      , Oe = "January_February_March_April_May_June_July_August_September_October_November_December".split("_");
    var Pe = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_");
    function We(e, a) {
        var t;
        if (!e.isValid())
            return e;
        if ("string" == typeof a)
            if (/^\d+$/.test(a))
                a = g(a);
            else if (!m(a = e.localeData().monthsParse(a)))
                return e;
        return t = Math.min(e.date(), je(e.year(), a)),
        e._d["set" + (e._isUTC ? "UTC" : "") + "Month"](a, t),
        e
    }
    function Ae(e) {
        return null != e ? (We(this, e),
        l.updateOffset(this, !0),
        this) : He(this, "Month")
    }
    var Ee = re;
    var Fe = re;
    function ze() {
        function e(e, a) {
            return a.length - e.length
        }
        var a, t, s = [], n = [], d = [];
        for (a = 0; a < 12; a++)
            t = c([2e3, a]),
            s.push(this.monthsShort(t, "")),
            n.push(this.months(t, "")),
            d.push(this.months(t, "")),
            d.push(this.monthsShort(t, ""));
        for (s.sort(e),
        n.sort(e),
        d.sort(e),
        a = 0; a < 12; a++)
            s[a] = me(s[a]),
            n[a] = me(n[a]);
        for (a = 0; a < 24; a++)
            d[a] = me(d[a]);
        this._monthsRegex = new RegExp("^(" + d.join("|") + ")","i"),
        this._monthsShortRegex = this._monthsRegex,
        this._monthsStrictRegex = new RegExp("^(" + n.join("|") + ")","i"),
        this._monthsShortStrictRegex = new RegExp("^(" + s.join("|") + ")","i")
    }
    function Je(e) {
        var a;
        if (e < 100 && 0 <= e) {
            var t = Array.prototype.slice.call(arguments);
            t[0] = e + 400,
            a = new Date(Date.UTC.apply(null, t)),
            isFinite(a.getUTCFullYear()) && a.setUTCFullYear(e)
        } else
            a = new Date(Date.UTC.apply(null, arguments));
        return a
    }
    function Ne(e, a, t) {
        var s = 7 + a - t;
        return -((7 + Je(e, 0, s).getUTCDay() - a) % 7) + s - 1
    }
    function Re(e, a, t, s, n) {
        var d, r, _ = 1 + 7 * (a - 1) + (7 + t - s) % 7 + Ne(e, s, n);
        return r = _ <= 0 ? Te(d = e - 1) + _ : _ > Te(e) ? (d = e + 1,
        _ - Te(e)) : (d = e,
        _),
        {
            year: d,
            dayOfYear: r
        }
    }
    function Ce(e, a, t) {
        var s, n, d = Ne(e.year(), a, t), r = Math.floor((e.dayOfYear() - d - 1) / 7) + 1;
        return r < 1 ? s = r + Ie(n = e.year() - 1, a, t) : r > Ie(e.year(), a, t) ? (s = r - Ie(e.year(), a, t),
        n = e.year() + 1) : (n = e.year(),
        s = r),
        {
            week: s,
            year: n
        }
    }
    function Ie(e, a, t) {
        var s = Ne(e, a, t)
          , n = Ne(e + 1, a, t);
        return (Te(e) - s + n) / 7
    }
    C("w", ["ww", 2], "wo", "week"),
    C("W", ["WW", 2], "Wo", "isoWeek"),
    O("week", "w"),
    O("isoWeek", "W"),
    E("week", 5),
    E("isoWeek", 5),
    ie("w", B),
    ie("ww", B, V),
    ie("W", B),
    ie("WW", B, V),
    Me(["w", "ww", "W", "WW"], function(e, a, t, s) {
        a[s.substr(0, 1)] = g(e)
    });
    function Ue(e, a) {
        return e.slice(a, 7).concat(e.slice(0, a))
    }
    C("d", 0, "do", "day"),
    C("dd", 0, 0, function(e) {
        return this.localeData().weekdaysMin(this, e)
    }),
    C("ddd", 0, 0, function(e) {
        return this.localeData().weekdaysShort(this, e)
    }),
    C("dddd", 0, 0, function(e) {
        return this.localeData().weekdays(this, e)
    }),
    C("e", 0, 0, "weekday"),
    C("E", 0, 0, "isoWeekday"),
    O("day", "d"),
    O("weekday", "e"),
    O("isoWeekday", "E"),
    E("day", 11),
    E("weekday", 11),
    E("isoWeekday", 11),
    ie("d", B),
    ie("e", B),
    ie("E", B),
    ie("dd", function(e, a) {
        return a.weekdaysMinRegex(e)
    }),
    ie("ddd", function(e, a) {
        return a.weekdaysShortRegex(e)
    }),
    ie("dddd", function(e, a) {
        return a.weekdaysRegex(e)
    }),
    Me(["dd", "ddd", "dddd"], function(e, a, t, s) {
        var n = t._locale.weekdaysParse(e, s, t._strict);
        null != n ? a.d = n : Y(t).invalidWeekday = e
    }),
    Me(["d", "e", "E"], function(e, a, t, s) {
        a[s] = g(e)
    });
    var Ge = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_");
    var Ve = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_");
    var Ke = "Su_Mo_Tu_We_Th_Fr_Sa".split("_");
    var Ze = re;
    var $e = re;
    var Be = re;
    function qe() {
        function e(e, a) {
            return a.length - e.length
        }
        var a, t, s, n, d, r = [], _ = [], i = [], o = [];
        for (a = 0; a < 7; a++)
            t = c([2e3, 1]).day(a),
            s = this.weekdaysMin(t, ""),
            n = this.weekdaysShort(t, ""),
            d = this.weekdays(t, ""),
            r.push(s),
            _.push(n),
            i.push(d),
            o.push(s),
            o.push(n),
            o.push(d);
        for (r.sort(e),
        _.sort(e),
        i.sort(e),
        o.sort(e),
        a = 0; a < 7; a++)
            _[a] = me(_[a]),
            i[a] = me(i[a]),
            o[a] = me(o[a]);
        this._weekdaysRegex = new RegExp("^(" + o.join("|") + ")","i"),
        this._weekdaysShortRegex = this._weekdaysRegex,
        this._weekdaysMinRegex = this._weekdaysRegex,
        this._weekdaysStrictRegex = new RegExp("^(" + i.join("|") + ")","i"),
        this._weekdaysShortStrictRegex = new RegExp("^(" + _.join("|") + ")","i"),
        this._weekdaysMinStrictRegex = new RegExp("^(" + r.join("|") + ")","i")
    }
    function Qe() {
        return this.hours() % 12 || 12
    }
    function Xe(e, a) {
        C(e, 0, 0, function() {
            return this.localeData().meridiem(this.hours(), this.minutes(), a)
        })
    }
    function ea(e, a) {
        return a._meridiemParse
    }
    C("H", ["HH", 2], 0, "hour"),
    C("h", ["hh", 2], 0, Qe),
    C("k", ["kk", 2], 0, function() {
        return this.hours() || 24
    }),
    C("hmm", 0, 0, function() {
        return "" + Qe.apply(this) + F(this.minutes(), 2)
    }),
    C("hmmss", 0, 0, function() {
        return "" + Qe.apply(this) + F(this.minutes(), 2) + F(this.seconds(), 2)
    }),
    C("Hmm", 0, 0, function() {
        return "" + this.hours() + F(this.minutes(), 2)
    }),
    C("Hmmss", 0, 0, function() {
        return "" + this.hours() + F(this.minutes(), 2) + F(this.seconds(), 2)
    }),
    Xe("a", !0),
    Xe("A", !1),
    O("hour", "h"),
    E("hour", 13),
    ie("a", ea),
    ie("A", ea),
    ie("H", B),
    ie("h", B),
    ie("k", B),
    ie("HH", B, V),
    ie("hh", B, V),
    ie("kk", B, V),
    ie("hmm", q),
    ie("hmmss", Q),
    ie("Hmm", q),
    ie("Hmmss", Q),
    le(["H", "HH"], Ye),
    le(["k", "kk"], function(e, a, t) {
        var s = g(e);
        a[Ye] = 24 === s ? 0 : s
    }),
    le(["a", "A"], function(e, a, t) {
        t._isPm = t._locale.isPM(e),
        t._meridiem = e
    }),
    le(["h", "hh"], function(e, a, t) {
        a[Ye] = g(e),
        Y(t).bigHour = !0
    }),
    le("hmm", function(e, a, t) {
        var s = e.length - 2;
        a[Ye] = g(e.substr(0, s)),
        a[ye] = g(e.substr(s)),
        Y(t).bigHour = !0
    }),
    le("hmmss", function(e, a, t) {
        var s = e.length - 4
          , n = e.length - 2;
        a[Ye] = g(e.substr(0, s)),
        a[ye] = g(e.substr(s, 2)),
        a[fe] = g(e.substr(n)),
        Y(t).bigHour = !0
    }),
    le("Hmm", function(e, a, t) {
        var s = e.length - 2;
        a[Ye] = g(e.substr(0, s)),
        a[ye] = g(e.substr(s))
    }),
    le("Hmmss", function(e, a, t) {
        var s = e.length - 4
          , n = e.length - 2;
        a[Ye] = g(e.substr(0, s)),
        a[ye] = g(e.substr(s, 2)),
        a[fe] = g(e.substr(n))
    });
    var aa, ta = Se("Hours", !0), sa = {
        calendar: {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[Last] dddd [at] LT",
            sameElse: "L"
        },
        longDateFormat: {
            LTS: "h:mm:ss A",
            LT: "h:mm A",
            L: "MM/DD/YYYY",
            LL: "MMMM D, YYYY",
            LLL: "MMMM D, YYYY h:mm A",
            LLLL: "dddd, MMMM D, YYYY h:mm A"
        },
        invalidDate: "Invalid date",
        ordinal: "%d",
        dayOfMonthOrdinalParse: /\d{1,2}/,
        relativeTime: {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            ss: "%d seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years"
        },
        months: Oe,
        monthsShort: Pe,
        week: {
            dow: 0,
            doy: 6
        },
        weekdays: Ge,
        weekdaysMin: Ke,
        weekdaysShort: Ve,
        meridiemParse: /[ap]\.?m?\.?/i
    }, na = {}, da = {};
    function ra(e) {
        return e ? e.toLowerCase().replace("_", "-") : e
    }
    function _a(e) {
        var a = null;
        if (!na[e] && "undefined" != typeof module && module && module.exports)
            try {
                a = aa._abbr,
                require("./locale/" + e),
                ia(a)
            } catch (e) {}
        return na[e]
    }
    function ia(e, a) {
        var t;
        return e && ((t = o(a) ? ma(e) : oa(e, a)) ? aa = t : "undefined" != typeof console && console.warn && console.warn("Locale " + e + " not found. Did you forget to load it?")),
        aa._abbr
    }
    function oa(e, a) {
        if (null === a)
            return delete na[e],
            null;
        var t, s = sa;
        if (a.abbr = e,
        null != na[e])
            S("defineLocaleOverride", "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),
            s = na[e]._config;
        else if (null != a.parentLocale)
            if (null != na[a.parentLocale])
                s = na[a.parentLocale]._config;
            else {
                if (null == (t = _a(a.parentLocale)))
                    return da[a.parentLocale] || (da[a.parentLocale] = []),
                    da[a.parentLocale].push({
                        name: e,
                        config: a
                    }),
                    null;
                s = t._config
            }
        return na[e] = new j(b(s, a)),
        da[e] && da[e].forEach(function(e) {
            oa(e.name, e.config)
        }),
        ia(e),
        na[e]
    }
    function ma(e) {
        var a;
        if (e && e._locale && e._locale._abbr && (e = e._locale._abbr),
        !e)
            return aa;
        if (!_(e)) {
            if (a = _a(e))
                return a;
            e = [e]
        }
        return function(e) {
            for (var a, t, s, n, d = 0; d < e.length; ) {
                for (a = (n = ra(e[d]).split("-")).length,
                t = (t = ra(e[d + 1])) ? t.split("-") : null; 0 < a; ) {
                    if (s = _a(n.slice(0, a).join("-")))
                        return s;
                    if (t && t.length >= a && r(n, t, !0) >= a - 1)
                        break;
                    a--
                }
                d++
            }
            return aa
        }(e)
    }
    function ua(e) {
        var a, t = e._a;
        return t && -2 === Y(e).overflow && (a = t[Le] < 0 || 11 < t[Le] ? Le : t[ce] < 1 || t[ce] > je(t[he], t[Le]) ? ce : t[Ye] < 0 || 24 < t[Ye] || 24 === t[Ye] && (0 !== t[ye] || 0 !== t[fe] || 0 !== t[ke]) ? Ye : t[ye] < 0 || 59 < t[ye] ? ye : t[fe] < 0 || 59 < t[fe] ? fe : t[ke] < 0 || 999 < t[ke] ? ke : -1,
        Y(e)._overflowDayOfYear && (a < he || ce < a) && (a = ce),
        Y(e)._overflowWeeks && -1 === a && (a = pe),
        Y(e)._overflowWeekday && -1 === a && (a = De),
        Y(e).overflow = a),
        e
    }
    function la(e, a, t) {
        return null != e ? e : null != a ? a : t
    }
    function Ma(e) {
        var a, t, s, n, d, r = [];
        if (!e._d) {
            var _, i;
            for (_ = e,
            i = new Date(l.now()),
            s = _._useUTC ? [i.getUTCFullYear(), i.getUTCMonth(), i.getUTCDate()] : [i.getFullYear(), i.getMonth(), i.getDate()],
            e._w && null == e._a[ce] && null == e._a[Le] && function(e) {
                var a, t, s, n, d, r, _, i;
                if (null != (a = e._w).GG || null != a.W || null != a.E)
                    d = 1,
                    r = 4,
                    t = la(a.GG, e._a[he], Ce(Ha(), 1, 4).year),
                    s = la(a.W, 1),
                    ((n = la(a.E, 1)) < 1 || 7 < n) && (i = !0);
                else {
                    d = e._locale._week.dow,
                    r = e._locale._week.doy;
                    var o = Ce(Ha(), d, r);
                    t = la(a.gg, e._a[he], o.year),
                    s = la(a.w, o.week),
                    null != a.d ? ((n = a.d) < 0 || 6 < n) && (i = !0) : null != a.e ? (n = a.e + d,
                    (a.e < 0 || 6 < a.e) && (i = !0)) : n = d
                }
                s < 1 || s > Ie(t, d, r) ? Y(e)._overflowWeeks = !0 : null != i ? Y(e)._overflowWeekday = !0 : (_ = Re(t, s, n, d, r),
                e._a[he] = _.year,
                e._dayOfYear = _.dayOfYear)
            }(e),
            null != e._dayOfYear && (d = la(e._a[he], s[he]),
            (e._dayOfYear > Te(d) || 0 === e._dayOfYear) && (Y(e)._overflowDayOfYear = !0),
            t = Je(d, 0, e._dayOfYear),
            e._a[Le] = t.getUTCMonth(),
            e._a[ce] = t.getUTCDate()),
            a = 0; a < 3 && null == e._a[a]; ++a)
                e._a[a] = r[a] = s[a];
            for (; a < 7; a++)
                e._a[a] = r[a] = null == e._a[a] ? 2 === a ? 1 : 0 : e._a[a];
            24 === e._a[Ye] && 0 === e._a[ye] && 0 === e._a[fe] && 0 === e._a[ke] && (e._nextDay = !0,
            e._a[Ye] = 0),
            e._d = (e._useUTC ? Je : function(e, a, t, s, n, d, r) {
                var _;
                return e < 100 && 0 <= e ? (_ = new Date(e + 400,a,t,s,n,d,r),
                isFinite(_.getFullYear()) && _.setFullYear(e)) : _ = new Date(e,a,t,s,n,d,r),
                _
            }
            ).apply(null, r),
            n = e._useUTC ? e._d.getUTCDay() : e._d.getDay(),
            null != e._tzm && e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm),
            e._nextDay && (e._a[Ye] = 24),
            e._w && void 0 !== e._w.d && e._w.d !== n && (Y(e).weekdayMismatch = !0)
        }
    }
    var ha = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/
      , La = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/
      , ca = /Z|[+-]\d\d(?::?\d\d)?/
      , Ya = [["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/], ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/], ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/], ["GGGG-[W]WW", /\d{4}-W\d\d/, !1], ["YYYY-DDD", /\d{4}-\d{3}/], ["YYYY-MM", /\d{4}-\d\d/, !1], ["YYYYYYMMDD", /[+-]\d{10}/], ["YYYYMMDD", /\d{8}/], ["GGGG[W]WWE", /\d{4}W\d{3}/], ["GGGG[W]WW", /\d{4}W\d{2}/, !1], ["YYYYDDD", /\d{7}/]]
      , ya = [["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/], ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/], ["HH:mm:ss", /\d\d:\d\d:\d\d/], ["HH:mm", /\d\d:\d\d/], ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/], ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/], ["HHmmss", /\d\d\d\d\d\d/], ["HHmm", /\d\d\d\d/], ["HH", /\d\d/]]
      , fa = /^\/?Date\((\-?\d+)/i;
    function ka(e) {
        var a, t, s, n, d, r, _ = e._i, i = ha.exec(_) || La.exec(_);
        if (i) {
            for (Y(e).iso = !0,
            a = 0,
            t = Ya.length; a < t; a++)
                if (Ya[a][1].exec(i[1])) {
                    n = Ya[a][0],
                    s = !1 !== Ya[a][2];
                    break
                }
            if (null == n)
                return void (e._isValid = !1);
            if (i[3]) {
                for (a = 0,
                t = ya.length; a < t; a++)
                    if (ya[a][1].exec(i[3])) {
                        d = (i[2] || " ") + ya[a][0];
                        break
                    }
                if (null == d)
                    return void (e._isValid = !1)
            }
            if (!s && null != d)
                return void (e._isValid = !1);
            if (i[4]) {
                if (!ca.exec(i[4]))
                    return void (e._isValid = !1);
                r = "Z"
            }
            e._f = n + (d || "") + (r || ""),
            wa(e)
        } else
            e._isValid = !1
    }
    var pa = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;
    function Da(e, a, t, s, n, d) {
        var r = [function(e) {
            var a = parseInt(e, 10);
            {
                if (a <= 49)
                    return 2e3 + a;
                if (a <= 999)
                    return 1900 + a
            }
            return a
        }(e), Pe.indexOf(a), parseInt(t, 10), parseInt(s, 10), parseInt(n, 10)];
        return d && r.push(parseInt(d, 10)),
        r
    }
    var Ta = {
        UT: 0,
        GMT: 0,
        EDT: -240,
        EST: -300,
        CDT: -300,
        CST: -360,
        MDT: -360,
        MST: -420,
        PDT: -420,
        PST: -480
    };
    function ga(e) {
        var a, t, s, n = pa.exec(e._i.replace(/\([^)]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, ""));
        if (n) {
            var d = Da(n[4], n[3], n[2], n[5], n[6], n[7]);
            if (a = n[1],
            t = d,
            s = e,
            a && Ve.indexOf(a) !== new Date(t[0],t[1],t[2]).getDay() && (Y(s).weekdayMismatch = !0,
            !(s._isValid = !1)))
                return;
            e._a = d,
            e._tzm = function(e, a, t) {
                if (e)
                    return Ta[e];
                if (a)
                    return 0;
                var s = parseInt(t, 10)
                  , n = s % 100;
                return (s - n) / 100 * 60 + n
            }(n[8], n[9], n[10]),
            e._d = Je.apply(null, e._a),
            e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm),
            Y(e).rfc2822 = !0
        } else
            e._isValid = !1
    }
    function wa(e) {
        if (e._f !== l.ISO_8601)
            if (e._f !== l.RFC_2822) {
                e._a = [],
                Y(e).empty = !0;
                var a, t, s, n, d, r, _, i, o = "" + e._i, m = o.length, u = 0;
                for (s = U(e._f, e._locale).match(z) || [],
                a = 0; a < s.length; a++)
                    n = s[a],
                    (t = (o.match(oe(n, e)) || [])[0]) && (0 < (d = o.substr(0, o.indexOf(t))).length && Y(e).unusedInput.push(d),
                    o = o.slice(o.indexOf(t) + t.length),
                    u += t.length),
                    R[n] ? (t ? Y(e).empty = !1 : Y(e).unusedTokens.push(n),
                    r = n,
                    i = e,
                    null != (_ = t) && h(ue, r) && ue[r](_, i._a, i, r)) : e._strict && !t && Y(e).unusedTokens.push(n);
                Y(e).charsLeftOver = m - u,
                0 < o.length && Y(e).unusedInput.push(o),
                e._a[Ye] <= 12 && !0 === Y(e).bigHour && 0 < e._a[Ye] && (Y(e).bigHour = void 0),
                Y(e).parsedDateParts = e._a.slice(0),
                Y(e).meridiem = e._meridiem,
                e._a[Ye] = function(e, a, t) {
                    var s;
                    if (null == t)
                        return a;
                    return null != e.meridiemHour ? e.meridiemHour(a, t) : (null != e.isPM && ((s = e.isPM(t)) && a < 12 && (a += 12),
                    s || 12 !== a || (a = 0)),
                    a)
                }(e._locale, e._a[Ye], e._meridiem),
                Ma(e),
                ua(e)
            } else
                ga(e);
        else
            ka(e)
    }
    function va(e) {
        var a, t, s, n, d = e._i, r = e._f;
        return e._locale = e._locale || ma(e._l),
        null === d || void 0 === r && "" === d ? f({
            nullInput: !0
        }) : ("string" == typeof d && (e._i = d = e._locale.preparse(d)),
        D(d) ? new p(ua(d)) : (u(d) ? e._d = d : _(r) ? function(e) {
            var a, t, s, n, d;
            if (0 === e._f.length)
                return Y(e).invalidFormat = !0,
                e._d = new Date(NaN);
            for (n = 0; n < e._f.length; n++)
                d = 0,
                a = k({}, e),
                null != e._useUTC && (a._useUTC = e._useUTC),
                a._f = e._f[n],
                wa(a),
                y(a) && (d += Y(a).charsLeftOver,
                d += 10 * Y(a).unusedTokens.length,
                Y(a).score = d,
                (null == s || d < s) && (s = d,
                t = a));
            L(e, t || a)
        }(e) : r ? wa(e) : o(t = (a = e)._i) ? a._d = new Date(l.now()) : u(t) ? a._d = new Date(t.valueOf()) : "string" == typeof t ? (s = a,
        null === (n = fa.exec(s._i)) ? (ka(s),
        !1 === s._isValid && (delete s._isValid,
        ga(s),
        !1 === s._isValid && (delete s._isValid,
        l.createFromInputFallback(s)))) : s._d = new Date(+n[1])) : _(t) ? (a._a = M(t.slice(0), function(e) {
            return parseInt(e, 10)
        }),
        Ma(a)) : i(t) ? function(e) {
            if (!e._d) {
                var a = W(e._i);
                e._a = M([a.year, a.month, a.day || a.date, a.hour, a.minute, a.second, a.millisecond], function(e) {
                    return e && parseInt(e, 10)
                }),
                Ma(e)
            }
        }(a) : m(t) ? a._d = new Date(t) : l.createFromInputFallback(a),
        y(e) || (e._d = null),
        e))
    }
    function Sa(e, a, t, s, n) {
        var d, r = {};
        return !0 !== t && !1 !== t || (s = t,
        t = void 0),
        (i(e) && function(e) {
            if (Object.getOwnPropertyNames)
                return 0 === Object.getOwnPropertyNames(e).length;
            var a;
            for (a in e)
                if (e.hasOwnProperty(a))
                    return !1;
            return !0
        }(e) || _(e) && 0 === e.length) && (e = void 0),
        r._isAMomentObject = !0,
        r._useUTC = r._isUTC = n,
        r._l = t,
        r._i = e,
        r._f = a,
        r._strict = s,
        (d = new p(ua(va(r))))._nextDay && (d.add(1, "d"),
        d._nextDay = void 0),
        d
    }
    function Ha(e, a, t, s) {
        return Sa(e, a, t, s, !1)
    }
    l.createFromInputFallback = t("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.", function(e) {
        e._d = new Date(e._i + (e._useUTC ? " UTC" : ""))
    }),
    l.ISO_8601 = function() {}
    ,
    l.RFC_2822 = function() {}
    ;
    var ba = t("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
        var e = Ha.apply(null, arguments);
        return this.isValid() && e.isValid() ? e < this ? this : e : f()
    })
      , ja = t("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
        var e = Ha.apply(null, arguments);
        return this.isValid() && e.isValid() ? this < e ? this : e : f()
    });
    function xa(e, a) {
        var t, s;
        if (1 === a.length && _(a[0]) && (a = a[0]),
        !a.length)
            return Ha();
        for (t = a[0],
        s = 1; s < a.length; ++s)
            a[s].isValid() && !a[s][e](t) || (t = a[s]);
        return t
    }
    var Oa = ["year", "quarter", "month", "week", "day", "hour", "minute", "second", "millisecond"];
    function Pa(e) {
        var a = W(e)
          , t = a.year || 0
          , s = a.quarter || 0
          , n = a.month || 0
          , d = a.week || a.isoWeek || 0
          , r = a.day || 0
          , _ = a.hour || 0
          , i = a.minute || 0
          , o = a.second || 0
          , m = a.millisecond || 0;
        this._isValid = function(e) {
            for (var a in e)
                if (-1 === we.call(Oa, a) || null != e[a] && isNaN(e[a]))
                    return !1;
            for (var t = !1, s = 0; s < Oa.length; ++s)
                if (e[Oa[s]]) {
                    if (t)
                        return !1;
                    parseFloat(e[Oa[s]]) !== g(e[Oa[s]]) && (t = !0)
                }
            return !0
        }(a),
        this._milliseconds = +m + 1e3 * o + 6e4 * i + 1e3 * _ * 60 * 60,
        this._days = +r + 7 * d,
        this._months = +n + 3 * s + 12 * t,
        this._data = {},
        this._locale = ma(),
        this._bubble()
    }
    function Wa(e) {
        return e instanceof Pa
    }
    function Aa(e) {
        return e < 0 ? -1 * Math.round(-1 * e) : Math.round(e)
    }
    function Ea(e, t) {
        C(e, 0, 0, function() {
            var e = this.utcOffset()
              , a = "+";
            return e < 0 && (e = -e,
            a = "-"),
            a + F(~~(e / 60), 2) + t + F(~~e % 60, 2)
        })
    }
    Ea("Z", ":"),
    Ea("ZZ", ""),
    ie("Z", de),
    ie("ZZ", de),
    le(["Z", "ZZ"], function(e, a, t) {
        t._useUTC = !0,
        t._tzm = za(de, e)
    });
    var Fa = /([\+\-]|\d\d)/gi;
    function za(e, a) {
        var t = (a || "").match(e);
        if (null === t)
            return null;
        var s = ((t[t.length - 1] || []) + "").match(Fa) || ["-", 0, 0]
          , n = 60 * s[1] + g(s[2]);
        return 0 === n ? 0 : "+" === s[0] ? n : -n
    }
    function Ja(e, a) {
        var t, s;
        return a._isUTC ? (t = a.clone(),
        s = (D(e) || u(e) ? e.valueOf() : Ha(e).valueOf()) - t.valueOf(),
        t._d.setTime(t._d.valueOf() + s),
        l.updateOffset(t, !1),
        t) : Ha(e).local()
    }
    function Na(e) {
        return 15 * -Math.round(e._d.getTimezoneOffset() / 15)
    }
    function Ra() {
        return !!this.isValid() && (this._isUTC && 0 === this._offset)
    }
    l.updateOffset = function() {}
    ;
    var Ca = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/
      , Ia = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
    function Ua(e, a) {
        var t, s, n, d = e, r = null;
        return Wa(e) ? d = {
            ms: e._milliseconds,
            d: e._days,
            M: e._months
        } : m(e) ? (d = {},
        a ? d[a] = e : d.milliseconds = e) : (r = Ca.exec(e)) ? (t = "-" === r[1] ? -1 : 1,
        d = {
            y: 0,
            d: g(r[ce]) * t,
            h: g(r[Ye]) * t,
            m: g(r[ye]) * t,
            s: g(r[fe]) * t,
            ms: g(Aa(1e3 * r[ke])) * t
        }) : (r = Ia.exec(e)) ? (t = "-" === r[1] ? -1 : 1,
        d = {
            y: Ga(r[2], t),
            M: Ga(r[3], t),
            w: Ga(r[4], t),
            d: Ga(r[5], t),
            h: Ga(r[6], t),
            m: Ga(r[7], t),
            s: Ga(r[8], t)
        }) : null == d ? d = {} : "object" == typeof d && ("from"in d || "to"in d) && (n = function(e, a) {
            var t;
            if (!e.isValid() || !a.isValid())
                return {
                    milliseconds: 0,
                    months: 0
                };
            a = Ja(a, e),
            e.isBefore(a) ? t = Va(e, a) : ((t = Va(a, e)).milliseconds = -t.milliseconds,
            t.months = -t.months);
            return t
        }(Ha(d.from), Ha(d.to)),
        (d = {}).ms = n.milliseconds,
        d.M = n.months),
        s = new Pa(d),
        Wa(e) && h(e, "_locale") && (s._locale = e._locale),
        s
    }
    function Ga(e, a) {
        var t = e && parseFloat(e.replace(",", "."));
        return (isNaN(t) ? 0 : t) * a
    }
    function Va(e, a) {
        var t = {};
        return t.months = a.month() - e.month() + 12 * (a.year() - e.year()),
        e.clone().add(t.months, "M").isAfter(a) && --t.months,
        t.milliseconds = +a - +e.clone().add(t.months, "M"),
        t
    }
    function Ka(s, n) {
        return function(e, a) {
            var t;
            return null === a || isNaN(+a) || (S(n, "moment()." + n + "(period, number) is deprecated. Please use moment()." + n + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),
            t = e,
            e = a,
            a = t),
            Za(this, Ua(e = "string" == typeof e ? +e : e, a), s),
            this
        }
    }
    function Za(e, a, t, s) {
        var n = a._milliseconds
          , d = Aa(a._days)
          , r = Aa(a._months);
        e.isValid() && (s = null == s || s,
        r && We(e, He(e, "Month") + r * t),
        d && be(e, "Date", He(e, "Date") + d * t),
        n && e._d.setTime(e._d.valueOf() + n * t),
        s && l.updateOffset(e, d || r))
    }
    Ua.fn = Pa.prototype,
    Ua.invalid = function() {
        return Ua(NaN)
    }
    ;
    var $a = Ka(1, "add")
      , Ba = Ka(-1, "subtract");
    function qa(e, a) {
        var t = 12 * (a.year() - e.year()) + (a.month() - e.month())
          , s = e.clone().add(t, "months");
        return -(t + (a - s < 0 ? (a - s) / (s - e.clone().add(t - 1, "months")) : (a - s) / (e.clone().add(t + 1, "months") - s))) || 0
    }
    function Qa(e) {
        var a;
        return void 0 === e ? this._locale._abbr : (null != (a = ma(e)) && (this._locale = a),
        this)
    }
    l.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ",
    l.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
    var Xa = t("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", function(e) {
        return void 0 === e ? this.localeData() : this.locale(e)
    });
    function et() {
        return this._locale
    }
    var at = 126227808e5;
    function tt(e, a) {
        return (e % a + a) % a
    }
    function st(e, a, t) {
        return e < 100 && 0 <= e ? new Date(e + 400,a,t) - at : new Date(e,a,t).valueOf()
    }
    function nt(e, a, t) {
        return e < 100 && 0 <= e ? Date.UTC(e + 400, a, t) - at : Date.UTC(e, a, t)
    }
    function dt(e, a) {
        C(0, [e, e.length], 0, a)
    }
    function rt(e, a, t, s, n) {
        var d;
        return null == e ? Ce(this, s, n).year : ((d = Ie(e, s, n)) < a && (a = d),
        function(e, a, t, s, n) {
            var d = Re(e, a, t, s, n)
              , r = Je(d.year, 0, d.dayOfYear);
            return this.year(r.getUTCFullYear()),
            this.month(r.getUTCMonth()),
            this.date(r.getUTCDate()),
            this
        }
        .call(this, e, a, t, s, n))
    }
    C(0, ["gg", 2], 0, function() {
        return this.weekYear() % 100
    }),
    C(0, ["GG", 2], 0, function() {
        return this.isoWeekYear() % 100
    }),
    dt("gggg", "weekYear"),
    dt("ggggg", "weekYear"),
    dt("GGGG", "isoWeekYear"),
    dt("GGGGG", "isoWeekYear"),
    O("weekYear", "gg"),
    O("isoWeekYear", "GG"),
    E("weekYear", 1),
    E("isoWeekYear", 1),
    ie("G", se),
    ie("g", se),
    ie("GG", B, V),
    ie("gg", B, V),
    ie("GGGG", ee, Z),
    ie("gggg", ee, Z),
    ie("GGGGG", ae, $),
    ie("ggggg", ae, $),
    Me(["gggg", "ggggg", "GGGG", "GGGGG"], function(e, a, t, s) {
        a[s.substr(0, 2)] = g(e)
    }),
    Me(["gg", "GG"], function(e, a, t, s) {
        a[s] = l.parseTwoDigitYear(e)
    }),
    C("Q", 0, "Qo", "quarter"),
    O("quarter", "Q"),
    E("quarter", 7),
    ie("Q", G),
    le("Q", function(e, a) {
        a[Le] = 3 * (g(e) - 1)
    }),
    C("D", ["DD", 2], "Do", "date"),
    O("date", "D"),
    E("date", 9),
    ie("D", B),
    ie("DD", B, V),
    ie("Do", function(e, a) {
        return e ? a._dayOfMonthOrdinalParse || a._ordinalParse : a._dayOfMonthOrdinalParseLenient
    }),
    le(["D", "DD"], ce),
    le("Do", function(e, a) {
        a[ce] = g(e.match(B)[0])
    });
    var _t = Se("Date", !0);
    C("DDD", ["DDDD", 3], "DDDo", "dayOfYear"),
    O("dayOfYear", "DDD"),
    E("dayOfYear", 4),
    ie("DDD", X),
    ie("DDDD", K),
    le(["DDD", "DDDD"], function(e, a, t) {
        t._dayOfYear = g(e)
    }),
    C("m", ["mm", 2], 0, "minute"),
    O("minute", "m"),
    E("minute", 14),
    ie("m", B),
    ie("mm", B, V),
    le(["m", "mm"], ye);
    var it = Se("Minutes", !1);
    C("s", ["ss", 2], 0, "second"),
    O("second", "s"),
    E("second", 15),
    ie("s", B),
    ie("ss", B, V),
    le(["s", "ss"], fe);
    var ot, mt = Se("Seconds", !1);
    for (C("S", 0, 0, function() {
        return ~~(this.millisecond() / 100)
    }),
    C(0, ["SS", 2], 0, function() {
        return ~~(this.millisecond() / 10)
    }),
    C(0, ["SSS", 3], 0, "millisecond"),
    C(0, ["SSSS", 4], 0, function() {
        return 10 * this.millisecond()
    }),
    C(0, ["SSSSS", 5], 0, function() {
        return 100 * this.millisecond()
    }),
    C(0, ["SSSSSS", 6], 0, function() {
        return 1e3 * this.millisecond()
    }),
    C(0, ["SSSSSSS", 7], 0, function() {
        return 1e4 * this.millisecond()
    }),
    C(0, ["SSSSSSSS", 8], 0, function() {
        return 1e5 * this.millisecond()
    }),
    C(0, ["SSSSSSSSS", 9], 0, function() {
        return 1e6 * this.millisecond()
    }),
    O("millisecond", "ms"),
    E("millisecond", 16),
    ie("S", X, G),
    ie("SS", X, V),
    ie("SSS", X, K),
    ot = "SSSS"; ot.length <= 9; ot += "S")
        ie(ot, te);
    function ut(e, a) {
        a[ke] = g(1e3 * ("0." + e))
    }
    for (ot = "S"; ot.length <= 9; ot += "S")
        le(ot, ut);
    var lt = Se("Milliseconds", !1);
    C("z", 0, 0, "zoneAbbr"),
    C("zz", 0, 0, "zoneName");
    var Mt = p.prototype;
    function ht(e) {
        return e
    }
    Mt.add = $a,
    Mt.calendar = function(e, a) {
        var t = e || Ha()
          , s = Ja(t, this).startOf("day")
          , n = l.calendarFormat(this, s) || "sameElse"
          , d = a && (H(a[n]) ? a[n].call(this, t) : a[n]);
        return this.format(d || this.localeData().calendar(n, this, Ha(t)))
    }
    ,
    Mt.clone = function() {
        return new p(this)
    }
    ,
    Mt.diff = function(e, a, t) {
        var s, n, d;
        if (!this.isValid())
            return NaN;
        if (!(s = Ja(e, this)).isValid())
            return NaN;
        switch (n = 6e4 * (s.utcOffset() - this.utcOffset()),
        a = P(a)) {
        case "year":
            d = qa(this, s) / 12;
            break;
        case "month":
            d = qa(this, s);
            break;
        case "quarter":
            d = qa(this, s) / 3;
            break;
        case "second":
            d = (this - s) / 1e3;
            break;
        case "minute":
            d = (this - s) / 6e4;
            break;
        case "hour":
            d = (this - s) / 36e5;
            break;
        case "day":
            d = (this - s - n) / 864e5;
            break;
        case "week":
            d = (this - s - n) / 6048e5;
            break;
        default:
            d = this - s
        }
        return t ? d : T(d)
    }
    ,
    Mt.endOf = function(e) {
        var a;
        if (void 0 === (e = P(e)) || "millisecond" === e || !this.isValid())
            return this;
        var t = this._isUTC ? nt : st;
        switch (e) {
        case "year":
            a = t(this.year() + 1, 0, 1) - 1;
            break;
        case "quarter":
            a = t(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
            break;
        case "month":
            a = t(this.year(), this.month() + 1, 1) - 1;
            break;
        case "week":
            a = t(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
            break;
        case "isoWeek":
            a = t(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
            break;
        case "day":
        case "date":
            a = t(this.year(), this.month(), this.date() + 1) - 1;
            break;
        case "hour":
            a = this._d.valueOf(),
            a += 36e5 - tt(a + (this._isUTC ? 0 : 6e4 * this.utcOffset()), 36e5) - 1;
            break;
        case "minute":
            a = this._d.valueOf(),
            a += 6e4 - tt(a, 6e4) - 1;
            break;
        case "second":
            a = this._d.valueOf(),
            a += 1e3 - tt(a, 1e3) - 1;
            break
        }
        return this._d.setTime(a),
        l.updateOffset(this, !0),
        this
    }
    ,
    Mt.format = function(e) {
        e || (e = this.isUtc() ? l.defaultFormatUtc : l.defaultFormat);
        var a = I(this, e);
        return this.localeData().postformat(a)
    }
    ,
    Mt.from = function(e, a) {
        return this.isValid() && (D(e) && e.isValid() || Ha(e).isValid()) ? Ua({
            to: this,
            from: e
        }).locale(this.locale()).humanize(!a) : this.localeData().invalidDate()
    }
    ,
    Mt.fromNow = function(e) {
        return this.from(Ha(), e)
    }
    ,
    Mt.to = function(e, a) {
        return this.isValid() && (D(e) && e.isValid() || Ha(e).isValid()) ? Ua({
            from: this,
            to: e
        }).locale(this.locale()).humanize(!a) : this.localeData().invalidDate()
    }
    ,
    Mt.toNow = function(e) {
        return this.to(Ha(), e)
    }
    ,
    Mt.get = function(e) {
        return H(this[e = P(e)]) ? this[e]() : this
    }
    ,
    Mt.invalidAt = function() {
        return Y(this).overflow
    }
    ,
    Mt.isAfter = function(e, a) {
        var t = D(e) ? e : Ha(e);
        return !(!this.isValid() || !t.isValid()) && ("millisecond" === (a = P(a) || "millisecond") ? this.valueOf() > t.valueOf() : t.valueOf() < this.clone().startOf(a).valueOf())
    }
    ,
    Mt.isBefore = function(e, a) {
        var t = D(e) ? e : Ha(e);
        return !(!this.isValid() || !t.isValid()) && ("millisecond" === (a = P(a) || "millisecond") ? this.valueOf() < t.valueOf() : this.clone().endOf(a).valueOf() < t.valueOf())
    }
    ,
    Mt.isBetween = function(e, a, t, s) {
        var n = D(e) ? e : Ha(e)
          , d = D(a) ? a : Ha(a);
        return !!(this.isValid() && n.isValid() && d.isValid()) && ("(" === (s = s || "()")[0] ? this.isAfter(n, t) : !this.isBefore(n, t)) && (")" === s[1] ? this.isBefore(d, t) : !this.isAfter(d, t))
    }
    ,
    Mt.isSame = function(e, a) {
        var t, s = D(e) ? e : Ha(e);
        return !(!this.isValid() || !s.isValid()) && ("millisecond" === (a = P(a) || "millisecond") ? this.valueOf() === s.valueOf() : (t = s.valueOf(),
        this.clone().startOf(a).valueOf() <= t && t <= this.clone().endOf(a).valueOf()))
    }
    ,
    Mt.isSameOrAfter = function(e, a) {
        return this.isSame(e, a) || this.isAfter(e, a)
    }
    ,
    Mt.isSameOrBefore = function(e, a) {
        return this.isSame(e, a) || this.isBefore(e, a)
    }
    ,
    Mt.isValid = function() {
        return y(this)
    }
    ,
    Mt.lang = Xa,
    Mt.locale = Qa,
    Mt.localeData = et,
    Mt.max = ja,
    Mt.min = ba,
    Mt.parsingFlags = function() {
        return L({}, Y(this))
    }
    ,
    Mt.set = function(e, a) {
        if ("object" == typeof e)
            for (var t = function(e) {
                var a = [];
                for (var t in e)
                    a.push({
                        unit: t,
                        priority: A[t]
                    });
                return a.sort(function(e, a) {
                    return e.priority - a.priority
                }),
                a
            }(e = W(e)), s = 0; s < t.length; s++)
                this[t[s].unit](e[t[s].unit]);
        else if (H(this[e = P(e)]))
            return this[e](a);
        return this
    }
    ,
    Mt.startOf = function(e) {
        var a;
        if (void 0 === (e = P(e)) || "millisecond" === e || !this.isValid())
            return this;
        var t = this._isUTC ? nt : st;
        switch (e) {
        case "year":
            a = t(this.year(), 0, 1);
            break;
        case "quarter":
            a = t(this.year(), this.month() - this.month() % 3, 1);
            break;
        case "month":
            a = t(this.year(), this.month(), 1);
            break;
        case "week":
            a = t(this.year(), this.month(), this.date() - this.weekday());
            break;
        case "isoWeek":
            a = t(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
            break;
        case "day":
        case "date":
            a = t(this.year(), this.month(), this.date());
            break;
        case "hour":
            a = this._d.valueOf(),
            a -= tt(a + (this._isUTC ? 0 : 6e4 * this.utcOffset()), 36e5);
            break;
        case "minute":
            a = this._d.valueOf(),
            a -= tt(a, 6e4);
            break;
        case "second":
            a = this._d.valueOf(),
            a -= tt(a, 1e3);
            break
        }
        return this._d.setTime(a),
        l.updateOffset(this, !0),
        this
    }
    ,
    Mt.subtract = Ba,
    Mt.toArray = function() {
        var e = this;
        return [e.year(), e.month(), e.date(), e.hour(), e.minute(), e.second(), e.millisecond()]
    }
    ,
    Mt.toObject = function() {
        var e = this;
        return {
            years: e.year(),
            months: e.month(),
            date: e.date(),
            hours: e.hours(),
            minutes: e.minutes(),
            seconds: e.seconds(),
            milliseconds: e.milliseconds()
        }
    }
    ,
    Mt.toDate = function() {
        return new Date(this.valueOf())
    }
    ,
    Mt.toISOString = function(e) {
        if (!this.isValid())
            return null;
        var a = !0 !== e
          , t = a ? this.clone().utc() : this;
        return t.year() < 0 || 9999 < t.year() ? I(t, a ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ") : H(Date.prototype.toISOString) ? a ? this.toDate().toISOString() : new Date(this.valueOf() + 60 * this.utcOffset() * 1e3).toISOString().replace("Z", I(t, "Z")) : I(t, a ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ")
    }
    ,
    Mt.inspect = function() {
        if (!this.isValid())
            return "moment.invalid(/* " + this._i + " */)";
        var e = "moment"
          , a = "";
        this.isLocal() || (e = 0 === this.utcOffset() ? "moment.utc" : "moment.parseZone",
        a = "Z");
        var t = "[" + e + '("]'
          , s = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY"
          , n = a + '[")]';
        return this.format(t + s + "-MM-DD[T]HH:mm:ss.SSS" + n)
    }
    ,
    Mt.toJSON = function() {
        return this.isValid() ? this.toISOString() : null
    }
    ,
    Mt.toString = function() {
        return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")
    }
    ,
    Mt.unix = function() {
        return Math.floor(this.valueOf() / 1e3)
    }
    ,
    Mt.valueOf = function() {
        return this._d.valueOf() - 6e4 * (this._offset || 0)
    }
    ,
    Mt.creationData = function() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict
        }
    }
    ,
    Mt.year = ve,
    Mt.isLeapYear = function() {
        return ge(this.year())
    }
    ,
    Mt.weekYear = function(e) {
        return rt.call(this, e, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy)
    }
    ,
    Mt.isoWeekYear = function(e) {
        return rt.call(this, e, this.isoWeek(), this.isoWeekday(), 1, 4)
    }
    ,
    Mt.quarter = Mt.quarters = function(e) {
        return null == e ? Math.ceil((this.month() + 1) / 3) : this.month(3 * (e - 1) + this.month() % 3)
    }
    ,
    Mt.month = Ae,
    Mt.daysInMonth = function() {
        return je(this.year(), this.month())
    }
    ,
    Mt.week = Mt.weeks = function(e) {
        var a = this.localeData().week(this);
        return null == e ? a : this.add(7 * (e - a), "d")
    }
    ,
    Mt.isoWeek = Mt.isoWeeks = function(e) {
        var a = Ce(this, 1, 4).week;
        return null == e ? a : this.add(7 * (e - a), "d")
    }
    ,
    Mt.weeksInYear = function() {
        var e = this.localeData()._week;
        return Ie(this.year(), e.dow, e.doy)
    }
    ,
    Mt.isoWeeksInYear = function() {
        return Ie(this.year(), 1, 4)
    }
    ,
    Mt.date = _t,
    Mt.day = Mt.days = function(e) {
        if (!this.isValid())
            return null != e ? this : NaN;
        var a, t, s = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        return null != e ? (a = e,
        t = this.localeData(),
        e = "string" != typeof a ? a : isNaN(a) ? "number" == typeof (a = t.weekdaysParse(a)) ? a : null : parseInt(a, 10),
        this.add(e - s, "d")) : s
    }
    ,
    Mt.weekday = function(e) {
        if (!this.isValid())
            return null != e ? this : NaN;
        var a = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return null == e ? a : this.add(e - a, "d")
    }
    ,
    Mt.isoWeekday = function(e) {
        if (!this.isValid())
            return null != e ? this : NaN;
        if (null == e)
            return this.day() || 7;
        var a, t, s = (a = e,
        t = this.localeData(),
        "string" == typeof a ? t.weekdaysParse(a) % 7 || 7 : isNaN(a) ? null : a);
        return this.day(this.day() % 7 ? s : s - 7)
    }
    ,
    Mt.dayOfYear = function(e) {
        var a = Math.round((this.clone().startOf("day") - this.clone().startOf("year")) / 864e5) + 1;
        return null == e ? a : this.add(e - a, "d")
    }
    ,
    Mt.hour = Mt.hours = ta,
    Mt.minute = Mt.minutes = it,
    Mt.second = Mt.seconds = mt,
    Mt.millisecond = Mt.milliseconds = lt,
    Mt.utcOffset = function(e, a, t) {
        var s, n = this._offset || 0;
        if (!this.isValid())
            return null != e ? this : NaN;
        if (null == e)
            return this._isUTC ? n : Na(this);
        if ("string" == typeof e) {
            if (null === (e = za(de, e)))
                return this
        } else
            Math.abs(e) < 16 && !t && (e *= 60);
        return !this._isUTC && a && (s = Na(this)),
        this._offset = e,
        this._isUTC = !0,
        null != s && this.add(s, "m"),
        n !== e && (!a || this._changeInProgress ? Za(this, Ua(e - n, "m"), 1, !1) : this._changeInProgress || (this._changeInProgress = !0,
        l.updateOffset(this, !0),
        this._changeInProgress = null)),
        this
    }
    ,
    Mt.utc = function(e) {
        return this.utcOffset(0, e)
    }
    ,
    Mt.local = function(e) {
        return this._isUTC && (this.utcOffset(0, e),
        this._isUTC = !1,
        e && this.subtract(Na(this), "m")),
        this
    }
    ,
    Mt.parseZone = function() {
        if (null != this._tzm)
            this.utcOffset(this._tzm, !1, !0);
        else if ("string" == typeof this._i) {
            var e = za(ne, this._i);
            null != e ? this.utcOffset(e) : this.utcOffset(0, !0)
        }
        return this
    }
    ,
    Mt.hasAlignedHourOffset = function(e) {
        return !!this.isValid() && (e = e ? Ha(e).utcOffset() : 0,
        (this.utcOffset() - e) % 60 == 0)
    }
    ,
    Mt.isDST = function() {
        return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset()
    }
    ,
    Mt.isLocal = function() {
        return !!this.isValid() && !this._isUTC
    }
    ,
    Mt.isUtcOffset = function() {
        return !!this.isValid() && this._isUTC
    }
    ,
    Mt.isUtc = Ra,
    Mt.isUTC = Ra,
    Mt.zoneAbbr = function() {
        return this._isUTC ? "UTC" : ""
    }
    ,
    Mt.zoneName = function() {
        return this._isUTC ? "Coordinated Universal Time" : ""
    }
    ,
    Mt.dates = t("dates accessor is deprecated. Use date instead.", _t),
    Mt.months = t("months accessor is deprecated. Use month instead", Ae),
    Mt.years = t("years accessor is deprecated. Use year instead", ve),
    Mt.zone = t("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/", function(e, a) {
        return null != e ? ("string" != typeof e && (e = -e),
        this.utcOffset(e, a),
        this) : -this.utcOffset()
    }),
    Mt.isDSTShifted = t("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information", function() {
        if (!o(this._isDSTShifted))
            return this._isDSTShifted;
        var e = {};
        if (k(e, this),
        (e = va(e))._a) {
            var a = e._isUTC ? c(e._a) : Ha(e._a);
            this._isDSTShifted = this.isValid() && 0 < r(e._a, a.toArray())
        } else
            this._isDSTShifted = !1;
        return this._isDSTShifted
    });
    var Lt = j.prototype;
    function ct(e, a, t, s) {
        var n = ma()
          , d = c().set(s, a);
        return n[t](d, e)
    }
    function Yt(e, a, t) {
        if (m(e) && (a = e,
        e = void 0),
        e = e || "",
        null != a)
            return ct(e, a, t, "month");
        var s, n = [];
        for (s = 0; s < 12; s++)
            n[s] = ct(e, s, t, "month");
        return n
    }
    function yt(e, a, t, s) {
        a = ("boolean" == typeof e ? m(a) && (t = a,
        a = void 0) : (a = e,
        e = !1,
        m(t = a) && (t = a,
        a = void 0)),
        a || "");
        var n, d = ma(), r = e ? d._week.dow : 0;
        if (null != t)
            return ct(a, (t + r) % 7, s, "day");
        var _ = [];
        for (n = 0; n < 7; n++)
            _[n] = ct(a, (n + r) % 7, s, "day");
        return _
    }
    Lt.calendar = function(e, a, t) {
        var s = this._calendar[e] || this._calendar.sameElse;
        return H(s) ? s.call(a, t) : s
    }
    ,
    Lt.longDateFormat = function(e) {
        var a = this._longDateFormat[e]
          , t = this._longDateFormat[e.toUpperCase()];
        return a || !t ? a : (this._longDateFormat[e] = t.replace(/MMMM|MM|DD|dddd/g, function(e) {
            return e.slice(1)
        }),
        this._longDateFormat[e])
    }
    ,
    Lt.invalidDate = function() {
        return this._invalidDate
    }
    ,
    Lt.ordinal = function(e) {
        return this._ordinal.replace("%d", e)
    }
    ,
    Lt.preparse = ht,
    Lt.postformat = ht,
    Lt.relativeTime = function(e, a, t, s) {
        var n = this._relativeTime[t];
        return H(n) ? n(e, a, t, s) : n.replace(/%d/i, e)
    }
    ,
    Lt.pastFuture = function(e, a) {
        var t = this._relativeTime[0 < e ? "future" : "past"];
        return H(t) ? t(a) : t.replace(/%s/i, a)
    }
    ,
    Lt.set = function(e) {
        var a, t;
        for (t in e)
            H(a = e[t]) ? this[t] = a : this["_" + t] = a;
        this._config = e,
        this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source)
    }
    ,
    Lt.months = function(e, a) {
        return e ? _(this._months) ? this._months[e.month()] : this._months[(this._months.isFormat || xe).test(a) ? "format" : "standalone"][e.month()] : _(this._months) ? this._months : this._months.standalone
    }
    ,
    Lt.monthsShort = function(e, a) {
        return e ? _(this._monthsShort) ? this._monthsShort[e.month()] : this._monthsShort[xe.test(a) ? "format" : "standalone"][e.month()] : _(this._monthsShort) ? this._monthsShort : this._monthsShort.standalone
    }
    ,
    Lt.monthsParse = function(e, a, t) {
        var s, n, d;
        if (this._monthsParseExact)
            return function(e, a, t) {
                var s, n, d, r = e.toLocaleLowerCase();
                if (!this._monthsParse)
                    for (this._monthsParse = [],
                    this._longMonthsParse = [],
                    this._shortMonthsParse = [],
                    s = 0; s < 12; ++s)
                        d = c([2e3, s]),
                        this._shortMonthsParse[s] = this.monthsShort(d, "").toLocaleLowerCase(),
                        this._longMonthsParse[s] = this.months(d, "").toLocaleLowerCase();
                return t ? "MMM" === a ? -1 !== (n = we.call(this._shortMonthsParse, r)) ? n : null : -1 !== (n = we.call(this._longMonthsParse, r)) ? n : null : "MMM" === a ? -1 !== (n = we.call(this._shortMonthsParse, r)) ? n : -1 !== (n = we.call(this._longMonthsParse, r)) ? n : null : -1 !== (n = we.call(this._longMonthsParse, r)) ? n : -1 !== (n = we.call(this._shortMonthsParse, r)) ? n : null
            }
            .call(this, e, a, t);
        for (this._monthsParse || (this._monthsParse = [],
        this._longMonthsParse = [],
        this._shortMonthsParse = []),
        s = 0; s < 12; s++) {
            if (n = c([2e3, s]),
            t && !this._longMonthsParse[s] && (this._longMonthsParse[s] = new RegExp("^" + this.months(n, "").replace(".", "") + "$","i"),
            this._shortMonthsParse[s] = new RegExp("^" + this.monthsShort(n, "").replace(".", "") + "$","i")),
            t || this._monthsParse[s] || (d = "^" + this.months(n, "") + "|^" + this.monthsShort(n, ""),
            this._monthsParse[s] = new RegExp(d.replace(".", ""),"i")),
            t && "MMMM" === a && this._longMonthsParse[s].test(e))
                return s;
            if (t && "MMM" === a && this._shortMonthsParse[s].test(e))
                return s;
            if (!t && this._monthsParse[s].test(e))
                return s
        }
    }
    ,
    Lt.monthsRegex = function(e) {
        return this._monthsParseExact ? (h(this, "_monthsRegex") || ze.call(this),
        e ? this._monthsStrictRegex : this._monthsRegex) : (h(this, "_monthsRegex") || (this._monthsRegex = Fe),
        this._monthsStrictRegex && e ? this._monthsStrictRegex : this._monthsRegex)
    }
    ,
    Lt.monthsShortRegex = function(e) {
        return this._monthsParseExact ? (h(this, "_monthsRegex") || ze.call(this),
        e ? this._monthsShortStrictRegex : this._monthsShortRegex) : (h(this, "_monthsShortRegex") || (this._monthsShortRegex = Ee),
        this._monthsShortStrictRegex && e ? this._monthsShortStrictRegex : this._monthsShortRegex)
    }
    ,
    Lt.week = function(e) {
        return Ce(e, this._week.dow, this._week.doy).week
    }
    ,
    Lt.firstDayOfYear = function() {
        return this._week.doy
    }
    ,
    Lt.firstDayOfWeek = function() {
        return this._week.dow
    }
    ,
    Lt.weekdays = function(e, a) {
        var t = _(this._weekdays) ? this._weekdays : this._weekdays[e && !0 !== e && this._weekdays.isFormat.test(a) ? "format" : "standalone"];
        return !0 === e ? Ue(t, this._week.dow) : e ? t[e.day()] : t
    }
    ,
    Lt.weekdaysMin = function(e) {
        return !0 === e ? Ue(this._weekdaysMin, this._week.dow) : e ? this._weekdaysMin[e.day()] : this._weekdaysMin
    }
    ,
    Lt.weekdaysShort = function(e) {
        return !0 === e ? Ue(this._weekdaysShort, this._week.dow) : e ? this._weekdaysShort[e.day()] : this._weekdaysShort
    }
    ,
    Lt.weekdaysParse = function(e, a, t) {
        var s, n, d;
        if (this._weekdaysParseExact)
            return function(e, a, t) {
                var s, n, d, r = e.toLocaleLowerCase();
                if (!this._weekdaysParse)
                    for (this._weekdaysParse = [],
                    this._shortWeekdaysParse = [],
                    this._minWeekdaysParse = [],
                    s = 0; s < 7; ++s)
                        d = c([2e3, 1]).day(s),
                        this._minWeekdaysParse[s] = this.weekdaysMin(d, "").toLocaleLowerCase(),
                        this._shortWeekdaysParse[s] = this.weekdaysShort(d, "").toLocaleLowerCase(),
                        this._weekdaysParse[s] = this.weekdays(d, "").toLocaleLowerCase();
                return t ? "dddd" === a ? -1 !== (n = we.call(this._weekdaysParse, r)) ? n : null : "ddd" === a ? -1 !== (n = we.call(this._shortWeekdaysParse, r)) ? n : null : -1 !== (n = we.call(this._minWeekdaysParse, r)) ? n : null : "dddd" === a ? -1 !== (n = we.call(this._weekdaysParse, r)) ? n : -1 !== (n = we.call(this._shortWeekdaysParse, r)) ? n : -1 !== (n = we.call(this._minWeekdaysParse, r)) ? n : null : "ddd" === a ? -1 !== (n = we.call(this._shortWeekdaysParse, r)) ? n : -1 !== (n = we.call(this._weekdaysParse, r)) ? n : -1 !== (n = we.call(this._minWeekdaysParse, r)) ? n : null : -1 !== (n = we.call(this._minWeekdaysParse, r)) ? n : -1 !== (n = we.call(this._weekdaysParse, r)) ? n : -1 !== (n = we.call(this._shortWeekdaysParse, r)) ? n : null
            }
            .call(this, e, a, t);
        for (this._weekdaysParse || (this._weekdaysParse = [],
        this._minWeekdaysParse = [],
        this._shortWeekdaysParse = [],
        this._fullWeekdaysParse = []),
        s = 0; s < 7; s++) {
            if (n = c([2e3, 1]).day(s),
            t && !this._fullWeekdaysParse[s] && (this._fullWeekdaysParse[s] = new RegExp("^" + this.weekdays(n, "").replace(".", "\\.?") + "$","i"),
            this._shortWeekdaysParse[s] = new RegExp("^" + this.weekdaysShort(n, "").replace(".", "\\.?") + "$","i"),
            this._minWeekdaysParse[s] = new RegExp("^" + this.weekdaysMin(n, "").replace(".", "\\.?") + "$","i")),
            this._weekdaysParse[s] || (d = "^" + this.weekdays(n, "") + "|^" + this.weekdaysShort(n, "") + "|^" + this.weekdaysMin(n, ""),
            this._weekdaysParse[s] = new RegExp(d.replace(".", ""),"i")),
            t && "dddd" === a && this._fullWeekdaysParse[s].test(e))
                return s;
            if (t && "ddd" === a && this._shortWeekdaysParse[s].test(e))
                return s;
            if (t && "dd" === a && this._minWeekdaysParse[s].test(e))
                return s;
            if (!t && this._weekdaysParse[s].test(e))
                return s
        }
    }
    ,
    Lt.weekdaysRegex = function(e) {
        return this._weekdaysParseExact ? (h(this, "_weekdaysRegex") || qe.call(this),
        e ? this._weekdaysStrictRegex : this._weekdaysRegex) : (h(this, "_weekdaysRegex") || (this._weekdaysRegex = Ze),
        this._weekdaysStrictRegex && e ? this._weekdaysStrictRegex : this._weekdaysRegex)
    }
    ,
    Lt.weekdaysShortRegex = function(e) {
        return this._weekdaysParseExact ? (h(this, "_weekdaysRegex") || qe.call(this),
        e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex) : (h(this, "_weekdaysShortRegex") || (this._weekdaysShortRegex = $e),
        this._weekdaysShortStrictRegex && e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex)
    }
    ,
    Lt.weekdaysMinRegex = function(e) {
        return this._weekdaysParseExact ? (h(this, "_weekdaysRegex") || qe.call(this),
        e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex) : (h(this, "_weekdaysMinRegex") || (this._weekdaysMinRegex = Be),
        this._weekdaysMinStrictRegex && e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex)
    }
    ,
    Lt.isPM = function(e) {
        return "p" === (e + "").toLowerCase().charAt(0)
    }
    ,
    Lt.meridiem = function(e, a, t) {
        return 11 < e ? t ? "pm" : "PM" : t ? "am" : "AM"
    }
    ,
    ia("en", {
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function(e) {
            var a = e % 10;
            return e + (1 === g(e % 100 / 10) ? "th" : 1 === a ? "st" : 2 === a ? "nd" : 3 === a ? "rd" : "th")
        }
    }),
    l.lang = t("moment.lang is deprecated. Use moment.locale instead.", ia),
    l.langData = t("moment.langData is deprecated. Use moment.localeData instead.", ma);
    var ft = Math.abs;
    function kt(e, a, t, s) {
        var n = Ua(a, t);
        return e._milliseconds += s * n._milliseconds,
        e._days += s * n._days,
        e._months += s * n._months,
        e._bubble()
    }
    function pt(e) {
        return e < 0 ? Math.floor(e) : Math.ceil(e)
    }
    function Dt(e) {
        return 4800 * e / 146097
    }
    function Tt(e) {
        return 146097 * e / 4800
    }
    function gt(e) {
        return function() {
            return this.as(e)
        }
    }
    var wt = gt("ms")
      , vt = gt("s")
      , St = gt("m")
      , Ht = gt("h")
      , bt = gt("d")
      , jt = gt("w")
      , xt = gt("M")
      , Ot = gt("Q")
      , Pt = gt("y");
    function Wt(e) {
        return function() {
            return this.isValid() ? this._data[e] : NaN
        }
    }
    var At = Wt("milliseconds")
      , Et = Wt("seconds")
      , Ft = Wt("minutes")
      , zt = Wt("hours")
      , Jt = Wt("days")
      , Nt = Wt("months")
      , Rt = Wt("years");
    var Ct = Math.round
      , It = {
        ss: 44,
        s: 45,
        m: 45,
        h: 22,
        d: 26,
        M: 11
    };
    var Ut = Math.abs;
    function Gt(e) {
        return (0 < e) - (e < 0) || +e
    }
    function Vt() {
        if (!this.isValid())
            return this.localeData().invalidDate();
        var e, a, t = Ut(this._milliseconds) / 1e3, s = Ut(this._days), n = Ut(this._months);
        a = T((e = T(t / 60)) / 60),
        t %= 60,
        e %= 60;
        var d = T(n / 12)
          , r = n %= 12
          , _ = s
          , i = a
          , o = e
          , m = t ? t.toFixed(3).replace(/\.?0+$/, "") : ""
          , u = this.asSeconds();
        if (!u)
            return "P0D";
        var l = u < 0 ? "-" : ""
          , M = Gt(this._months) !== Gt(u) ? "-" : ""
          , h = Gt(this._days) !== Gt(u) ? "-" : ""
          , L = Gt(this._milliseconds) !== Gt(u) ? "-" : "";
        return l + "P" + (d ? M + d + "Y" : "") + (r ? M + r + "M" : "") + (_ ? h + _ + "D" : "") + (i || o || m ? "T" : "") + (i ? L + i + "H" : "") + (o ? L + o + "M" : "") + (m ? L + m + "S" : "")
    }
    var Kt = Pa.prototype;
    Kt.isValid = function() {
        return this._isValid
    }
    ,
    Kt.abs = function() {
        var e = this._data;
        return this._milliseconds = ft(this._milliseconds),
        this._days = ft(this._days),
        this._months = ft(this._months),
        e.milliseconds = ft(e.milliseconds),
        e.seconds = ft(e.seconds),
        e.minutes = ft(e.minutes),
        e.hours = ft(e.hours),
        e.months = ft(e.months),
        e.years = ft(e.years),
        this
    }
    ,
    Kt.add = function(e, a) {
        return kt(this, e, a, 1)
    }
    ,
    Kt.subtract = function(e, a) {
        return kt(this, e, a, -1)
    }
    ,
    Kt.as = function(e) {
        if (!this.isValid())
            return NaN;
        var a, t, s = this._milliseconds;
        if ("month" === (e = P(e)) || "quarter" === e || "year" === e)
            switch (a = this._days + s / 864e5,
            t = this._months + Dt(a),
            e) {
            case "month":
                return t;
            case "quarter":
                return t / 3;
            case "year":
                return t / 12
            }
        else
            switch (a = this._days + Math.round(Tt(this._months)),
            e) {
            case "week":
                return a / 7 + s / 6048e5;
            case "day":
                return a + s / 864e5;
            case "hour":
                return 24 * a + s / 36e5;
            case "minute":
                return 1440 * a + s / 6e4;
            case "second":
                return 86400 * a + s / 1e3;
            case "millisecond":
                return Math.floor(864e5 * a) + s;
            default:
                throw new Error("Unknown unit " + e)
            }
    }
    ,
    Kt.asMilliseconds = wt,
    Kt.asSeconds = vt,
    Kt.asMinutes = St,
    Kt.asHours = Ht,
    Kt.asDays = bt,
    Kt.asWeeks = jt,
    Kt.asMonths = xt,
    Kt.asQuarters = Ot,
    Kt.asYears = Pt,
    Kt.valueOf = function() {
        return this.isValid() ? this._milliseconds + 864e5 * this._days + this._months % 12 * 2592e6 + 31536e6 * g(this._months / 12) : NaN
    }
    ,
    Kt._bubble = function() {
        var e, a, t, s, n, d = this._milliseconds, r = this._days, _ = this._months, i = this._data;
        return 0 <= d && 0 <= r && 0 <= _ || d <= 0 && r <= 0 && _ <= 0 || (d += 864e5 * pt(Tt(_) + r),
        _ = r = 0),
        i.milliseconds = d % 1e3,
        e = T(d / 1e3),
        i.seconds = e % 60,
        a = T(e / 60),
        i.minutes = a % 60,
        t = T(a / 60),
        i.hours = t % 24,
        _ += n = T(Dt(r += T(t / 24))),
        r -= pt(Tt(n)),
        s = T(_ / 12),
        _ %= 12,
        i.days = r,
        i.months = _,
        i.years = s,
        this
    }
    ,
    Kt.clone = function() {
        return Ua(this)
    }
    ,
    Kt.get = function(e) {
        return e = P(e),
        this.isValid() ? this[e + "s"]() : NaN
    }
    ,
    Kt.milliseconds = At,
    Kt.seconds = Et,
    Kt.minutes = Ft,
    Kt.hours = zt,
    Kt.days = Jt,
    Kt.weeks = function() {
        return T(this.days() / 7)
    }
    ,
    Kt.months = Nt,
    Kt.years = Rt,
    Kt.humanize = function(e) {
        if (!this.isValid())
            return this.localeData().invalidDate();
        var a, t, s, n, d, r, _, i, o, m, u, l = this.localeData(), M = (t = !e,
        s = l,
        n = Ua(a = this).abs(),
        d = Ct(n.as("s")),
        r = Ct(n.as("m")),
        _ = Ct(n.as("h")),
        i = Ct(n.as("d")),
        o = Ct(n.as("M")),
        m = Ct(n.as("y")),
        (u = d <= It.ss && ["s", d] || d < It.s && ["ss", d] || r <= 1 && ["m"] || r < It.m && ["mm", r] || _ <= 1 && ["h"] || _ < It.h && ["hh", _] || i <= 1 && ["d"] || i < It.d && ["dd", i] || o <= 1 && ["M"] || o < It.M && ["MM", o] || m <= 1 && ["y"] || ["yy", m])[2] = t,
        u[3] = 0 < +a,
        u[4] = s,
        function(e, a, t, s, n) {
            return n.relativeTime(a || 1, !!t, e, s)
        }
        .apply(null, u));
        return e && (M = l.pastFuture(+this, M)),
        l.postformat(M)
    }
    ,
    Kt.toISOString = Vt,
    Kt.toString = Vt,
    Kt.toJSON = Vt,
    Kt.locale = Qa,
    Kt.localeData = et,
    Kt.toIsoString = t("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", Vt),
    Kt.lang = Xa,
    C("X", 0, 0, "unix"),
    C("x", 0, 0, "valueOf"),
    ie("x", se),
    ie("X", /[+-]?\d+(\.\d{1,3})?/),
    le("X", function(e, a, t) {
        t._d = new Date(1e3 * parseFloat(e, 10))
    }),
    le("x", function(e, a, t) {
        t._d = new Date(g(e))
    }),
    l.version = "2.24.0",
    e = Ha,
    l.fn = Mt,
    l.min = function() {
        return xa("isBefore", [].slice.call(arguments, 0))
    }
    ,
    l.max = function() {
        return xa("isAfter", [].slice.call(arguments, 0))
    }
    ,
    l.now = function() {
        return Date.now ? Date.now() : +new Date
    }
    ,
    l.utc = c,
    l.unix = function(e) {
        return Ha(1e3 * e)
    }
    ,
    l.months = function(e, a) {
        return Yt(e, a, "months")
    }
    ,
    l.isDate = u,
    l.locale = ia,
    l.invalid = f,
    l.duration = Ua,
    l.isMoment = D,
    l.weekdays = function(e, a, t) {
        return yt(e, a, t, "weekdays")
    }
    ,
    l.parseZone = function() {
        return Ha.apply(null, arguments).parseZone()
    }
    ,
    l.localeData = ma,
    l.isDuration = Wa,
    l.monthsShort = function(e, a) {
        return Yt(e, a, "monthsShort")
    }
    ,
    l.weekdaysMin = function(e, a, t) {
        return yt(e, a, t, "weekdaysMin")
    }
    ,
    l.defineLocale = oa,
    l.updateLocale = function(e, a) {
        if (null != a) {
            var t, s, n = sa;
            null != (s = _a(e)) && (n = s._config),
            (t = new j(a = b(n, a))).parentLocale = na[e],
            na[e] = t,
            ia(e)
        } else
            null != na[e] && (null != na[e].parentLocale ? na[e] = na[e].parentLocale : null != na[e] && delete na[e]);
        return na[e]
    }
    ,
    l.locales = function() {
        return s(na)
    }
    ,
    l.weekdaysShort = function(e, a, t) {
        return yt(e, a, t, "weekdaysShort")
    }
    ,
    l.normalizeUnits = P,
    l.relativeTimeRounding = function(e) {
        return void 0 === e ? Ct : "function" == typeof e && (Ct = e,
        !0)
    }
    ,
    l.relativeTimeThreshold = function(e, a) {
        return void 0 !== It[e] && (void 0 === a ? It[e] : (It[e] = a,
        "s" === e && (It.ss = a - 1),
        !0))
    }
    ,
    l.calendarFormat = function(e, a) {
        var t = e.diff(a, "days", !0);
        return t < -6 ? "sameElse" : t < -1 ? "lastWeek" : t < 0 ? "lastDay" : t < 1 ? "sameDay" : t < 2 ? "nextDay" : t < 7 ? "nextWeek" : "sameElse"
    }
    ,
    l.prototype = Mt,
    l.HTML5_FMT = {
        DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
        DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
        DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
        DATE: "YYYY-MM-DD",
        TIME: "HH:mm",
        TIME_SECONDS: "HH:mm:ss",
        TIME_MS: "HH:mm:ss.SSS",
        WEEK: "GGGG-[W]WW",
        MONTH: "YYYY-MM"
    },
    l.defineLocale("af", {
        months: "Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember".split("_"),
        monthsShort: "Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des".split("_"),
        weekdays: "Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag".split("_"),
        weekdaysShort: "Son_Maa_Din_Woe_Don_Vry_Sat".split("_"),
        weekdaysMin: "So_Ma_Di_Wo_Do_Vr_Sa".split("_"),
        meridiemParse: /vm|nm/i,
        isPM: function(e) {
            return /^nm$/i.test(e)
        },
        meridiem: function(e, a, t) {
            return e < 12 ? t ? "vm" : "VM" : t ? "nm" : "NM"
        },
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[Vandag om] LT",
            nextDay: "[M\xf4re om] LT",
            nextWeek: "dddd [om] LT",
            lastDay: "[Gister om] LT",
            lastWeek: "[Laas] dddd [om] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "oor %s",
            past: "%s gelede",
            s: "'n paar sekondes",
            ss: "%d sekondes",
            m: "'n minuut",
            mm: "%d minute",
            h: "'n uur",
            hh: "%d ure",
            d: "'n dag",
            dd: "%d dae",
            M: "'n maand",
            MM: "%d maande",
            y: "'n jaar",
            yy: "%d jaar"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal: function(e) {
            return e + (1 === e || 8 === e || 20 <= e ? "ste" : "de")
        },
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("ar-dz", {
        months: "\u062c\u0627\u0646\u0641\u064a_\u0641\u064a\u0641\u0631\u064a_\u0645\u0627\u0631\u0633_\u0623\u0641\u0631\u064a\u0644_\u0645\u0627\u064a_\u062c\u0648\u0627\u0646_\u062c\u0648\u064a\u0644\u064a\u0629_\u0623\u0648\u062a_\u0633\u0628\u062a\u0645\u0628\u0631_\u0623\u0643\u062a\u0648\u0628\u0631_\u0646\u0648\u0641\u0645\u0628\u0631_\u062f\u064a\u0633\u0645\u0628\u0631".split("_"),
        monthsShort: "\u062c\u0627\u0646\u0641\u064a_\u0641\u064a\u0641\u0631\u064a_\u0645\u0627\u0631\u0633_\u0623\u0641\u0631\u064a\u0644_\u0645\u0627\u064a_\u062c\u0648\u0627\u0646_\u062c\u0648\u064a\u0644\u064a\u0629_\u0623\u0648\u062a_\u0633\u0628\u062a\u0645\u0628\u0631_\u0623\u0643\u062a\u0648\u0628\u0631_\u0646\u0648\u0641\u0645\u0628\u0631_\u062f\u064a\u0633\u0645\u0628\u0631".split("_"),
        weekdays: "\u0627\u0644\u0623\u062d\u062f_\u0627\u0644\u0625\u062b\u0646\u064a\u0646_\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621_\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621_\u0627\u0644\u062e\u0645\u064a\u0633_\u0627\u0644\u062c\u0645\u0639\u0629_\u0627\u0644\u0633\u0628\u062a".split("_"),
        weekdaysShort: "\u0627\u062d\u062f_\u0627\u062b\u0646\u064a\u0646_\u062b\u0644\u0627\u062b\u0627\u0621_\u0627\u0631\u0628\u0639\u0627\u0621_\u062e\u0645\u064a\u0633_\u062c\u0645\u0639\u0629_\u0633\u0628\u062a".split("_"),
        weekdaysMin: "\u0623\u062d_\u0625\u062b_\u062b\u0644\u0627_\u0623\u0631_\u062e\u0645_\u062c\u0645_\u0633\u0628".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[\u0627\u0644\u064a\u0648\u0645 \u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            nextDay: "[\u063a\u062f\u0627 \u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            nextWeek: "dddd [\u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            lastDay: "[\u0623\u0645\u0633 \u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            lastWeek: "dddd [\u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "\u0641\u064a %s",
            past: "\u0645\u0646\u0630 %s",
            s: "\u062b\u0648\u0627\u0646",
            ss: "%d \u062b\u0627\u0646\u064a\u0629",
            m: "\u062f\u0642\u064a\u0642\u0629",
            mm: "%d \u062f\u0642\u0627\u0626\u0642",
            h: "\u0633\u0627\u0639\u0629",
            hh: "%d \u0633\u0627\u0639\u0627\u062a",
            d: "\u064a\u0648\u0645",
            dd: "%d \u0623\u064a\u0627\u0645",
            M: "\u0634\u0647\u0631",
            MM: "%d \u0623\u0634\u0647\u0631",
            y: "\u0633\u0646\u0629",
            yy: "%d \u0633\u0646\u0648\u0627\u062a"
        },
        week: {
            dow: 0,
            doy: 4
        }
    }),
    l.defineLocale("ar-kw", {
        months: "\u064a\u0646\u0627\u064a\u0631_\u0641\u0628\u0631\u0627\u064a\u0631_\u0645\u0627\u0631\u0633_\u0623\u0628\u0631\u064a\u0644_\u0645\u0627\u064a_\u064a\u0648\u0646\u064a\u0648_\u064a\u0648\u0644\u064a\u0648\u0632_\u063a\u0634\u062a_\u0634\u062a\u0646\u0628\u0631_\u0623\u0643\u062a\u0648\u0628\u0631_\u0646\u0648\u0646\u0628\u0631_\u062f\u062c\u0646\u0628\u0631".split("_"),
        monthsShort: "\u064a\u0646\u0627\u064a\u0631_\u0641\u0628\u0631\u0627\u064a\u0631_\u0645\u0627\u0631\u0633_\u0623\u0628\u0631\u064a\u0644_\u0645\u0627\u064a_\u064a\u0648\u0646\u064a\u0648_\u064a\u0648\u0644\u064a\u0648\u0632_\u063a\u0634\u062a_\u0634\u062a\u0646\u0628\u0631_\u0623\u0643\u062a\u0648\u0628\u0631_\u0646\u0648\u0646\u0628\u0631_\u062f\u062c\u0646\u0628\u0631".split("_"),
        weekdays: "\u0627\u0644\u0623\u062d\u062f_\u0627\u0644\u0625\u062a\u0646\u064a\u0646_\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621_\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621_\u0627\u0644\u062e\u0645\u064a\u0633_\u0627\u0644\u062c\u0645\u0639\u0629_\u0627\u0644\u0633\u0628\u062a".split("_"),
        weekdaysShort: "\u0627\u062d\u062f_\u0627\u062a\u0646\u064a\u0646_\u062b\u0644\u0627\u062b\u0627\u0621_\u0627\u0631\u0628\u0639\u0627\u0621_\u062e\u0645\u064a\u0633_\u062c\u0645\u0639\u0629_\u0633\u0628\u062a".split("_"),
        weekdaysMin: "\u062d_\u0646_\u062b_\u0631_\u062e_\u062c_\u0633".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[\u0627\u0644\u064a\u0648\u0645 \u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            nextDay: "[\u063a\u062f\u0627 \u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            nextWeek: "dddd [\u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            lastDay: "[\u0623\u0645\u0633 \u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            lastWeek: "dddd [\u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "\u0641\u064a %s",
            past: "\u0645\u0646\u0630 %s",
            s: "\u062b\u0648\u0627\u0646",
            ss: "%d \u062b\u0627\u0646\u064a\u0629",
            m: "\u062f\u0642\u064a\u0642\u0629",
            mm: "%d \u062f\u0642\u0627\u0626\u0642",
            h: "\u0633\u0627\u0639\u0629",
            hh: "%d \u0633\u0627\u0639\u0627\u062a",
            d: "\u064a\u0648\u0645",
            dd: "%d \u0623\u064a\u0627\u0645",
            M: "\u0634\u0647\u0631",
            MM: "%d \u0623\u0634\u0647\u0631",
            y: "\u0633\u0646\u0629",
            yy: "%d \u0633\u0646\u0648\u0627\u062a"
        },
        week: {
            dow: 0,
            doy: 12
        }
    });
    var Zt = {
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        0: "0"
    }
      , $t = function(e) {
        return 0 === e ? 0 : 1 === e ? 1 : 2 === e ? 2 : 3 <= e % 100 && e % 100 <= 10 ? 3 : 11 <= e % 100 ? 4 : 5
    }
      , Bt = {
        s: ["\u0623\u0642\u0644 \u0645\u0646 \u062b\u0627\u0646\u064a\u0629", "\u062b\u0627\u0646\u064a\u0629 \u0648\u0627\u062d\u062f\u0629", ["\u062b\u0627\u0646\u064a\u062a\u0627\u0646", "\u062b\u0627\u0646\u064a\u062a\u064a\u0646"], "%d \u062b\u0648\u0627\u0646", "%d \u062b\u0627\u0646\u064a\u0629", "%d \u062b\u0627\u0646\u064a\u0629"],
        m: ["\u0623\u0642\u0644 \u0645\u0646 \u062f\u0642\u064a\u0642\u0629", "\u062f\u0642\u064a\u0642\u0629 \u0648\u0627\u062d\u062f\u0629", ["\u062f\u0642\u064a\u0642\u062a\u0627\u0646", "\u062f\u0642\u064a\u0642\u062a\u064a\u0646"], "%d \u062f\u0642\u0627\u0626\u0642", "%d \u062f\u0642\u064a\u0642\u0629", "%d \u062f\u0642\u064a\u0642\u0629"],
        h: ["\u0623\u0642\u0644 \u0645\u0646 \u0633\u0627\u0639\u0629", "\u0633\u0627\u0639\u0629 \u0648\u0627\u062d\u062f\u0629", ["\u0633\u0627\u0639\u062a\u0627\u0646", "\u0633\u0627\u0639\u062a\u064a\u0646"], "%d \u0633\u0627\u0639\u0627\u062a", "%d \u0633\u0627\u0639\u0629", "%d \u0633\u0627\u0639\u0629"],
        d: ["\u0623\u0642\u0644 \u0645\u0646 \u064a\u0648\u0645", "\u064a\u0648\u0645 \u0648\u0627\u062d\u062f", ["\u064a\u0648\u0645\u0627\u0646", "\u064a\u0648\u0645\u064a\u0646"], "%d \u0623\u064a\u0627\u0645", "%d \u064a\u0648\u0645\u064b\u0627", "%d \u064a\u0648\u0645"],
        M: ["\u0623\u0642\u0644 \u0645\u0646 \u0634\u0647\u0631", "\u0634\u0647\u0631 \u0648\u0627\u062d\u062f", ["\u0634\u0647\u0631\u0627\u0646", "\u0634\u0647\u0631\u064a\u0646"], "%d \u0623\u0634\u0647\u0631", "%d \u0634\u0647\u0631\u0627", "%d \u0634\u0647\u0631"],
        y: ["\u0623\u0642\u0644 \u0645\u0646 \u0639\u0627\u0645", "\u0639\u0627\u0645 \u0648\u0627\u062d\u062f", ["\u0639\u0627\u0645\u0627\u0646", "\u0639\u0627\u0645\u064a\u0646"], "%d \u0623\u0639\u0648\u0627\u0645", "%d \u0639\u0627\u0645\u064b\u0627", "%d \u0639\u0627\u0645"]
    }
      , qt = function(r) {
        return function(e, a, t, s) {
            var n = $t(e)
              , d = Bt[r][$t(e)];
            return 2 === n && (d = d[a ? 0 : 1]),
            d.replace(/%d/i, e)
        }
    }
      , Qt = ["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"];
    l.defineLocale("ar-ly", {
        months: Qt,
        monthsShort: Qt,
        weekdays: "\u0627\u0644\u0623\u062d\u062f_\u0627\u0644\u0625\u062b\u0646\u064a\u0646_\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621_\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621_\u0627\u0644\u062e\u0645\u064a\u0633_\u0627\u0644\u062c\u0645\u0639\u0629_\u0627\u0644\u0633\u0628\u062a".split("_"),
        weekdaysShort: "\u0623\u062d\u062f_\u0625\u062b\u0646\u064a\u0646_\u062b\u0644\u0627\u062b\u0627\u0621_\u0623\u0631\u0628\u0639\u0627\u0621_\u062e\u0645\u064a\u0633_\u062c\u0645\u0639\u0629_\u0633\u0628\u062a".split("_"),
        weekdaysMin: "\u062d_\u0646_\u062b_\u0631_\u062e_\u062c_\u0633".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "D/\u200fM/\u200fYYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
        },
        meridiemParse: /\u0635|\u0645/,
        isPM: function(e) {
            return "\u0645" === e
        },
        meridiem: function(e, a, t) {
            return e < 12 ? "\u0635" : "\u0645"
        },
        calendar: {
            sameDay: "[\u0627\u0644\u064a\u0648\u0645 \u0639\u0646\u062f \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            nextDay: "[\u063a\u062f\u064b\u0627 \u0639\u0646\u062f \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            nextWeek: "dddd [\u0639\u0646\u062f \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            lastDay: "[\u0623\u0645\u0633 \u0639\u0646\u062f \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            lastWeek: "dddd [\u0639\u0646\u062f \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "\u0628\u0639\u062f %s",
            past: "\u0645\u0646\u0630 %s",
            s: qt("s"),
            ss: qt("s"),
            m: qt("m"),
            mm: qt("m"),
            h: qt("h"),
            hh: qt("h"),
            d: qt("d"),
            dd: qt("d"),
            M: qt("M"),
            MM: qt("M"),
            y: qt("y"),
            yy: qt("y")
        },
        preparse: function(e) {
            return e.replace(/\u060c/g, ",")
        },
        postformat: function(e) {
            return e.replace(/\d/g, function(e) {
                return Zt[e]
            }).replace(/,/g, "\u060c")
        },
        week: {
            dow: 6,
            doy: 12
        }
    }),
    l.defineLocale("ar-ma", {
        months: "\u064a\u0646\u0627\u064a\u0631_\u0641\u0628\u0631\u0627\u064a\u0631_\u0645\u0627\u0631\u0633_\u0623\u0628\u0631\u064a\u0644_\u0645\u0627\u064a_\u064a\u0648\u0646\u064a\u0648_\u064a\u0648\u0644\u064a\u0648\u0632_\u063a\u0634\u062a_\u0634\u062a\u0646\u0628\u0631_\u0623\u0643\u062a\u0648\u0628\u0631_\u0646\u0648\u0646\u0628\u0631_\u062f\u062c\u0646\u0628\u0631".split("_"),
        monthsShort: "\u064a\u0646\u0627\u064a\u0631_\u0641\u0628\u0631\u0627\u064a\u0631_\u0645\u0627\u0631\u0633_\u0623\u0628\u0631\u064a\u0644_\u0645\u0627\u064a_\u064a\u0648\u0646\u064a\u0648_\u064a\u0648\u0644\u064a\u0648\u0632_\u063a\u0634\u062a_\u0634\u062a\u0646\u0628\u0631_\u0623\u0643\u062a\u0648\u0628\u0631_\u0646\u0648\u0646\u0628\u0631_\u062f\u062c\u0646\u0628\u0631".split("_"),
        weekdays: "\u0627\u0644\u0623\u062d\u062f_\u0627\u0644\u0625\u062a\u0646\u064a\u0646_\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621_\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621_\u0627\u0644\u062e\u0645\u064a\u0633_\u0627\u0644\u062c\u0645\u0639\u0629_\u0627\u0644\u0633\u0628\u062a".split("_"),
        weekdaysShort: "\u0627\u062d\u062f_\u0627\u062a\u0646\u064a\u0646_\u062b\u0644\u0627\u062b\u0627\u0621_\u0627\u0631\u0628\u0639\u0627\u0621_\u062e\u0645\u064a\u0633_\u062c\u0645\u0639\u0629_\u0633\u0628\u062a".split("_"),
        weekdaysMin: "\u062d_\u0646_\u062b_\u0631_\u062e_\u062c_\u0633".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[\u0627\u0644\u064a\u0648\u0645 \u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            nextDay: "[\u063a\u062f\u0627 \u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            nextWeek: "dddd [\u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            lastDay: "[\u0623\u0645\u0633 \u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            lastWeek: "dddd [\u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "\u0641\u064a %s",
            past: "\u0645\u0646\u0630 %s",
            s: "\u062b\u0648\u0627\u0646",
            ss: "%d \u062b\u0627\u0646\u064a\u0629",
            m: "\u062f\u0642\u064a\u0642\u0629",
            mm: "%d \u062f\u0642\u0627\u0626\u0642",
            h: "\u0633\u0627\u0639\u0629",
            hh: "%d \u0633\u0627\u0639\u0627\u062a",
            d: "\u064a\u0648\u0645",
            dd: "%d \u0623\u064a\u0627\u0645",
            M: "\u0634\u0647\u0631",
            MM: "%d \u0623\u0634\u0647\u0631",
            y: "\u0633\u0646\u0629",
            yy: "%d \u0633\u0646\u0648\u0627\u062a"
        },
        week: {
            dow: 6,
            doy: 12
        }
    });
    var Xt = {
        1: "\u0661",
        2: "\u0662",
        3: "\u0663",
        4: "\u0664",
        5: "\u0665",
        6: "\u0666",
        7: "\u0667",
        8: "\u0668",
        9: "\u0669",
        0: "\u0660"
    }
      , es = {
        "\u0661": "1",
        "\u0662": "2",
        "\u0663": "3",
        "\u0664": "4",
        "\u0665": "5",
        "\u0666": "6",
        "\u0667": "7",
        "\u0668": "8",
        "\u0669": "9",
        "\u0660": "0"
    };
    l.defineLocale("ar-sa", {
        months: "\u064a\u0646\u0627\u064a\u0631_\u0641\u0628\u0631\u0627\u064a\u0631_\u0645\u0627\u0631\u0633_\u0623\u0628\u0631\u064a\u0644_\u0645\u0627\u064a\u0648_\u064a\u0648\u0646\u064a\u0648_\u064a\u0648\u0644\u064a\u0648_\u0623\u063a\u0633\u0637\u0633_\u0633\u0628\u062a\u0645\u0628\u0631_\u0623\u0643\u062a\u0648\u0628\u0631_\u0646\u0648\u0641\u0645\u0628\u0631_\u062f\u064a\u0633\u0645\u0628\u0631".split("_"),
        monthsShort: "\u064a\u0646\u0627\u064a\u0631_\u0641\u0628\u0631\u0627\u064a\u0631_\u0645\u0627\u0631\u0633_\u0623\u0628\u0631\u064a\u0644_\u0645\u0627\u064a\u0648_\u064a\u0648\u0646\u064a\u0648_\u064a\u0648\u0644\u064a\u0648_\u0623\u063a\u0633\u0637\u0633_\u0633\u0628\u062a\u0645\u0628\u0631_\u0623\u0643\u062a\u0648\u0628\u0631_\u0646\u0648\u0641\u0645\u0628\u0631_\u062f\u064a\u0633\u0645\u0628\u0631".split("_"),
        weekdays: "\u0627\u0644\u0623\u062d\u062f_\u0627\u0644\u0625\u062b\u0646\u064a\u0646_\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621_\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621_\u0627\u0644\u062e\u0645\u064a\u0633_\u0627\u0644\u062c\u0645\u0639\u0629_\u0627\u0644\u0633\u0628\u062a".split("_"),
        weekdaysShort: "\u0623\u062d\u062f_\u0625\u062b\u0646\u064a\u0646_\u062b\u0644\u0627\u062b\u0627\u0621_\u0623\u0631\u0628\u0639\u0627\u0621_\u062e\u0645\u064a\u0633_\u062c\u0645\u0639\u0629_\u0633\u0628\u062a".split("_"),
        weekdaysMin: "\u062d_\u0646_\u062b_\u0631_\u062e_\u062c_\u0633".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
        },
        meridiemParse: /\u0635|\u0645/,
        isPM: function(e) {
            return "\u0645" === e
        },
        meridiem: function(e, a, t) {
            return e < 12 ? "\u0635" : "\u0645"
        },
        calendar: {
            sameDay: "[\u0627\u0644\u064a\u0648\u0645 \u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            nextDay: "[\u063a\u062f\u0627 \u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            nextWeek: "dddd [\u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            lastDay: "[\u0623\u0645\u0633 \u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            lastWeek: "dddd [\u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "\u0641\u064a %s",
            past: "\u0645\u0646\u0630 %s",
            s: "\u062b\u0648\u0627\u0646",
            ss: "%d \u062b\u0627\u0646\u064a\u0629",
            m: "\u062f\u0642\u064a\u0642\u0629",
            mm: "%d \u062f\u0642\u0627\u0626\u0642",
            h: "\u0633\u0627\u0639\u0629",
            hh: "%d \u0633\u0627\u0639\u0627\u062a",
            d: "\u064a\u0648\u0645",
            dd: "%d \u0623\u064a\u0627\u0645",
            M: "\u0634\u0647\u0631",
            MM: "%d \u0623\u0634\u0647\u0631",
            y: "\u0633\u0646\u0629",
            yy: "%d \u0633\u0646\u0648\u0627\u062a"
        },
        preparse: function(e) {
            return e.replace(/[\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669\u0660]/g, function(e) {
                return es[e]
            }).replace(/\u060c/g, ",")
        },
        postformat: function(e) {
            return e.replace(/\d/g, function(e) {
                return Xt[e]
            }).replace(/,/g, "\u060c")
        },
        week: {
            dow: 0,
            doy: 6
        }
    }),
    l.defineLocale("ar-tn", {
        months: "\u062c\u0627\u0646\u0641\u064a_\u0641\u064a\u0641\u0631\u064a_\u0645\u0627\u0631\u0633_\u0623\u0641\u0631\u064a\u0644_\u0645\u0627\u064a_\u062c\u0648\u0627\u0646_\u062c\u0648\u064a\u0644\u064a\u0629_\u0623\u0648\u062a_\u0633\u0628\u062a\u0645\u0628\u0631_\u0623\u0643\u062a\u0648\u0628\u0631_\u0646\u0648\u0641\u0645\u0628\u0631_\u062f\u064a\u0633\u0645\u0628\u0631".split("_"),
        monthsShort: "\u062c\u0627\u0646\u0641\u064a_\u0641\u064a\u0641\u0631\u064a_\u0645\u0627\u0631\u0633_\u0623\u0641\u0631\u064a\u0644_\u0645\u0627\u064a_\u062c\u0648\u0627\u0646_\u062c\u0648\u064a\u0644\u064a\u0629_\u0623\u0648\u062a_\u0633\u0628\u062a\u0645\u0628\u0631_\u0623\u0643\u062a\u0648\u0628\u0631_\u0646\u0648\u0641\u0645\u0628\u0631_\u062f\u064a\u0633\u0645\u0628\u0631".split("_"),
        weekdays: "\u0627\u0644\u0623\u062d\u062f_\u0627\u0644\u0625\u062b\u0646\u064a\u0646_\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621_\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621_\u0627\u0644\u062e\u0645\u064a\u0633_\u0627\u0644\u062c\u0645\u0639\u0629_\u0627\u0644\u0633\u0628\u062a".split("_"),
        weekdaysShort: "\u0623\u062d\u062f_\u0625\u062b\u0646\u064a\u0646_\u062b\u0644\u0627\u062b\u0627\u0621_\u0623\u0631\u0628\u0639\u0627\u0621_\u062e\u0645\u064a\u0633_\u062c\u0645\u0639\u0629_\u0633\u0628\u062a".split("_"),
        weekdaysMin: "\u062d_\u0646_\u062b_\u0631_\u062e_\u062c_\u0633".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[\u0627\u0644\u064a\u0648\u0645 \u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            nextDay: "[\u063a\u062f\u0627 \u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            nextWeek: "dddd [\u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            lastDay: "[\u0623\u0645\u0633 \u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            lastWeek: "dddd [\u0639\u0644\u0649 \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "\u0641\u064a %s",
            past: "\u0645\u0646\u0630 %s",
            s: "\u062b\u0648\u0627\u0646",
            ss: "%d \u062b\u0627\u0646\u064a\u0629",
            m: "\u062f\u0642\u064a\u0642\u0629",
            mm: "%d \u062f\u0642\u0627\u0626\u0642",
            h: "\u0633\u0627\u0639\u0629",
            hh: "%d \u0633\u0627\u0639\u0627\u062a",
            d: "\u064a\u0648\u0645",
            dd: "%d \u0623\u064a\u0627\u0645",
            M: "\u0634\u0647\u0631",
            MM: "%d \u0623\u0634\u0647\u0631",
            y: "\u0633\u0646\u0629",
            yy: "%d \u0633\u0646\u0648\u0627\u062a"
        },
        week: {
            dow: 1,
            doy: 4
        }
    });
    var as = {
        1: "\u0661",
        2: "\u0662",
        3: "\u0663",
        4: "\u0664",
        5: "\u0665",
        6: "\u0666",
        7: "\u0667",
        8: "\u0668",
        9: "\u0669",
        0: "\u0660"
    }
      , ts = {
        "\u0661": "1",
        "\u0662": "2",
        "\u0663": "3",
        "\u0664": "4",
        "\u0665": "5",
        "\u0666": "6",
        "\u0667": "7",
        "\u0668": "8",
        "\u0669": "9",
        "\u0660": "0"
    }
      , ss = function(e) {
        return 0 === e ? 0 : 1 === e ? 1 : 2 === e ? 2 : 3 <= e % 100 && e % 100 <= 10 ? 3 : 11 <= e % 100 ? 4 : 5
    }
      , ns = {
        s: ["\u0623\u0642\u0644 \u0645\u0646 \u062b\u0627\u0646\u064a\u0629", "\u062b\u0627\u0646\u064a\u0629 \u0648\u0627\u062d\u062f\u0629", ["\u062b\u0627\u0646\u064a\u062a\u0627\u0646", "\u062b\u0627\u0646\u064a\u062a\u064a\u0646"], "%d \u062b\u0648\u0627\u0646", "%d \u062b\u0627\u0646\u064a\u0629", "%d \u062b\u0627\u0646\u064a\u0629"],
        m: ["\u0623\u0642\u0644 \u0645\u0646 \u062f\u0642\u064a\u0642\u0629", "\u062f\u0642\u064a\u0642\u0629 \u0648\u0627\u062d\u062f\u0629", ["\u062f\u0642\u064a\u0642\u062a\u0627\u0646", "\u062f\u0642\u064a\u0642\u062a\u064a\u0646"], "%d \u062f\u0642\u0627\u0626\u0642", "%d \u062f\u0642\u064a\u0642\u0629", "%d \u062f\u0642\u064a\u0642\u0629"],
        h: ["\u0623\u0642\u0644 \u0645\u0646 \u0633\u0627\u0639\u0629", "\u0633\u0627\u0639\u0629 \u0648\u0627\u062d\u062f\u0629", ["\u0633\u0627\u0639\u062a\u0627\u0646", "\u0633\u0627\u0639\u062a\u064a\u0646"], "%d \u0633\u0627\u0639\u0627\u062a", "%d \u0633\u0627\u0639\u0629", "%d \u0633\u0627\u0639\u0629"],
        d: ["\u0623\u0642\u0644 \u0645\u0646 \u064a\u0648\u0645", "\u064a\u0648\u0645 \u0648\u0627\u062d\u062f", ["\u064a\u0648\u0645\u0627\u0646", "\u064a\u0648\u0645\u064a\u0646"], "%d \u0623\u064a\u0627\u0645", "%d \u064a\u0648\u0645\u064b\u0627", "%d \u064a\u0648\u0645"],
        M: ["\u0623\u0642\u0644 \u0645\u0646 \u0634\u0647\u0631", "\u0634\u0647\u0631 \u0648\u0627\u062d\u062f", ["\u0634\u0647\u0631\u0627\u0646", "\u0634\u0647\u0631\u064a\u0646"], "%d \u0623\u0634\u0647\u0631", "%d \u0634\u0647\u0631\u0627", "%d \u0634\u0647\u0631"],
        y: ["\u0623\u0642\u0644 \u0645\u0646 \u0639\u0627\u0645", "\u0639\u0627\u0645 \u0648\u0627\u062d\u062f", ["\u0639\u0627\u0645\u0627\u0646", "\u0639\u0627\u0645\u064a\u0646"], "%d \u0623\u0639\u0648\u0627\u0645", "%d \u0639\u0627\u0645\u064b\u0627", "%d \u0639\u0627\u0645"]
    }
      , ds = function(r) {
        return function(e, a, t, s) {
            var n = ss(e)
              , d = ns[r][ss(e)];
            return 2 === n && (d = d[a ? 0 : 1]),
            d.replace(/%d/i, e)
        }
    }
      , rs = ["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"];
    l.defineLocale("ar", {
        months: rs,
        monthsShort: rs,
        weekdays: "\u0627\u0644\u0623\u062d\u062f_\u0627\u0644\u0625\u062b\u0646\u064a\u0646_\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621_\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621_\u0627\u0644\u062e\u0645\u064a\u0633_\u0627\u0644\u062c\u0645\u0639\u0629_\u0627\u0644\u0633\u0628\u062a".split("_"),
        weekdaysShort: "\u0623\u062d\u062f_\u0625\u062b\u0646\u064a\u0646_\u062b\u0644\u0627\u062b\u0627\u0621_\u0623\u0631\u0628\u0639\u0627\u0621_\u062e\u0645\u064a\u0633_\u062c\u0645\u0639\u0629_\u0633\u0628\u062a".split("_"),
        weekdaysMin: "\u062d_\u0646_\u062b_\u0631_\u062e_\u062c_\u0633".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "D/\u200fM/\u200fYYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
        },
        meridiemParse: /\u0635|\u0645/,
        isPM: function(e) {
            return "\u0645" === e
        },
        meridiem: function(e, a, t) {
            return e < 12 ? "\u0635" : "\u0645"
        },
        calendar: {
            sameDay: "[\u0627\u0644\u064a\u0648\u0645 \u0639\u0646\u062f \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            nextDay: "[\u063a\u062f\u064b\u0627 \u0639\u0646\u062f \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            nextWeek: "dddd [\u0639\u0646\u062f \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            lastDay: "[\u0623\u0645\u0633 \u0639\u0646\u062f \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            lastWeek: "dddd [\u0639\u0646\u062f \u0627\u0644\u0633\u0627\u0639\u0629] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "\u0628\u0639\u062f %s",
            past: "\u0645\u0646\u0630 %s",
            s: ds("s"),
            ss: ds("s"),
            m: ds("m"),
            mm: ds("m"),
            h: ds("h"),
            hh: ds("h"),
            d: ds("d"),
            dd: ds("d"),
            M: ds("M"),
            MM: ds("M"),
            y: ds("y"),
            yy: ds("y")
        },
        preparse: function(e) {
            return e.replace(/[\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669\u0660]/g, function(e) {
                return ts[e]
            }).replace(/\u060c/g, ",")
        },
        postformat: function(e) {
            return e.replace(/\d/g, function(e) {
                return as[e]
            }).replace(/,/g, "\u060c")
        },
        week: {
            dow: 6,
            doy: 12
        }
    });
    var _s = {
        1: "-inci",
        5: "-inci",
        8: "-inci",
        70: "-inci",
        80: "-inci",
        2: "-nci",
        7: "-nci",
        20: "-nci",
        50: "-nci",
        3: "-\xfcnc\xfc",
        4: "-\xfcnc\xfc",
        100: "-\xfcnc\xfc",
        6: "-nc\u0131",
        9: "-uncu",
        10: "-uncu",
        30: "-uncu",
        60: "-\u0131nc\u0131",
        90: "-\u0131nc\u0131"
    };
    function is(e, a, t) {
        var s, n;
        return "m" === t ? a ? "\u0445\u0432\u0456\u043b\u0456\u043d\u0430" : "\u0445\u0432\u0456\u043b\u0456\u043d\u0443" : "h" === t ? a ? "\u0433\u0430\u0434\u0437\u0456\u043d\u0430" : "\u0433\u0430\u0434\u0437\u0456\u043d\u0443" : e + " " + (s = +e,
        n = {
            ss: a ? "\u0441\u0435\u043a\u0443\u043d\u0434\u0430_\u0441\u0435\u043a\u0443\u043d\u0434\u044b_\u0441\u0435\u043a\u0443\u043d\u0434" : "\u0441\u0435\u043a\u0443\u043d\u0434\u0443_\u0441\u0435\u043a\u0443\u043d\u0434\u044b_\u0441\u0435\u043a\u0443\u043d\u0434",
            mm: a ? "\u0445\u0432\u0456\u043b\u0456\u043d\u0430_\u0445\u0432\u0456\u043b\u0456\u043d\u044b_\u0445\u0432\u0456\u043b\u0456\u043d" : "\u0445\u0432\u0456\u043b\u0456\u043d\u0443_\u0445\u0432\u0456\u043b\u0456\u043d\u044b_\u0445\u0432\u0456\u043b\u0456\u043d",
            hh: a ? "\u0433\u0430\u0434\u0437\u0456\u043d\u0430_\u0433\u0430\u0434\u0437\u0456\u043d\u044b_\u0433\u0430\u0434\u0437\u0456\u043d" : "\u0433\u0430\u0434\u0437\u0456\u043d\u0443_\u0433\u0430\u0434\u0437\u0456\u043d\u044b_\u0433\u0430\u0434\u0437\u0456\u043d",
            dd: "\u0434\u0437\u0435\u043d\u044c_\u0434\u043d\u0456_\u0434\u0437\u0451\u043d",
            MM: "\u043c\u0435\u0441\u044f\u0446_\u043c\u0435\u0441\u044f\u0446\u044b_\u043c\u0435\u0441\u044f\u0446\u0430\u045e",
            yy: "\u0433\u043e\u0434_\u0433\u0430\u0434\u044b_\u0433\u0430\u0434\u043e\u045e"
        }[t].split("_"),
        s % 10 == 1 && s % 100 != 11 ? n[0] : 2 <= s % 10 && s % 10 <= 4 && (s % 100 < 10 || 20 <= s % 100) ? n[1] : n[2])
    }
    l.defineLocale("az", {
        months: "yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr".split("_"),
        monthsShort: "yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek".split("_"),
        weekdays: "Bazar_Bazar ert\u0259si_\xc7\u0259r\u015f\u0259nb\u0259 ax\u015fam\u0131_\xc7\u0259r\u015f\u0259nb\u0259_C\xfcm\u0259 ax\u015fam\u0131_C\xfcm\u0259_\u015e\u0259nb\u0259".split("_"),
        weekdaysShort: "Baz_BzE_\xc7Ax_\xc7\u0259r_CAx_C\xfcm_\u015e\u0259n".split("_"),
        weekdaysMin: "Bz_BE_\xc7A_\xc7\u0259_CA_C\xfc_\u015e\u0259".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[bug\xfcn saat] LT",
            nextDay: "[sabah saat] LT",
            nextWeek: "[g\u0259l\u0259n h\u0259ft\u0259] dddd [saat] LT",
            lastDay: "[d\xfcn\u0259n] LT",
            lastWeek: "[ke\xe7\u0259n h\u0259ft\u0259] dddd [saat] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s sonra",
            past: "%s \u0259vv\u0259l",
            s: "birne\xe7\u0259 saniy\u0259",
            ss: "%d saniy\u0259",
            m: "bir d\u0259qiq\u0259",
            mm: "%d d\u0259qiq\u0259",
            h: "bir saat",
            hh: "%d saat",
            d: "bir g\xfcn",
            dd: "%d g\xfcn",
            M: "bir ay",
            MM: "%d ay",
            y: "bir il",
            yy: "%d il"
        },
        meridiemParse: /gec\u0259|s\u0259h\u0259r|g\xfcnd\xfcz|ax\u015fam/,
        isPM: function(e) {
            return /^(g\xfcnd\xfcz|ax\u015fam)$/.test(e)
        },
        meridiem: function(e, a, t) {
            return e < 4 ? "gec\u0259" : e < 12 ? "s\u0259h\u0259r" : e < 17 ? "g\xfcnd\xfcz" : "ax\u015fam"
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(\u0131nc\u0131|inci|nci|\xfcnc\xfc|nc\u0131|uncu)/,
        ordinal: function(e) {
            if (0 === e)
                return e + "-\u0131nc\u0131";
            var a = e % 10;
            return e + (_s[a] || _s[e % 100 - a] || _s[100 <= e ? 100 : null])
        },
        week: {
            dow: 1,
            doy: 7
        }
    }),
    l.defineLocale("be", {
        months: {
            format: "\u0441\u0442\u0443\u0434\u0437\u0435\u043d\u044f_\u043b\u044e\u0442\u0430\u0433\u0430_\u0441\u0430\u043a\u0430\u0432\u0456\u043a\u0430_\u043a\u0440\u0430\u0441\u0430\u0432\u0456\u043a\u0430_\u0442\u0440\u0430\u045e\u043d\u044f_\u0447\u044d\u0440\u0432\u0435\u043d\u044f_\u043b\u0456\u043f\u0435\u043d\u044f_\u0436\u043d\u0456\u045e\u043d\u044f_\u0432\u0435\u0440\u0430\u0441\u043d\u044f_\u043a\u0430\u0441\u0442\u0440\u044b\u0447\u043d\u0456\u043a\u0430_\u043b\u0456\u0441\u0442\u0430\u043f\u0430\u0434\u0430_\u0441\u043d\u0435\u0436\u043d\u044f".split("_"),
            standalone: "\u0441\u0442\u0443\u0434\u0437\u0435\u043d\u044c_\u043b\u044e\u0442\u044b_\u0441\u0430\u043a\u0430\u0432\u0456\u043a_\u043a\u0440\u0430\u0441\u0430\u0432\u0456\u043a_\u0442\u0440\u0430\u0432\u0435\u043d\u044c_\u0447\u044d\u0440\u0432\u0435\u043d\u044c_\u043b\u0456\u043f\u0435\u043d\u044c_\u0436\u043d\u0456\u0432\u0435\u043d\u044c_\u0432\u0435\u0440\u0430\u0441\u0435\u043d\u044c_\u043a\u0430\u0441\u0442\u0440\u044b\u0447\u043d\u0456\u043a_\u043b\u0456\u0441\u0442\u0430\u043f\u0430\u0434_\u0441\u043d\u0435\u0436\u0430\u043d\u044c".split("_")
        },
        monthsShort: "\u0441\u0442\u0443\u0434_\u043b\u044e\u0442_\u0441\u0430\u043a_\u043a\u0440\u0430\u0441_\u0442\u0440\u0430\u0432_\u0447\u044d\u0440\u0432_\u043b\u0456\u043f_\u0436\u043d\u0456\u0432_\u0432\u0435\u0440_\u043a\u0430\u0441\u0442_\u043b\u0456\u0441\u0442_\u0441\u043d\u0435\u0436".split("_"),
        weekdays: {
            format: "\u043d\u044f\u0434\u0437\u0435\u043b\u044e_\u043f\u0430\u043d\u044f\u0434\u0437\u0435\u043b\u0430\u043a_\u0430\u045e\u0442\u043e\u0440\u0430\u043a_\u0441\u0435\u0440\u0430\u0434\u0443_\u0447\u0430\u0446\u0432\u0435\u0440_\u043f\u044f\u0442\u043d\u0456\u0446\u0443_\u0441\u0443\u0431\u043e\u0442\u0443".split("_"),
            standalone: "\u043d\u044f\u0434\u0437\u0435\u043b\u044f_\u043f\u0430\u043d\u044f\u0434\u0437\u0435\u043b\u0430\u043a_\u0430\u045e\u0442\u043e\u0440\u0430\u043a_\u0441\u0435\u0440\u0430\u0434\u0430_\u0447\u0430\u0446\u0432\u0435\u0440_\u043f\u044f\u0442\u043d\u0456\u0446\u0430_\u0441\u0443\u0431\u043e\u0442\u0430".split("_"),
            isFormat: /\[ ?[\u0423\u0443\u045e] ?(?:\u043c\u0456\u043d\u0443\u043b\u0443\u044e|\u043d\u0430\u0441\u0442\u0443\u043f\u043d\u0443\u044e)? ?\] ?dddd/
        },
        weekdaysShort: "\u043d\u0434_\u043f\u043d_\u0430\u0442_\u0441\u0440_\u0447\u0446_\u043f\u0442_\u0441\u0431".split("_"),
        weekdaysMin: "\u043d\u0434_\u043f\u043d_\u0430\u0442_\u0441\u0440_\u0447\u0446_\u043f\u0442_\u0441\u0431".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY \u0433.",
            LLL: "D MMMM YYYY \u0433., HH:mm",
            LLLL: "dddd, D MMMM YYYY \u0433., HH:mm"
        },
        calendar: {
            sameDay: "[\u0421\u0451\u043d\u043d\u044f \u045e] LT",
            nextDay: "[\u0417\u0430\u045e\u0442\u0440\u0430 \u045e] LT",
            lastDay: "[\u0423\u0447\u043e\u0440\u0430 \u045e] LT",
            nextWeek: function() {
                return "[\u0423] dddd [\u045e] LT"
            },
            lastWeek: function() {
                switch (this.day()) {
                case 0:
                case 3:
                case 5:
                case 6:
                    return "[\u0423 \u043c\u0456\u043d\u0443\u043b\u0443\u044e] dddd [\u045e] LT";
                case 1:
                case 2:
                case 4:
                    return "[\u0423 \u043c\u0456\u043d\u0443\u043b\u044b] dddd [\u045e] LT"
                }
            },
            sameElse: "L"
        },
        relativeTime: {
            future: "\u043f\u0440\u0430\u0437 %s",
            past: "%s \u0442\u0430\u043c\u0443",
            s: "\u043d\u0435\u043a\u0430\u043b\u044c\u043a\u0456 \u0441\u0435\u043a\u0443\u043d\u0434",
            m: is,
            mm: is,
            h: is,
            hh: is,
            d: "\u0434\u0437\u0435\u043d\u044c",
            dd: is,
            M: "\u043c\u0435\u0441\u044f\u0446",
            MM: is,
            y: "\u0433\u043e\u0434",
            yy: is
        },
        meridiemParse: /\u043d\u043e\u0447\u044b|\u0440\u0430\u043d\u0456\u0446\u044b|\u0434\u043d\u044f|\u0432\u0435\u0447\u0430\u0440\u0430/,
        isPM: function(e) {
            return /^(\u0434\u043d\u044f|\u0432\u0435\u0447\u0430\u0440\u0430)$/.test(e)
        },
        meridiem: function(e, a, t) {
            return e < 4 ? "\u043d\u043e\u0447\u044b" : e < 12 ? "\u0440\u0430\u043d\u0456\u0446\u044b" : e < 17 ? "\u0434\u043d\u044f" : "\u0432\u0435\u0447\u0430\u0440\u0430"
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(\u0456|\u044b|\u0433\u0430)/,
        ordinal: function(e, a) {
            switch (a) {
            case "M":
            case "d":
            case "DDD":
            case "w":
            case "W":
                return e % 10 != 2 && e % 10 != 3 || e % 100 == 12 || e % 100 == 13 ? e + "-\u044b" : e + "-\u0456";
            case "D":
                return e + "-\u0433\u0430";
            default:
                return e
            }
        },
        week: {
            dow: 1,
            doy: 7
        }
    }),
    l.defineLocale("bg", {
        months: "\u044f\u043d\u0443\u0430\u0440\u0438_\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438_\u043c\u0430\u0440\u0442_\u0430\u043f\u0440\u0438\u043b_\u043c\u0430\u0439_\u044e\u043d\u0438_\u044e\u043b\u0438_\u0430\u0432\u0433\u0443\u0441\u0442_\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438_\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438_\u043d\u043e\u0435\u043c\u0432\u0440\u0438_\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438".split("_"),
        monthsShort: "\u044f\u043d\u0440_\u0444\u0435\u0432_\u043c\u0430\u0440_\u0430\u043f\u0440_\u043c\u0430\u0439_\u044e\u043d\u0438_\u044e\u043b\u0438_\u0430\u0432\u0433_\u0441\u0435\u043f_\u043e\u043a\u0442_\u043d\u043e\u0435_\u0434\u0435\u043a".split("_"),
        weekdays: "\u043d\u0435\u0434\u0435\u043b\u044f_\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a_\u0432\u0442\u043e\u0440\u043d\u0438\u043a_\u0441\u0440\u044f\u0434\u0430_\u0447\u0435\u0442\u0432\u044a\u0440\u0442\u044a\u043a_\u043f\u0435\u0442\u044a\u043a_\u0441\u044a\u0431\u043e\u0442\u0430".split("_"),
        weekdaysShort: "\u043d\u0435\u0434_\u043f\u043e\u043d_\u0432\u0442\u043e_\u0441\u0440\u044f_\u0447\u0435\u0442_\u043f\u0435\u0442_\u0441\u044a\u0431".split("_"),
        weekdaysMin: "\u043d\u0434_\u043f\u043d_\u0432\u0442_\u0441\u0440_\u0447\u0442_\u043f\u0442_\u0441\u0431".split("_"),
        longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "D.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY H:mm",
            LLLL: "dddd, D MMMM YYYY H:mm"
        },
        calendar: {
            sameDay: "[\u0414\u043d\u0435\u0441 \u0432] LT",
            nextDay: "[\u0423\u0442\u0440\u0435 \u0432] LT",
            nextWeek: "dddd [\u0432] LT",
            lastDay: "[\u0412\u0447\u0435\u0440\u0430 \u0432] LT",
            lastWeek: function() {
                switch (this.day()) {
                case 0:
                case 3:
                case 6:
                    return "[\u0412 \u0438\u0437\u043c\u0438\u043d\u0430\u043b\u0430\u0442\u0430] dddd [\u0432] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                    return "[\u0412 \u0438\u0437\u043c\u0438\u043d\u0430\u043b\u0438\u044f] dddd [\u0432] LT"
                }
            },
            sameElse: "L"
        },
        relativeTime: {
            future: "\u0441\u043b\u0435\u0434 %s",
            past: "\u043f\u0440\u0435\u0434\u0438 %s",
            s: "\u043d\u044f\u043a\u043e\u043b\u043a\u043e \u0441\u0435\u043a\u0443\u043d\u0434\u0438",
            ss: "%d \u0441\u0435\u043a\u0443\u043d\u0434\u0438",
            m: "\u043c\u0438\u043d\u0443\u0442\u0430",
            mm: "%d \u043c\u0438\u043d\u0443\u0442\u0438",
            h: "\u0447\u0430\u0441",
            hh: "%d \u0447\u0430\u0441\u0430",
            d: "\u0434\u0435\u043d",
            dd: "%d \u0434\u043d\u0438",
            M: "\u043c\u0435\u0441\u0435\u0446",
            MM: "%d \u043c\u0435\u0441\u0435\u0446\u0430",
            y: "\u0433\u043e\u0434\u0438\u043d\u0430",
            yy: "%d \u0433\u043e\u0434\u0438\u043d\u0438"
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(\u0435\u0432|\u0435\u043d|\u0442\u0438|\u0432\u0438|\u0440\u0438|\u043c\u0438)/,
        ordinal: function(e) {
            var a = e % 10
              , t = e % 100;
            return 0 === e ? e + "-\u0435\u0432" : 0 === t ? e + "-\u0435\u043d" : 10 < t && t < 20 ? e + "-\u0442\u0438" : 1 === a ? e + "-\u0432\u0438" : 2 === a ? e + "-\u0440\u0438" : 7 === a || 8 === a ? e + "-\u043c\u0438" : e + "-\u0442\u0438"
        },
        week: {
            dow: 1,
            doy: 7
        }
    }),
    l.defineLocale("bm", {
        months: "Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_M\u025bkalo_Zuw\u025bnkalo_Zuluyekalo_Utikalo_S\u025btanburukalo_\u0254kut\u0254burukalo_Nowanburukalo_Desanburukalo".split("_"),
        monthsShort: "Zan_Few_Mar_Awi_M\u025b_Zuw_Zul_Uti_S\u025bt_\u0254ku_Now_Des".split("_"),
        weekdays: "Kari_Nt\u025bn\u025bn_Tarata_Araba_Alamisa_Juma_Sibiri".split("_"),
        weekdaysShort: "Kar_Nt\u025b_Tar_Ara_Ala_Jum_Sib".split("_"),
        weekdaysMin: "Ka_Nt_Ta_Ar_Al_Ju_Si".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "MMMM [tile] D [san] YYYY",
            LLL: "MMMM [tile] D [san] YYYY [l\u025br\u025b] HH:mm",
            LLLL: "dddd MMMM [tile] D [san] YYYY [l\u025br\u025b] HH:mm"
        },
        calendar: {
            sameDay: "[Bi l\u025br\u025b] LT",
            nextDay: "[Sini l\u025br\u025b] LT",
            nextWeek: "dddd [don l\u025br\u025b] LT",
            lastDay: "[Kunu l\u025br\u025b] LT",
            lastWeek: "dddd [t\u025bm\u025bnen l\u025br\u025b] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s k\u0254n\u0254",
            past: "a b\u025b %s b\u0254",
            s: "sanga dama dama",
            ss: "sekondi %d",
            m: "miniti kelen",
            mm: "miniti %d",
            h: "l\u025br\u025b kelen",
            hh: "l\u025br\u025b %d",
            d: "tile kelen",
            dd: "tile %d",
            M: "kalo kelen",
            MM: "kalo %d",
            y: "san kelen",
            yy: "san %d"
        },
        week: {
            dow: 1,
            doy: 4
        }
    });
    var os = {
        1: "\u09e7",
        2: "\u09e8",
        3: "\u09e9",
        4: "\u09ea",
        5: "\u09eb",
        6: "\u09ec",
        7: "\u09ed",
        8: "\u09ee",
        9: "\u09ef",
        0: "\u09e6"
    }
      , ms = {
        "\u09e7": "1",
        "\u09e8": "2",
        "\u09e9": "3",
        "\u09ea": "4",
        "\u09eb": "5",
        "\u09ec": "6",
        "\u09ed": "7",
        "\u09ee": "8",
        "\u09ef": "9",
        "\u09e6": "0"
    };
    l.defineLocale("bn", {
        months: "\u099c\u09be\u09a8\u09c1\u09df\u09be\u09b0\u09c0_\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09df\u09be\u09b0\u09bf_\u09ae\u09be\u09b0\u09cd\u099a_\u098f\u09aa\u09cd\u09b0\u09bf\u09b2_\u09ae\u09c7_\u099c\u09c1\u09a8_\u099c\u09c1\u09b2\u09be\u0987_\u0986\u0997\u09b8\u09cd\u099f_\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0_\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0_\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0_\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0".split("_"),
        monthsShort: "\u099c\u09be\u09a8\u09c1_\u09ab\u09c7\u09ac_\u09ae\u09be\u09b0\u09cd\u099a_\u098f\u09aa\u09cd\u09b0_\u09ae\u09c7_\u099c\u09c1\u09a8_\u099c\u09c1\u09b2_\u0986\u0997_\u09b8\u09c7\u09aa\u09cd\u099f_\u0985\u0995\u09cd\u099f\u09cb_\u09a8\u09ad\u09c7_\u09a1\u09bf\u09b8\u09c7".split("_"),
        weekdays: "\u09b0\u09ac\u09bf\u09ac\u09be\u09b0_\u09b8\u09cb\u09ae\u09ac\u09be\u09b0_\u09ae\u0999\u09cd\u0997\u09b2\u09ac\u09be\u09b0_\u09ac\u09c1\u09a7\u09ac\u09be\u09b0_\u09ac\u09c3\u09b9\u09b8\u09cd\u09aa\u09a4\u09bf\u09ac\u09be\u09b0_\u09b6\u09c1\u0995\u09cd\u09b0\u09ac\u09be\u09b0_\u09b6\u09a8\u09bf\u09ac\u09be\u09b0".split("_"),
        weekdaysShort: "\u09b0\u09ac\u09bf_\u09b8\u09cb\u09ae_\u09ae\u0999\u09cd\u0997\u09b2_\u09ac\u09c1\u09a7_\u09ac\u09c3\u09b9\u09b8\u09cd\u09aa\u09a4\u09bf_\u09b6\u09c1\u0995\u09cd\u09b0_\u09b6\u09a8\u09bf".split("_"),
        weekdaysMin: "\u09b0\u09ac\u09bf_\u09b8\u09cb\u09ae_\u09ae\u0999\u09cd\u0997_\u09ac\u09c1\u09a7_\u09ac\u09c3\u09b9\u0983_\u09b6\u09c1\u0995\u09cd\u09b0_\u09b6\u09a8\u09bf".split("_"),
        longDateFormat: {
            LT: "A h:mm \u09b8\u09ae\u09df",
            LTS: "A h:mm:ss \u09b8\u09ae\u09df",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm \u09b8\u09ae\u09df",
            LLLL: "dddd, D MMMM YYYY, A h:mm \u09b8\u09ae\u09df"
        },
        calendar: {
            sameDay: "[\u0986\u099c] LT",
            nextDay: "[\u0986\u0997\u09be\u09ae\u09c0\u0995\u09be\u09b2] LT",
            nextWeek: "dddd, LT",
            lastDay: "[\u0997\u09a4\u0995\u09be\u09b2] LT",
            lastWeek: "[\u0997\u09a4] dddd, LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s \u09aa\u09b0\u09c7",
            past: "%s \u0986\u0997\u09c7",
            s: "\u0995\u09df\u09c7\u0995 \u09b8\u09c7\u0995\u09c7\u09a8\u09cd\u09a1",
            ss: "%d \u09b8\u09c7\u0995\u09c7\u09a8\u09cd\u09a1",
            m: "\u098f\u0995 \u09ae\u09bf\u09a8\u09bf\u099f",
            mm: "%d \u09ae\u09bf\u09a8\u09bf\u099f",
            h: "\u098f\u0995 \u0998\u09a8\u09cd\u099f\u09be",
            hh: "%d \u0998\u09a8\u09cd\u099f\u09be",
            d: "\u098f\u0995 \u09a6\u09bf\u09a8",
            dd: "%d \u09a6\u09bf\u09a8",
            M: "\u098f\u0995 \u09ae\u09be\u09b8",
            MM: "%d \u09ae\u09be\u09b8",
            y: "\u098f\u0995 \u09ac\u099b\u09b0",
            yy: "%d \u09ac\u099b\u09b0"
        },
        preparse: function(e) {
            return e.replace(/[\u09e7\u09e8\u09e9\u09ea\u09eb\u09ec\u09ed\u09ee\u09ef\u09e6]/g, function(e) {
                return ms[e]
            })
        },
        postformat: function(e) {
            return e.replace(/\d/g, function(e) {
                return os[e]
            })
        },
        meridiemParse: /\u09b0\u09be\u09a4|\u09b8\u0995\u09be\u09b2|\u09a6\u09c1\u09aa\u09c1\u09b0|\u09ac\u09bf\u0995\u09be\u09b2|\u09b0\u09be\u09a4/,
        meridiemHour: function(e, a) {
            return 12 === e && (e = 0),
            "\u09b0\u09be\u09a4" === a && 4 <= e || "\u09a6\u09c1\u09aa\u09c1\u09b0" === a && e < 5 || "\u09ac\u09bf\u0995\u09be\u09b2" === a ? e + 12 : e
        },
        meridiem: function(e, a, t) {
            return e < 4 ? "\u09b0\u09be\u09a4" : e < 10 ? "\u09b8\u0995\u09be\u09b2" : e < 17 ? "\u09a6\u09c1\u09aa\u09c1\u09b0" : e < 20 ? "\u09ac\u09bf\u0995\u09be\u09b2" : "\u09b0\u09be\u09a4"
        },
        week: {
            dow: 0,
            doy: 6
        }
    });
    var us = {
        1: "\u0f21",
        2: "\u0f22",
        3: "\u0f23",
        4: "\u0f24",
        5: "\u0f25",
        6: "\u0f26",
        7: "\u0f27",
        8: "\u0f28",
        9: "\u0f29",
        0: "\u0f20"
    }
      , ls = {
        "\u0f21": "1",
        "\u0f22": "2",
        "\u0f23": "3",
        "\u0f24": "4",
        "\u0f25": "5",
        "\u0f26": "6",
        "\u0f27": "7",
        "\u0f28": "8",
        "\u0f29": "9",
        "\u0f20": "0"
    };
    function Ms(e, a, t) {
        var s, n, d;
        return e + " " + (s = {
            mm: "munutenn",
            MM: "miz",
            dd: "devezh"
        }[t],
        2 !== e ? s : void 0 !== (d = {
            m: "v",
            b: "v",
            d: "z"
        })[(n = s).charAt(0)] ? d[n.charAt(0)] + n.substring(1) : n)
    }
    function hs(e, a, t) {
        var s = e + " ";
        switch (t) {
        case "ss":
            return s += 1 === e ? "sekunda" : 2 === e || 3 === e || 4 === e ? "sekunde" : "sekundi";
        case "m":
            return a ? "jedna minuta" : "jedne minute";
        case "mm":
            return s += 1 === e ? "minuta" : 2 === e || 3 === e || 4 === e ? "minute" : "minuta";
        case "h":
            return a ? "jedan sat" : "jednog sata";
        case "hh":
            return s += 1 === e ? "sat" : 2 === e || 3 === e || 4 === e ? "sata" : "sati";
        case "dd":
            return s += 1 === e ? "dan" : "dana";
        case "MM":
            return s += 1 === e ? "mjesec" : 2 === e || 3 === e || 4 === e ? "mjeseca" : "mjeseci";
        case "yy":
            return s += 1 === e ? "godina" : 2 === e || 3 === e || 4 === e ? "godine" : "godina"
        }
    }
    l.defineLocale("bo", {
        months: "\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f51\u0f44\u0f0b\u0f54\u0f7c_\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f42\u0f49\u0f72\u0f66\u0f0b\u0f54_\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f42\u0f66\u0f74\u0f58\u0f0b\u0f54_\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f56\u0f5e\u0f72\u0f0b\u0f54_\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f63\u0f94\u0f0b\u0f54_\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f51\u0fb2\u0f74\u0f42\u0f0b\u0f54_\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f56\u0f51\u0f74\u0f53\u0f0b\u0f54_\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f56\u0f62\u0f92\u0fb1\u0f51\u0f0b\u0f54_\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f51\u0f42\u0f74\u0f0b\u0f54_\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f56\u0f45\u0f74\u0f0b\u0f54_\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f56\u0f45\u0f74\u0f0b\u0f42\u0f45\u0f72\u0f42\u0f0b\u0f54_\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f56\u0f45\u0f74\u0f0b\u0f42\u0f49\u0f72\u0f66\u0f0b\u0f54".split("_"),
        monthsShort: "\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f51\u0f44\u0f0b\u0f54\u0f7c_\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f42\u0f49\u0f72\u0f66\u0f0b\u0f54_\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f42\u0f66\u0f74\u0f58\u0f0b\u0f54_\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f56\u0f5e\u0f72\u0f0b\u0f54_\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f63\u0f94\u0f0b\u0f54_\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f51\u0fb2\u0f74\u0f42\u0f0b\u0f54_\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f56\u0f51\u0f74\u0f53\u0f0b\u0f54_\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f56\u0f62\u0f92\u0fb1\u0f51\u0f0b\u0f54_\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f51\u0f42\u0f74\u0f0b\u0f54_\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f56\u0f45\u0f74\u0f0b\u0f54_\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f56\u0f45\u0f74\u0f0b\u0f42\u0f45\u0f72\u0f42\u0f0b\u0f54_\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f56\u0f45\u0f74\u0f0b\u0f42\u0f49\u0f72\u0f66\u0f0b\u0f54".split("_"),
        weekdays: "\u0f42\u0f5f\u0f60\u0f0b\u0f49\u0f72\u0f0b\u0f58\u0f0b_\u0f42\u0f5f\u0f60\u0f0b\u0f5f\u0fb3\u0f0b\u0f56\u0f0b_\u0f42\u0f5f\u0f60\u0f0b\u0f58\u0f72\u0f42\u0f0b\u0f51\u0f58\u0f62\u0f0b_\u0f42\u0f5f\u0f60\u0f0b\u0f63\u0fb7\u0f42\u0f0b\u0f54\u0f0b_\u0f42\u0f5f\u0f60\u0f0b\u0f55\u0f74\u0f62\u0f0b\u0f56\u0f74_\u0f42\u0f5f\u0f60\u0f0b\u0f54\u0f0b\u0f66\u0f44\u0f66\u0f0b_\u0f42\u0f5f\u0f60\u0f0b\u0f66\u0fa4\u0f7a\u0f53\u0f0b\u0f54\u0f0b".split("_"),
        weekdaysShort: "\u0f49\u0f72\u0f0b\u0f58\u0f0b_\u0f5f\u0fb3\u0f0b\u0f56\u0f0b_\u0f58\u0f72\u0f42\u0f0b\u0f51\u0f58\u0f62\u0f0b_\u0f63\u0fb7\u0f42\u0f0b\u0f54\u0f0b_\u0f55\u0f74\u0f62\u0f0b\u0f56\u0f74_\u0f54\u0f0b\u0f66\u0f44\u0f66\u0f0b_\u0f66\u0fa4\u0f7a\u0f53\u0f0b\u0f54\u0f0b".split("_"),
        weekdaysMin: "\u0f49\u0f72\u0f0b\u0f58\u0f0b_\u0f5f\u0fb3\u0f0b\u0f56\u0f0b_\u0f58\u0f72\u0f42\u0f0b\u0f51\u0f58\u0f62\u0f0b_\u0f63\u0fb7\u0f42\u0f0b\u0f54\u0f0b_\u0f55\u0f74\u0f62\u0f0b\u0f56\u0f74_\u0f54\u0f0b\u0f66\u0f44\u0f66\u0f0b_\u0f66\u0fa4\u0f7a\u0f53\u0f0b\u0f54\u0f0b".split("_"),
        longDateFormat: {
            LT: "A h:mm",
            LTS: "A h:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm",
            LLLL: "dddd, D MMMM YYYY, A h:mm"
        },
        calendar: {
            sameDay: "[\u0f51\u0f72\u0f0b\u0f62\u0f72\u0f44] LT",
            nextDay: "[\u0f66\u0f44\u0f0b\u0f49\u0f72\u0f53] LT",
            nextWeek: "[\u0f56\u0f51\u0f74\u0f53\u0f0b\u0f55\u0fb2\u0f42\u0f0b\u0f62\u0f97\u0f7a\u0f66\u0f0b\u0f58], LT",
            lastDay: "[\u0f41\u0f0b\u0f66\u0f44] LT",
            lastWeek: "[\u0f56\u0f51\u0f74\u0f53\u0f0b\u0f55\u0fb2\u0f42\u0f0b\u0f58\u0f50\u0f60\u0f0b\u0f58] dddd, LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s \u0f63\u0f0b",
            past: "%s \u0f66\u0f94\u0f53\u0f0b\u0f63",
            s: "\u0f63\u0f58\u0f0b\u0f66\u0f44",
            ss: "%d \u0f66\u0f90\u0f62\u0f0b\u0f46\u0f0d",
            m: "\u0f66\u0f90\u0f62\u0f0b\u0f58\u0f0b\u0f42\u0f45\u0f72\u0f42",
            mm: "%d \u0f66\u0f90\u0f62\u0f0b\u0f58",
            h: "\u0f46\u0f74\u0f0b\u0f5a\u0f7c\u0f51\u0f0b\u0f42\u0f45\u0f72\u0f42",
            hh: "%d \u0f46\u0f74\u0f0b\u0f5a\u0f7c\u0f51",
            d: "\u0f49\u0f72\u0f53\u0f0b\u0f42\u0f45\u0f72\u0f42",
            dd: "%d \u0f49\u0f72\u0f53\u0f0b",
            M: "\u0f5f\u0fb3\u0f0b\u0f56\u0f0b\u0f42\u0f45\u0f72\u0f42",
            MM: "%d \u0f5f\u0fb3\u0f0b\u0f56",
            y: "\u0f63\u0f7c\u0f0b\u0f42\u0f45\u0f72\u0f42",
            yy: "%d \u0f63\u0f7c"
        },
        preparse: function(e) {
            return e.replace(/[\u0f21\u0f22\u0f23\u0f24\u0f25\u0f26\u0f27\u0f28\u0f29\u0f20]/g, function(e) {
                return ls[e]
            })
        },
        postformat: function(e) {
            return e.replace(/\d/g, function(e) {
                return us[e]
            })
        },
        meridiemParse: /\u0f58\u0f5a\u0f53\u0f0b\u0f58\u0f7c|\u0f5e\u0f7c\u0f42\u0f66\u0f0b\u0f40\u0f66|\u0f49\u0f72\u0f53\u0f0b\u0f42\u0f74\u0f44|\u0f51\u0f42\u0f7c\u0f44\u0f0b\u0f51\u0f42|\u0f58\u0f5a\u0f53\u0f0b\u0f58\u0f7c/,
        meridiemHour: function(e, a) {
            return 12 === e && (e = 0),
            "\u0f58\u0f5a\u0f53\u0f0b\u0f58\u0f7c" === a && 4 <= e || "\u0f49\u0f72\u0f53\u0f0b\u0f42\u0f74\u0f44" === a && e < 5 || "\u0f51\u0f42\u0f7c\u0f44\u0f0b\u0f51\u0f42" === a ? e + 12 : e
        },
        meridiem: function(e, a, t) {
            return e < 4 ? "\u0f58\u0f5a\u0f53\u0f0b\u0f58\u0f7c" : e < 10 ? "\u0f5e\u0f7c\u0f42\u0f66\u0f0b\u0f40\u0f66" : e < 17 ? "\u0f49\u0f72\u0f53\u0f0b\u0f42\u0f74\u0f44" : e < 20 ? "\u0f51\u0f42\u0f7c\u0f44\u0f0b\u0f51\u0f42" : "\u0f58\u0f5a\u0f53\u0f0b\u0f58\u0f7c"
        },
        week: {
            dow: 0,
            doy: 6
        }
    }),
    l.defineLocale("br", {
        months: "Genver_C'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu".split("_"),
        monthsShort: "Gen_C'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker".split("_"),
        weekdays: "Sul_Lun_Meurzh_Merc'her_Yaou_Gwener_Sadorn".split("_"),
        weekdaysShort: "Sul_Lun_Meu_Mer_Yao_Gwe_Sad".split("_"),
        weekdaysMin: "Su_Lu_Me_Mer_Ya_Gw_Sa".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "h[e]mm A",
            LTS: "h[e]mm:ss A",
            L: "DD/MM/YYYY",
            LL: "D [a viz] MMMM YYYY",
            LLL: "D [a viz] MMMM YYYY h[e]mm A",
            LLLL: "dddd, D [a viz] MMMM YYYY h[e]mm A"
        },
        calendar: {
            sameDay: "[Hiziv da] LT",
            nextDay: "[Warc'hoazh da] LT",
            nextWeek: "dddd [da] LT",
            lastDay: "[Dec'h da] LT",
            lastWeek: "dddd [paset da] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "a-benn %s",
            past: "%s 'zo",
            s: "un nebeud segondenno\xf9",
            ss: "%d eilenn",
            m: "ur vunutenn",
            mm: Ms,
            h: "un eur",
            hh: "%d eur",
            d: "un devezh",
            dd: Ms,
            M: "ur miz",
            MM: Ms,
            y: "ur bloaz",
            yy: function(e) {
                switch (function e(a) {
                    return 9 < a ? e(a % 10) : a
                }(e)) {
                case 1:
                case 3:
                case 4:
                case 5:
                case 9:
                    return e + " bloaz";
                default:
                    return e + " vloaz"
                }
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}(a\xf1|vet)/,
        ordinal: function(e) {
            return e + (1 === e ? "a\xf1" : "vet")
        },
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("bs", {
        months: "januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar".split("_"),
        monthsShort: "jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.".split("_"),
        monthsParseExact: !0,
        weekdays: "nedjelja_ponedjeljak_utorak_srijeda_\u010detvrtak_petak_subota".split("_"),
        weekdaysShort: "ned._pon._uto._sri._\u010det._pet._sub.".split("_"),
        weekdaysMin: "ne_po_ut_sr_\u010de_pe_su".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd, D. MMMM YYYY H:mm"
        },
        calendar: {
            sameDay: "[danas u] LT",
            nextDay: "[sutra u] LT",
            nextWeek: function() {
                switch (this.day()) {
                case 0:
                    return "[u] [nedjelju] [u] LT";
                case 3:
                    return "[u] [srijedu] [u] LT";
                case 6:
                    return "[u] [subotu] [u] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                    return "[u] dddd [u] LT"
                }
            },
            lastDay: "[ju\u010der u] LT",
            lastWeek: function() {
                switch (this.day()) {
                case 0:
                case 3:
                    return "[pro\u0161lu] dddd [u] LT";
                case 6:
                    return "[pro\u0161le] [subote] [u] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                    return "[pro\u0161li] dddd [u] LT"
                }
            },
            sameElse: "L"
        },
        relativeTime: {
            future: "za %s",
            past: "prije %s",
            s: "par sekundi",
            ss: hs,
            m: hs,
            mm: hs,
            h: hs,
            hh: hs,
            d: "dan",
            dd: hs,
            M: "mjesec",
            MM: hs,
            y: "godinu",
            yy: hs
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 7
        }
    }),
    l.defineLocale("ca", {
        months: {
            standalone: "gener_febrer_mar\xe7_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre".split("_"),
            format: "de gener_de febrer_de mar\xe7_d'abril_de maig_de juny_de juliol_d'agost_de setembre_d'octubre_de novembre_de desembre".split("_"),
            isFormat: /D[oD]?(\s)+MMMM/
        },
        monthsShort: "gen._febr._mar\xe7_abr._maig_juny_jul._ag._set._oct._nov._des.".split("_"),
        monthsParseExact: !0,
        weekdays: "diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte".split("_"),
        weekdaysShort: "dg._dl._dt._dc._dj._dv._ds.".split("_"),
        weekdaysMin: "dg_dl_dt_dc_dj_dv_ds".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM [de] YYYY",
            ll: "D MMM YYYY",
            LLL: "D MMMM [de] YYYY [a les] H:mm",
            lll: "D MMM YYYY, H:mm",
            LLLL: "dddd D MMMM [de] YYYY [a les] H:mm",
            llll: "ddd D MMM YYYY, H:mm"
        },
        calendar: {
            sameDay: function() {
                return "[avui a " + (1 !== this.hours() ? "les" : "la") + "] LT"
            },
            nextDay: function() {
                return "[dem\xe0 a " + (1 !== this.hours() ? "les" : "la") + "] LT"
            },
            nextWeek: function() {
                return "dddd [a " + (1 !== this.hours() ? "les" : "la") + "] LT"
            },
            lastDay: function() {
                return "[ahir a " + (1 !== this.hours() ? "les" : "la") + "] LT"
            },
            lastWeek: function() {
                return "[el] dddd [passat a " + (1 !== this.hours() ? "les" : "la") + "] LT"
            },
            sameElse: "L"
        },
        relativeTime: {
            future: "d'aqu\xed %s",
            past: "fa %s",
            s: "uns segons",
            ss: "%d segons",
            m: "un minut",
            mm: "%d minuts",
            h: "una hora",
            hh: "%d hores",
            d: "un dia",
            dd: "%d dies",
            M: "un mes",
            MM: "%d mesos",
            y: "un any",
            yy: "%d anys"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|\xe8|a)/,
        ordinal: function(e, a) {
            var t = 1 === e ? "r" : 2 === e ? "n" : 3 === e ? "r" : 4 === e ? "t" : "\xe8";
            return "w" !== a && "W" !== a || (t = "a"),
            e + t
        },
        week: {
            dow: 1,
            doy: 4
        }
    });
    var Ls = "leden_\xfanor_b\u0159ezen_duben_kv\u011bten_\u010derven_\u010dervenec_srpen_z\xe1\u0159\xed_\u0159\xedjen_listopad_prosinec".split("_")
      , cs = "led_\xfano_b\u0159e_dub_kv\u011b_\u010dvn_\u010dvc_srp_z\xe1\u0159_\u0159\xedj_lis_pro".split("_")
      , Ys = [/^led/i, /^\xfano/i, /^b\u0159e/i, /^dub/i, /^kv\u011b/i, /^(\u010dvn|\u010derven$|\u010dervna)/i, /^(\u010dvc|\u010dervenec|\u010dervence)/i, /^srp/i, /^z\xe1\u0159/i, /^\u0159\xedj/i, /^lis/i, /^pro/i]
      , ys = /^(leden|\xfanor|b\u0159ezen|duben|kv\u011bten|\u010dervenec|\u010dervence|\u010derven|\u010dervna|srpen|z\xe1\u0159\xed|\u0159\xedjen|listopad|prosinec|led|\xfano|b\u0159e|dub|kv\u011b|\u010dvn|\u010dvc|srp|z\xe1\u0159|\u0159\xedj|lis|pro)/i;
    function fs(e) {
        return 1 < e && e < 5 && 1 != ~~(e / 10)
    }
    function ks(e, a, t, s) {
        var n = e + " ";
        switch (t) {
        case "s":
            return a || s ? "p\xe1r sekund" : "p\xe1r sekundami";
        case "ss":
            return a || s ? n + (fs(e) ? "sekundy" : "sekund") : n + "sekundami";
            break;
        case "m":
            return a ? "minuta" : s ? "minutu" : "minutou";
        case "mm":
            return a || s ? n + (fs(e) ? "minuty" : "minut") : n + "minutami";
            break;
        case "h":
            return a ? "hodina" : s ? "hodinu" : "hodinou";
        case "hh":
            return a || s ? n + (fs(e) ? "hodiny" : "hodin") : n + "hodinami";
            break;
        case "d":
            return a || s ? "den" : "dnem";
        case "dd":
            return a || s ? n + (fs(e) ? "dny" : "dn\xed") : n + "dny";
            break;
        case "M":
            return a || s ? "m\u011bs\xedc" : "m\u011bs\xedcem";
        case "MM":
            return a || s ? n + (fs(e) ? "m\u011bs\xedce" : "m\u011bs\xedc\u016f") : n + "m\u011bs\xedci";
            break;
        case "y":
            return a || s ? "rok" : "rokem";
        case "yy":
            return a || s ? n + (fs(e) ? "roky" : "let") : n + "lety";
            break
        }
    }
    function ps(e, a, t, s) {
        var n = {
            m: ["eine Minute", "einer Minute"],
            h: ["eine Stunde", "einer Stunde"],
            d: ["ein Tag", "einem Tag"],
            dd: [e + " Tage", e + " Tagen"],
            M: ["ein Monat", "einem Monat"],
            MM: [e + " Monate", e + " Monaten"],
            y: ["ein Jahr", "einem Jahr"],
            yy: [e + " Jahre", e + " Jahren"]
        };
        return a ? n[t][0] : n[t][1]
    }
    function Ds(e, a, t, s) {
        var n = {
            m: ["eine Minute", "einer Minute"],
            h: ["eine Stunde", "einer Stunde"],
            d: ["ein Tag", "einem Tag"],
            dd: [e + " Tage", e + " Tagen"],
            M: ["ein Monat", "einem Monat"],
            MM: [e + " Monate", e + " Monaten"],
            y: ["ein Jahr", "einem Jahr"],
            yy: [e + " Jahre", e + " Jahren"]
        };
        return a ? n[t][0] : n[t][1]
    }
    function Ts(e, a, t, s) {
        var n = {
            m: ["eine Minute", "einer Minute"],
            h: ["eine Stunde", "einer Stunde"],
            d: ["ein Tag", "einem Tag"],
            dd: [e + " Tage", e + " Tagen"],
            M: ["ein Monat", "einem Monat"],
            MM: [e + " Monate", e + " Monaten"],
            y: ["ein Jahr", "einem Jahr"],
            yy: [e + " Jahre", e + " Jahren"]
        };
        return a ? n[t][0] : n[t][1]
    }
    l.defineLocale("cs", {
        months: Ls,
        monthsShort: cs,
        monthsRegex: ys,
        monthsShortRegex: ys,
        monthsStrictRegex: /^(leden|ledna|\xfanora|\xfanor|b\u0159ezen|b\u0159ezna|duben|dubna|kv\u011bten|kv\u011btna|\u010dervenec|\u010dervence|\u010derven|\u010dervna|srpen|srpna|z\xe1\u0159\xed|\u0159\xedjen|\u0159\xedjna|listopadu|listopad|prosinec|prosince)/i,
        monthsShortStrictRegex: /^(led|\xfano|b\u0159e|dub|kv\u011b|\u010dvn|\u010dvc|srp|z\xe1\u0159|\u0159\xedj|lis|pro)/i,
        monthsParse: Ys,
        longMonthsParse: Ys,
        shortMonthsParse: Ys,
        weekdays: "ned\u011ble_pond\u011bl\xed_\xfater\xfd_st\u0159eda_\u010dtvrtek_p\xe1tek_sobota".split("_"),
        weekdaysShort: "ne_po_\xfat_st_\u010dt_p\xe1_so".split("_"),
        weekdaysMin: "ne_po_\xfat_st_\u010dt_p\xe1_so".split("_"),
        longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd D. MMMM YYYY H:mm",
            l: "D. M. YYYY"
        },
        calendar: {
            sameDay: "[dnes v] LT",
            nextDay: "[z\xedtra v] LT",
            nextWeek: function() {
                switch (this.day()) {
                case 0:
                    return "[v ned\u011bli v] LT";
                case 1:
                case 2:
                    return "[v] dddd [v] LT";
                case 3:
                    return "[ve st\u0159edu v] LT";
                case 4:
                    return "[ve \u010dtvrtek v] LT";
                case 5:
                    return "[v p\xe1tek v] LT";
                case 6:
                    return "[v sobotu v] LT"
                }
            },
            lastDay: "[v\u010dera v] LT",
            lastWeek: function() {
                switch (this.day()) {
                case 0:
                    return "[minulou ned\u011bli v] LT";
                case 1:
                case 2:
                    return "[minul\xe9] dddd [v] LT";
                case 3:
                    return "[minulou st\u0159edu v] LT";
                case 4:
                case 5:
                    return "[minul\xfd] dddd [v] LT";
                case 6:
                    return "[minulou sobotu v] LT"
                }
            },
            sameElse: "L"
        },
        relativeTime: {
            future: "za %s",
            past: "p\u0159ed %s",
            s: ks,
            ss: ks,
            m: ks,
            mm: ks,
            h: ks,
            hh: ks,
            d: ks,
            dd: ks,
            M: ks,
            MM: ks,
            y: ks,
            yy: ks
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("cv", {
        months: "\u043a\u04d1\u0440\u043b\u0430\u0447_\u043d\u0430\u0440\u04d1\u0441_\u043f\u0443\u0448_\u0430\u043a\u0430_\u043c\u0430\u0439_\u04ab\u04d7\u0440\u0442\u043c\u0435_\u0443\u0442\u04d1_\u04ab\u0443\u0440\u043b\u0430_\u0430\u0432\u04d1\u043d_\u044e\u043f\u0430_\u0447\u04f3\u043a_\u0440\u0430\u0448\u0442\u0430\u0432".split("_"),
        monthsShort: "\u043a\u04d1\u0440_\u043d\u0430\u0440_\u043f\u0443\u0448_\u0430\u043a\u0430_\u043c\u0430\u0439_\u04ab\u04d7\u0440_\u0443\u0442\u04d1_\u04ab\u0443\u0440_\u0430\u0432\u043d_\u044e\u043f\u0430_\u0447\u04f3\u043a_\u0440\u0430\u0448".split("_"),
        weekdays: "\u0432\u044b\u0440\u0441\u0430\u0440\u043d\u0438\u043a\u0443\u043d_\u0442\u0443\u043d\u0442\u0438\u043a\u0443\u043d_\u044b\u0442\u043b\u0430\u0440\u0438\u043a\u0443\u043d_\u044e\u043d\u043a\u0443\u043d_\u043a\u04d7\u04ab\u043d\u0435\u0440\u043d\u0438\u043a\u0443\u043d_\u044d\u0440\u043d\u0435\u043a\u0443\u043d_\u0448\u04d1\u043c\u0430\u0442\u043a\u0443\u043d".split("_"),
        weekdaysShort: "\u0432\u044b\u0440_\u0442\u0443\u043d_\u044b\u0442\u043b_\u044e\u043d_\u043a\u04d7\u04ab_\u044d\u0440\u043d_\u0448\u04d1\u043c".split("_"),
        weekdaysMin: "\u0432\u0440_\u0442\u043d_\u044b\u0442_\u044e\u043d_\u043a\u04ab_\u044d\u0440_\u0448\u043c".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD-MM-YYYY",
            LL: "YYYY [\u04ab\u0443\u043b\u0445\u0438] MMMM [\u0443\u0439\u04d1\u0445\u04d7\u043d] D[-\u043c\u04d7\u0448\u04d7]",
            LLL: "YYYY [\u04ab\u0443\u043b\u0445\u0438] MMMM [\u0443\u0439\u04d1\u0445\u04d7\u043d] D[-\u043c\u04d7\u0448\u04d7], HH:mm",
            LLLL: "dddd, YYYY [\u04ab\u0443\u043b\u0445\u0438] MMMM [\u0443\u0439\u04d1\u0445\u04d7\u043d] D[-\u043c\u04d7\u0448\u04d7], HH:mm"
        },
        calendar: {
            sameDay: "[\u041f\u0430\u044f\u043d] LT [\u0441\u0435\u0445\u0435\u0442\u0440\u0435]",
            nextDay: "[\u042b\u0440\u0430\u043d] LT [\u0441\u0435\u0445\u0435\u0442\u0440\u0435]",
            lastDay: "[\u04d6\u043d\u0435\u0440] LT [\u0441\u0435\u0445\u0435\u0442\u0440\u0435]",
            nextWeek: "[\u04aa\u0438\u0442\u0435\u0441] dddd LT [\u0441\u0435\u0445\u0435\u0442\u0440\u0435]",
            lastWeek: "[\u0418\u0440\u0442\u043d\u04d7] dddd LT [\u0441\u0435\u0445\u0435\u0442\u0440\u0435]",
            sameElse: "L"
        },
        relativeTime: {
            future: function(e) {
                return e + (/\u0441\u0435\u0445\u0435\u0442$/i.exec(e) ? "\u0440\u0435\u043d" : /\u04ab\u0443\u043b$/i.exec(e) ? "\u0442\u0430\u043d" : "\u0440\u0430\u043d")
            },
            past: "%s \u043a\u0430\u044f\u043b\u043b\u0430",
            s: "\u043f\u04d7\u0440-\u0438\u043a \u04ab\u0435\u043a\u043a\u0443\u043d\u0442",
            ss: "%d \u04ab\u0435\u043a\u043a\u0443\u043d\u0442",
            m: "\u043f\u04d7\u0440 \u043c\u0438\u043d\u0443\u0442",
            mm: "%d \u043c\u0438\u043d\u0443\u0442",
            h: "\u043f\u04d7\u0440 \u0441\u0435\u0445\u0435\u0442",
            hh: "%d \u0441\u0435\u0445\u0435\u0442",
            d: "\u043f\u04d7\u0440 \u043a\u0443\u043d",
            dd: "%d \u043a\u0443\u043d",
            M: "\u043f\u04d7\u0440 \u0443\u0439\u04d1\u0445",
            MM: "%d \u0443\u0439\u04d1\u0445",
            y: "\u043f\u04d7\u0440 \u04ab\u0443\u043b",
            yy: "%d \u04ab\u0443\u043b"
        },
        dayOfMonthOrdinalParse: /\d{1,2}-\u043c\u04d7\u0448/,
        ordinal: "%d-\u043c\u04d7\u0448",
        week: {
            dow: 1,
            doy: 7
        }
    }),
    l.defineLocale("cy", {
        months: "Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr".split("_"),
        monthsShort: "Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag".split("_"),
        weekdays: "Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn".split("_"),
        weekdaysShort: "Sul_Llun_Maw_Mer_Iau_Gwe_Sad".split("_"),
        weekdaysMin: "Su_Ll_Ma_Me_Ia_Gw_Sa".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[Heddiw am] LT",
            nextDay: "[Yfory am] LT",
            nextWeek: "dddd [am] LT",
            lastDay: "[Ddoe am] LT",
            lastWeek: "dddd [diwethaf am] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "mewn %s",
            past: "%s yn \xf4l",
            s: "ychydig eiliadau",
            ss: "%d eiliad",
            m: "munud",
            mm: "%d munud",
            h: "awr",
            hh: "%d awr",
            d: "diwrnod",
            dd: "%d diwrnod",
            M: "mis",
            MM: "%d mis",
            y: "blwyddyn",
            yy: "%d flynedd"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
        ordinal: function(e) {
            var a = "";
            return 20 < e ? a = 40 === e || 50 === e || 60 === e || 80 === e || 100 === e ? "fed" : "ain" : 0 < e && (a = ["", "af", "il", "ydd", "ydd", "ed", "ed", "ed", "fed", "fed", "fed", "eg", "fed", "eg", "eg", "fed", "eg", "eg", "fed", "eg", "fed"][e]),
            e + a
        },
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("da", {
        months: "januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december".split("_"),
        monthsShort: "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split("_"),
        weekdays: "s\xf8ndag_mandag_tirsdag_onsdag_torsdag_fredag_l\xf8rdag".split("_"),
        weekdaysShort: "s\xf8n_man_tir_ons_tor_fre_l\xf8r".split("_"),
        weekdaysMin: "s\xf8_ma_ti_on_to_fr_l\xf8".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY HH:mm",
            LLLL: "dddd [d.] D. MMMM YYYY [kl.] HH:mm"
        },
        calendar: {
            sameDay: "[i dag kl.] LT",
            nextDay: "[i morgen kl.] LT",
            nextWeek: "p\xe5 dddd [kl.] LT",
            lastDay: "[i g\xe5r kl.] LT",
            lastWeek: "[i] dddd[s kl.] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "om %s",
            past: "%s siden",
            s: "f\xe5 sekunder",
            ss: "%d sekunder",
            m: "et minut",
            mm: "%d minutter",
            h: "en time",
            hh: "%d timer",
            d: "en dag",
            dd: "%d dage",
            M: "en m\xe5ned",
            MM: "%d m\xe5neder",
            y: "et \xe5r",
            yy: "%d \xe5r"
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("de-at", {
        months: "J\xe4nner_Februar_M\xe4rz_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
        monthsShort: "J\xe4n._Feb._M\xe4rz_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split("_"),
        monthsParseExact: !0,
        weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),
        weekdaysShort: "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
        weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY HH:mm",
            LLLL: "dddd, D. MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[heute um] LT [Uhr]",
            sameElse: "L",
            nextDay: "[morgen um] LT [Uhr]",
            nextWeek: "dddd [um] LT [Uhr]",
            lastDay: "[gestern um] LT [Uhr]",
            lastWeek: "[letzten] dddd [um] LT [Uhr]"
        },
        relativeTime: {
            future: "in %s",
            past: "vor %s",
            s: "ein paar Sekunden",
            ss: "%d Sekunden",
            m: ps,
            mm: "%d Minuten",
            h: ps,
            hh: "%d Stunden",
            d: ps,
            dd: ps,
            M: ps,
            MM: ps,
            y: ps,
            yy: ps
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("de-ch", {
        months: "Januar_Februar_M\xe4rz_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
        monthsShort: "Jan._Feb._M\xe4rz_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split("_"),
        monthsParseExact: !0,
        weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),
        weekdaysShort: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
        weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY HH:mm",
            LLLL: "dddd, D. MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[heute um] LT [Uhr]",
            sameElse: "L",
            nextDay: "[morgen um] LT [Uhr]",
            nextWeek: "dddd [um] LT [Uhr]",
            lastDay: "[gestern um] LT [Uhr]",
            lastWeek: "[letzten] dddd [um] LT [Uhr]"
        },
        relativeTime: {
            future: "in %s",
            past: "vor %s",
            s: "ein paar Sekunden",
            ss: "%d Sekunden",
            m: Ds,
            mm: "%d Minuten",
            h: Ds,
            hh: "%d Stunden",
            d: Ds,
            dd: Ds,
            M: Ds,
            MM: Ds,
            y: Ds,
            yy: Ds
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("de", {
        months: "Januar_Februar_M\xe4rz_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
        monthsShort: "Jan._Feb._M\xe4rz_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split("_"),
        monthsParseExact: !0,
        weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),
        weekdaysShort: "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
        weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY HH:mm",
            LLLL: "dddd, D. MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[heute um] LT [Uhr]",
            sameElse: "L",
            nextDay: "[morgen um] LT [Uhr]",
            nextWeek: "dddd [um] LT [Uhr]",
            lastDay: "[gestern um] LT [Uhr]",
            lastWeek: "[letzten] dddd [um] LT [Uhr]"
        },
        relativeTime: {
            future: "in %s",
            past: "vor %s",
            s: "ein paar Sekunden",
            ss: "%d Sekunden",
            m: Ts,
            mm: "%d Minuten",
            h: Ts,
            hh: "%d Stunden",
            d: Ts,
            dd: Ts,
            M: Ts,
            MM: Ts,
            y: Ts,
            yy: Ts
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 4
        }
    });
    var gs = ["\u0796\u07ac\u0782\u07aa\u0787\u07a6\u0783\u07a9", "\u078a\u07ac\u0784\u07b0\u0783\u07aa\u0787\u07a6\u0783\u07a9", "\u0789\u07a7\u0783\u07a8\u0797\u07aa", "\u0787\u07ad\u0795\u07b0\u0783\u07a9\u078d\u07aa", "\u0789\u07ad", "\u0796\u07ab\u0782\u07b0", "\u0796\u07aa\u078d\u07a6\u0787\u07a8", "\u0787\u07af\u078e\u07a6\u0790\u07b0\u0793\u07aa", "\u0790\u07ac\u0795\u07b0\u0793\u07ac\u0789\u07b0\u0784\u07a6\u0783\u07aa", "\u0787\u07ae\u0786\u07b0\u0793\u07af\u0784\u07a6\u0783\u07aa", "\u0782\u07ae\u0788\u07ac\u0789\u07b0\u0784\u07a6\u0783\u07aa", "\u0791\u07a8\u0790\u07ac\u0789\u07b0\u0784\u07a6\u0783\u07aa"]
      , ws = ["\u0787\u07a7\u078b\u07a8\u0787\u07b0\u078c\u07a6", "\u0780\u07af\u0789\u07a6", "\u0787\u07a6\u0782\u07b0\u078e\u07a7\u0783\u07a6", "\u0784\u07aa\u078b\u07a6", "\u0784\u07aa\u0783\u07a7\u0790\u07b0\u078a\u07a6\u078c\u07a8", "\u0780\u07aa\u0786\u07aa\u0783\u07aa", "\u0780\u07ae\u0782\u07a8\u0780\u07a8\u0783\u07aa"];
    l.defineLocale("dv", {
        months: gs,
        monthsShort: gs,
        weekdays: ws,
        weekdaysShort: ws,
        weekdaysMin: "\u0787\u07a7\u078b\u07a8_\u0780\u07af\u0789\u07a6_\u0787\u07a6\u0782\u07b0_\u0784\u07aa\u078b\u07a6_\u0784\u07aa\u0783\u07a7_\u0780\u07aa\u0786\u07aa_\u0780\u07ae\u0782\u07a8".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "D/M/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
        },
        meridiemParse: /\u0789\u0786|\u0789\u078a/,
        isPM: function(e) {
            return "\u0789\u078a" === e
        },
        meridiem: function(e, a, t) {
            return e < 12 ? "\u0789\u0786" : "\u0789\u078a"
        },
        calendar: {
            sameDay: "[\u0789\u07a8\u0787\u07a6\u078b\u07aa] LT",
            nextDay: "[\u0789\u07a7\u078b\u07a6\u0789\u07a7] LT",
            nextWeek: "dddd LT",
            lastDay: "[\u0787\u07a8\u0787\u07b0\u0794\u07ac] LT",
            lastWeek: "[\u078a\u07a7\u0787\u07a8\u078c\u07aa\u0788\u07a8] dddd LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "\u078c\u07ac\u0783\u07ad\u078e\u07a6\u0787\u07a8 %s",
            past: "\u0786\u07aa\u0783\u07a8\u0782\u07b0 %s",
            s: "\u0790\u07a8\u0786\u07aa\u0782\u07b0\u078c\u07aa\u0786\u07ae\u0785\u07ac\u0787\u07b0",
            ss: "d% \u0790\u07a8\u0786\u07aa\u0782\u07b0\u078c\u07aa",
            m: "\u0789\u07a8\u0782\u07a8\u0793\u07ac\u0787\u07b0",
            mm: "\u0789\u07a8\u0782\u07a8\u0793\u07aa %d",
            h: "\u078e\u07a6\u0791\u07a8\u0787\u07a8\u0783\u07ac\u0787\u07b0",
            hh: "\u078e\u07a6\u0791\u07a8\u0787\u07a8\u0783\u07aa %d",
            d: "\u078b\u07aa\u0788\u07a6\u0780\u07ac\u0787\u07b0",
            dd: "\u078b\u07aa\u0788\u07a6\u0790\u07b0 %d",
            M: "\u0789\u07a6\u0780\u07ac\u0787\u07b0",
            MM: "\u0789\u07a6\u0790\u07b0 %d",
            y: "\u0787\u07a6\u0780\u07a6\u0783\u07ac\u0787\u07b0",
            yy: "\u0787\u07a6\u0780\u07a6\u0783\u07aa %d"
        },
        preparse: function(e) {
            return e.replace(/\u060c/g, ",")
        },
        postformat: function(e) {
            return e.replace(/,/g, "\u060c")
        },
        week: {
            dow: 7,
            doy: 12
        }
    }),
    l.defineLocale("el", {
        monthsNominativeEl: "\u0399\u03b1\u03bd\u03bf\u03c5\u03ac\u03c1\u03b9\u03bf\u03c2_\u03a6\u03b5\u03b2\u03c1\u03bf\u03c5\u03ac\u03c1\u03b9\u03bf\u03c2_\u039c\u03ac\u03c1\u03c4\u03b9\u03bf\u03c2_\u0391\u03c0\u03c1\u03af\u03bb\u03b9\u03bf\u03c2_\u039c\u03ac\u03b9\u03bf\u03c2_\u0399\u03bf\u03cd\u03bd\u03b9\u03bf\u03c2_\u0399\u03bf\u03cd\u03bb\u03b9\u03bf\u03c2_\u0391\u03cd\u03b3\u03bf\u03c5\u03c3\u03c4\u03bf\u03c2_\u03a3\u03b5\u03c0\u03c4\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2_\u039f\u03ba\u03c4\u03ce\u03b2\u03c1\u03b9\u03bf\u03c2_\u039d\u03bf\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2_\u0394\u03b5\u03ba\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2".split("_"),
        monthsGenitiveEl: "\u0399\u03b1\u03bd\u03bf\u03c5\u03b1\u03c1\u03af\u03bf\u03c5_\u03a6\u03b5\u03b2\u03c1\u03bf\u03c5\u03b1\u03c1\u03af\u03bf\u03c5_\u039c\u03b1\u03c1\u03c4\u03af\u03bf\u03c5_\u0391\u03c0\u03c1\u03b9\u03bb\u03af\u03bf\u03c5_\u039c\u03b1\u0390\u03bf\u03c5_\u0399\u03bf\u03c5\u03bd\u03af\u03bf\u03c5_\u0399\u03bf\u03c5\u03bb\u03af\u03bf\u03c5_\u0391\u03c5\u03b3\u03bf\u03cd\u03c3\u03c4\u03bf\u03c5_\u03a3\u03b5\u03c0\u03c4\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5_\u039f\u03ba\u03c4\u03c9\u03b2\u03c1\u03af\u03bf\u03c5_\u039d\u03bf\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5_\u0394\u03b5\u03ba\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5".split("_"),
        months: function(e, a) {
            return e ? "string" == typeof a && /D/.test(a.substring(0, a.indexOf("MMMM"))) ? this._monthsGenitiveEl[e.month()] : this._monthsNominativeEl[e.month()] : this._monthsNominativeEl
        },
        monthsShort: "\u0399\u03b1\u03bd_\u03a6\u03b5\u03b2_\u039c\u03b1\u03c1_\u0391\u03c0\u03c1_\u039c\u03b1\u03ca_\u0399\u03bf\u03c5\u03bd_\u0399\u03bf\u03c5\u03bb_\u0391\u03c5\u03b3_\u03a3\u03b5\u03c0_\u039f\u03ba\u03c4_\u039d\u03bf\u03b5_\u0394\u03b5\u03ba".split("_"),
        weekdays: "\u039a\u03c5\u03c1\u03b9\u03b1\u03ba\u03ae_\u0394\u03b5\u03c5\u03c4\u03ad\u03c1\u03b1_\u03a4\u03c1\u03af\u03c4\u03b7_\u03a4\u03b5\u03c4\u03ac\u03c1\u03c4\u03b7_\u03a0\u03ad\u03bc\u03c0\u03c4\u03b7_\u03a0\u03b1\u03c1\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae_\u03a3\u03ac\u03b2\u03b2\u03b1\u03c4\u03bf".split("_"),
        weekdaysShort: "\u039a\u03c5\u03c1_\u0394\u03b5\u03c5_\u03a4\u03c1\u03b9_\u03a4\u03b5\u03c4_\u03a0\u03b5\u03bc_\u03a0\u03b1\u03c1_\u03a3\u03b1\u03b2".split("_"),
        weekdaysMin: "\u039a\u03c5_\u0394\u03b5_\u03a4\u03c1_\u03a4\u03b5_\u03a0\u03b5_\u03a0\u03b1_\u03a3\u03b1".split("_"),
        meridiem: function(e, a, t) {
            return 11 < e ? t ? "\u03bc\u03bc" : "\u039c\u039c" : t ? "\u03c0\u03bc" : "\u03a0\u039c"
        },
        isPM: function(e) {
            return "\u03bc" === (e + "").toLowerCase()[0]
        },
        meridiemParse: /[\u03a0\u039c]\.?\u039c?\.?/i,
        longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY h:mm A",
            LLLL: "dddd, D MMMM YYYY h:mm A"
        },
        calendarEl: {
            sameDay: "[\u03a3\u03ae\u03bc\u03b5\u03c1\u03b1 {}] LT",
            nextDay: "[\u0391\u03cd\u03c1\u03b9\u03bf {}] LT",
            nextWeek: "dddd [{}] LT",
            lastDay: "[\u03a7\u03b8\u03b5\u03c2 {}] LT",
            lastWeek: function() {
                switch (this.day()) {
                case 6:
                    return "[\u03c4\u03bf \u03c0\u03c1\u03bf\u03b7\u03b3\u03bf\u03cd\u03bc\u03b5\u03bd\u03bf] dddd [{}] LT";
                default:
                    return "[\u03c4\u03b7\u03bd \u03c0\u03c1\u03bf\u03b7\u03b3\u03bf\u03cd\u03bc\u03b5\u03bd\u03b7] dddd [{}] LT"
                }
            },
            sameElse: "L"
        },
        calendar: function(e, a) {
            var t = this._calendarEl[e]
              , s = a && a.hours();
            return H(t) && (t = t.apply(a)),
            t.replace("{}", s % 12 == 1 ? "\u03c3\u03c4\u03b7" : "\u03c3\u03c4\u03b9\u03c2")
        },
        relativeTime: {
            future: "\u03c3\u03b5 %s",
            past: "%s \u03c0\u03c1\u03b9\u03bd",
            s: "\u03bb\u03af\u03b3\u03b1 \u03b4\u03b5\u03c5\u03c4\u03b5\u03c1\u03cc\u03bb\u03b5\u03c0\u03c4\u03b1",
            ss: "%d \u03b4\u03b5\u03c5\u03c4\u03b5\u03c1\u03cc\u03bb\u03b5\u03c0\u03c4\u03b1",
            m: "\u03ad\u03bd\u03b1 \u03bb\u03b5\u03c0\u03c4\u03cc",
            mm: "%d \u03bb\u03b5\u03c0\u03c4\u03ac",
            h: "\u03bc\u03af\u03b1 \u03ce\u03c1\u03b1",
            hh: "%d \u03ce\u03c1\u03b5\u03c2",
            d: "\u03bc\u03af\u03b1 \u03bc\u03ad\u03c1\u03b1",
            dd: "%d \u03bc\u03ad\u03c1\u03b5\u03c2",
            M: "\u03ad\u03bd\u03b1\u03c2 \u03bc\u03ae\u03bd\u03b1\u03c2",
            MM: "%d \u03bc\u03ae\u03bd\u03b5\u03c2",
            y: "\u03ad\u03bd\u03b1\u03c2 \u03c7\u03c1\u03cc\u03bd\u03bf\u03c2",
            yy: "%d \u03c7\u03c1\u03cc\u03bd\u03b9\u03b1"
        },
        dayOfMonthOrdinalParse: /\d{1,2}\u03b7/,
        ordinal: "%d\u03b7",
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("en-SG", {
        months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
        monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
        weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
        weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
        weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[Last] dddd [at] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            ss: "%d seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function(e) {
            var a = e % 10;
            return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === a ? "st" : 2 === a ? "nd" : 3 === a ? "rd" : "th")
        },
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("en-au", {
        months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
        monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
        weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
        weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
        weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
        longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY h:mm A",
            LLLL: "dddd, D MMMM YYYY h:mm A"
        },
        calendar: {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[Last] dddd [at] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            ss: "%d seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function(e) {
            var a = e % 10;
            return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === a ? "st" : 2 === a ? "nd" : 3 === a ? "rd" : "th")
        },
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("en-ca", {
        months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
        monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
        weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
        weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
        weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
        longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "YYYY-MM-DD",
            LL: "MMMM D, YYYY",
            LLL: "MMMM D, YYYY h:mm A",
            LLLL: "dddd, MMMM D, YYYY h:mm A"
        },
        calendar: {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[Last] dddd [at] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            ss: "%d seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function(e) {
            var a = e % 10;
            return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === a ? "st" : 2 === a ? "nd" : 3 === a ? "rd" : "th")
        }
    }),
    l.defineLocale("en-gb", {
        months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
        monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
        weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
        weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
        weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[Last] dddd [at] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            ss: "%d seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function(e) {
            var a = e % 10;
            return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === a ? "st" : 2 === a ? "nd" : 3 === a ? "rd" : "th")
        },
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("en-ie", {
        months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
        monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
        weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
        weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
        weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[Last] dddd [at] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            ss: "%d seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function(e) {
            var a = e % 10;
            return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === a ? "st" : 2 === a ? "nd" : 3 === a ? "rd" : "th")
        },
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("en-il", {
        months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
        monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
        weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
        weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
        weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[Last] dddd [at] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function(e) {
            var a = e % 10;
            return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === a ? "st" : 2 === a ? "nd" : 3 === a ? "rd" : "th")
        }
    }),
    l.defineLocale("en-nz", {
        months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
        monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
        weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
        weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
        weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
        longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY h:mm A",
            LLLL: "dddd, D MMMM YYYY h:mm A"
        },
        calendar: {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[Last] dddd [at] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            ss: "%d seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function(e) {
            var a = e % 10;
            return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === a ? "st" : 2 === a ? "nd" : 3 === a ? "rd" : "th")
        },
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("eo", {
        months: "januaro_februaro_marto_aprilo_majo_junio_julio_a\u016dgusto_septembro_oktobro_novembro_decembro".split("_"),
        monthsShort: "jan_feb_mar_apr_maj_jun_jul_a\u016dg_sep_okt_nov_dec".split("_"),
        weekdays: "diman\u0109o_lundo_mardo_merkredo_\u0135a\u016ddo_vendredo_sabato".split("_"),
        weekdaysShort: "dim_lun_mard_merk_\u0135a\u016d_ven_sab".split("_"),
        weekdaysMin: "di_lu_ma_me_\u0135a_ve_sa".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY-MM-DD",
            LL: "D[-a de] MMMM, YYYY",
            LLL: "D[-a de] MMMM, YYYY HH:mm",
            LLLL: "dddd, [la] D[-a de] MMMM, YYYY HH:mm"
        },
        meridiemParse: /[ap]\.t\.m/i,
        isPM: function(e) {
            return "p" === e.charAt(0).toLowerCase()
        },
        meridiem: function(e, a, t) {
            return 11 < e ? t ? "p.t.m." : "P.T.M." : t ? "a.t.m." : "A.T.M."
        },
        calendar: {
            sameDay: "[Hodia\u016d je] LT",
            nextDay: "[Morga\u016d je] LT",
            nextWeek: "dddd [je] LT",
            lastDay: "[Hiera\u016d je] LT",
            lastWeek: "[pasinta] dddd [je] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "post %s",
            past: "anta\u016d %s",
            s: "sekundoj",
            ss: "%d sekundoj",
            m: "minuto",
            mm: "%d minutoj",
            h: "horo",
            hh: "%d horoj",
            d: "tago",
            dd: "%d tagoj",
            M: "monato",
            MM: "%d monatoj",
            y: "jaro",
            yy: "%d jaroj"
        },
        dayOfMonthOrdinalParse: /\d{1,2}a/,
        ordinal: "%da",
        week: {
            dow: 1,
            doy: 7
        }
    });
    var vs = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_")
      , Ss = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_")
      , Hs = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i]
      , bs = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
    l.defineLocale("es-do", {
        months: "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),
        monthsShort: function(e, a) {
            return e ? /-MMM-/.test(a) ? Ss[e.month()] : vs[e.month()] : vs
        },
        monthsRegex: bs,
        monthsShortRegex: bs,
        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse: Hs,
        longMonthsParse: Hs,
        shortMonthsParse: Hs,
        weekdays: "domingo_lunes_martes_mi\xe9rcoles_jueves_viernes_s\xe1bado".split("_"),
        weekdaysShort: "dom._lun._mar._mi\xe9._jue._vie._s\xe1b.".split("_"),
        weekdaysMin: "do_lu_ma_mi_ju_vi_s\xe1".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "DD/MM/YYYY",
            LL: "D [de] MMMM [de] YYYY",
            LLL: "D [de] MMMM [de] YYYY h:mm A",
            LLLL: "dddd, D [de] MMMM [de] YYYY h:mm A"
        },
        calendar: {
            sameDay: function() {
                return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT"
            },
            nextDay: function() {
                return "[ma\xf1ana a la" + (1 !== this.hours() ? "s" : "") + "] LT"
            },
            nextWeek: function() {
                return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT"
            },
            lastDay: function() {
                return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT"
            },
            lastWeek: function() {
                return "[el] dddd [pasado a la" + (1 !== this.hours() ? "s" : "") + "] LT"
            },
            sameElse: "L"
        },
        relativeTime: {
            future: "en %s",
            past: "hace %s",
            s: "unos segundos",
            ss: "%d segundos",
            m: "un minuto",
            mm: "%d minutos",
            h: "una hora",
            hh: "%d horas",
            d: "un d\xeda",
            dd: "%d d\xedas",
            M: "un mes",
            MM: "%d meses",
            y: "un a\xf1o",
            yy: "%d a\xf1os"
        },
        dayOfMonthOrdinalParse: /\d{1,2}\xba/,
        ordinal: "%d\xba",
        week: {
            dow: 1,
            doy: 4
        }
    });
    var js = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_")
      , xs = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_")
      , Os = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i]
      , Ps = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
    l.defineLocale("es-us", {
        months: "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),
        monthsShort: function(e, a) {
            return e ? /-MMM-/.test(a) ? xs[e.month()] : js[e.month()] : js
        },
        monthsRegex: Ps,
        monthsShortRegex: Ps,
        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse: Os,
        longMonthsParse: Os,
        shortMonthsParse: Os,
        weekdays: "domingo_lunes_martes_mi\xe9rcoles_jueves_viernes_s\xe1bado".split("_"),
        weekdaysShort: "dom._lun._mar._mi\xe9._jue._vie._s\xe1b.".split("_"),
        weekdaysMin: "do_lu_ma_mi_ju_vi_s\xe1".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "MM/DD/YYYY",
            LL: "D [de] MMMM [de] YYYY",
            LLL: "D [de] MMMM [de] YYYY h:mm A",
            LLLL: "dddd, D [de] MMMM [de] YYYY h:mm A"
        },
        calendar: {
            sameDay: function() {
                return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT"
            },
            nextDay: function() {
                return "[ma\xf1ana a la" + (1 !== this.hours() ? "s" : "") + "] LT"
            },
            nextWeek: function() {
                return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT"
            },
            lastDay: function() {
                return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT"
            },
            lastWeek: function() {
                return "[el] dddd [pasado a la" + (1 !== this.hours() ? "s" : "") + "] LT"
            },
            sameElse: "L"
        },
        relativeTime: {
            future: "en %s",
            past: "hace %s",
            s: "unos segundos",
            ss: "%d segundos",
            m: "un minuto",
            mm: "%d minutos",
            h: "una hora",
            hh: "%d horas",
            d: "un d\xeda",
            dd: "%d d\xedas",
            M: "un mes",
            MM: "%d meses",
            y: "un a\xf1o",
            yy: "%d a\xf1os"
        },
        dayOfMonthOrdinalParse: /\d{1,2}\xba/,
        ordinal: "%d\xba",
        week: {
            dow: 0,
            doy: 6
        }
    });
    var Ws = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_")
      , As = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_")
      , Es = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i]
      , Fs = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
    function zs(e, a, t, s) {
        var n = {
            s: ["m\xf5ne sekundi", "m\xf5ni sekund", "paar sekundit"],
            ss: [e + "sekundi", e + "sekundit"],
            m: ["\xfche minuti", "\xfcks minut"],
            mm: [e + " minuti", e + " minutit"],
            h: ["\xfche tunni", "tund aega", "\xfcks tund"],
            hh: [e + " tunni", e + " tundi"],
            d: ["\xfche p\xe4eva", "\xfcks p\xe4ev"],
            M: ["kuu aja", "kuu aega", "\xfcks kuu"],
            MM: [e + " kuu", e + " kuud"],
            y: ["\xfche aasta", "aasta", "\xfcks aasta"],
            yy: [e + " aasta", e + " aastat"]
        };
        return a ? n[t][2] ? n[t][2] : n[t][1] : s ? n[t][0] : n[t][1]
    }
    l.defineLocale("es", {
        months: "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),
        monthsShort: function(e, a) {
            return e ? /-MMM-/.test(a) ? As[e.month()] : Ws[e.month()] : Ws
        },
        monthsRegex: Fs,
        monthsShortRegex: Fs,
        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse: Es,
        longMonthsParse: Es,
        shortMonthsParse: Es,
        weekdays: "domingo_lunes_martes_mi\xe9rcoles_jueves_viernes_s\xe1bado".split("_"),
        weekdaysShort: "dom._lun._mar._mi\xe9._jue._vie._s\xe1b.".split("_"),
        weekdaysMin: "do_lu_ma_mi_ju_vi_s\xe1".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D [de] MMMM [de] YYYY",
            LLL: "D [de] MMMM [de] YYYY H:mm",
            LLLL: "dddd, D [de] MMMM [de] YYYY H:mm"
        },
        calendar: {
            sameDay: function() {
                return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT"
            },
            nextDay: function() {
                return "[ma\xf1ana a la" + (1 !== this.hours() ? "s" : "") + "] LT"
            },
            nextWeek: function() {
                return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT"
            },
            lastDay: function() {
                return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT"
            },
            lastWeek: function() {
                return "[el] dddd [pasado a la" + (1 !== this.hours() ? "s" : "") + "] LT"
            },
            sameElse: "L"
        },
        relativeTime: {
            future: "en %s",
            past: "hace %s",
            s: "unos segundos",
            ss: "%d segundos",
            m: "un minuto",
            mm: "%d minutos",
            h: "una hora",
            hh: "%d horas",
            d: "un d\xeda",
            dd: "%d d\xedas",
            M: "un mes",
            MM: "%d meses",
            y: "un a\xf1o",
            yy: "%d a\xf1os"
        },
        dayOfMonthOrdinalParse: /\d{1,2}\xba/,
        ordinal: "%d\xba",
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("et", {
        months: "jaanuar_veebruar_m\xe4rts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember".split("_"),
        monthsShort: "jaan_veebr_m\xe4rts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets".split("_"),
        weekdays: "p\xfchap\xe4ev_esmasp\xe4ev_teisip\xe4ev_kolmap\xe4ev_neljap\xe4ev_reede_laup\xe4ev".split("_"),
        weekdaysShort: "P_E_T_K_N_R_L".split("_"),
        weekdaysMin: "P_E_T_K_N_R_L".split("_"),
        longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd, D. MMMM YYYY H:mm"
        },
        calendar: {
            sameDay: "[T\xe4na,] LT",
            nextDay: "[Homme,] LT",
            nextWeek: "[J\xe4rgmine] dddd LT",
            lastDay: "[Eile,] LT",
            lastWeek: "[Eelmine] dddd LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s p\xe4rast",
            past: "%s tagasi",
            s: zs,
            ss: zs,
            m: zs,
            mm: zs,
            h: zs,
            hh: zs,
            d: zs,
            dd: "%d p\xe4eva",
            M: zs,
            MM: zs,
            y: zs,
            yy: zs
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("eu", {
        months: "urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua".split("_"),
        monthsShort: "urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.".split("_"),
        monthsParseExact: !0,
        weekdays: "igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata".split("_"),
        weekdaysShort: "ig._al._ar._az._og._ol._lr.".split("_"),
        weekdaysMin: "ig_al_ar_az_og_ol_lr".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY-MM-DD",
            LL: "YYYY[ko] MMMM[ren] D[a]",
            LLL: "YYYY[ko] MMMM[ren] D[a] HH:mm",
            LLLL: "dddd, YYYY[ko] MMMM[ren] D[a] HH:mm",
            l: "YYYY-M-D",
            ll: "YYYY[ko] MMM D[a]",
            lll: "YYYY[ko] MMM D[a] HH:mm",
            llll: "ddd, YYYY[ko] MMM D[a] HH:mm"
        },
        calendar: {
            sameDay: "[gaur] LT[etan]",
            nextDay: "[bihar] LT[etan]",
            nextWeek: "dddd LT[etan]",
            lastDay: "[atzo] LT[etan]",
            lastWeek: "[aurreko] dddd LT[etan]",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s barru",
            past: "duela %s",
            s: "segundo batzuk",
            ss: "%d segundo",
            m: "minutu bat",
            mm: "%d minutu",
            h: "ordu bat",
            hh: "%d ordu",
            d: "egun bat",
            dd: "%d egun",
            M: "hilabete bat",
            MM: "%d hilabete",
            y: "urte bat",
            yy: "%d urte"
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 7
        }
    });
    var Js = {
        1: "\u06f1",
        2: "\u06f2",
        3: "\u06f3",
        4: "\u06f4",
        5: "\u06f5",
        6: "\u06f6",
        7: "\u06f7",
        8: "\u06f8",
        9: "\u06f9",
        0: "\u06f0"
    }
      , Ns = {
        "\u06f1": "1",
        "\u06f2": "2",
        "\u06f3": "3",
        "\u06f4": "4",
        "\u06f5": "5",
        "\u06f6": "6",
        "\u06f7": "7",
        "\u06f8": "8",
        "\u06f9": "9",
        "\u06f0": "0"
    };
    l.defineLocale("fa", {
        months: "\u0698\u0627\u0646\u0648\u06cc\u0647_\u0641\u0648\u0631\u06cc\u0647_\u0645\u0627\u0631\u0633_\u0622\u0648\u0631\u06cc\u0644_\u0645\u0647_\u0698\u0648\u0626\u0646_\u0698\u0648\u0626\u06cc\u0647_\u0627\u0648\u062a_\u0633\u067e\u062a\u0627\u0645\u0628\u0631_\u0627\u06a9\u062a\u0628\u0631_\u0646\u0648\u0627\u0645\u0628\u0631_\u062f\u0633\u0627\u0645\u0628\u0631".split("_"),
        monthsShort: "\u0698\u0627\u0646\u0648\u06cc\u0647_\u0641\u0648\u0631\u06cc\u0647_\u0645\u0627\u0631\u0633_\u0622\u0648\u0631\u06cc\u0644_\u0645\u0647_\u0698\u0648\u0626\u0646_\u0698\u0648\u0626\u06cc\u0647_\u0627\u0648\u062a_\u0633\u067e\u062a\u0627\u0645\u0628\u0631_\u0627\u06a9\u062a\u0628\u0631_\u0646\u0648\u0627\u0645\u0628\u0631_\u062f\u0633\u0627\u0645\u0628\u0631".split("_"),
        weekdays: "\u06cc\u06a9\u200c\u0634\u0646\u0628\u0647_\u062f\u0648\u0634\u0646\u0628\u0647_\u0633\u0647\u200c\u0634\u0646\u0628\u0647_\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647_\u067e\u0646\u062c\u200c\u0634\u0646\u0628\u0647_\u062c\u0645\u0639\u0647_\u0634\u0646\u0628\u0647".split("_"),
        weekdaysShort: "\u06cc\u06a9\u200c\u0634\u0646\u0628\u0647_\u062f\u0648\u0634\u0646\u0628\u0647_\u0633\u0647\u200c\u0634\u0646\u0628\u0647_\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647_\u067e\u0646\u062c\u200c\u0634\u0646\u0628\u0647_\u062c\u0645\u0639\u0647_\u0634\u0646\u0628\u0647".split("_"),
        weekdaysMin: "\u06cc_\u062f_\u0633_\u0686_\u067e_\u062c_\u0634".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        meridiemParse: /\u0642\u0628\u0644 \u0627\u0632 \u0638\u0647\u0631|\u0628\u0639\u062f \u0627\u0632 \u0638\u0647\u0631/,
        isPM: function(e) {
            return /\u0628\u0639\u062f \u0627\u0632 \u0638\u0647\u0631/.test(e)
        },
        meridiem: function(e, a, t) {
            return e < 12 ? "\u0642\u0628\u0644 \u0627\u0632 \u0638\u0647\u0631" : "\u0628\u0639\u062f \u0627\u0632 \u0638\u0647\u0631"
        },
        calendar: {
            sameDay: "[\u0627\u0645\u0631\u0648\u0632 \u0633\u0627\u0639\u062a] LT",
            nextDay: "[\u0641\u0631\u062f\u0627 \u0633\u0627\u0639\u062a] LT",
            nextWeek: "dddd [\u0633\u0627\u0639\u062a] LT",
            lastDay: "[\u062f\u06cc\u0631\u0648\u0632 \u0633\u0627\u0639\u062a] LT",
            lastWeek: "dddd [\u067e\u06cc\u0634] [\u0633\u0627\u0639\u062a] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "\u062f\u0631 %s",
            past: "%s \u067e\u06cc\u0634",
            s: "\u0686\u0646\u062f \u062b\u0627\u0646\u06cc\u0647",
            ss: "\u062b\u0627\u0646\u06cc\u0647 d%",
            m: "\u06cc\u06a9 \u062f\u0642\u06cc\u0642\u0647",
            mm: "%d \u062f\u0642\u06cc\u0642\u0647",
            h: "\u06cc\u06a9 \u0633\u0627\u0639\u062a",
            hh: "%d \u0633\u0627\u0639\u062a",
            d: "\u06cc\u06a9 \u0631\u0648\u0632",
            dd: "%d \u0631\u0648\u0632",
            M: "\u06cc\u06a9 \u0645\u0627\u0647",
            MM: "%d \u0645\u0627\u0647",
            y: "\u06cc\u06a9 \u0633\u0627\u0644",
            yy: "%d \u0633\u0627\u0644"
        },
        preparse: function(e) {
            return e.replace(/[\u06f0-\u06f9]/g, function(e) {
                return Ns[e]
            }).replace(/\u060c/g, ",")
        },
        postformat: function(e) {
            return e.replace(/\d/g, function(e) {
                return Js[e]
            }).replace(/,/g, "\u060c")
        },
        dayOfMonthOrdinalParse: /\d{1,2}\u0645/,
        ordinal: "%d\u0645",
        week: {
            dow: 6,
            doy: 12
        }
    });
    var Rs = "nolla yksi kaksi kolme nelj\xe4 viisi kuusi seitsem\xe4n kahdeksan yhdeks\xe4n".split(" ")
      , Cs = ["nolla", "yhden", "kahden", "kolmen", "nelj\xe4n", "viiden", "kuuden", Rs[7], Rs[8], Rs[9]];
    function Is(e, a, t, s) {
        var n, d, r = "";
        switch (t) {
        case "s":
            return s ? "muutaman sekunnin" : "muutama sekunti";
        case "ss":
            return s ? "sekunnin" : "sekuntia";
        case "m":
            return s ? "minuutin" : "minuutti";
        case "mm":
            r = s ? "minuutin" : "minuuttia";
            break;
        case "h":
            return s ? "tunnin" : "tunti";
        case "hh":
            r = s ? "tunnin" : "tuntia";
            break;
        case "d":
            return s ? "p\xe4iv\xe4n" : "p\xe4iv\xe4";
        case "dd":
            r = s ? "p\xe4iv\xe4n" : "p\xe4iv\xe4\xe4";
            break;
        case "M":
            return s ? "kuukauden" : "kuukausi";
        case "MM":
            r = s ? "kuukauden" : "kuukautta";
            break;
        case "y":
            return s ? "vuoden" : "vuosi";
        case "yy":
            r = s ? "vuoden" : "vuotta";
            break
        }
        return d = s,
        r = ((n = e) < 10 ? d ? Cs[n] : Rs[n] : n) + " " + r
    }
    l.defineLocale("fi", {
        months: "tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kes\xe4kuu_hein\xe4kuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu".split("_"),
        monthsShort: "tammi_helmi_maalis_huhti_touko_kes\xe4_hein\xe4_elo_syys_loka_marras_joulu".split("_"),
        weekdays: "sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai".split("_"),
        weekdaysShort: "su_ma_ti_ke_to_pe_la".split("_"),
        weekdaysMin: "su_ma_ti_ke_to_pe_la".split("_"),
        longDateFormat: {
            LT: "HH.mm",
            LTS: "HH.mm.ss",
            L: "DD.MM.YYYY",
            LL: "Do MMMM[ta] YYYY",
            LLL: "Do MMMM[ta] YYYY, [klo] HH.mm",
            LLLL: "dddd, Do MMMM[ta] YYYY, [klo] HH.mm",
            l: "D.M.YYYY",
            ll: "Do MMM YYYY",
            lll: "Do MMM YYYY, [klo] HH.mm",
            llll: "ddd, Do MMM YYYY, [klo] HH.mm"
        },
        calendar: {
            sameDay: "[t\xe4n\xe4\xe4n] [klo] LT",
            nextDay: "[huomenna] [klo] LT",
            nextWeek: "dddd [klo] LT",
            lastDay: "[eilen] [klo] LT",
            lastWeek: "[viime] dddd[na] [klo] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s p\xe4\xe4st\xe4",
            past: "%s sitten",
            s: Is,
            ss: Is,
            m: Is,
            mm: Is,
            h: Is,
            hh: Is,
            d: Is,
            dd: Is,
            M: Is,
            MM: Is,
            y: Is,
            yy: Is
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("fo", {
        months: "januar_februar_mars_apr\xedl_mai_juni_juli_august_september_oktober_november_desember".split("_"),
        monthsShort: "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"),
        weekdays: "sunnudagur_m\xe1nadagur_t\xfdsdagur_mikudagur_h\xf3sdagur_fr\xedggjadagur_leygardagur".split("_"),
        weekdaysShort: "sun_m\xe1n_t\xfds_mik_h\xf3s_fr\xed_ley".split("_"),
        weekdaysMin: "su_m\xe1_t\xfd_mi_h\xf3_fr_le".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D. MMMM, YYYY HH:mm"
        },
        calendar: {
            sameDay: "[\xcd dag kl.] LT",
            nextDay: "[\xcd morgin kl.] LT",
            nextWeek: "dddd [kl.] LT",
            lastDay: "[\xcd gj\xe1r kl.] LT",
            lastWeek: "[s\xed\xf0stu] dddd [kl] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "um %s",
            past: "%s s\xed\xf0ani",
            s: "f\xe1 sekund",
            ss: "%d sekundir",
            m: "ein minuttur",
            mm: "%d minuttir",
            h: "ein t\xedmi",
            hh: "%d t\xedmar",
            d: "ein dagur",
            dd: "%d dagar",
            M: "ein m\xe1na\xf0ur",
            MM: "%d m\xe1na\xf0ir",
            y: "eitt \xe1r",
            yy: "%d \xe1r"
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("fr-ca", {
        months: "janvier_f\xe9vrier_mars_avril_mai_juin_juillet_ao\xfbt_septembre_octobre_novembre_d\xe9cembre".split("_"),
        monthsShort: "janv._f\xe9vr._mars_avr._mai_juin_juil._ao\xfbt_sept._oct._nov._d\xe9c.".split("_"),
        monthsParseExact: !0,
        weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
        weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
        weekdaysMin: "di_lu_ma_me_je_ve_sa".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY-MM-DD",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[Aujourd\u2019hui \xe0] LT",
            nextDay: "[Demain \xe0] LT",
            nextWeek: "dddd [\xe0] LT",
            lastDay: "[Hier \xe0] LT",
            lastWeek: "dddd [dernier \xe0] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "dans %s",
            past: "il y a %s",
            s: "quelques secondes",
            ss: "%d secondes",
            m: "une minute",
            mm: "%d minutes",
            h: "une heure",
            hh: "%d heures",
            d: "un jour",
            dd: "%d jours",
            M: "un mois",
            MM: "%d mois",
            y: "un an",
            yy: "%d ans"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
        ordinal: function(e, a) {
            switch (a) {
            default:
            case "M":
            case "Q":
            case "D":
            case "DDD":
            case "d":
                return e + (1 === e ? "er" : "e");
            case "w":
            case "W":
                return e + (1 === e ? "re" : "e")
            }
        }
    }),
    l.defineLocale("fr-ch", {
        months: "janvier_f\xe9vrier_mars_avril_mai_juin_juillet_ao\xfbt_septembre_octobre_novembre_d\xe9cembre".split("_"),
        monthsShort: "janv._f\xe9vr._mars_avr._mai_juin_juil._ao\xfbt_sept._oct._nov._d\xe9c.".split("_"),
        monthsParseExact: !0,
        weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
        weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
        weekdaysMin: "di_lu_ma_me_je_ve_sa".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[Aujourd\u2019hui \xe0] LT",
            nextDay: "[Demain \xe0] LT",
            nextWeek: "dddd [\xe0] LT",
            lastDay: "[Hier \xe0] LT",
            lastWeek: "dddd [dernier \xe0] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "dans %s",
            past: "il y a %s",
            s: "quelques secondes",
            ss: "%d secondes",
            m: "une minute",
            mm: "%d minutes",
            h: "une heure",
            hh: "%d heures",
            d: "un jour",
            dd: "%d jours",
            M: "un mois",
            MM: "%d mois",
            y: "un an",
            yy: "%d ans"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
        ordinal: function(e, a) {
            switch (a) {
            default:
            case "M":
            case "Q":
            case "D":
            case "DDD":
            case "d":
                return e + (1 === e ? "er" : "e");
            case "w":
            case "W":
                return e + (1 === e ? "re" : "e")
            }
        },
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("fr", {
        months: "janvier_f\xe9vrier_mars_avril_mai_juin_juillet_ao\xfbt_septembre_octobre_novembre_d\xe9cembre".split("_"),
        monthsShort: "janv._f\xe9vr._mars_avr._mai_juin_juil._ao\xfbt_sept._oct._nov._d\xe9c.".split("_"),
        monthsParseExact: !0,
        weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
        weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
        weekdaysMin: "di_lu_ma_me_je_ve_sa".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[Aujourd\u2019hui \xe0] LT",
            nextDay: "[Demain \xe0] LT",
            nextWeek: "dddd [\xe0] LT",
            lastDay: "[Hier \xe0] LT",
            lastWeek: "dddd [dernier \xe0] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "dans %s",
            past: "il y a %s",
            s: "quelques secondes",
            ss: "%d secondes",
            m: "une minute",
            mm: "%d minutes",
            h: "une heure",
            hh: "%d heures",
            d: "un jour",
            dd: "%d jours",
            M: "un mois",
            MM: "%d mois",
            y: "un an",
            yy: "%d ans"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
        ordinal: function(e, a) {
            switch (a) {
            case "D":
                return e + (1 === e ? "er" : "");
            default:
            case "M":
            case "Q":
            case "DDD":
            case "d":
                return e + (1 === e ? "er" : "e");
            case "w":
            case "W":
                return e + (1 === e ? "re" : "e")
            }
        },
        week: {
            dow: 1,
            doy: 4
        }
    });
    var Us = "jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.".split("_")
      , Gs = "jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_");
    l.defineLocale("fy", {
        months: "jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber".split("_"),
        monthsShort: function(e, a) {
            return e ? /-MMM-/.test(a) ? Gs[e.month()] : Us[e.month()] : Us
        },
        monthsParseExact: !0,
        weekdays: "snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon".split("_"),
        weekdaysShort: "si._mo._ti._wo._to._fr._so.".split("_"),
        weekdaysMin: "Si_Mo_Ti_Wo_To_Fr_So".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD-MM-YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[hjoed om] LT",
            nextDay: "[moarn om] LT",
            nextWeek: "dddd [om] LT",
            lastDay: "[juster om] LT",
            lastWeek: "[\xf4fr\xfbne] dddd [om] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "oer %s",
            past: "%s lyn",
            s: "in pear sekonden",
            ss: "%d sekonden",
            m: "ien min\xfat",
            mm: "%d minuten",
            h: "ien oere",
            hh: "%d oeren",
            d: "ien dei",
            dd: "%d dagen",
            M: "ien moanne",
            MM: "%d moannen",
            y: "ien jier",
            yy: "%d jierren"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal: function(e) {
            return e + (1 === e || 8 === e || 20 <= e ? "ste" : "de")
        },
        week: {
            dow: 1,
            doy: 4
        }
    });
    l.defineLocale("ga", {
        months: ["Ean\xe1ir", "Feabhra", "M\xe1rta", "Aibre\xe1n", "Bealtaine", "M\xe9itheamh", "I\xfail", "L\xfanasa", "Me\xe1n F\xf3mhair", "Deaireadh F\xf3mhair", "Samhain", "Nollaig"],
        monthsShort: ["Ean\xe1", "Feab", "M\xe1rt", "Aibr", "Beal", "M\xe9it", "I\xfail", "L\xfana", "Me\xe1n", "Deai", "Samh", "Noll"],
        monthsParseExact: !0,
        weekdays: ["D\xe9 Domhnaigh", "D\xe9 Luain", "D\xe9 M\xe1irt", "D\xe9 C\xe9adaoin", "D\xe9ardaoin", "D\xe9 hAoine", "D\xe9 Satharn"],
        weekdaysShort: ["Dom", "Lua", "M\xe1i", "C\xe9a", "D\xe9a", "hAo", "Sat"],
        weekdaysMin: ["Do", "Lu", "M\xe1", "Ce", "D\xe9", "hA", "Sa"],
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[Inniu ag] LT",
            nextDay: "[Am\xe1rach ag] LT",
            nextWeek: "dddd [ag] LT",
            lastDay: "[Inn\xe9 aig] LT",
            lastWeek: "dddd [seo caite] [ag] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "i %s",
            past: "%s \xf3 shin",
            s: "c\xfapla soicind",
            ss: "%d soicind",
            m: "n\xf3im\xe9ad",
            mm: "%d n\xf3im\xe9ad",
            h: "uair an chloig",
            hh: "%d uair an chloig",
            d: "l\xe1",
            dd: "%d l\xe1",
            M: "m\xed",
            MM: "%d m\xed",
            y: "bliain",
            yy: "%d bliain"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
        ordinal: function(e) {
            return e + (1 === e ? "d" : e % 10 == 2 ? "na" : "mh")
        },
        week: {
            dow: 1,
            doy: 4
        }
    });
    function Vs(e, a, t, s) {
        var n = {
            s: ["thodde secondanim", "thodde second"],
            ss: [e + " secondanim", e + " second"],
            m: ["eka mintan", "ek minute"],
            mm: [e + " mintanim", e + " mintam"],
            h: ["eka voran", "ek vor"],
            hh: [e + " voranim", e + " voram"],
            d: ["eka disan", "ek dis"],
            dd: [e + " disanim", e + " dis"],
            M: ["eka mhoinean", "ek mhoino"],
            MM: [e + " mhoineanim", e + " mhoine"],
            y: ["eka vorsan", "ek voros"],
            yy: [e + " vorsanim", e + " vorsam"]
        };
        return a ? n[t][0] : n[t][1]
    }
    l.defineLocale("gd", {
        months: ["Am Faoilleach", "An Gearran", "Am M\xe0rt", "An Giblean", "An C\xe8itean", "An t-\xd2gmhios", "An t-Iuchar", "An L\xf9nastal", "An t-Sultain", "An D\xe0mhair", "An t-Samhain", "An D\xf9bhlachd"],
        monthsShort: ["Faoi", "Gear", "M\xe0rt", "Gibl", "C\xe8it", "\xd2gmh", "Iuch", "L\xf9n", "Sult", "D\xe0mh", "Samh", "D\xf9bh"],
        monthsParseExact: !0,
        weekdays: ["Did\xf2mhnaich", "Diluain", "Dim\xe0irt", "Diciadain", "Diardaoin", "Dihaoine", "Disathairne"],
        weekdaysShort: ["Did", "Dil", "Dim", "Dic", "Dia", "Dih", "Dis"],
        weekdaysMin: ["D\xf2", "Lu", "M\xe0", "Ci", "Ar", "Ha", "Sa"],
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[An-diugh aig] LT",
            nextDay: "[A-m\xe0ireach aig] LT",
            nextWeek: "dddd [aig] LT",
            lastDay: "[An-d\xe8 aig] LT",
            lastWeek: "dddd [seo chaidh] [aig] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "ann an %s",
            past: "bho chionn %s",
            s: "beagan diogan",
            ss: "%d diogan",
            m: "mionaid",
            mm: "%d mionaidean",
            h: "uair",
            hh: "%d uairean",
            d: "latha",
            dd: "%d latha",
            M: "m\xecos",
            MM: "%d m\xecosan",
            y: "bliadhna",
            yy: "%d bliadhna"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
        ordinal: function(e) {
            return e + (1 === e ? "d" : e % 10 == 2 ? "na" : "mh")
        },
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("gl", {
        months: "xaneiro_febreiro_marzo_abril_maio_xu\xf1o_xullo_agosto_setembro_outubro_novembro_decembro".split("_"),
        monthsShort: "xan._feb._mar._abr._mai._xu\xf1._xul._ago._set._out._nov._dec.".split("_"),
        monthsParseExact: !0,
        weekdays: "domingo_luns_martes_m\xe9rcores_xoves_venres_s\xe1bado".split("_"),
        weekdaysShort: "dom._lun._mar._m\xe9r._xov._ven._s\xe1b.".split("_"),
        weekdaysMin: "do_lu_ma_m\xe9_xo_ve_s\xe1".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D [de] MMMM [de] YYYY",
            LLL: "D [de] MMMM [de] YYYY H:mm",
            LLLL: "dddd, D [de] MMMM [de] YYYY H:mm"
        },
        calendar: {
            sameDay: function() {
                return "[hoxe " + (1 !== this.hours() ? "\xe1s" : "\xe1") + "] LT"
            },
            nextDay: function() {
                return "[ma\xf1\xe1 " + (1 !== this.hours() ? "\xe1s" : "\xe1") + "] LT"
            },
            nextWeek: function() {
                return "dddd [" + (1 !== this.hours() ? "\xe1s" : "a") + "] LT"
            },
            lastDay: function() {
                return "[onte " + (1 !== this.hours() ? "\xe1" : "a") + "] LT"
            },
            lastWeek: function() {
                return "[o] dddd [pasado " + (1 !== this.hours() ? "\xe1s" : "a") + "] LT"
            },
            sameElse: "L"
        },
        relativeTime: {
            future: function(e) {
                return 0 === e.indexOf("un") ? "n" + e : "en " + e
            },
            past: "hai %s",
            s: "uns segundos",
            ss: "%d segundos",
            m: "un minuto",
            mm: "%d minutos",
            h: "unha hora",
            hh: "%d horas",
            d: "un d\xeda",
            dd: "%d d\xedas",
            M: "un mes",
            MM: "%d meses",
            y: "un ano",
            yy: "%d anos"
        },
        dayOfMonthOrdinalParse: /\d{1,2}\xba/,
        ordinal: "%d\xba",
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("gom-latn", {
        months: "Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr".split("_"),
        monthsShort: "Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.".split("_"),
        monthsParseExact: !0,
        weekdays: "Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son'var".split("_"),
        weekdaysShort: "Ait._Som._Mon._Bud._Bre._Suk._Son.".split("_"),
        weekdaysMin: "Ai_Sm_Mo_Bu_Br_Su_Sn".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "A h:mm [vazta]",
            LTS: "A h:mm:ss [vazta]",
            L: "DD-MM-YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY A h:mm [vazta]",
            LLLL: "dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]",
            llll: "ddd, D MMM YYYY, A h:mm [vazta]"
        },
        calendar: {
            sameDay: "[Aiz] LT",
            nextDay: "[Faleam] LT",
            nextWeek: "[Ieta to] dddd[,] LT",
            lastDay: "[Kal] LT",
            lastWeek: "[Fatlo] dddd[,] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s",
            past: "%s adim",
            s: Vs,
            ss: Vs,
            m: Vs,
            mm: Vs,
            h: Vs,
            hh: Vs,
            d: Vs,
            dd: Vs,
            M: Vs,
            MM: Vs,
            y: Vs,
            yy: Vs
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er)/,
        ordinal: function(e, a) {
            switch (a) {
            case "D":
                return e + "er";
            default:
            case "M":
            case "Q":
            case "DDD":
            case "d":
            case "w":
            case "W":
                return e
            }
        },
        week: {
            dow: 1,
            doy: 4
        },
        meridiemParse: /rati|sokalli|donparam|sanje/,
        meridiemHour: function(e, a) {
            return 12 === e && (e = 0),
            "rati" === a ? e < 4 ? e : e + 12 : "sokalli" === a ? e : "donparam" === a ? 12 < e ? e : e + 12 : "sanje" === a ? e + 12 : void 0
        },
        meridiem: function(e, a, t) {
            return e < 4 ? "rati" : e < 12 ? "sokalli" : e < 16 ? "donparam" : e < 20 ? "sanje" : "rati"
        }
    });
    var Ks = {
        1: "\u0ae7",
        2: "\u0ae8",
        3: "\u0ae9",
        4: "\u0aea",
        5: "\u0aeb",
        6: "\u0aec",
        7: "\u0aed",
        8: "\u0aee",
        9: "\u0aef",
        0: "\u0ae6"
    }
      , Zs = {
        "\u0ae7": "1",
        "\u0ae8": "2",
        "\u0ae9": "3",
        "\u0aea": "4",
        "\u0aeb": "5",
        "\u0aec": "6",
        "\u0aed": "7",
        "\u0aee": "8",
        "\u0aef": "9",
        "\u0ae6": "0"
    };
    l.defineLocale("gu", {
        months: "\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1\u0a86\u0ab0\u0ac0_\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1\u0a86\u0ab0\u0ac0_\u0aae\u0abe\u0ab0\u0acd\u0a9a_\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2_\u0aae\u0ac7_\u0a9c\u0ac2\u0aa8_\u0a9c\u0ac1\u0ab2\u0abe\u0a88_\u0a91\u0a97\u0ab8\u0acd\u0a9f_\u0ab8\u0aaa\u0acd\u0a9f\u0ac7\u0aae\u0acd\u0aac\u0ab0_\u0a91\u0a95\u0acd\u0a9f\u0acd\u0aac\u0ab0_\u0aa8\u0ab5\u0ac7\u0aae\u0acd\u0aac\u0ab0_\u0aa1\u0abf\u0ab8\u0ac7\u0aae\u0acd\u0aac\u0ab0".split("_"),
        monthsShort: "\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1._\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1._\u0aae\u0abe\u0ab0\u0acd\u0a9a_\u0a8f\u0aaa\u0acd\u0ab0\u0abf._\u0aae\u0ac7_\u0a9c\u0ac2\u0aa8_\u0a9c\u0ac1\u0ab2\u0abe._\u0a91\u0a97._\u0ab8\u0aaa\u0acd\u0a9f\u0ac7._\u0a91\u0a95\u0acd\u0a9f\u0acd._\u0aa8\u0ab5\u0ac7._\u0aa1\u0abf\u0ab8\u0ac7.".split("_"),
        monthsParseExact: !0,
        weekdays: "\u0ab0\u0ab5\u0abf\u0ab5\u0abe\u0ab0_\u0ab8\u0acb\u0aae\u0ab5\u0abe\u0ab0_\u0aae\u0a82\u0a97\u0ab3\u0ab5\u0abe\u0ab0_\u0aac\u0ac1\u0aa7\u0acd\u0ab5\u0abe\u0ab0_\u0a97\u0ac1\u0ab0\u0ac1\u0ab5\u0abe\u0ab0_\u0ab6\u0ac1\u0a95\u0acd\u0ab0\u0ab5\u0abe\u0ab0_\u0ab6\u0aa8\u0abf\u0ab5\u0abe\u0ab0".split("_"),
        weekdaysShort: "\u0ab0\u0ab5\u0abf_\u0ab8\u0acb\u0aae_\u0aae\u0a82\u0a97\u0ab3_\u0aac\u0ac1\u0aa7\u0acd_\u0a97\u0ac1\u0ab0\u0ac1_\u0ab6\u0ac1\u0a95\u0acd\u0ab0_\u0ab6\u0aa8\u0abf".split("_"),
        weekdaysMin: "\u0ab0_\u0ab8\u0acb_\u0aae\u0a82_\u0aac\u0ac1_\u0a97\u0ac1_\u0ab6\u0ac1_\u0ab6".split("_"),
        longDateFormat: {
            LT: "A h:mm \u0ab5\u0abe\u0a97\u0acd\u0aaf\u0ac7",
            LTS: "A h:mm:ss \u0ab5\u0abe\u0a97\u0acd\u0aaf\u0ac7",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm \u0ab5\u0abe\u0a97\u0acd\u0aaf\u0ac7",
            LLLL: "dddd, D MMMM YYYY, A h:mm \u0ab5\u0abe\u0a97\u0acd\u0aaf\u0ac7"
        },
        calendar: {
            sameDay: "[\u0a86\u0a9c] LT",
            nextDay: "[\u0a95\u0abe\u0ab2\u0ac7] LT",
            nextWeek: "dddd, LT",
            lastDay: "[\u0a97\u0a87\u0a95\u0abe\u0ab2\u0ac7] LT",
            lastWeek: "[\u0aaa\u0abe\u0a9b\u0ab2\u0abe] dddd, LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s \u0aae\u0abe",
            past: "%s \u0aaa\u0ac7\u0ab9\u0ab2\u0abe",
            s: "\u0a85\u0aae\u0ac1\u0a95 \u0aaa\u0ab3\u0acb",
            ss: "%d \u0ab8\u0ac7\u0a95\u0a82\u0aa1",
            m: "\u0a8f\u0a95 \u0aae\u0abf\u0aa8\u0abf\u0a9f",
            mm: "%d \u0aae\u0abf\u0aa8\u0abf\u0a9f",
            h: "\u0a8f\u0a95 \u0a95\u0ab2\u0abe\u0a95",
            hh: "%d \u0a95\u0ab2\u0abe\u0a95",
            d: "\u0a8f\u0a95 \u0aa6\u0abf\u0ab5\u0ab8",
            dd: "%d \u0aa6\u0abf\u0ab5\u0ab8",
            M: "\u0a8f\u0a95 \u0aae\u0ab9\u0abf\u0aa8\u0acb",
            MM: "%d \u0aae\u0ab9\u0abf\u0aa8\u0acb",
            y: "\u0a8f\u0a95 \u0ab5\u0ab0\u0acd\u0ab7",
            yy: "%d \u0ab5\u0ab0\u0acd\u0ab7"
        },
        preparse: function(e) {
            return e.replace(/[\u0ae7\u0ae8\u0ae9\u0aea\u0aeb\u0aec\u0aed\u0aee\u0aef\u0ae6]/g, function(e) {
                return Zs[e]
            })
        },
        postformat: function(e) {
            return e.replace(/\d/g, function(e) {
                return Ks[e]
            })
        },
        meridiemParse: /\u0ab0\u0abe\u0aa4|\u0aac\u0aaa\u0acb\u0ab0|\u0ab8\u0ab5\u0abe\u0ab0|\u0ab8\u0abe\u0a82\u0a9c/,
        meridiemHour: function(e, a) {
            return 12 === e && (e = 0),
            "\u0ab0\u0abe\u0aa4" === a ? e < 4 ? e : e + 12 : "\u0ab8\u0ab5\u0abe\u0ab0" === a ? e : "\u0aac\u0aaa\u0acb\u0ab0" === a ? 10 <= e ? e : e + 12 : "\u0ab8\u0abe\u0a82\u0a9c" === a ? e + 12 : void 0
        },
        meridiem: function(e, a, t) {
            return e < 4 ? "\u0ab0\u0abe\u0aa4" : e < 10 ? "\u0ab8\u0ab5\u0abe\u0ab0" : e < 17 ? "\u0aac\u0aaa\u0acb\u0ab0" : e < 20 ? "\u0ab8\u0abe\u0a82\u0a9c" : "\u0ab0\u0abe\u0aa4"
        },
        week: {
            dow: 0,
            doy: 6
        }
    }),
    l.defineLocale("he", {
        months: "\u05d9\u05e0\u05d5\u05d0\u05e8_\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8_\u05de\u05e8\u05e5_\u05d0\u05e4\u05e8\u05d9\u05dc_\u05de\u05d0\u05d9_\u05d9\u05d5\u05e0\u05d9_\u05d9\u05d5\u05dc\u05d9_\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8_\u05e1\u05e4\u05d8\u05de\u05d1\u05e8_\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8_\u05e0\u05d5\u05d1\u05de\u05d1\u05e8_\u05d3\u05e6\u05de\u05d1\u05e8".split("_"),
        monthsShort: "\u05d9\u05e0\u05d5\u05f3_\u05e4\u05d1\u05e8\u05f3_\u05de\u05e8\u05e5_\u05d0\u05e4\u05e8\u05f3_\u05de\u05d0\u05d9_\u05d9\u05d5\u05e0\u05d9_\u05d9\u05d5\u05dc\u05d9_\u05d0\u05d5\u05d2\u05f3_\u05e1\u05e4\u05d8\u05f3_\u05d0\u05d5\u05e7\u05f3_\u05e0\u05d5\u05d1\u05f3_\u05d3\u05e6\u05de\u05f3".split("_"),
        weekdays: "\u05e8\u05d0\u05e9\u05d5\u05df_\u05e9\u05e0\u05d9_\u05e9\u05dc\u05d9\u05e9\u05d9_\u05e8\u05d1\u05d9\u05e2\u05d9_\u05d7\u05de\u05d9\u05e9\u05d9_\u05e9\u05d9\u05e9\u05d9_\u05e9\u05d1\u05ea".split("_"),
        weekdaysShort: "\u05d0\u05f3_\u05d1\u05f3_\u05d2\u05f3_\u05d3\u05f3_\u05d4\u05f3_\u05d5\u05f3_\u05e9\u05f3".split("_"),
        weekdaysMin: "\u05d0_\u05d1_\u05d2_\u05d3_\u05d4_\u05d5_\u05e9".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D [\u05d1]MMMM YYYY",
            LLL: "D [\u05d1]MMMM YYYY HH:mm",
            LLLL: "dddd, D [\u05d1]MMMM YYYY HH:mm",
            l: "D/M/YYYY",
            ll: "D MMM YYYY",
            lll: "D MMM YYYY HH:mm",
            llll: "ddd, D MMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[\u05d4\u05d9\u05d5\u05dd \u05d1\u05be]LT",
            nextDay: "[\u05de\u05d7\u05e8 \u05d1\u05be]LT",
            nextWeek: "dddd [\u05d1\u05e9\u05e2\u05d4] LT",
            lastDay: "[\u05d0\u05ea\u05de\u05d5\u05dc \u05d1\u05be]LT",
            lastWeek: "[\u05d1\u05d9\u05d5\u05dd] dddd [\u05d4\u05d0\u05d7\u05e8\u05d5\u05df \u05d1\u05e9\u05e2\u05d4] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "\u05d1\u05e2\u05d5\u05d3 %s",
            past: "\u05dc\u05e4\u05e0\u05d9 %s",
            s: "\u05de\u05e1\u05e4\u05e8 \u05e9\u05e0\u05d9\u05d5\u05ea",
            ss: "%d \u05e9\u05e0\u05d9\u05d5\u05ea",
            m: "\u05d3\u05e7\u05d4",
            mm: "%d \u05d3\u05e7\u05d5\u05ea",
            h: "\u05e9\u05e2\u05d4",
            hh: function(e) {
                return 2 === e ? "\u05e9\u05e2\u05ea\u05d9\u05d9\u05dd" : e + " \u05e9\u05e2\u05d5\u05ea"
            },
            d: "\u05d9\u05d5\u05dd",
            dd: function(e) {
                return 2 === e ? "\u05d9\u05d5\u05de\u05d9\u05d9\u05dd" : e + " \u05d9\u05de\u05d9\u05dd"
            },
            M: "\u05d7\u05d5\u05d3\u05e9",
            MM: function(e) {
                return 2 === e ? "\u05d7\u05d5\u05d3\u05e9\u05d9\u05d9\u05dd" : e + " \u05d7\u05d5\u05d3\u05e9\u05d9\u05dd"
            },
            y: "\u05e9\u05e0\u05d4",
            yy: function(e) {
                return 2 === e ? "\u05e9\u05e0\u05ea\u05d9\u05d9\u05dd" : e % 10 == 0 && 10 !== e ? e + " \u05e9\u05e0\u05d4" : e + " \u05e9\u05e0\u05d9\u05dd"
            }
        },
        meridiemParse: /\u05d0\u05d7\u05d4"\u05e6|\u05dc\u05e4\u05e0\u05d4"\u05e6|\u05d0\u05d7\u05e8\u05d9 \u05d4\u05e6\u05d4\u05e8\u05d9\u05d9\u05dd|\u05dc\u05e4\u05e0\u05d9 \u05d4\u05e6\u05d4\u05e8\u05d9\u05d9\u05dd|\u05dc\u05e4\u05e0\u05d5\u05ea \u05d1\u05d5\u05e7\u05e8|\u05d1\u05d1\u05d5\u05e7\u05e8|\u05d1\u05e2\u05e8\u05d1/i,
        isPM: function(e) {
            return /^(\u05d0\u05d7\u05d4"\u05e6|\u05d0\u05d7\u05e8\u05d9 \u05d4\u05e6\u05d4\u05e8\u05d9\u05d9\u05dd|\u05d1\u05e2\u05e8\u05d1)$/.test(e)
        },
        meridiem: function(e, a, t) {
            return e < 5 ? "\u05dc\u05e4\u05e0\u05d5\u05ea \u05d1\u05d5\u05e7\u05e8" : e < 10 ? "\u05d1\u05d1\u05d5\u05e7\u05e8" : e < 12 ? t ? '\u05dc\u05e4\u05e0\u05d4"\u05e6' : "\u05dc\u05e4\u05e0\u05d9 \u05d4\u05e6\u05d4\u05e8\u05d9\u05d9\u05dd" : e < 18 ? t ? '\u05d0\u05d7\u05d4"\u05e6' : "\u05d0\u05d7\u05e8\u05d9 \u05d4\u05e6\u05d4\u05e8\u05d9\u05d9\u05dd" : "\u05d1\u05e2\u05e8\u05d1"
        }
    });
    var $s = {
        1: "\u0967",
        2: "\u0968",
        3: "\u0969",
        4: "\u096a",
        5: "\u096b",
        6: "\u096c",
        7: "\u096d",
        8: "\u096e",
        9: "\u096f",
        0: "\u0966"
    }
      , Bs = {
        "\u0967": "1",
        "\u0968": "2",
        "\u0969": "3",
        "\u096a": "4",
        "\u096b": "5",
        "\u096c": "6",
        "\u096d": "7",
        "\u096e": "8",
        "\u096f": "9",
        "\u0966": "0"
    };
    function qs(e, a, t) {
        var s = e + " ";
        switch (t) {
        case "ss":
            return s += 1 === e ? "sekunda" : 2 === e || 3 === e || 4 === e ? "sekunde" : "sekundi";
        case "m":
            return a ? "jedna minuta" : "jedne minute";
        case "mm":
            return s += 1 === e ? "minuta" : 2 === e || 3 === e || 4 === e ? "minute" : "minuta";
        case "h":
            return a ? "jedan sat" : "jednog sata";
        case "hh":
            return s += 1 === e ? "sat" : 2 === e || 3 === e || 4 === e ? "sata" : "sati";
        case "dd":
            return s += 1 === e ? "dan" : "dana";
        case "MM":
            return s += 1 === e ? "mjesec" : 2 === e || 3 === e || 4 === e ? "mjeseca" : "mjeseci";
        case "yy":
            return s += 1 === e ? "godina" : 2 === e || 3 === e || 4 === e ? "godine" : "godina"
        }
    }
    l.defineLocale("hi", {
        months: "\u091c\u0928\u0935\u0930\u0940_\u092b\u093c\u0930\u0935\u0930\u0940_\u092e\u093e\u0930\u094d\u091a_\u0905\u092a\u094d\u0930\u0948\u0932_\u092e\u0908_\u091c\u0942\u0928_\u091c\u0941\u0932\u093e\u0908_\u0905\u0917\u0938\u094d\u0924_\u0938\u093f\u0924\u092e\u094d\u092c\u0930_\u0905\u0915\u094d\u091f\u0942\u092c\u0930_\u0928\u0935\u092e\u094d\u092c\u0930_\u0926\u093f\u0938\u092e\u094d\u092c\u0930".split("_"),
        monthsShort: "\u091c\u0928._\u092b\u093c\u0930._\u092e\u093e\u0930\u094d\u091a_\u0905\u092a\u094d\u0930\u0948._\u092e\u0908_\u091c\u0942\u0928_\u091c\u0941\u0932._\u0905\u0917._\u0938\u093f\u0924._\u0905\u0915\u094d\u091f\u0942._\u0928\u0935._\u0926\u093f\u0938.".split("_"),
        monthsParseExact: !0,
        weekdays: "\u0930\u0935\u093f\u0935\u093e\u0930_\u0938\u094b\u092e\u0935\u093e\u0930_\u092e\u0902\u0917\u0932\u0935\u093e\u0930_\u092c\u0941\u0927\u0935\u093e\u0930_\u0917\u0941\u0930\u0942\u0935\u093e\u0930_\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930_\u0936\u0928\u093f\u0935\u093e\u0930".split("_"),
        weekdaysShort: "\u0930\u0935\u093f_\u0938\u094b\u092e_\u092e\u0902\u0917\u0932_\u092c\u0941\u0927_\u0917\u0941\u0930\u0942_\u0936\u0941\u0915\u094d\u0930_\u0936\u0928\u093f".split("_"),
        weekdaysMin: "\u0930_\u0938\u094b_\u092e\u0902_\u092c\u0941_\u0917\u0941_\u0936\u0941_\u0936".split("_"),
        longDateFormat: {
            LT: "A h:mm \u092c\u091c\u0947",
            LTS: "A h:mm:ss \u092c\u091c\u0947",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm \u092c\u091c\u0947",
            LLLL: "dddd, D MMMM YYYY, A h:mm \u092c\u091c\u0947"
        },
        calendar: {
            sameDay: "[\u0906\u091c] LT",
            nextDay: "[\u0915\u0932] LT",
            nextWeek: "dddd, LT",
            lastDay: "[\u0915\u0932] LT",
            lastWeek: "[\u092a\u093f\u091b\u0932\u0947] dddd, LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s \u092e\u0947\u0902",
            past: "%s \u092a\u0939\u0932\u0947",
            s: "\u0915\u0941\u091b \u0939\u0940 \u0915\u094d\u0937\u0923",
            ss: "%d \u0938\u0947\u0915\u0902\u0921",
            m: "\u090f\u0915 \u092e\u093f\u0928\u091f",
            mm: "%d \u092e\u093f\u0928\u091f",
            h: "\u090f\u0915 \u0918\u0902\u091f\u093e",
            hh: "%d \u0918\u0902\u091f\u0947",
            d: "\u090f\u0915 \u0926\u093f\u0928",
            dd: "%d \u0926\u093f\u0928",
            M: "\u090f\u0915 \u092e\u0939\u0940\u0928\u0947",
            MM: "%d \u092e\u0939\u0940\u0928\u0947",
            y: "\u090f\u0915 \u0935\u0930\u094d\u0937",
            yy: "%d \u0935\u0930\u094d\u0937"
        },
        preparse: function(e) {
            return e.replace(/[\u0967\u0968\u0969\u096a\u096b\u096c\u096d\u096e\u096f\u0966]/g, function(e) {
                return Bs[e]
            })
        },
        postformat: function(e) {
            return e.replace(/\d/g, function(e) {
                return $s[e]
            })
        },
        meridiemParse: /\u0930\u093e\u0924|\u0938\u0941\u092c\u0939|\u0926\u094b\u092a\u0939\u0930|\u0936\u093e\u092e/,
        meridiemHour: function(e, a) {
            return 12 === e && (e = 0),
            "\u0930\u093e\u0924" === a ? e < 4 ? e : e + 12 : "\u0938\u0941\u092c\u0939" === a ? e : "\u0926\u094b\u092a\u0939\u0930" === a ? 10 <= e ? e : e + 12 : "\u0936\u093e\u092e" === a ? e + 12 : void 0
        },
        meridiem: function(e, a, t) {
            return e < 4 ? "\u0930\u093e\u0924" : e < 10 ? "\u0938\u0941\u092c\u0939" : e < 17 ? "\u0926\u094b\u092a\u0939\u0930" : e < 20 ? "\u0936\u093e\u092e" : "\u0930\u093e\u0924"
        },
        week: {
            dow: 0,
            doy: 6
        }
    }),
    l.defineLocale("hr", {
        months: {
            format: "sije\u010dnja_velja\u010de_o\u017eujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca".split("_"),
            standalone: "sije\u010danj_velja\u010da_o\u017eujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac".split("_")
        },
        monthsShort: "sij._velj._o\u017eu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.".split("_"),
        monthsParseExact: !0,
        weekdays: "nedjelja_ponedjeljak_utorak_srijeda_\u010detvrtak_petak_subota".split("_"),
        weekdaysShort: "ned._pon._uto._sri._\u010det._pet._sub.".split("_"),
        weekdaysMin: "ne_po_ut_sr_\u010de_pe_su".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd, D. MMMM YYYY H:mm"
        },
        calendar: {
            sameDay: "[danas u] LT",
            nextDay: "[sutra u] LT",
            nextWeek: function() {
                switch (this.day()) {
                case 0:
                    return "[u] [nedjelju] [u] LT";
                case 3:
                    return "[u] [srijedu] [u] LT";
                case 6:
                    return "[u] [subotu] [u] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                    return "[u] dddd [u] LT"
                }
            },
            lastDay: "[ju\u010der u] LT",
            lastWeek: function() {
                switch (this.day()) {
                case 0:
                case 3:
                    return "[pro\u0161lu] dddd [u] LT";
                case 6:
                    return "[pro\u0161le] [subote] [u] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                    return "[pro\u0161li] dddd [u] LT"
                }
            },
            sameElse: "L"
        },
        relativeTime: {
            future: "za %s",
            past: "prije %s",
            s: "par sekundi",
            ss: qs,
            m: qs,
            mm: qs,
            h: qs,
            hh: qs,
            d: "dan",
            dd: qs,
            M: "mjesec",
            MM: qs,
            y: "godinu",
            yy: qs
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 7
        }
    });
    var Qs = "vas\xe1rnap h\xe9tf\u0151n kedden szerd\xe1n cs\xfct\xf6rt\xf6k\xf6n p\xe9nteken szombaton".split(" ");
    function Xs(e, a, t, s) {
        var n = e;
        switch (t) {
        case "s":
            return s || a ? "n\xe9h\xe1ny m\xe1sodperc" : "n\xe9h\xe1ny m\xe1sodperce";
        case "ss":
            return n + (s || a) ? " m\xe1sodperc" : " m\xe1sodperce";
        case "m":
            return "egy" + (s || a ? " perc" : " perce");
        case "mm":
            return n + (s || a ? " perc" : " perce");
        case "h":
            return "egy" + (s || a ? " \xf3ra" : " \xf3r\xe1ja");
        case "hh":
            return n + (s || a ? " \xf3ra" : " \xf3r\xe1ja");
        case "d":
            return "egy" + (s || a ? " nap" : " napja");
        case "dd":
            return n + (s || a ? " nap" : " napja");
        case "M":
            return "egy" + (s || a ? " h\xf3nap" : " h\xf3napja");
        case "MM":
            return n + (s || a ? " h\xf3nap" : " h\xf3napja");
        case "y":
            return "egy" + (s || a ? " \xe9v" : " \xe9ve");
        case "yy":
            return n + (s || a ? " \xe9v" : " \xe9ve")
        }
        return ""
    }
    function en(e) {
        return (e ? "" : "[m\xfalt] ") + "[" + Qs[this.day()] + "] LT[-kor]"
    }
    function an(e) {
        return e % 100 == 11 || e % 10 != 1
    }
    function tn(e, a, t, s) {
        var n = e + " ";
        switch (t) {
        case "s":
            return a || s ? "nokkrar sek\xfandur" : "nokkrum sek\xfandum";
        case "ss":
            return an(e) ? n + (a || s ? "sek\xfandur" : "sek\xfandum") : n + "sek\xfanda";
        case "m":
            return a ? "m\xedn\xfata" : "m\xedn\xfatu";
        case "mm":
            return an(e) ? n + (a || s ? "m\xedn\xfatur" : "m\xedn\xfatum") : a ? n + "m\xedn\xfata" : n + "m\xedn\xfatu";
        case "hh":
            return an(e) ? n + (a || s ? "klukkustundir" : "klukkustundum") : n + "klukkustund";
        case "d":
            return a ? "dagur" : s ? "dag" : "degi";
        case "dd":
            return an(e) ? a ? n + "dagar" : n + (s ? "daga" : "d\xf6gum") : a ? n + "dagur" : n + (s ? "dag" : "degi");
        case "M":
            return a ? "m\xe1nu\xf0ur" : s ? "m\xe1nu\xf0" : "m\xe1nu\xf0i";
        case "MM":
            return an(e) ? a ? n + "m\xe1nu\xf0ir" : n + (s ? "m\xe1nu\xf0i" : "m\xe1nu\xf0um") : a ? n + "m\xe1nu\xf0ur" : n + (s ? "m\xe1nu\xf0" : "m\xe1nu\xf0i");
        case "y":
            return a || s ? "\xe1r" : "\xe1ri";
        case "yy":
            return an(e) ? n + (a || s ? "\xe1r" : "\xe1rum") : n + (a || s ? "\xe1r" : "\xe1ri")
        }
    }
    l.defineLocale("hu", {
        months: "janu\xe1r_febru\xe1r_m\xe1rcius_\xe1prilis_m\xe1jus_j\xfanius_j\xfalius_augusztus_szeptember_okt\xf3ber_november_december".split("_"),
        monthsShort: "jan_feb_m\xe1rc_\xe1pr_m\xe1j_j\xfan_j\xfal_aug_szept_okt_nov_dec".split("_"),
        weekdays: "vas\xe1rnap_h\xe9tf\u0151_kedd_szerda_cs\xfct\xf6rt\xf6k_p\xe9ntek_szombat".split("_"),
        weekdaysShort: "vas_h\xe9t_kedd_sze_cs\xfct_p\xe9n_szo".split("_"),
        weekdaysMin: "v_h_k_sze_cs_p_szo".split("_"),
        longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "YYYY.MM.DD.",
            LL: "YYYY. MMMM D.",
            LLL: "YYYY. MMMM D. H:mm",
            LLLL: "YYYY. MMMM D., dddd H:mm"
        },
        meridiemParse: /de|du/i,
        isPM: function(e) {
            return "u" === e.charAt(1).toLowerCase()
        },
        meridiem: function(e, a, t) {
            return e < 12 ? !0 === t ? "de" : "DE" : !0 === t ? "du" : "DU"
        },
        calendar: {
            sameDay: "[ma] LT[-kor]",
            nextDay: "[holnap] LT[-kor]",
            nextWeek: function() {
                return en.call(this, !0)
            },
            lastDay: "[tegnap] LT[-kor]",
            lastWeek: function() {
                return en.call(this, !1)
            },
            sameElse: "L"
        },
        relativeTime: {
            future: "%s m\xfalva",
            past: "%s",
            s: Xs,
            ss: Xs,
            m: Xs,
            mm: Xs,
            h: Xs,
            hh: Xs,
            d: Xs,
            dd: Xs,
            M: Xs,
            MM: Xs,
            y: Xs,
            yy: Xs
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("hy-am", {
        months: {
            format: "\u0570\u0578\u0582\u0576\u057e\u0561\u0580\u056b_\u0583\u0565\u057f\u0580\u057e\u0561\u0580\u056b_\u0574\u0561\u0580\u057f\u056b_\u0561\u057a\u0580\u056b\u056c\u056b_\u0574\u0561\u0575\u056b\u057d\u056b_\u0570\u0578\u0582\u0576\u056b\u057d\u056b_\u0570\u0578\u0582\u056c\u056b\u057d\u056b_\u0585\u0563\u0578\u057d\u057f\u0578\u057d\u056b_\u057d\u0565\u057a\u057f\u0565\u0574\u0562\u0565\u0580\u056b_\u0570\u0578\u056f\u057f\u0565\u0574\u0562\u0565\u0580\u056b_\u0576\u0578\u0575\u0565\u0574\u0562\u0565\u0580\u056b_\u0564\u0565\u056f\u057f\u0565\u0574\u0562\u0565\u0580\u056b".split("_"),
            standalone: "\u0570\u0578\u0582\u0576\u057e\u0561\u0580_\u0583\u0565\u057f\u0580\u057e\u0561\u0580_\u0574\u0561\u0580\u057f_\u0561\u057a\u0580\u056b\u056c_\u0574\u0561\u0575\u056b\u057d_\u0570\u0578\u0582\u0576\u056b\u057d_\u0570\u0578\u0582\u056c\u056b\u057d_\u0585\u0563\u0578\u057d\u057f\u0578\u057d_\u057d\u0565\u057a\u057f\u0565\u0574\u0562\u0565\u0580_\u0570\u0578\u056f\u057f\u0565\u0574\u0562\u0565\u0580_\u0576\u0578\u0575\u0565\u0574\u0562\u0565\u0580_\u0564\u0565\u056f\u057f\u0565\u0574\u0562\u0565\u0580".split("_")
        },
        monthsShort: "\u0570\u0576\u057e_\u0583\u057f\u0580_\u0574\u0580\u057f_\u0561\u057a\u0580_\u0574\u0575\u057d_\u0570\u0576\u057d_\u0570\u056c\u057d_\u0585\u0563\u057d_\u057d\u057a\u057f_\u0570\u056f\u057f_\u0576\u0574\u0562_\u0564\u056f\u057f".split("_"),
        weekdays: "\u056f\u056b\u0580\u0561\u056f\u056b_\u0565\u0580\u056f\u0578\u0582\u0577\u0561\u0562\u0569\u056b_\u0565\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b_\u0579\u0578\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b_\u0570\u056b\u0576\u0563\u0577\u0561\u0562\u0569\u056b_\u0578\u0582\u0580\u0562\u0561\u0569_\u0577\u0561\u0562\u0561\u0569".split("_"),
        weekdaysShort: "\u056f\u0580\u056f_\u0565\u0580\u056f_\u0565\u0580\u0584_\u0579\u0580\u0584_\u0570\u0576\u0563_\u0578\u0582\u0580\u0562_\u0577\u0562\u0569".split("_"),
        weekdaysMin: "\u056f\u0580\u056f_\u0565\u0580\u056f_\u0565\u0580\u0584_\u0579\u0580\u0584_\u0570\u0576\u0563_\u0578\u0582\u0580\u0562_\u0577\u0562\u0569".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY \u0569.",
            LLL: "D MMMM YYYY \u0569., HH:mm",
            LLLL: "dddd, D MMMM YYYY \u0569., HH:mm"
        },
        calendar: {
            sameDay: "[\u0561\u0575\u057d\u0585\u0580] LT",
            nextDay: "[\u057e\u0561\u0572\u0568] LT",
            lastDay: "[\u0565\u0580\u0565\u056f] LT",
            nextWeek: function() {
                return "dddd [\u0585\u0580\u0568 \u056a\u0561\u0574\u0568] LT"
            },
            lastWeek: function() {
                return "[\u0561\u0576\u0581\u0561\u056e] dddd [\u0585\u0580\u0568 \u056a\u0561\u0574\u0568] LT"
            },
            sameElse: "L"
        },
        relativeTime: {
            future: "%s \u0570\u0565\u057f\u0578",
            past: "%s \u0561\u057c\u0561\u057b",
            s: "\u0574\u056b \u0584\u0561\u0576\u056b \u057e\u0561\u0575\u0580\u056f\u0575\u0561\u0576",
            ss: "%d \u057e\u0561\u0575\u0580\u056f\u0575\u0561\u0576",
            m: "\u0580\u0578\u057a\u0565",
            mm: "%d \u0580\u0578\u057a\u0565",
            h: "\u056a\u0561\u0574",
            hh: "%d \u056a\u0561\u0574",
            d: "\u0585\u0580",
            dd: "%d \u0585\u0580",
            M: "\u0561\u0574\u056b\u057d",
            MM: "%d \u0561\u0574\u056b\u057d",
            y: "\u057f\u0561\u0580\u056b",
            yy: "%d \u057f\u0561\u0580\u056b"
        },
        meridiemParse: /\u0563\u056b\u0577\u0565\u0580\u057e\u0561|\u0561\u057c\u0561\u057e\u0578\u057f\u057e\u0561|\u0581\u0565\u0580\u0565\u056f\u057e\u0561|\u0565\u0580\u0565\u056f\u0578\u0575\u0561\u0576/,
        isPM: function(e) {
            return /^(\u0581\u0565\u0580\u0565\u056f\u057e\u0561|\u0565\u0580\u0565\u056f\u0578\u0575\u0561\u0576)$/.test(e)
        },
        meridiem: function(e) {
            return e < 4 ? "\u0563\u056b\u0577\u0565\u0580\u057e\u0561" : e < 12 ? "\u0561\u057c\u0561\u057e\u0578\u057f\u057e\u0561" : e < 17 ? "\u0581\u0565\u0580\u0565\u056f\u057e\u0561" : "\u0565\u0580\u0565\u056f\u0578\u0575\u0561\u0576"
        },
        dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(\u056b\u0576|\u0580\u0564)/,
        ordinal: function(e, a) {
            switch (a) {
            case "DDD":
            case "w":
            case "W":
            case "DDDo":
                return 1 === e ? e + "-\u056b\u0576" : e + "-\u0580\u0564";
            default:
                return e
            }
        },
        week: {
            dow: 1,
            doy: 7
        }
    }),
    l.defineLocale("id", {
        months: "Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember".split("_"),
        monthsShort: "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des".split("_"),
        weekdays: "Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu".split("_"),
        weekdaysShort: "Min_Sen_Sel_Rab_Kam_Jum_Sab".split("_"),
        weekdaysMin: "Mg_Sn_Sl_Rb_Km_Jm_Sb".split("_"),
        longDateFormat: {
            LT: "HH.mm",
            LTS: "HH.mm.ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY [pukul] HH.mm",
            LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
        },
        meridiemParse: /pagi|siang|sore|malam/,
        meridiemHour: function(e, a) {
            return 12 === e && (e = 0),
            "pagi" === a ? e : "siang" === a ? 11 <= e ? e : e + 12 : "sore" === a || "malam" === a ? e + 12 : void 0
        },
        meridiem: function(e, a, t) {
            return e < 11 ? "pagi" : e < 15 ? "siang" : e < 19 ? "sore" : "malam"
        },
        calendar: {
            sameDay: "[Hari ini pukul] LT",
            nextDay: "[Besok pukul] LT",
            nextWeek: "dddd [pukul] LT",
            lastDay: "[Kemarin pukul] LT",
            lastWeek: "dddd [lalu pukul] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "dalam %s",
            past: "%s yang lalu",
            s: "beberapa detik",
            ss: "%d detik",
            m: "semenit",
            mm: "%d menit",
            h: "sejam",
            hh: "%d jam",
            d: "sehari",
            dd: "%d hari",
            M: "sebulan",
            MM: "%d bulan",
            y: "setahun",
            yy: "%d tahun"
        },
        week: {
            dow: 1,
            doy: 7
        }
    }),
    l.defineLocale("is", {
        months: "jan\xfaar_febr\xfaar_mars_apr\xedl_ma\xed_j\xfan\xed_j\xfal\xed_\xe1g\xfast_september_okt\xf3ber_n\xf3vember_desember".split("_"),
        monthsShort: "jan_feb_mar_apr_ma\xed_j\xfan_j\xfal_\xe1g\xfa_sep_okt_n\xf3v_des".split("_"),
        weekdays: "sunnudagur_m\xe1nudagur_\xferi\xf0judagur_mi\xf0vikudagur_fimmtudagur_f\xf6studagur_laugardagur".split("_"),
        weekdaysShort: "sun_m\xe1n_\xferi_mi\xf0_fim_f\xf6s_lau".split("_"),
        weekdaysMin: "Su_M\xe1_\xder_Mi_Fi_F\xf6_La".split("_"),
        longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY [kl.] H:mm",
            LLLL: "dddd, D. MMMM YYYY [kl.] H:mm"
        },
        calendar: {
            sameDay: "[\xed dag kl.] LT",
            nextDay: "[\xe1 morgun kl.] LT",
            nextWeek: "dddd [kl.] LT",
            lastDay: "[\xed g\xe6r kl.] LT",
            lastWeek: "[s\xed\xf0asta] dddd [kl.] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "eftir %s",
            past: "fyrir %s s\xed\xf0an",
            s: tn,
            ss: tn,
            m: tn,
            mm: tn,
            h: "klukkustund",
            hh: tn,
            d: tn,
            dd: tn,
            M: tn,
            MM: tn,
            y: tn,
            yy: tn
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("it-ch", {
        months: "gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre".split("_"),
        monthsShort: "gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic".split("_"),
        weekdays: "domenica_luned\xec_marted\xec_mercoled\xec_gioved\xec_venerd\xec_sabato".split("_"),
        weekdaysShort: "dom_lun_mar_mer_gio_ven_sab".split("_"),
        weekdaysMin: "do_lu_ma_me_gi_ve_sa".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[Oggi alle] LT",
            nextDay: "[Domani alle] LT",
            nextWeek: "dddd [alle] LT",
            lastDay: "[Ieri alle] LT",
            lastWeek: function() {
                switch (this.day()) {
                case 0:
                    return "[la scorsa] dddd [alle] LT";
                default:
                    return "[lo scorso] dddd [alle] LT"
                }
            },
            sameElse: "L"
        },
        relativeTime: {
            future: function(e) {
                return (/^[0-9].+$/.test(e) ? "tra" : "in") + " " + e
            },
            past: "%s fa",
            s: "alcuni secondi",
            ss: "%d secondi",
            m: "un minuto",
            mm: "%d minuti",
            h: "un'ora",
            hh: "%d ore",
            d: "un giorno",
            dd: "%d giorni",
            M: "un mese",
            MM: "%d mesi",
            y: "un anno",
            yy: "%d anni"
        },
        dayOfMonthOrdinalParse: /\d{1,2}\xba/,
        ordinal: "%d\xba",
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("it", {
        months: "gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre".split("_"),
        monthsShort: "gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic".split("_"),
        weekdays: "domenica_luned\xec_marted\xec_mercoled\xec_gioved\xec_venerd\xec_sabato".split("_"),
        weekdaysShort: "dom_lun_mar_mer_gio_ven_sab".split("_"),
        weekdaysMin: "do_lu_ma_me_gi_ve_sa".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[Oggi alle] LT",
            nextDay: "[Domani alle] LT",
            nextWeek: "dddd [alle] LT",
            lastDay: "[Ieri alle] LT",
            lastWeek: function() {
                switch (this.day()) {
                case 0:
                    return "[la scorsa] dddd [alle] LT";
                default:
                    return "[lo scorso] dddd [alle] LT"
                }
            },
            sameElse: "L"
        },
        relativeTime: {
            future: function(e) {
                return (/^[0-9].+$/.test(e) ? "tra" : "in") + " " + e
            },
            past: "%s fa",
            s: "alcuni secondi",
            ss: "%d secondi",
            m: "un minuto",
            mm: "%d minuti",
            h: "un'ora",
            hh: "%d ore",
            d: "un giorno",
            dd: "%d giorni",
            M: "un mese",
            MM: "%d mesi",
            y: "un anno",
            yy: "%d anni"
        },
        dayOfMonthOrdinalParse: /\d{1,2}\xba/,
        ordinal: "%d\xba",
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("ja", {
        months: "\u4e00\u6708_\u4e8c\u6708_\u4e09\u6708_\u56db\u6708_\u4e94\u6708_\u516d\u6708_\u4e03\u6708_\u516b\u6708_\u4e5d\u6708_\u5341\u6708_\u5341\u4e00\u6708_\u5341\u4e8c\u6708".split("_"),
        monthsShort: "1\u6708_2\u6708_3\u6708_4\u6708_5\u6708_6\u6708_7\u6708_8\u6708_9\u6708_10\u6708_11\u6708_12\u6708".split("_"),
        weekdays: "\u65e5\u66dc\u65e5_\u6708\u66dc\u65e5_\u706b\u66dc\u65e5_\u6c34\u66dc\u65e5_\u6728\u66dc\u65e5_\u91d1\u66dc\u65e5_\u571f\u66dc\u65e5".split("_"),
        weekdaysShort: "\u65e5_\u6708_\u706b_\u6c34_\u6728_\u91d1_\u571f".split("_"),
        weekdaysMin: "\u65e5_\u6708_\u706b_\u6c34_\u6728_\u91d1_\u571f".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY/MM/DD",
            LL: "YYYY\u5e74M\u6708D\u65e5",
            LLL: "YYYY\u5e74M\u6708D\u65e5 HH:mm",
            LLLL: "YYYY\u5e74M\u6708D\u65e5 dddd HH:mm",
            l: "YYYY/MM/DD",
            ll: "YYYY\u5e74M\u6708D\u65e5",
            lll: "YYYY\u5e74M\u6708D\u65e5 HH:mm",
            llll: "YYYY\u5e74M\u6708D\u65e5(ddd) HH:mm"
        },
        meridiemParse: /\u5348\u524d|\u5348\u5f8c/i,
        isPM: function(e) {
            return "\u5348\u5f8c" === e
        },
        meridiem: function(e, a, t) {
            return e < 12 ? "\u5348\u524d" : "\u5348\u5f8c"
        },
        calendar: {
            sameDay: "[\u4eca\u65e5] LT",
            nextDay: "[\u660e\u65e5] LT",
            nextWeek: function(e) {
                return e.week() < this.week() ? "[\u6765\u9031]dddd LT" : "dddd LT"
            },
            lastDay: "[\u6628\u65e5] LT",
            lastWeek: function(e) {
                return this.week() < e.week() ? "[\u5148\u9031]dddd LT" : "dddd LT"
            },
            sameElse: "L"
        },
        dayOfMonthOrdinalParse: /\d{1,2}\u65e5/,
        ordinal: function(e, a) {
            switch (a) {
            case "d":
            case "D":
            case "DDD":
                return e + "\u65e5";
            default:
                return e
            }
        },
        relativeTime: {
            future: "%s\u5f8c",
            past: "%s\u524d",
            s: "\u6570\u79d2",
            ss: "%d\u79d2",
            m: "1\u5206",
            mm: "%d\u5206",
            h: "1\u6642\u9593",
            hh: "%d\u6642\u9593",
            d: "1\u65e5",
            dd: "%d\u65e5",
            M: "1\u30f6\u6708",
            MM: "%d\u30f6\u6708",
            y: "1\u5e74",
            yy: "%d\u5e74"
        }
    }),
    l.defineLocale("jv", {
        months: "Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember".split("_"),
        monthsShort: "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des".split("_"),
        weekdays: "Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu".split("_"),
        weekdaysShort: "Min_Sen_Sel_Reb_Kem_Jem_Sep".split("_"),
        weekdaysMin: "Mg_Sn_Sl_Rb_Km_Jm_Sp".split("_"),
        longDateFormat: {
            LT: "HH.mm",
            LTS: "HH.mm.ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY [pukul] HH.mm",
            LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
        },
        meridiemParse: /enjing|siyang|sonten|ndalu/,
        meridiemHour: function(e, a) {
            return 12 === e && (e = 0),
            "enjing" === a ? e : "siyang" === a ? 11 <= e ? e : e + 12 : "sonten" === a || "ndalu" === a ? e + 12 : void 0
        },
        meridiem: function(e, a, t) {
            return e < 11 ? "enjing" : e < 15 ? "siyang" : e < 19 ? "sonten" : "ndalu"
        },
        calendar: {
            sameDay: "[Dinten puniko pukul] LT",
            nextDay: "[Mbenjang pukul] LT",
            nextWeek: "dddd [pukul] LT",
            lastDay: "[Kala wingi pukul] LT",
            lastWeek: "dddd [kepengker pukul] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "wonten ing %s",
            past: "%s ingkang kepengker",
            s: "sawetawis detik",
            ss: "%d detik",
            m: "setunggal menit",
            mm: "%d menit",
            h: "setunggal jam",
            hh: "%d jam",
            d: "sedinten",
            dd: "%d dinten",
            M: "sewulan",
            MM: "%d wulan",
            y: "setaun",
            yy: "%d taun"
        },
        week: {
            dow: 1,
            doy: 7
        }
    }),
    l.defineLocale("ka", {
        months: {
            standalone: "\u10d8\u10d0\u10dc\u10d5\u10d0\u10e0\u10d8_\u10d7\u10d4\u10d1\u10d4\u10e0\u10d5\u10d0\u10da\u10d8_\u10db\u10d0\u10e0\u10e2\u10d8_\u10d0\u10de\u10e0\u10d8\u10da\u10d8_\u10db\u10d0\u10d8\u10e1\u10d8_\u10d8\u10d5\u10dc\u10d8\u10e1\u10d8_\u10d8\u10d5\u10da\u10d8\u10e1\u10d8_\u10d0\u10d2\u10d5\u10d8\u10e1\u10e2\u10dd_\u10e1\u10d4\u10e5\u10e2\u10d4\u10db\u10d1\u10d4\u10e0\u10d8_\u10dd\u10e5\u10e2\u10dd\u10db\u10d1\u10d4\u10e0\u10d8_\u10dc\u10dd\u10d4\u10db\u10d1\u10d4\u10e0\u10d8_\u10d3\u10d4\u10d9\u10d4\u10db\u10d1\u10d4\u10e0\u10d8".split("_"),
            format: "\u10d8\u10d0\u10dc\u10d5\u10d0\u10e0\u10e1_\u10d7\u10d4\u10d1\u10d4\u10e0\u10d5\u10d0\u10da\u10e1_\u10db\u10d0\u10e0\u10e2\u10e1_\u10d0\u10de\u10e0\u10d8\u10da\u10d8\u10e1_\u10db\u10d0\u10d8\u10e1\u10e1_\u10d8\u10d5\u10dc\u10d8\u10e1\u10e1_\u10d8\u10d5\u10da\u10d8\u10e1\u10e1_\u10d0\u10d2\u10d5\u10d8\u10e1\u10e2\u10e1_\u10e1\u10d4\u10e5\u10e2\u10d4\u10db\u10d1\u10d4\u10e0\u10e1_\u10dd\u10e5\u10e2\u10dd\u10db\u10d1\u10d4\u10e0\u10e1_\u10dc\u10dd\u10d4\u10db\u10d1\u10d4\u10e0\u10e1_\u10d3\u10d4\u10d9\u10d4\u10db\u10d1\u10d4\u10e0\u10e1".split("_")
        },
        monthsShort: "\u10d8\u10d0\u10dc_\u10d7\u10d4\u10d1_\u10db\u10d0\u10e0_\u10d0\u10de\u10e0_\u10db\u10d0\u10d8_\u10d8\u10d5\u10dc_\u10d8\u10d5\u10da_\u10d0\u10d2\u10d5_\u10e1\u10d4\u10e5_\u10dd\u10e5\u10e2_\u10dc\u10dd\u10d4_\u10d3\u10d4\u10d9".split("_"),
        weekdays: {
            standalone: "\u10d9\u10d5\u10d8\u10e0\u10d0_\u10dd\u10e0\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8_\u10e1\u10d0\u10db\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8_\u10dd\u10d7\u10ee\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8_\u10ee\u10e3\u10d7\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8_\u10de\u10d0\u10e0\u10d0\u10e1\u10d9\u10d4\u10d5\u10d8_\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8".split("_"),
            format: "\u10d9\u10d5\u10d8\u10e0\u10d0\u10e1_\u10dd\u10e0\u10e8\u10d0\u10d1\u10d0\u10d7\u10e1_\u10e1\u10d0\u10db\u10e8\u10d0\u10d1\u10d0\u10d7\u10e1_\u10dd\u10d7\u10ee\u10e8\u10d0\u10d1\u10d0\u10d7\u10e1_\u10ee\u10e3\u10d7\u10e8\u10d0\u10d1\u10d0\u10d7\u10e1_\u10de\u10d0\u10e0\u10d0\u10e1\u10d9\u10d4\u10d5\u10e1_\u10e8\u10d0\u10d1\u10d0\u10d7\u10e1".split("_"),
            isFormat: /(\u10ec\u10d8\u10dc\u10d0|\u10e8\u10d4\u10db\u10d3\u10d4\u10d2)/
        },
        weekdaysShort: "\u10d9\u10d5\u10d8_\u10dd\u10e0\u10e8_\u10e1\u10d0\u10db_\u10dd\u10d7\u10ee_\u10ee\u10e3\u10d7_\u10de\u10d0\u10e0_\u10e8\u10d0\u10d1".split("_"),
        weekdaysMin: "\u10d9\u10d5_\u10dd\u10e0_\u10e1\u10d0_\u10dd\u10d7_\u10ee\u10e3_\u10de\u10d0_\u10e8\u10d0".split("_"),
        longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY h:mm A",
            LLLL: "dddd, D MMMM YYYY h:mm A"
        },
        calendar: {
            sameDay: "[\u10d3\u10e6\u10d4\u10e1] LT[-\u10d6\u10d4]",
            nextDay: "[\u10ee\u10d5\u10d0\u10da] LT[-\u10d6\u10d4]",
            lastDay: "[\u10d2\u10e3\u10e8\u10d8\u10dc] LT[-\u10d6\u10d4]",
            nextWeek: "[\u10e8\u10d4\u10db\u10d3\u10d4\u10d2] dddd LT[-\u10d6\u10d4]",
            lastWeek: "[\u10ec\u10d8\u10dc\u10d0] dddd LT-\u10d6\u10d4",
            sameElse: "L"
        },
        relativeTime: {
            future: function(e) {
                return /(\u10ec\u10d0\u10db\u10d8|\u10ec\u10e3\u10d7\u10d8|\u10e1\u10d0\u10d0\u10d7\u10d8|\u10ec\u10d4\u10da\u10d8)/.test(e) ? e.replace(/\u10d8$/, "\u10e8\u10d8") : e + "\u10e8\u10d8"
            },
            past: function(e) {
                return /(\u10ec\u10d0\u10db\u10d8|\u10ec\u10e3\u10d7\u10d8|\u10e1\u10d0\u10d0\u10d7\u10d8|\u10d3\u10e6\u10d4|\u10d7\u10d5\u10d4)/.test(e) ? e.replace(/(\u10d8|\u10d4)$/, "\u10d8\u10e1 \u10ec\u10d8\u10dc") : /\u10ec\u10d4\u10da\u10d8/.test(e) ? e.replace(/\u10ec\u10d4\u10da\u10d8$/, "\u10ec\u10da\u10d8\u10e1 \u10ec\u10d8\u10dc") : void 0
            },
            s: "\u10e0\u10d0\u10db\u10d3\u10d4\u10dc\u10d8\u10db\u10d4 \u10ec\u10d0\u10db\u10d8",
            ss: "%d \u10ec\u10d0\u10db\u10d8",
            m: "\u10ec\u10e3\u10d7\u10d8",
            mm: "%d \u10ec\u10e3\u10d7\u10d8",
            h: "\u10e1\u10d0\u10d0\u10d7\u10d8",
            hh: "%d \u10e1\u10d0\u10d0\u10d7\u10d8",
            d: "\u10d3\u10e6\u10d4",
            dd: "%d \u10d3\u10e6\u10d4",
            M: "\u10d7\u10d5\u10d4",
            MM: "%d \u10d7\u10d5\u10d4",
            y: "\u10ec\u10d4\u10da\u10d8",
            yy: "%d \u10ec\u10d4\u10da\u10d8"
        },
        dayOfMonthOrdinalParse: /0|1-\u10da\u10d8|\u10db\u10d4-\d{1,2}|\d{1,2}-\u10d4/,
        ordinal: function(e) {
            return 0 === e ? e : 1 === e ? e + "-\u10da\u10d8" : e < 20 || e <= 100 && e % 20 == 0 || e % 100 == 0 ? "\u10db\u10d4-" + e : e + "-\u10d4"
        },
        week: {
            dow: 1,
            doy: 7
        }
    });
    var sn = {
        0: "-\u0448\u0456",
        1: "-\u0448\u0456",
        2: "-\u0448\u0456",
        3: "-\u0448\u0456",
        4: "-\u0448\u0456",
        5: "-\u0448\u0456",
        6: "-\u0448\u044b",
        7: "-\u0448\u0456",
        8: "-\u0448\u0456",
        9: "-\u0448\u044b",
        10: "-\u0448\u044b",
        20: "-\u0448\u044b",
        30: "-\u0448\u044b",
        40: "-\u0448\u044b",
        50: "-\u0448\u0456",
        60: "-\u0448\u044b",
        70: "-\u0448\u0456",
        80: "-\u0448\u0456",
        90: "-\u0448\u044b",
        100: "-\u0448\u0456"
    };
    l.defineLocale("kk", {
        months: "\u049b\u0430\u04a3\u0442\u0430\u0440_\u0430\u049b\u043f\u0430\u043d_\u043d\u0430\u0443\u0440\u044b\u0437_\u0441\u04d9\u0443\u0456\u0440_\u043c\u0430\u043c\u044b\u0440_\u043c\u0430\u0443\u0441\u044b\u043c_\u0448\u0456\u043b\u0434\u0435_\u0442\u0430\u043c\u044b\u0437_\u049b\u044b\u0440\u043a\u04af\u0439\u0435\u043a_\u049b\u0430\u0437\u0430\u043d_\u049b\u0430\u0440\u0430\u0448\u0430_\u0436\u0435\u043b\u0442\u043e\u049b\u0441\u0430\u043d".split("_"),
        monthsShort: "\u049b\u0430\u04a3_\u0430\u049b\u043f_\u043d\u0430\u0443_\u0441\u04d9\u0443_\u043c\u0430\u043c_\u043c\u0430\u0443_\u0448\u0456\u043b_\u0442\u0430\u043c_\u049b\u044b\u0440_\u049b\u0430\u0437_\u049b\u0430\u0440_\u0436\u0435\u043b".split("_"),
        weekdays: "\u0436\u0435\u043a\u0441\u0435\u043d\u0431\u0456_\u0434\u04af\u0439\u0441\u0435\u043d\u0431\u0456_\u0441\u0435\u0439\u0441\u0435\u043d\u0431\u0456_\u0441\u04d9\u0440\u0441\u0435\u043d\u0431\u0456_\u0431\u0435\u0439\u0441\u0435\u043d\u0431\u0456_\u0436\u04b1\u043c\u0430_\u0441\u0435\u043d\u0431\u0456".split("_"),
        weekdaysShort: "\u0436\u0435\u043a_\u0434\u04af\u0439_\u0441\u0435\u0439_\u0441\u04d9\u0440_\u0431\u0435\u0439_\u0436\u04b1\u043c_\u0441\u0435\u043d".split("_"),
        weekdaysMin: "\u0436\u043a_\u0434\u0439_\u0441\u0439_\u0441\u0440_\u0431\u0439_\u0436\u043c_\u0441\u043d".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[\u0411\u04af\u0433\u0456\u043d \u0441\u0430\u0493\u0430\u0442] LT",
            nextDay: "[\u0415\u0440\u0442\u0435\u04a3 \u0441\u0430\u0493\u0430\u0442] LT",
            nextWeek: "dddd [\u0441\u0430\u0493\u0430\u0442] LT",
            lastDay: "[\u041a\u0435\u0448\u0435 \u0441\u0430\u0493\u0430\u0442] LT",
            lastWeek: "[\u04e8\u0442\u043a\u0435\u043d \u0430\u043f\u0442\u0430\u043d\u044b\u04a3] dddd [\u0441\u0430\u0493\u0430\u0442] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s \u0456\u0448\u0456\u043d\u0434\u0435",
            past: "%s \u0431\u04b1\u0440\u044b\u043d",
            s: "\u0431\u0456\u0440\u043d\u0435\u0448\u0435 \u0441\u0435\u043a\u0443\u043d\u0434",
            ss: "%d \u0441\u0435\u043a\u0443\u043d\u0434",
            m: "\u0431\u0456\u0440 \u043c\u0438\u043d\u0443\u0442",
            mm: "%d \u043c\u0438\u043d\u0443\u0442",
            h: "\u0431\u0456\u0440 \u0441\u0430\u0493\u0430\u0442",
            hh: "%d \u0441\u0430\u0493\u0430\u0442",
            d: "\u0431\u0456\u0440 \u043a\u04af\u043d",
            dd: "%d \u043a\u04af\u043d",
            M: "\u0431\u0456\u0440 \u0430\u0439",
            MM: "%d \u0430\u0439",
            y: "\u0431\u0456\u0440 \u0436\u044b\u043b",
            yy: "%d \u0436\u044b\u043b"
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(\u0448\u0456|\u0448\u044b)/,
        ordinal: function(e) {
            return e + (sn[e] || sn[e % 10] || sn[100 <= e ? 100 : null])
        },
        week: {
            dow: 1,
            doy: 7
        }
    });
    var nn = {
        1: "\u17e1",
        2: "\u17e2",
        3: "\u17e3",
        4: "\u17e4",
        5: "\u17e5",
        6: "\u17e6",
        7: "\u17e7",
        8: "\u17e8",
        9: "\u17e9",
        0: "\u17e0"
    }
      , dn = {
        "\u17e1": "1",
        "\u17e2": "2",
        "\u17e3": "3",
        "\u17e4": "4",
        "\u17e5": "5",
        "\u17e6": "6",
        "\u17e7": "7",
        "\u17e8": "8",
        "\u17e9": "9",
        "\u17e0": "0"
    };
    l.defineLocale("km", {
        months: "\u1798\u1780\u179a\u17b6_\u1780\u17bb\u1798\u17d2\u1797\u17c8_\u1798\u17b8\u1793\u17b6_\u1798\u17c1\u179f\u17b6_\u17a7\u179f\u1797\u17b6_\u1798\u17b7\u1790\u17bb\u1793\u17b6_\u1780\u1780\u17d2\u1780\u178a\u17b6_\u179f\u17b8\u17a0\u17b6_\u1780\u1789\u17d2\u1789\u17b6_\u178f\u17bb\u179b\u17b6_\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6_\u1792\u17d2\u1793\u17bc".split("_"),
        monthsShort: "\u1798\u1780\u179a\u17b6_\u1780\u17bb\u1798\u17d2\u1797\u17c8_\u1798\u17b8\u1793\u17b6_\u1798\u17c1\u179f\u17b6_\u17a7\u179f\u1797\u17b6_\u1798\u17b7\u1790\u17bb\u1793\u17b6_\u1780\u1780\u17d2\u1780\u178a\u17b6_\u179f\u17b8\u17a0\u17b6_\u1780\u1789\u17d2\u1789\u17b6_\u178f\u17bb\u179b\u17b6_\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6_\u1792\u17d2\u1793\u17bc".split("_"),
        weekdays: "\u17a2\u17b6\u1791\u17b7\u178f\u17d2\u1799_\u1785\u17d0\u1793\u17d2\u1791_\u17a2\u1784\u17d2\u1782\u17b6\u179a_\u1796\u17bb\u1792_\u1796\u17d2\u179a\u17a0\u179f\u17d2\u1794\u178f\u17b7\u17cd_\u179f\u17bb\u1780\u17d2\u179a_\u179f\u17c5\u179a\u17cd".split("_"),
        weekdaysShort: "\u17a2\u17b6_\u1785_\u17a2_\u1796_\u1796\u17d2\u179a_\u179f\u17bb_\u179f".split("_"),
        weekdaysMin: "\u17a2\u17b6_\u1785_\u17a2_\u1796_\u1796\u17d2\u179a_\u179f\u17bb_\u179f".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        meridiemParse: /\u1796\u17d2\u179a\u17b9\u1780|\u179b\u17d2\u1784\u17b6\u1785/,
        isPM: function(e) {
            return "\u179b\u17d2\u1784\u17b6\u1785" === e
        },
        meridiem: function(e, a, t) {
            return e < 12 ? "\u1796\u17d2\u179a\u17b9\u1780" : "\u179b\u17d2\u1784\u17b6\u1785"
        },
        calendar: {
            sameDay: "[\u1790\u17d2\u1784\u17c3\u1793\u17c1\u17c7 \u1798\u17c9\u17c4\u1784] LT",
            nextDay: "[\u179f\u17d2\u17a2\u17c2\u1780 \u1798\u17c9\u17c4\u1784] LT",
            nextWeek: "dddd [\u1798\u17c9\u17c4\u1784] LT",
            lastDay: "[\u1798\u17d2\u179f\u17b7\u179b\u1798\u17b7\u1789 \u1798\u17c9\u17c4\u1784] LT",
            lastWeek: "dddd [\u179f\u1794\u17d2\u178f\u17b6\u17a0\u17cd\u1798\u17bb\u1793] [\u1798\u17c9\u17c4\u1784] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s\u1791\u17c0\u178f",
            past: "%s\u1798\u17bb\u1793",
            s: "\u1794\u17c9\u17bb\u1793\u17d2\u1798\u17b6\u1793\u179c\u17b7\u1793\u17b6\u1791\u17b8",
            ss: "%d \u179c\u17b7\u1793\u17b6\u1791\u17b8",
            m: "\u1798\u17bd\u1799\u1793\u17b6\u1791\u17b8",
            mm: "%d \u1793\u17b6\u1791\u17b8",
            h: "\u1798\u17bd\u1799\u1798\u17c9\u17c4\u1784",
            hh: "%d \u1798\u17c9\u17c4\u1784",
            d: "\u1798\u17bd\u1799\u1790\u17d2\u1784\u17c3",
            dd: "%d \u1790\u17d2\u1784\u17c3",
            M: "\u1798\u17bd\u1799\u1781\u17c2",
            MM: "%d \u1781\u17c2",
            y: "\u1798\u17bd\u1799\u1786\u17d2\u1793\u17b6\u17c6",
            yy: "%d \u1786\u17d2\u1793\u17b6\u17c6"
        },
        dayOfMonthOrdinalParse: /\u1791\u17b8\d{1,2}/,
        ordinal: "\u1791\u17b8%d",
        preparse: function(e) {
            return e.replace(/[\u17e1\u17e2\u17e3\u17e4\u17e5\u17e6\u17e7\u17e8\u17e9\u17e0]/g, function(e) {
                return dn[e]
            })
        },
        postformat: function(e) {
            return e.replace(/\d/g, function(e) {
                return nn[e]
            })
        },
        week: {
            dow: 1,
            doy: 4
        }
    });
    var rn = {
        1: "\u0ce7",
        2: "\u0ce8",
        3: "\u0ce9",
        4: "\u0cea",
        5: "\u0ceb",
        6: "\u0cec",
        7: "\u0ced",
        8: "\u0cee",
        9: "\u0cef",
        0: "\u0ce6"
    }
      , _n = {
        "\u0ce7": "1",
        "\u0ce8": "2",
        "\u0ce9": "3",
        "\u0cea": "4",
        "\u0ceb": "5",
        "\u0cec": "6",
        "\u0ced": "7",
        "\u0cee": "8",
        "\u0cef": "9",
        "\u0ce6": "0"
    };
    l.defineLocale("kn", {
        months: "\u0c9c\u0ca8\u0cb5\u0cb0\u0cbf_\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cb5\u0cb0\u0cbf_\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd_\u0c8f\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd_\u0cae\u0cc6\u0cd5_\u0c9c\u0cc2\u0ca8\u0ccd_\u0c9c\u0cc1\u0cb2\u0cc6\u0cd6_\u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd_\u0cb8\u0cc6\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd_\u0c85\u0c95\u0ccd\u0c9f\u0cc6\u0cc2\u0cd5\u0cac\u0cb0\u0ccd_\u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd_\u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd".split("_"),
        monthsShort: "\u0c9c\u0ca8_\u0cab\u0cc6\u0cac\u0ccd\u0cb0_\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd_\u0c8f\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd_\u0cae\u0cc6\u0cd5_\u0c9c\u0cc2\u0ca8\u0ccd_\u0c9c\u0cc1\u0cb2\u0cc6\u0cd6_\u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd_\u0cb8\u0cc6\u0caa\u0ccd\u0c9f\u0cc6\u0c82_\u0c85\u0c95\u0ccd\u0c9f\u0cc6\u0cc2\u0cd5_\u0ca8\u0cb5\u0cc6\u0c82_\u0ca1\u0cbf\u0cb8\u0cc6\u0c82".split("_"),
        monthsParseExact: !0,
        weekdays: "\u0cad\u0cbe\u0ca8\u0cc1\u0cb5\u0cbe\u0cb0_\u0cb8\u0cc6\u0cc2\u0cd5\u0cae\u0cb5\u0cbe\u0cb0_\u0cae\u0c82\u0c97\u0cb3\u0cb5\u0cbe\u0cb0_\u0cac\u0cc1\u0ca7\u0cb5\u0cbe\u0cb0_\u0c97\u0cc1\u0cb0\u0cc1\u0cb5\u0cbe\u0cb0_\u0cb6\u0cc1\u0c95\u0ccd\u0cb0\u0cb5\u0cbe\u0cb0_\u0cb6\u0ca8\u0cbf\u0cb5\u0cbe\u0cb0".split("_"),
        weekdaysShort: "\u0cad\u0cbe\u0ca8\u0cc1_\u0cb8\u0cc6\u0cc2\u0cd5\u0cae_\u0cae\u0c82\u0c97\u0cb3_\u0cac\u0cc1\u0ca7_\u0c97\u0cc1\u0cb0\u0cc1_\u0cb6\u0cc1\u0c95\u0ccd\u0cb0_\u0cb6\u0ca8\u0cbf".split("_"),
        weekdaysMin: "\u0cad\u0cbe_\u0cb8\u0cc6\u0cc2\u0cd5_\u0cae\u0c82_\u0cac\u0cc1_\u0c97\u0cc1_\u0cb6\u0cc1_\u0cb6".split("_"),
        longDateFormat: {
            LT: "A h:mm",
            LTS: "A h:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm",
            LLLL: "dddd, D MMMM YYYY, A h:mm"
        },
        calendar: {
            sameDay: "[\u0c87\u0c82\u0ca6\u0cc1] LT",
            nextDay: "[\u0ca8\u0cbe\u0cb3\u0cc6] LT",
            nextWeek: "dddd, LT",
            lastDay: "[\u0ca8\u0cbf\u0ca8\u0ccd\u0ca8\u0cc6] LT",
            lastWeek: "[\u0c95\u0cc6\u0cc2\u0ca8\u0cc6\u0caf] dddd, LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s \u0ca8\u0c82\u0ca4\u0cb0",
            past: "%s \u0cb9\u0cbf\u0c82\u0ca6\u0cc6",
            s: "\u0c95\u0cc6\u0cb2\u0cb5\u0cc1 \u0c95\u0ccd\u0cb7\u0ca3\u0c97\u0cb3\u0cc1",
            ss: "%d \u0cb8\u0cc6\u0c95\u0cc6\u0c82\u0ca1\u0cc1\u0c97\u0cb3\u0cc1",
            m: "\u0c92\u0c82\u0ca6\u0cc1 \u0ca8\u0cbf\u0cae\u0cbf\u0cb7",
            mm: "%d \u0ca8\u0cbf\u0cae\u0cbf\u0cb7",
            h: "\u0c92\u0c82\u0ca6\u0cc1 \u0c97\u0c82\u0c9f\u0cc6",
            hh: "%d \u0c97\u0c82\u0c9f\u0cc6",
            d: "\u0c92\u0c82\u0ca6\u0cc1 \u0ca6\u0cbf\u0ca8",
            dd: "%d \u0ca6\u0cbf\u0ca8",
            M: "\u0c92\u0c82\u0ca6\u0cc1 \u0ca4\u0cbf\u0c82\u0c97\u0cb3\u0cc1",
            MM: "%d \u0ca4\u0cbf\u0c82\u0c97\u0cb3\u0cc1",
            y: "\u0c92\u0c82\u0ca6\u0cc1 \u0cb5\u0cb0\u0ccd\u0cb7",
            yy: "%d \u0cb5\u0cb0\u0ccd\u0cb7"
        },
        preparse: function(e) {
            return e.replace(/[\u0ce7\u0ce8\u0ce9\u0cea\u0ceb\u0cec\u0ced\u0cee\u0cef\u0ce6]/g, function(e) {
                return _n[e]
            })
        },
        postformat: function(e) {
            return e.replace(/\d/g, function(e) {
                return rn[e]
            })
        },
        meridiemParse: /\u0cb0\u0cbe\u0ca4\u0ccd\u0cb0\u0cbf|\u0cac\u0cc6\u0cb3\u0cbf\u0c97\u0ccd\u0c97\u0cc6|\u0cae\u0ca7\u0ccd\u0caf\u0cbe\u0cb9\u0ccd\u0ca8|\u0cb8\u0c82\u0c9c\u0cc6/,
        meridiemHour: function(e, a) {
            return 12 === e && (e = 0),
            "\u0cb0\u0cbe\u0ca4\u0ccd\u0cb0\u0cbf" === a ? e < 4 ? e : e + 12 : "\u0cac\u0cc6\u0cb3\u0cbf\u0c97\u0ccd\u0c97\u0cc6" === a ? e : "\u0cae\u0ca7\u0ccd\u0caf\u0cbe\u0cb9\u0ccd\u0ca8" === a ? 10 <= e ? e : e + 12 : "\u0cb8\u0c82\u0c9c\u0cc6" === a ? e + 12 : void 0
        },
        meridiem: function(e, a, t) {
            return e < 4 ? "\u0cb0\u0cbe\u0ca4\u0ccd\u0cb0\u0cbf" : e < 10 ? "\u0cac\u0cc6\u0cb3\u0cbf\u0c97\u0ccd\u0c97\u0cc6" : e < 17 ? "\u0cae\u0ca7\u0ccd\u0caf\u0cbe\u0cb9\u0ccd\u0ca8" : e < 20 ? "\u0cb8\u0c82\u0c9c\u0cc6" : "\u0cb0\u0cbe\u0ca4\u0ccd\u0cb0\u0cbf"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(\u0ca8\u0cc6\u0cd5)/,
        ordinal: function(e) {
            return e + "\u0ca8\u0cc6\u0cd5"
        },
        week: {
            dow: 0,
            doy: 6
        }
    }),
    l.defineLocale("ko", {
        months: "1\uc6d4_2\uc6d4_3\uc6d4_4\uc6d4_5\uc6d4_6\uc6d4_7\uc6d4_8\uc6d4_9\uc6d4_10\uc6d4_11\uc6d4_12\uc6d4".split("_"),
        monthsShort: "1\uc6d4_2\uc6d4_3\uc6d4_4\uc6d4_5\uc6d4_6\uc6d4_7\uc6d4_8\uc6d4_9\uc6d4_10\uc6d4_11\uc6d4_12\uc6d4".split("_"),
        weekdays: "\uc77c\uc694\uc77c_\uc6d4\uc694\uc77c_\ud654\uc694\uc77c_\uc218\uc694\uc77c_\ubaa9\uc694\uc77c_\uae08\uc694\uc77c_\ud1a0\uc694\uc77c".split("_"),
        weekdaysShort: "\uc77c_\uc6d4_\ud654_\uc218_\ubaa9_\uae08_\ud1a0".split("_"),
        weekdaysMin: "\uc77c_\uc6d4_\ud654_\uc218_\ubaa9_\uae08_\ud1a0".split("_"),
        longDateFormat: {
            LT: "A h:mm",
            LTS: "A h:mm:ss",
            L: "YYYY.MM.DD.",
            LL: "YYYY\ub144 MMMM D\uc77c",
            LLL: "YYYY\ub144 MMMM D\uc77c A h:mm",
            LLLL: "YYYY\ub144 MMMM D\uc77c dddd A h:mm",
            l: "YYYY.MM.DD.",
            ll: "YYYY\ub144 MMMM D\uc77c",
            lll: "YYYY\ub144 MMMM D\uc77c A h:mm",
            llll: "YYYY\ub144 MMMM D\uc77c dddd A h:mm"
        },
        calendar: {
            sameDay: "\uc624\ub298 LT",
            nextDay: "\ub0b4\uc77c LT",
            nextWeek: "dddd LT",
            lastDay: "\uc5b4\uc81c LT",
            lastWeek: "\uc9c0\ub09c\uc8fc dddd LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s \ud6c4",
            past: "%s \uc804",
            s: "\uba87 \ucd08",
            ss: "%d\ucd08",
            m: "1\ubd84",
            mm: "%d\ubd84",
            h: "\ud55c \uc2dc\uac04",
            hh: "%d\uc2dc\uac04",
            d: "\ud558\ub8e8",
            dd: "%d\uc77c",
            M: "\ud55c \ub2ec",
            MM: "%d\ub2ec",
            y: "\uc77c \ub144",
            yy: "%d\ub144"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(\uc77c|\uc6d4|\uc8fc)/,
        ordinal: function(e, a) {
            switch (a) {
            case "d":
            case "D":
            case "DDD":
                return e + "\uc77c";
            case "M":
                return e + "\uc6d4";
            case "w":
            case "W":
                return e + "\uc8fc";
            default:
                return e
            }
        },
        meridiemParse: /\uc624\uc804|\uc624\ud6c4/,
        isPM: function(e) {
            return "\uc624\ud6c4" === e
        },
        meridiem: function(e, a, t) {
            return e < 12 ? "\uc624\uc804" : "\uc624\ud6c4"
        }
    });
    var on = {
        1: "\u0661",
        2: "\u0662",
        3: "\u0663",
        4: "\u0664",
        5: "\u0665",
        6: "\u0666",
        7: "\u0667",
        8: "\u0668",
        9: "\u0669",
        0: "\u0660"
    }
      , mn = {
        "\u0661": "1",
        "\u0662": "2",
        "\u0663": "3",
        "\u0664": "4",
        "\u0665": "5",
        "\u0666": "6",
        "\u0667": "7",
        "\u0668": "8",
        "\u0669": "9",
        "\u0660": "0"
    }
      , un = ["\u06a9\u0627\u0646\u0648\u0646\u06cc \u062f\u0648\u0648\u06d5\u0645", "\u0634\u0648\u0628\u0627\u062a", "\u0626\u0627\u0632\u0627\u0631", "\u0646\u06cc\u0633\u0627\u0646", "\u0626\u0627\u06cc\u0627\u0631", "\u062d\u0648\u0632\u06d5\u06cc\u0631\u0627\u0646", "\u062a\u06d5\u0645\u0645\u0648\u0632", "\u0626\u0627\u0628", "\u0626\u06d5\u06cc\u0644\u0648\u0648\u0644", "\u062a\u0634\u0631\u06cc\u0646\u06cc \u06cc\u06d5\u0643\u06d5\u0645", "\u062a\u0634\u0631\u06cc\u0646\u06cc \u062f\u0648\u0648\u06d5\u0645", "\u0643\u0627\u0646\u0648\u0646\u06cc \u06cc\u06d5\u06a9\u06d5\u0645"];
    l.defineLocale("ku", {
        months: un,
        monthsShort: un,
        weekdays: "\u06cc\u0647\u200c\u0643\u0634\u0647\u200c\u0645\u0645\u0647\u200c_\u062f\u0648\u0648\u0634\u0647\u200c\u0645\u0645\u0647\u200c_\u0633\u06ce\u0634\u0647\u200c\u0645\u0645\u0647\u200c_\u0686\u0648\u0627\u0631\u0634\u0647\u200c\u0645\u0645\u0647\u200c_\u067e\u06ce\u0646\u062c\u0634\u0647\u200c\u0645\u0645\u0647\u200c_\u0647\u0647\u200c\u06cc\u0646\u06cc_\u0634\u0647\u200c\u0645\u0645\u0647\u200c".split("_"),
        weekdaysShort: "\u06cc\u0647\u200c\u0643\u0634\u0647\u200c\u0645_\u062f\u0648\u0648\u0634\u0647\u200c\u0645_\u0633\u06ce\u0634\u0647\u200c\u0645_\u0686\u0648\u0627\u0631\u0634\u0647\u200c\u0645_\u067e\u06ce\u0646\u062c\u0634\u0647\u200c\u0645_\u0647\u0647\u200c\u06cc\u0646\u06cc_\u0634\u0647\u200c\u0645\u0645\u0647\u200c".split("_"),
        weekdaysMin: "\u06cc_\u062f_\u0633_\u0686_\u067e_\u0647_\u0634".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        meridiemParse: /\u0626\u06ce\u0648\u0627\u0631\u0647\u200c|\u0628\u0647\u200c\u06cc\u0627\u0646\u06cc/,
        isPM: function(e) {
            return /\u0626\u06ce\u0648\u0627\u0631\u0647\u200c/.test(e)
        },
        meridiem: function(e, a, t) {
            return e < 12 ? "\u0628\u0647\u200c\u06cc\u0627\u0646\u06cc" : "\u0626\u06ce\u0648\u0627\u0631\u0647\u200c"
        },
        calendar: {
            sameDay: "[\u0626\u0647\u200c\u0645\u0631\u06c6 \u0643\u0627\u062a\u0698\u0645\u06ce\u0631] LT",
            nextDay: "[\u0628\u0647\u200c\u06cc\u0627\u0646\u06cc \u0643\u0627\u062a\u0698\u0645\u06ce\u0631] LT",
            nextWeek: "dddd [\u0643\u0627\u062a\u0698\u0645\u06ce\u0631] LT",
            lastDay: "[\u062f\u0648\u06ce\u0646\u06ce \u0643\u0627\u062a\u0698\u0645\u06ce\u0631] LT",
            lastWeek: "dddd [\u0643\u0627\u062a\u0698\u0645\u06ce\u0631] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "\u0644\u0647\u200c %s",
            past: "%s",
            s: "\u0686\u0647\u200c\u0646\u062f \u0686\u0631\u0643\u0647\u200c\u06cc\u0647\u200c\u0643",
            ss: "\u0686\u0631\u0643\u0647\u200c %d",
            m: "\u06cc\u0647\u200c\u0643 \u062e\u0648\u0644\u0647\u200c\u0643",
            mm: "%d \u062e\u0648\u0644\u0647\u200c\u0643",
            h: "\u06cc\u0647\u200c\u0643 \u0643\u0627\u062a\u0698\u0645\u06ce\u0631",
            hh: "%d \u0643\u0627\u062a\u0698\u0645\u06ce\u0631",
            d: "\u06cc\u0647\u200c\u0643 \u0695\u06c6\u0698",
            dd: "%d \u0695\u06c6\u0698",
            M: "\u06cc\u0647\u200c\u0643 \u0645\u0627\u0646\u06af",
            MM: "%d \u0645\u0627\u0646\u06af",
            y: "\u06cc\u0647\u200c\u0643 \u0633\u0627\u06b5",
            yy: "%d \u0633\u0627\u06b5"
        },
        preparse: function(e) {
            return e.replace(/[\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669\u0660]/g, function(e) {
                return mn[e]
            }).replace(/\u060c/g, ",")
        },
        postformat: function(e) {
            return e.replace(/\d/g, function(e) {
                return on[e]
            }).replace(/,/g, "\u060c")
        },
        week: {
            dow: 6,
            doy: 12
        }
    });
    var ln = {
        0: "-\u0447\u04af",
        1: "-\u0447\u0438",
        2: "-\u0447\u0438",
        3: "-\u0447\u04af",
        4: "-\u0447\u04af",
        5: "-\u0447\u0438",
        6: "-\u0447\u044b",
        7: "-\u0447\u0438",
        8: "-\u0447\u0438",
        9: "-\u0447\u0443",
        10: "-\u0447\u0443",
        20: "-\u0447\u044b",
        30: "-\u0447\u0443",
        40: "-\u0447\u044b",
        50: "-\u0447\u04af",
        60: "-\u0447\u044b",
        70: "-\u0447\u0438",
        80: "-\u0447\u0438",
        90: "-\u0447\u0443",
        100: "-\u0447\u04af"
    };
    function Mn(e, a, t, s) {
        var n = {
            m: ["eng Minutt", "enger Minutt"],
            h: ["eng Stonn", "enger Stonn"],
            d: ["een Dag", "engem Dag"],
            M: ["ee Mount", "engem Mount"],
            y: ["ee Joer", "engem Joer"]
        };
        return a ? n[t][0] : n[t][1]
    }
    function hn(e) {
        if (e = parseInt(e, 10),
        isNaN(e))
            return !1;
        if (e < 0)
            return !0;
        if (e < 10)
            return 4 <= e && e <= 7;
        if (e < 100) {
            var a = e % 10;
            return hn(0 === a ? e / 10 : a)
        }
        if (e < 1e4) {
            for (; 10 <= e; )
                e /= 10;
            return hn(e)
        }
        return hn(e /= 1e3)
    }
    l.defineLocale("ky", {
        months: "\u044f\u043d\u0432\u0430\u0440\u044c_\u0444\u0435\u0432\u0440\u0430\u043b\u044c_\u043c\u0430\u0440\u0442_\u0430\u043f\u0440\u0435\u043b\u044c_\u043c\u0430\u0439_\u0438\u044e\u043d\u044c_\u0438\u044e\u043b\u044c_\u0430\u0432\u0433\u0443\u0441\u0442_\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044c_\u043e\u043a\u0442\u044f\u0431\u0440\u044c_\u043d\u043e\u044f\u0431\u0440\u044c_\u0434\u0435\u043a\u0430\u0431\u0440\u044c".split("_"),
        monthsShort: "\u044f\u043d\u0432_\u0444\u0435\u0432_\u043c\u0430\u0440\u0442_\u0430\u043f\u0440_\u043c\u0430\u0439_\u0438\u044e\u043d\u044c_\u0438\u044e\u043b\u044c_\u0430\u0432\u0433_\u0441\u0435\u043d_\u043e\u043a\u0442_\u043d\u043e\u044f_\u0434\u0435\u043a".split("_"),
        weekdays: "\u0416\u0435\u043a\u0448\u0435\u043c\u0431\u0438_\u0414\u04af\u0439\u0448\u04e9\u043c\u0431\u04af_\u0428\u0435\u0439\u0448\u0435\u043c\u0431\u0438_\u0428\u0430\u0440\u0448\u0435\u043c\u0431\u0438_\u0411\u0435\u0439\u0448\u0435\u043c\u0431\u0438_\u0416\u0443\u043c\u0430_\u0418\u0448\u0435\u043c\u0431\u0438".split("_"),
        weekdaysShort: "\u0416\u0435\u043a_\u0414\u04af\u0439_\u0428\u0435\u0439_\u0428\u0430\u0440_\u0411\u0435\u0439_\u0416\u0443\u043c_\u0418\u0448\u0435".split("_"),
        weekdaysMin: "\u0416\u043a_\u0414\u0439_\u0428\u0439_\u0428\u0440_\u0411\u0439_\u0416\u043c_\u0418\u0448".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[\u0411\u04af\u0433\u04af\u043d \u0441\u0430\u0430\u0442] LT",
            nextDay: "[\u042d\u0440\u0442\u0435\u04a3 \u0441\u0430\u0430\u0442] LT",
            nextWeek: "dddd [\u0441\u0430\u0430\u0442] LT",
            lastDay: "[\u041a\u0435\u0447\u044d\u044d \u0441\u0430\u0430\u0442] LT",
            lastWeek: "[\u04e8\u0442\u043a\u04e9\u043d \u0430\u043f\u0442\u0430\u043d\u044b\u043d] dddd [\u043a\u04af\u043d\u04af] [\u0441\u0430\u0430\u0442] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s \u0438\u0447\u0438\u043d\u0434\u0435",
            past: "%s \u043c\u0443\u0440\u0443\u043d",
            s: "\u0431\u0438\u0440\u043d\u0435\u0447\u0435 \u0441\u0435\u043a\u0443\u043d\u0434",
            ss: "%d \u0441\u0435\u043a\u0443\u043d\u0434",
            m: "\u0431\u0438\u0440 \u043c\u04af\u043d\u04e9\u0442",
            mm: "%d \u043c\u04af\u043d\u04e9\u0442",
            h: "\u0431\u0438\u0440 \u0441\u0430\u0430\u0442",
            hh: "%d \u0441\u0430\u0430\u0442",
            d: "\u0431\u0438\u0440 \u043a\u04af\u043d",
            dd: "%d \u043a\u04af\u043d",
            M: "\u0431\u0438\u0440 \u0430\u0439",
            MM: "%d \u0430\u0439",
            y: "\u0431\u0438\u0440 \u0436\u044b\u043b",
            yy: "%d \u0436\u044b\u043b"
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(\u0447\u0438|\u0447\u044b|\u0447\u04af|\u0447\u0443)/,
        ordinal: function(e) {
            return e + (ln[e] || ln[e % 10] || ln[100 <= e ? 100 : null])
        },
        week: {
            dow: 1,
            doy: 7
        }
    }),
    l.defineLocale("lb", {
        months: "Januar_Februar_M\xe4erz_Abr\xebll_Mee_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
        monthsShort: "Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),
        monthsParseExact: !0,
        weekdays: "Sonndeg_M\xe9indeg_D\xebnschdeg_M\xebttwoch_Donneschdeg_Freideg_Samschdeg".split("_"),
        weekdaysShort: "So._M\xe9._D\xeb._M\xeb._Do._Fr._Sa.".split("_"),
        weekdaysMin: "So_M\xe9_D\xeb_M\xeb_Do_Fr_Sa".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "H:mm [Auer]",
            LTS: "H:mm:ss [Auer]",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm [Auer]",
            LLLL: "dddd, D. MMMM YYYY H:mm [Auer]"
        },
        calendar: {
            sameDay: "[Haut um] LT",
            sameElse: "L",
            nextDay: "[Muer um] LT",
            nextWeek: "dddd [um] LT",
            lastDay: "[G\xebschter um] LT",
            lastWeek: function() {
                switch (this.day()) {
                case 2:
                case 4:
                    return "[Leschten] dddd [um] LT";
                default:
                    return "[Leschte] dddd [um] LT"
                }
            }
        },
        relativeTime: {
            future: function(e) {
                return hn(e.substr(0, e.indexOf(" "))) ? "a " + e : "an " + e
            },
            past: function(e) {
                return hn(e.substr(0, e.indexOf(" "))) ? "viru " + e : "virun " + e
            },
            s: "e puer Sekonnen",
            ss: "%d Sekonnen",
            m: Mn,
            mm: "%d Minutten",
            h: Mn,
            hh: "%d Stonnen",
            d: Mn,
            dd: "%d Deeg",
            M: Mn,
            MM: "%d M\xe9int",
            y: Mn,
            yy: "%d Joer"
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("lo", {
        months: "\u0ea1\u0eb1\u0e87\u0e81\u0ead\u0e99_\u0e81\u0eb8\u0ea1\u0e9e\u0eb2_\u0ea1\u0eb5\u0e99\u0eb2_\u0ec0\u0ea1\u0eaa\u0eb2_\u0e9e\u0eb6\u0e94\u0eaa\u0eb0\u0e9e\u0eb2_\u0ea1\u0eb4\u0e96\u0eb8\u0e99\u0eb2_\u0e81\u0ecd\u0ea5\u0eb0\u0e81\u0ebb\u0e94_\u0eaa\u0eb4\u0e87\u0eab\u0eb2_\u0e81\u0eb1\u0e99\u0e8d\u0eb2_\u0e95\u0eb8\u0ea5\u0eb2_\u0e9e\u0eb0\u0e88\u0eb4\u0e81_\u0e97\u0eb1\u0e99\u0ea7\u0eb2".split("_"),
        monthsShort: "\u0ea1\u0eb1\u0e87\u0e81\u0ead\u0e99_\u0e81\u0eb8\u0ea1\u0e9e\u0eb2_\u0ea1\u0eb5\u0e99\u0eb2_\u0ec0\u0ea1\u0eaa\u0eb2_\u0e9e\u0eb6\u0e94\u0eaa\u0eb0\u0e9e\u0eb2_\u0ea1\u0eb4\u0e96\u0eb8\u0e99\u0eb2_\u0e81\u0ecd\u0ea5\u0eb0\u0e81\u0ebb\u0e94_\u0eaa\u0eb4\u0e87\u0eab\u0eb2_\u0e81\u0eb1\u0e99\u0e8d\u0eb2_\u0e95\u0eb8\u0ea5\u0eb2_\u0e9e\u0eb0\u0e88\u0eb4\u0e81_\u0e97\u0eb1\u0e99\u0ea7\u0eb2".split("_"),
        weekdays: "\u0ead\u0eb2\u0e97\u0eb4\u0e94_\u0e88\u0eb1\u0e99_\u0ead\u0eb1\u0e87\u0e84\u0eb2\u0e99_\u0e9e\u0eb8\u0e94_\u0e9e\u0eb0\u0eab\u0eb1\u0e94_\u0eaa\u0eb8\u0e81_\u0ec0\u0eaa\u0ebb\u0eb2".split("_"),
        weekdaysShort: "\u0e97\u0eb4\u0e94_\u0e88\u0eb1\u0e99_\u0ead\u0eb1\u0e87\u0e84\u0eb2\u0e99_\u0e9e\u0eb8\u0e94_\u0e9e\u0eb0\u0eab\u0eb1\u0e94_\u0eaa\u0eb8\u0e81_\u0ec0\u0eaa\u0ebb\u0eb2".split("_"),
        weekdaysMin: "\u0e97_\u0e88_\u0ead\u0e84_\u0e9e_\u0e9e\u0eab_\u0eaa\u0e81_\u0eaa".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "\u0ea7\u0eb1\u0e99dddd D MMMM YYYY HH:mm"
        },
        meridiemParse: /\u0e95\u0ead\u0e99\u0ec0\u0e8a\u0ebb\u0ec9\u0eb2|\u0e95\u0ead\u0e99\u0ec1\u0ea5\u0e87/,
        isPM: function(e) {
            return "\u0e95\u0ead\u0e99\u0ec1\u0ea5\u0e87" === e
        },
        meridiem: function(e, a, t) {
            return e < 12 ? "\u0e95\u0ead\u0e99\u0ec0\u0e8a\u0ebb\u0ec9\u0eb2" : "\u0e95\u0ead\u0e99\u0ec1\u0ea5\u0e87"
        },
        calendar: {
            sameDay: "[\u0ea1\u0eb7\u0ec9\u0e99\u0eb5\u0ec9\u0ec0\u0ea7\u0ea5\u0eb2] LT",
            nextDay: "[\u0ea1\u0eb7\u0ec9\u0ead\u0eb7\u0ec8\u0e99\u0ec0\u0ea7\u0ea5\u0eb2] LT",
            nextWeek: "[\u0ea7\u0eb1\u0e99]dddd[\u0edc\u0ec9\u0eb2\u0ec0\u0ea7\u0ea5\u0eb2] LT",
            lastDay: "[\u0ea1\u0eb7\u0ec9\u0ea7\u0eb2\u0e99\u0e99\u0eb5\u0ec9\u0ec0\u0ea7\u0ea5\u0eb2] LT",
            lastWeek: "[\u0ea7\u0eb1\u0e99]dddd[\u0ec1\u0ea5\u0ec9\u0ea7\u0e99\u0eb5\u0ec9\u0ec0\u0ea7\u0ea5\u0eb2] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "\u0ead\u0eb5\u0e81 %s",
            past: "%s\u0e9c\u0ec8\u0eb2\u0e99\u0ea1\u0eb2",
            s: "\u0e9a\u0ecd\u0ec8\u0ec0\u0e97\u0ebb\u0ec8\u0eb2\u0ec3\u0e94\u0ea7\u0eb4\u0e99\u0eb2\u0e97\u0eb5",
            ss: "%d \u0ea7\u0eb4\u0e99\u0eb2\u0e97\u0eb5",
            m: "1 \u0e99\u0eb2\u0e97\u0eb5",
            mm: "%d \u0e99\u0eb2\u0e97\u0eb5",
            h: "1 \u0e8a\u0ebb\u0ec8\u0ea7\u0ec2\u0ea1\u0e87",
            hh: "%d \u0e8a\u0ebb\u0ec8\u0ea7\u0ec2\u0ea1\u0e87",
            d: "1 \u0ea1\u0eb7\u0ec9",
            dd: "%d \u0ea1\u0eb7\u0ec9",
            M: "1 \u0ec0\u0e94\u0eb7\u0ead\u0e99",
            MM: "%d \u0ec0\u0e94\u0eb7\u0ead\u0e99",
            y: "1 \u0e9b\u0eb5",
            yy: "%d \u0e9b\u0eb5"
        },
        dayOfMonthOrdinalParse: /(\u0e97\u0eb5\u0ec8)\d{1,2}/,
        ordinal: function(e) {
            return "\u0e97\u0eb5\u0ec8" + e
        }
    });
    var Ln = {
        ss: "sekund\u0117_sekund\u017ei\u0173_sekundes",
        m: "minut\u0117_minut\u0117s_minut\u0119",
        mm: "minut\u0117s_minu\u010di\u0173_minutes",
        h: "valanda_valandos_valand\u0105",
        hh: "valandos_valand\u0173_valandas",
        d: "diena_dienos_dien\u0105",
        dd: "dienos_dien\u0173_dienas",
        M: "m\u0117nuo_m\u0117nesio_m\u0117nes\u012f",
        MM: "m\u0117nesiai_m\u0117nesi\u0173_m\u0117nesius",
        y: "metai_met\u0173_metus",
        yy: "metai_met\u0173_metus"
    };
    function cn(e, a, t, s) {
        return a ? yn(t)[0] : s ? yn(t)[1] : yn(t)[2]
    }
    function Yn(e) {
        return e % 10 == 0 || 10 < e && e < 20
    }
    function yn(e) {
        return Ln[e].split("_")
    }
    function fn(e, a, t, s) {
        var n = e + " ";
        return 1 === e ? n + cn(0, a, t[0], s) : a ? n + (Yn(e) ? yn(t)[1] : yn(t)[0]) : s ? n + yn(t)[1] : n + (Yn(e) ? yn(t)[1] : yn(t)[2])
    }
    l.defineLocale("lt", {
        months: {
            format: "sausio_vasario_kovo_baland\u017eio_gegu\u017e\u0117s_bir\u017eelio_liepos_rugpj\u016b\u010dio_rugs\u0117jo_spalio_lapkri\u010dio_gruod\u017eio".split("_"),
            standalone: "sausis_vasaris_kovas_balandis_gegu\u017e\u0117_bir\u017eelis_liepa_rugpj\u016btis_rugs\u0117jis_spalis_lapkritis_gruodis".split("_"),
            isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/
        },
        monthsShort: "sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd".split("_"),
        weekdays: {
            format: "sekmadien\u012f_pirmadien\u012f_antradien\u012f_tre\u010diadien\u012f_ketvirtadien\u012f_penktadien\u012f_\u0161e\u0161tadien\u012f".split("_"),
            standalone: "sekmadienis_pirmadienis_antradienis_tre\u010diadienis_ketvirtadienis_penktadienis_\u0161e\u0161tadienis".split("_"),
            isFormat: /dddd HH:mm/
        },
        weekdaysShort: "Sek_Pir_Ant_Tre_Ket_Pen_\u0160e\u0161".split("_"),
        weekdaysMin: "S_P_A_T_K_Pn_\u0160".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY-MM-DD",
            LL: "YYYY [m.] MMMM D [d.]",
            LLL: "YYYY [m.] MMMM D [d.], HH:mm [val.]",
            LLLL: "YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]",
            l: "YYYY-MM-DD",
            ll: "YYYY [m.] MMMM D [d.]",
            lll: "YYYY [m.] MMMM D [d.], HH:mm [val.]",
            llll: "YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]"
        },
        calendar: {
            sameDay: "[\u0160iandien] LT",
            nextDay: "[Rytoj] LT",
            nextWeek: "dddd LT",
            lastDay: "[Vakar] LT",
            lastWeek: "[Pra\u0117jus\u012f] dddd LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "po %s",
            past: "prie\u0161 %s",
            s: function(e, a, t, s) {
                return a ? "kelios sekund\u0117s" : s ? "keli\u0173 sekund\u017ei\u0173" : "kelias sekundes"
            },
            ss: fn,
            m: cn,
            mm: fn,
            h: cn,
            hh: fn,
            d: cn,
            dd: fn,
            M: cn,
            MM: fn,
            y: cn,
            yy: fn
        },
        dayOfMonthOrdinalParse: /\d{1,2}-oji/,
        ordinal: function(e) {
            return e + "-oji"
        },
        week: {
            dow: 1,
            doy: 4
        }
    });
    var kn = {
        ss: "sekundes_sekund\u0113m_sekunde_sekundes".split("_"),
        m: "min\u016btes_min\u016bt\u0113m_min\u016bte_min\u016btes".split("_"),
        mm: "min\u016btes_min\u016bt\u0113m_min\u016bte_min\u016btes".split("_"),
        h: "stundas_stund\u0101m_stunda_stundas".split("_"),
        hh: "stundas_stund\u0101m_stunda_stundas".split("_"),
        d: "dienas_dien\u0101m_diena_dienas".split("_"),
        dd: "dienas_dien\u0101m_diena_dienas".split("_"),
        M: "m\u0113ne\u0161a_m\u0113ne\u0161iem_m\u0113nesis_m\u0113ne\u0161i".split("_"),
        MM: "m\u0113ne\u0161a_m\u0113ne\u0161iem_m\u0113nesis_m\u0113ne\u0161i".split("_"),
        y: "gada_gadiem_gads_gadi".split("_"),
        yy: "gada_gadiem_gads_gadi".split("_")
    };
    function pn(e, a, t) {
        return t ? a % 10 == 1 && a % 100 != 11 ? e[2] : e[3] : a % 10 == 1 && a % 100 != 11 ? e[0] : e[1]
    }
    function Dn(e, a, t) {
        return e + " " + pn(kn[t], e, a)
    }
    function Tn(e, a, t) {
        return pn(kn[t], e, a)
    }
    l.defineLocale("lv", {
        months: "janv\u0101ris_febru\u0101ris_marts_apr\u012blis_maijs_j\u016bnijs_j\u016blijs_augusts_septembris_oktobris_novembris_decembris".split("_"),
        monthsShort: "jan_feb_mar_apr_mai_j\u016bn_j\u016bl_aug_sep_okt_nov_dec".split("_"),
        weekdays: "sv\u0113tdiena_pirmdiena_otrdiena_tre\u0161diena_ceturtdiena_piektdiena_sestdiena".split("_"),
        weekdaysShort: "Sv_P_O_T_C_Pk_S".split("_"),
        weekdaysMin: "Sv_P_O_T_C_Pk_S".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY.",
            LL: "YYYY. [gada] D. MMMM",
            LLL: "YYYY. [gada] D. MMMM, HH:mm",
            LLLL: "YYYY. [gada] D. MMMM, dddd, HH:mm"
        },
        calendar: {
            sameDay: "[\u0160odien pulksten] LT",
            nextDay: "[R\u012bt pulksten] LT",
            nextWeek: "dddd [pulksten] LT",
            lastDay: "[Vakar pulksten] LT",
            lastWeek: "[Pag\u0101ju\u0161\u0101] dddd [pulksten] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "p\u0113c %s",
            past: "pirms %s",
            s: function(e, a) {
                return a ? "da\u017eas sekundes" : "da\u017e\u0101m sekund\u0113m"
            },
            ss: Dn,
            m: Tn,
            mm: Dn,
            h: Tn,
            hh: Dn,
            d: Tn,
            dd: Dn,
            M: Tn,
            MM: Dn,
            y: Tn,
            yy: Dn
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 4
        }
    });
    var gn = {
        words: {
            ss: ["sekund", "sekunda", "sekundi"],
            m: ["jedan minut", "jednog minuta"],
            mm: ["minut", "minuta", "minuta"],
            h: ["jedan sat", "jednog sata"],
            hh: ["sat", "sata", "sati"],
            dd: ["dan", "dana", "dana"],
            MM: ["mjesec", "mjeseca", "mjeseci"],
            yy: ["godina", "godine", "godina"]
        },
        correctGrammaticalCase: function(e, a) {
            return 1 === e ? a[0] : 2 <= e && e <= 4 ? a[1] : a[2]
        },
        translate: function(e, a, t) {
            var s = gn.words[t];
            return 1 === t.length ? a ? s[0] : s[1] : e + " " + gn.correctGrammaticalCase(e, s)
        }
    };
    function wn(e, a, t, s) {
        switch (t) {
        case "s":
            return a ? "\u0445\u044d\u0434\u0445\u044d\u043d \u0441\u0435\u043a\u0443\u043d\u0434" : "\u0445\u044d\u0434\u0445\u044d\u043d \u0441\u0435\u043a\u0443\u043d\u0434\u044b\u043d";
        case "ss":
            return e + (a ? " \u0441\u0435\u043a\u0443\u043d\u0434" : " \u0441\u0435\u043a\u0443\u043d\u0434\u044b\u043d");
        case "m":
        case "mm":
            return e + (a ? " \u043c\u0438\u043d\u0443\u0442" : " \u043c\u0438\u043d\u0443\u0442\u044b\u043d");
        case "h":
        case "hh":
            return e + (a ? " \u0446\u0430\u0433" : " \u0446\u0430\u0433\u0438\u0439\u043d");
        case "d":
        case "dd":
            return e + (a ? " \u04e9\u0434\u04e9\u0440" : " \u04e9\u0434\u0440\u0438\u0439\u043d");
        case "M":
        case "MM":
            return e + (a ? " \u0441\u0430\u0440" : " \u0441\u0430\u0440\u044b\u043d");
        case "y":
        case "yy":
            return e + (a ? " \u0436\u0438\u043b" : " \u0436\u0438\u043b\u0438\u0439\u043d");
        default:
            return e
        }
    }
    l.defineLocale("me", {
        months: "januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar".split("_"),
        monthsShort: "jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.".split("_"),
        monthsParseExact: !0,
        weekdays: "nedjelja_ponedjeljak_utorak_srijeda_\u010detvrtak_petak_subota".split("_"),
        weekdaysShort: "ned._pon._uto._sri._\u010det._pet._sub.".split("_"),
        weekdaysMin: "ne_po_ut_sr_\u010de_pe_su".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd, D. MMMM YYYY H:mm"
        },
        calendar: {
            sameDay: "[danas u] LT",
            nextDay: "[sjutra u] LT",
            nextWeek: function() {
                switch (this.day()) {
                case 0:
                    return "[u] [nedjelju] [u] LT";
                case 3:
                    return "[u] [srijedu] [u] LT";
                case 6:
                    return "[u] [subotu] [u] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                    return "[u] dddd [u] LT"
                }
            },
            lastDay: "[ju\u010de u] LT",
            lastWeek: function() {
                return ["[pro\u0161le] [nedjelje] [u] LT", "[pro\u0161log] [ponedjeljka] [u] LT", "[pro\u0161log] [utorka] [u] LT", "[pro\u0161le] [srijede] [u] LT", "[pro\u0161log] [\u010detvrtka] [u] LT", "[pro\u0161log] [petka] [u] LT", "[pro\u0161le] [subote] [u] LT"][this.day()]
            },
            sameElse: "L"
        },
        relativeTime: {
            future: "za %s",
            past: "prije %s",
            s: "nekoliko sekundi",
            ss: gn.translate,
            m: gn.translate,
            mm: gn.translate,
            h: gn.translate,
            hh: gn.translate,
            d: "dan",
            dd: gn.translate,
            M: "mjesec",
            MM: gn.translate,
            y: "godinu",
            yy: gn.translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 7
        }
    }),
    l.defineLocale("mi", {
        months: "Kohi-t\u0101te_Hui-tanguru_Pout\u016b-te-rangi_Paenga-wh\u0101wh\u0101_Haratua_Pipiri_H\u014dngoingoi_Here-turi-k\u014dk\u0101_Mahuru_Whiringa-\u0101-nuku_Whiringa-\u0101-rangi_Hakihea".split("_"),
        monthsShort: "Kohi_Hui_Pou_Pae_Hara_Pipi_H\u014dngoi_Here_Mahu_Whi-nu_Whi-ra_Haki".split("_"),
        monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
        weekdays: "R\u0101tapu_Mane_T\u016brei_Wenerei_T\u0101ite_Paraire_H\u0101tarei".split("_"),
        weekdaysShort: "Ta_Ma_T\u016b_We_T\u0101i_Pa_H\u0101".split("_"),
        weekdaysMin: "Ta_Ma_T\u016b_We_T\u0101i_Pa_H\u0101".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY [i] HH:mm",
            LLLL: "dddd, D MMMM YYYY [i] HH:mm"
        },
        calendar: {
            sameDay: "[i teie mahana, i] LT",
            nextDay: "[apopo i] LT",
            nextWeek: "dddd [i] LT",
            lastDay: "[inanahi i] LT",
            lastWeek: "dddd [whakamutunga i] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "i roto i %s",
            past: "%s i mua",
            s: "te h\u0113kona ruarua",
            ss: "%d h\u0113kona",
            m: "he meneti",
            mm: "%d meneti",
            h: "te haora",
            hh: "%d haora",
            d: "he ra",
            dd: "%d ra",
            M: "he marama",
            MM: "%d marama",
            y: "he tau",
            yy: "%d tau"
        },
        dayOfMonthOrdinalParse: /\d{1,2}\xba/,
        ordinal: "%d\xba",
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("mk", {
        months: "\u0458\u0430\u043d\u0443\u0430\u0440\u0438_\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438_\u043c\u0430\u0440\u0442_\u0430\u043f\u0440\u0438\u043b_\u043c\u0430\u0458_\u0458\u0443\u043d\u0438_\u0458\u0443\u043b\u0438_\u0430\u0432\u0433\u0443\u0441\u0442_\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438_\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438_\u043d\u043e\u0435\u043c\u0432\u0440\u0438_\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438".split("_"),
        monthsShort: "\u0458\u0430\u043d_\u0444\u0435\u0432_\u043c\u0430\u0440_\u0430\u043f\u0440_\u043c\u0430\u0458_\u0458\u0443\u043d_\u0458\u0443\u043b_\u0430\u0432\u0433_\u0441\u0435\u043f_\u043e\u043a\u0442_\u043d\u043e\u0435_\u0434\u0435\u043a".split("_"),
        weekdays: "\u043d\u0435\u0434\u0435\u043b\u0430_\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a_\u0432\u0442\u043e\u0440\u043d\u0438\u043a_\u0441\u0440\u0435\u0434\u0430_\u0447\u0435\u0442\u0432\u0440\u0442\u043e\u043a_\u043f\u0435\u0442\u043e\u043a_\u0441\u0430\u0431\u043e\u0442\u0430".split("_"),
        weekdaysShort: "\u043d\u0435\u0434_\u043f\u043e\u043d_\u0432\u0442\u043e_\u0441\u0440\u0435_\u0447\u0435\u0442_\u043f\u0435\u0442_\u0441\u0430\u0431".split("_"),
        weekdaysMin: "\u043de_\u043fo_\u0432\u0442_\u0441\u0440_\u0447\u0435_\u043f\u0435_\u0441a".split("_"),
        longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "D.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY H:mm",
            LLLL: "dddd, D MMMM YYYY H:mm"
        },
        calendar: {
            sameDay: "[\u0414\u0435\u043d\u0435\u0441 \u0432\u043e] LT",
            nextDay: "[\u0423\u0442\u0440\u0435 \u0432\u043e] LT",
            nextWeek: "[\u0412\u043e] dddd [\u0432\u043e] LT",
            lastDay: "[\u0412\u0447\u0435\u0440\u0430 \u0432\u043e] LT",
            lastWeek: function() {
                switch (this.day()) {
                case 0:
                case 3:
                case 6:
                    return "[\u0418\u0437\u043c\u0438\u043d\u0430\u0442\u0430\u0442\u0430] dddd [\u0432\u043e] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                    return "[\u0418\u0437\u043c\u0438\u043d\u0430\u0442\u0438\u043e\u0442] dddd [\u0432\u043e] LT"
                }
            },
            sameElse: "L"
        },
        relativeTime: {
            future: "\u043f\u043e\u0441\u043b\u0435 %s",
            past: "\u043f\u0440\u0435\u0434 %s",
            s: "\u043d\u0435\u043a\u043e\u043b\u043a\u0443 \u0441\u0435\u043a\u0443\u043d\u0434\u0438",
            ss: "%d \u0441\u0435\u043a\u0443\u043d\u0434\u0438",
            m: "\u043c\u0438\u043d\u0443\u0442\u0430",
            mm: "%d \u043c\u0438\u043d\u0443\u0442\u0438",
            h: "\u0447\u0430\u0441",
            hh: "%d \u0447\u0430\u0441\u0430",
            d: "\u0434\u0435\u043d",
            dd: "%d \u0434\u0435\u043d\u0430",
            M: "\u043c\u0435\u0441\u0435\u0446",
            MM: "%d \u043c\u0435\u0441\u0435\u0446\u0438",
            y: "\u0433\u043e\u0434\u0438\u043d\u0430",
            yy: "%d \u0433\u043e\u0434\u0438\u043d\u0438"
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(\u0435\u0432|\u0435\u043d|\u0442\u0438|\u0432\u0438|\u0440\u0438|\u043c\u0438)/,
        ordinal: function(e) {
            var a = e % 10
              , t = e % 100;
            return 0 === e ? e + "-\u0435\u0432" : 0 === t ? e + "-\u0435\u043d" : 10 < t && t < 20 ? e + "-\u0442\u0438" : 1 === a ? e + "-\u0432\u0438" : 2 === a ? e + "-\u0440\u0438" : 7 === a || 8 === a ? e + "-\u043c\u0438" : e + "-\u0442\u0438"
        },
        week: {
            dow: 1,
            doy: 7
        }
    }),
    l.defineLocale("ml", {
        months: "\u0d1c\u0d28\u0d41\u0d35\u0d30\u0d3f_\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41\u0d35\u0d30\u0d3f_\u0d2e\u0d3e\u0d7c\u0d1a\u0d4d\u0d1a\u0d4d_\u0d0f\u0d2a\u0d4d\u0d30\u0d3f\u0d7d_\u0d2e\u0d47\u0d2f\u0d4d_\u0d1c\u0d42\u0d7a_\u0d1c\u0d42\u0d32\u0d48_\u0d13\u0d17\u0d38\u0d4d\u0d31\u0d4d\u0d31\u0d4d_\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02\u0d2c\u0d7c_\u0d12\u0d15\u0d4d\u0d1f\u0d4b\u0d2c\u0d7c_\u0d28\u0d35\u0d02\u0d2c\u0d7c_\u0d21\u0d3f\u0d38\u0d02\u0d2c\u0d7c".split("_"),
        monthsShort: "\u0d1c\u0d28\u0d41._\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41._\u0d2e\u0d3e\u0d7c._\u0d0f\u0d2a\u0d4d\u0d30\u0d3f._\u0d2e\u0d47\u0d2f\u0d4d_\u0d1c\u0d42\u0d7a_\u0d1c\u0d42\u0d32\u0d48._\u0d13\u0d17._\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31._\u0d12\u0d15\u0d4d\u0d1f\u0d4b._\u0d28\u0d35\u0d02._\u0d21\u0d3f\u0d38\u0d02.".split("_"),
        monthsParseExact: !0,
        weekdays: "\u0d1e\u0d3e\u0d2f\u0d31\u0d3e\u0d34\u0d4d\u0d1a_\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d33\u0d3e\u0d34\u0d4d\u0d1a_\u0d1a\u0d4a\u0d35\u0d4d\u0d35\u0d3e\u0d34\u0d4d\u0d1a_\u0d2c\u0d41\u0d27\u0d28\u0d3e\u0d34\u0d4d\u0d1a_\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d3e\u0d34\u0d4d\u0d1a_\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u0d1a_\u0d36\u0d28\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u0d1a".split("_"),
        weekdaysShort: "\u0d1e\u0d3e\u0d2f\u0d7c_\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d7e_\u0d1a\u0d4a\u0d35\u0d4d\u0d35_\u0d2c\u0d41\u0d27\u0d7b_\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d02_\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f_\u0d36\u0d28\u0d3f".split("_"),
        weekdaysMin: "\u0d1e\u0d3e_\u0d24\u0d3f_\u0d1a\u0d4a_\u0d2c\u0d41_\u0d35\u0d4d\u0d2f\u0d3e_\u0d35\u0d46_\u0d36".split("_"),
        longDateFormat: {
            LT: "A h:mm -\u0d28\u0d41",
            LTS: "A h:mm:ss -\u0d28\u0d41",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm -\u0d28\u0d41",
            LLLL: "dddd, D MMMM YYYY, A h:mm -\u0d28\u0d41"
        },
        calendar: {
            sameDay: "[\u0d07\u0d28\u0d4d\u0d28\u0d4d] LT",
            nextDay: "[\u0d28\u0d3e\u0d33\u0d46] LT",
            nextWeek: "dddd, LT",
            lastDay: "[\u0d07\u0d28\u0d4d\u0d28\u0d32\u0d46] LT",
            lastWeek: "[\u0d15\u0d34\u0d3f\u0d1e\u0d4d\u0d1e] dddd, LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s \u0d15\u0d34\u0d3f\u0d1e\u0d4d\u0d1e\u0d4d",
            past: "%s \u0d2e\u0d41\u0d7b\u0d2a\u0d4d",
            s: "\u0d05\u0d7d\u0d2a \u0d28\u0d3f\u0d2e\u0d3f\u0d37\u0d19\u0d4d\u0d19\u0d7e",
            ss: "%d \u0d38\u0d46\u0d15\u0d4d\u0d15\u0d7b\u0d21\u0d4d",
            m: "\u0d12\u0d30\u0d41 \u0d2e\u0d3f\u0d28\u0d3f\u0d31\u0d4d\u0d31\u0d4d",
            mm: "%d \u0d2e\u0d3f\u0d28\u0d3f\u0d31\u0d4d\u0d31\u0d4d",
            h: "\u0d12\u0d30\u0d41 \u0d2e\u0d23\u0d3f\u0d15\u0d4d\u0d15\u0d42\u0d7c",
            hh: "%d \u0d2e\u0d23\u0d3f\u0d15\u0d4d\u0d15\u0d42\u0d7c",
            d: "\u0d12\u0d30\u0d41 \u0d26\u0d3f\u0d35\u0d38\u0d02",
            dd: "%d \u0d26\u0d3f\u0d35\u0d38\u0d02",
            M: "\u0d12\u0d30\u0d41 \u0d2e\u0d3e\u0d38\u0d02",
            MM: "%d \u0d2e\u0d3e\u0d38\u0d02",
            y: "\u0d12\u0d30\u0d41 \u0d35\u0d7c\u0d37\u0d02",
            yy: "%d \u0d35\u0d7c\u0d37\u0d02"
        },
        meridiemParse: /\u0d30\u0d3e\u0d24\u0d4d\u0d30\u0d3f|\u0d30\u0d3e\u0d35\u0d3f\u0d32\u0d46|\u0d09\u0d1a\u0d4d\u0d1a \u0d15\u0d34\u0d3f\u0d1e\u0d4d\u0d1e\u0d4d|\u0d35\u0d48\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d47\u0d30\u0d02|\u0d30\u0d3e\u0d24\u0d4d\u0d30\u0d3f/i,
        meridiemHour: function(e, a) {
            return 12 === e && (e = 0),
            "\u0d30\u0d3e\u0d24\u0d4d\u0d30\u0d3f" === a && 4 <= e || "\u0d09\u0d1a\u0d4d\u0d1a \u0d15\u0d34\u0d3f\u0d1e\u0d4d\u0d1e\u0d4d" === a || "\u0d35\u0d48\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d47\u0d30\u0d02" === a ? e + 12 : e
        },
        meridiem: function(e, a, t) {
            return e < 4 ? "\u0d30\u0d3e\u0d24\u0d4d\u0d30\u0d3f" : e < 12 ? "\u0d30\u0d3e\u0d35\u0d3f\u0d32\u0d46" : e < 17 ? "\u0d09\u0d1a\u0d4d\u0d1a \u0d15\u0d34\u0d3f\u0d1e\u0d4d\u0d1e\u0d4d" : e < 20 ? "\u0d35\u0d48\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d47\u0d30\u0d02" : "\u0d30\u0d3e\u0d24\u0d4d\u0d30\u0d3f"
        }
    }),
    l.defineLocale("mn", {
        months: "\u041d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440_\u0425\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440_\u0413\u0443\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440_\u0414\u04e9\u0440\u04e9\u0432\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440_\u0422\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440_\u0417\u0443\u0440\u0433\u0430\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440_\u0414\u043e\u043b\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440_\u041d\u0430\u0439\u043c\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440_\u0415\u0441\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440_\u0410\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440_\u0410\u0440\u0432\u0430\u043d \u043d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440_\u0410\u0440\u0432\u0430\u043d \u0445\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440".split("_"),
        monthsShort: "1 \u0441\u0430\u0440_2 \u0441\u0430\u0440_3 \u0441\u0430\u0440_4 \u0441\u0430\u0440_5 \u0441\u0430\u0440_6 \u0441\u0430\u0440_7 \u0441\u0430\u0440_8 \u0441\u0430\u0440_9 \u0441\u0430\u0440_10 \u0441\u0430\u0440_11 \u0441\u0430\u0440_12 \u0441\u0430\u0440".split("_"),
        monthsParseExact: !0,
        weekdays: "\u041d\u044f\u043c_\u0414\u0430\u0432\u0430\u0430_\u041c\u044f\u0433\u043c\u0430\u0440_\u041b\u0445\u0430\u0433\u0432\u0430_\u041f\u04af\u0440\u044d\u0432_\u0411\u0430\u0430\u0441\u0430\u043d_\u0411\u044f\u043c\u0431\u0430".split("_"),
        weekdaysShort: "\u041d\u044f\u043c_\u0414\u0430\u0432_\u041c\u044f\u0433_\u041b\u0445\u0430_\u041f\u04af\u0440_\u0411\u0430\u0430_\u0411\u044f\u043c".split("_"),
        weekdaysMin: "\u041d\u044f_\u0414\u0430_\u041c\u044f_\u041b\u0445_\u041f\u04af_\u0411\u0430_\u0411\u044f".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY-MM-DD",
            LL: "YYYY \u043e\u043d\u044b MMMM\u044b\u043d D",
            LLL: "YYYY \u043e\u043d\u044b MMMM\u044b\u043d D HH:mm",
            LLLL: "dddd, YYYY \u043e\u043d\u044b MMMM\u044b\u043d D HH:mm"
        },
        meridiemParse: /\u04ae\u04e8|\u04ae\u0425/i,
        isPM: function(e) {
            return "\u04ae\u0425" === e
        },
        meridiem: function(e, a, t) {
            return e < 12 ? "\u04ae\u04e8" : "\u04ae\u0425"
        },
        calendar: {
            sameDay: "[\u04e8\u043d\u04e9\u04e9\u0434\u04e9\u0440] LT",
            nextDay: "[\u041c\u0430\u0440\u0433\u0430\u0430\u0448] LT",
            nextWeek: "[\u0418\u0440\u044d\u0445] dddd LT",
            lastDay: "[\u04e8\u0447\u0438\u0433\u0434\u04e9\u0440] LT",
            lastWeek: "[\u04e8\u043d\u0433\u04e9\u0440\u0441\u04e9\u043d] dddd LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s \u0434\u0430\u0440\u0430\u0430",
            past: "%s \u04e9\u043c\u043d\u04e9",
            s: wn,
            ss: wn,
            m: wn,
            mm: wn,
            h: wn,
            hh: wn,
            d: wn,
            dd: wn,
            M: wn,
            MM: wn,
            y: wn,
            yy: wn
        },
        dayOfMonthOrdinalParse: /\d{1,2} \u04e9\u0434\u04e9\u0440/,
        ordinal: function(e, a) {
            switch (a) {
            case "d":
            case "D":
            case "DDD":
                return e + " \u04e9\u0434\u04e9\u0440";
            default:
                return e
            }
        }
    });
    var vn = {
        1: "\u0967",
        2: "\u0968",
        3: "\u0969",
        4: "\u096a",
        5: "\u096b",
        6: "\u096c",
        7: "\u096d",
        8: "\u096e",
        9: "\u096f",
        0: "\u0966"
    }
      , Sn = {
        "\u0967": "1",
        "\u0968": "2",
        "\u0969": "3",
        "\u096a": "4",
        "\u096b": "5",
        "\u096c": "6",
        "\u096d": "7",
        "\u096e": "8",
        "\u096f": "9",
        "\u0966": "0"
    };
    function Hn(e, a, t, s) {
        var n = "";
        if (a)
            switch (t) {
            case "s":
                n = "\u0915\u093e\u0939\u0940 \u0938\u0947\u0915\u0902\u0926";
                break;
            case "ss":
                n = "%d \u0938\u0947\u0915\u0902\u0926";
                break;
            case "m":
                n = "\u090f\u0915 \u092e\u093f\u0928\u093f\u091f";
                break;
            case "mm":
                n = "%d \u092e\u093f\u0928\u093f\u091f\u0947";
                break;
            case "h":
                n = "\u090f\u0915 \u0924\u093e\u0938";
                break;
            case "hh":
                n = "%d \u0924\u093e\u0938";
                break;
            case "d":
                n = "\u090f\u0915 \u0926\u093f\u0935\u0938";
                break;
            case "dd":
                n = "%d \u0926\u093f\u0935\u0938";
                break;
            case "M":
                n = "\u090f\u0915 \u092e\u0939\u093f\u0928\u093e";
                break;
            case "MM":
                n = "%d \u092e\u0939\u093f\u0928\u0947";
                break;
            case "y":
                n = "\u090f\u0915 \u0935\u0930\u094d\u0937";
                break;
            case "yy":
                n = "%d \u0935\u0930\u094d\u0937\u0947";
                break
            }
        else
            switch (t) {
            case "s":
                n = "\u0915\u093e\u0939\u0940 \u0938\u0947\u0915\u0902\u0926\u093e\u0902";
                break;
            case "ss":
                n = "%d \u0938\u0947\u0915\u0902\u0926\u093e\u0902";
                break;
            case "m":
                n = "\u090f\u0915\u093e \u092e\u093f\u0928\u093f\u091f\u093e";
                break;
            case "mm":
                n = "%d \u092e\u093f\u0928\u093f\u091f\u093e\u0902";
                break;
            case "h":
                n = "\u090f\u0915\u093e \u0924\u093e\u0938\u093e";
                break;
            case "hh":
                n = "%d \u0924\u093e\u0938\u093e\u0902";
                break;
            case "d":
                n = "\u090f\u0915\u093e \u0926\u093f\u0935\u0938\u093e";
                break;
            case "dd":
                n = "%d \u0926\u093f\u0935\u0938\u093e\u0902";
                break;
            case "M":
                n = "\u090f\u0915\u093e \u092e\u0939\u093f\u0928\u094d\u092f\u093e";
                break;
            case "MM":
                n = "%d \u092e\u0939\u093f\u0928\u094d\u092f\u093e\u0902";
                break;
            case "y":
                n = "\u090f\u0915\u093e \u0935\u0930\u094d\u0937\u093e";
                break;
            case "yy":
                n = "%d \u0935\u0930\u094d\u0937\u093e\u0902";
                break
            }
        return n.replace(/%d/i, e)
    }
    l.defineLocale("mr", {
        months: "\u091c\u093e\u0928\u0947\u0935\u093e\u0930\u0940_\u092b\u0947\u092c\u094d\u0930\u0941\u0935\u093e\u0930\u0940_\u092e\u093e\u0930\u094d\u091a_\u090f\u092a\u094d\u0930\u093f\u0932_\u092e\u0947_\u091c\u0942\u0928_\u091c\u0941\u0932\u0948_\u0911\u0917\u0938\u094d\u091f_\u0938\u092a\u094d\u091f\u0947\u0902\u092c\u0930_\u0911\u0915\u094d\u091f\u094b\u092c\u0930_\u0928\u094b\u0935\u094d\u0939\u0947\u0902\u092c\u0930_\u0921\u093f\u0938\u0947\u0902\u092c\u0930".split("_"),
        monthsShort: "\u091c\u093e\u0928\u0947._\u092b\u0947\u092c\u094d\u0930\u0941._\u092e\u093e\u0930\u094d\u091a._\u090f\u092a\u094d\u0930\u093f._\u092e\u0947._\u091c\u0942\u0928._\u091c\u0941\u0932\u0948._\u0911\u0917._\u0938\u092a\u094d\u091f\u0947\u0902._\u0911\u0915\u094d\u091f\u094b._\u0928\u094b\u0935\u094d\u0939\u0947\u0902._\u0921\u093f\u0938\u0947\u0902.".split("_"),
        monthsParseExact: !0,
        weekdays: "\u0930\u0935\u093f\u0935\u093e\u0930_\u0938\u094b\u092e\u0935\u093e\u0930_\u092e\u0902\u0917\u0933\u0935\u093e\u0930_\u092c\u0941\u0927\u0935\u093e\u0930_\u0917\u0941\u0930\u0942\u0935\u093e\u0930_\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930_\u0936\u0928\u093f\u0935\u093e\u0930".split("_"),
        weekdaysShort: "\u0930\u0935\u093f_\u0938\u094b\u092e_\u092e\u0902\u0917\u0933_\u092c\u0941\u0927_\u0917\u0941\u0930\u0942_\u0936\u0941\u0915\u094d\u0930_\u0936\u0928\u093f".split("_"),
        weekdaysMin: "\u0930_\u0938\u094b_\u092e\u0902_\u092c\u0941_\u0917\u0941_\u0936\u0941_\u0936".split("_"),
        longDateFormat: {
            LT: "A h:mm \u0935\u093e\u091c\u0924\u093e",
            LTS: "A h:mm:ss \u0935\u093e\u091c\u0924\u093e",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm \u0935\u093e\u091c\u0924\u093e",
            LLLL: "dddd, D MMMM YYYY, A h:mm \u0935\u093e\u091c\u0924\u093e"
        },
        calendar: {
            sameDay: "[\u0906\u091c] LT",
            nextDay: "[\u0909\u0926\u094d\u092f\u093e] LT",
            nextWeek: "dddd, LT",
            lastDay: "[\u0915\u093e\u0932] LT",
            lastWeek: "[\u092e\u093e\u0917\u0940\u0932] dddd, LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s\u092e\u0927\u094d\u092f\u0947",
            past: "%s\u092a\u0942\u0930\u094d\u0935\u0940",
            s: Hn,
            ss: Hn,
            m: Hn,
            mm: Hn,
            h: Hn,
            hh: Hn,
            d: Hn,
            dd: Hn,
            M: Hn,
            MM: Hn,
            y: Hn,
            yy: Hn
        },
        preparse: function(e) {
            return e.replace(/[\u0967\u0968\u0969\u096a\u096b\u096c\u096d\u096e\u096f\u0966]/g, function(e) {
                return Sn[e]
            })
        },
        postformat: function(e) {
            return e.replace(/\d/g, function(e) {
                return vn[e]
            })
        },
        meridiemParse: /\u0930\u093e\u0924\u094d\u0930\u0940|\u0938\u0915\u093e\u0933\u0940|\u0926\u0941\u092a\u093e\u0930\u0940|\u0938\u093e\u092f\u0902\u0915\u093e\u0933\u0940/,
        meridiemHour: function(e, a) {
            return 12 === e && (e = 0),
            "\u0930\u093e\u0924\u094d\u0930\u0940" === a ? e < 4 ? e : e + 12 : "\u0938\u0915\u093e\u0933\u0940" === a ? e : "\u0926\u0941\u092a\u093e\u0930\u0940" === a ? 10 <= e ? e : e + 12 : "\u0938\u093e\u092f\u0902\u0915\u093e\u0933\u0940" === a ? e + 12 : void 0
        },
        meridiem: function(e, a, t) {
            return e < 4 ? "\u0930\u093e\u0924\u094d\u0930\u0940" : e < 10 ? "\u0938\u0915\u093e\u0933\u0940" : e < 17 ? "\u0926\u0941\u092a\u093e\u0930\u0940" : e < 20 ? "\u0938\u093e\u092f\u0902\u0915\u093e\u0933\u0940" : "\u0930\u093e\u0924\u094d\u0930\u0940"
        },
        week: {
            dow: 0,
            doy: 6
        }
    }),
    l.defineLocale("ms-my", {
        months: "Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split("_"),
        monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split("_"),
        weekdays: "Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),
        weekdaysShort: "Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),
        weekdaysMin: "Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),
        longDateFormat: {
            LT: "HH.mm",
            LTS: "HH.mm.ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY [pukul] HH.mm",
            LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
        },
        meridiemParse: /pagi|tengahari|petang|malam/,
        meridiemHour: function(e, a) {
            return 12 === e && (e = 0),
            "pagi" === a ? e : "tengahari" === a ? 11 <= e ? e : e + 12 : "petang" === a || "malam" === a ? e + 12 : void 0
        },
        meridiem: function(e, a, t) {
            return e < 11 ? "pagi" : e < 15 ? "tengahari" : e < 19 ? "petang" : "malam"
        },
        calendar: {
            sameDay: "[Hari ini pukul] LT",
            nextDay: "[Esok pukul] LT",
            nextWeek: "dddd [pukul] LT",
            lastDay: "[Kelmarin pukul] LT",
            lastWeek: "dddd [lepas pukul] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "dalam %s",
            past: "%s yang lepas",
            s: "beberapa saat",
            ss: "%d saat",
            m: "seminit",
            mm: "%d minit",
            h: "sejam",
            hh: "%d jam",
            d: "sehari",
            dd: "%d hari",
            M: "sebulan",
            MM: "%d bulan",
            y: "setahun",
            yy: "%d tahun"
        },
        week: {
            dow: 1,
            doy: 7
        }
    }),
    l.defineLocale("ms", {
        months: "Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split("_"),
        monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split("_"),
        weekdays: "Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),
        weekdaysShort: "Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),
        weekdaysMin: "Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),
        longDateFormat: {
            LT: "HH.mm",
            LTS: "HH.mm.ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY [pukul] HH.mm",
            LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
        },
        meridiemParse: /pagi|tengahari|petang|malam/,
        meridiemHour: function(e, a) {
            return 12 === e && (e = 0),
            "pagi" === a ? e : "tengahari" === a ? 11 <= e ? e : e + 12 : "petang" === a || "malam" === a ? e + 12 : void 0
        },
        meridiem: function(e, a, t) {
            return e < 11 ? "pagi" : e < 15 ? "tengahari" : e < 19 ? "petang" : "malam"
        },
        calendar: {
            sameDay: "[Hari ini pukul] LT",
            nextDay: "[Esok pukul] LT",
            nextWeek: "dddd [pukul] LT",
            lastDay: "[Kelmarin pukul] LT",
            lastWeek: "dddd [lepas pukul] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "dalam %s",
            past: "%s yang lepas",
            s: "beberapa saat",
            ss: "%d saat",
            m: "seminit",
            mm: "%d minit",
            h: "sejam",
            hh: "%d jam",
            d: "sehari",
            dd: "%d hari",
            M: "sebulan",
            MM: "%d bulan",
            y: "setahun",
            yy: "%d tahun"
        },
        week: {
            dow: 1,
            doy: 7
        }
    }),
    l.defineLocale("mt", {
        months: "Jannar_Frar_Marzu_April_Mejju_\u0120unju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Di\u010bembru".split("_"),
        monthsShort: "Jan_Fra_Mar_Apr_Mej_\u0120un_Lul_Aww_Set_Ott_Nov_Di\u010b".split("_"),
        weekdays: "Il-\u0126add_It-Tnejn_It-Tlieta_L-Erbg\u0127a_Il-\u0126amis_Il-\u0120img\u0127a_Is-Sibt".split("_"),
        weekdaysShort: "\u0126ad_Tne_Tli_Erb_\u0126am_\u0120im_Sib".split("_"),
        weekdaysMin: "\u0126a_Tn_Tl_Er_\u0126a_\u0120i_Si".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[Illum fil-]LT",
            nextDay: "[G\u0127ada fil-]LT",
            nextWeek: "dddd [fil-]LT",
            lastDay: "[Il-biera\u0127 fil-]LT",
            lastWeek: "dddd [li g\u0127adda] [fil-]LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "f\u2019 %s",
            past: "%s ilu",
            s: "ftit sekondi",
            ss: "%d sekondi",
            m: "minuta",
            mm: "%d minuti",
            h: "sieg\u0127a",
            hh: "%d sieg\u0127at",
            d: "\u0121urnata",
            dd: "%d \u0121ranet",
            M: "xahar",
            MM: "%d xhur",
            y: "sena",
            yy: "%d sni"
        },
        dayOfMonthOrdinalParse: /\d{1,2}\xba/,
        ordinal: "%d\xba",
        week: {
            dow: 1,
            doy: 4
        }
    });
    var bn = {
        1: "\u1041",
        2: "\u1042",
        3: "\u1043",
        4: "\u1044",
        5: "\u1045",
        6: "\u1046",
        7: "\u1047",
        8: "\u1048",
        9: "\u1049",
        0: "\u1040"
    }
      , jn = {
        "\u1041": "1",
        "\u1042": "2",
        "\u1043": "3",
        "\u1044": "4",
        "\u1045": "5",
        "\u1046": "6",
        "\u1047": "7",
        "\u1048": "8",
        "\u1049": "9",
        "\u1040": "0"
    };
    l.defineLocale("my", {
        months: "\u1007\u1014\u103a\u1014\u101d\u102b\u101b\u102e_\u1016\u1031\u1016\u1031\u102c\u103a\u101d\u102b\u101b\u102e_\u1019\u1010\u103a_\u1027\u1015\u103c\u102e_\u1019\u1031_\u1007\u103d\u1014\u103a_\u1007\u1030\u101c\u102d\u102f\u1004\u103a_\u101e\u103c\u1002\u102f\u1010\u103a_\u1005\u1000\u103a\u1010\u1004\u103a\u1018\u102c_\u1021\u1031\u102c\u1000\u103a\u1010\u102d\u102f\u1018\u102c_\u1014\u102d\u102f\u101d\u1004\u103a\u1018\u102c_\u1012\u102e\u1007\u1004\u103a\u1018\u102c".split("_"),
        monthsShort: "\u1007\u1014\u103a_\u1016\u1031_\u1019\u1010\u103a_\u1015\u103c\u102e_\u1019\u1031_\u1007\u103d\u1014\u103a_\u101c\u102d\u102f\u1004\u103a_\u101e\u103c_\u1005\u1000\u103a_\u1021\u1031\u102c\u1000\u103a_\u1014\u102d\u102f_\u1012\u102e".split("_"),
        weekdays: "\u1010\u1014\u1004\u103a\u1039\u1002\u1014\u103d\u1031_\u1010\u1014\u1004\u103a\u1039\u101c\u102c_\u1021\u1004\u103a\u1039\u1002\u102b_\u1017\u102f\u1012\u1039\u1013\u101f\u1030\u1038_\u1000\u103c\u102c\u101e\u1015\u1010\u1031\u1038_\u101e\u1031\u102c\u1000\u103c\u102c_\u1005\u1014\u1031".split("_"),
        weekdaysShort: "\u1014\u103d\u1031_\u101c\u102c_\u1002\u102b_\u101f\u1030\u1038_\u1000\u103c\u102c_\u101e\u1031\u102c_\u1014\u1031".split("_"),
        weekdaysMin: "\u1014\u103d\u1031_\u101c\u102c_\u1002\u102b_\u101f\u1030\u1038_\u1000\u103c\u102c_\u101e\u1031\u102c_\u1014\u1031".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[\u101a\u1014\u1031.] LT [\u1019\u103e\u102c]",
            nextDay: "[\u1019\u1014\u1000\u103a\u1016\u103c\u1014\u103a] LT [\u1019\u103e\u102c]",
            nextWeek: "dddd LT [\u1019\u103e\u102c]",
            lastDay: "[\u1019\u1014\u1031.\u1000] LT [\u1019\u103e\u102c]",
            lastWeek: "[\u1015\u103c\u102e\u1038\u1001\u1032\u1037\u101e\u1031\u102c] dddd LT [\u1019\u103e\u102c]",
            sameElse: "L"
        },
        relativeTime: {
            future: "\u101c\u102c\u1019\u100a\u103a\u1037 %s \u1019\u103e\u102c",
            past: "\u101c\u103d\u1014\u103a\u1001\u1032\u1037\u101e\u1031\u102c %s \u1000",
            s: "\u1005\u1000\u1039\u1000\u1014\u103a.\u1021\u1014\u100a\u103a\u1038\u1004\u101a\u103a",
            ss: "%d \u1005\u1000\u1039\u1000\u1014\u1037\u103a",
            m: "\u1010\u1005\u103a\u1019\u102d\u1014\u1005\u103a",
            mm: "%d \u1019\u102d\u1014\u1005\u103a",
            h: "\u1010\u1005\u103a\u1014\u102c\u101b\u102e",
            hh: "%d \u1014\u102c\u101b\u102e",
            d: "\u1010\u1005\u103a\u101b\u1000\u103a",
            dd: "%d \u101b\u1000\u103a",
            M: "\u1010\u1005\u103a\u101c",
            MM: "%d \u101c",
            y: "\u1010\u1005\u103a\u1014\u103e\u1005\u103a",
            yy: "%d \u1014\u103e\u1005\u103a"
        },
        preparse: function(e) {
            return e.replace(/[\u1041\u1042\u1043\u1044\u1045\u1046\u1047\u1048\u1049\u1040]/g, function(e) {
                return jn[e]
            })
        },
        postformat: function(e) {
            return e.replace(/\d/g, function(e) {
                return bn[e]
            })
        },
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("nb", {
        months: "januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split("_"),
        monthsShort: "jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.".split("_"),
        monthsParseExact: !0,
        weekdays: "s\xf8ndag_mandag_tirsdag_onsdag_torsdag_fredag_l\xf8rdag".split("_"),
        weekdaysShort: "s\xf8._ma._ti._on._to._fr._l\xf8.".split("_"),
        weekdaysMin: "s\xf8_ma_ti_on_to_fr_l\xf8".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY [kl.] HH:mm",
            LLLL: "dddd D. MMMM YYYY [kl.] HH:mm"
        },
        calendar: {
            sameDay: "[i dag kl.] LT",
            nextDay: "[i morgen kl.] LT",
            nextWeek: "dddd [kl.] LT",
            lastDay: "[i g\xe5r kl.] LT",
            lastWeek: "[forrige] dddd [kl.] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "om %s",
            past: "%s siden",
            s: "noen sekunder",
            ss: "%d sekunder",
            m: "ett minutt",
            mm: "%d minutter",
            h: "en time",
            hh: "%d timer",
            d: "en dag",
            dd: "%d dager",
            M: "en m\xe5ned",
            MM: "%d m\xe5neder",
            y: "ett \xe5r",
            yy: "%d \xe5r"
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 4
        }
    });
    var xn = {
        1: "\u0967",
        2: "\u0968",
        3: "\u0969",
        4: "\u096a",
        5: "\u096b",
        6: "\u096c",
        7: "\u096d",
        8: "\u096e",
        9: "\u096f",
        0: "\u0966"
    }
      , On = {
        "\u0967": "1",
        "\u0968": "2",
        "\u0969": "3",
        "\u096a": "4",
        "\u096b": "5",
        "\u096c": "6",
        "\u096d": "7",
        "\u096e": "8",
        "\u096f": "9",
        "\u0966": "0"
    };
    l.defineLocale("ne", {
        months: "\u091c\u0928\u0935\u0930\u0940_\u092b\u0947\u092c\u094d\u0930\u0941\u0935\u0930\u0940_\u092e\u093e\u0930\u094d\u091a_\u0905\u092a\u094d\u0930\u093f\u0932_\u092e\u0908_\u091c\u0941\u0928_\u091c\u0941\u0932\u093e\u0908_\u0905\u0917\u0937\u094d\u091f_\u0938\u0947\u092a\u094d\u091f\u0947\u092e\u094d\u092c\u0930_\u0905\u0915\u094d\u091f\u094b\u092c\u0930_\u0928\u094b\u092d\u0947\u092e\u094d\u092c\u0930_\u0921\u093f\u0938\u0947\u092e\u094d\u092c\u0930".split("_"),
        monthsShort: "\u091c\u0928._\u092b\u0947\u092c\u094d\u0930\u0941._\u092e\u093e\u0930\u094d\u091a_\u0905\u092a\u094d\u0930\u093f._\u092e\u0908_\u091c\u0941\u0928_\u091c\u0941\u0932\u093e\u0908._\u0905\u0917._\u0938\u0947\u092a\u094d\u091f._\u0905\u0915\u094d\u091f\u094b._\u0928\u094b\u092d\u0947._\u0921\u093f\u0938\u0947.".split("_"),
        monthsParseExact: !0,
        weekdays: "\u0906\u0907\u0924\u092c\u093e\u0930_\u0938\u094b\u092e\u092c\u093e\u0930_\u092e\u0919\u094d\u0917\u0932\u092c\u093e\u0930_\u092c\u0941\u0927\u092c\u093e\u0930_\u092c\u093f\u0939\u093f\u092c\u093e\u0930_\u0936\u0941\u0915\u094d\u0930\u092c\u093e\u0930_\u0936\u0928\u093f\u092c\u093e\u0930".split("_"),
        weekdaysShort: "\u0906\u0907\u0924._\u0938\u094b\u092e._\u092e\u0919\u094d\u0917\u0932._\u092c\u0941\u0927._\u092c\u093f\u0939\u093f._\u0936\u0941\u0915\u094d\u0930._\u0936\u0928\u093f.".split("_"),
        weekdaysMin: "\u0906._\u0938\u094b._\u092e\u0902._\u092c\u0941._\u092c\u093f._\u0936\u0941._\u0936.".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "A\u0915\u094b h:mm \u092c\u091c\u0947",
            LTS: "A\u0915\u094b h:mm:ss \u092c\u091c\u0947",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A\u0915\u094b h:mm \u092c\u091c\u0947",
            LLLL: "dddd, D MMMM YYYY, A\u0915\u094b h:mm \u092c\u091c\u0947"
        },
        preparse: function(e) {
            return e.replace(/[\u0967\u0968\u0969\u096a\u096b\u096c\u096d\u096e\u096f\u0966]/g, function(e) {
                return On[e]
            })
        },
        postformat: function(e) {
            return e.replace(/\d/g, function(e) {
                return xn[e]
            })
        },
        meridiemParse: /\u0930\u093e\u0924\u093f|\u092c\u093f\u0939\u093e\u0928|\u0926\u093f\u0909\u0901\u0938\u094b|\u0938\u093e\u0901\u091d/,
        meridiemHour: function(e, a) {
            return 12 === e && (e = 0),
            "\u0930\u093e\u0924\u093f" === a ? e < 4 ? e : e + 12 : "\u092c\u093f\u0939\u093e\u0928" === a ? e : "\u0926\u093f\u0909\u0901\u0938\u094b" === a ? 10 <= e ? e : e + 12 : "\u0938\u093e\u0901\u091d" === a ? e + 12 : void 0
        },
        meridiem: function(e, a, t) {
            return e < 3 ? "\u0930\u093e\u0924\u093f" : e < 12 ? "\u092c\u093f\u0939\u093e\u0928" : e < 16 ? "\u0926\u093f\u0909\u0901\u0938\u094b" : e < 20 ? "\u0938\u093e\u0901\u091d" : "\u0930\u093e\u0924\u093f"
        },
        calendar: {
            sameDay: "[\u0906\u091c] LT",
            nextDay: "[\u092d\u094b\u0932\u093f] LT",
            nextWeek: "[\u0906\u0909\u0901\u0926\u094b] dddd[,] LT",
            lastDay: "[\u0939\u093f\u091c\u094b] LT",
            lastWeek: "[\u0917\u090f\u0915\u094b] dddd[,] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s\u092e\u093e",
            past: "%s \u0905\u0917\u093e\u0921\u093f",
            s: "\u0915\u0947\u0939\u0940 \u0915\u094d\u0937\u0923",
            ss: "%d \u0938\u0947\u0915\u0947\u0923\u094d\u0921",
            m: "\u090f\u0915 \u092e\u093f\u0928\u0947\u091f",
            mm: "%d \u092e\u093f\u0928\u0947\u091f",
            h: "\u090f\u0915 \u0918\u0923\u094d\u091f\u093e",
            hh: "%d \u0918\u0923\u094d\u091f\u093e",
            d: "\u090f\u0915 \u0926\u093f\u0928",
            dd: "%d \u0926\u093f\u0928",
            M: "\u090f\u0915 \u092e\u0939\u093f\u0928\u093e",
            MM: "%d \u092e\u0939\u093f\u0928\u093e",
            y: "\u090f\u0915 \u092c\u0930\u094d\u0937",
            yy: "%d \u092c\u0930\u094d\u0937"
        },
        week: {
            dow: 0,
            doy: 6
        }
    });
    var Pn = "jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.".split("_")
      , Wn = "jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split("_")
      , An = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i]
      , En = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;
    l.defineLocale("nl-be", {
        months: "januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split("_"),
        monthsShort: function(e, a) {
            return e ? /-MMM-/.test(a) ? Wn[e.month()] : Pn[e.month()] : Pn
        },
        monthsRegex: En,
        monthsShortRegex: En,
        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
        monthsParse: An,
        longMonthsParse: An,
        shortMonthsParse: An,
        weekdays: "zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split("_"),
        weekdaysShort: "zo._ma._di._wo._do._vr._za.".split("_"),
        weekdaysMin: "zo_ma_di_wo_do_vr_za".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[vandaag om] LT",
            nextDay: "[morgen om] LT",
            nextWeek: "dddd [om] LT",
            lastDay: "[gisteren om] LT",
            lastWeek: "[afgelopen] dddd [om] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "over %s",
            past: "%s geleden",
            s: "een paar seconden",
            ss: "%d seconden",
            m: "\xe9\xe9n minuut",
            mm: "%d minuten",
            h: "\xe9\xe9n uur",
            hh: "%d uur",
            d: "\xe9\xe9n dag",
            dd: "%d dagen",
            M: "\xe9\xe9n maand",
            MM: "%d maanden",
            y: "\xe9\xe9n jaar",
            yy: "%d jaar"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal: function(e) {
            return e + (1 === e || 8 === e || 20 <= e ? "ste" : "de")
        },
        week: {
            dow: 1,
            doy: 4
        }
    });
    var Fn = "jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.".split("_")
      , zn = "jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split("_")
      , Jn = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i]
      , Nn = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;
    l.defineLocale("nl", {
        months: "januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split("_"),
        monthsShort: function(e, a) {
            return e ? /-MMM-/.test(a) ? zn[e.month()] : Fn[e.month()] : Fn
        },
        monthsRegex: Nn,
        monthsShortRegex: Nn,
        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
        monthsParse: Jn,
        longMonthsParse: Jn,
        shortMonthsParse: Jn,
        weekdays: "zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split("_"),
        weekdaysShort: "zo._ma._di._wo._do._vr._za.".split("_"),
        weekdaysMin: "zo_ma_di_wo_do_vr_za".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD-MM-YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[vandaag om] LT",
            nextDay: "[morgen om] LT",
            nextWeek: "dddd [om] LT",
            lastDay: "[gisteren om] LT",
            lastWeek: "[afgelopen] dddd [om] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "over %s",
            past: "%s geleden",
            s: "een paar seconden",
            ss: "%d seconden",
            m: "\xe9\xe9n minuut",
            mm: "%d minuten",
            h: "\xe9\xe9n uur",
            hh: "%d uur",
            d: "\xe9\xe9n dag",
            dd: "%d dagen",
            M: "\xe9\xe9n maand",
            MM: "%d maanden",
            y: "\xe9\xe9n jaar",
            yy: "%d jaar"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal: function(e) {
            return e + (1 === e || 8 === e || 20 <= e ? "ste" : "de")
        },
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("nn", {
        months: "januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split("_"),
        monthsShort: "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"),
        weekdays: "sundag_m\xe5ndag_tysdag_onsdag_torsdag_fredag_laurdag".split("_"),
        weekdaysShort: "sun_m\xe5n_tys_ons_tor_fre_lau".split("_"),
        weekdaysMin: "su_m\xe5_ty_on_to_fr_l\xf8".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY [kl.] H:mm",
            LLLL: "dddd D. MMMM YYYY [kl.] HH:mm"
        },
        calendar: {
            sameDay: "[I dag klokka] LT",
            nextDay: "[I morgon klokka] LT",
            nextWeek: "dddd [klokka] LT",
            lastDay: "[I g\xe5r klokka] LT",
            lastWeek: "[F\xf8reg\xe5ande] dddd [klokka] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "om %s",
            past: "%s sidan",
            s: "nokre sekund",
            ss: "%d sekund",
            m: "eit minutt",
            mm: "%d minutt",
            h: "ein time",
            hh: "%d timar",
            d: "ein dag",
            dd: "%d dagar",
            M: "ein m\xe5nad",
            MM: "%d m\xe5nader",
            y: "eit \xe5r",
            yy: "%d \xe5r"
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 4
        }
    });
    var Rn = {
        1: "\u0a67",
        2: "\u0a68",
        3: "\u0a69",
        4: "\u0a6a",
        5: "\u0a6b",
        6: "\u0a6c",
        7: "\u0a6d",
        8: "\u0a6e",
        9: "\u0a6f",
        0: "\u0a66"
    }
      , Cn = {
        "\u0a67": "1",
        "\u0a68": "2",
        "\u0a69": "3",
        "\u0a6a": "4",
        "\u0a6b": "5",
        "\u0a6c": "6",
        "\u0a6d": "7",
        "\u0a6e": "8",
        "\u0a6f": "9",
        "\u0a66": "0"
    };
    l.defineLocale("pa-in", {
        months: "\u0a1c\u0a28\u0a35\u0a30\u0a40_\u0a2b\u0a3c\u0a30\u0a35\u0a30\u0a40_\u0a2e\u0a3e\u0a30\u0a1a_\u0a05\u0a2a\u0a4d\u0a30\u0a48\u0a32_\u0a2e\u0a08_\u0a1c\u0a42\u0a28_\u0a1c\u0a41\u0a32\u0a3e\u0a08_\u0a05\u0a17\u0a38\u0a24_\u0a38\u0a24\u0a70\u0a2c\u0a30_\u0a05\u0a15\u0a24\u0a42\u0a2c\u0a30_\u0a28\u0a35\u0a70\u0a2c\u0a30_\u0a26\u0a38\u0a70\u0a2c\u0a30".split("_"),
        monthsShort: "\u0a1c\u0a28\u0a35\u0a30\u0a40_\u0a2b\u0a3c\u0a30\u0a35\u0a30\u0a40_\u0a2e\u0a3e\u0a30\u0a1a_\u0a05\u0a2a\u0a4d\u0a30\u0a48\u0a32_\u0a2e\u0a08_\u0a1c\u0a42\u0a28_\u0a1c\u0a41\u0a32\u0a3e\u0a08_\u0a05\u0a17\u0a38\u0a24_\u0a38\u0a24\u0a70\u0a2c\u0a30_\u0a05\u0a15\u0a24\u0a42\u0a2c\u0a30_\u0a28\u0a35\u0a70\u0a2c\u0a30_\u0a26\u0a38\u0a70\u0a2c\u0a30".split("_"),
        weekdays: "\u0a10\u0a24\u0a35\u0a3e\u0a30_\u0a38\u0a4b\u0a2e\u0a35\u0a3e\u0a30_\u0a2e\u0a70\u0a17\u0a32\u0a35\u0a3e\u0a30_\u0a2c\u0a41\u0a27\u0a35\u0a3e\u0a30_\u0a35\u0a40\u0a30\u0a35\u0a3e\u0a30_\u0a38\u0a3c\u0a41\u0a71\u0a15\u0a30\u0a35\u0a3e\u0a30_\u0a38\u0a3c\u0a28\u0a40\u0a1a\u0a30\u0a35\u0a3e\u0a30".split("_"),
        weekdaysShort: "\u0a10\u0a24_\u0a38\u0a4b\u0a2e_\u0a2e\u0a70\u0a17\u0a32_\u0a2c\u0a41\u0a27_\u0a35\u0a40\u0a30_\u0a38\u0a3c\u0a41\u0a15\u0a30_\u0a38\u0a3c\u0a28\u0a40".split("_"),
        weekdaysMin: "\u0a10\u0a24_\u0a38\u0a4b\u0a2e_\u0a2e\u0a70\u0a17\u0a32_\u0a2c\u0a41\u0a27_\u0a35\u0a40\u0a30_\u0a38\u0a3c\u0a41\u0a15\u0a30_\u0a38\u0a3c\u0a28\u0a40".split("_"),
        longDateFormat: {
            LT: "A h:mm \u0a35\u0a1c\u0a47",
            LTS: "A h:mm:ss \u0a35\u0a1c\u0a47",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm \u0a35\u0a1c\u0a47",
            LLLL: "dddd, D MMMM YYYY, A h:mm \u0a35\u0a1c\u0a47"
        },
        calendar: {
            sameDay: "[\u0a05\u0a1c] LT",
            nextDay: "[\u0a15\u0a32] LT",
            nextWeek: "[\u0a05\u0a17\u0a32\u0a3e] dddd, LT",
            lastDay: "[\u0a15\u0a32] LT",
            lastWeek: "[\u0a2a\u0a3f\u0a1b\u0a32\u0a47] dddd, LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s \u0a35\u0a3f\u0a71\u0a1a",
            past: "%s \u0a2a\u0a3f\u0a1b\u0a32\u0a47",
            s: "\u0a15\u0a41\u0a1d \u0a38\u0a15\u0a3f\u0a70\u0a1f",
            ss: "%d \u0a38\u0a15\u0a3f\u0a70\u0a1f",
            m: "\u0a07\u0a15 \u0a2e\u0a3f\u0a70\u0a1f",
            mm: "%d \u0a2e\u0a3f\u0a70\u0a1f",
            h: "\u0a07\u0a71\u0a15 \u0a18\u0a70\u0a1f\u0a3e",
            hh: "%d \u0a18\u0a70\u0a1f\u0a47",
            d: "\u0a07\u0a71\u0a15 \u0a26\u0a3f\u0a28",
            dd: "%d \u0a26\u0a3f\u0a28",
            M: "\u0a07\u0a71\u0a15 \u0a2e\u0a39\u0a40\u0a28\u0a3e",
            MM: "%d \u0a2e\u0a39\u0a40\u0a28\u0a47",
            y: "\u0a07\u0a71\u0a15 \u0a38\u0a3e\u0a32",
            yy: "%d \u0a38\u0a3e\u0a32"
        },
        preparse: function(e) {
            return e.replace(/[\u0a67\u0a68\u0a69\u0a6a\u0a6b\u0a6c\u0a6d\u0a6e\u0a6f\u0a66]/g, function(e) {
                return Cn[e]
            })
        },
        postformat: function(e) {
            return e.replace(/\d/g, function(e) {
                return Rn[e]
            })
        },
        meridiemParse: /\u0a30\u0a3e\u0a24|\u0a38\u0a35\u0a47\u0a30|\u0a26\u0a41\u0a2a\u0a39\u0a3f\u0a30|\u0a38\u0a3c\u0a3e\u0a2e/,
        meridiemHour: function(e, a) {
            return 12 === e && (e = 0),
            "\u0a30\u0a3e\u0a24" === a ? e < 4 ? e : e + 12 : "\u0a38\u0a35\u0a47\u0a30" === a ? e : "\u0a26\u0a41\u0a2a\u0a39\u0a3f\u0a30" === a ? 10 <= e ? e : e + 12 : "\u0a38\u0a3c\u0a3e\u0a2e" === a ? e + 12 : void 0
        },
        meridiem: function(e, a, t) {
            return e < 4 ? "\u0a30\u0a3e\u0a24" : e < 10 ? "\u0a38\u0a35\u0a47\u0a30" : e < 17 ? "\u0a26\u0a41\u0a2a\u0a39\u0a3f\u0a30" : e < 20 ? "\u0a38\u0a3c\u0a3e\u0a2e" : "\u0a30\u0a3e\u0a24"
        },
        week: {
            dow: 0,
            doy: 6
        }
    });
    var In = "stycze\u0144_luty_marzec_kwiecie\u0144_maj_czerwiec_lipiec_sierpie\u0144_wrzesie\u0144_pa\u017adziernik_listopad_grudzie\u0144".split("_")
      , Un = "stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_wrze\u015bnia_pa\u017adziernika_listopada_grudnia".split("_");
    function Gn(e) {
        return e % 10 < 5 && 1 < e % 10 && ~~(e / 10) % 10 != 1
    }
    function Vn(e, a, t) {
        var s = e + " ";
        switch (t) {
        case "ss":
            return s + (Gn(e) ? "sekundy" : "sekund");
        case "m":
            return a ? "minuta" : "minut\u0119";
        case "mm":
            return s + (Gn(e) ? "minuty" : "minut");
        case "h":
            return a ? "godzina" : "godzin\u0119";
        case "hh":
            return s + (Gn(e) ? "godziny" : "godzin");
        case "MM":
            return s + (Gn(e) ? "miesi\u0105ce" : "miesi\u0119cy");
        case "yy":
            return s + (Gn(e) ? "lata" : "lat")
        }
    }
    function Kn(e, a, t) {
        var s = " ";
        return (20 <= e % 100 || 100 <= e && e % 100 == 0) && (s = " de "),
        e + s + {
            ss: "secunde",
            mm: "minute",
            hh: "ore",
            dd: "zile",
            MM: "luni",
            yy: "ani"
        }[t]
    }
    function Zn(e, a, t) {
        var s, n;
        return "m" === t ? a ? "\u043c\u0438\u043d\u0443\u0442\u0430" : "\u043c\u0438\u043d\u0443\u0442\u0443" : e + " " + (s = +e,
        n = {
            ss: a ? "\u0441\u0435\u043a\u0443\u043d\u0434\u0430_\u0441\u0435\u043a\u0443\u043d\u0434\u044b_\u0441\u0435\u043a\u0443\u043d\u0434" : "\u0441\u0435\u043a\u0443\u043d\u0434\u0443_\u0441\u0435\u043a\u0443\u043d\u0434\u044b_\u0441\u0435\u043a\u0443\u043d\u0434",
            mm: a ? "\u043c\u0438\u043d\u0443\u0442\u0430_\u043c\u0438\u043d\u0443\u0442\u044b_\u043c\u0438\u043d\u0443\u0442" : "\u043c\u0438\u043d\u0443\u0442\u0443_\u043c\u0438\u043d\u0443\u0442\u044b_\u043c\u0438\u043d\u0443\u0442",
            hh: "\u0447\u0430\u0441_\u0447\u0430\u0441\u0430_\u0447\u0430\u0441\u043e\u0432",
            dd: "\u0434\u0435\u043d\u044c_\u0434\u043d\u044f_\u0434\u043d\u0435\u0439",
            MM: "\u043c\u0435\u0441\u044f\u0446_\u043c\u0435\u0441\u044f\u0446\u0430_\u043c\u0435\u0441\u044f\u0446\u0435\u0432",
            yy: "\u0433\u043e\u0434_\u0433\u043e\u0434\u0430_\u043b\u0435\u0442"
        }[t].split("_"),
        s % 10 == 1 && s % 100 != 11 ? n[0] : 2 <= s % 10 && s % 10 <= 4 && (s % 100 < 10 || 20 <= s % 100) ? n[1] : n[2])
    }
    l.defineLocale("pl", {
        months: function(e, a) {
            return e ? "" === a ? "(" + Un[e.month()] + "|" + In[e.month()] + ")" : /D MMMM/.test(a) ? Un[e.month()] : In[e.month()] : In
        },
        monthsShort: "sty_lut_mar_kwi_maj_cze_lip_sie_wrz_pa\u017a_lis_gru".split("_"),
        weekdays: "niedziela_poniedzia\u0142ek_wtorek_\u015broda_czwartek_pi\u0105tek_sobota".split("_"),
        weekdaysShort: "ndz_pon_wt_\u015br_czw_pt_sob".split("_"),
        weekdaysMin: "Nd_Pn_Wt_\u015ar_Cz_Pt_So".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[Dzi\u015b o] LT",
            nextDay: "[Jutro o] LT",
            nextWeek: function() {
                switch (this.day()) {
                case 0:
                    return "[W niedziel\u0119 o] LT";
                case 2:
                    return "[We wtorek o] LT";
                case 3:
                    return "[W \u015brod\u0119 o] LT";
                case 6:
                    return "[W sobot\u0119 o] LT";
                default:
                    return "[W] dddd [o] LT"
                }
            },
            lastDay: "[Wczoraj o] LT",
            lastWeek: function() {
                switch (this.day()) {
                case 0:
                    return "[W zesz\u0142\u0105 niedziel\u0119 o] LT";
                case 3:
                    return "[W zesz\u0142\u0105 \u015brod\u0119 o] LT";
                case 6:
                    return "[W zesz\u0142\u0105 sobot\u0119 o] LT";
                default:
                    return "[W zesz\u0142y] dddd [o] LT"
                }
            },
            sameElse: "L"
        },
        relativeTime: {
            future: "za %s",
            past: "%s temu",
            s: "kilka sekund",
            ss: Vn,
            m: Vn,
            mm: Vn,
            h: Vn,
            hh: Vn,
            d: "1 dzie\u0144",
            dd: "%d dni",
            M: "miesi\u0105c",
            MM: Vn,
            y: "rok",
            yy: Vn
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("pt-br", {
        months: "Janeiro_Fevereiro_Mar\xe7o_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro".split("_"),
        monthsShort: "Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez".split("_"),
        weekdays: "Domingo_Segunda-feira_Ter\xe7a-feira_Quarta-feira_Quinta-feira_Sexta-feira_S\xe1bado".split("_"),
        weekdaysShort: "Dom_Seg_Ter_Qua_Qui_Sex_S\xe1b".split("_"),
        weekdaysMin: "Do_2\xaa_3\xaa_4\xaa_5\xaa_6\xaa_S\xe1".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D [de] MMMM [de] YYYY",
            LLL: "D [de] MMMM [de] YYYY [\xe0s] HH:mm",
            LLLL: "dddd, D [de] MMMM [de] YYYY [\xe0s] HH:mm"
        },
        calendar: {
            sameDay: "[Hoje \xe0s] LT",
            nextDay: "[Amanh\xe3 \xe0s] LT",
            nextWeek: "dddd [\xe0s] LT",
            lastDay: "[Ontem \xe0s] LT",
            lastWeek: function() {
                return 0 === this.day() || 6 === this.day() ? "[\xdaltimo] dddd [\xe0s] LT" : "[\xdaltima] dddd [\xe0s] LT"
            },
            sameElse: "L"
        },
        relativeTime: {
            future: "em %s",
            past: "h\xe1 %s",
            s: "poucos segundos",
            ss: "%d segundos",
            m: "um minuto",
            mm: "%d minutos",
            h: "uma hora",
            hh: "%d horas",
            d: "um dia",
            dd: "%d dias",
            M: "um m\xeas",
            MM: "%d meses",
            y: "um ano",
            yy: "%d anos"
        },
        dayOfMonthOrdinalParse: /\d{1,2}\xba/,
        ordinal: "%d\xba"
    }),
    l.defineLocale("pt", {
        months: "Janeiro_Fevereiro_Mar\xe7o_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro".split("_"),
        monthsShort: "Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez".split("_"),
        weekdays: "Domingo_Segunda-feira_Ter\xe7a-feira_Quarta-feira_Quinta-feira_Sexta-feira_S\xe1bado".split("_"),
        weekdaysShort: "Dom_Seg_Ter_Qua_Qui_Sex_S\xe1b".split("_"),
        weekdaysMin: "Do_2\xaa_3\xaa_4\xaa_5\xaa_6\xaa_S\xe1".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D [de] MMMM [de] YYYY",
            LLL: "D [de] MMMM [de] YYYY HH:mm",
            LLLL: "dddd, D [de] MMMM [de] YYYY HH:mm"
        },
        calendar: {
            sameDay: "[Hoje \xe0s] LT",
            nextDay: "[Amanh\xe3 \xe0s] LT",
            nextWeek: "dddd [\xe0s] LT",
            lastDay: "[Ontem \xe0s] LT",
            lastWeek: function() {
                return 0 === this.day() || 6 === this.day() ? "[\xdaltimo] dddd [\xe0s] LT" : "[\xdaltima] dddd [\xe0s] LT"
            },
            sameElse: "L"
        },
        relativeTime: {
            future: "em %s",
            past: "h\xe1 %s",
            s: "segundos",
            ss: "%d segundos",
            m: "um minuto",
            mm: "%d minutos",
            h: "uma hora",
            hh: "%d horas",
            d: "um dia",
            dd: "%d dias",
            M: "um m\xeas",
            MM: "%d meses",
            y: "um ano",
            yy: "%d anos"
        },
        dayOfMonthOrdinalParse: /\d{1,2}\xba/,
        ordinal: "%d\xba",
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("ro", {
        months: "ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie".split("_"),
        monthsShort: "ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.".split("_"),
        monthsParseExact: !0,
        weekdays: "duminic\u0103_luni_mar\u021bi_miercuri_joi_vineri_s\xe2mb\u0103t\u0103".split("_"),
        weekdaysShort: "Dum_Lun_Mar_Mie_Joi_Vin_S\xe2m".split("_"),
        weekdaysMin: "Du_Lu_Ma_Mi_Jo_Vi_S\xe2".split("_"),
        longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY H:mm",
            LLLL: "dddd, D MMMM YYYY H:mm"
        },
        calendar: {
            sameDay: "[azi la] LT",
            nextDay: "[m\xe2ine la] LT",
            nextWeek: "dddd [la] LT",
            lastDay: "[ieri la] LT",
            lastWeek: "[fosta] dddd [la] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "peste %s",
            past: "%s \xeen urm\u0103",
            s: "c\xe2teva secunde",
            ss: Kn,
            m: "un minut",
            mm: Kn,
            h: "o or\u0103",
            hh: Kn,
            d: "o zi",
            dd: Kn,
            M: "o lun\u0103",
            MM: Kn,
            y: "un an",
            yy: Kn
        },
        week: {
            dow: 1,
            doy: 7
        }
    });
    var $n = [/^\u044f\u043d\u0432/i, /^\u0444\u0435\u0432/i, /^\u043c\u0430\u0440/i, /^\u0430\u043f\u0440/i, /^\u043c\u0430[\u0439\u044f]/i, /^\u0438\u044e\u043d/i, /^\u0438\u044e\u043b/i, /^\u0430\u0432\u0433/i, /^\u0441\u0435\u043d/i, /^\u043e\u043a\u0442/i, /^\u043d\u043e\u044f/i, /^\u0434\u0435\u043a/i];
    l.defineLocale("ru", {
        months: {
            format: "\u044f\u043d\u0432\u0430\u0440\u044f_\u0444\u0435\u0432\u0440\u0430\u043b\u044f_\u043c\u0430\u0440\u0442\u0430_\u0430\u043f\u0440\u0435\u043b\u044f_\u043c\u0430\u044f_\u0438\u044e\u043d\u044f_\u0438\u044e\u043b\u044f_\u0430\u0432\u0433\u0443\u0441\u0442\u0430_\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044f_\u043e\u043a\u0442\u044f\u0431\u0440\u044f_\u043d\u043e\u044f\u0431\u0440\u044f_\u0434\u0435\u043a\u0430\u0431\u0440\u044f".split("_"),
            standalone: "\u044f\u043d\u0432\u0430\u0440\u044c_\u0444\u0435\u0432\u0440\u0430\u043b\u044c_\u043c\u0430\u0440\u0442_\u0430\u043f\u0440\u0435\u043b\u044c_\u043c\u0430\u0439_\u0438\u044e\u043d\u044c_\u0438\u044e\u043b\u044c_\u0430\u0432\u0433\u0443\u0441\u0442_\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044c_\u043e\u043a\u0442\u044f\u0431\u0440\u044c_\u043d\u043e\u044f\u0431\u0440\u044c_\u0434\u0435\u043a\u0430\u0431\u0440\u044c".split("_")
        },
        monthsShort: {
            format: "\u044f\u043d\u0432._\u0444\u0435\u0432\u0440._\u043c\u0430\u0440._\u0430\u043f\u0440._\u043c\u0430\u044f_\u0438\u044e\u043d\u044f_\u0438\u044e\u043b\u044f_\u0430\u0432\u0433._\u0441\u0435\u043d\u0442._\u043e\u043a\u0442._\u043d\u043e\u044f\u0431._\u0434\u0435\u043a.".split("_"),
            standalone: "\u044f\u043d\u0432._\u0444\u0435\u0432\u0440._\u043c\u0430\u0440\u0442_\u0430\u043f\u0440._\u043c\u0430\u0439_\u0438\u044e\u043d\u044c_\u0438\u044e\u043b\u044c_\u0430\u0432\u0433._\u0441\u0435\u043d\u0442._\u043e\u043a\u0442._\u043d\u043e\u044f\u0431._\u0434\u0435\u043a.".split("_")
        },
        weekdays: {
            standalone: "\u0432\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435_\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a_\u0432\u0442\u043e\u0440\u043d\u0438\u043a_\u0441\u0440\u0435\u0434\u0430_\u0447\u0435\u0442\u0432\u0435\u0440\u0433_\u043f\u044f\u0442\u043d\u0438\u0446\u0430_\u0441\u0443\u0431\u0431\u043e\u0442\u0430".split("_"),
            format: "\u0432\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435_\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a_\u0432\u0442\u043e\u0440\u043d\u0438\u043a_\u0441\u0440\u0435\u0434\u0443_\u0447\u0435\u0442\u0432\u0435\u0440\u0433_\u043f\u044f\u0442\u043d\u0438\u0446\u0443_\u0441\u0443\u0431\u0431\u043e\u0442\u0443".split("_"),
            isFormat: /\[ ?[\u0412\u0432] ?(?:\u043f\u0440\u043e\u0448\u043b\u0443\u044e|\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e|\u044d\u0442\u0443)? ?\] ?dddd/
        },
        weekdaysShort: "\u0432\u0441_\u043f\u043d_\u0432\u0442_\u0441\u0440_\u0447\u0442_\u043f\u0442_\u0441\u0431".split("_"),
        weekdaysMin: "\u0432\u0441_\u043f\u043d_\u0432\u0442_\u0441\u0440_\u0447\u0442_\u043f\u0442_\u0441\u0431".split("_"),
        monthsParse: $n,
        longMonthsParse: $n,
        shortMonthsParse: $n,
        monthsRegex: /^(\u044f\u043d\u0432\u0430\u0440[\u044c\u044f]|\u044f\u043d\u0432\.?|\u0444\u0435\u0432\u0440\u0430\u043b[\u044c\u044f]|\u0444\u0435\u0432\u0440?\.?|\u043c\u0430\u0440\u0442\u0430?|\u043c\u0430\u0440\.?|\u0430\u043f\u0440\u0435\u043b[\u044c\u044f]|\u0430\u043f\u0440\.?|\u043c\u0430[\u0439\u044f]|\u0438\u044e\u043d[\u044c\u044f]|\u0438\u044e\u043d\.?|\u0438\u044e\u043b[\u044c\u044f]|\u0438\u044e\u043b\.?|\u0430\u0432\u0433\u0443\u0441\u0442\u0430?|\u0430\u0432\u0433\.?|\u0441\u0435\u043d\u0442\u044f\u0431\u0440[\u044c\u044f]|\u0441\u0435\u043d\u0442?\.?|\u043e\u043a\u0442\u044f\u0431\u0440[\u044c\u044f]|\u043e\u043a\u0442\.?|\u043d\u043e\u044f\u0431\u0440[\u044c\u044f]|\u043d\u043e\u044f\u0431?\.?|\u0434\u0435\u043a\u0430\u0431\u0440[\u044c\u044f]|\u0434\u0435\u043a\.?)/i,
        monthsShortRegex: /^(\u044f\u043d\u0432\u0430\u0440[\u044c\u044f]|\u044f\u043d\u0432\.?|\u0444\u0435\u0432\u0440\u0430\u043b[\u044c\u044f]|\u0444\u0435\u0432\u0440?\.?|\u043c\u0430\u0440\u0442\u0430?|\u043c\u0430\u0440\.?|\u0430\u043f\u0440\u0435\u043b[\u044c\u044f]|\u0430\u043f\u0440\.?|\u043c\u0430[\u0439\u044f]|\u0438\u044e\u043d[\u044c\u044f]|\u0438\u044e\u043d\.?|\u0438\u044e\u043b[\u044c\u044f]|\u0438\u044e\u043b\.?|\u0430\u0432\u0433\u0443\u0441\u0442\u0430?|\u0430\u0432\u0433\.?|\u0441\u0435\u043d\u0442\u044f\u0431\u0440[\u044c\u044f]|\u0441\u0435\u043d\u0442?\.?|\u043e\u043a\u0442\u044f\u0431\u0440[\u044c\u044f]|\u043e\u043a\u0442\.?|\u043d\u043e\u044f\u0431\u0440[\u044c\u044f]|\u043d\u043e\u044f\u0431?\.?|\u0434\u0435\u043a\u0430\u0431\u0440[\u044c\u044f]|\u0434\u0435\u043a\.?)/i,
        monthsStrictRegex: /^(\u044f\u043d\u0432\u0430\u0440[\u044f\u044c]|\u0444\u0435\u0432\u0440\u0430\u043b[\u044f\u044c]|\u043c\u0430\u0440\u0442\u0430?|\u0430\u043f\u0440\u0435\u043b[\u044f\u044c]|\u043c\u0430[\u044f\u0439]|\u0438\u044e\u043d[\u044f\u044c]|\u0438\u044e\u043b[\u044f\u044c]|\u0430\u0432\u0433\u0443\u0441\u0442\u0430?|\u0441\u0435\u043d\u0442\u044f\u0431\u0440[\u044f\u044c]|\u043e\u043a\u0442\u044f\u0431\u0440[\u044f\u044c]|\u043d\u043e\u044f\u0431\u0440[\u044f\u044c]|\u0434\u0435\u043a\u0430\u0431\u0440[\u044f\u044c])/i,
        monthsShortStrictRegex: /^(\u044f\u043d\u0432\.|\u0444\u0435\u0432\u0440?\.|\u043c\u0430\u0440[\u0442.]|\u0430\u043f\u0440\.|\u043c\u0430[\u044f\u0439]|\u0438\u044e\u043d[\u044c\u044f.]|\u0438\u044e\u043b[\u044c\u044f.]|\u0430\u0432\u0433\.|\u0441\u0435\u043d\u0442?\.|\u043e\u043a\u0442\.|\u043d\u043e\u044f\u0431?\.|\u0434\u0435\u043a\.)/i,
        longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY \u0433.",
            LLL: "D MMMM YYYY \u0433., H:mm",
            LLLL: "dddd, D MMMM YYYY \u0433., H:mm"
        },
        calendar: {
            sameDay: "[\u0421\u0435\u0433\u043e\u0434\u043d\u044f, \u0432] LT",
            nextDay: "[\u0417\u0430\u0432\u0442\u0440\u0430, \u0432] LT",
            lastDay: "[\u0412\u0447\u0435\u0440\u0430, \u0432] LT",
            nextWeek: function(e) {
                if (e.week() === this.week())
                    return 2 === this.day() ? "[\u0412\u043e] dddd, [\u0432] LT" : "[\u0412] dddd, [\u0432] LT";
                switch (this.day()) {
                case 0:
                    return "[\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0435] dddd, [\u0432] LT";
                case 1:
                case 2:
                case 4:
                    return "[\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439] dddd, [\u0432] LT";
                case 3:
                case 5:
                case 6:
                    return "[\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e] dddd, [\u0432] LT"
                }
            },
            lastWeek: function(e) {
                if (e.week() === this.week())
                    return 2 === this.day() ? "[\u0412\u043e] dddd, [\u0432] LT" : "[\u0412] dddd, [\u0432] LT";
                switch (this.day()) {
                case 0:
                    return "[\u0412 \u043f\u0440\u043e\u0448\u043b\u043e\u0435] dddd, [\u0432] LT";
                case 1:
                case 2:
                case 4:
                    return "[\u0412 \u043f\u0440\u043e\u0448\u043b\u044b\u0439] dddd, [\u0432] LT";
                case 3:
                case 5:
                case 6:
                    return "[\u0412 \u043f\u0440\u043e\u0448\u043b\u0443\u044e] dddd, [\u0432] LT"
                }
            },
            sameElse: "L"
        },
        relativeTime: {
            future: "\u0447\u0435\u0440\u0435\u0437 %s",
            past: "%s \u043d\u0430\u0437\u0430\u0434",
            s: "\u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0435\u043a\u0443\u043d\u0434",
            ss: Zn,
            m: Zn,
            mm: Zn,
            h: "\u0447\u0430\u0441",
            hh: Zn,
            d: "\u0434\u0435\u043d\u044c",
            dd: Zn,
            M: "\u043c\u0435\u0441\u044f\u0446",
            MM: Zn,
            y: "\u0433\u043e\u0434",
            yy: Zn
        },
        meridiemParse: /\u043d\u043e\u0447\u0438|\u0443\u0442\u0440\u0430|\u0434\u043d\u044f|\u0432\u0435\u0447\u0435\u0440\u0430/i,
        isPM: function(e) {
            return /^(\u0434\u043d\u044f|\u0432\u0435\u0447\u0435\u0440\u0430)$/.test(e)
        },
        meridiem: function(e, a, t) {
            return e < 4 ? "\u043d\u043e\u0447\u0438" : e < 12 ? "\u0443\u0442\u0440\u0430" : e < 17 ? "\u0434\u043d\u044f" : "\u0432\u0435\u0447\u0435\u0440\u0430"
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(\u0439|\u0433\u043e|\u044f)/,
        ordinal: function(e, a) {
            switch (a) {
            case "M":
            case "d":
            case "DDD":
                return e + "-\u0439";
            case "D":
                return e + "-\u0433\u043e";
            case "w":
            case "W":
                return e + "-\u044f";
            default:
                return e
            }
        },
        week: {
            dow: 1,
            doy: 4
        }
    });
    var Bn = ["\u062c\u0646\u0648\u0631\u064a", "\u0641\u064a\u0628\u0631\u0648\u0631\u064a", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u064a\u0644", "\u0645\u0626\u064a", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0621\u0650", "\u0622\u06af\u0633\u067d", "\u0633\u064a\u067e\u067d\u0645\u0628\u0631", "\u0622\u06aa\u067d\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u068a\u0633\u0645\u0628\u0631"]
      , qn = ["\u0622\u0686\u0631", "\u0633\u0648\u0645\u0631", "\u0627\u06b1\u0627\u0631\u0648", "\u0627\u0631\u0628\u0639", "\u062e\u0645\u064a\u0633", "\u062c\u0645\u0639", "\u0687\u0646\u0687\u0631"];
    l.defineLocale("sd", {
        months: Bn,
        monthsShort: Bn,
        weekdays: qn,
        weekdaysShort: qn,
        weekdaysMin: qn,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd\u060c D MMMM YYYY HH:mm"
        },
        meridiemParse: /\u0635\u0628\u062d|\u0634\u0627\u0645/,
        isPM: function(e) {
            return "\u0634\u0627\u0645" === e
        },
        meridiem: function(e, a, t) {
            return e < 12 ? "\u0635\u0628\u062d" : "\u0634\u0627\u0645"
        },
        calendar: {
            sameDay: "[\u0627\u0684] LT",
            nextDay: "[\u0633\u0680\u0627\u06bb\u064a] LT",
            nextWeek: "dddd [\u0627\u06b3\u064a\u0646 \u0647\u0641\u062a\u064a \u062a\u064a] LT",
            lastDay: "[\u06aa\u0627\u0644\u0647\u0647] LT",
            lastWeek: "[\u06af\u0632\u0631\u064a\u0644 \u0647\u0641\u062a\u064a] dddd [\u062a\u064a] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s \u067e\u0648\u0621",
            past: "%s \u0627\u06b3",
            s: "\u0686\u0646\u062f \u0633\u064a\u06aa\u0646\u068a",
            ss: "%d \u0633\u064a\u06aa\u0646\u068a",
            m: "\u0647\u06aa \u0645\u0646\u067d",
            mm: "%d \u0645\u0646\u067d",
            h: "\u0647\u06aa \u06aa\u0644\u0627\u06aa",
            hh: "%d \u06aa\u0644\u0627\u06aa",
            d: "\u0647\u06aa \u068f\u064a\u0646\u0647\u0646",
            dd: "%d \u068f\u064a\u0646\u0647\u0646",
            M: "\u0647\u06aa \u0645\u0647\u064a\u0646\u0648",
            MM: "%d \u0645\u0647\u064a\u0646\u0627",
            y: "\u0647\u06aa \u0633\u0627\u0644",
            yy: "%d \u0633\u0627\u0644"
        },
        preparse: function(e) {
            return e.replace(/\u060c/g, ",")
        },
        postformat: function(e) {
            return e.replace(/,/g, "\u060c")
        },
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("se", {
        months: "o\u0111\u0111ajagem\xe1nnu_guovvam\xe1nnu_njuk\u010dam\xe1nnu_cuo\u014bom\xe1nnu_miessem\xe1nnu_geassem\xe1nnu_suoidnem\xe1nnu_borgem\xe1nnu_\u010dak\u010dam\xe1nnu_golggotm\xe1nnu_sk\xe1bmam\xe1nnu_juovlam\xe1nnu".split("_"),
        monthsShort: "o\u0111\u0111j_guov_njuk_cuo_mies_geas_suoi_borg_\u010dak\u010d_golg_sk\xe1b_juov".split("_"),
        weekdays: "sotnabeaivi_vuoss\xe1rga_ma\u014b\u014beb\xe1rga_gaskavahkku_duorastat_bearjadat_l\xe1vvardat".split("_"),
        weekdaysShort: "sotn_vuos_ma\u014b_gask_duor_bear_l\xe1v".split("_"),
        weekdaysMin: "s_v_m_g_d_b_L".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "MMMM D. [b.] YYYY",
            LLL: "MMMM D. [b.] YYYY [ti.] HH:mm",
            LLLL: "dddd, MMMM D. [b.] YYYY [ti.] HH:mm"
        },
        calendar: {
            sameDay: "[otne ti] LT",
            nextDay: "[ihttin ti] LT",
            nextWeek: "dddd [ti] LT",
            lastDay: "[ikte ti] LT",
            lastWeek: "[ovddit] dddd [ti] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s gea\u017ees",
            past: "ma\u014bit %s",
            s: "moadde sekunddat",
            ss: "%d sekunddat",
            m: "okta minuhta",
            mm: "%d minuhtat",
            h: "okta diimmu",
            hh: "%d diimmut",
            d: "okta beaivi",
            dd: "%d beaivvit",
            M: "okta m\xe1nnu",
            MM: "%d m\xe1nut",
            y: "okta jahki",
            yy: "%d jagit"
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("si", {
        months: "\u0da2\u0db1\u0dc0\u0dcf\u0dbb\u0dd2_\u0db4\u0dd9\u0db6\u0dbb\u0dc0\u0dcf\u0dbb\u0dd2_\u0db8\u0dcf\u0dbb\u0dca\u0dad\u0dd4_\u0d85\u0db4\u0dca\u200d\u0dbb\u0dda\u0dbd\u0dca_\u0db8\u0dd0\u0dba\u0dd2_\u0da2\u0dd6\u0db1\u0dd2_\u0da2\u0dd6\u0dbd\u0dd2_\u0d85\u0d9c\u0ddd\u0dc3\u0dca\u0dad\u0dd4_\u0dc3\u0dd0\u0db4\u0dca\u0dad\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca_\u0d94\u0d9a\u0dca\u0dad\u0ddd\u0db6\u0dbb\u0dca_\u0db1\u0ddc\u0dc0\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca_\u0daf\u0dd9\u0dc3\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca".split("_"),
        monthsShort: "\u0da2\u0db1_\u0db4\u0dd9\u0db6_\u0db8\u0dcf\u0dbb\u0dca_\u0d85\u0db4\u0dca_\u0db8\u0dd0\u0dba\u0dd2_\u0da2\u0dd6\u0db1\u0dd2_\u0da2\u0dd6\u0dbd\u0dd2_\u0d85\u0d9c\u0ddd_\u0dc3\u0dd0\u0db4\u0dca_\u0d94\u0d9a\u0dca_\u0db1\u0ddc\u0dc0\u0dd0_\u0daf\u0dd9\u0dc3\u0dd0".split("_"),
        weekdays: "\u0d89\u0dbb\u0dd2\u0daf\u0dcf_\u0dc3\u0db3\u0dd4\u0daf\u0dcf_\u0d85\u0d9f\u0dc4\u0dbb\u0dd4\u0dc0\u0dcf\u0daf\u0dcf_\u0db6\u0daf\u0dcf\u0daf\u0dcf_\u0db6\u0dca\u200d\u0dbb\u0dc4\u0dc3\u0dca\u0db4\u0dad\u0dd2\u0db1\u0dca\u0daf\u0dcf_\u0dc3\u0dd2\u0d9a\u0dd4\u0dbb\u0dcf\u0daf\u0dcf_\u0dc3\u0dd9\u0db1\u0dc3\u0dd4\u0dbb\u0dcf\u0daf\u0dcf".split("_"),
        weekdaysShort: "\u0d89\u0dbb\u0dd2_\u0dc3\u0db3\u0dd4_\u0d85\u0d9f_\u0db6\u0daf\u0dcf_\u0db6\u0dca\u200d\u0dbb\u0dc4_\u0dc3\u0dd2\u0d9a\u0dd4_\u0dc3\u0dd9\u0db1".split("_"),
        weekdaysMin: "\u0d89_\u0dc3_\u0d85_\u0db6_\u0db6\u0dca\u200d\u0dbb_\u0dc3\u0dd2_\u0dc3\u0dd9".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "a h:mm",
            LTS: "a h:mm:ss",
            L: "YYYY/MM/DD",
            LL: "YYYY MMMM D",
            LLL: "YYYY MMMM D, a h:mm",
            LLLL: "YYYY MMMM D [\u0dc0\u0dd0\u0db1\u0dd2] dddd, a h:mm:ss"
        },
        calendar: {
            sameDay: "[\u0d85\u0daf] LT[\u0da7]",
            nextDay: "[\u0dc4\u0dd9\u0da7] LT[\u0da7]",
            nextWeek: "dddd LT[\u0da7]",
            lastDay: "[\u0d8a\u0dba\u0dda] LT[\u0da7]",
            lastWeek: "[\u0db4\u0dc3\u0dd4\u0d9c\u0dd2\u0dba] dddd LT[\u0da7]",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s\u0d9a\u0dd2\u0db1\u0dca",
            past: "%s\u0d9a\u0da7 \u0db4\u0dd9\u0dbb",
            s: "\u0dad\u0dad\u0dca\u0db4\u0dbb \u0d9a\u0dd2\u0dc4\u0dd2\u0db4\u0dba",
            ss: "\u0dad\u0dad\u0dca\u0db4\u0dbb %d",
            m: "\u0db8\u0dd2\u0db1\u0dd2\u0dad\u0dca\u0dad\u0dd4\u0dc0",
            mm: "\u0db8\u0dd2\u0db1\u0dd2\u0dad\u0dca\u0dad\u0dd4 %d",
            h: "\u0db4\u0dd0\u0dba",
            hh: "\u0db4\u0dd0\u0dba %d",
            d: "\u0daf\u0dd2\u0db1\u0dba",
            dd: "\u0daf\u0dd2\u0db1 %d",
            M: "\u0db8\u0dcf\u0dc3\u0dba",
            MM: "\u0db8\u0dcf\u0dc3 %d",
            y: "\u0dc0\u0dc3\u0dbb",
            yy: "\u0dc0\u0dc3\u0dbb %d"
        },
        dayOfMonthOrdinalParse: /\d{1,2} \u0dc0\u0dd0\u0db1\u0dd2/,
        ordinal: function(e) {
            return e + " \u0dc0\u0dd0\u0db1\u0dd2"
        },
        meridiemParse: /\u0db4\u0dd9\u0dbb \u0dc0\u0dbb\u0dd4|\u0db4\u0dc3\u0dca \u0dc0\u0dbb\u0dd4|\u0db4\u0dd9.\u0dc0|\u0db4.\u0dc0./,
        isPM: function(e) {
            return "\u0db4.\u0dc0." === e || "\u0db4\u0dc3\u0dca \u0dc0\u0dbb\u0dd4" === e
        },
        meridiem: function(e, a, t) {
            return 11 < e ? t ? "\u0db4.\u0dc0." : "\u0db4\u0dc3\u0dca \u0dc0\u0dbb\u0dd4" : t ? "\u0db4\u0dd9.\u0dc0." : "\u0db4\u0dd9\u0dbb \u0dc0\u0dbb\u0dd4"
        }
    });
    var Qn = "janu\xe1r_febru\xe1r_marec_apr\xedl_m\xe1j_j\xfan_j\xfal_august_september_okt\xf3ber_november_december".split("_")
      , Xn = "jan_feb_mar_apr_m\xe1j_j\xfan_j\xfal_aug_sep_okt_nov_dec".split("_");
    function ed(e) {
        return 1 < e && e < 5
    }
    function ad(e, a, t, s) {
        var n = e + " ";
        switch (t) {
        case "s":
            return a || s ? "p\xe1r sek\xfand" : "p\xe1r sekundami";
        case "ss":
            return a || s ? n + (ed(e) ? "sekundy" : "sek\xfand") : n + "sekundami";
            break;
        case "m":
            return a ? "min\xfata" : s ? "min\xfatu" : "min\xfatou";
        case "mm":
            return a || s ? n + (ed(e) ? "min\xfaty" : "min\xfat") : n + "min\xfatami";
            break;
        case "h":
            return a ? "hodina" : s ? "hodinu" : "hodinou";
        case "hh":
            return a || s ? n + (ed(e) ? "hodiny" : "hod\xedn") : n + "hodinami";
            break;
        case "d":
            return a || s ? "de\u0148" : "d\u0148om";
        case "dd":
            return a || s ? n + (ed(e) ? "dni" : "dn\xed") : n + "d\u0148ami";
            break;
        case "M":
            return a || s ? "mesiac" : "mesiacom";
        case "MM":
            return a || s ? n + (ed(e) ? "mesiace" : "mesiacov") : n + "mesiacmi";
            break;
        case "y":
            return a || s ? "rok" : "rokom";
        case "yy":
            return a || s ? n + (ed(e) ? "roky" : "rokov") : n + "rokmi";
            break
        }
    }
    function td(e, a, t, s) {
        var n = e + " ";
        switch (t) {
        case "s":
            return a || s ? "nekaj sekund" : "nekaj sekundami";
        case "ss":
            return n += 1 === e ? a ? "sekundo" : "sekundi" : 2 === e ? a || s ? "sekundi" : "sekundah" : e < 5 ? a || s ? "sekunde" : "sekundah" : "sekund";
        case "m":
            return a ? "ena minuta" : "eno minuto";
        case "mm":
            return n += 1 === e ? a ? "minuta" : "minuto" : 2 === e ? a || s ? "minuti" : "minutama" : e < 5 ? a || s ? "minute" : "minutami" : a || s ? "minut" : "minutami";
        case "h":
            return a ? "ena ura" : "eno uro";
        case "hh":
            return n += 1 === e ? a ? "ura" : "uro" : 2 === e ? a || s ? "uri" : "urama" : e < 5 ? a || s ? "ure" : "urami" : a || s ? "ur" : "urami";
        case "d":
            return a || s ? "en dan" : "enim dnem";
        case "dd":
            return n += 1 === e ? a || s ? "dan" : "dnem" : 2 === e ? a || s ? "dni" : "dnevoma" : a || s ? "dni" : "dnevi";
        case "M":
            return a || s ? "en mesec" : "enim mesecem";
        case "MM":
            return n += 1 === e ? a || s ? "mesec" : "mesecem" : 2 === e ? a || s ? "meseca" : "mesecema" : e < 5 ? a || s ? "mesece" : "meseci" : a || s ? "mesecev" : "meseci";
        case "y":
            return a || s ? "eno leto" : "enim letom";
        case "yy":
            return n += 1 === e ? a || s ? "leto" : "letom" : 2 === e ? a || s ? "leti" : "letoma" : e < 5 ? a || s ? "leta" : "leti" : a || s ? "let" : "leti"
        }
    }
    l.defineLocale("sk", {
        months: Qn,
        monthsShort: Xn,
        weekdays: "nede\u013ea_pondelok_utorok_streda_\u0161tvrtok_piatok_sobota".split("_"),
        weekdaysShort: "ne_po_ut_st_\u0161t_pi_so".split("_"),
        weekdaysMin: "ne_po_ut_st_\u0161t_pi_so".split("_"),
        longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd D. MMMM YYYY H:mm"
        },
        calendar: {
            sameDay: "[dnes o] LT",
            nextDay: "[zajtra o] LT",
            nextWeek: function() {
                switch (this.day()) {
                case 0:
                    return "[v nede\u013eu o] LT";
                case 1:
                case 2:
                    return "[v] dddd [o] LT";
                case 3:
                    return "[v stredu o] LT";
                case 4:
                    return "[vo \u0161tvrtok o] LT";
                case 5:
                    return "[v piatok o] LT";
                case 6:
                    return "[v sobotu o] LT"
                }
            },
            lastDay: "[v\u010dera o] LT",
            lastWeek: function() {
                switch (this.day()) {
                case 0:
                    return "[minul\xfa nede\u013eu o] LT";
                case 1:
                case 2:
                    return "[minul\xfd] dddd [o] LT";
                case 3:
                    return "[minul\xfa stredu o] LT";
                case 4:
                case 5:
                    return "[minul\xfd] dddd [o] LT";
                case 6:
                    return "[minul\xfa sobotu o] LT"
                }
            },
            sameElse: "L"
        },
        relativeTime: {
            future: "za %s",
            past: "pred %s",
            s: ad,
            ss: ad,
            m: ad,
            mm: ad,
            h: ad,
            hh: ad,
            d: ad,
            dd: ad,
            M: ad,
            MM: ad,
            y: ad,
            yy: ad
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("sl", {
        months: "januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december".split("_"),
        monthsShort: "jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.".split("_"),
        monthsParseExact: !0,
        weekdays: "nedelja_ponedeljek_torek_sreda_\u010detrtek_petek_sobota".split("_"),
        weekdaysShort: "ned._pon._tor._sre._\u010det._pet._sob.".split("_"),
        weekdaysMin: "ne_po_to_sr_\u010de_pe_so".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd, D. MMMM YYYY H:mm"
        },
        calendar: {
            sameDay: "[danes ob] LT",
            nextDay: "[jutri ob] LT",
            nextWeek: function() {
                switch (this.day()) {
                case 0:
                    return "[v] [nedeljo] [ob] LT";
                case 3:
                    return "[v] [sredo] [ob] LT";
                case 6:
                    return "[v] [soboto] [ob] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                    return "[v] dddd [ob] LT"
                }
            },
            lastDay: "[v\u010deraj ob] LT",
            lastWeek: function() {
                switch (this.day()) {
                case 0:
                    return "[prej\u0161njo] [nedeljo] [ob] LT";
                case 3:
                    return "[prej\u0161njo] [sredo] [ob] LT";
                case 6:
                    return "[prej\u0161njo] [soboto] [ob] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                    return "[prej\u0161nji] dddd [ob] LT"
                }
            },
            sameElse: "L"
        },
        relativeTime: {
            future: "\u010dez %s",
            past: "pred %s",
            s: td,
            ss: td,
            m: td,
            mm: td,
            h: td,
            hh: td,
            d: td,
            dd: td,
            M: td,
            MM: td,
            y: td,
            yy: td
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 7
        }
    }),
    l.defineLocale("sq", {
        months: "Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_N\xebntor_Dhjetor".split("_"),
        monthsShort: "Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_N\xebn_Dhj".split("_"),
        weekdays: "E Diel_E H\xebn\xeb_E Mart\xeb_E M\xebrkur\xeb_E Enjte_E Premte_E Shtun\xeb".split("_"),
        weekdaysShort: "Die_H\xebn_Mar_M\xebr_Enj_Pre_Sht".split("_"),
        weekdaysMin: "D_H_Ma_M\xeb_E_P_Sh".split("_"),
        weekdaysParseExact: !0,
        meridiemParse: /PD|MD/,
        isPM: function(e) {
            return "M" === e.charAt(0)
        },
        meridiem: function(e, a, t) {
            return e < 12 ? "PD" : "MD"
        },
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[Sot n\xeb] LT",
            nextDay: "[Nes\xebr n\xeb] LT",
            nextWeek: "dddd [n\xeb] LT",
            lastDay: "[Dje n\xeb] LT",
            lastWeek: "dddd [e kaluar n\xeb] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "n\xeb %s",
            past: "%s m\xeb par\xeb",
            s: "disa sekonda",
            ss: "%d sekonda",
            m: "nj\xeb minut\xeb",
            mm: "%d minuta",
            h: "nj\xeb or\xeb",
            hh: "%d or\xeb",
            d: "nj\xeb dit\xeb",
            dd: "%d dit\xeb",
            M: "nj\xeb muaj",
            MM: "%d muaj",
            y: "nj\xeb vit",
            yy: "%d vite"
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 4
        }
    });
    var sd = {
        words: {
            ss: ["\u0441\u0435\u043a\u0443\u043d\u0434\u0430", "\u0441\u0435\u043a\u0443\u043d\u0434\u0435", "\u0441\u0435\u043a\u0443\u043d\u0434\u0438"],
            m: ["\u0458\u0435\u0434\u0430\u043d \u043c\u0438\u043d\u0443\u0442", "\u0458\u0435\u0434\u043d\u0435 \u043c\u0438\u043d\u0443\u0442\u0435"],
            mm: ["\u043c\u0438\u043d\u0443\u0442", "\u043c\u0438\u043d\u0443\u0442\u0435", "\u043c\u0438\u043d\u0443\u0442\u0430"],
            h: ["\u0458\u0435\u0434\u0430\u043d \u0441\u0430\u0442", "\u0458\u0435\u0434\u043d\u043e\u0433 \u0441\u0430\u0442\u0430"],
            hh: ["\u0441\u0430\u0442", "\u0441\u0430\u0442\u0430", "\u0441\u0430\u0442\u0438"],
            dd: ["\u0434\u0430\u043d", "\u0434\u0430\u043d\u0430", "\u0434\u0430\u043d\u0430"],
            MM: ["\u043c\u0435\u0441\u0435\u0446", "\u043c\u0435\u0441\u0435\u0446\u0430", "\u043c\u0435\u0441\u0435\u0446\u0438"],
            yy: ["\u0433\u043e\u0434\u0438\u043d\u0430", "\u0433\u043e\u0434\u0438\u043d\u0435", "\u0433\u043e\u0434\u0438\u043d\u0430"]
        },
        correctGrammaticalCase: function(e, a) {
            return 1 === e ? a[0] : 2 <= e && e <= 4 ? a[1] : a[2]
        },
        translate: function(e, a, t) {
            var s = sd.words[t];
            return 1 === t.length ? a ? s[0] : s[1] : e + " " + sd.correctGrammaticalCase(e, s)
        }
    };
    l.defineLocale("sr-cyrl", {
        months: "\u0458\u0430\u043d\u0443\u0430\u0440_\u0444\u0435\u0431\u0440\u0443\u0430\u0440_\u043c\u0430\u0440\u0442_\u0430\u043f\u0440\u0438\u043b_\u043c\u0430\u0458_\u0458\u0443\u043d_\u0458\u0443\u043b_\u0430\u0432\u0433\u0443\u0441\u0442_\u0441\u0435\u043f\u0442\u0435\u043c\u0431\u0430\u0440_\u043e\u043a\u0442\u043e\u0431\u0430\u0440_\u043d\u043e\u0432\u0435\u043c\u0431\u0430\u0440_\u0434\u0435\u0446\u0435\u043c\u0431\u0430\u0440".split("_"),
        monthsShort: "\u0458\u0430\u043d._\u0444\u0435\u0431._\u043c\u0430\u0440._\u0430\u043f\u0440._\u043c\u0430\u0458_\u0458\u0443\u043d_\u0458\u0443\u043b_\u0430\u0432\u0433._\u0441\u0435\u043f._\u043e\u043a\u0442._\u043d\u043e\u0432._\u0434\u0435\u0446.".split("_"),
        monthsParseExact: !0,
        weekdays: "\u043d\u0435\u0434\u0435\u0459\u0430_\u043f\u043e\u043d\u0435\u0434\u0435\u0459\u0430\u043a_\u0443\u0442\u043e\u0440\u0430\u043a_\u0441\u0440\u0435\u0434\u0430_\u0447\u0435\u0442\u0432\u0440\u0442\u0430\u043a_\u043f\u0435\u0442\u0430\u043a_\u0441\u0443\u0431\u043e\u0442\u0430".split("_"),
        weekdaysShort: "\u043d\u0435\u0434._\u043f\u043e\u043d._\u0443\u0442\u043e._\u0441\u0440\u0435._\u0447\u0435\u0442._\u043f\u0435\u0442._\u0441\u0443\u0431.".split("_"),
        weekdaysMin: "\u043d\u0435_\u043f\u043e_\u0443\u0442_\u0441\u0440_\u0447\u0435_\u043f\u0435_\u0441\u0443".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd, D. MMMM YYYY H:mm"
        },
        calendar: {
            sameDay: "[\u0434\u0430\u043d\u0430\u0441 \u0443] LT",
            nextDay: "[\u0441\u0443\u0442\u0440\u0430 \u0443] LT",
            nextWeek: function() {
                switch (this.day()) {
                case 0:
                    return "[\u0443] [\u043d\u0435\u0434\u0435\u0459\u0443] [\u0443] LT";
                case 3:
                    return "[\u0443] [\u0441\u0440\u0435\u0434\u0443] [\u0443] LT";
                case 6:
                    return "[\u0443] [\u0441\u0443\u0431\u043e\u0442\u0443] [\u0443] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                    return "[\u0443] dddd [\u0443] LT"
                }
            },
            lastDay: "[\u0458\u0443\u0447\u0435 \u0443] LT",
            lastWeek: function() {
                return ["[\u043f\u0440\u043e\u0448\u043b\u0435] [\u043d\u0435\u0434\u0435\u0459\u0435] [\u0443] LT", "[\u043f\u0440\u043e\u0448\u043b\u043e\u0433] [\u043f\u043e\u043d\u0435\u0434\u0435\u0459\u043a\u0430] [\u0443] LT", "[\u043f\u0440\u043e\u0448\u043b\u043e\u0433] [\u0443\u0442\u043e\u0440\u043a\u0430] [\u0443] LT", "[\u043f\u0440\u043e\u0448\u043b\u0435] [\u0441\u0440\u0435\u0434\u0435] [\u0443] LT", "[\u043f\u0440\u043e\u0448\u043b\u043e\u0433] [\u0447\u0435\u0442\u0432\u0440\u0442\u043a\u0430] [\u0443] LT", "[\u043f\u0440\u043e\u0448\u043b\u043e\u0433] [\u043f\u0435\u0442\u043a\u0430] [\u0443] LT", "[\u043f\u0440\u043e\u0448\u043b\u0435] [\u0441\u0443\u0431\u043e\u0442\u0435] [\u0443] LT"][this.day()]
            },
            sameElse: "L"
        },
        relativeTime: {
            future: "\u0437\u0430 %s",
            past: "\u043f\u0440\u0435 %s",
            s: "\u043d\u0435\u043a\u043e\u043b\u0438\u043a\u043e \u0441\u0435\u043a\u0443\u043d\u0434\u0438",
            ss: sd.translate,
            m: sd.translate,
            mm: sd.translate,
            h: sd.translate,
            hh: sd.translate,
            d: "\u0434\u0430\u043d",
            dd: sd.translate,
            M: "\u043c\u0435\u0441\u0435\u0446",
            MM: sd.translate,
            y: "\u0433\u043e\u0434\u0438\u043d\u0443",
            yy: sd.translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 7
        }
    });
    var nd = {
        words: {
            ss: ["sekunda", "sekunde", "sekundi"],
            m: ["jedan minut", "jedne minute"],
            mm: ["minut", "minute", "minuta"],
            h: ["jedan sat", "jednog sata"],
            hh: ["sat", "sata", "sati"],
            dd: ["dan", "dana", "dana"],
            MM: ["mesec", "meseca", "meseci"],
            yy: ["godina", "godine", "godina"]
        },
        correctGrammaticalCase: function(e, a) {
            return 1 === e ? a[0] : 2 <= e && e <= 4 ? a[1] : a[2]
        },
        translate: function(e, a, t) {
            var s = nd.words[t];
            return 1 === t.length ? a ? s[0] : s[1] : e + " " + nd.correctGrammaticalCase(e, s)
        }
    };
    l.defineLocale("sr", {
        months: "januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar".split("_"),
        monthsShort: "jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.".split("_"),
        monthsParseExact: !0,
        weekdays: "nedelja_ponedeljak_utorak_sreda_\u010detvrtak_petak_subota".split("_"),
        weekdaysShort: "ned._pon._uto._sre._\u010det._pet._sub.".split("_"),
        weekdaysMin: "ne_po_ut_sr_\u010de_pe_su".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM YYYY",
            LLL: "D. MMMM YYYY H:mm",
            LLLL: "dddd, D. MMMM YYYY H:mm"
        },
        calendar: {
            sameDay: "[danas u] LT",
            nextDay: "[sutra u] LT",
            nextWeek: function() {
                switch (this.day()) {
                case 0:
                    return "[u] [nedelju] [u] LT";
                case 3:
                    return "[u] [sredu] [u] LT";
                case 6:
                    return "[u] [subotu] [u] LT";
                case 1:
                case 2:
                case 4:
                case 5:
                    return "[u] dddd [u] LT"
                }
            },
            lastDay: "[ju\u010de u] LT",
            lastWeek: function() {
                return ["[pro\u0161le] [nedelje] [u] LT", "[pro\u0161log] [ponedeljka] [u] LT", "[pro\u0161log] [utorka] [u] LT", "[pro\u0161le] [srede] [u] LT", "[pro\u0161log] [\u010detvrtka] [u] LT", "[pro\u0161log] [petka] [u] LT", "[pro\u0161le] [subote] [u] LT"][this.day()]
            },
            sameElse: "L"
        },
        relativeTime: {
            future: "za %s",
            past: "pre %s",
            s: "nekoliko sekundi",
            ss: nd.translate,
            m: nd.translate,
            mm: nd.translate,
            h: nd.translate,
            hh: nd.translate,
            d: "dan",
            dd: nd.translate,
            M: "mesec",
            MM: nd.translate,
            y: "godinu",
            yy: nd.translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 7
        }
    }),
    l.defineLocale("ss", {
        months: "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split("_"),
        monthsShort: "Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo".split("_"),
        weekdays: "Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo".split("_"),
        weekdaysShort: "Lis_Umb_Lsb_Les_Lsi_Lsh_Umg".split("_"),
        weekdaysMin: "Li_Us_Lb_Lt_Ls_Lh_Ug".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY h:mm A",
            LLLL: "dddd, D MMMM YYYY h:mm A"
        },
        calendar: {
            sameDay: "[Namuhla nga] LT",
            nextDay: "[Kusasa nga] LT",
            nextWeek: "dddd [nga] LT",
            lastDay: "[Itolo nga] LT",
            lastWeek: "dddd [leliphelile] [nga] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "nga %s",
            past: "wenteka nga %s",
            s: "emizuzwana lomcane",
            ss: "%d mzuzwana",
            m: "umzuzu",
            mm: "%d emizuzu",
            h: "lihora",
            hh: "%d emahora",
            d: "lilanga",
            dd: "%d emalanga",
            M: "inyanga",
            MM: "%d tinyanga",
            y: "umnyaka",
            yy: "%d iminyaka"
        },
        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
        meridiem: function(e, a, t) {
            return e < 11 ? "ekuseni" : e < 15 ? "emini" : e < 19 ? "entsambama" : "ebusuku"
        },
        meridiemHour: function(e, a) {
            return 12 === e && (e = 0),
            "ekuseni" === a ? e : "emini" === a ? 11 <= e ? e : e + 12 : "entsambama" === a || "ebusuku" === a ? 0 === e ? 0 : e + 12 : void 0
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal: "%d",
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("sv", {
        months: "januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december".split("_"),
        monthsShort: "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split("_"),
        weekdays: "s\xf6ndag_m\xe5ndag_tisdag_onsdag_torsdag_fredag_l\xf6rdag".split("_"),
        weekdaysShort: "s\xf6n_m\xe5n_tis_ons_tor_fre_l\xf6r".split("_"),
        weekdaysMin: "s\xf6_m\xe5_ti_on_to_fr_l\xf6".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY-MM-DD",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY [kl.] HH:mm",
            LLLL: "dddd D MMMM YYYY [kl.] HH:mm",
            lll: "D MMM YYYY HH:mm",
            llll: "ddd D MMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[Idag] LT",
            nextDay: "[Imorgon] LT",
            lastDay: "[Ig\xe5r] LT",
            nextWeek: "[P\xe5] dddd LT",
            lastWeek: "[I] dddd[s] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "om %s",
            past: "f\xf6r %s sedan",
            s: "n\xe5gra sekunder",
            ss: "%d sekunder",
            m: "en minut",
            mm: "%d minuter",
            h: "en timme",
            hh: "%d timmar",
            d: "en dag",
            dd: "%d dagar",
            M: "en m\xe5nad",
            MM: "%d m\xe5nader",
            y: "ett \xe5r",
            yy: "%d \xe5r"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(e|a)/,
        ordinal: function(e) {
            var a = e % 10;
            return e + (1 == ~~(e % 100 / 10) ? "e" : 1 === a ? "a" : 2 === a ? "a" : "e")
        },
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("sw", {
        months: "Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba".split("_"),
        monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des".split("_"),
        weekdays: "Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi".split("_"),
        weekdaysShort: "Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos".split("_"),
        weekdaysMin: "J2_J3_J4_J5_Al_Ij_J1".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[leo saa] LT",
            nextDay: "[kesho saa] LT",
            nextWeek: "[wiki ijayo] dddd [saat] LT",
            lastDay: "[jana] LT",
            lastWeek: "[wiki iliyopita] dddd [saat] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s baadaye",
            past: "tokea %s",
            s: "hivi punde",
            ss: "sekunde %d",
            m: "dakika moja",
            mm: "dakika %d",
            h: "saa limoja",
            hh: "masaa %d",
            d: "siku moja",
            dd: "masiku %d",
            M: "mwezi mmoja",
            MM: "miezi %d",
            y: "mwaka mmoja",
            yy: "miaka %d"
        },
        week: {
            dow: 1,
            doy: 7
        }
    });
    var dd = {
        1: "\u0be7",
        2: "\u0be8",
        3: "\u0be9",
        4: "\u0bea",
        5: "\u0beb",
        6: "\u0bec",
        7: "\u0bed",
        8: "\u0bee",
        9: "\u0bef",
        0: "\u0be6"
    }
      , rd = {
        "\u0be7": "1",
        "\u0be8": "2",
        "\u0be9": "3",
        "\u0bea": "4",
        "\u0beb": "5",
        "\u0bec": "6",
        "\u0bed": "7",
        "\u0bee": "8",
        "\u0bef": "9",
        "\u0be6": "0"
    };
    l.defineLocale("ta", {
        months: "\u0b9c\u0ba9\u0bb5\u0bb0\u0bbf_\u0baa\u0bbf\u0baa\u0bcd\u0bb0\u0bb5\u0bb0\u0bbf_\u0bae\u0bbe\u0bb0\u0bcd\u0b9a\u0bcd_\u0b8f\u0baa\u0bcd\u0bb0\u0bb2\u0bcd_\u0bae\u0bc7_\u0b9c\u0bc2\u0ba9\u0bcd_\u0b9c\u0bc2\u0bb2\u0bc8_\u0b86\u0b95\u0bb8\u0bcd\u0b9f\u0bcd_\u0b9a\u0bc6\u0baa\u0bcd\u0b9f\u0bc6\u0bae\u0bcd\u0baa\u0bb0\u0bcd_\u0b85\u0b95\u0bcd\u0b9f\u0bc7\u0bbe\u0baa\u0bb0\u0bcd_\u0ba8\u0bb5\u0bae\u0bcd\u0baa\u0bb0\u0bcd_\u0b9f\u0bbf\u0b9a\u0bae\u0bcd\u0baa\u0bb0\u0bcd".split("_"),
        monthsShort: "\u0b9c\u0ba9\u0bb5\u0bb0\u0bbf_\u0baa\u0bbf\u0baa\u0bcd\u0bb0\u0bb5\u0bb0\u0bbf_\u0bae\u0bbe\u0bb0\u0bcd\u0b9a\u0bcd_\u0b8f\u0baa\u0bcd\u0bb0\u0bb2\u0bcd_\u0bae\u0bc7_\u0b9c\u0bc2\u0ba9\u0bcd_\u0b9c\u0bc2\u0bb2\u0bc8_\u0b86\u0b95\u0bb8\u0bcd\u0b9f\u0bcd_\u0b9a\u0bc6\u0baa\u0bcd\u0b9f\u0bc6\u0bae\u0bcd\u0baa\u0bb0\u0bcd_\u0b85\u0b95\u0bcd\u0b9f\u0bc7\u0bbe\u0baa\u0bb0\u0bcd_\u0ba8\u0bb5\u0bae\u0bcd\u0baa\u0bb0\u0bcd_\u0b9f\u0bbf\u0b9a\u0bae\u0bcd\u0baa\u0bb0\u0bcd".split("_"),
        weekdays: "\u0b9e\u0bbe\u0baf\u0bbf\u0bb1\u0bcd\u0bb1\u0bc1\u0b95\u0bcd\u0b95\u0bbf\u0bb4\u0bae\u0bc8_\u0ba4\u0bbf\u0b99\u0bcd\u0b95\u0b9f\u0bcd\u0b95\u0bbf\u0bb4\u0bae\u0bc8_\u0b9a\u0bc6\u0bb5\u0bcd\u0bb5\u0bbe\u0baf\u0bcd\u0b95\u0bbf\u0bb4\u0bae\u0bc8_\u0baa\u0bc1\u0ba4\u0ba9\u0bcd\u0b95\u0bbf\u0bb4\u0bae\u0bc8_\u0bb5\u0bbf\u0baf\u0bbe\u0bb4\u0b95\u0bcd\u0b95\u0bbf\u0bb4\u0bae\u0bc8_\u0bb5\u0bc6\u0bb3\u0bcd\u0bb3\u0bbf\u0b95\u0bcd\u0b95\u0bbf\u0bb4\u0bae\u0bc8_\u0b9a\u0ba9\u0bbf\u0b95\u0bcd\u0b95\u0bbf\u0bb4\u0bae\u0bc8".split("_"),
        weekdaysShort: "\u0b9e\u0bbe\u0baf\u0bbf\u0bb1\u0bc1_\u0ba4\u0bbf\u0b99\u0bcd\u0b95\u0bb3\u0bcd_\u0b9a\u0bc6\u0bb5\u0bcd\u0bb5\u0bbe\u0baf\u0bcd_\u0baa\u0bc1\u0ba4\u0ba9\u0bcd_\u0bb5\u0bbf\u0baf\u0bbe\u0bb4\u0ba9\u0bcd_\u0bb5\u0bc6\u0bb3\u0bcd\u0bb3\u0bbf_\u0b9a\u0ba9\u0bbf".split("_"),
        weekdaysMin: "\u0b9e\u0bbe_\u0ba4\u0bbf_\u0b9a\u0bc6_\u0baa\u0bc1_\u0bb5\u0bbf_\u0bb5\u0bc6_\u0b9a".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, HH:mm",
            LLLL: "dddd, D MMMM YYYY, HH:mm"
        },
        calendar: {
            sameDay: "[\u0b87\u0ba9\u0bcd\u0bb1\u0bc1] LT",
            nextDay: "[\u0ba8\u0bbe\u0bb3\u0bc8] LT",
            nextWeek: "dddd, LT",
            lastDay: "[\u0ba8\u0bc7\u0bb1\u0bcd\u0bb1\u0bc1] LT",
            lastWeek: "[\u0b95\u0b9f\u0ba8\u0bcd\u0ba4 \u0bb5\u0bbe\u0bb0\u0bae\u0bcd] dddd, LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s \u0b87\u0bb2\u0bcd",
            past: "%s \u0bae\u0bc1\u0ba9\u0bcd",
            s: "\u0b92\u0bb0\u0bc1 \u0b9a\u0bbf\u0bb2 \u0bb5\u0bbf\u0ba8\u0bbe\u0b9f\u0bbf\u0b95\u0bb3\u0bcd",
            ss: "%d \u0bb5\u0bbf\u0ba8\u0bbe\u0b9f\u0bbf\u0b95\u0bb3\u0bcd",
            m: "\u0b92\u0bb0\u0bc1 \u0ba8\u0bbf\u0bae\u0bbf\u0b9f\u0bae\u0bcd",
            mm: "%d \u0ba8\u0bbf\u0bae\u0bbf\u0b9f\u0b99\u0bcd\u0b95\u0bb3\u0bcd",
            h: "\u0b92\u0bb0\u0bc1 \u0bae\u0ba3\u0bbf \u0ba8\u0bc7\u0bb0\u0bae\u0bcd",
            hh: "%d \u0bae\u0ba3\u0bbf \u0ba8\u0bc7\u0bb0\u0bae\u0bcd",
            d: "\u0b92\u0bb0\u0bc1 \u0ba8\u0bbe\u0bb3\u0bcd",
            dd: "%d \u0ba8\u0bbe\u0b9f\u0bcd\u0b95\u0bb3\u0bcd",
            M: "\u0b92\u0bb0\u0bc1 \u0bae\u0bbe\u0ba4\u0bae\u0bcd",
            MM: "%d \u0bae\u0bbe\u0ba4\u0b99\u0bcd\u0b95\u0bb3\u0bcd",
            y: "\u0b92\u0bb0\u0bc1 \u0bb5\u0bb0\u0bc1\u0b9f\u0bae\u0bcd",
            yy: "%d \u0b86\u0ba3\u0bcd\u0b9f\u0bc1\u0b95\u0bb3\u0bcd"
        },
        dayOfMonthOrdinalParse: /\d{1,2}\u0bb5\u0ba4\u0bc1/,
        ordinal: function(e) {
            return e + "\u0bb5\u0ba4\u0bc1"
        },
        preparse: function(e) {
            return e.replace(/[\u0be7\u0be8\u0be9\u0bea\u0beb\u0bec\u0bed\u0bee\u0bef\u0be6]/g, function(e) {
                return rd[e]
            })
        },
        postformat: function(e) {
            return e.replace(/\d/g, function(e) {
                return dd[e]
            })
        },
        meridiemParse: /\u0baf\u0bbe\u0bae\u0bae\u0bcd|\u0bb5\u0bc8\u0b95\u0bb1\u0bc8|\u0b95\u0bbe\u0bb2\u0bc8|\u0ba8\u0ba3\u0bcd\u0baa\u0b95\u0bb2\u0bcd|\u0b8e\u0bb1\u0bcd\u0baa\u0bbe\u0b9f\u0bc1|\u0bae\u0bbe\u0bb2\u0bc8/,
        meridiem: function(e, a, t) {
            return e < 2 ? " \u0baf\u0bbe\u0bae\u0bae\u0bcd" : e < 6 ? " \u0bb5\u0bc8\u0b95\u0bb1\u0bc8" : e < 10 ? " \u0b95\u0bbe\u0bb2\u0bc8" : e < 14 ? " \u0ba8\u0ba3\u0bcd\u0baa\u0b95\u0bb2\u0bcd" : e < 18 ? " \u0b8e\u0bb1\u0bcd\u0baa\u0bbe\u0b9f\u0bc1" : e < 22 ? " \u0bae\u0bbe\u0bb2\u0bc8" : " \u0baf\u0bbe\u0bae\u0bae\u0bcd"
        },
        meridiemHour: function(e, a) {
            return 12 === e && (e = 0),
            "\u0baf\u0bbe\u0bae\u0bae\u0bcd" === a ? e < 2 ? e : e + 12 : "\u0bb5\u0bc8\u0b95\u0bb1\u0bc8" === a || "\u0b95\u0bbe\u0bb2\u0bc8" === a ? e : "\u0ba8\u0ba3\u0bcd\u0baa\u0b95\u0bb2\u0bcd" === a && 10 <= e ? e : e + 12
        },
        week: {
            dow: 0,
            doy: 6
        }
    }),
    l.defineLocale("te", {
        months: "\u0c1c\u0c28\u0c35\u0c30\u0c3f_\u0c2b\u0c3f\u0c2c\u0c4d\u0c30\u0c35\u0c30\u0c3f_\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f_\u0c0f\u0c2a\u0c4d\u0c30\u0c3f\u0c32\u0c4d_\u0c2e\u0c47_\u0c1c\u0c42\u0c28\u0c4d_\u0c1c\u0c41\u0c32\u0c48_\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41_\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02\u0c2c\u0c30\u0c4d_\u0c05\u0c15\u0c4d\u0c1f\u0c4b\u0c2c\u0c30\u0c4d_\u0c28\u0c35\u0c02\u0c2c\u0c30\u0c4d_\u0c21\u0c3f\u0c38\u0c46\u0c02\u0c2c\u0c30\u0c4d".split("_"),
        monthsShort: "\u0c1c\u0c28._\u0c2b\u0c3f\u0c2c\u0c4d\u0c30._\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f_\u0c0f\u0c2a\u0c4d\u0c30\u0c3f._\u0c2e\u0c47_\u0c1c\u0c42\u0c28\u0c4d_\u0c1c\u0c41\u0c32\u0c48_\u0c06\u0c17._\u0c38\u0c46\u0c2a\u0c4d._\u0c05\u0c15\u0c4d\u0c1f\u0c4b._\u0c28\u0c35._\u0c21\u0c3f\u0c38\u0c46.".split("_"),
        monthsParseExact: !0,
        weekdays: "\u0c06\u0c26\u0c3f\u0c35\u0c3e\u0c30\u0c02_\u0c38\u0c4b\u0c2e\u0c35\u0c3e\u0c30\u0c02_\u0c2e\u0c02\u0c17\u0c33\u0c35\u0c3e\u0c30\u0c02_\u0c2c\u0c41\u0c27\u0c35\u0c3e\u0c30\u0c02_\u0c17\u0c41\u0c30\u0c41\u0c35\u0c3e\u0c30\u0c02_\u0c36\u0c41\u0c15\u0c4d\u0c30\u0c35\u0c3e\u0c30\u0c02_\u0c36\u0c28\u0c3f\u0c35\u0c3e\u0c30\u0c02".split("_"),
        weekdaysShort: "\u0c06\u0c26\u0c3f_\u0c38\u0c4b\u0c2e_\u0c2e\u0c02\u0c17\u0c33_\u0c2c\u0c41\u0c27_\u0c17\u0c41\u0c30\u0c41_\u0c36\u0c41\u0c15\u0c4d\u0c30_\u0c36\u0c28\u0c3f".split("_"),
        weekdaysMin: "\u0c06_\u0c38\u0c4b_\u0c2e\u0c02_\u0c2c\u0c41_\u0c17\u0c41_\u0c36\u0c41_\u0c36".split("_"),
        longDateFormat: {
            LT: "A h:mm",
            LTS: "A h:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY, A h:mm",
            LLLL: "dddd, D MMMM YYYY, A h:mm"
        },
        calendar: {
            sameDay: "[\u0c28\u0c47\u0c21\u0c41] LT",
            nextDay: "[\u0c30\u0c47\u0c2a\u0c41] LT",
            nextWeek: "dddd, LT",
            lastDay: "[\u0c28\u0c3f\u0c28\u0c4d\u0c28] LT",
            lastWeek: "[\u0c17\u0c24] dddd, LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s \u0c32\u0c4b",
            past: "%s \u0c15\u0c4d\u0c30\u0c3f\u0c24\u0c02",
            s: "\u0c15\u0c4a\u0c28\u0c4d\u0c28\u0c3f \u0c15\u0c4d\u0c37\u0c23\u0c3e\u0c32\u0c41",
            ss: "%d \u0c38\u0c46\u0c15\u0c28\u0c4d\u0c32\u0c41",
            m: "\u0c12\u0c15 \u0c28\u0c3f\u0c2e\u0c3f\u0c37\u0c02",
            mm: "%d \u0c28\u0c3f\u0c2e\u0c3f\u0c37\u0c3e\u0c32\u0c41",
            h: "\u0c12\u0c15 \u0c17\u0c02\u0c1f",
            hh: "%d \u0c17\u0c02\u0c1f\u0c32\u0c41",
            d: "\u0c12\u0c15 \u0c30\u0c4b\u0c1c\u0c41",
            dd: "%d \u0c30\u0c4b\u0c1c\u0c41\u0c32\u0c41",
            M: "\u0c12\u0c15 \u0c28\u0c46\u0c32",
            MM: "%d \u0c28\u0c46\u0c32\u0c32\u0c41",
            y: "\u0c12\u0c15 \u0c38\u0c02\u0c35\u0c24\u0c4d\u0c38\u0c30\u0c02",
            yy: "%d \u0c38\u0c02\u0c35\u0c24\u0c4d\u0c38\u0c30\u0c3e\u0c32\u0c41"
        },
        dayOfMonthOrdinalParse: /\d{1,2}\u0c35/,
        ordinal: "%d\u0c35",
        meridiemParse: /\u0c30\u0c3e\u0c24\u0c4d\u0c30\u0c3f|\u0c09\u0c26\u0c2f\u0c02|\u0c2e\u0c27\u0c4d\u0c2f\u0c3e\u0c39\u0c4d\u0c28\u0c02|\u0c38\u0c3e\u0c2f\u0c02\u0c24\u0c4d\u0c30\u0c02/,
        meridiemHour: function(e, a) {
            return 12 === e && (e = 0),
            "\u0c30\u0c3e\u0c24\u0c4d\u0c30\u0c3f" === a ? e < 4 ? e : e + 12 : "\u0c09\u0c26\u0c2f\u0c02" === a ? e : "\u0c2e\u0c27\u0c4d\u0c2f\u0c3e\u0c39\u0c4d\u0c28\u0c02" === a ? 10 <= e ? e : e + 12 : "\u0c38\u0c3e\u0c2f\u0c02\u0c24\u0c4d\u0c30\u0c02" === a ? e + 12 : void 0
        },
        meridiem: function(e, a, t) {
            return e < 4 ? "\u0c30\u0c3e\u0c24\u0c4d\u0c30\u0c3f" : e < 10 ? "\u0c09\u0c26\u0c2f\u0c02" : e < 17 ? "\u0c2e\u0c27\u0c4d\u0c2f\u0c3e\u0c39\u0c4d\u0c28\u0c02" : e < 20 ? "\u0c38\u0c3e\u0c2f\u0c02\u0c24\u0c4d\u0c30\u0c02" : "\u0c30\u0c3e\u0c24\u0c4d\u0c30\u0c3f"
        },
        week: {
            dow: 0,
            doy: 6
        }
    }),
    l.defineLocale("tet", {
        months: "Janeiru_Fevereiru_Marsu_Abril_Maiu_Ju\xf1u_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru".split("_"),
        monthsShort: "Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez".split("_"),
        weekdays: "Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu".split("_"),
        weekdaysShort: "Dom_Seg_Ters_Kua_Kint_Sest_Sab".split("_"),
        weekdaysMin: "Do_Seg_Te_Ku_Ki_Ses_Sa".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[Ohin iha] LT",
            nextDay: "[Aban iha] LT",
            nextWeek: "dddd [iha] LT",
            lastDay: "[Horiseik iha] LT",
            lastWeek: "dddd [semana kotuk] [iha] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "iha %s",
            past: "%s liuba",
            s: "minutu balun",
            ss: "minutu %d",
            m: "minutu ida",
            mm: "minutu %d",
            h: "oras ida",
            hh: "oras %d",
            d: "loron ida",
            dd: "loron %d",
            M: "fulan ida",
            MM: "fulan %d",
            y: "tinan ida",
            yy: "tinan %d"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function(e) {
            var a = e % 10;
            return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === a ? "st" : 2 === a ? "nd" : 3 === a ? "rd" : "th")
        },
        week: {
            dow: 1,
            doy: 4
        }
    });
    var _d = {
        0: "-\u0443\u043c",
        1: "-\u0443\u043c",
        2: "-\u044e\u043c",
        3: "-\u044e\u043c",
        4: "-\u0443\u043c",
        5: "-\u0443\u043c",
        6: "-\u0443\u043c",
        7: "-\u0443\u043c",
        8: "-\u0443\u043c",
        9: "-\u0443\u043c",
        10: "-\u0443\u043c",
        12: "-\u0443\u043c",
        13: "-\u0443\u043c",
        20: "-\u0443\u043c",
        30: "-\u044e\u043c",
        40: "-\u0443\u043c",
        50: "-\u0443\u043c",
        60: "-\u0443\u043c",
        70: "-\u0443\u043c",
        80: "-\u0443\u043c",
        90: "-\u0443\u043c",
        100: "-\u0443\u043c"
    };
    l.defineLocale("tg", {
        months: "\u044f\u043d\u0432\u0430\u0440_\u0444\u0435\u0432\u0440\u0430\u043b_\u043c\u0430\u0440\u0442_\u0430\u043f\u0440\u0435\u043b_\u043c\u0430\u0439_\u0438\u044e\u043d_\u0438\u044e\u043b_\u0430\u0432\u0433\u0443\u0441\u0442_\u0441\u0435\u043d\u0442\u044f\u0431\u0440_\u043e\u043a\u0442\u044f\u0431\u0440_\u043d\u043e\u044f\u0431\u0440_\u0434\u0435\u043a\u0430\u0431\u0440".split("_"),
        monthsShort: "\u044f\u043d\u0432_\u0444\u0435\u0432_\u043c\u0430\u0440_\u0430\u043f\u0440_\u043c\u0430\u0439_\u0438\u044e\u043d_\u0438\u044e\u043b_\u0430\u0432\u0433_\u0441\u0435\u043d_\u043e\u043a\u0442_\u043d\u043e\u044f_\u0434\u0435\u043a".split("_"),
        weekdays: "\u044f\u043a\u0448\u0430\u043d\u0431\u0435_\u0434\u0443\u0448\u0430\u043d\u0431\u0435_\u0441\u0435\u0448\u0430\u043d\u0431\u0435_\u0447\u043e\u0440\u0448\u0430\u043d\u0431\u0435_\u043f\u0430\u043d\u04b7\u0448\u0430\u043d\u0431\u0435_\u04b7\u0443\u043c\u044a\u0430_\u0448\u0430\u043d\u0431\u0435".split("_"),
        weekdaysShort: "\u044f\u0448\u0431_\u0434\u0448\u0431_\u0441\u0448\u0431_\u0447\u0448\u0431_\u043f\u0448\u0431_\u04b7\u0443\u043c_\u0448\u043d\u0431".split("_"),
        weekdaysMin: "\u044f\u0448_\u0434\u0448_\u0441\u0448_\u0447\u0448_\u043f\u0448_\u04b7\u043c_\u0448\u0431".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[\u0418\u043c\u0440\u04ef\u0437 \u0441\u043e\u0430\u0442\u0438] LT",
            nextDay: "[\u041f\u0430\u0433\u043e\u04b3 \u0441\u043e\u0430\u0442\u0438] LT",
            lastDay: "[\u0414\u0438\u0440\u04ef\u0437 \u0441\u043e\u0430\u0442\u0438] LT",
            nextWeek: "dddd[\u0438] [\u04b3\u0430\u0444\u0442\u0430\u0438 \u043e\u044f\u043d\u0434\u0430 \u0441\u043e\u0430\u0442\u0438] LT",
            lastWeek: "dddd[\u0438] [\u04b3\u0430\u0444\u0442\u0430\u0438 \u0433\u0443\u0437\u0430\u0448\u0442\u0430 \u0441\u043e\u0430\u0442\u0438] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "\u0431\u0430\u044a\u0434\u0438 %s",
            past: "%s \u043f\u0435\u0448",
            s: "\u044f\u043a\u0447\u0430\u043d\u0434 \u0441\u043e\u043d\u0438\u044f",
            m: "\u044f\u043a \u0434\u0430\u049b\u0438\u049b\u0430",
            mm: "%d \u0434\u0430\u049b\u0438\u049b\u0430",
            h: "\u044f\u043a \u0441\u043e\u0430\u0442",
            hh: "%d \u0441\u043e\u0430\u0442",
            d: "\u044f\u043a \u0440\u04ef\u0437",
            dd: "%d \u0440\u04ef\u0437",
            M: "\u044f\u043a \u043c\u043e\u04b3",
            MM: "%d \u043c\u043e\u04b3",
            y: "\u044f\u043a \u0441\u043e\u043b",
            yy: "%d \u0441\u043e\u043b"
        },
        meridiemParse: /\u0448\u0430\u0431|\u0441\u0443\u0431\u04b3|\u0440\u04ef\u0437|\u0431\u0435\u0433\u043e\u04b3/,
        meridiemHour: function(e, a) {
            return 12 === e && (e = 0),
            "\u0448\u0430\u0431" === a ? e < 4 ? e : e + 12 : "\u0441\u0443\u0431\u04b3" === a ? e : "\u0440\u04ef\u0437" === a ? 11 <= e ? e : e + 12 : "\u0431\u0435\u0433\u043e\u04b3" === a ? e + 12 : void 0
        },
        meridiem: function(e, a, t) {
            return e < 4 ? "\u0448\u0430\u0431" : e < 11 ? "\u0441\u0443\u0431\u04b3" : e < 16 ? "\u0440\u04ef\u0437" : e < 19 ? "\u0431\u0435\u0433\u043e\u04b3" : "\u0448\u0430\u0431"
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(\u0443\u043c|\u044e\u043c)/,
        ordinal: function(e) {
            return e + (_d[e] || _d[e % 10] || _d[100 <= e ? 100 : null])
        },
        week: {
            dow: 1,
            doy: 7
        }
    }),
    l.defineLocale("th", {
        months: "\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21_\u0e01\u0e38\u0e21\u0e20\u0e32\u0e1e\u0e31\u0e19\u0e18\u0e4c_\u0e21\u0e35\u0e19\u0e32\u0e04\u0e21_\u0e40\u0e21\u0e29\u0e32\u0e22\u0e19_\u0e1e\u0e24\u0e29\u0e20\u0e32\u0e04\u0e21_\u0e21\u0e34\u0e16\u0e38\u0e19\u0e32\u0e22\u0e19_\u0e01\u0e23\u0e01\u0e0e\u0e32\u0e04\u0e21_\u0e2a\u0e34\u0e07\u0e2b\u0e32\u0e04\u0e21_\u0e01\u0e31\u0e19\u0e22\u0e32\u0e22\u0e19_\u0e15\u0e38\u0e25\u0e32\u0e04\u0e21_\u0e1e\u0e24\u0e28\u0e08\u0e34\u0e01\u0e32\u0e22\u0e19_\u0e18\u0e31\u0e19\u0e27\u0e32\u0e04\u0e21".split("_"),
        monthsShort: "\u0e21.\u0e04._\u0e01.\u0e1e._\u0e21\u0e35.\u0e04._\u0e40\u0e21.\u0e22._\u0e1e.\u0e04._\u0e21\u0e34.\u0e22._\u0e01.\u0e04._\u0e2a.\u0e04._\u0e01.\u0e22._\u0e15.\u0e04._\u0e1e.\u0e22._\u0e18.\u0e04.".split("_"),
        monthsParseExact: !0,
        weekdays: "\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c_\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c_\u0e2d\u0e31\u0e07\u0e04\u0e32\u0e23_\u0e1e\u0e38\u0e18_\u0e1e\u0e24\u0e2b\u0e31\u0e2a\u0e1a\u0e14\u0e35_\u0e28\u0e38\u0e01\u0e23\u0e4c_\u0e40\u0e2a\u0e32\u0e23\u0e4c".split("_"),
        weekdaysShort: "\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c_\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c_\u0e2d\u0e31\u0e07\u0e04\u0e32\u0e23_\u0e1e\u0e38\u0e18_\u0e1e\u0e24\u0e2b\u0e31\u0e2a_\u0e28\u0e38\u0e01\u0e23\u0e4c_\u0e40\u0e2a\u0e32\u0e23\u0e4c".split("_"),
        weekdaysMin: "\u0e2d\u0e32._\u0e08._\u0e2d._\u0e1e._\u0e1e\u0e24._\u0e28._\u0e2a.".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "H:mm",
            LTS: "H:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY \u0e40\u0e27\u0e25\u0e32 H:mm",
            LLLL: "\u0e27\u0e31\u0e19dddd\u0e17\u0e35\u0e48 D MMMM YYYY \u0e40\u0e27\u0e25\u0e32 H:mm"
        },
        meridiemParse: /\u0e01\u0e48\u0e2d\u0e19\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07|\u0e2b\u0e25\u0e31\u0e07\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07/,
        isPM: function(e) {
            return "\u0e2b\u0e25\u0e31\u0e07\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07" === e
        },
        meridiem: function(e, a, t) {
            return e < 12 ? "\u0e01\u0e48\u0e2d\u0e19\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07" : "\u0e2b\u0e25\u0e31\u0e07\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07"
        },
        calendar: {
            sameDay: "[\u0e27\u0e31\u0e19\u0e19\u0e35\u0e49 \u0e40\u0e27\u0e25\u0e32] LT",
            nextDay: "[\u0e1e\u0e23\u0e38\u0e48\u0e07\u0e19\u0e35\u0e49 \u0e40\u0e27\u0e25\u0e32] LT",
            nextWeek: "dddd[\u0e2b\u0e19\u0e49\u0e32 \u0e40\u0e27\u0e25\u0e32] LT",
            lastDay: "[\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e27\u0e32\u0e19\u0e19\u0e35\u0e49 \u0e40\u0e27\u0e25\u0e32] LT",
            lastWeek: "[\u0e27\u0e31\u0e19]dddd[\u0e17\u0e35\u0e48\u0e41\u0e25\u0e49\u0e27 \u0e40\u0e27\u0e25\u0e32] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "\u0e2d\u0e35\u0e01 %s",
            past: "%s\u0e17\u0e35\u0e48\u0e41\u0e25\u0e49\u0e27",
            s: "\u0e44\u0e21\u0e48\u0e01\u0e35\u0e48\u0e27\u0e34\u0e19\u0e32\u0e17\u0e35",
            ss: "%d \u0e27\u0e34\u0e19\u0e32\u0e17\u0e35",
            m: "1 \u0e19\u0e32\u0e17\u0e35",
            mm: "%d \u0e19\u0e32\u0e17\u0e35",
            h: "1 \u0e0a\u0e31\u0e48\u0e27\u0e42\u0e21\u0e07",
            hh: "%d \u0e0a\u0e31\u0e48\u0e27\u0e42\u0e21\u0e07",
            d: "1 \u0e27\u0e31\u0e19",
            dd: "%d \u0e27\u0e31\u0e19",
            M: "1 \u0e40\u0e14\u0e37\u0e2d\u0e19",
            MM: "%d \u0e40\u0e14\u0e37\u0e2d\u0e19",
            y: "1 \u0e1b\u0e35",
            yy: "%d \u0e1b\u0e35"
        }
    }),
    l.defineLocale("tl-ph", {
        months: "Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre".split("_"),
        monthsShort: "Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis".split("_"),
        weekdays: "Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado".split("_"),
        weekdaysShort: "Lin_Lun_Mar_Miy_Huw_Biy_Sab".split("_"),
        weekdaysMin: "Li_Lu_Ma_Mi_Hu_Bi_Sab".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "MM/D/YYYY",
            LL: "MMMM D, YYYY",
            LLL: "MMMM D, YYYY HH:mm",
            LLLL: "dddd, MMMM DD, YYYY HH:mm"
        },
        calendar: {
            sameDay: "LT [ngayong araw]",
            nextDay: "[Bukas ng] LT",
            nextWeek: "LT [sa susunod na] dddd",
            lastDay: "LT [kahapon]",
            lastWeek: "LT [noong nakaraang] dddd",
            sameElse: "L"
        },
        relativeTime: {
            future: "sa loob ng %s",
            past: "%s ang nakalipas",
            s: "ilang segundo",
            ss: "%d segundo",
            m: "isang minuto",
            mm: "%d minuto",
            h: "isang oras",
            hh: "%d oras",
            d: "isang araw",
            dd: "%d araw",
            M: "isang buwan",
            MM: "%d buwan",
            y: "isang taon",
            yy: "%d taon"
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal: function(e) {
            return e
        },
        week: {
            dow: 1,
            doy: 4
        }
    });
    var id = "pagh_wa\u2019_cha\u2019_wej_loS_vagh_jav_Soch_chorgh_Hut".split("_");
    function od(e, a, t, s) {
        var n = function(e) {
            var a = Math.floor(e % 1e3 / 100)
              , t = Math.floor(e % 100 / 10)
              , s = e % 10
              , n = "";
            0 < a && (n += id[a] + "vatlh");
            0 < t && (n += ("" !== n ? " " : "") + id[t] + "maH");
            0 < s && (n += ("" !== n ? " " : "") + id[s]);
            return "" === n ? "pagh" : n
        }(e);
        switch (t) {
        case "ss":
            return n + " lup";
        case "mm":
            return n + " tup";
        case "hh":
            return n + " rep";
        case "dd":
            return n + " jaj";
        case "MM":
            return n + " jar";
        case "yy":
            return n + " DIS"
        }
    }
    l.defineLocale("tlh", {
        months: "tera\u2019 jar wa\u2019_tera\u2019 jar cha\u2019_tera\u2019 jar wej_tera\u2019 jar loS_tera\u2019 jar vagh_tera\u2019 jar jav_tera\u2019 jar Soch_tera\u2019 jar chorgh_tera\u2019 jar Hut_tera\u2019 jar wa\u2019maH_tera\u2019 jar wa\u2019maH wa\u2019_tera\u2019 jar wa\u2019maH cha\u2019".split("_"),
        monthsShort: "jar wa\u2019_jar cha\u2019_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa\u2019maH_jar wa\u2019maH wa\u2019_jar wa\u2019maH cha\u2019".split("_"),
        monthsParseExact: !0,
        weekdays: "lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split("_"),
        weekdaysShort: "lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split("_"),
        weekdaysMin: "lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[DaHjaj] LT",
            nextDay: "[wa\u2019leS] LT",
            nextWeek: "LLL",
            lastDay: "[wa\u2019Hu\u2019] LT",
            lastWeek: "LLL",
            sameElse: "L"
        },
        relativeTime: {
            future: function(e) {
                var a = e;
                return a = -1 !== e.indexOf("jaj") ? a.slice(0, -3) + "leS" : -1 !== e.indexOf("jar") ? a.slice(0, -3) + "waQ" : -1 !== e.indexOf("DIS") ? a.slice(0, -3) + "nem" : a + " pIq"
            },
            past: function(e) {
                var a = e;
                return a = -1 !== e.indexOf("jaj") ? a.slice(0, -3) + "Hu\u2019" : -1 !== e.indexOf("jar") ? a.slice(0, -3) + "wen" : -1 !== e.indexOf("DIS") ? a.slice(0, -3) + "ben" : a + " ret"
            },
            s: "puS lup",
            ss: od,
            m: "wa\u2019 tup",
            mm: od,
            h: "wa\u2019 rep",
            hh: od,
            d: "wa\u2019 jaj",
            dd: od,
            M: "wa\u2019 jar",
            MM: od,
            y: "wa\u2019 DIS",
            yy: od
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 4
        }
    });
    var md = {
        1: "'inci",
        5: "'inci",
        8: "'inci",
        70: "'inci",
        80: "'inci",
        2: "'nci",
        7: "'nci",
        20: "'nci",
        50: "'nci",
        3: "'\xfcnc\xfc",
        4: "'\xfcnc\xfc",
        100: "'\xfcnc\xfc",
        6: "'nc\u0131",
        9: "'uncu",
        10: "'uncu",
        30: "'uncu",
        60: "'\u0131nc\u0131",
        90: "'\u0131nc\u0131"
    };
    function ud(e, a, t, s) {
        var n = {
            s: ["viensas secunds", "'iensas secunds"],
            ss: [e + " secunds", e + " secunds"],
            m: ["'n m\xedut", "'iens m\xedut"],
            mm: [e + " m\xeduts", e + " m\xeduts"],
            h: ["'n \xfeora", "'iensa \xfeora"],
            hh: [e + " \xfeoras", e + " \xfeoras"],
            d: ["'n ziua", "'iensa ziua"],
            dd: [e + " ziuas", e + " ziuas"],
            M: ["'n mes", "'iens mes"],
            MM: [e + " mesen", e + " mesen"],
            y: ["'n ar", "'iens ar"],
            yy: [e + " ars", e + " ars"]
        };
        return s ? n[t][0] : a ? n[t][0] : n[t][1]
    }
    function ld(e, a, t) {
        var s, n;
        return "m" === t ? a ? "\u0445\u0432\u0438\u043b\u0438\u043d\u0430" : "\u0445\u0432\u0438\u043b\u0438\u043d\u0443" : "h" === t ? a ? "\u0433\u043e\u0434\u0438\u043d\u0430" : "\u0433\u043e\u0434\u0438\u043d\u0443" : e + " " + (s = +e,
        n = {
            ss: a ? "\u0441\u0435\u043a\u0443\u043d\u0434\u0430_\u0441\u0435\u043a\u0443\u043d\u0434\u0438_\u0441\u0435\u043a\u0443\u043d\u0434" : "\u0441\u0435\u043a\u0443\u043d\u0434\u0443_\u0441\u0435\u043a\u0443\u043d\u0434\u0438_\u0441\u0435\u043a\u0443\u043d\u0434",
            mm: a ? "\u0445\u0432\u0438\u043b\u0438\u043d\u0430_\u0445\u0432\u0438\u043b\u0438\u043d\u0438_\u0445\u0432\u0438\u043b\u0438\u043d" : "\u0445\u0432\u0438\u043b\u0438\u043d\u0443_\u0445\u0432\u0438\u043b\u0438\u043d\u0438_\u0445\u0432\u0438\u043b\u0438\u043d",
            hh: a ? "\u0433\u043e\u0434\u0438\u043d\u0430_\u0433\u043e\u0434\u0438\u043d\u0438_\u0433\u043e\u0434\u0438\u043d" : "\u0433\u043e\u0434\u0438\u043d\u0443_\u0433\u043e\u0434\u0438\u043d\u0438_\u0433\u043e\u0434\u0438\u043d",
            dd: "\u0434\u0435\u043d\u044c_\u0434\u043d\u0456_\u0434\u043d\u0456\u0432",
            MM: "\u043c\u0456\u0441\u044f\u0446\u044c_\u043c\u0456\u0441\u044f\u0446\u0456_\u043c\u0456\u0441\u044f\u0446\u0456\u0432",
            yy: "\u0440\u0456\u043a_\u0440\u043e\u043a\u0438_\u0440\u043e\u043a\u0456\u0432"
        }[t].split("_"),
        s % 10 == 1 && s % 100 != 11 ? n[0] : 2 <= s % 10 && s % 10 <= 4 && (s % 100 < 10 || 20 <= s % 100) ? n[1] : n[2])
    }
    function Md(e) {
        return function() {
            return e + "\u043e" + (11 === this.hours() ? "\u0431" : "") + "] LT"
        }
    }
    l.defineLocale("tr", {
        months: "Ocak_\u015eubat_Mart_Nisan_May\u0131s_Haziran_Temmuz_A\u011fustos_Eyl\xfcl_Ekim_Kas\u0131m_Aral\u0131k".split("_"),
        monthsShort: "Oca_\u015eub_Mar_Nis_May_Haz_Tem_A\u011fu_Eyl_Eki_Kas_Ara".split("_"),
        weekdays: "Pazar_Pazartesi_Sal\u0131_\xc7ar\u015famba_Per\u015fembe_Cuma_Cumartesi".split("_"),
        weekdaysShort: "Paz_Pts_Sal_\xc7ar_Per_Cum_Cts".split("_"),
        weekdaysMin: "Pz_Pt_Sa_\xc7a_Pe_Cu_Ct".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[bug\xfcn saat] LT",
            nextDay: "[yar\u0131n saat] LT",
            nextWeek: "[gelecek] dddd [saat] LT",
            lastDay: "[d\xfcn] LT",
            lastWeek: "[ge\xe7en] dddd [saat] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s sonra",
            past: "%s \xf6nce",
            s: "birka\xe7 saniye",
            ss: "%d saniye",
            m: "bir dakika",
            mm: "%d dakika",
            h: "bir saat",
            hh: "%d saat",
            d: "bir g\xfcn",
            dd: "%d g\xfcn",
            M: "bir ay",
            MM: "%d ay",
            y: "bir y\u0131l",
            yy: "%d y\u0131l"
        },
        ordinal: function(e, a) {
            switch (a) {
            case "d":
            case "D":
            case "Do":
            case "DD":
                return e;
            default:
                if (0 === e)
                    return e + "'\u0131nc\u0131";
                var t = e % 10;
                return e + (md[t] || md[e % 100 - t] || md[100 <= e ? 100 : null])
            }
        },
        week: {
            dow: 1,
            doy: 7
        }
    }),
    l.defineLocale("tzl", {
        months: "Januar_Fevraglh_Mar\xe7_Avr\xefu_Mai_G\xfcn_Julia_Guscht_Setemvar_Listop\xe4ts_Noemvar_Zecemvar".split("_"),
        monthsShort: "Jan_Fev_Mar_Avr_Mai_G\xfcn_Jul_Gus_Set_Lis_Noe_Zec".split("_"),
        weekdays: "S\xfaladi_L\xfane\xe7i_Maitzi_M\xe1rcuri_Xh\xfaadi_Vi\xe9ner\xe7i_S\xe1turi".split("_"),
        weekdaysShort: "S\xfal_L\xfan_Mai_M\xe1r_Xh\xfa_Vi\xe9_S\xe1t".split("_"),
        weekdaysMin: "S\xfa_L\xfa_Ma_M\xe1_Xh_Vi_S\xe1".split("_"),
        longDateFormat: {
            LT: "HH.mm",
            LTS: "HH.mm.ss",
            L: "DD.MM.YYYY",
            LL: "D. MMMM [dallas] YYYY",
            LLL: "D. MMMM [dallas] YYYY HH.mm",
            LLLL: "dddd, [li] D. MMMM [dallas] YYYY HH.mm"
        },
        meridiemParse: /d\'o|d\'a/i,
        isPM: function(e) {
            return "d'o" === e.toLowerCase()
        },
        meridiem: function(e, a, t) {
            return 11 < e ? t ? "d'o" : "D'O" : t ? "d'a" : "D'A"
        },
        calendar: {
            sameDay: "[oxhi \xe0] LT",
            nextDay: "[dem\xe0 \xe0] LT",
            nextWeek: "dddd [\xe0] LT",
            lastDay: "[ieiri \xe0] LT",
            lastWeek: "[s\xfcr el] dddd [lasteu \xe0] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "osprei %s",
            past: "ja%s",
            s: ud,
            ss: ud,
            m: ud,
            mm: ud,
            h: ud,
            hh: ud,
            d: ud,
            dd: ud,
            M: ud,
            MM: ud,
            y: ud,
            yy: ud
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: "%d.",
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("tzm-latn", {
        months: "innayr_br\u02e4ayr\u02e4_mar\u02e4s\u02e4_ibrir_mayyw_ywnyw_ywlywz_\u0263w\u0161t_\u0161wtanbir_kt\u02e4wbr\u02e4_nwwanbir_dwjnbir".split("_"),
        monthsShort: "innayr_br\u02e4ayr\u02e4_mar\u02e4s\u02e4_ibrir_mayyw_ywnyw_ywlywz_\u0263w\u0161t_\u0161wtanbir_kt\u02e4wbr\u02e4_nwwanbir_dwjnbir".split("_"),
        weekdays: "asamas_aynas_asinas_akras_akwas_asimwas_asi\u1e0dyas".split("_"),
        weekdaysShort: "asamas_aynas_asinas_akras_akwas_asimwas_asi\u1e0dyas".split("_"),
        weekdaysMin: "asamas_aynas_asinas_akras_akwas_asimwas_asi\u1e0dyas".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[asdkh g] LT",
            nextDay: "[aska g] LT",
            nextWeek: "dddd [g] LT",
            lastDay: "[assant g] LT",
            lastWeek: "dddd [g] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "dadkh s yan %s",
            past: "yan %s",
            s: "imik",
            ss: "%d imik",
            m: "minu\u1e0d",
            mm: "%d minu\u1e0d",
            h: "sa\u025ba",
            hh: "%d tassa\u025bin",
            d: "ass",
            dd: "%d ossan",
            M: "ayowr",
            MM: "%d iyyirn",
            y: "asgas",
            yy: "%d isgasn"
        },
        week: {
            dow: 6,
            doy: 12
        }
    }),
    l.defineLocale("tzm", {
        months: "\u2d49\u2d4f\u2d4f\u2d30\u2d62\u2d54_\u2d31\u2d55\u2d30\u2d62\u2d55_\u2d4e\u2d30\u2d55\u2d5a_\u2d49\u2d31\u2d54\u2d49\u2d54_\u2d4e\u2d30\u2d62\u2d62\u2d53_\u2d62\u2d53\u2d4f\u2d62\u2d53_\u2d62\u2d53\u2d4d\u2d62\u2d53\u2d63_\u2d56\u2d53\u2d5b\u2d5c_\u2d5b\u2d53\u2d5c\u2d30\u2d4f\u2d31\u2d49\u2d54_\u2d3d\u2d5f\u2d53\u2d31\u2d55_\u2d4f\u2d53\u2d61\u2d30\u2d4f\u2d31\u2d49\u2d54_\u2d37\u2d53\u2d4a\u2d4f\u2d31\u2d49\u2d54".split("_"),
        monthsShort: "\u2d49\u2d4f\u2d4f\u2d30\u2d62\u2d54_\u2d31\u2d55\u2d30\u2d62\u2d55_\u2d4e\u2d30\u2d55\u2d5a_\u2d49\u2d31\u2d54\u2d49\u2d54_\u2d4e\u2d30\u2d62\u2d62\u2d53_\u2d62\u2d53\u2d4f\u2d62\u2d53_\u2d62\u2d53\u2d4d\u2d62\u2d53\u2d63_\u2d56\u2d53\u2d5b\u2d5c_\u2d5b\u2d53\u2d5c\u2d30\u2d4f\u2d31\u2d49\u2d54_\u2d3d\u2d5f\u2d53\u2d31\u2d55_\u2d4f\u2d53\u2d61\u2d30\u2d4f\u2d31\u2d49\u2d54_\u2d37\u2d53\u2d4a\u2d4f\u2d31\u2d49\u2d54".split("_"),
        weekdays: "\u2d30\u2d59\u2d30\u2d4e\u2d30\u2d59_\u2d30\u2d62\u2d4f\u2d30\u2d59_\u2d30\u2d59\u2d49\u2d4f\u2d30\u2d59_\u2d30\u2d3d\u2d54\u2d30\u2d59_\u2d30\u2d3d\u2d61\u2d30\u2d59_\u2d30\u2d59\u2d49\u2d4e\u2d61\u2d30\u2d59_\u2d30\u2d59\u2d49\u2d39\u2d62\u2d30\u2d59".split("_"),
        weekdaysShort: "\u2d30\u2d59\u2d30\u2d4e\u2d30\u2d59_\u2d30\u2d62\u2d4f\u2d30\u2d59_\u2d30\u2d59\u2d49\u2d4f\u2d30\u2d59_\u2d30\u2d3d\u2d54\u2d30\u2d59_\u2d30\u2d3d\u2d61\u2d30\u2d59_\u2d30\u2d59\u2d49\u2d4e\u2d61\u2d30\u2d59_\u2d30\u2d59\u2d49\u2d39\u2d62\u2d30\u2d59".split("_"),
        weekdaysMin: "\u2d30\u2d59\u2d30\u2d4e\u2d30\u2d59_\u2d30\u2d62\u2d4f\u2d30\u2d59_\u2d30\u2d59\u2d49\u2d4f\u2d30\u2d59_\u2d30\u2d3d\u2d54\u2d30\u2d59_\u2d30\u2d3d\u2d61\u2d30\u2d59_\u2d30\u2d59\u2d49\u2d4e\u2d61\u2d30\u2d59_\u2d30\u2d59\u2d49\u2d39\u2d62\u2d30\u2d59".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[\u2d30\u2d59\u2d37\u2d45 \u2d34] LT",
            nextDay: "[\u2d30\u2d59\u2d3d\u2d30 \u2d34] LT",
            nextWeek: "dddd [\u2d34] LT",
            lastDay: "[\u2d30\u2d5a\u2d30\u2d4f\u2d5c \u2d34] LT",
            lastWeek: "dddd [\u2d34] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "\u2d37\u2d30\u2d37\u2d45 \u2d59 \u2d62\u2d30\u2d4f %s",
            past: "\u2d62\u2d30\u2d4f %s",
            s: "\u2d49\u2d4e\u2d49\u2d3d",
            ss: "%d \u2d49\u2d4e\u2d49\u2d3d",
            m: "\u2d4e\u2d49\u2d4f\u2d53\u2d3a",
            mm: "%d \u2d4e\u2d49\u2d4f\u2d53\u2d3a",
            h: "\u2d59\u2d30\u2d44\u2d30",
            hh: "%d \u2d5c\u2d30\u2d59\u2d59\u2d30\u2d44\u2d49\u2d4f",
            d: "\u2d30\u2d59\u2d59",
            dd: "%d o\u2d59\u2d59\u2d30\u2d4f",
            M: "\u2d30\u2d62o\u2d53\u2d54",
            MM: "%d \u2d49\u2d62\u2d62\u2d49\u2d54\u2d4f",
            y: "\u2d30\u2d59\u2d33\u2d30\u2d59",
            yy: "%d \u2d49\u2d59\u2d33\u2d30\u2d59\u2d4f"
        },
        week: {
            dow: 6,
            doy: 12
        }
    }),
    l.defineLocale("ug-cn", {
        months: "\u064a\u0627\u0646\u06cb\u0627\u0631_\u0641\u06d0\u06cb\u0631\u0627\u0644_\u0645\u0627\u0631\u062a_\u0626\u0627\u067e\u0631\u06d0\u0644_\u0645\u0627\u064a_\u0626\u0649\u064a\u06c7\u0646_\u0626\u0649\u064a\u06c7\u0644_\u0626\u0627\u06cb\u063a\u06c7\u0633\u062a_\u0633\u06d0\u0646\u062a\u06d5\u0628\u0649\u0631_\u0626\u06c6\u0643\u062a\u06d5\u0628\u0649\u0631_\u0646\u0648\u064a\u0627\u0628\u0649\u0631_\u062f\u06d0\u0643\u0627\u0628\u0649\u0631".split("_"),
        monthsShort: "\u064a\u0627\u0646\u06cb\u0627\u0631_\u0641\u06d0\u06cb\u0631\u0627\u0644_\u0645\u0627\u0631\u062a_\u0626\u0627\u067e\u0631\u06d0\u0644_\u0645\u0627\u064a_\u0626\u0649\u064a\u06c7\u0646_\u0626\u0649\u064a\u06c7\u0644_\u0626\u0627\u06cb\u063a\u06c7\u0633\u062a_\u0633\u06d0\u0646\u062a\u06d5\u0628\u0649\u0631_\u0626\u06c6\u0643\u062a\u06d5\u0628\u0649\u0631_\u0646\u0648\u064a\u0627\u0628\u0649\u0631_\u062f\u06d0\u0643\u0627\u0628\u0649\u0631".split("_"),
        weekdays: "\u064a\u06d5\u0643\u0634\u06d5\u0646\u0628\u06d5_\u062f\u06c8\u0634\u06d5\u0646\u0628\u06d5_\u0633\u06d5\u064a\u0634\u06d5\u0646\u0628\u06d5_\u0686\u0627\u0631\u0634\u06d5\u0646\u0628\u06d5_\u067e\u06d5\u064a\u0634\u06d5\u0646\u0628\u06d5_\u062c\u06c8\u0645\u06d5_\u0634\u06d5\u0646\u0628\u06d5".split("_"),
        weekdaysShort: "\u064a\u06d5_\u062f\u06c8_\u0633\u06d5_\u0686\u0627_\u067e\u06d5_\u062c\u06c8_\u0634\u06d5".split("_"),
        weekdaysMin: "\u064a\u06d5_\u062f\u06c8_\u0633\u06d5_\u0686\u0627_\u067e\u06d5_\u062c\u06c8_\u0634\u06d5".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY-MM-DD",
            LL: "YYYY-\u064a\u0649\u0644\u0649M-\u0626\u0627\u064a\u0646\u0649\u06adD-\u0643\u06c8\u0646\u0649",
            LLL: "YYYY-\u064a\u0649\u0644\u0649M-\u0626\u0627\u064a\u0646\u0649\u06adD-\u0643\u06c8\u0646\u0649\u060c HH:mm",
            LLLL: "dddd\u060c YYYY-\u064a\u0649\u0644\u0649M-\u0626\u0627\u064a\u0646\u0649\u06adD-\u0643\u06c8\u0646\u0649\u060c HH:mm"
        },
        meridiemParse: /\u064a\u06d0\u0631\u0649\u0645 \u0643\u06d0\u0686\u06d5|\u0633\u06d5\u06be\u06d5\u0631|\u0686\u06c8\u0634\u062a\u0649\u0646 \u0628\u06c7\u0631\u06c7\u0646|\u0686\u06c8\u0634|\u0686\u06c8\u0634\u062a\u0649\u0646 \u0643\u06d0\u064a\u0649\u0646|\u0643\u06d5\u0686/,
        meridiemHour: function(e, a) {
            return 12 === e && (e = 0),
            "\u064a\u06d0\u0631\u0649\u0645 \u0643\u06d0\u0686\u06d5" === a || "\u0633\u06d5\u06be\u06d5\u0631" === a || "\u0686\u06c8\u0634\u062a\u0649\u0646 \u0628\u06c7\u0631\u06c7\u0646" === a ? e : "\u0686\u06c8\u0634\u062a\u0649\u0646 \u0643\u06d0\u064a\u0649\u0646" === a || "\u0643\u06d5\u0686" === a ? e + 12 : 11 <= e ? e : e + 12
        },
        meridiem: function(e, a, t) {
            var s = 100 * e + a;
            return s < 600 ? "\u064a\u06d0\u0631\u0649\u0645 \u0643\u06d0\u0686\u06d5" : s < 900 ? "\u0633\u06d5\u06be\u06d5\u0631" : s < 1130 ? "\u0686\u06c8\u0634\u062a\u0649\u0646 \u0628\u06c7\u0631\u06c7\u0646" : s < 1230 ? "\u0686\u06c8\u0634" : s < 1800 ? "\u0686\u06c8\u0634\u062a\u0649\u0646 \u0643\u06d0\u064a\u0649\u0646" : "\u0643\u06d5\u0686"
        },
        calendar: {
            sameDay: "[\u0628\u06c8\u06af\u06c8\u0646 \u0633\u0627\u0626\u06d5\u062a] LT",
            nextDay: "[\u0626\u06d5\u062a\u06d5 \u0633\u0627\u0626\u06d5\u062a] LT",
            nextWeek: "[\u0643\u06d0\u0644\u06d5\u0631\u0643\u0649] dddd [\u0633\u0627\u0626\u06d5\u062a] LT",
            lastDay: "[\u062a\u06c6\u0646\u06c8\u06af\u06c8\u0646] LT",
            lastWeek: "[\u0626\u0627\u0644\u062f\u0649\u0646\u0642\u0649] dddd [\u0633\u0627\u0626\u06d5\u062a] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s \u0643\u06d0\u064a\u0649\u0646",
            past: "%s \u0628\u06c7\u0631\u06c7\u0646",
            s: "\u0646\u06d5\u0686\u0686\u06d5 \u0633\u06d0\u0643\u0648\u0646\u062a",
            ss: "%d \u0633\u06d0\u0643\u0648\u0646\u062a",
            m: "\u0628\u0649\u0631 \u0645\u0649\u0646\u06c7\u062a",
            mm: "%d \u0645\u0649\u0646\u06c7\u062a",
            h: "\u0628\u0649\u0631 \u0633\u0627\u0626\u06d5\u062a",
            hh: "%d \u0633\u0627\u0626\u06d5\u062a",
            d: "\u0628\u0649\u0631 \u0643\u06c8\u0646",
            dd: "%d \u0643\u06c8\u0646",
            M: "\u0628\u0649\u0631 \u0626\u0627\u064a",
            MM: "%d \u0626\u0627\u064a",
            y: "\u0628\u0649\u0631 \u064a\u0649\u0644",
            yy: "%d \u064a\u0649\u0644"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(-\u0643\u06c8\u0646\u0649|-\u0626\u0627\u064a|-\u06be\u06d5\u067e\u062a\u06d5)/,
        ordinal: function(e, a) {
            switch (a) {
            case "d":
            case "D":
            case "DDD":
                return e + "-\u0643\u06c8\u0646\u0649";
            case "w":
            case "W":
                return e + "-\u06be\u06d5\u067e\u062a\u06d5";
            default:
                return e
            }
        },
        preparse: function(e) {
            return e.replace(/\u060c/g, ",")
        },
        postformat: function(e) {
            return e.replace(/,/g, "\u060c")
        },
        week: {
            dow: 1,
            doy: 7
        }
    }),
    l.defineLocale("uk", {
        months: {
            format: "\u0441\u0456\u0447\u043d\u044f_\u043b\u044e\u0442\u043e\u0433\u043e_\u0431\u0435\u0440\u0435\u0437\u043d\u044f_\u043a\u0432\u0456\u0442\u043d\u044f_\u0442\u0440\u0430\u0432\u043d\u044f_\u0447\u0435\u0440\u0432\u043d\u044f_\u043b\u0438\u043f\u043d\u044f_\u0441\u0435\u0440\u043f\u043d\u044f_\u0432\u0435\u0440\u0435\u0441\u043d\u044f_\u0436\u043e\u0432\u0442\u043d\u044f_\u043b\u0438\u0441\u0442\u043e\u043f\u0430\u0434\u0430_\u0433\u0440\u0443\u0434\u043d\u044f".split("_"),
            standalone: "\u0441\u0456\u0447\u0435\u043d\u044c_\u043b\u044e\u0442\u0438\u0439_\u0431\u0435\u0440\u0435\u0437\u0435\u043d\u044c_\u043a\u0432\u0456\u0442\u0435\u043d\u044c_\u0442\u0440\u0430\u0432\u0435\u043d\u044c_\u0447\u0435\u0440\u0432\u0435\u043d\u044c_\u043b\u0438\u043f\u0435\u043d\u044c_\u0441\u0435\u0440\u043f\u0435\u043d\u044c_\u0432\u0435\u0440\u0435\u0441\u0435\u043d\u044c_\u0436\u043e\u0432\u0442\u0435\u043d\u044c_\u043b\u0438\u0441\u0442\u043e\u043f\u0430\u0434_\u0433\u0440\u0443\u0434\u0435\u043d\u044c".split("_")
        },
        monthsShort: "\u0441\u0456\u0447_\u043b\u044e\u0442_\u0431\u0435\u0440_\u043a\u0432\u0456\u0442_\u0442\u0440\u0430\u0432_\u0447\u0435\u0440\u0432_\u043b\u0438\u043f_\u0441\u0435\u0440\u043f_\u0432\u0435\u0440_\u0436\u043e\u0432\u0442_\u043b\u0438\u0441\u0442_\u0433\u0440\u0443\u0434".split("_"),
        weekdays: function(e, a) {
            var t = {
                nominative: "\u043d\u0435\u0434\u0456\u043b\u044f_\u043f\u043e\u043d\u0435\u0434\u0456\u043b\u043e\u043a_\u0432\u0456\u0432\u0442\u043e\u0440\u043e\u043a_\u0441\u0435\u0440\u0435\u0434\u0430_\u0447\u0435\u0442\u0432\u0435\u0440_\u043f\u2019\u044f\u0442\u043d\u0438\u0446\u044f_\u0441\u0443\u0431\u043e\u0442\u0430".split("_"),
                accusative: "\u043d\u0435\u0434\u0456\u043b\u044e_\u043f\u043e\u043d\u0435\u0434\u0456\u043b\u043e\u043a_\u0432\u0456\u0432\u0442\u043e\u0440\u043e\u043a_\u0441\u0435\u0440\u0435\u0434\u0443_\u0447\u0435\u0442\u0432\u0435\u0440_\u043f\u2019\u044f\u0442\u043d\u0438\u0446\u044e_\u0441\u0443\u0431\u043e\u0442\u0443".split("_"),
                genitive: "\u043d\u0435\u0434\u0456\u043b\u0456_\u043f\u043e\u043d\u0435\u0434\u0456\u043b\u043a\u0430_\u0432\u0456\u0432\u0442\u043e\u0440\u043a\u0430_\u0441\u0435\u0440\u0435\u0434\u0438_\u0447\u0435\u0442\u0432\u0435\u0440\u0433\u0430_\u043f\u2019\u044f\u0442\u043d\u0438\u0446\u0456_\u0441\u0443\u0431\u043e\u0442\u0438".split("_")
            };
            return !0 === e ? t.nominative.slice(1, 7).concat(t.nominative.slice(0, 1)) : e ? t[/(\[[\u0412\u0432\u0423\u0443]\]) ?dddd/.test(a) ? "accusative" : /\[?(?:\u043c\u0438\u043d\u0443\u043b\u043e\u0457|\u043d\u0430\u0441\u0442\u0443\u043f\u043d\u043e\u0457)? ?\] ?dddd/.test(a) ? "genitive" : "nominative"][e.day()] : t.nominative
        },
        weekdaysShort: "\u043d\u0434_\u043f\u043d_\u0432\u0442_\u0441\u0440_\u0447\u0442_\u043f\u0442_\u0441\u0431".split("_"),
        weekdaysMin: "\u043d\u0434_\u043f\u043d_\u0432\u0442_\u0441\u0440_\u0447\u0442_\u043f\u0442_\u0441\u0431".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD.MM.YYYY",
            LL: "D MMMM YYYY \u0440.",
            LLL: "D MMMM YYYY \u0440., HH:mm",
            LLLL: "dddd, D MMMM YYYY \u0440., HH:mm"
        },
        calendar: {
            sameDay: Md("[\u0421\u044c\u043e\u0433\u043e\u0434\u043d\u0456 "),
            nextDay: Md("[\u0417\u0430\u0432\u0442\u0440\u0430 "),
            lastDay: Md("[\u0412\u0447\u043e\u0440\u0430 "),
            nextWeek: Md("[\u0423] dddd ["),
            lastWeek: function() {
                switch (this.day()) {
                case 0:
                case 3:
                case 5:
                case 6:
                    return Md("[\u041c\u0438\u043d\u0443\u043b\u043e\u0457] dddd [").call(this);
                case 1:
                case 2:
                case 4:
                    return Md("[\u041c\u0438\u043d\u0443\u043b\u043e\u0433\u043e] dddd [").call(this)
                }
            },
            sameElse: "L"
        },
        relativeTime: {
            future: "\u0437\u0430 %s",
            past: "%s \u0442\u043e\u043c\u0443",
            s: "\u0434\u0435\u043a\u0456\u043b\u044c\u043a\u0430 \u0441\u0435\u043a\u0443\u043d\u0434",
            ss: ld,
            m: ld,
            mm: ld,
            h: "\u0433\u043e\u0434\u0438\u043d\u0443",
            hh: ld,
            d: "\u0434\u0435\u043d\u044c",
            dd: ld,
            M: "\u043c\u0456\u0441\u044f\u0446\u044c",
            MM: ld,
            y: "\u0440\u0456\u043a",
            yy: ld
        },
        meridiemParse: /\u043d\u043e\u0447\u0456|\u0440\u0430\u043d\u043a\u0443|\u0434\u043d\u044f|\u0432\u0435\u0447\u043e\u0440\u0430/,
        isPM: function(e) {
            return /^(\u0434\u043d\u044f|\u0432\u0435\u0447\u043e\u0440\u0430)$/.test(e)
        },
        meridiem: function(e, a, t) {
            return e < 4 ? "\u043d\u043e\u0447\u0456" : e < 12 ? "\u0440\u0430\u043d\u043a\u0443" : e < 17 ? "\u0434\u043d\u044f" : "\u0432\u0435\u0447\u043e\u0440\u0430"
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(\u0439|\u0433\u043e)/,
        ordinal: function(e, a) {
            switch (a) {
            case "M":
            case "d":
            case "DDD":
            case "w":
            case "W":
                return e + "-\u0439";
            case "D":
                return e + "-\u0433\u043e";
            default:
                return e
            }
        },
        week: {
            dow: 1,
            doy: 7
        }
    });
    var hd = ["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u06cc\u0644", "\u0645\u0626\u06cc", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626\u06cc", "\u0627\u06af\u0633\u062a", "\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u062f\u0633\u0645\u0628\u0631"]
      , Ld = ["\u0627\u062a\u0648\u0627\u0631", "\u067e\u06cc\u0631", "\u0645\u0646\u06af\u0644", "\u0628\u062f\u06be", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"];
    return l.defineLocale("ur", {
        months: hd,
        monthsShort: hd,
        weekdays: Ld,
        weekdaysShort: Ld,
        weekdaysMin: Ld,
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd\u060c D MMMM YYYY HH:mm"
        },
        meridiemParse: /\u0635\u0628\u062d|\u0634\u0627\u0645/,
        isPM: function(e) {
            return "\u0634\u0627\u0645" === e
        },
        meridiem: function(e, a, t) {
            return e < 12 ? "\u0635\u0628\u062d" : "\u0634\u0627\u0645"
        },
        calendar: {
            sameDay: "[\u0622\u062c \u0628\u0648\u0642\u062a] LT",
            nextDay: "[\u06a9\u0644 \u0628\u0648\u0642\u062a] LT",
            nextWeek: "dddd [\u0628\u0648\u0642\u062a] LT",
            lastDay: "[\u06af\u0630\u0634\u062a\u06c1 \u0631\u0648\u0632 \u0628\u0648\u0642\u062a] LT",
            lastWeek: "[\u06af\u0630\u0634\u062a\u06c1] dddd [\u0628\u0648\u0642\u062a] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s \u0628\u0639\u062f",
            past: "%s \u0642\u0628\u0644",
            s: "\u0686\u0646\u062f \u0633\u06cc\u06a9\u0646\u0688",
            ss: "%d \u0633\u06cc\u06a9\u0646\u0688",
            m: "\u0627\u06cc\u06a9 \u0645\u0646\u0679",
            mm: "%d \u0645\u0646\u0679",
            h: "\u0627\u06cc\u06a9 \u06af\u06be\u0646\u0679\u06c1",
            hh: "%d \u06af\u06be\u0646\u0679\u06d2",
            d: "\u0627\u06cc\u06a9 \u062f\u0646",
            dd: "%d \u062f\u0646",
            M: "\u0627\u06cc\u06a9 \u0645\u0627\u06c1",
            MM: "%d \u0645\u0627\u06c1",
            y: "\u0627\u06cc\u06a9 \u0633\u0627\u0644",
            yy: "%d \u0633\u0627\u0644"
        },
        preparse: function(e) {
            return e.replace(/\u060c/g, ",")
        },
        postformat: function(e) {
            return e.replace(/,/g, "\u060c")
        },
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("uz-latn", {
        months: "Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr".split("_"),
        monthsShort: "Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek".split("_"),
        weekdays: "Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba".split("_"),
        weekdaysShort: "Yak_Dush_Sesh_Chor_Pay_Jum_Shan".split("_"),
        weekdaysMin: "Ya_Du_Se_Cho_Pa_Ju_Sha".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "D MMMM YYYY, dddd HH:mm"
        },
        calendar: {
            sameDay: "[Bugun soat] LT [da]",
            nextDay: "[Ertaga] LT [da]",
            nextWeek: "dddd [kuni soat] LT [da]",
            lastDay: "[Kecha soat] LT [da]",
            lastWeek: "[O'tgan] dddd [kuni soat] LT [da]",
            sameElse: "L"
        },
        relativeTime: {
            future: "Yaqin %s ichida",
            past: "Bir necha %s oldin",
            s: "soniya",
            ss: "%d soniya",
            m: "bir daqiqa",
            mm: "%d daqiqa",
            h: "bir soat",
            hh: "%d soat",
            d: "bir kun",
            dd: "%d kun",
            M: "bir oy",
            MM: "%d oy",
            y: "bir yil",
            yy: "%d yil"
        },
        week: {
            dow: 1,
            doy: 7
        }
    }),
    l.defineLocale("uz", {
        months: "\u044f\u043d\u0432\u0430\u0440_\u0444\u0435\u0432\u0440\u0430\u043b_\u043c\u0430\u0440\u0442_\u0430\u043f\u0440\u0435\u043b_\u043c\u0430\u0439_\u0438\u044e\u043d_\u0438\u044e\u043b_\u0430\u0432\u0433\u0443\u0441\u0442_\u0441\u0435\u043d\u0442\u044f\u0431\u0440_\u043e\u043a\u0442\u044f\u0431\u0440_\u043d\u043e\u044f\u0431\u0440_\u0434\u0435\u043a\u0430\u0431\u0440".split("_"),
        monthsShort: "\u044f\u043d\u0432_\u0444\u0435\u0432_\u043c\u0430\u0440_\u0430\u043f\u0440_\u043c\u0430\u0439_\u0438\u044e\u043d_\u0438\u044e\u043b_\u0430\u0432\u0433_\u0441\u0435\u043d_\u043e\u043a\u0442_\u043d\u043e\u044f_\u0434\u0435\u043a".split("_"),
        weekdays: "\u042f\u043a\u0448\u0430\u043d\u0431\u0430_\u0414\u0443\u0448\u0430\u043d\u0431\u0430_\u0421\u0435\u0448\u0430\u043d\u0431\u0430_\u0427\u043e\u0440\u0448\u0430\u043d\u0431\u0430_\u041f\u0430\u0439\u0448\u0430\u043d\u0431\u0430_\u0416\u0443\u043c\u0430_\u0428\u0430\u043d\u0431\u0430".split("_"),
        weekdaysShort: "\u042f\u043a\u0448_\u0414\u0443\u0448_\u0421\u0435\u0448_\u0427\u043e\u0440_\u041f\u0430\u0439_\u0416\u0443\u043c_\u0428\u0430\u043d".split("_"),
        weekdaysMin: "\u042f\u043a_\u0414\u0443_\u0421\u0435_\u0427\u043e_\u041f\u0430_\u0416\u0443_\u0428\u0430".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "D MMMM YYYY, dddd HH:mm"
        },
        calendar: {
            sameDay: "[\u0411\u0443\u0433\u0443\u043d \u0441\u043e\u0430\u0442] LT [\u0434\u0430]",
            nextDay: "[\u042d\u0440\u0442\u0430\u0433\u0430] LT [\u0434\u0430]",
            nextWeek: "dddd [\u043a\u0443\u043d\u0438 \u0441\u043e\u0430\u0442] LT [\u0434\u0430]",
            lastDay: "[\u041a\u0435\u0447\u0430 \u0441\u043e\u0430\u0442] LT [\u0434\u0430]",
            lastWeek: "[\u0423\u0442\u0433\u0430\u043d] dddd [\u043a\u0443\u043d\u0438 \u0441\u043e\u0430\u0442] LT [\u0434\u0430]",
            sameElse: "L"
        },
        relativeTime: {
            future: "\u042f\u043a\u0438\u043d %s \u0438\u0447\u0438\u0434\u0430",
            past: "\u0411\u0438\u0440 \u043d\u0435\u0447\u0430 %s \u043e\u043b\u0434\u0438\u043d",
            s: "\u0444\u0443\u0440\u0441\u0430\u0442",
            ss: "%d \u0444\u0443\u0440\u0441\u0430\u0442",
            m: "\u0431\u0438\u0440 \u0434\u0430\u043a\u0438\u043a\u0430",
            mm: "%d \u0434\u0430\u043a\u0438\u043a\u0430",
            h: "\u0431\u0438\u0440 \u0441\u043e\u0430\u0442",
            hh: "%d \u0441\u043e\u0430\u0442",
            d: "\u0431\u0438\u0440 \u043a\u0443\u043d",
            dd: "%d \u043a\u0443\u043d",
            M: "\u0431\u0438\u0440 \u043e\u0439",
            MM: "%d \u043e\u0439",
            y: "\u0431\u0438\u0440 \u0439\u0438\u043b",
            yy: "%d \u0439\u0438\u043b"
        },
        week: {
            dow: 1,
            doy: 7
        }
    }),
    l.defineLocale("vi", {
        months: "th\xe1ng 1_th\xe1ng 2_th\xe1ng 3_th\xe1ng 4_th\xe1ng 5_th\xe1ng 6_th\xe1ng 7_th\xe1ng 8_th\xe1ng 9_th\xe1ng 10_th\xe1ng 11_th\xe1ng 12".split("_"),
        monthsShort: "Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12".split("_"),
        monthsParseExact: !0,
        weekdays: "ch\u1ee7 nh\u1eadt_th\u1ee9 hai_th\u1ee9 ba_th\u1ee9 t\u01b0_th\u1ee9 n\u0103m_th\u1ee9 s\xe1u_th\u1ee9 b\u1ea3y".split("_"),
        weekdaysShort: "CN_T2_T3_T4_T5_T6_T7".split("_"),
        weekdaysMin: "CN_T2_T3_T4_T5_T6_T7".split("_"),
        weekdaysParseExact: !0,
        meridiemParse: /sa|ch/i,
        isPM: function(e) {
            return /^ch$/i.test(e)
        },
        meridiem: function(e, a, t) {
            return e < 12 ? t ? "sa" : "SA" : t ? "ch" : "CH"
        },
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "DD/MM/YYYY",
            LL: "D MMMM [n\u0103m] YYYY",
            LLL: "D MMMM [n\u0103m] YYYY HH:mm",
            LLLL: "dddd, D MMMM [n\u0103m] YYYY HH:mm",
            l: "DD/M/YYYY",
            ll: "D MMM YYYY",
            lll: "D MMM YYYY HH:mm",
            llll: "ddd, D MMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[H\xf4m nay l\xfac] LT",
            nextDay: "[Ng\xe0y mai l\xfac] LT",
            nextWeek: "dddd [tu\u1ea7n t\u1edbi l\xfac] LT",
            lastDay: "[H\xf4m qua l\xfac] LT",
            lastWeek: "dddd [tu\u1ea7n r\u1ed3i l\xfac] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "%s t\u1edbi",
            past: "%s tr\u01b0\u1edbc",
            s: "v\xe0i gi\xe2y",
            ss: "%d gi\xe2y",
            m: "m\u1ed9t ph\xfat",
            mm: "%d ph\xfat",
            h: "m\u1ed9t gi\u1edd",
            hh: "%d gi\u1edd",
            d: "m\u1ed9t ng\xe0y",
            dd: "%d ng\xe0y",
            M: "m\u1ed9t th\xe1ng",
            MM: "%d th\xe1ng",
            y: "m\u1ed9t n\u0103m",
            yy: "%d n\u0103m"
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal: function(e) {
            return e
        },
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("x-pseudo", {
        months: "J~\xe1\xf1\xfa\xe1~r\xfd_F~\xe9br\xfa~\xe1r\xfd_~M\xe1rc~h_\xc1p~r\xedl_~M\xe1\xfd_~J\xfa\xf1\xe9~_J\xfal~\xfd_\xc1\xfa~g\xfast~_S\xe9p~t\xe9mb~\xe9r_\xd3~ct\xf3b~\xe9r_\xd1~\xf3v\xe9m~b\xe9r_~D\xe9c\xe9~mb\xe9r".split("_"),
        monthsShort: "J~\xe1\xf1_~F\xe9b_~M\xe1r_~\xc1pr_~M\xe1\xfd_~J\xfa\xf1_~J\xfal_~\xc1\xfag_~S\xe9p_~\xd3ct_~\xd1\xf3v_~D\xe9c".split("_"),
        monthsParseExact: !0,
        weekdays: "S~\xfa\xf1d\xe1~\xfd_M\xf3~\xf1d\xe1\xfd~_T\xfa\xe9~sd\xe1\xfd~_W\xe9d~\xf1\xe9sd~\xe1\xfd_T~h\xfars~d\xe1\xfd_~Fr\xedd~\xe1\xfd_S~\xe1t\xfar~d\xe1\xfd".split("_"),
        weekdaysShort: "S~\xfa\xf1_~M\xf3\xf1_~T\xfa\xe9_~W\xe9d_~Th\xfa_~Fr\xed_~S\xe1t".split("_"),
        weekdaysMin: "S~\xfa_M\xf3~_T\xfa_~W\xe9_T~h_Fr~_S\xe1".split("_"),
        weekdaysParseExact: !0,
        longDateFormat: {
            LT: "HH:mm",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY HH:mm",
            LLLL: "dddd, D MMMM YYYY HH:mm"
        },
        calendar: {
            sameDay: "[T~\xf3d\xe1~\xfd \xe1t] LT",
            nextDay: "[T~\xf3m\xf3~rr\xf3~w \xe1t] LT",
            nextWeek: "dddd [\xe1t] LT",
            lastDay: "[\xdd~\xe9st~\xe9rd\xe1~\xfd \xe1t] LT",
            lastWeek: "[L~\xe1st] dddd [\xe1t] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "\xed~\xf1 %s",
            past: "%s \xe1~g\xf3",
            s: "\xe1 ~f\xe9w ~s\xe9c\xf3~\xf1ds",
            ss: "%d s~\xe9c\xf3\xf1~ds",
            m: "\xe1 ~m\xed\xf1~\xfat\xe9",
            mm: "%d m~\xed\xf1\xfa~t\xe9s",
            h: "\xe1~\xf1 h\xf3~\xfar",
            hh: "%d h~\xf3\xfars",
            d: "\xe1 ~d\xe1\xfd",
            dd: "%d d~\xe1\xfds",
            M: "\xe1 ~m\xf3\xf1~th",
            MM: "%d m~\xf3\xf1t~hs",
            y: "\xe1 ~\xfd\xe9\xe1r",
            yy: "%d \xfd~\xe9\xe1rs"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function(e) {
            var a = e % 10;
            return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === a ? "st" : 2 === a ? "nd" : 3 === a ? "rd" : "th")
        },
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("yo", {
        months: "S\u1eb9\u0301r\u1eb9\u0301_E\u0300re\u0300le\u0300_\u1eb8r\u1eb9\u0300na\u0300_I\u0300gbe\u0301_E\u0300bibi_O\u0300ku\u0300du_Ag\u1eb9mo_O\u0300gu\u0301n_Owewe_\u1ecc\u0300wa\u0300ra\u0300_Be\u0301lu\u0301_\u1ecc\u0300p\u1eb9\u0300\u0300".split("_"),
        monthsShort: "S\u1eb9\u0301r_E\u0300rl_\u1eb8rn_I\u0300gb_E\u0300bi_O\u0300ku\u0300_Ag\u1eb9_O\u0300gu\u0301_Owe_\u1ecc\u0300wa\u0300_Be\u0301l_\u1ecc\u0300p\u1eb9\u0300\u0300".split("_"),
        weekdays: "A\u0300i\u0300ku\u0301_Aje\u0301_I\u0300s\u1eb9\u0301gun_\u1eccj\u1ecd\u0301ru\u0301_\u1eccj\u1ecd\u0301b\u1ecd_\u1eb8ti\u0300_A\u0300ba\u0301m\u1eb9\u0301ta".split("_"),
        weekdaysShort: "A\u0300i\u0300k_Aje\u0301_I\u0300s\u1eb9\u0301_\u1eccjr_\u1eccjb_\u1eb8ti\u0300_A\u0300ba\u0301".split("_"),
        weekdaysMin: "A\u0300i\u0300_Aj_I\u0300s_\u1eccr_\u1eccb_\u1eb8t_A\u0300b".split("_"),
        longDateFormat: {
            LT: "h:mm A",
            LTS: "h:mm:ss A",
            L: "DD/MM/YYYY",
            LL: "D MMMM YYYY",
            LLL: "D MMMM YYYY h:mm A",
            LLLL: "dddd, D MMMM YYYY h:mm A"
        },
        calendar: {
            sameDay: "[O\u0300ni\u0300 ni] LT",
            nextDay: "[\u1ecc\u0300la ni] LT",
            nextWeek: "dddd [\u1eccs\u1eb9\u0300 to\u0301n'b\u1ecd] [ni] LT",
            lastDay: "[A\u0300na ni] LT",
            lastWeek: "dddd [\u1eccs\u1eb9\u0300 to\u0301l\u1ecd\u0301] [ni] LT",
            sameElse: "L"
        },
        relativeTime: {
            future: "ni\u0301 %s",
            past: "%s k\u1ecdja\u0301",
            s: "i\u0300s\u1eb9ju\u0301 aaya\u0301 die",
            ss: "aaya\u0301 %d",
            m: "i\u0300s\u1eb9ju\u0301 kan",
            mm: "i\u0300s\u1eb9ju\u0301 %d",
            h: "wa\u0301kati kan",
            hh: "wa\u0301kati %d",
            d: "\u1ecdj\u1ecd\u0301 kan",
            dd: "\u1ecdj\u1ecd\u0301 %d",
            M: "osu\u0300 kan",
            MM: "osu\u0300 %d",
            y: "\u1ecddu\u0301n kan",
            yy: "\u1ecddu\u0301n %d"
        },
        dayOfMonthOrdinalParse: /\u1ecdj\u1ecd\u0301\s\d{1,2}/,
        ordinal: "\u1ecdj\u1ecd\u0301 %d",
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("zh-cn", {
        months: "\u4e00\u6708_\u4e8c\u6708_\u4e09\u6708_\u56db\u6708_\u4e94\u6708_\u516d\u6708_\u4e03\u6708_\u516b\u6708_\u4e5d\u6708_\u5341\u6708_\u5341\u4e00\u6708_\u5341\u4e8c\u6708".split("_"),
        monthsShort: "1\u6708_2\u6708_3\u6708_4\u6708_5\u6708_6\u6708_7\u6708_8\u6708_9\u6708_10\u6708_11\u6708_12\u6708".split("_"),
        weekdays: "\u661f\u671f\u65e5_\u661f\u671f\u4e00_\u661f\u671f\u4e8c_\u661f\u671f\u4e09_\u661f\u671f\u56db_\u661f\u671f\u4e94_\u661f\u671f\u516d".split("_"),
        weekdaysShort: "\u5468\u65e5_\u5468\u4e00_\u5468\u4e8c_\u5468\u4e09_\u5468\u56db_\u5468\u4e94_\u5468\u516d".split("_"),
        weekdaysMin: "\u65e5_\u4e00_\u4e8c_\u4e09_\u56db_\u4e94_\u516d".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY/MM/DD",
            LL: "YYYY\u5e74M\u6708D\u65e5",
            LLL: "YYYY\u5e74M\u6708D\u65e5Ah\u70b9mm\u5206",
            LLLL: "YYYY\u5e74M\u6708D\u65e5ddddAh\u70b9mm\u5206",
            l: "YYYY/M/D",
            ll: "YYYY\u5e74M\u6708D\u65e5",
            lll: "YYYY\u5e74M\u6708D\u65e5 HH:mm",
            llll: "YYYY\u5e74M\u6708D\u65e5dddd HH:mm"
        },
        meridiemParse: /\u51cc\u6668|\u65e9\u4e0a|\u4e0a\u5348|\u4e2d\u5348|\u4e0b\u5348|\u665a\u4e0a/,
        meridiemHour: function(e, a) {
            return 12 === e && (e = 0),
            "\u51cc\u6668" === a || "\u65e9\u4e0a" === a || "\u4e0a\u5348" === a ? e : "\u4e0b\u5348" === a || "\u665a\u4e0a" === a ? e + 12 : 11 <= e ? e : e + 12
        },
        meridiem: function(e, a, t) {
            var s = 100 * e + a;
            return s < 600 ? "\u51cc\u6668" : s < 900 ? "\u65e9\u4e0a" : s < 1130 ? "\u4e0a\u5348" : s < 1230 ? "\u4e2d\u5348" : s < 1800 ? "\u4e0b\u5348" : "\u665a\u4e0a"
        },
        calendar: {
            sameDay: "[\u4eca\u5929]LT",
            nextDay: "[\u660e\u5929]LT",
            nextWeek: "[\u4e0b]ddddLT",
            lastDay: "[\u6628\u5929]LT",
            lastWeek: "[\u4e0a]ddddLT",
            sameElse: "L"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(\u65e5|\u6708|\u5468)/,
        ordinal: function(e, a) {
            switch (a) {
            case "d":
            case "D":
            case "DDD":
                return e + "\u65e5";
            case "M":
                return e + "\u6708";
            case "w":
            case "W":
                return e + "\u5468";
            default:
                return e
            }
        },
        relativeTime: {
            future: "%s\u5185",
            past: "%s\u524d",
            s: "\u51e0\u79d2",
            ss: "%d \u79d2",
            m: "1 \u5206\u949f",
            mm: "%d \u5206\u949f",
            h: "1 \u5c0f\u65f6",
            hh: "%d \u5c0f\u65f6",
            d: "1 \u5929",
            dd: "%d \u5929",
            M: "1 \u4e2a\u6708",
            MM: "%d \u4e2a\u6708",
            y: "1 \u5e74",
            yy: "%d \u5e74"
        },
        week: {
            dow: 1,
            doy: 4
        }
    }),
    l.defineLocale("zh-hk", {
        months: "\u4e00\u6708_\u4e8c\u6708_\u4e09\u6708_\u56db\u6708_\u4e94\u6708_\u516d\u6708_\u4e03\u6708_\u516b\u6708_\u4e5d\u6708_\u5341\u6708_\u5341\u4e00\u6708_\u5341\u4e8c\u6708".split("_"),
        monthsShort: "1\u6708_2\u6708_3\u6708_4\u6708_5\u6708_6\u6708_7\u6708_8\u6708_9\u6708_10\u6708_11\u6708_12\u6708".split("_"),
        weekdays: "\u661f\u671f\u65e5_\u661f\u671f\u4e00_\u661f\u671f\u4e8c_\u661f\u671f\u4e09_\u661f\u671f\u56db_\u661f\u671f\u4e94_\u661f\u671f\u516d".split("_"),
        weekdaysShort: "\u9031\u65e5_\u9031\u4e00_\u9031\u4e8c_\u9031\u4e09_\u9031\u56db_\u9031\u4e94_\u9031\u516d".split("_"),
        weekdaysMin: "\u65e5_\u4e00_\u4e8c_\u4e09_\u56db_\u4e94_\u516d".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY/MM/DD",
            LL: "YYYY\u5e74M\u6708D\u65e5",
            LLL: "YYYY\u5e74M\u6708D\u65e5 HH:mm",
            LLLL: "YYYY\u5e74M\u6708D\u65e5dddd HH:mm",
            l: "YYYY/M/D",
            ll: "YYYY\u5e74M\u6708D\u65e5",
            lll: "YYYY\u5e74M\u6708D\u65e5 HH:mm",
            llll: "YYYY\u5e74M\u6708D\u65e5dddd HH:mm"
        },
        meridiemParse: /\u51cc\u6668|\u65e9\u4e0a|\u4e0a\u5348|\u4e2d\u5348|\u4e0b\u5348|\u665a\u4e0a/,
        meridiemHour: function(e, a) {
            return 12 === e && (e = 0),
            "\u51cc\u6668" === a || "\u65e9\u4e0a" === a || "\u4e0a\u5348" === a ? e : "\u4e2d\u5348" === a ? 11 <= e ? e : e + 12 : "\u4e0b\u5348" === a || "\u665a\u4e0a" === a ? e + 12 : void 0
        },
        meridiem: function(e, a, t) {
            var s = 100 * e + a;
            return s < 600 ? "\u51cc\u6668" : s < 900 ? "\u65e9\u4e0a" : s < 1130 ? "\u4e0a\u5348" : s < 1230 ? "\u4e2d\u5348" : s < 1800 ? "\u4e0b\u5348" : "\u665a\u4e0a"
        },
        calendar: {
            sameDay: "[\u4eca\u5929]LT",
            nextDay: "[\u660e\u5929]LT",
            nextWeek: "[\u4e0b]ddddLT",
            lastDay: "[\u6628\u5929]LT",
            lastWeek: "[\u4e0a]ddddLT",
            sameElse: "L"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(\u65e5|\u6708|\u9031)/,
        ordinal: function(e, a) {
            switch (a) {
            case "d":
            case "D":
            case "DDD":
                return e + "\u65e5";
            case "M":
                return e + "\u6708";
            case "w":
            case "W":
                return e + "\u9031";
            default:
                return e
            }
        },
        relativeTime: {
            future: "%s\u5167",
            past: "%s\u524d",
            s: "\u5e7e\u79d2",
            ss: "%d \u79d2",
            m: "1 \u5206\u9418",
            mm: "%d \u5206\u9418",
            h: "1 \u5c0f\u6642",
            hh: "%d \u5c0f\u6642",
            d: "1 \u5929",
            dd: "%d \u5929",
            M: "1 \u500b\u6708",
            MM: "%d \u500b\u6708",
            y: "1 \u5e74",
            yy: "%d \u5e74"
        }
    }),
    l.defineLocale("zh-tw", {
        months: "\u4e00\u6708_\u4e8c\u6708_\u4e09\u6708_\u56db\u6708_\u4e94\u6708_\u516d\u6708_\u4e03\u6708_\u516b\u6708_\u4e5d\u6708_\u5341\u6708_\u5341\u4e00\u6708_\u5341\u4e8c\u6708".split("_"),
        monthsShort: "1\u6708_2\u6708_3\u6708_4\u6708_5\u6708_6\u6708_7\u6708_8\u6708_9\u6708_10\u6708_11\u6708_12\u6708".split("_"),
        weekdays: "\u661f\u671f\u65e5_\u661f\u671f\u4e00_\u661f\u671f\u4e8c_\u661f\u671f\u4e09_\u661f\u671f\u56db_\u661f\u671f\u4e94_\u661f\u671f\u516d".split("_"),
        weekdaysShort: "\u9031\u65e5_\u9031\u4e00_\u9031\u4e8c_\u9031\u4e09_\u9031\u56db_\u9031\u4e94_\u9031\u516d".split("_"),
        weekdaysMin: "\u65e5_\u4e00_\u4e8c_\u4e09_\u56db_\u4e94_\u516d".split("_"),
        longDateFormat: {
            LT: "HH:mm",
            LTS: "HH:mm:ss",
            L: "YYYY/MM/DD",
            LL: "YYYY\u5e74M\u6708D\u65e5",
            LLL: "YYYY\u5e74M\u6708D\u65e5 HH:mm",
            LLLL: "YYYY\u5e74M\u6708D\u65e5dddd HH:mm",
            l: "YYYY/M/D",
            ll: "YYYY\u5e74M\u6708D\u65e5",
            lll: "YYYY\u5e74M\u6708D\u65e5 HH:mm",
            llll: "YYYY\u5e74M\u6708D\u65e5dddd HH:mm"
        },
        meridiemParse: /\u51cc\u6668|\u65e9\u4e0a|\u4e0a\u5348|\u4e2d\u5348|\u4e0b\u5348|\u665a\u4e0a/,
        meridiemHour: function(e, a) {
            return 12 === e && (e = 0),
            "\u51cc\u6668" === a || "\u65e9\u4e0a" === a || "\u4e0a\u5348" === a ? e : "\u4e2d\u5348" === a ? 11 <= e ? e : e + 12 : "\u4e0b\u5348" === a || "\u665a\u4e0a" === a ? e + 12 : void 0
        },
        meridiem: function(e, a, t) {
            var s = 100 * e + a;
            return s < 600 ? "\u51cc\u6668" : s < 900 ? "\u65e9\u4e0a" : s < 1130 ? "\u4e0a\u5348" : s < 1230 ? "\u4e2d\u5348" : s < 1800 ? "\u4e0b\u5348" : "\u665a\u4e0a"
        },
        calendar: {
            sameDay: "[\u4eca\u5929] LT",
            nextDay: "[\u660e\u5929] LT",
            nextWeek: "[\u4e0b]dddd LT",
            lastDay: "[\u6628\u5929] LT",
            lastWeek: "[\u4e0a]dddd LT",
            sameElse: "L"
        },
        dayOfMonthOrdinalParse: /\d{1,2}(\u65e5|\u6708|\u9031)/,
        ordinal: function(e, a) {
            switch (a) {
            case "d":
            case "D":
            case "DDD":
                return e + "\u65e5";
            case "M":
                return e + "\u6708";
            case "w":
            case "W":
                return e + "\u9031";
            default:
                return e
            }
        },
        relativeTime: {
            future: "%s\u5167",
            past: "%s\u524d",
            s: "\u5e7e\u79d2",
            ss: "%d \u79d2",
            m: "1 \u5206\u9418",
            mm: "%d \u5206\u9418",
            h: "1 \u5c0f\u6642",
            hh: "%d \u5c0f\u6642",
            d: "1 \u5929",
            dd: "%d \u5929",
            M: "1 \u500b\u6708",
            MM: "%d \u500b\u6708",
            y: "1 \u5e74",
            yy: "%d \u5e74"
        }
    }),
    l.locale("en"),
    l
});
!function(a, i) {
    "use strict";
    "object" == typeof module && module.exports ? module.exports = i(require("moment")) : "function" == typeof define && define.amd ? define(["moment"], i) : i(a.moment)
}(this, function(A) {
    "use strict";
    var i, c = {}, n = {}, s = {}, u = {};
    A && "string" == typeof A.version || N("Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/");
    var a = A.version.split(".")
      , e = +a[0]
      , r = +a[1];
    function t(a) {
        return 96 < a ? a - 87 : 64 < a ? a - 29 : a - 48
    }
    function o(a) {
        var i = 0
          , e = a.split(".")
          , r = e[0]
          , o = e[1] || ""
          , A = 1
          , c = 0
          , n = 1;
        for (45 === a.charCodeAt(0) && (n = -(i = 1)); i < r.length; i++)
            c = 60 * c + t(r.charCodeAt(i));
        for (i = 0; i < o.length; i++)
            A /= 60,
            c += t(o.charCodeAt(i)) * A;
        return c * n
    }
    function m(a) {
        for (var i = 0; i < a.length; i++)
            a[i] = o(a[i])
    }
    function f(a, i) {
        var e, r = [];
        for (e = 0; e < i.length; e++)
            r[e] = a[i[e]];
        return r
    }
    function l(a) {
        var i = a.split("|")
          , e = i[2].split(" ")
          , r = i[3].split("")
          , o = i[4].split(" ");
        return m(e),
        m(r),
        m(o),
        function(a, i) {
            for (var e = 0; e < i; e++)
                a[e] = Math.round((a[e - 1] || 0) + 6e4 * a[e]);
            a[i - 1] = 1 / 0
        }(o, r.length),
        {
            name: i[0],
            abbrs: f(i[1].split(" "), r),
            offsets: f(e, r),
            untils: o,
            population: 0 | i[5]
        }
    }
    function p(a) {
        a && this._set(l(a))
    }
    function b(a) {
        var i = a.toTimeString()
          , e = i.match(/\([a-z ]+\)/i);
        "GMT" === (e = e && e[0] ? (e = e[0].match(/[A-Z]/g)) ? e.join("") : void 0 : (e = i.match(/[A-Z]{3,5}/g)) ? e[0] : void 0) && (e = void 0),
        this.at = +a,
        this.abbr = e,
        this.offset = a.getTimezoneOffset()
    }
    function M(a) {
        this.zone = a,
        this.offsetScore = 0,
        this.abbrScore = 0
    }
    function d(a, i) {
        for (var e, r; r = 6e4 * ((i.at - a.at) / 12e4 | 0); )
            (e = new b(new Date(a.at + r))).offset === a.offset ? a = e : i = e;
        return a
    }
    function h(a, i) {
        return a.offsetScore !== i.offsetScore ? a.offsetScore - i.offsetScore : a.abbrScore !== i.abbrScore ? a.abbrScore - i.abbrScore : i.zone.population - a.zone.population
    }
    function z(a, i) {
        var e, r;
        for (m(i),
        e = 0; e < i.length; e++)
            r = i[e],
            u[r] = u[r] || {},
            u[r][a] = !0
    }
    function E() {
        try {
            var a = Intl.DateTimeFormat().resolvedOptions().timeZone;
            if (a && 3 < a.length) {
                var i = s[g(a)];
                if (i)
                    return i;
                N("Moment Timezone found " + a + " from the Intl api, but did not have that data loaded.")
            }
        } catch (a) {}
        var e, r, o, A = function() {
            var a, i, e, r = (new Date).getFullYear() - 2, o = new b(new Date(r,0,1)), A = [o];
            for (e = 1; e < 48; e++)
                (i = new b(new Date(r,e,1))).offset !== o.offset && (a = d(o, i),
                A.push(a),
                A.push(new b(new Date(a.at + 6e4)))),
                o = i;
            for (e = 0; e < 4; e++)
                A.push(new b(new Date(r + e,0,1))),
                A.push(new b(new Date(r + e,6,1)));
            return A
        }(), c = A.length, n = function(a) {
            var i, e, r, o = a.length, A = {}, c = [];
            for (i = 0; i < o; i++)
                for (e in r = u[a[i].offset] || {})
                    r.hasOwnProperty(e) && (A[e] = !0);
            for (i in A)
                A.hasOwnProperty(i) && c.push(s[i]);
            return c
        }(A), t = [];
        for (r = 0; r < n.length; r++) {
            for (e = new M(P(n[r]),c),
            o = 0; o < c; o++)
                e.scoreOffsetAt(A[o]);
            t.push(e)
        }
        return t.sort(h),
        0 < t.length ? t[0].zone.name : void 0
    }
    function g(a) {
        return (a || "").toLowerCase().replace(/\//g, "_")
    }
    function T(a) {
        var i, e, r, o;
        for ("string" == typeof a && (a = [a]),
        i = 0; i < a.length; i++)
            o = g(e = (r = a[i].split("|"))[0]),
            c[o] = a[i],
            s[o] = e,
            z(o, r[2].split(" "))
    }
    function P(a, i) {
        a = g(a);
        var e, r = c[a];
        return r instanceof p ? r : "string" == typeof r ? (r = new p(r),
        c[a] = r) : n[a] && i !== P && (e = P(n[a], P)) ? ((r = c[a] = new p)._set(e),
        r.name = s[a],
        r) : null
    }
    function S(a) {
        var i, e, r, o;
        for ("string" == typeof a && (a = [a]),
        i = 0; i < a.length; i++)
            r = g((e = a[i].split("|"))[0]),
            o = g(e[1]),
            n[r] = o,
            s[r] = e[0],
            n[o] = r,
            s[o] = e[1]
    }
    function _(a) {
        T(a.zones),
        S(a.links),
        C.dataVersion = a.version
    }
    function k(a) {
        var i = "X" === a._f || "x" === a._f;
        return !(!a._a || void 0 !== a._tzm || i)
    }
    function N(a) {
        "undefined" != typeof console && "function" == typeof console.error && console.error(a)
    }
    function C(a) {
        var i = Array.prototype.slice.call(arguments, 0, -1)
          , e = arguments[arguments.length - 1]
          , r = P(e)
          , o = A.utc.apply(null, i);
        return r && !A.isMoment(a) && k(o) && o.add(r.parse(o), "minutes"),
        o.tz(e),
        o
    }
    (e < 2 || 2 === e && r < 6) && N("Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js " + A.version + ". See momentjs.com"),
    p.prototype = {
        _set: function(a) {
            this.name = a.name,
            this.abbrs = a.abbrs,
            this.untils = a.untils,
            this.offsets = a.offsets,
            this.population = a.population
        },
        _index: function(a) {
            var i, e = +a, r = this.untils;
            for (i = 0; i < r.length; i++)
                if (e < r[i])
                    return i
        },
        parse: function(a) {
            var i, e, r, o, A = +a, c = this.offsets, n = this.untils, t = n.length - 1;
            for (o = 0; o < t; o++)
                if (i = c[o],
                e = c[o + 1],
                r = c[o ? o - 1 : o],
                i < e && C.moveAmbiguousForward ? i = e : r < i && C.moveInvalidForward && (i = r),
                A < n[o] - 6e4 * i)
                    return c[o];
            return c[t]
        },
        abbr: function(a) {
            return this.abbrs[this._index(a)]
        },
        offset: function(a) {
            return N("zone.offset has been deprecated in favor of zone.utcOffset"),
            this.offsets[this._index(a)]
        },
        utcOffset: function(a) {
            return this.offsets[this._index(a)]
        }
    },
    M.prototype.scoreOffsetAt = function(a) {
        this.offsetScore += Math.abs(this.zone.utcOffset(a.at) - a.offset),
        this.zone.abbr(a.at).replace(/[^A-Z]/g, "") !== a.abbr && this.abbrScore++
    }
    ,
    C.version = "0.5.23",
    C.dataVersion = "",
    C._zones = c,
    C._links = n,
    C._names = s,
    C.add = T,
    C.link = S,
    C.load = _,
    C.zone = P,
    C.zoneExists = function a(i) {
        return a.didShowError || (a.didShowError = !0,
        N("moment.tz.zoneExists('" + i + "') has been deprecated in favor of !moment.tz.zone('" + i + "')")),
        !!P(i)
    }
    ,
    C.guess = function(a) {
        return i && !a || (i = E()),
        i
    }
    ,
    C.names = function() {
        var a, i = [];
        for (a in s)
            s.hasOwnProperty(a) && (c[a] || c[n[a]]) && s[a] && i.push(s[a]);
        return i.sort()
    }
    ,
    C.Zone = p,
    C.unpack = l,
    C.unpackBase60 = o,
    C.needsOffset = k,
    C.moveInvalidForward = !0,
    C.moveAmbiguousForward = !1;
    var B, O = A.fn;
    function G(a) {
        return function() {
            return this._z ? this._z.abbr(this) : a.call(this)
        }
    }
    A.tz = C,
    A.defaultZone = null,
    A.updateOffset = function(a, i) {
        var e, r = A.defaultZone;
        void 0 === a._z && (r && k(a) && !a._isUTC && (a._d = A.utc(a._a)._d,
        a.utc().add(r.parse(a), "minutes")),
        a._z = r),
        a._z && (e = a._z.utcOffset(a),
        Math.abs(e) < 16 && (e /= 60),
        void 0 !== a.utcOffset ? a.utcOffset(-e, i) : a.zone(e, i))
    }
    ,
    O.tz = function(a, i) {
        if (a) {
            if ("string" != typeof a)
                throw new Error("Time zone name must be a string, got " + a + " [" + typeof a + "]");
            return this._z = P(a),
            this._z ? A.updateOffset(this, i) : N("Moment Timezone has no data for " + a + ". See http://momentjs.com/timezone/docs/#/data-loading/."),
            this
        }
        if (this._z)
            return this._z.name
    }
    ,
    O.zoneName = G(O.zoneName),
    O.zoneAbbr = G(O.zoneAbbr),
    O.utc = (B = O.utc,
    function() {
        return this._z = null,
        B.apply(this, arguments)
    }
    ),
    A.tz.setDefault = function(a) {
        return (e < 2 || 2 === e && r < 9) && N("Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js " + A.version + "."),
        A.defaultZone = a ? P(a) : null,
        A
    }
    ;
    var D = A.momentProperties;
    return "[object Array]" === Object.prototype.toString.call(D) ? (D.push("_z"),
    D.push("_a")) : D && (D._z = null),
    _({
        version: "2018g",
        zones: ["Africa/Abidjan|GMT|0|0||48e5", "Africa/Nairobi|EAT|-30|0||47e5", "Africa/Algiers|CET|-10|0||26e5", "Africa/Lagos|WAT|-10|0||17e6", "Africa/Maputo|CAT|-20|0||26e5", "Africa/Cairo|EET EEST|-20 -30|01010|1M2m0 gL0 e10 mn0|15e6", "Africa/Casablanca|+00 +01|0 -10|0101010101010101010101010101|1H3C0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00|32e5", "Europe/Paris|CET CEST|-10 -20|01010101010101010101010|1GNB0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|11e6", "Africa/Johannesburg|SAST|-20|0||84e5", "Africa/Khartoum|EAT CAT|-30 -20|01|1Usl0|51e5", "Africa/Sao_Tome|GMT WAT|0 -10|01|1UQN0", "Africa/Tripoli|EET CET CEST|-20 -10 -20|0120|1IlA0 TA0 1o00|11e5", "Africa/Windhoek|CAT WAT|-20 -10|0101010101010|1GQo0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0|32e4", "America/Adak|HST HDT|a0 90|01010101010101010101010|1GIc0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0|326", "America/Anchorage|AKST AKDT|90 80|01010101010101010101010|1GIb0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0|30e4", "America/Santo_Domingo|AST|40|0||29e5", "America/Araguaina|-03 -02|30 20|010|1IdD0 Lz0|14e4", "America/Fortaleza|-03|30|0||34e5", "America/Asuncion|-03 -04|30 40|01010101010101010101010|1GTf0 1cN0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0|28e5", "America/Panama|EST|50|0||15e5", "America/Mexico_City|CST CDT|60 50|01010101010101010101010|1GQw0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0|20e6", "America/Bahia|-02 -03|20 30|01|1GCq0|27e5", "America/Managua|CST|60|0||22e5", "America/La_Paz|-04|40|0||19e5", "America/Lima|-05|50|0||11e6", "America/Denver|MST MDT|70 60|01010101010101010101010|1GI90 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0|26e5", "America/Campo_Grande|-03 -04|30 40|01010101010101010101010|1GCr0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0 1HB0 FX0 1HB0 IL0 1HB0 FX0 1HB0|77e4", "America/Cancun|CST CDT EST|60 50 50|01010102|1GQw0 1nX0 14p0 1lb0 14p0 1lb0 Dd0|63e4", "America/Caracas|-0430 -04|4u 40|01|1QMT0|29e5", "America/Chicago|CST CDT|60 50|01010101010101010101010|1GI80 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0|92e5", "America/Chihuahua|MST MDT|70 60|01010101010101010101010|1GQx0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0|81e4", "America/Phoenix|MST|70|0||42e5", "America/Los_Angeles|PST PDT|80 70|01010101010101010101010|1GIa0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0|15e6", "America/New_York|EST EDT|50 40|01010101010101010101010|1GI70 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0|21e6", "America/Rio_Branco|-04 -05|40 50|01|1KLE0|31e4", "America/Fort_Nelson|PST PDT MST|80 70 70|01010102|1GIa0 1zb0 Op0 1zb0 Op0 1zb0 Op0|39e2", "America/Halifax|AST ADT|40 30|01010101010101010101010|1GI60 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0|39e4", "America/Godthab|-03 -02|30 20|01010101010101010101010|1GNB0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|17e3", "America/Grand_Turk|EST EDT AST|50 40 40|0101010121010101010|1GI70 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 5Ip0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0|37e2", "America/Havana|CST CDT|50 40|01010101010101010101010|1GQt0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0|21e5", "America/Metlakatla|PST AKST AKDT|80 90 80|0121212121212121|1PAa0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0|14e2", "America/Miquelon|-03 -02|30 20|01010101010101010101010|1GI50 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0|61e2", "America/Montevideo|-02 -03|20 30|01010101|1GI40 1o10 11z0 1o10 11z0 1o10 11z0|17e5", "America/Noronha|-02|20|0||30e2", "America/Port-au-Prince|EST EDT|50 40|010101010101010101010|1GI70 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 3iN0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0|23e5", "Antarctica/Palmer|-03 -04|30 40|010101010|1H3D0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0|40", "America/Santiago|-03 -04|30 40|010101010101010101010|1H3D0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0|62e5", "America/Sao_Paulo|-02 -03|20 30|01010101010101010101010|1GCq0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0 1HB0 FX0 1HB0 IL0 1HB0 FX0 1HB0|20e6", "Atlantic/Azores|-01 +00|10 0|01010101010101010101010|1GNB0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|25e4", "America/St_Johns|NST NDT|3u 2u|01010101010101010101010|1GI5u 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0|11e4", "Antarctica/Casey|+11 +08|-b0 -80|0101|1GAF0 blz0 3m10|10", "Antarctica/Davis|+05 +07|-50 -70|01|1GAI0|70", "Pacific/Port_Moresby|+10|-a0|0||25e4", "Pacific/Guadalcanal|+11|-b0|0||11e4", "Asia/Tashkent|+05|-50|0||23e5", "Pacific/Auckland|NZDT NZST|-d0 -c0|01010101010101010101010|1GQe0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00|14e5", "Asia/Baghdad|+03|-30|0||66e5", "Antarctica/Troll|+00 +02|0 -20|01010101010101010101010|1GNB0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|40", "Asia/Dhaka|+06|-60|0||16e6", "Asia/Amman|EET EEST|-20 -30|010101010101010101010|1GPy0 4bX0 Dd0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00|25e5", "Asia/Kamchatka|+12|-c0|0||18e4", "Asia/Baku|+04 +05|-40 -50|010101010|1GNA0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|27e5", "Asia/Bangkok|+07|-70|0||15e6", "Asia/Barnaul|+07 +06|-70 -60|010|1N7v0 3rd0", "Asia/Beirut|EET EEST|-20 -30|01010101010101010101010|1GNy0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0|22e5", "Asia/Kuala_Lumpur|+08|-80|0||71e5", "Asia/Kolkata|IST|-5u|0||15e6", "Asia/Chita|+10 +08 +09|-a0 -80 -90|012|1N7s0 3re0|33e4", "Asia/Ulaanbaatar|+08 +09|-80 -90|01010|1O8G0 1cJ0 1cP0 1cJ0|12e5", "Asia/Shanghai|CST|-80|0||23e6", "Asia/Colombo|+0530|-5u|0||22e5", "Asia/Damascus|EET EEST|-20 -30|01010101010101010101010|1GPy0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0|26e5", "Asia/Dili|+09|-90|0||19e4", "Asia/Dubai|+04|-40|0||39e5", "Asia/Famagusta|EET EEST +03|-20 -30 -30|0101010101201010101010|1GNB0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 15U0 2Ks0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0", "Asia/Gaza|EET EEST|-20 -30|01010101010101010101010|1GPy0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nz0 1220 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1qL0 WN0 1qL0 WN0 1qL0|18e5", "Asia/Hong_Kong|HKT|-80|0||73e5", "Asia/Hovd|+07 +08|-70 -80|01010|1O8H0 1cJ0 1cP0 1cJ0|81e3", "Asia/Irkutsk|+09 +08|-90 -80|01|1N7t0|60e4", "Europe/Istanbul|EET EEST +03|-20 -30 -30|01010101012|1GNB0 1qM0 11A0 1o00 1200 1nA0 11A0 1tA0 U00 15w0|13e6", "Asia/Jakarta|WIB|-70|0||31e6", "Asia/Jayapura|WIT|-90|0||26e4", "Asia/Jerusalem|IST IDT|-20 -30|01010101010101010101010|1GPA0 1aL0 1eN0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0|81e4", "Asia/Kabul|+0430|-4u|0||46e5", "Asia/Karachi|PKT|-50|0||24e6", "Asia/Kathmandu|+0545|-5J|0||12e5", "Asia/Yakutsk|+10 +09|-a0 -90|01|1N7s0|28e4", "Asia/Krasnoyarsk|+08 +07|-80 -70|01|1N7u0|10e5", "Asia/Magadan|+12 +10 +11|-c0 -a0 -b0|012|1N7q0 3Cq0|95e3", "Asia/Makassar|WITA|-80|0||15e5", "Asia/Manila|PST|-80|0||24e6", "Europe/Athens|EET EEST|-20 -30|01010101010101010101010|1GNB0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|35e5", "Asia/Novosibirsk|+07 +06|-70 -60|010|1N7v0 4eN0|15e5", "Asia/Omsk|+07 +06|-70 -60|01|1N7v0|12e5", "Asia/Pyongyang|KST KST|-90 -8u|010|1P4D0 6BA0|29e5", "Asia/Rangoon|+0630|-6u|0||48e5", "Asia/Sakhalin|+11 +10|-b0 -a0|010|1N7r0 3rd0|58e4", "Asia/Seoul|KST|-90|0||23e6", "Asia/Srednekolymsk|+12 +11|-c0 -b0|01|1N7q0|35e2", "Asia/Tehran|+0330 +0430|-3u -4u|01010101010101010101010|1GLUu 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0|14e6", "Asia/Tokyo|JST|-90|0||38e6", "Asia/Tomsk|+07 +06|-70 -60|010|1N7v0 3Qp0|10e5", "Asia/Vladivostok|+11 +10|-b0 -a0|01|1N7r0|60e4", "Asia/Yekaterinburg|+06 +05|-60 -50|01|1N7w0|14e5", "Europe/Lisbon|WET WEST|0 -10|01010101010101010101010|1GNB0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|27e5", "Atlantic/Cape_Verde|-01|10|0||50e4", "Australia/Sydney|AEDT AEST|-b0 -a0|01010101010101010101010|1GQg0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0|40e5", "Australia/Adelaide|ACDT ACST|-au -9u|01010101010101010101010|1GQgu 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0|11e5", "Australia/Brisbane|AEST|-a0|0||20e5", "Australia/Darwin|ACST|-9u|0||12e4", "Australia/Eucla|+0845|-8J|0||368", "Australia/Lord_Howe|+11 +1030|-b0 -au|01010101010101010101010|1GQf0 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu|347", "Australia/Perth|AWST|-80|0||18e5", "Pacific/Easter|-05 -06|50 60|010101010101010101010|1H3D0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0|30e2", "Europe/Dublin|GMT IST|0 -10|01010101010101010101010|1GNB0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|12e5", "Etc/GMT-1|+01|-10|0|", "Pacific/Fakaofo|+13|-d0|0||483", "Pacific/Kiritimati|+14|-e0|0||51e2", "Etc/GMT-2|+02|-20|0|", "Pacific/Tahiti|-10|a0|0||18e4", "Pacific/Niue|-11|b0|0||12e2", "Etc/GMT+12|-12|c0|0|", "Pacific/Galapagos|-06|60|0||25e3", "Etc/GMT+7|-07|70|0|", "Pacific/Pitcairn|-08|80|0||56", "Pacific/Gambier|-09|90|0||125", "Etc/UCT|UCT|0|0|", "Etc/UTC|UTC|0|0|", "Europe/Ulyanovsk|+04 +03|-40 -30|010|1N7y0 3rd0|13e5", "Europe/London|GMT BST|0 -10|01010101010101010101010|1GNB0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|10e6", "Europe/Chisinau|EET EEST|-20 -30|01010101010101010101010|1GNA0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|67e4", "Europe/Kaliningrad|+03 EET|-30 -20|01|1N7z0|44e4", "Europe/Kirov|+04 +03|-40 -30|01|1N7y0|48e4", "Europe/Moscow|MSK MSK|-40 -30|01|1N7y0|16e6", "Europe/Saratov|+04 +03|-40 -30|010|1N7y0 5810", "Europe/Simferopol|EET EEST MSK MSK|-20 -30 -40 -30|0101023|1GNB0 1qM0 11A0 1o00 11z0 1nW0|33e4", "Europe/Volgograd|+04 +03|-40 -30|010|1N7y0 9Jd0|10e5", "Pacific/Honolulu|HST|a0|0||37e4", "MET|MET MEST|-10 -20|01010101010101010101010|1GNB0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0", "Pacific/Chatham|+1345 +1245|-dJ -cJ|01010101010101010101010|1GQe0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00|600", "Pacific/Apia|+14 +13|-e0 -d0|01010101010101010101010|1GQe0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00|37e3", "Pacific/Bougainville|+10 +11|-a0 -b0|01|1NwE0|18e4", "Pacific/Fiji|+13 +12|-d0 -c0|01010101010101010101010|1Goe0 1Nc0 Ao0 1Q00 xz0 1SN0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 1VA0 uM0 1SM0 uM0 1VA0 s00 1VA0|88e4", "Pacific/Guam|ChST|-a0|0||17e4", "Pacific/Marquesas|-0930|9u|0||86e2", "Pacific/Pago_Pago|SST|b0|0||37e2", "Pacific/Norfolk|+1130 +11|-bu -b0|01|1PoCu|25e4", "Pacific/Tongatapu|+13 +14|-d0 -e0|010|1S4d0 s00|75e3"],
        links: ["Africa/Abidjan|Africa/Accra", "Africa/Abidjan|Africa/Bamako", "Africa/Abidjan|Africa/Banjul", "Africa/Abidjan|Africa/Bissau", "Africa/Abidjan|Africa/Conakry", "Africa/Abidjan|Africa/Dakar", "Africa/Abidjan|Africa/Freetown", "Africa/Abidjan|Africa/Lome", "Africa/Abidjan|Africa/Monrovia", "Africa/Abidjan|Africa/Nouakchott", "Africa/Abidjan|Africa/Ouagadougou", "Africa/Abidjan|Africa/Timbuktu", "Africa/Abidjan|America/Danmarkshavn", "Africa/Abidjan|Atlantic/Reykjavik", "Africa/Abidjan|Atlantic/St_Helena", "Africa/Abidjan|Etc/GMT", "Africa/Abidjan|Etc/GMT+0", "Africa/Abidjan|Etc/GMT-0", "Africa/Abidjan|Etc/GMT0", "Africa/Abidjan|Etc/Greenwich", "Africa/Abidjan|GMT", "Africa/Abidjan|GMT+0", "Africa/Abidjan|GMT-0", "Africa/Abidjan|GMT0", "Africa/Abidjan|Greenwich", "Africa/Abidjan|Iceland", "Africa/Algiers|Africa/Tunis", "Africa/Cairo|Egypt", "Africa/Casablanca|Africa/El_Aaiun", "Africa/Johannesburg|Africa/Maseru", "Africa/Johannesburg|Africa/Mbabane", "Africa/Lagos|Africa/Bangui", "Africa/Lagos|Africa/Brazzaville", "Africa/Lagos|Africa/Douala", "Africa/Lagos|Africa/Kinshasa", "Africa/Lagos|Africa/Libreville", "Africa/Lagos|Africa/Luanda", "Africa/Lagos|Africa/Malabo", "Africa/Lagos|Africa/Ndjamena", "Africa/Lagos|Africa/Niamey", "Africa/Lagos|Africa/Porto-Novo", "Africa/Maputo|Africa/Blantyre", "Africa/Maputo|Africa/Bujumbura", "Africa/Maputo|Africa/Gaborone", "Africa/Maputo|Africa/Harare", "Africa/Maputo|Africa/Kigali", "Africa/Maputo|Africa/Lubumbashi", "Africa/Maputo|Africa/Lusaka", "Africa/Nairobi|Africa/Addis_Ababa", "Africa/Nairobi|Africa/Asmara", "Africa/Nairobi|Africa/Asmera", "Africa/Nairobi|Africa/Dar_es_Salaam", "Africa/Nairobi|Africa/Djibouti", "Africa/Nairobi|Africa/Juba", "Africa/Nairobi|Africa/Kampala", "Africa/Nairobi|Africa/Mogadishu", "Africa/Nairobi|Indian/Antananarivo", "Africa/Nairobi|Indian/Comoro", "Africa/Nairobi|Indian/Mayotte", "Africa/Tripoli|Libya", "America/Adak|America/Atka", "America/Adak|US/Aleutian", "America/Anchorage|America/Juneau", "America/Anchorage|America/Nome", "America/Anchorage|America/Sitka", "America/Anchorage|America/Yakutat", "America/Anchorage|US/Alaska", "America/Campo_Grande|America/Cuiaba", "America/Chicago|America/Indiana/Knox", "America/Chicago|America/Indiana/Tell_City", "America/Chicago|America/Knox_IN", "America/Chicago|America/Matamoros", "America/Chicago|America/Menominee", "America/Chicago|America/North_Dakota/Beulah", "America/Chicago|America/North_Dakota/Center", "America/Chicago|America/North_Dakota/New_Salem", "America/Chicago|America/Rainy_River", "America/Chicago|America/Rankin_Inlet", "America/Chicago|America/Resolute", "America/Chicago|America/Winnipeg", "America/Chicago|CST6CDT", "America/Chicago|Canada/Central", "America/Chicago|US/Central", "America/Chicago|US/Indiana-Starke", "America/Chihuahua|America/Mazatlan", "America/Chihuahua|Mexico/BajaSur", "America/Denver|America/Boise", "America/Denver|America/Cambridge_Bay", "America/Denver|America/Edmonton", "America/Denver|America/Inuvik", "America/Denver|America/Ojinaga", "America/Denver|America/Shiprock", "America/Denver|America/Yellowknife", "America/Denver|Canada/Mountain", "America/Denver|MST7MDT", "America/Denver|Navajo", "America/Denver|US/Mountain", "America/Fortaleza|America/Argentina/Buenos_Aires", "America/Fortaleza|America/Argentina/Catamarca", "America/Fortaleza|America/Argentina/ComodRivadavia", "America/Fortaleza|America/Argentina/Cordoba", "America/Fortaleza|America/Argentina/Jujuy", "America/Fortaleza|America/Argentina/La_Rioja", "America/Fortaleza|America/Argentina/Mendoza", "America/Fortaleza|America/Argentina/Rio_Gallegos", "America/Fortaleza|America/Argentina/Salta", "America/Fortaleza|America/Argentina/San_Juan", "America/Fortaleza|America/Argentina/San_Luis", "America/Fortaleza|America/Argentina/Tucuman", "America/Fortaleza|America/Argentina/Ushuaia", "America/Fortaleza|America/Belem", "America/Fortaleza|America/Buenos_Aires", "America/Fortaleza|America/Catamarca", "America/Fortaleza|America/Cayenne", "America/Fortaleza|America/Cordoba", "America/Fortaleza|America/Jujuy", "America/Fortaleza|America/Maceio", "America/Fortaleza|America/Mendoza", "America/Fortaleza|America/Paramaribo", "America/Fortaleza|America/Recife", "America/Fortaleza|America/Rosario", "America/Fortaleza|America/Santarem", "America/Fortaleza|Antarctica/Rothera", "America/Fortaleza|Atlantic/Stanley", "America/Fortaleza|Etc/GMT+3", "America/Halifax|America/Glace_Bay", "America/Halifax|America/Goose_Bay", "America/Halifax|America/Moncton", "America/Halifax|America/Thule", "America/Halifax|Atlantic/Bermuda", "America/Halifax|Canada/Atlantic", "America/Havana|Cuba", "America/La_Paz|America/Boa_Vista", "America/La_Paz|America/Guyana", "America/La_Paz|America/Manaus", "America/La_Paz|America/Porto_Velho", "America/La_Paz|Brazil/West", "America/La_Paz|Etc/GMT+4", "America/Lima|America/Bogota", "America/Lima|America/Guayaquil", "America/Lima|Etc/GMT+5", "America/Los_Angeles|America/Dawson", "America/Los_Angeles|America/Ensenada", "America/Los_Angeles|America/Santa_Isabel", "America/Los_Angeles|America/Tijuana", "America/Los_Angeles|America/Vancouver", "America/Los_Angeles|America/Whitehorse", "America/Los_Angeles|Canada/Pacific", "America/Los_Angeles|Canada/Yukon", "America/Los_Angeles|Mexico/BajaNorte", "America/Los_Angeles|PST8PDT", "America/Los_Angeles|US/Pacific", "America/Los_Angeles|US/Pacific-New", "America/Managua|America/Belize", "America/Managua|America/Costa_Rica", "America/Managua|America/El_Salvador", "America/Managua|America/Guatemala", "America/Managua|America/Regina", "America/Managua|America/Swift_Current", "America/Managua|America/Tegucigalpa", "America/Managua|Canada/Saskatchewan", "America/Mexico_City|America/Bahia_Banderas", "America/Mexico_City|America/Merida", "America/Mexico_City|America/Monterrey", "America/Mexico_City|Mexico/General", "America/New_York|America/Detroit", "America/New_York|America/Fort_Wayne", "America/New_York|America/Indiana/Indianapolis", "America/New_York|America/Indiana/Marengo", "America/New_York|America/Indiana/Petersburg", "America/New_York|America/Indiana/Vevay", "America/New_York|America/Indiana/Vincennes", "America/New_York|America/Indiana/Winamac", "America/New_York|America/Indianapolis", "America/New_York|America/Iqaluit", "America/New_York|America/Kentucky/Louisville", "America/New_York|America/Kentucky/Monticello", "America/New_York|America/Louisville", "America/New_York|America/Montreal", "America/New_York|America/Nassau", "America/New_York|America/Nipigon", "America/New_York|America/Pangnirtung", "America/New_York|America/Thunder_Bay", "America/New_York|America/Toronto", "America/New_York|Canada/Eastern", "America/New_York|EST5EDT", "America/New_York|US/East-Indiana", "America/New_York|US/Eastern", "America/New_York|US/Michigan", "America/Noronha|Atlantic/South_Georgia", "America/Noronha|Brazil/DeNoronha", "America/Noronha|Etc/GMT+2", "America/Panama|America/Atikokan", "America/Panama|America/Cayman", "America/Panama|America/Coral_Harbour", "America/Panama|America/Jamaica", "America/Panama|EST", "America/Panama|Jamaica", "America/Phoenix|America/Creston", "America/Phoenix|America/Dawson_Creek", "America/Phoenix|America/Hermosillo", "America/Phoenix|MST", "America/Phoenix|US/Arizona", "America/Rio_Branco|America/Eirunepe", "America/Rio_Branco|America/Porto_Acre", "America/Rio_Branco|Brazil/Acre", "America/Santiago|Chile/Continental", "America/Santo_Domingo|America/Anguilla", "America/Santo_Domingo|America/Antigua", "America/Santo_Domingo|America/Aruba", "America/Santo_Domingo|America/Barbados", "America/Santo_Domingo|America/Blanc-Sablon", "America/Santo_Domingo|America/Curacao", "America/Santo_Domingo|America/Dominica", "America/Santo_Domingo|America/Grenada", "America/Santo_Domingo|America/Guadeloupe", "America/Santo_Domingo|America/Kralendijk", "America/Santo_Domingo|America/Lower_Princes", "America/Santo_Domingo|America/Marigot", "America/Santo_Domingo|America/Martinique", "America/Santo_Domingo|America/Montserrat", "America/Santo_Domingo|America/Port_of_Spain", "America/Santo_Domingo|America/Puerto_Rico", "America/Santo_Domingo|America/St_Barthelemy", "America/Santo_Domingo|America/St_Kitts", "America/Santo_Domingo|America/St_Lucia", "America/Santo_Domingo|America/St_Thomas", "America/Santo_Domingo|America/St_Vincent", "America/Santo_Domingo|America/Tortola", "America/Santo_Domingo|America/Virgin", "America/Sao_Paulo|Brazil/East", "America/St_Johns|Canada/Newfoundland", "Antarctica/Palmer|America/Punta_Arenas", "Asia/Baghdad|Antarctica/Syowa", "Asia/Baghdad|Asia/Aden", "Asia/Baghdad|Asia/Bahrain", "Asia/Baghdad|Asia/Kuwait", "Asia/Baghdad|Asia/Qatar", "Asia/Baghdad|Asia/Riyadh", "Asia/Baghdad|Etc/GMT-3", "Asia/Baghdad|Europe/Minsk", "Asia/Bangkok|Asia/Ho_Chi_Minh", "Asia/Bangkok|Asia/Novokuznetsk", "Asia/Bangkok|Asia/Phnom_Penh", "Asia/Bangkok|Asia/Saigon", "Asia/Bangkok|Asia/Vientiane", "Asia/Bangkok|Etc/GMT-7", "Asia/Bangkok|Indian/Christmas", "Asia/Dhaka|Antarctica/Vostok", "Asia/Dhaka|Asia/Almaty", "Asia/Dhaka|Asia/Bishkek", "Asia/Dhaka|Asia/Dacca", "Asia/Dhaka|Asia/Kashgar", "Asia/Dhaka|Asia/Qyzylorda", "Asia/Dhaka|Asia/Thimbu", "Asia/Dhaka|Asia/Thimphu", "Asia/Dhaka|Asia/Urumqi", "Asia/Dhaka|Etc/GMT-6", "Asia/Dhaka|Indian/Chagos", "Asia/Dili|Etc/GMT-9", "Asia/Dili|Pacific/Palau", "Asia/Dubai|Asia/Muscat", "Asia/Dubai|Asia/Tbilisi", "Asia/Dubai|Asia/Yerevan", "Asia/Dubai|Etc/GMT-4", "Asia/Dubai|Europe/Samara", "Asia/Dubai|Indian/Mahe", "Asia/Dubai|Indian/Mauritius", "Asia/Dubai|Indian/Reunion", "Asia/Gaza|Asia/Hebron", "Asia/Hong_Kong|Hongkong", "Asia/Jakarta|Asia/Pontianak", "Asia/Jerusalem|Asia/Tel_Aviv", "Asia/Jerusalem|Israel", "Asia/Kamchatka|Asia/Anadyr", "Asia/Kamchatka|Etc/GMT-12", "Asia/Kamchatka|Kwajalein", "Asia/Kamchatka|Pacific/Funafuti", "Asia/Kamchatka|Pacific/Kwajalein", "Asia/Kamchatka|Pacific/Majuro", "Asia/Kamchatka|Pacific/Nauru", "Asia/Kamchatka|Pacific/Tarawa", "Asia/Kamchatka|Pacific/Wake", "Asia/Kamchatka|Pacific/Wallis", "Asia/Kathmandu|Asia/Katmandu", "Asia/Kolkata|Asia/Calcutta", "Asia/Kuala_Lumpur|Asia/Brunei", "Asia/Kuala_Lumpur|Asia/Kuching", "Asia/Kuala_Lumpur|Asia/Singapore", "Asia/Kuala_Lumpur|Etc/GMT-8", "Asia/Kuala_Lumpur|Singapore", "Asia/Makassar|Asia/Ujung_Pandang", "Asia/Rangoon|Asia/Yangon", "Asia/Rangoon|Indian/Cocos", "Asia/Seoul|ROK", "Asia/Shanghai|Asia/Chongqing", "Asia/Shanghai|Asia/Chungking", "Asia/Shanghai|Asia/Harbin", "Asia/Shanghai|Asia/Macao", "Asia/Shanghai|Asia/Macau", "Asia/Shanghai|Asia/Taipei", "Asia/Shanghai|PRC", "Asia/Shanghai|ROC", "Asia/Tashkent|Antarctica/Mawson", "Asia/Tashkent|Asia/Aqtau", "Asia/Tashkent|Asia/Aqtobe", "Asia/Tashkent|Asia/Ashgabat", "Asia/Tashkent|Asia/Ashkhabad", "Asia/Tashkent|Asia/Atyrau", "Asia/Tashkent|Asia/Dushanbe", "Asia/Tashkent|Asia/Oral", "Asia/Tashkent|Asia/Samarkand", "Asia/Tashkent|Etc/GMT-5", "Asia/Tashkent|Indian/Kerguelen", "Asia/Tashkent|Indian/Maldives", "Asia/Tehran|Iran", "Asia/Tokyo|Japan", "Asia/Ulaanbaatar|Asia/Choibalsan", "Asia/Ulaanbaatar|Asia/Ulan_Bator", "Asia/Vladivostok|Asia/Ust-Nera", "Asia/Yakutsk|Asia/Khandyga", "Atlantic/Azores|America/Scoresbysund", "Atlantic/Cape_Verde|Etc/GMT+1", "Australia/Adelaide|Australia/Broken_Hill", "Australia/Adelaide|Australia/South", "Australia/Adelaide|Australia/Yancowinna", "Australia/Brisbane|Australia/Lindeman", "Australia/Brisbane|Australia/Queensland", "Australia/Darwin|Australia/North", "Australia/Lord_Howe|Australia/LHI", "Australia/Perth|Australia/West", "Australia/Sydney|Australia/ACT", "Australia/Sydney|Australia/Canberra", "Australia/Sydney|Australia/Currie", "Australia/Sydney|Australia/Hobart", "Australia/Sydney|Australia/Melbourne", "Australia/Sydney|Australia/NSW", "Australia/Sydney|Australia/Tasmania", "Australia/Sydney|Australia/Victoria", "Etc/UCT|UCT", "Etc/UTC|Etc/Universal", "Etc/UTC|Etc/Zulu", "Etc/UTC|UTC", "Etc/UTC|Universal", "Etc/UTC|Zulu", "Europe/Athens|Asia/Nicosia", "Europe/Athens|EET", "Europe/Athens|Europe/Bucharest", "Europe/Athens|Europe/Helsinki", "Europe/Athens|Europe/Kiev", "Europe/Athens|Europe/Mariehamn", "Europe/Athens|Europe/Nicosia", "Europe/Athens|Europe/Riga", "Europe/Athens|Europe/Sofia", "Europe/Athens|Europe/Tallinn", "Europe/Athens|Europe/Uzhgorod", "Europe/Athens|Europe/Vilnius", "Europe/Athens|Europe/Zaporozhye", "Europe/Chisinau|Europe/Tiraspol", "Europe/Dublin|Eire", "Europe/Istanbul|Asia/Istanbul", "Europe/Istanbul|Turkey", "Europe/Lisbon|Atlantic/Canary", "Europe/Lisbon|Atlantic/Faeroe", "Europe/Lisbon|Atlantic/Faroe", "Europe/Lisbon|Atlantic/Madeira", "Europe/Lisbon|Portugal", "Europe/Lisbon|WET", "Europe/London|Europe/Belfast", "Europe/London|Europe/Guernsey", "Europe/London|Europe/Isle_of_Man", "Europe/London|Europe/Jersey", "Europe/London|GB", "Europe/London|GB-Eire", "Europe/Moscow|W-SU", "Europe/Paris|Africa/Ceuta", "Europe/Paris|Arctic/Longyearbyen", "Europe/Paris|Atlantic/Jan_Mayen", "Europe/Paris|CET", "Europe/Paris|Europe/Amsterdam", "Europe/Paris|Europe/Andorra", "Europe/Paris|Europe/Belgrade", "Europe/Paris|Europe/Berlin", "Europe/Paris|Europe/Bratislava", "Europe/Paris|Europe/Brussels", "Europe/Paris|Europe/Budapest", "Europe/Paris|Europe/Busingen", "Europe/Paris|Europe/Copenhagen", "Europe/Paris|Europe/Gibraltar", "Europe/Paris|Europe/Ljubljana", "Europe/Paris|Europe/Luxembourg", "Europe/Paris|Europe/Madrid", "Europe/Paris|Europe/Malta", "Europe/Paris|Europe/Monaco", "Europe/Paris|Europe/Oslo", "Europe/Paris|Europe/Podgorica", "Europe/Paris|Europe/Prague", "Europe/Paris|Europe/Rome", "Europe/Paris|Europe/San_Marino", "Europe/Paris|Europe/Sarajevo", "Europe/Paris|Europe/Skopje", "Europe/Paris|Europe/Stockholm", "Europe/Paris|Europe/Tirane", "Europe/Paris|Europe/Vaduz", "Europe/Paris|Europe/Vatican", "Europe/Paris|Europe/Vienna", "Europe/Paris|Europe/Warsaw", "Europe/Paris|Europe/Zagreb", "Europe/Paris|Europe/Zurich", "Europe/Paris|Poland", "Europe/Ulyanovsk|Europe/Astrakhan", "Pacific/Auckland|Antarctica/McMurdo", "Pacific/Auckland|Antarctica/South_Pole", "Pacific/Auckland|NZ", "Pacific/Chatham|NZ-CHAT", "Pacific/Easter|Chile/EasterIsland", "Pacific/Fakaofo|Etc/GMT-13", "Pacific/Fakaofo|Pacific/Enderbury", "Pacific/Galapagos|Etc/GMT+6", "Pacific/Gambier|Etc/GMT+9", "Pacific/Guadalcanal|Antarctica/Macquarie", "Pacific/Guadalcanal|Etc/GMT-11", "Pacific/Guadalcanal|Pacific/Efate", "Pacific/Guadalcanal|Pacific/Kosrae", "Pacific/Guadalcanal|Pacific/Noumea", "Pacific/Guadalcanal|Pacific/Pohnpei", "Pacific/Guadalcanal|Pacific/Ponape", "Pacific/Guam|Pacific/Saipan", "Pacific/Honolulu|HST", "Pacific/Honolulu|Pacific/Johnston", "Pacific/Honolulu|US/Hawaii", "Pacific/Kiritimati|Etc/GMT-14", "Pacific/Niue|Etc/GMT+11", "Pacific/Pago_Pago|Pacific/Midway", "Pacific/Pago_Pago|Pacific/Samoa", "Pacific/Pago_Pago|US/Samoa", "Pacific/Pitcairn|Etc/GMT+8", "Pacific/Port_Moresby|Antarctica/DumontDUrville", "Pacific/Port_Moresby|Etc/GMT-10", "Pacific/Port_Moresby|Pacific/Chuuk", "Pacific/Port_Moresby|Pacific/Truk", "Pacific/Port_Moresby|Pacific/Yap", "Pacific/Tahiti|Etc/GMT+10", "Pacific/Tahiti|Pacific/Rarotonga"]
    }),
    A
});
var language = new Object();

language["cs"] = {
    "fromGenerator": "Aktuálně se vyrábí {{watt}}, což odpovídá využití {{percent}}.",
    "fromGeneratorZero": "Aktuálně se nevyrábí žádná solární energie.",
    "utilization": "Využití {{percent}}",
    "selfSufficient": "Soběstačnost {{percent}}",
    "feedIn": "Dodávka {{percent}}",
    "usage": "Odběr {{percent}}",
    "toConsumer": "Spotřeba je {{watt}} a je z {{percent}} pokryta vlastní výrobou.",
    "toConsumerOPOnly": "Spotřeba je {{watt}} a je plně pokryta vlastní výrobou.",
    "toConsumerGridOnly": "Spotřeba je {{watt}} a je plně pokryta ze sítě.",
    "toConsumerZero": "Aktuálně se nespotřebovává žádná energie.",
    "fromGrid": "Ze sítě se odebírá {{watt}}.",
    "gridZero": "Aktuálně není proud odebírán ze sítě ani dodáván do sítě.",
    "toGrid": "Do sítě se dodává {{watt}}.",
    "notAvailable": "Není k dispozici",
    "loading": "Data se načítají...",
    "offline": "Offline",
    "clickHint": "Po klepnutí na symboly získáte další informace.",
    "stateOfCharge": "Stav nabití {{percent}}",
    "batteryCharging": "Akumulátor se nabíjí s výkonem {{watt}} a stav nabití je {{percent}}.",
    "batteryDischarging": "Akumulátor se vybíjí s výkonem {{watt}} a stav nabití je {{percent}}.",
    "smartMeterLink": "http://www.fronius.com/productinfo/en/energymeter",
    "batteryLink": "http://www.fronius.com/productinfo/en/battery",
    "noCarePackage": "Chcete-li vizualizovat Tesla Powerwall, potřebujete Tesla Care Package – kontaktujte instalátorskou firmu.",
    "disabled": "Deaktivováno",
    "serviceMode": "Servisní režim",
    "chargeBoost": "Nucené dobíjení",
    "nearlyDepleted": "Min. SOC dosažen",
    "suspended": "Energeticky úsporný režim",
    "calibration": "Kalibrační režim",
    "depletedRecovery": "Ochrana proti hlubokému vybití",
    "startup": "Start",
    "notAllOnline": "Connection problem to one or more data sources"
};

language["da"] = {
    "fromGenerator": "Der produceres netop {{watt}}, som svarer til en udnyttelse på {{percent}}.",
    "fromGeneratorZero": "Der produceres ikke solcellestrøm for øjeblikket.",
    "utilization": "Udnyttelse {{percent}}",
    "selfSufficient": "{{percent}} selvforsynende",
    "feedIn": "{{percent}} forsyning i",
    "usage": "{{percent}} forbrug",
    "toConsumer": "Forbruget er {{watt}} som dækkes med {{percent}} af egen produktion.",
    "toConsumerOPOnly": "Forbruget er {{watt}}, som dækkes helt af egen produktion.",
    "toConsumerGridOnly": "Forbruget er {{watt}}, som dækkes helt af nettet.",
    "toConsumerZero": "Der er intet strømforbrug for øjeblikket.",
    "fromGrid": "{{watt}} hentes fra nettet.",
    "gridZero": "For øjeblikket hentes der hverken strøm fra nettet eller forsynes til nettet.",
    "toGrid": "{{watt}} forsynes til nettet.",
    "notAvailable": "Ikke til rådighed",
    "loading": "Indlæser data...",
    "offline": "Offline",
    "clickHint": "Rør ved ikonerne for yderligere informationer.",
    "stateOfCharge": "Opladningstilstand {{percent}}",
    "batteryCharging": "Batteriet er ved at blive ladet op med {{watt}} og ladetilstanden er {{percent}}.",
    "batteryDischarging": "Batteriet er ved at blive afladet med {{watt}}, og ladetilstanden er {{percent}}.",
    "smartMeterLink": "http://www.fronius.com/productinfo/en/energymeter",
    "batteryLink": "http://www.fronius.com/productinfo/en/battery",
    "noCarePackage": "For at visualisere Tesla Powerwall skal du bruge Tesla Care Package - kontakt din installatør.",
    "disabled": "Deaktiveret",
    "serviceMode": "Service-modus",
    "chargeBoost": "Tvungen indlæsning",
    "nearlyDepleted": "Min. SOC nået",
    "suspended": "Energisparemodus",
    "calibration": "Kalibreringsmodus",
    "depletedRecovery": "Dybdeafladningsbeskyttelse",
    "startup": "Start",
    "notAllOnline": "Connection problem to one or more data sources"
};

language["de"] = {
    "fromGenerator": "Es werden gerade {{watt}} produziert, was einer Auslastung von {{percent}} entspricht.",
    "fromGeneratorZero": "Es wird im Moment kein Solarstrom erzeugt.",
    "utilization": "Auslastung {{percent}}",
    "selfSufficient": "{{percent}} autark",
    "feedIn": "{{percent}} Einspeisung",
    "usage": "{{percent}} Bezug",
    "toConsumer": "Der Verbrauch beträgt {{watt}} und wird zu {{percent}} durch Eigenproduktion gedeckt.",
    "toConsumerOPOnly": "Der Verbrauch beträgt {{watt}} und wird vollständig durch Eigenproduktion gedeckt.",
    "toConsumerGridOnly": "Der Verbrauch beträgt {{watt}} und wird vollständig vom Netz gedeckt.",
    "toConsumerZero": "Es wird im Moment kein Strom verbraucht.",
    "fromGrid": "Es werden {{watt}} aus dem Netz bezogen.",
    "gridZero": "Es wird im Moment weder Strom aus dem Netz bezogen noch ins Netz eingespeist.",
    "toGrid": "Es werden {{watt}} ins Netz eingespeist.",
    "notAvailable": "Nicht verfügbar",
    "loading": "Lade Daten...",
    "offline": "Offline",
    "clickHint": "Tippen Sie auf die Symbole, um weitere Informationen zu erhalten.",
    "stateOfCharge": "Ladezustand {{percent}}",
    "batteryCharging": "Die Batterie wird mit {{watt}} geladen und der Ladestand beträgt {{percent}}.",
    "batteryDischarging": "Die Batterie wird mit {{watt}} entladen und der Ladestand beträgt {{percent}}.",
    "smartMeterLink": "http://www.fronius.com/productinfo/de/energymeter",
    "batteryLink": "http://www.fronius.com/productinfo/de/battery",
    "noCarePackage": "Um die Tesla Powerwall zu visualisieren, benötigen Sie das Tesla Care Package – bitte kontaktieren Sie Ihren Installateur.",
    "disabled": "Deaktiviert",
    "serviceMode": "Service Modus",
    "chargeBoost": "Erzwungene Nachladung",
    "nearlyDepleted": "Min. SOC erreicht",
    "suspended": "Energiesparmodus",
    "calibration": "Kalibriermodus",
    "depletedRecovery": "Tiefentladungsschutz",
    "startup": "Start",
    "notAllOnline": "Verbindungsproblem zu einer oder mehreren Datenquellen"
};

language["el"] = {
    "fromGenerator": "Παράγονται {{watt}} ηλιακής ενέργειας που αντιστοιχούν σε {{percent}} χρήσης.",
    "fromGeneratorZero": "Αυτήν τη στιγμή δεν παράγεται καθόλου ηλιακή ενέργεια.",
    "utilization": "Βαθμός χρήσης {{percent}}",
    "selfSufficient": "Αυτάρκεια {{percent}}",
    "feedIn": "Τροφοδότηση {{percent}}",
    "usage": "Χρήση {{percent}}",
    "toConsumer": "Η κατανάλωση είναι {{watt}} η οποία καλύπτεται έως {{percent}} από την ιδία παραγωγή.",
    "toConsumerOPOnly": "Η κατανάλωση είναι {{watt}} η οποία καλύπτεται εξ ολοκλήρου από την ιδία παραγωγή.",
    "toConsumerGridOnly": "Η κατανάλωση είναι {{watt}} η οποία καλύπτεται εξ ολοκλήρου από το δίκτυο.",
    "toConsumerZero": "Αυτήν τη στιγμή δεν υπάρχει κατανάλωση ρεύματος.",
    "fromGrid": "Το δίκτυο παρέχει {{watt}}.",
    "gridZero": "Αυτήν τη στιγμή δεν παρέχεται ρεύμα από το δίκτυο, ούτε τροφοδοτείται ρεύμα στο δίκτυο.",
    "toGrid": "Το δίκτυο τροφοδοτείται με {{watt}}.",
    "notAvailable": "Δεν διατίθεται",
    "loading": "Φόρτωση δεδομένων...",
    "offline": "Εκτός σύνδεσης",
    "clickHint": "Πατήστε τα εικονίδια για να δείτε περισσότερες πληροφορίες.",
    "stateOfCharge": "Κατάσταση φόρτισης {{percent}}",
    "batteryCharging": "Η μπαταρία φορτίζεται με {{watt}} και η κατάσταση φόρτισης είναι {{percent}}.",
    "batteryDischarging": "Η μπαταρία αποφορτίζεται με {{watt}} και η κατάσταση φόρτισης είναι {{percent}}.",
    "smartMeterLink": "http://www.fronius.com/productinfo/en/energymeter",
    "batteryLink": "http://www.fronius.com/productinfo/en/battery",
    "noCarePackage": "Για την απεικόνιση του Tesla Powerwall χρειάζεστε ένα Tesla Care Package - επικοινωνήστε με τον εγκαταστάτη σας.",
    "disabled": "Απενεργοποιημένο",
    "serviceMode": "Λειτουργία σέρβις",
    "chargeBoost": "Αναγκαστική φόρτιση",
    "nearlyDepleted": "Επιτεύχθηκε η ελάχιστη κατάσταση φόρτισης",
    "suspended": "Λειτουργία εξοικονόμησης ενέργειας",
    "calibration": "Λειτουργία βαθμονόμησης",
    "depletedRecovery": "Προστασία από πλήρη εκφόρτιση",
    "startup": "Έναρξη",
    "notAllOnline": "Connection problem to one or more data sources"
};

language["en"] = {
    "fromGenerator": "{{watt}} of solar energy is produced which corresponds to {{percent}} utilization.",
    "fromGeneratorZero": "At the moment no solar energy is being produced.",
    "utilization": "Utilization {{percent}}",
    "selfSufficient": "{{percent}} self-sufficient",
    "feedIn": "{{percent}} feed in",
    "usage": "{{percent}} usage",
    "toConsumer": "The consumption is {{watt}} and your PV system is supplying {{percent}}.",
    "toConsumerOPOnly": "The consumption is {{watt}} which is supplied entirely by your production.",
    "toConsumerGridOnly": "The consumption is {{watt}} which is supplied entirely by the grid.",
    "toConsumerZero": "Currently you have no power consumption.",
    "fromGrid": "{{watt}} are being drawn from the grid.",
    "gridZero": "Currently you are not supplying or consuming energy from the grid.",
    "toGrid": "{{watt}} are being fed into the grid.",
    "notAvailable": "Not available",
    "loading": "Loading data...",
    "offline": "Offline",
    "clickHint": "Tap the icons to get more information.",
    "stateOfCharge": "State of charge {{percent}}",
    "batteryCharging": "The battery is being charged with {{watt}} and the state of charge is {{percent}}.",
    "batteryDischarging": "The battery is being discharged with {{watt}} and the state of charge is {{percent}}.",
    "smartMeterLink": "http://www.fronius.com/productinfo/en/energymeter",
    "batteryLink": "http://www.fronius.com/productinfo/en/battery",
    "noCarePackage": "To visualize your Tesla Powerwall a Tesla Care Package is required - please contact your installer.",
    "disabled": "Disabled",
    "serviceMode": "Service mode",
    "chargeBoost": "Forced loading",
    "nearlyDepleted": "Min. SOC reached",
    "suspended": "Energy-saving mode",
    "calibration": "Calibrate",
    "depletedRecovery": "Deep discharge protection",
    "startup": "Startup",
    "notAllOnline": "Connection problem to one or more data sources"
};

language["es"] = {
    "fromGenerator": "Se han generado {{watt}}, lo que corresponde a una carga del {{percent}}.",
    "fromGeneratorZero": "En este momento no se está generando energía solar.",
    "utilization": "Utilización {{percent}}",
    "selfSufficient": "{{percent}} autosuficiente",
    "feedIn": "Suministro: {{percent}}",
    "usage": "Uso: {{percent}}",
    "toConsumer": "El consumo es de {{watt}}, de los cuales el {{percent}} son autogenerados.",
    "toConsumerOPOnly": "El consumo es de {{watt}} y toda la energía es autogenerada.",
    "toConsumerGridOnly": "El consumo es de {{watt}} y se cubre toda la energía a través de la red.",
    "toConsumerZero": "En este momento no se está consumiendo energía.",
    "fromGrid": "Se están obteniendo {{watt}} de la red.",
    "gridZero": "En este momento no se está utilizando ni suministrando energía a la red.",
    "toGrid": "Se están suministrando {{watt}} a la red.",
    "notAvailable": "No disponible",
    "loading": "Cargando datos...",
    "offline": "Offline",
    "clickHint": "Pulse sobre los símbolos para obtener más información.",
    "stateOfCharge": "Estado de carga {{percent}}",
    "batteryCharging": "La batería se ha cargado con {{watt}} y su estado de carga es del {{percent}}.",
    "batteryDischarging": "Se han descargado {{watt}} de la batería y su estado de carga es del {{percent}}.",
    "smartMeterLink": "http://www.fronius.com/productinfo/en/energymeter",
    "batteryLink": "http://www.fronius.com/productinfo/en/battery",
    "noCarePackage": "Para poder visualizar la Tesla Powerwall, se requiere el Tesla Care Package. Póngase en contacto con el instalador.",
    "disabled": "Desactivado",
    "serviceMode": "Modo de servicio",
    "chargeBoost": "Recarga forzada",
    "nearlyDepleted": "SOC mín. alcanzado",
    "suspended": "Modo de ahorro de energía",
    "calibration": "Modo de calibración",
    "depletedRecovery": "Protección contra descarga total",
    "startup": "Arranque",
    "notAllOnline": "Connection problem to one or more data sources"
};

language["fr"] = {
    "fromGenerator": "{{watt}} d'énergie solaire sont générés ce qui correspond à {{percent}} d'utilisation.",
    "fromGeneratorZero": "En ce moment, aucune énergie solaire n'est générée.",
    "utilization": "Utilisation {{percent}}",
    "selfSufficient": "{{percent}}  d'autonomie",
    "feedIn": "{{percent}} d'alimentation",
    "usage": "{{percent}} d'utilisation",
    "toConsumer": "La consommation de {{watt}}  est couverte à hauteur de {{percent}} par la propre production.",
    "toConsumerOPOnly": "La consommation de {{watt}} est entièrement couverte par la propre production.",
    "toConsumerGridOnly": "La consommation de {{watt}} est entièrement couverte par le réseau électrique.",
    "toConsumerZero": "Il n'y a aucune consommation de courant en ce moment.",
    "fromGrid": "{{watt}} sont prélevés du réseau électrique.",
    "gridZero": "En ce moment, aucun courant n'est prélevé ou injecté dans le réseau électrique.",
    "toGrid": "{{watt}} sont injectés dans le réseau électrique.",
    "notAvailable": "Indisponible",
    "loading": "Chargement de données en cours",
    "offline": "Hors ligne",
    "clickHint": "Appuyer sur les icônes pour plus d'informations.",
    "stateOfCharge": "État de charge {{percent}}",
    "batteryCharging": "La batterie est chargée de {{watt}} et son état de charge est de {{percent}}.",
    "batteryDischarging": "La batterie est déchargée de {{watt}} et son état de charge est de {{percent}}.",
    "smartMeterLink": "http://www.fronius.com/productinfo/en/energymeter",
    "batteryLink": "http://www.fronius.com/productinfo/en/battery",
    "noCarePackage": "Pour visualiser votre Tesla Powerwall, un Tesla Care Package est nécessaire - veuillez contacter votre installateur.",
    "disabled": "Désactivé",
    "serviceMode": "Mode de service",
    "chargeBoost": "Recharge forcée",
    "nearlyDepleted": "ÉdC min. atteint",
    "suspended": "Mode d'économie d'énergie",
    "calibration": "Mode de calibrage",
    "depletedRecovery": "Protection contre la décharge profonde",
    "startup": "Démarrer",
    "notAllOnline": "Connection problem to one or more data sources"
};

language["hu"] = {
    "fromGenerator": "{{watt}} napenergia termelődik, ami {{percent}}-os kihasználtságnak felel meg.",
    "fromGeneratorZero": "Jelenleg nem termelődik napenergia.",
    "utilization": "Kihasználtság {{percent}}",
    "selfSufficient": "{{percent}}-ban önellátó",
    "feedIn": "{{percent}} betáplálás",
    "usage": "{{percent}} használat",
    "toConsumer": "A fogyasztás {{watt}}, ami {{percent}}-ban saját termelésből van fedezve.",
    "toConsumerOPOnly": "A fogyasztás {{watt}}, ami teljes mértékben saját termelésből van fedezve.",
    "toConsumerGridOnly": "A fogyasztás {{watt}}, ami teljes mértékben hálózatról van fedezve.",
    "toConsumerZero": "Jelenleg nincs energiafogyasztás.",
    "fromGrid": "{{watt}} teljesítményfelvétel a hálózatról.",
    "gridZero": "A készülék jelenleg nem vesz fel áramot a hálózatról, és nem táplál be áramot oda.",
    "toGrid": "{{watt}} betáplálás a hálózatra.",
    "notAvailable": "Nem elérhető",
    "loading": "Adatok betöltése...",
    "offline": "Offline",
    "clickHint": "További információkért érintse meg az ikonokat.",
    "stateOfCharge": "Töltöttségi szint {{percent}}",
    "batteryCharging": "Az akkumulátor {{watt}} teljesítménnyel töltődik, a töltöttség állapota {{percent}}.",
    "batteryDischarging": "Az akkumulátor {{watt}} teljesítményt ad le, a töltöttség állapota {{percent}}.",
    "smartMeterLink": "http://www.fronius.com/productinfo/en/energymeter",
    "batteryLink": "http://www.fronius.com/productinfo/en/battery",
    "noCarePackage": "A Tesla Powerwall megjelenítéséhez a Tesla Care Package szükséges – lépjen kapcsolatba a telepítővel.",
    "disabled": "deaktiválva",
    "serviceMode": "Szerviz üzemmód",
    "chargeBoost": "Kényszerített utántöltés",
    "nearlyDepleted": "Min. töltöttségi szint elérve",
    "suspended": "Energiatakarékos üzemmód",
    "calibration": "Kalibráló mód",
    "depletedRecovery": "Mélykisütési védelem",
    "startup": "Start",
    "notAllOnline": "Connection problem to one or more data sources"
};

language["it"] = {
    "fromGenerator": "Si stanno producendo {{watt}} di energia fotovoltaica, corrispondente a uno sfruttamento pari a {{percent}}.",
    "fromGeneratorZero": "Al momento non si sta producendo energia fotovoltaica.",
    "utilization": "Condizioni di carico {{percent}}",
    "selfSufficient": "Autonomia {{percent}}",
    "feedIn": "Alimentazione {{percent}}",
    "usage": "Consumo {{percent}}",
    "toConsumer": "Il consumo è di {{watt}} e viene coperto per il {{percent}} dall'autoproduzione.",
    "toConsumerOPOnly": "Il consumo è di {{watt}} e viene interamente coperto dall'autoproduzione.",
    "toConsumerGridOnly": "Il consumo è di {{watt}} e viene interamente coperto dalla rete.",
    "toConsumerZero": "Al momento non si sta consumando corrente.",
    "fromGrid": "Si stanno consumando {{watt}} dalla rete.",
    "gridZero": "Al momento non si sta né consumando corrente dalla rete né alimentando corrente nella rete.",
    "toGrid": "Si stanno alimentando {{watt}} nella rete.",
    "notAvailable": "Non disponibile",
    "loading": "Caricamento dati in corso...",
    "offline": "Offline",
    "clickHint": "Toccare le icone per ricevere ulteriori informazioni.",
    "stateOfCharge": "Stato di carica {{percent}}",
    "batteryCharging": "Si sta caricando la batteria con {{watt}} e lo stato di carica è pari a {{percent}}.",
    "batteryDischarging": "Si sta scaricando la batteria con {{watt}} e lo stato di carica è pari a {{percent}}.",
    "smartMeterLink": "http://www.fronius.com/productinfo/en/energymeter",
    "batteryLink": "http://www.fronius.com/productinfo/en/battery",
    "noCarePackage": "Per visualizzare Tesla Powerwall è necessario un Tesla Care Package. Contattare il proprio installatore.",
    "disabled": "Disattivata",
    "serviceMode": "Modalità Servizio",
    "chargeBoost": "Ricarica forzata",
    "nearlyDepleted": "SOC min. raggiunto",
    "suspended": "Modalità Risparmio energetico",
    "calibration": "Modalità Calibratura",
    "depletedRecovery": "Protezione contro lo scaricamento completo",
    "startup": "Avvia",
    "notAllOnline": "Connection problem to one or more data sources"
};

language["nl"] = {
    "fromGenerator": "Er wordt momenteel {{watt}} aan zonne-energie opgewekt. Dit komt overeen met {{percent}} van het verbruik.",
    "fromGeneratorZero": "Er wordt momenteel geen zonne-energie opgewekt.",
    "utilization": "Bezettingsgraad {{percent}}",
    "selfSufficient": "{{percent}} zelfvoorzienend",
    "feedIn": "{{percent}} levering aan het net",
    "usage": "{{percent}} verbruik",
    "toConsumer": "Het verbruik is {{watt}}. Dit wordt voor {{percent}} gedekt door zelf opgewekte energie.",
    "toConsumerOPOnly": "Het verbruik is {{watt}}. Dit wordt volledig gedekt door zelf opgewekte energie.",
    "toConsumerGridOnly": "Het verbruik is {{watt}}. Dit wordt volledig gedekt door netstroom.",
    "toConsumerZero": "Er wordt momenteel geen stroom verbruikt.",
    "fromGrid": "Er wordt {{watt}} betrokken van het elektriciteitsnet.",
    "gridZero": "Er wordt momenteel geen stroom betrokken van of geleverd aan het elektriciteitsnet.",
    "toGrid": "{{watt}} wordt aan het elektriciteitsnet geleverd.",
    "notAvailable": "Niet beschikbaar",
    "loading": "Gegevens laden...",
    "offline": "Offline",
    "clickHint": "Tik voor meer informatie op de pictogrammen.",
    "stateOfCharge": "Laadtoestand {{percent}}",
    "batteryCharging": "De batterij wordt met {{watt}} opgeladen. De laadstatus is {{percent}}.",
    "batteryDischarging": "De batterij wordt met {{watt}} ontladen. De laadstatus is {{percent}}.",
    "smartMeterLink": "http://www.fronius.com/productinfo/en/energymeter",
    "batteryLink": "http://www.fronius.com/productinfo/en/battery",
    "noCarePackage": "Om de Tesla Powerwall te visualiseren, heeft u het Tesla Care Package nodig - neem contact op met uw installateur.",
    "disabled": "Uitgeschakeld",
    "serviceMode": "Servicemodus",
    "chargeBoost": "Geforceerd bijladen",
    "nearlyDepleted": "Min. SOC bereikt",
    "suspended": "Energiebesparingsmodus",
    "calibration": "Kalibratiemodus",
    "depletedRecovery": "Bescherming tegen diepontlading",
    "startup": "Opstarten",
    "notAllOnline": "Connection problem to one or more data sources"
};

language["pl"] = {
    "fromGenerator": "Obecnie wytwarzane jest {{watt}} energii słonecznej, co odpowiada {{percent}} wykorzystania.",
    "fromGeneratorZero": "W tej chwili nie jest wytwarzana energia słoneczna.",
    "utilization": "Wykorzystanie {{percent}}",
    "selfSufficient": "{{percent}} samowystarczalności",
    "feedIn": "Zasilanie {{percent}}",
    "usage": "Wykorzystanie {{percent}}",
    "toConsumer": "Zużycie wynosi {{watt}} i jest w {{percent}} pokryte przez produkcję własną.",
    "toConsumerOPOnly": "Zużycie wynosi {{watt}} i jest całkowicie pokryte przez produkcję własną.",
    "toConsumerGridOnly": "Zużycie wynosi {{watt}} i jest całkowicie pokryte przez sieć.",
    "toConsumerZero": "W tej chwili nie występuje zużycie prądu.",
    "fromGrid": "Odbywa się pobieranie {{watt}} z sieci.",
    "gridZero": "Obecnie prąd nie jest pobierany z sieci ani dostarczany do sieci.",
    "toGrid": "{{watt}} jest dostarczane do sieci.",
    "notAvailable": "Niedostępny",
    "loading": "Wczytywanie danych...",
    "offline": "Offline",
    "clickHint": "Dotknij ikon, aby uzyskać więcej informacji.",
    "stateOfCharge": "Stan naładowania {{percent}}",
    "batteryCharging": "Akumulator jest ładowany prądem {{watt}}, a stan naładowania wynosi {{percent}}.",
    "batteryDischarging": "Akumulator jest rozładowywany mocą {{watt}}, a stan naładowania wynosi {{percent}}.",
    "smartMeterLink": "http://www.fronius.com/productinfo/en/energymeter",
    "batteryLink": "http://www.fronius.com/productinfo/en/battery",
    "noCarePackage": "Aby zwizualizować Tesla Powerwall, potrzebny jest Tesla Care Package — skontaktuj się z instalatorem.",
    "disabled": "Nieaktywne",
    "serviceMode": "Tryb serwisowy",
    "chargeBoost": "Wymuszone doładowanie",
    "nearlyDepleted": "Osiągnięto min. SOC",
    "suspended": "Tryb oszczędzania energii",
    "calibration": "Tryb kalibracji",
    "depletedRecovery": "Zabezpieczenie przed głębokim wyładowaniem",
    "startup": "Start",
    "notAllOnline": "Connection problem to one or more data sources"
};

language["pt"] = {
    "fromGenerator": "São produzidos {{watt}} de energia solar, o que corresponde à {{percent}} da utilização.",
    "fromGeneratorZero": "No momento, não é produzido energia solar.",
    "utilization": "Utilização {{percent}}",
    "selfSufficient": "{{percent}} de autossuficiência",
    "feedIn": "{{percent}} de alimentação",
    "usage": "{{percent}} de uso",
    "toConsumer": "O consumo é de {{watt}} o que é coberto por {{percent}} da produção própria.",
    "toConsumerOPOnly": "O consumo é de {{watt}} o que é coberto completamente pela produção própria.",
    "toConsumerGridOnly": "O consumo é de {{watt}} o que é coberto completamente pela rede.",
    "toConsumerZero": "Nenhuma corrente é consumida no momento.",
    "fromGrid": "{{watt}} são obtidos da rede.",
    "gridZero": "No momento, a corrente não é obtida da rede e nem é alimentada na rede.",
    "toGrid": "{{watt}} são alimentados na rede.",
    "notAvailable": "Não disponível",
    "loading": "Carregando os dados...",
    "offline": "Offline",
    "clickHint": "Toque no símbolo para obter mais informações.",
    "stateOfCharge": "Estado da carga {{percent}}",
    "batteryCharging": "A bateria é carregada com {{watt}} e o nível de carga é de {{percent}}.",
    "batteryDischarging": "A bateria é descarregada com {{watt}} e o nível de carga é de {{percent}}.",
    "smartMeterLink": "http://www.fronius.com/productinfo/en/energymeter",
    "batteryLink": "http://www.fronius.com/productinfo/en/battery",
    "noCarePackage": "Para visualizar o seu Tesla Powerwall, é necessário um Tesla Care Package - contate o seu instalador.",
    "disabled": "Desativado",
    "serviceMode": "Modo de serviço",
    "chargeBoost": "Carregamento forçado",
    "nearlyDepleted": "SOC mín. atingido",
    "suspended": "Modo de baixo consumo de energia",
    "calibration": "Modo de calibragem",
    "depletedRecovery": "Proteção contra descarga profunda",
    "startup": "Arranque",
    "notAllOnline": "Connection problem to one or more data sources"
};

language["ru"] = {
    "fromGenerator": "Выработано {{watt}} солнечной энергии, что соответствует эффективности {{percent}}.",
    "fromGeneratorZero": "В данный момент энергия от Солнца не вырабатывается.",
    "utilization": "Использование {{percent}}",
    "selfSufficient": "Самообеспечение: {{percent}}",
    "feedIn": "Подача в сеть: {{percent}}",
    "usage": "Потребление: {{percent}}",
    "toConsumer": "Потребление - {{watt}}, обеспеченное собственной генерацией на {{percent}}.",
    "toConsumerOPOnly": "Потребление - {{watt}}, полностью обеспеченное собственной генерацией.",
    "toConsumerGridOnly": "Потребление - {{watt}}, полностью обеспеченное из сети.",
    "toConsumerZero": "В данный момент потребление отсутствует.",
    "fromGrid": "Потребление от сети: {{watt}}.",
    "gridZero": "В данный момент обмен энергией с сетью отсутствует.",
    "toGrid": "Подача в сеть: {{watt}}.",
    "notAvailable": "Недоступно",
    "loading": "Загрузка данных...",
    "offline": "Не подключено",
    "clickHint": "Для получения информации нажмите значки.",
    "stateOfCharge": "Состояние зарядки {{percent}}",
    "batteryCharging": "Аккумулятор заряжен на {{watt}}, состояние зарядки - {{percent}}.",
    "batteryDischarging": "Аккумулятор разряжен на {{watt}}, состояние зарядки - {{percent}}.",
    "smartMeterLink": "http://www.fronius.com/productinfo/en/energymeter",
    "batteryLink": "http://www.fronius.com/productinfo/en/battery",
    "noCarePackage": "Для визуализации данных Tesla Powerwall требуется Tesla Care Package. Обратитесь к своему установщику.",
    "disabled": "Отключено",
    "serviceMode": "Режим обслуживания",
    "chargeBoost": "Принудительная перезарядка",
    "nearlyDepleted": "Достигнут минимальный уровень заряда",
    "suspended": "Режим энергосбережения",
    "calibration": "Режим калибровки",
    "depletedRecovery": "Защита от глубокой разрядки",
    "startup": "Запуск",
    "notAllOnline": "Connection problem to one or more data sources"
};

language["sk"] = {
    "fromGenerator": "Práve sa vyrába {{watt}}, čo zodpovedá využitiu {{percent}}.",
    "fromGeneratorZero": "Momentálne sa nevyrába žiadna solárna energia.",
    "utilization": "Vyťaženie {{percent}}",
    "selfSufficient": "Sebestačnosť {{percent}}",
    "feedIn": "Napájanie {{percent}}",
    "usage": "Odber {{percent}}",
    "toConsumer": "Spotreba predstavuje {{watt}} a je na {{percent}} pokrytá vlastnou výrobou.",
    "toConsumerOPOnly": "Spotreba predstavuje {{watt}} a je úplne pokrytá vlastnou výrobou.",
    "toConsumerGridOnly": "Spotreba predstavuje {{watt}} a je úplne pokrytá zo siete.",
    "toConsumerZero": "Momentálne sa nespotrebúva žiadna energia.",
    "fromGrid": "Zo siete sa odoberá {{watt}}.",
    "gridZero": "Momentálne sa prúd zo siete neodoberá ani sa do nej nedodáva.",
    "toGrid": "Do siete sa dodáva {{watt}}.",
    "notAvailable": "Nie je k dispozícii",
    "loading": "Načítavajú sa údaje...",
    "offline": "Offline",
    "clickHint": "Pre získanie ďalších informácií stlačte príslušný symbol.",
    "stateOfCharge": "Stav nabíjania {{percent}}",
    "batteryCharging": "Akumulátor sa nabíja s výkonom {{watt}} a stav nabitia predstavuje {{percent}}.",
    "batteryDischarging": "Akumulátor sa vybíja s výkonom {{watt}} a stav nabitia predstavuje {{percent}}.",
    "smartMeterLink": "http://www.fronius.com/productinfo/en/energymeter",
    "batteryLink": "http://www.fronius.com/productinfo/en/battery",
    "noCarePackage": "Na vizualizáciu Tesla Powerwall je potrebný balík Tesla Care Package – kontaktujte svojho inštalatéra.",
    "disabled": "Deaktivované",
    "serviceMode": "Servisný režim",
    "chargeBoost": "Vynútené dobíjanie",
    "nearlyDepleted": "Min. hodnota SOC dosiahnutá",
    "suspended": "Úsporný režim",
    "calibration": "Kalibrácia",
    "depletedRecovery": "Ochrana proti hĺbkovému vybitiu",
    "startup": "Spustenie",
    "notAllOnline": "Connection problem to one or more data sources"
};

language["tr"] = {
    "fromGenerator": "Şu an {{watt}} üretiliyor ve bu da {{percent}} kapasite kullanımına denk düşüyor.",
    "fromGeneratorZero": "Şu an solar enerji üretilmiyor.",
    "utilization": "Kapasite kullanımı {{percent}}",
    "selfSufficient": "{{percent}}otarşik",
    "feedIn": "{{percent}} besleme",
    "usage": "{{percent}} bağlam",
    "toConsumer": "Tüketim {{watt}} ve bunun {{percent}} öz üretim tarafından karşılanıyor.",
    "toConsumerOPOnly": "Tüketim {{watt}} ve tamamen öz üretim tarafından karşılanıyor.",
    "toConsumerGridOnly": "Tüketim {{watt}} ve tamamen şebeke tarafından karşılanıyor.",
    "toConsumerZero": "Şu an elektrik kullanılmıyor.",
    "fromGrid": "Şebekeden {{watt}}  alınıyor.",
    "gridZero": "Şu an ne şebekeden akım alınıyor, ne de şebekeye akım besleniyor.",
    "toGrid": "Şebekeye {{watt}} besleniyor.",
    "notAvailable": "Mevcut değil",
    "loading": "Veri yükle...",
    "offline": "Çevrim dışı",
    "clickHint": "Daha fazla bilgi almak için sembollere tıklayın.",
    "stateOfCharge": "Şarj durumu {{percent}}",
    "batteryCharging": "Pil {{watt}} ile dolduruluyor ve dolum durumu {{percent}} oranında.",
    "batteryDischarging": "Pil {{watt}} ile boşaltılıyor ve dolum durumu {{percent}} oranında.",
    "smartMeterLink": "http://www.fronius.com/productinfo/en/energymeter",
    "batteryLink": "http://www.fronius.com/productinfo/en/battery",
    "noCarePackage": "Tesla Powerwall görselleştirmek için Tesla Care Package gerekmektedir; lütfen tesisatçınız ile iletişime geçin.",
    "disabled": "Devre dışı",
    "serviceMode": "Servis modu",
    "chargeBoost": "Zorunlu yükleme",
    "nearlyDepleted": "Min. SOC'a ulaşıldı",
    "suspended": "Enerji tasarruf modu",
    "calibration": "Kalibrasyon modu",
    "depletedRecovery": "Aşırı deşarj koruması",
    "startup": "Başlama",
    "notAllOnline": "Connection problem to one or more data sources"
};

language["sv"] = {
    "fromGenerator": "Det produceras just nu {{watt}}, vilket motsvarar en nyttjandegrad på {{percent}}.",
    "fromGeneratorZero": "Just nu alstras ingen solpanelsström.",
    "utilization": "Utilization {{percent}}",
    "selfSufficient": "{{percent}} oberoende",
    "feedIn": "{{percent}} inmatning",
    "usage": "{{percent}} användning",
    "toConsumer": "Förbrukningen är {{watt}} och täcks till {{percent}} av egenproduktion.",
    "toConsumerOPOnly": "Förbrukningen är {{watt}} och täcks helt av egenproduktion.",
    "toConsumerGridOnly": "Förbrukningen är {{watt}} och täcks helt från elnätet.",
    "toConsumerZero": "Just nu förbrukas ingen ström.",
    "fromGrid": "Från elnätet används {{watt}}.",
    "gridZero": "Just nu används ingen ström från elnätet och ingen ström matas in i elnätet.",
    "toGrid": "Till elnätet matas {{watt}}.",
    "notAvailable": "inte tillgängliga",
    "loading": "Ladda data ...",
    "offline": "Offline",
    "clickHint": "Tryck på symbolerna för att få mer information.",
    "stateOfCharge": "Laddningsnivå {{percent}}",
    "batteryCharging": "Batterie laddas med {{watt}} och laddningsnivån är {{percent}}.",
    "batteryDischarging": "Batteriet laddas ur med {{watt}} och laddningsnivån är {{percent}}.",
    "smartMeterLink": "http://www.fronius.com/productinfo/en/energymeter",
    "batteryLink": "http://www.fronius.com/productinfo/en/battery",
    "noCarePackage": "To visualize your Tesla Powerwall a Tesla Care Package is required - please contact your installer.",
    "disabled": "Disabled",
    "serviceMode": "Service mode",
    "chargeBoost": "Forced loading",
    "nearlyDepleted": "Min. SOC reached",
    "suspended": "Energy-saving mode",
    "calibration": "Calibration mode",
    "depletedRecovery": "Deep discharge protection",
    "startup": "Start-up",
    "notAllOnline": "Connection problem to one or more data sources"
};

language["ro"] = {
    "fromGenerator": "Tocmai se produc {{watt}}, ceea ce corespunde unui grad de utilizare a capacităţii de {{percent}}.",
    "fromGeneratorZero": "Pentru moment nu se produce energie solară.",
    "utilization": "Utilization {{percent}}",
    "selfSufficient": "{{percent}} autonom",
    "feedIn": "{{percent}} alimentare",
    "usage": "{{percent}} achiziţie",
    "toConsumer": "Consumul este de {{watt}} şi este acoperit {{percent}} din producţia proprie.",
    "toConsumerOPOnly": "Consumul este de {{watt}} şi este acoperit în întregime din producţia proprie.",
    "toConsumerGridOnly": "Consumul este de {{watt}} şi este acoperit în întregime de la reţea.",
    "toConsumerZero": "Pentru moment nu se produce energie.",
    "fromGrid": "Se iau {{watt}} din reţea.",
    "gridZero": "Pentru moment nici nu se ia curent din reţea, nici nu se introduce curent în reţea.",
    "toGrid": "Se introduc {{watt}} în reţea.",
    "notAvailable": "nu disponibile",
    "loading": "Se încarcă datele...",
    "offline": "Offline",
    "clickHint": "Apăsaţi pe simboluri, pentru a primi mai multe informaţii.",
    "stateOfCharge": "Stare de încărcare {{percent}}",
    "batteryCharging": "Bateria este încărcată cu {{watt}} şi nivelul de încărcare este de {{percent}}.",
    "batteryDischarging": "Bateria este descărcată cu {{watt}} şi nivelul de încărcare este de {{percent}}.",
    "smartMeterLink": "http://www.fronius.com/productinfo/en/energymeter",
    "batteryLink": "http://www.fronius.com/productinfo/en/battery",
    "noCarePackage": "To visualize your Tesla Powerwall a Tesla Care Package is required - please contact your installer.",
    "disabled": "Disabled",
    "serviceMode": "Service mode",
    "chargeBoost": "Forced loading",
    "nearlyDepleted": "Min. SOC reached",
    "suspended": "Energy-saving mode",
    "calibration": "Calibration mode",
    "depletedRecovery": "Deep discharge protection",
    "startup": "Start-up",
    "notAllOnline": "Connection problem to one or more data sources"
};
!function(e) {
    if ("object" == typeof exports && "undefined" != typeof module)
        module.exports = e();
    else if ("function" == typeof define && define.amd)
        define([], e);
    else {
        var t;
        t = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this,
        t.i18next = e()
    }
}(function() {
    return function e(t, n, r) {
        function o(a, s) {
            if (!n[a]) {
                if (!t[a]) {
                    var u = "function" == typeof require && require;
                    if (!s && u)
                        return u(a, !0);
                    if (i)
                        return i(a, !0);
                    var l = new Error("Cannot find module '" + a + "'");
                    throw l.code = "MODULE_NOT_FOUND",
                    l
                }
                var c = n[a] = {
                    exports: {}
                };
                t[a][0].call(c.exports, function(e) {
                    var n = t[a][1][e];
                    return o(n ? n : e)
                }, c, c.exports, e, t, n, r)
            }
            return n[a].exports
        }
        for (var i = "function" == typeof require && require, a = 0; a < r.length; a++)
            o(r[a]);
        return o
    }({
        1: [function(e, t, n) {
            "use strict";
            function r(e) {
                return e && e.__esModule ? e : {
                    "default": e
                }
            }
            function o(e) {
                if (e && e.__esModule)
                    return e;
                var t = {};
                if (null != e)
                    for (var n in e)
                        Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                return t["default"] = e,
                t
            }
            function i(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function a(e, t) {
                if ("function" != typeof t && null !== t)
                    throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
            }
            function s(e, t) {
                for (var n = e.indexOf(t); -1 !== n; )
                    e.splice(n, 1),
                    n = e.indexOf(t)
            }
            Object.defineProperty(n, "__esModule", {
                value: !0
            });
            var u = function() {
                function e(e, t) {
                    var n = []
                      , r = !0
                      , o = !1
                      , i = void 0;
                    try {
                        for (var a, s = e[Symbol.iterator](); !(r = (a = s.next()).done) && (n.push(a.value),
                        !t || n.length !== t); r = !0)
                            ;
                    } catch (u) {
                        o = !0,
                        i = u
                    } finally {
                        try {
                            !r && s["return"] && s["return"]()
                        } finally {
                            if (o)
                                throw i
                        }
                    }
                    return n
                }
                return function(t, n) {
                    if (Array.isArray(t))
                        return t;
                    if (Symbol.iterator in Object(t))
                        return e(t, n);
                    throw new TypeError("Invalid attempt to destructure non-iterable instance")
                }
            }()
              , l = Object.assign || function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n)
                        Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                }
                return e
            }
              , c = function() {
                function e(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        "value"in r && (r.writable = !0),
                        Object.defineProperty(e, r.key, r)
                    }
                }
                return function(t, n, r) {
                    return n && e(t.prototype, n),
                    r && e(t, r),
                    t
                }
            }()
              , f = function(e, t, n) {
                for (var r = !0; r; ) {
                    var o = e
                      , i = t
                      , a = n;
                    r = !1,
                    null === o && (o = Function.prototype);
                    var s = Object.getOwnPropertyDescriptor(o, i);
                    if (void 0 !== s) {
                        if ("value"in s)
                            return s.value;
                        var u = s.get;
                        if (void 0 === u)
                            return;
                        return u.call(a)
                    }
                    var l = Object.getPrototypeOf(o);
                    if (null === l)
                        return;
                    e = l,
                    t = i,
                    n = a,
                    r = !0,
                    s = l = void 0
                }
            }
              , p = e("./utils")
              , g = o(p)
              , d = e("./logger")
              , h = r(d)
              , v = e("./EventEmitter")
              , y = r(v)
              , b = function(e) {
                function t(e, n, r) {
                    var o = arguments.length <= 3 || void 0 === arguments[3] ? {} : arguments[3];
                    i(this, t),
                    f(Object.getPrototypeOf(t.prototype), "constructor", this).call(this),
                    this.backend = e,
                    this.store = n,
                    this.services = r,
                    this.options = o,
                    this.logger = h["default"].create("backendConnector"),
                    this.state = {},
                    this.queue = [],
                    this.backend && this.backend.init(r, o.backend, o)
                }
                return a(t, e),
                c(t, [{
                    key: "queueLoad",
                    value: function(e, t, n) {
                        var r = this
                          , o = []
                          , i = []
                          , a = []
                          , s = [];
                        return e.forEach(function(e) {
                            var n = !0;
                            t.forEach(function(t) {
                                var a = e + "|" + t;
                                r.store.hasResourceBundle(e, t) ? r.state[a] = 2 : 1 === r.state[a] ? i.indexOf(a) < 0 && i.push(a) : (r.state[a] = 1,
                                n = !1,
                                i.indexOf(a) < 0 && i.push(a),
                                o.indexOf(a) < 0 && o.push(a),
                                s.indexOf(t) < 0 && s.push(t))
                            }),
                            n || a.push(e)
                        }),
                        (o.length || i.length) && this.queue.push({
                            pending: i,
                            loaded: {},
                            errors: [],
                            callback: n
                        }),
                        {
                            toLoad: o,
                            pending: i,
                            toLoadLanguages: a,
                            toLoadNamespaces: s
                        }
                    }
                }, {
                    key: "loaded",
                    value: function(e, t, n) {
                        var r = this
                          , o = e.split("|")
                          , i = u(o, 2)
                          , a = i[0]
                          , l = i[1];
                        t && this.emit("failedLoading", a, l, t),
                        n && this.store.addResourceBundle(a, l, n),
                        this.state[e] = t ? -1 : 2,
                        this.queue.forEach(function(n) {
                            g.pushPath(n.loaded, [a], l),
                            s(n.pending, e),
                            t && n.errors.push(t),
                            0 !== n.pending.length || n.done || (n.errors.length ? n.callback(n.errors) : n.callback(),
                            r.emit("loaded", n.loaded),
                            n.done = !0)
                        }),
                        this.queue = this.queue.filter(function(e) {
                            return !e.done
                        })
                    }
                }, {
                    key: "read",
                    value: function(e, t, n, r, o, i) {
                        var a = this;
                        return r || (r = 0),
                        o || (o = 250),
                        e.length ? void this.backend[n](e, t, function(s, u) {
                            return s && u && 5 > r ? void setTimeout(function() {
                                a.read.call(a, e, t, n, ++r, 2 * o, i)
                            }, o) : void i(s, u)
                        }) : i(null, {})
                    }
                }, {
                    key: "load",
                    value: function(e, t, n) {
                        var r = this;
                        if (!this.backend)
                            return this.logger.warn("No backend was added via i18next.use. Will not load resources."),
                            n && n();
                        var o = l({}, this.backend.options, this.options.backend);
                        "string" == typeof e && (e = this.services.languageUtils.toResolveHierarchy(e)),
                        "string" == typeof t && (t = [t]);
                        var i = this.queueLoad(e, t, n);
                        return i.toLoad.length ? void (o.allowMultiLoading && this.backend.readMulti ? this.read(i.toLoadLanguages, i.toLoadNamespaces, "readMulti", null, null, function(e, t) {
                            e && r.logger.warn("loading namespaces " + i.toLoadNamespaces.join(", ") + " for languages " + i.toLoadLanguages.join(", ") + " via multiloading failed", e),
                            !e && t && r.logger.log("loaded namespaces " + i.toLoadNamespaces.join(", ") + " for languages " + i.toLoadLanguages.join(", ") + " via multiloading", t),
                            i.toLoad.forEach(function(n) {
                                var o = n.split("|")
                                  , i = u(o, 2)
                                  , a = i[0]
                                  , s = i[1]
                                  , l = g.getPath(t, [a, s]);
                                if (l)
                                    r.loaded(n, e, l);
                                else {
                                    var c = "loading namespace " + s + " for language " + a + " via multiloading failed";
                                    r.loaded(n, c),
                                    r.logger.error(c)
                                }
                            })
                        }) : !function() {
                            var e = function(e) {
                                var t = this
                                  , n = e.split("|")
                                  , r = u(n, 2)
                                  , o = r[0]
                                  , i = r[1];
                                this.read(o, i, "read", null, null, function(n, r) {
                                    n && t.logger.warn("loading namespace " + i + " for language " + o + " failed", n),
                                    !n && r && t.logger.log("loaded namespace " + i + " for language " + o, r),
                                    t.loaded(e, n, r)
                                })
                            };
                            i.toLoad.forEach(function(t) {
                                e.call(r, t)
                            })
                        }()) : void (i.pending.length || n())
                    }
                }, {
                    key: "saveMissing",
                    value: function(e, t, n, r) {
                        this.backend && this.backend.create && this.backend.create(e, t, n, r),
                        this.store.addResource(e[0], t, n, r)
                    }
                }]),
                t
            }(y["default"]);
            n["default"] = b,
            t.exports = n["default"]
        }
        , {
            "./EventEmitter": 3,
            "./logger": 12,
            "./utils": 14
        }],
        2: [function(e, t, n) {
            "use strict";
            function r(e) {
                return e && e.__esModule ? e : {
                    "default": e
                }
            }
            function o(e) {
                if (e && e.__esModule)
                    return e;
                var t = {};
                if (null != e)
                    for (var n in e)
                        Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                return t["default"] = e,
                t
            }
            function i(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function a(e, t) {
                if ("function" != typeof t && null !== t)
                    throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
            }
            Object.defineProperty(n, "__esModule", {
                value: !0
            });
            var s = Object.assign || function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n)
                        Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                }
                return e
            }
              , u = function() {
                function e(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        "value"in r && (r.writable = !0),
                        Object.defineProperty(e, r.key, r)
                    }
                }
                return function(t, n, r) {
                    return n && e(t.prototype, n),
                    r && e(t, r),
                    t
                }
            }()
              , l = function(e, t, n) {
                for (var r = !0; r; ) {
                    var o = e
                      , i = t
                      , a = n;
                    r = !1,
                    null === o && (o = Function.prototype);
                    var s = Object.getOwnPropertyDescriptor(o, i);
                    if (void 0 !== s) {
                        if ("value"in s)
                            return s.value;
                        var u = s.get;
                        if (void 0 === u)
                            return;
                        return u.call(a)
                    }
                    var l = Object.getPrototypeOf(o);
                    if (null === l)
                        return;
                    e = l,
                    t = i,
                    n = a,
                    r = !0,
                    s = l = void 0
                }
            }
              , c = e("./utils")
              , f = (o(c),
            e("./logger"))
              , p = r(f)
              , g = e("./EventEmitter")
              , d = r(g)
              , h = function(e) {
                function t(e, n, r) {
                    var o = arguments.length <= 3 || void 0 === arguments[3] ? {} : arguments[3];
                    i(this, t),
                    l(Object.getPrototypeOf(t.prototype), "constructor", this).call(this),
                    this.cache = e,
                    this.store = n,
                    this.services = r,
                    this.options = o,
                    this.logger = p["default"].create("cacheConnector"),
                    this.cache && this.cache.init(r, o.cache, o)
                }
                return a(t, e),
                u(t, [{
                    key: "load",
                    value: function(e, t, n) {
                        var r = this;
                        if (!this.cache)
                            return n && n();
                        var o = s({}, this.cache.options, this.options.cache);
                        "string" == typeof e && (e = this.services.languageUtils.toResolveHierarchy(e)),
                        "string" == typeof t && (t = [t]),
                        o.enabled ? this.cache.load(e, function(t, o) {
                            if (t && r.logger.error("loading languages " + e.join(", ") + " from cache failed", t),
                            o)
                                for (var i in o)
                                    for (var a in o[i])
                                        if ("i18nStamp" !== a) {
                                            var s = o[i][a];
                                            s && r.store.addResourceBundle(i, a, s)
                                        }
                            n && n()
                        }) : n && n()
                    }
                }, {
                    key: "save",
                    value: function() {
                        this.cache && this.options.cache && this.options.cache.enabled && this.cache.save(this.store.data)
                    }
                }]),
                t
            }(d["default"]);
            n["default"] = h,
            t.exports = n["default"]
        }
        , {
            "./EventEmitter": 3,
            "./logger": 12,
            "./utils": 14
        }],
        3: [function(e, t, n) {
            "use strict";
            function r(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            var o = function() {
                function e(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        "value"in r && (r.writable = !0),
                        Object.defineProperty(e, r.key, r)
                    }
                }
                return function(t, n, r) {
                    return n && e(t.prototype, n),
                    r && e(t, r),
                    t
                }
            }()
              , i = function() {
                function e() {
                    r(this, e),
                    this.observers = {}
                }
                return o(e, [{
                    key: "on",
                    value: function(e, t) {
                        var n = this;
                        e.split(" ").forEach(function(e) {
                            n.observers[e] = n.observers[e] || [],
                            n.observers[e].push(t)
                        })
                    }
                }, {
                    key: "off",
                    value: function(e, t) {
                        var n = this;
                        this.observers[e] && this.observers[e].forEach(function() {
                            if (t) {
                                var r = n.observers[e].indexOf(t);
                                r > -1 && n.observers[e].splice(r, 1)
                            } else
                                delete n.observers[e]
                        })
                    }
                }, {
                    key: "emit",
                    value: function(e) {
                        for (var t = arguments.length, n = Array(t > 1 ? t - 1 : 0), r = 1; t > r; r++)
                            n[r - 1] = arguments[r];
                        this.observers[e] && this.observers[e].forEach(function(e) {
                            e.apply(void 0, n)
                        }),
                        this.observers["*"] && this.observers["*"].forEach(function(t) {
                            var r;
                            t.apply(t, (r = [e]).concat.apply(r, n))
                        })
                    }
                }]),
                e
            }();
            t.exports = i
        }
        , {}],
        4: [function(e, t, n) {
            "use strict";
            function r(e) {
                return e && e.__esModule ? e : {
                    "default": e
                }
            }
            function o(e) {
                if (e && e.__esModule)
                    return e;
                var t = {};
                if (null != e)
                    for (var n in e)
                        Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                return t["default"] = e,
                t
            }
            function i(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            Object.defineProperty(n, "__esModule", {
                value: !0
            });
            var a = function() {
                function e(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        "value"in r && (r.writable = !0),
                        Object.defineProperty(e, r.key, r)
                    }
                }
                return function(t, n, r) {
                    return n && e(t.prototype, n),
                    r && e(t, r),
                    t
                }
            }()
              , s = e("./utils")
              , u = o(s)
              , l = e("./logger")
              , c = r(l)
              , f = function() {
                function e() {
                    var t = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0];
                    i(this, e),
                    this.logger = c["default"].create("interpolator"),
                    this.init(t, !0)
                }
                return a(e, [{
                    key: "init",
                    value: function(e, t) {
                        void 0 === e && (e = {}),
                        t && (this.options = e),
                        e.interpolation || (e.interpolation = {
                            escapeValue: !0
                        });
                        var n = e.interpolation;
                        this.escapeValue = n.escapeValue,
                        this.prefix = n.prefix ? u.regexEscape(n.prefix) : n.prefixEscaped || "{{",
                        this.suffix = n.suffix ? u.regexEscape(n.suffix) : n.suffixEscaped || "}}",
                        this.unescapePrefix = n.unescapeSuffix ? "" : n.unescapePrefix || "-",
                        this.unescapeSuffix = this.unescapePrefix ? "" : n.unescapeSuffix || "",
                        this.nestingPrefix = n.nestingPrefix ? u.regexEscape(n.nestingPrefix) : n.nestingPrefixEscaped || u.regexEscape("$t("),
                        this.nestingSuffix = n.nestingSuffix ? u.regexEscape(n.nestingSuffix) : n.nestingSuffixEscaped || u.regexEscape(")");
                        var r = this.prefix + "(.+?)" + this.suffix;
                        this.regexp = new RegExp(r,"g");
                        var o = this.prefix + this.unescapePrefix + "(.+?)" + this.unescapeSuffix + this.suffix;
                        this.regexpUnescape = new RegExp(o,"g");
                        var i = this.nestingPrefix + "(.+?)" + this.nestingSuffix;
                        this.nestingRegexp = new RegExp(i,"g")
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this.options && this.init(this.options)
                    }
                }, {
                    key: "interpolate",
                    value: function(e, t) {
                        function n(e) {
                            return e.replace(/\$/g, "$$$$")
                        }
                        for (var r = void 0, o = void 0; r = this.regexpUnescape.exec(e); ) {
                            var i = u.getPath(t, r[1].trim());
                            e = e.replace(r[0], i)
                        }
                        for (; r = this.regexp.exec(e); )
                            o = u.getPath(t, r[1].trim()),
                            "string" != typeof o && (o = u.makeString(o)),
                            o || (this.logger.warn("missed to pass in variable " + r[1] + " for interpolating " + e),
                            o = ""),
                            o = n(this.escapeValue ? u.escape(o) : o),
                            e = e.replace(r[0], o),
                            this.regexp.lastIndex = 0;
                        return e
                    }
                }, {
                    key: "nest",
                    value: function(e, t) {
                        function n(e) {
                            return e.replace(/\$/g, "$$$$")
                        }
                        function r(e) {
                            if (e.indexOf(",") < 0)
                                return e;
                            var t = e.split(",");
                            e = t.shift();
                            var n = t.join(",");
                            n = this.interpolate(n, s);
                            try {
                                s = JSON.parse(n)
                            } catch (r) {
                                this.logger.error("failed parsing options string in nesting for key " + e, r)
                            }
                            return e
                        }
                        var o = arguments.length <= 2 || void 0 === arguments[2] ? {} : arguments[2]
                          , i = void 0
                          , a = void 0
                          , s = JSON.parse(JSON.stringify(o));
                        for (s.applyPostProcessor = !1; i = this.nestingRegexp.exec(e); )
                            a = t(r.call(this, i[1].trim()), s),
                            "string" != typeof a && (a = u.makeString(a)),
                            a || (this.logger.warn("missed to pass in variable " + i[1] + " for interpolating " + e),
                            a = ""),
                            a = n(this.escapeValue ? u.escape(a) : a),
                            e = e.replace(i[0], a),
                            this.regexp.lastIndex = 0;
                        return e
                    }
                }]),
                e
            }();
            n["default"] = f,
            t.exports = n["default"]
        }
        , {
            "./logger": 12,
            "./utils": 14
        }],
        5: [function(e, t, n) {
            "use strict";
            function r(e) {
                return e && e.__esModule ? e : {
                    "default": e
                }
            }
            function o(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            Object.defineProperty(n, "__esModule", {
                value: !0
            });
            var i = function() {
                function e(e, t) {
                    var n = []
                      , r = !0
                      , o = !1
                      , i = void 0;
                    try {
                        for (var a, s = e[Symbol.iterator](); !(r = (a = s.next()).done) && (n.push(a.value),
                        !t || n.length !== t); r = !0)
                            ;
                    } catch (u) {
                        o = !0,
                        i = u
                    } finally {
                        try {
                            !r && s["return"] && s["return"]()
                        } finally {
                            if (o)
                                throw i
                        }
                    }
                    return n
                }
                return function(t, n) {
                    if (Array.isArray(t))
                        return t;
                    if (Symbol.iterator in Object(t))
                        return e(t, n);
                    throw new TypeError("Invalid attempt to destructure non-iterable instance")
                }
            }()
              , a = function() {
                function e(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        "value"in r && (r.writable = !0),
                        Object.defineProperty(e, r.key, r)
                    }
                }
                return function(t, n, r) {
                    return n && e(t.prototype, n),
                    r && e(t, r),
                    t
                }
            }()
              , s = e("./logger")
              , u = r(s)
              , l = function() {
                function e(t) {
                    o(this, e),
                    this.options = t,
                    this.whitelist = this.options.whitelist || !1,
                    this.logger = u["default"].create("languageUtils")
                }
                return a(e, [{
                    key: "getLanguagePartFromCode",
                    value: function(e) {
                        if (e.indexOf("-") < 0)
                            return e;
                        var t = ["nb-NO", "nn-NO", "nb-no", "nn-no"]
                          , n = e.split("-");
                        return this.formatLanguageCode(t.indexOf(e) > -1 ? n[1].toLowerCase() : n[0])
                    }
                }, {
                    key: "formatLanguageCode",
                    value: function(e) {
                        if ("string" == typeof e && e.indexOf("-") > -1) {
                            var t = e.split("-")
                              , n = i(t, 2)
                              , r = n[0]
                              , o = n[1];
                            return this.options.lowerCaseLng ? r.toLowerCase() + "-" + o.toLowerCase() : r.toLowerCase() + "-" + o.toUpperCase()
                        }
                        return this.options.cleanCode || this.options.lowerCaseLng ? e.toLowerCase() : e
                    }
                }, {
                    key: "isWhitelisted",
                    value: function(e) {
                        return "languageOnly" === this.options.load && (e = this.getLanguagePartFromCode(e)),
                        !this.whitelist || !this.whitelist.length || this.whitelist.indexOf(e) > -1 ? !0 : !1
                    }
                }, {
                    key: "toResolveHierarchy",
                    value: function(e, t) {
                        var n = this;
                        t = t || this.options.fallbackLng || [],
                        "string" == typeof t && (t = [t]);
                        var r = []
                          , o = function(e) {
                            n.isWhitelisted(e) ? r.push(e) : n.logger.warn("rejecting non-whitelisted language code: " + e)
                        };
                        return "string" == typeof e && e.indexOf("-") > -1 ? ("languageOnly" !== this.options.load && o(this.formatLanguageCode(e)),
                        "currentOnly" !== this.options.load && o(this.getLanguagePartFromCode(e))) : "string" == typeof e && o(this.formatLanguageCode(e)),
                        t.forEach(function(e) {
                            r.indexOf(e) < 0 && o(n.formatLanguageCode(e))
                        }),
                        r
                    }
                }]),
                e
            }();
            n["default"] = l,
            t.exports = n["default"]
        }
        , {
            "./logger": 12
        }],
        6: [function(e, t, n) {
            "use strict";
            function r(e) {
                return e && e.__esModule ? e : {
                    "default": e
                }
            }
            function o(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            Object.defineProperty(n, "__esModule", {
                value: !0
            });
            var i = function() {
                function e(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        "value"in r && (r.writable = !0),
                        Object.defineProperty(e, r.key, r)
                    }
                }
                return function(t, n, r) {
                    return n && e(t.prototype, n),
                    r && e(t, r),
                    t
                }
            }()
              , a = e("./logger")
              , s = r(a)
              , u = [{
                lngs: ["ach", "ak", "am", "arn", "br", "fil", "gun", "ln", "mfe", "mg", "mi", "oc", "tg", "ti", "tr", "uz", "wa"],
                nr: [1, 2],
                fc: 1
            }, {
                lngs: ["af", "an", "ast", "az", "bg", "bn", "ca", "da", "de", "dev", "el", "en", "eo", "es", "es_ar", "et", "eu", "fi", "fo", "fur", "fy", "gl", "gu", "ha", "he", "hi", "hu", "hy", "ia", "it", "kn", "ku", "lb", "mai", "ml", "mn", "mr", "nah", "nap", "nb", "ne", "nl", "nn", "no", "nso", "pa", "pap", "pms", "ps", "pt", "pt_br", "rm", "sco", "se", "si", "so", "son", "sq", "sv", "sw", "ta", "te", "tk", "ur", "yo"],
                nr: [1, 2],
                fc: 2
            }, {
                lngs: ["ay", "bo", "cgg", "fa", "id", "ja", "jbo", "ka", "kk", "km", "ko", "ky", "lo", "ms", "sah", "su", "th", "tt", "ug", "vi", "wo", "zh"],
                nr: [1],
                fc: 3
            }, {
                lngs: ["be", "bs", "dz", "hr", "ru", "sr", "uk"],
                nr: [1, 2, 5],
                fc: 4
            }, {
                lngs: ["ar"],
                nr: [0, 1, 2, 3, 11, 100],
                fc: 5
            }, {
                lngs: ["cs", "sk"],
                nr: [1, 2, 5],
                fc: 6
            }, {
                lngs: ["csb", "pl"],
                nr: [1, 2, 5],
                fc: 7
            }, {
                lngs: ["cy"],
                nr: [1, 2, 3, 8],
                fc: 8
            }, {
                lngs: ["fr"],
                nr: [1, 2],
                fc: 9
            }, {
                lngs: ["ga"],
                nr: [1, 2, 3, 7, 11],
                fc: 10
            }, {
                lngs: ["gd"],
                nr: [1, 2, 3, 20],
                fc: 11
            }, {
                lngs: ["is"],
                nr: [1, 2],
                fc: 12
            }, {
                lngs: ["jv"],
                nr: [0, 1],
                fc: 13
            }, {
                lngs: ["kw"],
                nr: [1, 2, 3, 4],
                fc: 14
            }, {
                lngs: ["lt"],
                nr: [1, 2, 10],
                fc: 15
            }, {
                lngs: ["lv"],
                nr: [1, 2, 0],
                fc: 16
            }, {
                lngs: ["mk"],
                nr: [1, 2],
                fc: 17
            }, {
                lngs: ["mnk"],
                nr: [0, 1, 2],
                fc: 18
            }, {
                lngs: ["mt"],
                nr: [1, 2, 11, 20],
                fc: 19
            }, {
                lngs: ["or"],
                nr: [2, 1],
                fc: 2
            }, {
                lngs: ["ro"],
                nr: [1, 2, 20],
                fc: 20
            }, {
                lngs: ["sl"],
                nr: [5, 1, 2, 3],
                fc: 21
            }]
              , l = {
                1: function(e) {
                    return Number(e > 1)
                },
                2: function(e) {
                    return Number(1 != e)
                },
                3: function(e) {
                    return 0
                },
                4: function(e) {
                    return Number(e % 10 == 1 && e % 100 != 11 ? 0 : e % 10 >= 2 && 4 >= e % 10 && (10 > e % 100 || e % 100 >= 20) ? 1 : 2)
                },
                5: function(e) {
                    return Number(0 === e ? 0 : 1 == e ? 1 : 2 == e ? 2 : e % 100 >= 3 && 10 >= e % 100 ? 3 : e % 100 >= 11 ? 4 : 5)
                },
                6: function(e) {
                    return Number(1 == e ? 0 : e >= 2 && 4 >= e ? 1 : 2)
                },
                7: function(e) {
                    return Number(1 == e ? 0 : e % 10 >= 2 && 4 >= e % 10 && (10 > e % 100 || e % 100 >= 20) ? 1 : 2)
                },
                8: function(e) {
                    return Number(1 == e ? 0 : 2 == e ? 1 : 8 != e && 11 != e ? 2 : 3)
                },
                9: function(e) {
                    return Number(e >= 2)
                },
                10: function(e) {
                    return Number(1 == e ? 0 : 2 == e ? 1 : 7 > e ? 2 : 11 > e ? 3 : 4)
                },
                11: function(e) {
                    return Number(1 == e || 11 == e ? 0 : 2 == e || 12 == e ? 1 : e > 2 && 20 > e ? 2 : 3)
                },
                12: function(e) {
                    return Number(e % 10 != 1 || e % 100 == 11)
                },
                13: function(e) {
                    return Number(0 !== e)
                },
                14: function(e) {
                    return Number(1 == e ? 0 : 2 == e ? 1 : 3 == e ? 2 : 3)
                },
                15: function(e) {
                    return Number(e % 10 == 1 && e % 100 != 11 ? 0 : e % 10 >= 2 && (10 > e % 100 || e % 100 >= 20) ? 1 : 2)
                },
                16: function(e) {
                    return Number(e % 10 == 1 && e % 100 != 11 ? 0 : 0 !== e ? 1 : 2)
                },
                17: function(e) {
                    return Number(1 == e || e % 10 == 1 ? 0 : 1)
                },
                18: function(e) {
                    return Number(0 == e ? 0 : 1 == e ? 1 : 2)
                },
                19: function(e) {
                    return Number(1 == e ? 0 : 0 === e || e % 100 > 1 && 11 > e % 100 ? 1 : e % 100 > 10 && 20 > e % 100 ? 2 : 3)
                },
                20: function(e) {
                    return Number(1 == e ? 0 : 0 === e || e % 100 > 0 && 20 > e % 100 ? 1 : 2)
                },
                21: function(e) {
                    return Number(e % 100 == 1 ? 1 : e % 100 == 2 ? 2 : e % 100 == 3 || e % 100 == 4 ? 3 : 0)
                }
            }
              , c = function() {
                function e(t) {
                    var n = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1];
                    o(this, e),
                    this.rules = function() {
                        var e = {};
                        return u.forEach(function(t) {
                            t.lngs.forEach(function(n) {
                                return e[n] = {
                                    numbers: t.nr,
                                    plurals: l[t.fc]
                                }
                            })
                        }),
                        e
                    }(),
                    this.languageUtils = t,
                    this.options = n,
                    this.logger = s["default"].create("pluralResolver")
                }
                return i(e, [{
                    key: "addRule",
                    value: function(e, t) {
                        this.rules[e] = t
                    }
                }, {
                    key: "getRule",
                    value: function(e) {
                        return this.rules[this.languageUtils.getLanguagePartFromCode(e)]
                    }
                }, {
                    key: "needsPlural",
                    value: function(e) {
                        var t = this.getRule(e);
                        return t && t.numbers.length <= 1 ? !1 : !0
                    }
                }, {
                    key: "getSuffix",
                    value: function(e, t) {
                        var n = this.getRule(e);
                        if (n) {
                            if (1 === n.numbers.length)
                                return "";
                            var r = n.noAbs ? n.plurals(t) : n.plurals(Math.abs(t))
                              , o = n.numbers[r];
                            if (2 === n.numbers.length && 1 === n.numbers[0] && (2 === o ? o = "plural" : 1 === o && (o = "")),
                            "v1" === this.options.compatibilityJSON) {
                                if (1 === o)
                                    return "";
                                if ("number" == typeof o)
                                    return "_plural_" + o.toString()
                            }
                            return this.options.prepend && o.toString() ? this.options.prepend + o.toString() : o.toString()
                        }
                        return this.logger.warn("no plural rule found for: " + e),
                        ""
                    }
                }]),
                e
            }();
            n["default"] = c,
            t.exports = n["default"]
        }
        , {
            "./logger": 12
        }],
        7: [function(e, t, n) {
            "use strict";
            function r(e) {
                if (e && e.__esModule)
                    return e;
                var t = {};
                if (null != e)
                    for (var n in e)
                        Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                return t["default"] = e,
                t
            }
            function o(e) {
                return e && e.__esModule ? e : {
                    "default": e
                }
            }
            function i(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function a(e, t) {
                if ("function" != typeof t && null !== t)
                    throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
            }
            Object.defineProperty(n, "__esModule", {
                value: !0
            });
            var s = Object.assign || function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n)
                        Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                }
                return e
            }
              , u = function() {
                function e(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        "value"in r && (r.writable = !0),
                        Object.defineProperty(e, r.key, r)
                    }
                }
                return function(t, n, r) {
                    return n && e(t.prototype, n),
                    r && e(t, r),
                    t
                }
            }()
              , l = function(e, t, n) {
                for (var r = !0; r; ) {
                    var o = e
                      , i = t
                      , a = n;
                    r = !1,
                    null === o && (o = Function.prototype);
                    var s = Object.getOwnPropertyDescriptor(o, i);
                    if (void 0 !== s) {
                        if ("value"in s)
                            return s.value;
                        var u = s.get;
                        if (void 0 === u)
                            return;
                        return u.call(a)
                    }
                    var l = Object.getPrototypeOf(o);
                    if (null === l)
                        return;
                    e = l,
                    t = i,
                    n = a,
                    r = !0,
                    s = l = void 0
                }
            }
              , c = e("./EventEmitter")
              , f = o(c)
              , p = e("./utils")
              , g = r(p)
              , d = function(e) {
                function t() {
                    var e = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0]
                      , n = arguments.length <= 1 || void 0 === arguments[1] ? {
                        ns: ["translation"],
                        defaultNS: "translation"
                    } : arguments[1];
                    i(this, t),
                    l(Object.getPrototypeOf(t.prototype), "constructor", this).call(this),
                    this.data = e,
                    this.options = n
                }
                return a(t, e),
                u(t, [{
                    key: "addNamespaces",
                    value: function(e) {
                        this.options.ns.indexOf(e) < 0 && this.options.ns.push(e)
                    }
                }, {
                    key: "removeNamespaces",
                    value: function(e) {
                        var t = this.options.ns.indexOf(e);
                        t > -1 && this.options.ns.splice(t, 1)
                    }
                }, {
                    key: "getResource",
                    value: function(e, t, n) {
                        var r = arguments.length <= 3 || void 0 === arguments[3] ? {} : arguments[3]
                          , o = r.keySeparator || this.options.keySeparator || "."
                          , i = [e, t];
                        return n && "string" != typeof n && (i = i.concat(n)),
                        n && "string" == typeof n && (i = i.concat(n.split(o))),
                        e.indexOf(".") > -1 && (i = e.split(".")),
                        g.getPath(this.data, i)
                    }
                }, {
                    key: "addResource",
                    value: function(e, t, n, r) {
                        var o = arguments.length <= 4 || void 0 === arguments[4] ? {
                            silent: !1
                        } : arguments[4]
                          , i = [e, t];
                        n && (i = i.concat(n.split(this.options.keySeparator || "."))),
                        e.indexOf(".") > -1 && (i = e.split("."),
                        r = t,
                        t = i[1]),
                        this.addNamespaces(t),
                        g.setPath(this.data, i, r),
                        o.silent || this.emit("added", e, t)
                    }
                }, {
                    key: "addResources",
                    value: function(e, t, n) {
                        for (var r in n)
                            "string" == typeof n[r] && this.addResource(e, t, r, n[r], {
                                silent: !0
                            });
                        this.emit("added", e, t)
                    }
                }, {
                    key: "addResourceBundle",
                    value: function(e, t, n, r, o) {
                        var i = [e, t];
                        e.indexOf(".") > -1 && (i = e.split("."),
                        r = n,
                        n = t,
                        t = i[1]),
                        this.addNamespaces(t);
                        var a = g.getPath(this.data, i) || {};
                        r ? g.deepExtend(a, n, o) : a = s({}, a, n),
                        g.setPath(this.data, i, a),
                        this.emit("added", e, t)
                    }
                }, {
                    key: "removeResourceBundle",
                    value: function(e, t) {
                        this.hasResourceBundle(e, t) && delete this.data[e][t],
                        this.removeNamespaces(t),
                        this.emit("removed", e, t)
                    }
                }, {
                    key: "hasResourceBundle",
                    value: function(e, t) {
                        return void 0 !== this.getResource(e, t)
                    }
                }, {
                    key: "getResourceBundle",
                    value: function(e, t) {
                        return t || (t = this.options.defaultNS),
                        "v1" === this.options.compatibilityAPI ? s({}, this.getResource(e, t)) : this.getResource(e, t)
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return this.data
                    }
                }]),
                t
            }(f["default"]);
            n["default"] = d,
            t.exports = n["default"]
        }
        , {
            "./EventEmitter": 3,
            "./utils": 14
        }],
        8: [function(e, t, n) {
            "use strict";
            function r(e) {
                if (e && e.__esModule)
                    return e;
                var t = {};
                if (null != e)
                    for (var n in e)
                        Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                return t["default"] = e,
                t
            }
            function o(e) {
                return e && e.__esModule ? e : {
                    "default": e
                }
            }
            function i(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function a(e, t) {
                if ("function" != typeof t && null !== t)
                    throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
            }
            Object.defineProperty(n, "__esModule", {
                value: !0
            });
            var s = Object.assign || function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n)
                        Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                }
                return e
            }
              , u = function() {
                function e(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        "value"in r && (r.writable = !0),
                        Object.defineProperty(e, r.key, r)
                    }
                }
                return function(t, n, r) {
                    return n && e(t.prototype, n),
                    r && e(t, r),
                    t
                }
            }()
              , l = function(e, t, n) {
                for (var r = !0; r; ) {
                    var o = e
                      , i = t
                      , a = n;
                    r = !1,
                    null === o && (o = Function.prototype);
                    var s = Object.getOwnPropertyDescriptor(o, i);
                    if (void 0 !== s) {
                        if ("value"in s)
                            return s.value;
                        var u = s.get;
                        if (void 0 === u)
                            return;
                        return u.call(a)
                    }
                    var l = Object.getPrototypeOf(o);
                    if (null === l)
                        return;
                    e = l,
                    t = i,
                    n = a,
                    r = !0,
                    s = l = void 0
                }
            }
              , c = e("./logger")
              , f = o(c)
              , p = e("./EventEmitter")
              , g = o(p)
              , d = e("./postProcessor")
              , h = o(d)
              , v = e("./compatibility/v1")
              , y = r(v)
              , b = e("./utils")
              , m = r(b)
              , O = function(e) {
                function t(e) {
                    var n = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1];
                    i(this, t),
                    l(Object.getPrototypeOf(t.prototype), "constructor", this).call(this),
                    m.copy(["resourceStore", "languageUtils", "pluralResolver", "interpolator", "backendConnector"], e, this),
                    this.options = n,
                    this.logger = f["default"].create("translator")
                }
                return a(t, e),
                u(t, [{
                    key: "changeLanguage",
                    value: function(e) {
                        e && (this.language = e)
                    }
                }, {
                    key: "exists",
                    value: function(e) {
                        var t = arguments.length <= 1 || void 0 === arguments[1] ? {
                            interpolation: {}
                        } : arguments[1];
                        return "v1" === this.options.compatibilityAPI && (t = y.convertTOptions(t)),
                        void 0 !== this.resolve(e, t)
                    }
                }, {
                    key: "extractFromKey",
                    value: function(e, t) {
                        var n = t.nsSeparator || this.options.nsSeparator || ":"
                          , r = t.ns || this.options.defaultNS;
                        if (e.indexOf(n) > -1) {
                            var o = e.split(n);
                            r = o[0],
                            e = o[1]
                        }
                        return "string" == typeof r && (r = [r]),
                        {
                            key: e,
                            namespaces: r
                        }
                    }
                }, {
                    key: "translate",
                    value: function(e) {
                        var t = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1];
                        if ("object" != typeof t ? t = this.options.overloadTranslationOptionHandler(arguments) : "v1" === this.options.compatibilityAPI && (t = y.convertTOptions(t)),
                        void 0 === e || null === e || "" === e)
                            return "";
                        "number" == typeof e && (e = String(e)),
                        "string" == typeof e && (e = [e]);
                        var n = t.lng || this.language;
                        if (n && "cimode" === n.toLowerCase())
                            return e[e.length - 1];
                        var r = t.keySeparator || this.options.keySeparator || "."
                          , o = this.extractFromKey(e[e.length - 1], t)
                          , i = o.key
                          , a = o.namespaces
                          , u = a[a.length - 1]
                          , l = this.resolve(e, t)
                          , c = Object.prototype.toString.apply(l)
                          , f = ["[object Number]", "[object Function]", "[object RegExp]"]
                          , p = void 0 !== t.joinArrays ? t.joinArrays : this.options.joinArrays;
                        if (l && "string" != typeof l && f.indexOf(c) < 0 && (!p || "[object Array]" !== c)) {
                            if (!t.returnObjects && !this.options.returnObjects)
                                return this.logger.warn("accessing an object - but returnObjects options is not enabled!"),
                                this.options.returnedObjectHandler ? this.options.returnedObjectHandler(i, l, t) : "key '" + i + " (" + this.language + ")' returned an object instead of string.";
                            var g = "[object Array]" === c ? [] : {};
                            for (var d in l)
                                g[d] = this.translate("" + i + r + d, s({
                                    joinArrays: !1,
                                    ns: a
                                }, t));
                            l = g
                        } else if (p && "[object Array]" === c)
                            l = l.join(p),
                            l && (l = this.extendTranslation(l, i, t));
                        else {
                            var h = !1
                              , v = !1;
                            if (!this.isValidLookup(l) && t.defaultValue && (h = !0,
                            l = t.defaultValue),
                            this.isValidLookup(l) || (v = !0,
                            l = i),
                            (v || h) && (this.logger.log("missingKey", n, u, i, l),
                            this.options.saveMissing)) {
                                var b = [];
                                if ("fallback" === this.options.saveMissingTo && this.options.fallbackLng && this.options.fallbackLng[0])
                                    for (var m = 0; m < this.options.fallbackLng.length; m++)
                                        b.push(this.options.fallbackLng[m]);
                                else
                                    "all" === this.options.saveMissingTo ? b = this.languageUtils.toResolveHierarchy(t.lng || this.language) : b.push(t.lng || this.language);
                                this.options.missingKeyHandler ? this.options.missingKeyHandler(b, u, i, l) : this.backendConnector && this.backendConnector.saveMissing && this.backendConnector.saveMissing(b, u, i, l),
                                this.emit("missingKey", b, u, i, l)
                            }
                            l = this.extendTranslation(l, i, t),
                            v && l === i && this.options.appendNamespaceToMissingKey && (l = u + ":" + i),
                            v && this.options.parseMissingKeyHandler && (l = this.options.parseMissingKeyHandler(l))
                        }
                        return l
                    }
                }, {
                    key: "extendTranslation",
                    value: function(e, t, n) {
                        var r = this;
                        n.interpolation && this.interpolator.init(n);
                        var o = n.replace && "string" != typeof n.replace ? n.replace : n;
                        this.options.interpolation.defaultVariables && (o = s({}, this.options.interpolation.defaultVariables, o)),
                        e = this.interpolator.interpolate(e, o),
                        e = this.interpolator.nest(e, function() {
                            for (var e = arguments.length, t = Array(e), n = 0; e > n; n++)
                                t[n] = arguments[n];
                            return r.translate.apply(r, t)
                        }, n),
                        n.interpolation && this.interpolator.reset();
                        var i = n.postProcess || this.options.postProcess
                          , a = "string" == typeof i ? [i] : i;
                        return void 0 !== e && a && a.length && n.applyPostProcessor !== !1 && (e = h["default"].handle(a, e, t, n, this)),
                        e
                    }
                }, {
                    key: "resolve",
                    value: function(e) {
                        var t = this
                          , n = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1]
                          , r = void 0;
                        return "string" == typeof e && (e = [e]),
                        e.forEach(function(e) {
                            if (!t.isValidLookup(r)) {
                                var o = t.extractFromKey(e, n)
                                  , i = o.key
                                  , a = o.namespaces;
                                t.options.fallbackNS && (a = a.concat(t.options.fallbackNS));
                                var s = void 0 !== n.count && "string" != typeof n.count
                                  , u = void 0 !== n.context && "string" == typeof n.context && "" !== n.context
                                  , l = n.lngs ? n.lngs : t.languageUtils.toResolveHierarchy(n.lng || t.language);
                                a.forEach(function(e) {
                                    t.isValidLookup(r) || l.forEach(function(o) {
                                        if (!t.isValidLookup(r)) {
                                            var a = i
                                              , l = [a];
                                            u && l.push(a += "" + t.options.contextSeparator + n.context),
                                            s && l.push(a += t.pluralResolver.getSuffix(o, n.count));
                                            for (var c = void 0; c = l.pop(); )
                                                t.isValidLookup(r) || (r = t.getResource(o, e, c, n))
                                        }
                                    })
                                })
                            }
                        }),
                        r
                    }
                }, {
                    key: "isValidLookup",
                    value: function(e) {
                        return !(void 0 === e || !this.options.returnNull && null === e || !this.options.returnEmptyString && "" === e)
                    }
                }, {
                    key: "getResource",
                    value: function(e, t, n) {
                        var r = arguments.length <= 3 || void 0 === arguments[3] ? {} : arguments[3];
                        return this.resourceStore.getResource(e, t, n, r)
                    }
                }]),
                t
            }(g["default"]);
            n["default"] = O,
            t.exports = n["default"]
        }
        , {
            "./EventEmitter": 3,
            "./compatibility/v1": 9,
            "./logger": 12,
            "./postProcessor": 13,
            "./utils": 14
        }],
        9: [function(e, t, n) {
            "use strict";
            function r(e) {
                return e && e.__esModule ? e : {
                    "default": e
                }
            }
            function o(e) {
                return e.interpolation = {
                    unescapeSuffix: "HTML"
                },
                e.interpolation.prefix = e.interpolationPrefix || "__",
                e.interpolation.suffix = e.interpolationSuffix || "__",
                e.interpolation.escapeValue = e.escapeInterpolation || !1,
                e.interpolation.nestingPrefix = e.reusePrefix || "$t(",
                e.interpolation.nestingSuffix = e.reuseSuffix || ")",
                e
            }
            function i(e) {
                return e.resStore && (e.resources = e.resStore),
                e.ns && e.ns.defaultNs ? (e.defaultNS = e.ns.defaultNs,
                e.ns = e.ns.namespaces) : e.defaultNS = e.ns || "translation",
                e.fallbackToDefaultNS && e.defaultNS && (e.fallbackNS = e.defaultNS),
                e.saveMissing = e.sendMissing,
                e.saveMissingTo = e.sendMissingTo || "current",
                e.returnNull = e.fallbackOnNull ? !1 : !0,
                e.returnEmptyString = e.fallbackOnEmpty ? !1 : !0,
                e.returnObjects = e.returnObjectTrees,
                e.joinArrays = "\n",
                e.returnedObjectHandler = e.objectTreeKeyHandler,
                e.parseMissingKeyHandler = e.parseMissingKey,
                e.appendNamespaceToMissingKey = !0,
                e.nsSeparator = e.nsseparator,
                e.keySeparator = e.keyseparator,
                "sprintf" === e.shortcutFunction && (e.overloadTranslationOptionHandler = function(e) {
                    for (var t = [], n = 1; n < e.length; n++)
                        t.push(e[n]);
                    return {
                        postProcess: "sprintf",
                        sprintf: t
                    }
                }
                ),
                e.whitelist = e.lngWhitelist,
                e.preload = e.preload,
                "current" === e.load && (e.load = "currentOnly"),
                "unspecific" === e.load && (e.load = "languageOnly"),
                e.backend = e.backend || {},
                e.backend.loadPath = e.resGetPath || "locales/__lng__/__ns__.json",
                e.backend.addPath = e.resPostPath || "locales/add/__lng__/__ns__",
                e.backend.allowMultiLoading = e.dynamicLoad,
                e.cache = e.cache || {},
                e.cache.prefix = "res_",
                e.cache.expirationTime = 6048e5,
                e.cache.enabled = e.useLocalStorage ? !0 : !1,
                e = o(e),
                e.defaultVariables && (e.interpolation.defaultVariables = e.defaultVariables),
                e
            }
            function a(e) {
                return e = o(e),
                e.joinArrays = "\n",
                e
            }
            function s(e) {
                return (e.interpolationPrefix || e.interpolationSuffix || e.escapeInterpolation) && (e = o(e)),
                e.nsSeparator = e.nsseparator,
                e.keySeparator = e.keyseparator,
                e.returnObjects = e.returnObjectTrees,
                e
            }
            function u(e) {
                e.lng = function() {
                    return c["default"].deprecate("i18next.lng() can be replaced by i18next.language for detected language or i18next.languages for languages ordered by translation lookup."),
                    e.services.languageUtils.toResolveHierarchy(e.language)[0]
                }
                ,
                e.preload = function(t, n) {
                    c["default"].deprecate("i18next.preload() can be replaced with i18next.loadLanguages()"),
                    e.loadLanguages(t, n)
                }
                ,
                e.setLng = function(t, n, r) {
                    return c["default"].deprecate("i18next.setLng() can be replaced with i18next.changeLanguage() or i18next.getFixedT() to get a translation function with fixed language or namespace."),
                    "function" == typeof n && (r = n,
                    n = {}),
                    n || (n = {}),
                    n.fixLng === !0 && r ? r(null, e.getFixedT(t)) : void e.changeLanguage(t, r)
                }
                ,
                e.addPostProcessor = function(t, n) {
                    c["default"].deprecate("i18next.addPostProcessor() can be replaced by i18next.use({ type: 'postProcessor', name: 'name', process: fc })"),
                    e.use({
                        type: "postProcessor",
                        name: t,
                        process: n
                    })
                }
            }
            Object.defineProperty(n, "__esModule", {
                value: !0
            }),
            n.convertAPIOptions = i,
            n.convertJSONOptions = a,
            n.convertTOptions = s,
            n.appendBackwardsAPI = u;
            var l = e("../logger")
              , c = r(l)
        }
        , {
            "../logger": 12
        }],
        10: [function(e, t, n) {
            "use strict";
            function r() {
                return {
                    debug: !1,
                    ns: ["translation"],
                    defaultNS: ["translation"],
                    fallbackLng: ["dev"],
                    fallbackNS: !1,
                    whitelist: !1,
                    load: "all",
                    preload: !1,
                    keySeparator: ".",
                    nsSeparator: ":",
                    pluralSeparator: "_",
                    contextSeparator: "_",
                    saveMissing: !1,
                    saveMissingTo: "fallback",
                    missingKeyHandler: !1,
                    postProcess: !1,
                    returnNull: !0,
                    returnEmptyString: !0,
                    returnObjects: !1,
                    joinArrays: !1,
                    returnedObjectHandler: function() {},
                    parseMissingKeyHandler: !1,
                    appendNamespaceToMissingKey: !1,
                    overloadTranslationOptionHandler: function(e) {
                        return {
                            defaultValue: e[1]
                        }
                    },
                    interpolation: {
                        escapeValue: !0,
                        prefix: "{{",
                        suffix: "}}",
                        unescapePrefix: "-",
                        nestingPrefix: "$t(",
                        nestingSuffix: ")",
                        defaultVariables: void 0
                    }
                }
            }
            function o(e) {
                return "string" == typeof e.ns && (e.ns = [e.ns]),
                "string" == typeof e.fallbackLng && (e.fallbackLng = [e.fallbackLng]),
                "string" == typeof e.fallbackNS && (e.fallbackNS = [e.fallbackNS]),
                e.whitelist && e.whitelist.indexOf("cimode") < 0 && e.whitelist.push("cimode"),
                e
            }
            Object.defineProperty(n, "__esModule", {
                value: !0
            }),
            n.get = r,
            n.transformOptions = o
        }
        , {}],
        11: [function(e, t, n) {
            "use strict";
            function r(e) {
                if (e && e.__esModule)
                    return e;
                var t = {};
                if (null != e)
                    for (var n in e)
                        Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                return t["default"] = e,
                t
            }
            function o(e) {
                return e && e.__esModule ? e : {
                    "default": e
                }
            }
            function i(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function a(e, t) {
                if ("function" != typeof t && null !== t)
                    throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
            }
            Object.defineProperty(n, "__esModule", {
                value: !0
            });
            var s = Object.assign || function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n)
                        Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                }
                return e
            }
              , u = function() {
                function e(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        "value"in r && (r.writable = !0),
                        Object.defineProperty(e, r.key, r)
                    }
                }
                return function(t, n, r) {
                    return n && e(t.prototype, n),
                    r && e(t, r),
                    t
                }
            }()
              , l = function(e, t, n) {
                for (var r = !0; r; ) {
                    var o = e
                      , i = t
                      , a = n;
                    r = !1,
                    null === o && (o = Function.prototype);
                    var s = Object.getOwnPropertyDescriptor(o, i);
                    if (void 0 !== s) {
                        if ("value"in s)
                            return s.value;
                        var u = s.get;
                        if (void 0 === u)
                            return;
                        return u.call(a)
                    }
                    var l = Object.getPrototypeOf(o);
                    if (null === l)
                        return;
                    e = l,
                    t = i,
                    n = a,
                    r = !0,
                    s = l = void 0
                }
            }
              , c = e("./logger")
              , f = o(c)
              , p = e("./EventEmitter")
              , g = o(p)
              , d = e("./ResourceStore")
              , h = o(d)
              , v = e("./Translator")
              , y = o(v)
              , b = e("./LanguageUtils")
              , m = o(b)
              , O = e("./PluralResolver")
              , k = o(O)
              , x = e("./Interpolator")
              , w = o(x)
              , P = e("./BackendConnector")
              , j = o(P)
              , _ = e("./CacheConnector")
              , S = o(_)
              , E = e("./defaults")
              , L = e("./postProcessor")
              , N = o(L)
              , C = e("./compatibility/v1")
              , R = r(C)
              , M = function(e) {
                function t(e, n) {
                    void 0 === e && (e = {}),
                    i(this, t),
                    l(Object.getPrototypeOf(t.prototype), "constructor", this).call(this),
                    this.options = (0,
                    E.transformOptions)(e),
                    this.services = {},
                    this.logger = f["default"],
                    this.modules = {},
                    n && !this.isInitialized && this.init(e, n)
                }
                return a(t, e),
                u(t, [{
                    key: "init",
                    value: function(e, t) {
                        function n(e) {
                            return e ? "function" == typeof e ? new e : e : void 0
                        }
                        var r = this;
                        if ("function" == typeof e && (t = e,
                        e = {}),
                        e || (e = {}),
                        "v1" === e.compatibilityAPI ? this.options = s({}, (0,
                        E.get)(), (0,
                        E.transformOptions)(R.convertAPIOptions(e)), {}) : "v1" === e.compatibilityJSON ? this.options = s({}, (0,
                        E.get)(), (0,
                        E.transformOptions)(R.convertJSONOptions(e)), {}) : this.options = s({}, (0,
                        E.get)(), this.options, (0,
                        E.transformOptions)(e)),
                        t || (t = function() {}
                        ),
                        !this.options.isClone) {
                            this.modules.logger ? f["default"].init(n(this.modules.logger), this.options) : f["default"].init(null, this.options);
                            var o = new m["default"](this.options);
                            this.store = new h["default"](this.options.resources,this.options);
                            var i = this.services;
                            i.logger = f["default"],
                            i.resourceStore = this.store,
                            i.resourceStore.on("added removed", function(e, t) {
                                i.cacheConnector.save()
                            }),
                            i.languageUtils = o,
                            i.pluralResolver = new k["default"](o,{
                                prepend: this.options.pluralSeparator,
                                compatibilityJSON: this.options.compatibilityJSON
                            }),
                            i.interpolator = new w["default"](this.options),
                            i.backendConnector = new j["default"](n(this.modules.backend),i.resourceStore,i,this.options),
                            i.backendConnector.on("*", function(e) {
                                for (var t = arguments.length, n = Array(t > 1 ? t - 1 : 0), o = 1; t > o; o++)
                                    n[o - 1] = arguments[o];
                                r.emit.apply(r, [e].concat(n))
                            }),
                            i.backendConnector.on("loaded", function(e) {
                                i.cacheConnector.save()
                            }),
                            i.cacheConnector = new S["default"](n(this.modules.cache),i.resourceStore,i,this.options),
                            i.cacheConnector.on("*", function(e) {
                                for (var t = arguments.length, n = Array(t > 1 ? t - 1 : 0), o = 1; t > o; o++)
                                    n[o - 1] = arguments[o];
                                r.emit.apply(r, [e].concat(n))
                            }),
                            this.modules.languageDetector && (i.languageDetector = n(this.modules.languageDetector),
                            i.languageDetector.init(i, this.options.detection, this.options)),
                            this.translator = new y["default"](this.services,this.options),
                            this.translator.on("*", function(e) {
                                for (var t = arguments.length, n = Array(t > 1 ? t - 1 : 0), o = 1; t > o; o++)
                                    n[o - 1] = arguments[o];
                                r.emit.apply(r, [e].concat(n))
                            })
                        }
                        var a = ["getResource", "addResource", "addResources", "addResourceBundle", "removeResourceBundle", "hasResourceBundle", "getResourceBundle"];
                        a.forEach(function(e) {
                            r[e] = function() {
                                return this.store[e].apply(this.store, arguments)
                            }
                        }),
                        "v1" === this.options.compatibilityAPI && R.appendBackwardsAPI(this),
                        this.changeLanguage(this.options.lng, function(e, n) {
                            r.emit("initialized", r.options),
                            r.logger.log("initialized", r.options),
                            t(e, n)
                        })
                    }
                }, {
                    key: "loadResources",
                    value: function(e) {
                        var t = this;
                        if (e || (e = function() {}
                        ),
                        this.options.resources)
                            e(null);
                        else {
                            var n = function() {
                                if (t.language && "cimode" === t.language.toLowerCase())
                                    return {
                                        v: e()
                                    };
                                var n = []
                                  , r = function(e) {
                                    var r = t.services.languageUtils.toResolveHierarchy(e);
                                    r.forEach(function(e) {
                                        n.indexOf(e) < 0 && n.push(e)
                                    })
                                };
                                r(t.language),
                                t.options.preload && t.options.preload.forEach(function(e) {
                                    r(e)
                                }),
                                t.services.cacheConnector.load(n, t.options.ns, function() {
                                    t.services.backendConnector.load(n, t.options.ns, e)
                                })
                            }();
                            if ("object" == typeof n)
                                return n.v
                        }
                    }
                }, {
                    key: "use",
                    value: function(e) {
                        return "backend" === e.type && (this.modules.backend = e),
                        "cache" === e.type && (this.modules.cache = e),
                        ("logger" === e.type || e.log && e.warn && e.warn) && (this.modules.logger = e),
                        "languageDetector" === e.type && (this.modules.languageDetector = e),
                        "postProcessor" === e.type && N["default"].addPostProcessor(e),
                        this
                    }
                }, {
                    key: "changeLanguage",
                    value: function(e, t) {
                        var n = this
                          , r = function(r) {
                            e && (n.emit("languageChanged", e),
                            n.logger.log("languageChanged", e)),
                            t && t(r, function() {
                                for (var e = arguments.length, t = Array(e), r = 0; e > r; r++)
                                    t[r] = arguments[r];
                                return n.t.apply(n, t)
                            })
                        };
                        !e && this.services.languageDetector && (e = this.services.languageDetector.detect()),
                        e && (this.language = e,
                        this.languages = this.services.languageUtils.toResolveHierarchy(e),
                        this.translator.changeLanguage(e),
                        this.services.languageDetector && this.services.languageDetector.cacheUserLanguage(e)),
                        this.loadResources(function(e) {
                            r(e)
                        })
                    }
                }, {
                    key: "getFixedT",
                    value: function(e, t) {
                        var n = this
                          , r = function o(e, t) {
                            return t = t || {},
                            t.lng = t.lng || o.lng,
                            t.ns = t.ns || o.ns,
                            n.t(e, t)
                        };
                        return r.lng = e,
                        r.ns = t,
                        r
                    }
                }, {
                    key: "t",
                    value: function() {
                        return this.translator && this.translator.translate.apply(this.translator, arguments)
                    }
                }, {
                    key: "exists",
                    value: function() {
                        return this.translator && this.translator.exists.apply(this.translator, arguments)
                    }
                }, {
                    key: "setDefaultNamespace",
                    value: function(e) {
                        this.options.defaultNS = e
                    }
                }, {
                    key: "loadNamespaces",
                    value: function(e, t) {
                        var n = this;
                        return this.options.ns ? ("string" == typeof e && (e = [e]),
                        e.forEach(function(e) {
                            n.options.ns.indexOf(e) < 0 && n.options.ns.push(e)
                        }),
                        void this.loadResources(t)) : t && t()
                    }
                }, {
                    key: "loadLanguages",
                    value: function(e, t) {
                        "string" == typeof e && (e = [e]),
                        this.options.preload = this.options.preload ? this.options.preload.concat(e) : e,
                        this.loadResources(t)
                    }
                }, {
                    key: "dir",
                    value: function(e) {
                        e || (e = this.language);
                        var t = ["ar", "shu", "sqr", "ssh", "xaa", "yhd", "yud", "aao", "abh", "abv", "acm", "acq", "acw", "acx", "acy", "adf", "ads", "aeb", "aec", "afb", "ajp", "apc", "apd", "arb", "arq", "ars", "ary", "arz", "auz", "avl", "ayh", "ayl", "ayn", "ayp", "bbz", "pga", "he", "iw", "ps", "pbt", "pbu", "pst", "prp", "prd", "ur", "ydd", "yds", "yih", "ji", "yi", "hbo", "men", "xmn", "fa", "jpr", "peo", "pes", "prs", "dv", "sam"];
                        return t.indexOf(this.services.languageUtils.getLanguagePartFromCode(e)) ? "ltr" : "rtl"
                    }
                }, {
                    key: "createInstance",
                    value: function(e, n) {
                        return void 0 === e && (e = {}),
                        new t(e,n)
                    }
                }, {
                    key: "cloneInstance",
                    value: function(e, n) {
                        var r = this;
                        void 0 === e && (e = {});
                        var o = new t(s({}, e, this.options, {
                            isClone: !0
                        }),n)
                          , i = ["store", "translator", "services", "language"];
                        return i.forEach(function(e) {
                            o[e] = r[e]
                        }),
                        o
                    }
                }]),
                t
            }(g["default"]);
            n["default"] = new M,
            t.exports = n["default"]
        }
        , {
            "./BackendConnector": 1,
            "./CacheConnector": 2,
            "./EventEmitter": 3,
            "./Interpolator": 4,
            "./LanguageUtils": 5,
            "./PluralResolver": 6,
            "./ResourceStore": 7,
            "./Translator": 8,
            "./compatibility/v1": 9,
            "./defaults": 10,
            "./logger": 12,
            "./postProcessor": 13
        }],
        12: [function(e, t, n) {
            "use strict";
            function r(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            Object.defineProperty(n, "__esModule", {
                value: !0
            });
            var o = Object.assign || function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n)
                        Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                }
                return e
            }
              , i = function() {
                function e(e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n];
                        r.enumerable = r.enumerable || !1,
                        r.configurable = !0,
                        "value"in r && (r.writable = !0),
                        Object.defineProperty(e, r.key, r)
                    }
                }
                return function(t, n, r) {
                    return n && e(t.prototype, n),
                    r && e(t, r),
                    t
                }
            }()
              , a = {
                type: "logger",
                log: function(e) {
                    this._output("log", e)
                },
                warn: function(e) {
                    this._output("warn", e)
                },
                error: function(e) {
                    this._output("error", e)
                },
                _output: function(e, t) {
                    console && console[e] && console[e].apply(console, Array.prototype.slice.call(t))
                }
            }
              , s = function() {
                function e(t) {
                    var n = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1];
                    r(this, e),
                    this.subs = [],
                    this.init(t, n)
                }
                return i(e, [{
                    key: "init",
                    value: function(e) {
                        var t = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1];
                        this.prefix = t.prefix || "i18next:",
                        this.logger = e || a,
                        this.options = t,
                        this.debug = t.debug === !1 ? !1 : !0
                    }
                }, {
                    key: "setDebug",
                    value: function(e) {
                        this.debug = e,
                        this.subs.forEach(function(t) {
                            t.setDebug(e)
                        })
                    }
                }, {
                    key: "log",
                    value: function() {
                        this.forward(arguments, "log", "", !0)
                    }
                }, {
                    key: "warn",
                    value: function() {
                        this.forward(arguments, "warn", "", !0)
                    }
                }, {
                    key: "error",
                    value: function() {
                        this.forward(arguments, "error", "")
                    }
                }, {
                    key: "deprecate",
                    value: function() {
                        this.forward(arguments, "warn", "WARNING DEPRECATED: ", !0)
                    }
                }, {
                    key: "forward",
                    value: function(e, t, n, r) {
                        (!r || this.debug) && ("string" == typeof e[0] && (e[0] = n + this.prefix + " " + e[0]),
                        this.logger[t](e))
                    }
                }, {
                    key: "create",
                    value: function(t) {
                        var n = new e(this.logger,o({
                            prefix: this.prefix + ":" + t + ":"
                        }, this.options));
                        return this.subs.push(n),
                        n
                    }
                }]),
                e
            }();
            n["default"] = new s,
            t.exports = n["default"]
        }
        , {}],
        13: [function(e, t, n) {
            "use strict";
            Object.defineProperty(n, "__esModule", {
                value: !0
            }),
            n["default"] = {
                processors: {},
                addPostProcessor: function(e) {
                    this.processors[e.name] = e
                },
                handle: function(e, t, n, r, o) {
                    var i = this;
                    return e.forEach(function(e) {
                        i.processors[e] && (t = i.processors[e].process(t, n, r, o))
                    }),
                    t
                }
            },
            t.exports = n["default"]
        }
        , {}],
        14: [function(e, t, n) {
            "use strict";
            function r(e) {
                return null == e ? "" : "" + e
            }
            function o(e, t, n) {
                e.forEach(function(e) {
                    t[e] && (n[e] = t[e])
                })
            }
            function i(e, t, n) {
                function r(e) {
                    return e && e.indexOf("###") > -1 ? e.replace(/###/g, ".") : e
                }
                for (var o = "string" != typeof t ? [].concat(t) : t.split("."); o.length > 1; ) {
                    if (!e)
                        return {};
                    var i = r(o.shift());
                    !e[i] && n && (e[i] = new n),
                    e = e[i]
                }
                return e ? {
                    obj: e,
                    k: r(o.shift())
                } : {}
            }
            function a(e, t, n) {
                var r = i(e, t, Object)
                  , o = r.obj
                  , a = r.k;
                o[a] = n
            }
            function s(e, t, n, r) {
                var o = i(e, t, Object)
                  , a = o.obj
                  , s = o.k;
                a[s] = a[s] || [],
                r && (a[s] = a[s].concat(n)),
                r || a[s].push(n)
            }
            function u(e, t) {
                var n = i(e, t)
                  , r = n.obj
                  , o = n.k;
                return r ? r[o] : void 0
            }
            function l(e, t, n) {
                for (var r in t)
                    r in e ? "string" == typeof e[r] || e[r]instanceof String || "string" == typeof t[r] || t[r]instanceof String ? n && (e[r] = t[r]) : l(e[r], t[r], n) : e[r] = t[r];
                return e
            }
            function c(e) {
                return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&")
            }
            function f(e) {
                return "string" == typeof e ? e.replace(/[&<>"'\/]/g, function(e) {
                    return p[e]
                }) : e
            }
            Object.defineProperty(n, "__esModule", {
                value: !0
            }),
            n.makeString = r,
            n.copy = o,
            n.setPath = a,
            n.pushPath = s,
            n.getPath = u,
            n.deepExtend = l,
            n.regexEscape = c,
            n.escape = f;
            var p = {
                "&": "&amp;",
                "<": "&lt;",
                ">": "&gt;",
                '"': "&quot;",
                "'": "&#39;",
                "/": "&#x2F;"
            }
        }
        , {}]
    }, {}, [11])(11)
});
/*! jQuery number 2.1.3 (c) github.com/teamdf/jquery-number | opensource.teamdf.com/license */
(function(h) {
    function r(f, a) {
        if (this.createTextRange) {
            var c = this.createTextRange();
            c.collapse(true);
            c.moveStart("character", f);
            c.moveEnd("character", a - f);
            c.select()
        } else if (this.setSelectionRange) {
            this.focus();
            this.setSelectionRange(f, a)
        }
    }
    function s(f) {
        var a = this.value.length;
        f = f.toLowerCase() == "start" ? "Start" : "End";
        if (document.selection) {
            a = document.selection.createRange();
            var c;
            c = a.duplicate();
            c.expand("textedit");
            c.setEndPoint("EndToEnd", a);
            c = c.text.length - a.text.length;
            a = c + a.text.length;
            return f == "Start" ? c : a
        } else if (typeof this["selection" + f] != "undefined")
            a = this["selection" + f];
        return a
    }
    var q = {
        codes: {
            188: 44,
            109: 45,
            190: 46,
            191: 47,
            192: 96,
            220: 92,
            222: 39,
            221: 93,
            219: 91,
            173: 45,
            187: 61,
            186: 59,
            189: 45,
            110: 46
        },
        shifts: {
            96: "~",
            49: "!",
            50: "@",
            51: "#",
            52: "$",
            53: "%",
            54: "^",
            55: "&",
            56: "*",
            57: "(",
            48: ")",
            45: "_",
            61: "+",
            91: "{",
            93: "}",
            92: "|",
            59: ":",
            39: '"',
            44: "<",
            46: ">",
            47: "?"
        }
    };
    h.fn.number = function(f, a, c, k) {
        k = typeof k === "undefined" ? "," : k;
        c = typeof c === "undefined" ? "." : c;
        a = typeof a === "undefined" ? 0 : a;
        var j = "\\u" + ("0000" + c.charCodeAt(0).toString(16)).slice(-4)
          , o = RegExp("[^" + j + "0-9]", "g")
          , p = RegExp(j, "g");
        if (f === true)
            return this.is("input:text") ? this.on({
                "keydown.format": function(b) {
                    var d = h(this)
                      , e = d.data("numFormat")
                      , g = b.keyCode ? b.keyCode : b.which
                      , m = ""
                      , i = s.apply(this, ["start"])
                      , n = s.apply(this, ["end"])
                      , l = "";
                    l = false;
                    if (q.codes.hasOwnProperty(g))
                        g = q.codes[g];
                    if (!b.shiftKey && g >= 65 && g <= 90)
                        g += 32;
                    else if (!b.shiftKey && g >= 69 && g <= 105)
                        g -= 48;
                    else if (b.shiftKey && q.shifts.hasOwnProperty(g))
                        m = q.shifts[g];
                    if (m == "")
                        m = String.fromCharCode(g);
                    if (g !== 8 && m != c && !m.match(/[0-9]/)) {
                        d = b.keyCode ? b.keyCode : b.which;
                        if (d == 46 || d == 8 || d == 9 || d == 27 || d == 13 || (d == 65 || d == 82) && (b.ctrlKey || b.metaKey) === true || (d == 86 || d == 67) && (b.ctrlKey || b.metaKey) === true || d >= 35 && d <= 39)
                            return;
                        b.preventDefault();
                        return false
                    }
                    if (i == 0 && n == this.value.length || d.val() == 0)
                        if (g === 8) {
                            i = n = 1;
                            this.value = "";
                            e.init = a > 0 ? -1 : 0;
                            e.c = a > 0 ? -(a + 1) : 0;
                            r.apply(this, [0, 0])
                        } else if (m === c) {
                            i = n = 1;
                            this.value = "0" + c + Array(a + 1).join("0");
                            e.init = a > 0 ? 1 : 0;
                            e.c = a > 0 ? -(a + 1) : 0
                        } else {
                            if (this.value.length === 0) {
                                e.init = a > 0 ? -1 : 0;
                                e.c = a > 0 ? -a : 0
                            }
                        }
                    else
                        e.c = n - this.value.length;
                    if (a > 0 && m == c && i == this.value.length - a - 1) {
                        e.c++;
                        e.init = Math.max(0, e.init);
                        b.preventDefault();
                        l = this.value.length + e.c
                    } else if (m == c) {
                        e.init = Math.max(0, e.init);
                        b.preventDefault()
                    } else if (a > 0 && g == 8 && i == this.value.length - a) {
                        b.preventDefault();
                        e.c--;
                        l = this.value.length + e.c
                    } else if (a > 0 && g == 8 && i > this.value.length - a) {
                        if (this.value === "")
                            return;
                        if (this.value.slice(i - 1, i) != "0") {
                            l = this.value.slice(0, i - 1) + "0" + this.value.slice(i);
                            d.val(l.replace(o, "").replace(p, c))
                        }
                        b.preventDefault();
                        e.c--;
                        l = this.value.length + e.c
                    } else if (g == 8 && this.value.slice(i - 1, i) == k) {
                        b.preventDefault();
                        e.c--;
                        l = this.value.length + e.c
                    } else if (a > 0 && i == n && this.value.length > a + 1 && i > this.value.length - a - 1 && isFinite(+m) && !b.metaKey && !b.ctrlKey && !b.altKey && m.length === 1) {
                        this.value = l = n === this.value.length ? this.value.slice(0, i - 1) : this.value.slice(0, i) + this.value.slice(i + 1);
                        l = i
                    }
                    l !== false && r.apply(this, [l, l]);
                    d.data("numFormat", e)
                },
                "keyup.format": function(b) {
                    var d = h(this)
                      , e = d.data("numFormat");
                    b = b.keyCode ? b.keyCode : b.which;
                    var g = s.apply(this, ["start"]);
                    if (!(this.value === "" || (b < 48 || b > 57) && (b < 96 || b > 105) && b !== 8)) {
                        d.val(d.val());
                        if (a > 0)
                            if (e.init < 1) {
                                g = this.value.length - a - (e.init < 0 ? 1 : 0);
                                e.c = g - this.value.length;
                                e.init = 1;
                                d.data("numFormat", e)
                            } else if (g > this.value.length - a && b != 8) {
                                e.c++;
                                d.data("numFormat", e)
                            }
                        d = this.value.length + e.c;
                        r.apply(this, [d, d])
                    }
                },
                "paste.format": function(b) {
                    var d = h(this)
                      , e = b.originalEvent
                      , g = null;
                    if (window.clipboardData && window.clipboardData.getData)
                        g = window.clipboardData.getData("Text");
                    else if (e.clipboardData && e.clipboardData.getData)
                        g = e.clipboardData.getData("text/plain");
                    d.val(g);
                    b.preventDefault();
                    return false
                }
            }).each(function() {
                var b = h(this).data("numFormat", {
                    c: -(a + 1),
                    decimals: a,
                    thousands_sep: k,
                    dec_point: c,
                    regex_dec_num: o,
                    regex_dec: p,
                    init: false
                });
                this.value !== "" && b.val(b.val())
            }) : this.each(function() {
                var b = h(this)
                  , d = +b.text().replace(o, "").replace(p, ".");
                b.number(!isFinite(d) ? 0 : +d, a, c, k)
            });
        return this.text(h.number.apply(window, arguments))
    }
    ;
    var t = null
      , u = null;
    if (h.isPlainObject(h.valHooks.text)) {
        if (h.isFunction(h.valHooks.text.get))
            t = h.valHooks.text.get;
        if (h.isFunction(h.valHooks.text.set))
            u = h.valHooks.text.set
    } else
        h.valHooks.text = {};
    h.valHooks.text.get = function(f) {
        var a = h(f).data("numFormat");
        if (a) {
            if (f.value === "")
                return "";
            f = +f.value.replace(a.regex_dec_num, "").replace(a.regex_dec, ".");
            return "" + (isFinite(f) ? f : 0)
        } else if (h.isFunction(t))
            return t(f)
    }
    ;
    h.valHooks.text.set = function(f, a) {
        var c = h(f).data("numFormat");
        if (c)
            return f.value = h.number(a, c.decimals, c.dec_point, c.thousands_sep);
        else if (h.isFunction(u))
            return u(f, a)
    }
    ;
    h.number = function(f, a, c, k) {
        k = typeof k === "undefined" ? "," : k;
        c = typeof c === "undefined" ? "." : c;
        a = !isFinite(+a) ? 0 : Math.abs(a);
        var j = "\\u" + ("0000" + c.charCodeAt(0).toString(16)).slice(-4)
          , o = "\\u" + ("0000" + k.charCodeAt(0).toString(16)).slice(-4);
        f = (f + "").replace(".", c).replace(RegExp(o, "g"), "").replace(RegExp(j, "g"), ".").replace(RegExp("[^0-9+-Ee.]", "g"), "");
        f = !isFinite(+f) ? 0 : +f;
        j = "";
        j = function(p, b) {
            var d = Math.pow(10, b);
            return "" + Math.round(p * d) / d
        }
        ;
        j = (a ? j(f, a) : "" + Math.round(f)).split(".");
        if (j[0].length > 3)
            j[0] = j[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, k);
        if ((j[1] || "").length < a) {
            j[1] = j[1] || "";
            j[1] += Array(a - j[1].length + 1).join("0")
        }
        return j.join(c)
    }
}
)(jQuery);
/**!
 * digest-header - index.js
 *
 * Copyright(c) fengmk2 and other contributors.
 * MIT Licensed
 *
 * Authors:
 *   fengmk2 <fengmk2@gmail.com> (http://fengmk2.github.com)
 */

'use strict';

/**
 * Module dependencies.
 */

var digestHeader = function() {
    var AUTH_KEY_VALUE_RE = /(\w+)=["']?([^'"]+)["']?/;
    var NC = 0;
    var NC_PAD = '00000000';

    return function(method, uri, wwwAuthenticate, userpass) {
        var parts = wwwAuthenticate.split(',');
        var opts = {};
        for (var i = 0; i < parts.length; i++) {
            var m = parts[i].match(AUTH_KEY_VALUE_RE);
            if (m) {
                opts[m[1]] = m[2].replace(/["']/g, '');
            }
        }

        if (!opts.realm || !opts.nonce) {
            return '';
        }

        var qop = opts.qop || '';

        // WWW-Authenticate: Digest realm="testrealm@host.com",
        //                       qop="auth,auth-int",
        //                       nonce="dcd98b7102dd2f0e8b11d0f600bfb0c093",
        //                       opaque="5ccc069c403ebaf9f0171e9517f40e41"
        // Authorization: Digest username="Mufasa",
        //                    realm="testrealm@host.com",
        //                    nonce="dcd98b7102dd2f0e8b11d0f600bfb0c093",
        //                    uri="/dir/index.html",
        //                    qop=auth,
        //                    nc=00000001,
        //                    cnonce="0a4f113b",
        //                    response="6629fae49393a05397450978507c4ef1",
        //                    opaque="5ccc069c403ebaf9f0171e9517f40e41"
        // HA1 = MD5( "Mufasa:testrealm@host.com:Circle Of Life" )
        //      = 939e7578ed9e3c518a452acee763bce9
        //
        //  HA2 = MD5( "GET:/dir/index.html" )
        //      = 39aff3a2bab6126f332b942af96d3366
        //
        //  Response = MD5( "939e7578ed9e3c518a452acee763bce9:\
        //                   dcd98b7102dd2f0e8b11d0f600bfb0c093:\
        //                   00000001:0a4f113b:auth:\
        //                   39aff3a2bab6126f332b942af96d3366" )
        //           = 6629fae49393a05397450978507c4ef1
        userpass = userpass.split(':');

        var nc = String(++NC);
        nc = NC_PAD.substring(nc.length) + nc;

        var randomBytes = function(count) {
            var ret = '';
            for (var i = 0; i < count; i++)
                ret = ret + Math.random().toString(16).substring(2, 4);
            return ret
        };
        var cnonce = randomBytes(8);

        var ha1 = md5(userpass[0] + ':' + opts.realm + ':' + userpass[1]);
        var ha2 = md5(method.toUpperCase() + ':' + uri);
        var s = ha1 + ':' + opts.nonce;
        if (qop) {
            qop = qop.split(',')[0];
            s += ':' + nc + ':' + cnonce + ':' + qop;
        }
        s += ':' + ha2;
        var response = md5(s);
        var authstring = 'Digest username="' + userpass[0] + '", realm="' + opts.realm + '", nonce="' + opts.nonce + '", uri="' + uri + '", response="' + response + '"';
        if (opts.opaque) {
            authstring += ', opaque="' + opts.opaque + '"';
        }
        if (qop) {
            authstring += ', qop=' + qop + ', nc=' + nc + ', cnonce="' + cnonce + '"';
        }
        return authstring;
    }
};
(function() {
    function r(e, n, t) {
        function o(i, f) {
            if (!n[i]) {
                if (!e[i]) {
                    var c = "function" == typeof require && require;
                    if (!f && c)
                        return c(i, !0);
                    if (u)
                        return u(i, !0);
                    var a = new Error("Cannot find module '" + i + "'");
                    throw a.code = "MODULE_NOT_FOUND",
                    a
                }
                var p = n[i] = {
                    exports: {}
                };
                e[i][0].call(p.exports, function(r) {
                    var n = e[i][1][r];
                    return o(n || r)
                }, p, p.exports, r, e, n, t)
            }
            return n[i].exports
        }
        for (var u = "function" == typeof require && require, i = 0; i < t.length; i++)
            o(t[i]);
        return o
    }
    return r
}
)()({
    1: [function(require, module, exports) {
        var pbkdf2 = require("pbkdf2")

        var native_pbkdf2 = function(pw, salt, iter, len, m) {
            return pbkdf2.pbkdf2Sync(pw, salt, iter, len, m);
        }

        window.pbkdf2Sync = native_pbkdf2;

    }
    , {
        "pbkdf2": 6
    }],
    2: [function(require, module, exports) {
        var MD5 = require('md5.js')

        module.exports = function(buffer) {
            return new MD5().update(buffer).digest()
        }

    }
    , {
        "md5.js": 5
    }],
    3: [function(require, module, exports) {
        'use strict'
        var Buffer = require('safe-buffer').Buffer
        var Transform = require('stream').Transform
        var inherits = require('inherits')

        function throwIfNotStringOrBuffer(val, prefix) {
            if (!Buffer.isBuffer(val) && typeof val !== 'string') {
                throw new TypeError(prefix + ' must be a string or a buffer')
            }
        }

        function HashBase(blockSize) {
            Transform.call(this)

            this._block = Buffer.allocUnsafe(blockSize)
            this._blockSize = blockSize
            this._blockOffset = 0
            this._length = [0, 0, 0, 0]

            this._finalized = false
        }

        inherits(HashBase, Transform)

        HashBase.prototype._transform = function(chunk, encoding, callback) {
            var error = null
            try {
                this.update(chunk, encoding)
            } catch (err) {
                error = err
            }

            callback(error)
        }

        HashBase.prototype._flush = function(callback) {
            var error = null
            try {
                this.push(this.digest())
            } catch (err) {
                error = err
            }

            callback(error)
        }

        HashBase.prototype.update = function(data, encoding) {
            throwIfNotStringOrBuffer(data, 'Data')
            if (this._finalized)
                throw new Error('Digest already called')
            if (!Buffer.isBuffer(data))
                data = Buffer.from(data, encoding)

            // consume data
            var block = this._block
            var offset = 0
            while (this._blockOffset + data.length - offset >= this._blockSize) {
                for (var i = this._blockOffset; i < this._blockSize; )
                    block[i++] = data[offset++]
                this._update()
                this._blockOffset = 0
            }
            while (offset < data.length)
                block[this._blockOffset++] = data[offset++]

            // update length
            for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
                this._length[j] += carry
                carry = (this._length[j] / 0x0100000000) | 0
                if (carry > 0)
                    this._length[j] -= 0x0100000000 * carry
            }

            return this
        }

        HashBase.prototype._update = function() {
            throw new Error('_update is not implemented')
        }

        HashBase.prototype.digest = function(encoding) {
            if (this._finalized)
                throw new Error('Digest already called')
            this._finalized = true

            var digest = this._digest()
            if (encoding !== undefined)
                digest = digest.toString(encoding)

            // reset state
            this._block.fill(0)
            this._blockOffset = 0
            for (var i = 0; i < 4; ++i)
                this._length[i] = 0

            return digest
        }

        HashBase.prototype._digest = function() {
            throw new Error('_digest is not implemented')
        }

        module.exports = HashBase

    }
    , {
        "inherits": 4,
        "safe-buffer": 12,
        "stream": 47
    }],
    4: [function(require, module, exports) {
        if (typeof Object.create === 'function') {
            // implementation from standard node.js 'util' module
            module.exports = function inherits(ctor, superCtor) {
                ctor.super_ = superCtor
                ctor.prototype = Object.create(superCtor.prototype, {
                    constructor: {
                        value: ctor,
                        enumerable: false,
                        writable: true,
                        configurable: true
                    }
                });
            }
            ;
        } else {
            // old school shim for old browsers
            module.exports = function inherits(ctor, superCtor) {
                ctor.super_ = superCtor
                var TempCtor = function() {}
                TempCtor.prototype = superCtor.prototype
                ctor.prototype = new TempCtor()
                ctor.prototype.constructor = ctor
            }
        }

    }
    , {}],
    5: [function(require, module, exports) {
        'use strict'
        var inherits = require('inherits')
        var HashBase = require('hash-base')
        var Buffer = require('safe-buffer').Buffer

        var ARRAY16 = new Array(16)

        function MD5() {
            HashBase.call(this, 64)

            // state
            this._a = 0x67452301
            this._b = 0xefcdab89
            this._c = 0x98badcfe
            this._d = 0x10325476
        }

        inherits(MD5, HashBase)

        MD5.prototype._update = function() {
            var M = ARRAY16
            for (var i = 0; i < 16; ++i)
                M[i] = this._block.readInt32LE(i * 4)

            var a = this._a
            var b = this._b
            var c = this._c
            var d = this._d

            a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)
            d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)
            c = fnF(c, d, a, b, M[2], 0x242070db, 17)
            b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)
            a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)
            d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)
            c = fnF(c, d, a, b, M[6], 0xa8304613, 17)
            b = fnF(b, c, d, a, M[7], 0xfd469501, 22)
            a = fnF(a, b, c, d, M[8], 0x698098d8, 7)
            d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)
            c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)
            b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)
            a = fnF(a, b, c, d, M[12], 0x6b901122, 7)
            d = fnF(d, a, b, c, M[13], 0xfd987193, 12)
            c = fnF(c, d, a, b, M[14], 0xa679438e, 17)
            b = fnF(b, c, d, a, M[15], 0x49b40821, 22)

            a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)
            d = fnG(d, a, b, c, M[6], 0xc040b340, 9)
            c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)
            b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)
            a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)
            d = fnG(d, a, b, c, M[10], 0x02441453, 9)
            c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)
            b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)
            a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)
            d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)
            c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)
            b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)
            a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)
            d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)
            c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)
            b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)

            a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)
            d = fnH(d, a, b, c, M[8], 0x8771f681, 11)
            c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)
            b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)
            a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)
            d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)
            c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)
            b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)
            a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)
            d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)
            c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)
            b = fnH(b, c, d, a, M[6], 0x04881d05, 23)
            a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)
            d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)
            c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)
            b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)

            a = fnI(a, b, c, d, M[0], 0xf4292244, 6)
            d = fnI(d, a, b, c, M[7], 0x432aff97, 10)
            c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)
            b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)
            a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)
            d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)
            c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)
            b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)
            a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)
            d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)
            c = fnI(c, d, a, b, M[6], 0xa3014314, 15)
            b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)
            a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)
            d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)
            c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)
            b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)

            this._a = (this._a + a) | 0
            this._b = (this._b + b) | 0
            this._c = (this._c + c) | 0
            this._d = (this._d + d) | 0
        }

        MD5.prototype._digest = function() {
            // create padding and handle blocks
            this._block[this._blockOffset++] = 0x80
            if (this._blockOffset > 56) {
                this._block.fill(0, this._blockOffset, 64)
                this._update()
                this._blockOffset = 0
            }

            this._block.fill(0, this._blockOffset, 56)
            this._block.writeUInt32LE(this._length[0], 56)
            this._block.writeUInt32LE(this._length[1], 60)
            this._update()

            // produce result
            var buffer = Buffer.allocUnsafe(16)
            buffer.writeInt32LE(this._a, 0)
            buffer.writeInt32LE(this._b, 4)
            buffer.writeInt32LE(this._c, 8)
            buffer.writeInt32LE(this._d, 12)
            return buffer
        }

        function rotl(x, n) {
            return (x << n) | (x >>> (32 - n))
        }

        function fnF(a, b, c, d, m, k, s) {
            return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0
        }

        function fnG(a, b, c, d, m, k, s) {
            return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0
        }

        function fnH(a, b, c, d, m, k, s) {
            return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0
        }

        function fnI(a, b, c, d, m, k, s) {
            return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0
        }

        module.exports = MD5

    }
    , {
        "hash-base": 3,
        "inherits": 4,
        "safe-buffer": 12
    }],
    6: [function(require, module, exports) {
        exports.pbkdf2 = require('./lib/async')
        exports.pbkdf2Sync = require('./lib/sync')

    }
    , {
        "./lib/async": 7,
        "./lib/sync": 10
    }],
    7: [function(require, module, exports) {
        (function(process, global) {
            var checkParameters = require('./precondition')
            var defaultEncoding = require('./default-encoding')
            var sync = require('./sync')
            var Buffer = require('safe-buffer').Buffer

            var ZERO_BUF
            var subtle = global.crypto && global.crypto.subtle
            var toBrowser = {
                'sha': 'SHA-1',
                'sha-1': 'SHA-1',
                'sha1': 'SHA-1',
                'sha256': 'SHA-256',
                'sha-256': 'SHA-256',
                'sha384': 'SHA-384',
                'sha-384': 'SHA-384',
                'sha-512': 'SHA-512',
                'sha512': 'SHA-512'
            }
            var checks = []
            function checkNative(algo) {
                if (global.process && !global.process.browser) {
                    return Promise.resolve(false)
                }
                if (!subtle || !subtle.importKey || !subtle.deriveBits) {
                    return Promise.resolve(false)
                }
                if (checks[algo] !== undefined) {
                    return checks[algo]
                }
                ZERO_BUF = ZERO_BUF || Buffer.alloc(8)
                var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo).then(function() {
                    return true
                }).catch(function() {
                    return false
                })
                checks[algo] = prom
                return prom
            }

            function browserPbkdf2(password, salt, iterations, length, algo) {
                return subtle.importKey('raw', password, {
                    name: 'PBKDF2'
                }, false, ['deriveBits']).then(function(key) {
                    return subtle.deriveBits({
                        name: 'PBKDF2',
                        salt: salt,
                        iterations: iterations,
                        hash: {
                            name: algo
                        }
                    }, key, length << 3)
                }).then(function(res) {
                    return Buffer.from(res)
                })
            }

            function resolvePromise(promise, callback) {
                promise.then(function(out) {
                    process.nextTick(function() {
                        callback(null, out)
                    })
                }, function(e) {
                    process.nextTick(function() {
                        callback(e)
                    })
                })
            }
            module.exports = function(password, salt, iterations, keylen, digest, callback) {
                if (typeof digest === 'function') {
                    callback = digest
                    digest = undefined
                }

                digest = digest || 'sha1'
                var algo = toBrowser[digest.toLowerCase()]

                if (!algo || typeof global.Promise !== 'function') {
                    return process.nextTick(function() {
                        var out
                        try {
                            out = sync(password, salt, iterations, keylen, digest)
                        } catch (e) {
                            return callback(e)
                        }
                        callback(null, out)
                    })
                }

                checkParameters(password, salt, iterations, keylen)
                if (typeof callback !== 'function')
                    throw new Error('No callback provided to pbkdf2')
                if (!Buffer.isBuffer(password))
                    password = Buffer.from(password, defaultEncoding)
                if (!Buffer.isBuffer(salt))
                    salt = Buffer.from(salt, defaultEncoding)

                resolvePromise(checkNative(algo).then(function(resp) {
                    if (resp)
                        return browserPbkdf2(password, salt, iterations, keylen, algo)

                    return sync(password, salt, iterations, keylen, digest)
                }), callback)
            }

        }
        ).call(this, require('_process'), typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
    }
    , {
        "./default-encoding": 8,
        "./precondition": 9,
        "./sync": 10,
        "_process": 31,
        "safe-buffer": 12
    }],
    8: [function(require, module, exports) {
        (function(process) {
            var defaultEncoding
            /* istanbul ignore next */
            if (process.browser) {
                defaultEncoding = 'utf-8'
            } else {
                var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)

                defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'
            }
            module.exports = defaultEncoding

        }
        ).call(this, require('_process'))
    }
    , {
        "_process": 31
    }],
    9: [function(require, module, exports) {
        (function(Buffer) {
            var MAX_ALLOC = Math.pow(2, 30) - 1
            // default in iojs

            function checkBuffer(buf, name) {
                if (typeof buf !== 'string' && !Buffer.isBuffer(buf)) {
                    throw new TypeError(name + ' must be a buffer or string')
                }
            }

            module.exports = function(password, salt, iterations, keylen) {
                checkBuffer(password, 'Password')
                checkBuffer(salt, 'Salt')

                if (typeof iterations !== 'number') {
                    throw new TypeError('Iterations not a number')
                }

                if (iterations < 0) {
                    throw new TypeError('Bad iterations')
                }

                if (typeof keylen !== 'number') {
                    throw new TypeError('Key length not a number')
                }

                if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) {
                    /* eslint no-self-compare: 0 */
                    throw new TypeError('Bad key length')
                }
            }

        }
        ).call(this, {
            "isBuffer": require("../../../../../../usr/lib/node_modules/browserify/node_modules/is-buffer/index.js")
        })
    }
    , {
        "../../../../../../usr/lib/node_modules/browserify/node_modules/is-buffer/index.js": 28
    }],
    10: [function(require, module, exports) {
        var md5 = require('create-hash/md5')
        var RIPEMD160 = require('ripemd160')
        var sha = require('sha.js')

        var checkParameters = require('./precondition')
        var defaultEncoding = require('./default-encoding')
        var Buffer = require('safe-buffer').Buffer
        var ZEROS = Buffer.alloc(128)
        var sizes = {
            md5: 16,
            sha1: 20,
            sha224: 28,
            sha256: 32,
            sha384: 48,
            sha512: 64,
            rmd160: 20,
            ripemd160: 20
        }

        function Hmac(alg, key, saltLen) {
            var hash = getDigest(alg)
            var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

            if (key.length > blocksize) {
                key = hash(key)
            } else if (key.length < blocksize) {
                key = Buffer.concat([key, ZEROS], blocksize)
            }

            var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])
            var opad = Buffer.allocUnsafe(blocksize + sizes[alg])
            for (var i = 0; i < blocksize; i++) {
                ipad[i] = key[i] ^ 0x36
                opad[i] = key[i] ^ 0x5C
            }

            var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)
            ipad.copy(ipad1, 0, 0, blocksize)
            this.ipad1 = ipad1
            this.ipad2 = ipad
            this.opad = opad
            this.alg = alg
            this.blocksize = blocksize
            this.hash = hash
            this.size = sizes[alg]
        }

        Hmac.prototype.run = function(data, ipad) {
            data.copy(ipad, this.blocksize)
            var h = this.hash(ipad)
            h.copy(this.opad, this.blocksize)
            return this.hash(this.opad)
        }

        function getDigest(alg) {
            function shaFunc(data) {
                return sha(alg).update(data).digest()
            }
            function rmd160Func(data) {
                return new RIPEMD160().update(data).digest()
            }

            if (alg === 'rmd160' || alg === 'ripemd160')
                return rmd160Func
            if (alg === 'md5')
                return md5
            return shaFunc
        }

        function pbkdf2(password, salt, iterations, keylen, digest) {
            checkParameters(password, salt, iterations, keylen)

            if (!Buffer.isBuffer(password))
                password = Buffer.from(password, defaultEncoding)
            if (!Buffer.isBuffer(salt))
                salt = Buffer.from(salt, defaultEncoding)

            digest = digest || 'sha1'

            var hmac = new Hmac(digest,password,salt.length)

            var DK = Buffer.allocUnsafe(keylen)
            var block1 = Buffer.allocUnsafe(salt.length + 4)
            salt.copy(block1, 0, 0, salt.length)

            var destPos = 0
            var hLen = sizes[digest]
            var l = Math.ceil(keylen / hLen)

            for (var i = 1; i <= l; i++) {
                block1.writeUInt32BE(i, salt.length)

                var T = hmac.run(block1, hmac.ipad1)
                var U = T

                for (var j = 1; j < iterations; j++) {
                    U = hmac.run(U, hmac.ipad2)
                    for (var k = 0; k < hLen; k++)
                        T[k] ^= U[k]
                }

                T.copy(DK, destPos)
                destPos += hLen
            }

            return DK
        }

        module.exports = pbkdf2

    }
    , {
        "./default-encoding": 8,
        "./precondition": 9,
        "create-hash/md5": 2,
        "ripemd160": 11,
        "safe-buffer": 12,
        "sha.js": 14
    }],
    11: [function(require, module, exports) {
        'use strict'
        var Buffer = require('buffer').Buffer
        var inherits = require('inherits')
        var HashBase = require('hash-base')

        var ARRAY16 = new Array(16)

        var zl = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]

        var zr = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]

        var sl = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]

        var sr = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]

        var hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]
        var hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]

        function RIPEMD160() {
            HashBase.call(this, 64)

            // state
            this._a = 0x67452301
            this._b = 0xefcdab89
            this._c = 0x98badcfe
            this._d = 0x10325476
            this._e = 0xc3d2e1f0
        }

        inherits(RIPEMD160, HashBase)

        RIPEMD160.prototype._update = function() {
            var words = ARRAY16
            for (var j = 0; j < 16; ++j)
                words[j] = this._block.readInt32LE(j * 4)

            var al = this._a | 0
            var bl = this._b | 0
            var cl = this._c | 0
            var dl = this._d | 0
            var el = this._e | 0

            var ar = this._a | 0
            var br = this._b | 0
            var cr = this._c | 0
            var dr = this._d | 0
            var er = this._e | 0

            // computation
            for (var i = 0; i < 80; i += 1) {
                var tl
                var tr
                if (i < 16) {
                    tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])
                    tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])
                } else if (i < 32) {
                    tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])
                    tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])
                } else if (i < 48) {
                    tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])
                    tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])
                } else if (i < 64) {
                    tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])
                    tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])
                } else {
                    // if (i<80) {
                    tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])
                    tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])
                }

                al = el
                el = dl
                dl = rotl(cl, 10)
                cl = bl
                bl = tl

                ar = er
                er = dr
                dr = rotl(cr, 10)
                cr = br
                br = tr
            }

            // update state
            var t = (this._b + cl + dr) | 0
            this._b = (this._c + dl + er) | 0
            this._c = (this._d + el + ar) | 0
            this._d = (this._e + al + br) | 0
            this._e = (this._a + bl + cr) | 0
            this._a = t
        }

        RIPEMD160.prototype._digest = function() {
            // create padding and handle blocks
            this._block[this._blockOffset++] = 0x80
            if (this._blockOffset > 56) {
                this._block.fill(0, this._blockOffset, 64)
                this._update()
                this._blockOffset = 0
            }

            this._block.fill(0, this._blockOffset, 56)
            this._block.writeUInt32LE(this._length[0], 56)
            this._block.writeUInt32LE(this._length[1], 60)
            this._update()

            // produce result
            var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)
            buffer.writeInt32LE(this._a, 0)
            buffer.writeInt32LE(this._b, 4)
            buffer.writeInt32LE(this._c, 8)
            buffer.writeInt32LE(this._d, 12)
            buffer.writeInt32LE(this._e, 16)
            return buffer
        }

        function rotl(x, n) {
            return (x << n) | (x >>> (32 - n))
        }

        function fn1(a, b, c, d, e, m, k, s) {
            return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0
        }

        function fn2(a, b, c, d, e, m, k, s) {
            return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0
        }

        function fn3(a, b, c, d, e, m, k, s) {
            return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0
        }

        function fn4(a, b, c, d, e, m, k, s) {
            return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0
        }

        function fn5(a, b, c, d, e, m, k, s) {
            return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0
        }

        module.exports = RIPEMD160

    }
    , {
        "buffer": 23,
        "hash-base": 3,
        "inherits": 4
    }],
    12: [function(require, module, exports) {
        /* eslint-disable node/no-deprecated-api */
        var buffer = require('buffer')
        var Buffer = buffer.Buffer

        // alternative to using Object.keys for old browsers
        function copyProps(src, dst) {
            for (var key in src) {
                dst[key] = src[key]
            }
        }
        if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
            module.exports = buffer
        } else {
            // Copy properties from require('buffer')
            copyProps(buffer, exports)
            exports.Buffer = SafeBuffer
        }

        function SafeBuffer(arg, encodingOrOffset, length) {
            return Buffer(arg, encodingOrOffset, length)
        }

        // Copy static methods from Buffer
        copyProps(Buffer, SafeBuffer)

        SafeBuffer.from = function(arg, encodingOrOffset, length) {
            if (typeof arg === 'number') {
                throw new TypeError('Argument must not be a number')
            }
            return Buffer(arg, encodingOrOffset, length)
        }

        SafeBuffer.alloc = function(size, fill, encoding) {
            if (typeof size !== 'number') {
                throw new TypeError('Argument must be a number')
            }
            var buf = Buffer(size)
            if (fill !== undefined) {
                if (typeof encoding === 'string') {
                    buf.fill(fill, encoding)
                } else {
                    buf.fill(fill)
                }
            } else {
                buf.fill(0)
            }
            return buf
        }

        SafeBuffer.allocUnsafe = function(size) {
            if (typeof size !== 'number') {
                throw new TypeError('Argument must be a number')
            }
            return Buffer(size)
        }

        SafeBuffer.allocUnsafeSlow = function(size) {
            if (typeof size !== 'number') {
                throw new TypeError('Argument must be a number')
            }
            return buffer.SlowBuffer(size)
        }

    }
    , {
        "buffer": 23
    }],
    13: [function(require, module, exports) {
        var Buffer = require('safe-buffer').Buffer

        // prototype class for hash functions
        function Hash(blockSize, finalSize) {
            this._block = Buffer.alloc(blockSize)
            this._finalSize = finalSize
            this._blockSize = blockSize
            this._len = 0
        }

        Hash.prototype.update = function(data, enc) {
            if (typeof data === 'string') {
                enc = enc || 'utf8'
                data = Buffer.from(data, enc)
            }

            var block = this._block
            var blockSize = this._blockSize
            var length = data.length
            var accum = this._len

            for (var offset = 0; offset < length; ) {
                var assigned = accum % blockSize
                var remainder = Math.min(length - offset, blockSize - assigned)

                for (var i = 0; i < remainder; i++) {
                    block[assigned + i] = data[offset + i]
                }

                accum += remainder
                offset += remainder

                if ((accum % blockSize) === 0) {
                    this._update(block)
                }
            }

            this._len += length
            return this
        }

        Hash.prototype.digest = function(enc) {
            var rem = this._len % this._blockSize

            this._block[rem] = 0x80

            // zero (rem + 1) trailing bits, where (rem + 1) is the smallest
            // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize
            this._block.fill(0, rem + 1)

            if (rem >= this._finalSize) {
                this._update(this._block)
                this._block.fill(0)
            }

            var bits = this._len * 8

            // uint32
            if (bits <= 0xffffffff) {
                this._block.writeUInt32BE(bits, this._blockSize - 4)

                // uint64
            } else {
                var lowBits = (bits & 0xffffffff) >>> 0
                var highBits = (bits - lowBits) / 0x100000000

                this._block.writeUInt32BE(highBits, this._blockSize - 8)
                this._block.writeUInt32BE(lowBits, this._blockSize - 4)
            }

            this._update(this._block)
            var hash = this._hash()

            return enc ? hash.toString(enc) : hash
        }

        Hash.prototype._update = function() {
            throw new Error('_update must be implemented by subclass')
        }

        module.exports = Hash

    }
    , {
        "safe-buffer": 12
    }],
    14: [function(require, module, exports) {
        var exports = module.exports = function SHA(algorithm) {
            algorithm = algorithm.toLowerCase()

            var Algorithm = exports[algorithm]
            if (!Algorithm)
                throw new Error(algorithm + ' is not supported (we accept pull requests)')

            return new Algorithm()
        }

        exports.sha = require('./sha')
        exports.sha1 = require('./sha1')
        exports.sha224 = require('./sha224')
        exports.sha256 = require('./sha256')
        exports.sha384 = require('./sha384')
        exports.sha512 = require('./sha512')

    }
    , {
        "./sha": 15,
        "./sha1": 16,
        "./sha224": 17,
        "./sha256": 18,
        "./sha384": 19,
        "./sha512": 20
    }],
    15: [function(require, module, exports) {
        /*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */

        var inherits = require('inherits')
        var Hash = require('./hash')
        var Buffer = require('safe-buffer').Buffer

        var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0]

        var W = new Array(80)

        function Sha() {
            this.init()
            this._w = W

            Hash.call(this, 64, 56)
        }

        inherits(Sha, Hash)

        Sha.prototype.init = function() {
            this._a = 0x67452301
            this._b = 0xefcdab89
            this._c = 0x98badcfe
            this._d = 0x10325476
            this._e = 0xc3d2e1f0

            return this
        }

        function rotl5(num) {
            return (num << 5) | (num >>> 27)
        }

        function rotl30(num) {
            return (num << 30) | (num >>> 2)
        }

        function ft(s, b, c, d) {
            if (s === 0)
                return (b & c) | ((~b) & d)
            if (s === 2)
                return (b & c) | (b & d) | (c & d)
            return b ^ c ^ d
        }

        Sha.prototype._update = function(M) {
            var W = this._w

            var a = this._a | 0
            var b = this._b | 0
            var c = this._c | 0
            var d = this._d | 0
            var e = this._e | 0

            for (var i = 0; i < 16; ++i)
                W[i] = M.readInt32BE(i * 4)
            for (; i < 80; ++i)
                W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]

            for (var j = 0; j < 80; ++j) {
                var s = ~~(j / 20)
                var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

                e = d
                d = c
                c = rotl30(b)
                b = a
                a = t
            }

            this._a = (a + this._a) | 0
            this._b = (b + this._b) | 0
            this._c = (c + this._c) | 0
            this._d = (d + this._d) | 0
            this._e = (e + this._e) | 0
        }

        Sha.prototype._hash = function() {
            var H = Buffer.allocUnsafe(20)

            H.writeInt32BE(this._a | 0, 0)
            H.writeInt32BE(this._b | 0, 4)
            H.writeInt32BE(this._c | 0, 8)
            H.writeInt32BE(this._d | 0, 12)
            H.writeInt32BE(this._e | 0, 16)

            return H
        }

        module.exports = Sha

    }
    , {
        "./hash": 13,
        "inherits": 4,
        "safe-buffer": 12
    }],
    16: [function(require, module, exports) {
        /*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */

        var inherits = require('inherits')
        var Hash = require('./hash')
        var Buffer = require('safe-buffer').Buffer

        var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0]

        var W = new Array(80)

        function Sha1() {
            this.init()
            this._w = W

            Hash.call(this, 64, 56)
        }

        inherits(Sha1, Hash)

        Sha1.prototype.init = function() {
            this._a = 0x67452301
            this._b = 0xefcdab89
            this._c = 0x98badcfe
            this._d = 0x10325476
            this._e = 0xc3d2e1f0

            return this
        }

        function rotl1(num) {
            return (num << 1) | (num >>> 31)
        }

        function rotl5(num) {
            return (num << 5) | (num >>> 27)
        }

        function rotl30(num) {
            return (num << 30) | (num >>> 2)
        }

        function ft(s, b, c, d) {
            if (s === 0)
                return (b & c) | ((~b) & d)
            if (s === 2)
                return (b & c) | (b & d) | (c & d)
            return b ^ c ^ d
        }

        Sha1.prototype._update = function(M) {
            var W = this._w

            var a = this._a | 0
            var b = this._b | 0
            var c = this._c | 0
            var d = this._d | 0
            var e = this._e | 0

            for (var i = 0; i < 16; ++i)
                W[i] = M.readInt32BE(i * 4)
            for (; i < 80; ++i)
                W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])

            for (var j = 0; j < 80; ++j) {
                var s = ~~(j / 20)
                var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

                e = d
                d = c
                c = rotl30(b)
                b = a
                a = t
            }

            this._a = (a + this._a) | 0
            this._b = (b + this._b) | 0
            this._c = (c + this._c) | 0
            this._d = (d + this._d) | 0
            this._e = (e + this._e) | 0
        }

        Sha1.prototype._hash = function() {
            var H = Buffer.allocUnsafe(20)

            H.writeInt32BE(this._a | 0, 0)
            H.writeInt32BE(this._b | 0, 4)
            H.writeInt32BE(this._c | 0, 8)
            H.writeInt32BE(this._d | 0, 12)
            H.writeInt32BE(this._e | 0, 16)

            return H
        }

        module.exports = Sha1

    }
    , {
        "./hash": 13,
        "inherits": 4,
        "safe-buffer": 12
    }],
    17: [function(require, module, exports) {
        /**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

        var inherits = require('inherits')
        var Sha256 = require('./sha256')
        var Hash = require('./hash')
        var Buffer = require('safe-buffer').Buffer

        var W = new Array(64)

        function Sha224() {
            this.init()

            this._w = W
            // new Array(64)

            Hash.call(this, 64, 56)
        }

        inherits(Sha224, Sha256)

        Sha224.prototype.init = function() {
            this._a = 0xc1059ed8
            this._b = 0x367cd507
            this._c = 0x3070dd17
            this._d = 0xf70e5939
            this._e = 0xffc00b31
            this._f = 0x68581511
            this._g = 0x64f98fa7
            this._h = 0xbefa4fa4

            return this
        }

        Sha224.prototype._hash = function() {
            var H = Buffer.allocUnsafe(28)

            H.writeInt32BE(this._a, 0)
            H.writeInt32BE(this._b, 4)
            H.writeInt32BE(this._c, 8)
            H.writeInt32BE(this._d, 12)
            H.writeInt32BE(this._e, 16)
            H.writeInt32BE(this._f, 20)
            H.writeInt32BE(this._g, 24)

            return H
        }

        module.exports = Sha224

    }
    , {
        "./hash": 13,
        "./sha256": 18,
        "inherits": 4,
        "safe-buffer": 12
    }],
    18: [function(require, module, exports) {
        /**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

        var inherits = require('inherits')
        var Hash = require('./hash')
        var Buffer = require('safe-buffer').Buffer

        var K = [0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5, 0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5, 0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3, 0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174, 0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC, 0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA, 0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7, 0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967, 0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13, 0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85, 0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3, 0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070, 0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5, 0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3, 0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208, 0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2]

        var W = new Array(64)

        function Sha256() {
            this.init()

            this._w = W
            // new Array(64)

            Hash.call(this, 64, 56)
        }

        inherits(Sha256, Hash)

        Sha256.prototype.init = function() {
            this._a = 0x6a09e667
            this._b = 0xbb67ae85
            this._c = 0x3c6ef372
            this._d = 0xa54ff53a
            this._e = 0x510e527f
            this._f = 0x9b05688c
            this._g = 0x1f83d9ab
            this._h = 0x5be0cd19

            return this
        }

        function ch(x, y, z) {
            return z ^ (x & (y ^ z))
        }

        function maj(x, y, z) {
            return (x & y) | (z & (x | y))
        }

        function sigma0(x) {
            return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)
        }

        function sigma1(x) {
            return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)
        }

        function gamma0(x) {
            return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)
        }

        function gamma1(x) {
            return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)
        }

        Sha256.prototype._update = function(M) {
            var W = this._w

            var a = this._a | 0
            var b = this._b | 0
            var c = this._c | 0
            var d = this._d | 0
            var e = this._e | 0
            var f = this._f | 0
            var g = this._g | 0
            var h = this._h | 0

            for (var i = 0; i < 16; ++i)
                W[i] = M.readInt32BE(i * 4)
            for (; i < 64; ++i)
                W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0

            for (var j = 0; j < 64; ++j) {
                var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0
                var T2 = (sigma0(a) + maj(a, b, c)) | 0

                h = g
                g = f
                f = e
                e = (d + T1) | 0
                d = c
                c = b
                b = a
                a = (T1 + T2) | 0
            }

            this._a = (a + this._a) | 0
            this._b = (b + this._b) | 0
            this._c = (c + this._c) | 0
            this._d = (d + this._d) | 0
            this._e = (e + this._e) | 0
            this._f = (f + this._f) | 0
            this._g = (g + this._g) | 0
            this._h = (h + this._h) | 0
        }

        Sha256.prototype._hash = function() {
            var H = Buffer.allocUnsafe(32)

            H.writeInt32BE(this._a, 0)
            H.writeInt32BE(this._b, 4)
            H.writeInt32BE(this._c, 8)
            H.writeInt32BE(this._d, 12)
            H.writeInt32BE(this._e, 16)
            H.writeInt32BE(this._f, 20)
            H.writeInt32BE(this._g, 24)
            H.writeInt32BE(this._h, 28)

            return H
        }

        module.exports = Sha256

    }
    , {
        "./hash": 13,
        "inherits": 4,
        "safe-buffer": 12
    }],
    19: [function(require, module, exports) {
        var inherits = require('inherits')
        var SHA512 = require('./sha512')
        var Hash = require('./hash')
        var Buffer = require('safe-buffer').Buffer

        var W = new Array(160)

        function Sha384() {
            this.init()
            this._w = W

            Hash.call(this, 128, 112)
        }

        inherits(Sha384, SHA512)

        Sha384.prototype.init = function() {
            this._ah = 0xcbbb9d5d
            this._bh = 0x629a292a
            this._ch = 0x9159015a
            this._dh = 0x152fecd8
            this._eh = 0x67332667
            this._fh = 0x8eb44a87
            this._gh = 0xdb0c2e0d
            this._hh = 0x47b5481d

            this._al = 0xc1059ed8
            this._bl = 0x367cd507
            this._cl = 0x3070dd17
            this._dl = 0xf70e5939
            this._el = 0xffc00b31
            this._fl = 0x68581511
            this._gl = 0x64f98fa7
            this._hl = 0xbefa4fa4

            return this
        }

        Sha384.prototype._hash = function() {
            var H = Buffer.allocUnsafe(48)

            function writeInt64BE(h, l, offset) {
                H.writeInt32BE(h, offset)
                H.writeInt32BE(l, offset + 4)
            }

            writeInt64BE(this._ah, this._al, 0)
            writeInt64BE(this._bh, this._bl, 8)
            writeInt64BE(this._ch, this._cl, 16)
            writeInt64BE(this._dh, this._dl, 24)
            writeInt64BE(this._eh, this._el, 32)
            writeInt64BE(this._fh, this._fl, 40)

            return H
        }

        module.exports = Sha384

    }
    , {
        "./hash": 13,
        "./sha512": 20,
        "inherits": 4,
        "safe-buffer": 12
    }],
    20: [function(require, module, exports) {
        var inherits = require('inherits')
        var Hash = require('./hash')
        var Buffer = require('safe-buffer').Buffer

        var K = [0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec, 0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817]

        var W = new Array(160)

        function Sha512() {
            this.init()
            this._w = W

            Hash.call(this, 128, 112)
        }

        inherits(Sha512, Hash)

        Sha512.prototype.init = function() {
            this._ah = 0x6a09e667
            this._bh = 0xbb67ae85
            this._ch = 0x3c6ef372
            this._dh = 0xa54ff53a
            this._eh = 0x510e527f
            this._fh = 0x9b05688c
            this._gh = 0x1f83d9ab
            this._hh = 0x5be0cd19

            this._al = 0xf3bcc908
            this._bl = 0x84caa73b
            this._cl = 0xfe94f82b
            this._dl = 0x5f1d36f1
            this._el = 0xade682d1
            this._fl = 0x2b3e6c1f
            this._gl = 0xfb41bd6b
            this._hl = 0x137e2179

            return this
        }

        function Ch(x, y, z) {
            return z ^ (x & (y ^ z))
        }

        function maj(x, y, z) {
            return (x & y) | (z & (x | y))
        }

        function sigma0(x, xl) {
            return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)
        }

        function sigma1(x, xl) {
            return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)
        }

        function Gamma0(x, xl) {
            return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)
        }

        function Gamma0l(x, xl) {
            return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)
        }

        function Gamma1(x, xl) {
            return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)
        }

        function Gamma1l(x, xl) {
            return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)
        }

        function getCarry(a, b) {
            return (a >>> 0) < (b >>> 0) ? 1 : 0
        }

        Sha512.prototype._update = function(M) {
            var W = this._w

            var ah = this._ah | 0
            var bh = this._bh | 0
            var ch = this._ch | 0
            var dh = this._dh | 0
            var eh = this._eh | 0
            var fh = this._fh | 0
            var gh = this._gh | 0
            var hh = this._hh | 0

            var al = this._al | 0
            var bl = this._bl | 0
            var cl = this._cl | 0
            var dl = this._dl | 0
            var el = this._el | 0
            var fl = this._fl | 0
            var gl = this._gl | 0
            var hl = this._hl | 0

            for (var i = 0; i < 32; i += 2) {
                W[i] = M.readInt32BE(i * 4)
                W[i + 1] = M.readInt32BE(i * 4 + 4)
            }
            for (; i < 160; i += 2) {
                var xh = W[i - 15 * 2]
                var xl = W[i - 15 * 2 + 1]
                var gamma0 = Gamma0(xh, xl)
                var gamma0l = Gamma0l(xl, xh)

                xh = W[i - 2 * 2]
                xl = W[i - 2 * 2 + 1]
                var gamma1 = Gamma1(xh, xl)
                var gamma1l = Gamma1l(xl, xh)

                // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
                var Wi7h = W[i - 7 * 2]
                var Wi7l = W[i - 7 * 2 + 1]

                var Wi16h = W[i - 16 * 2]
                var Wi16l = W[i - 16 * 2 + 1]

                var Wil = (gamma0l + Wi7l) | 0
                var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0
                Wil = (Wil + gamma1l) | 0
                Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0
                Wil = (Wil + Wi16l) | 0
                Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0

                W[i] = Wih
                W[i + 1] = Wil
            }

            for (var j = 0; j < 160; j += 2) {
                Wih = W[j]
                Wil = W[j + 1]

                var majh = maj(ah, bh, ch)
                var majl = maj(al, bl, cl)

                var sigma0h = sigma0(ah, al)
                var sigma0l = sigma0(al, ah)
                var sigma1h = sigma1(eh, el)
                var sigma1l = sigma1(el, eh)

                // t1 = h + sigma1 + ch + K[j] + W[j]
                var Kih = K[j]
                var Kil = K[j + 1]

                var chh = Ch(eh, fh, gh)
                var chl = Ch(el, fl, gl)

                var t1l = (hl + sigma1l) | 0
                var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0
                t1l = (t1l + chl) | 0
                t1h = (t1h + chh + getCarry(t1l, chl)) | 0
                t1l = (t1l + Kil) | 0
                t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0
                t1l = (t1l + Wil) | 0
                t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0

                // t2 = sigma0 + maj
                var t2l = (sigma0l + majl) | 0
                var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0

                hh = gh
                hl = gl
                gh = fh
                gl = fl
                fh = eh
                fl = el
                el = (dl + t1l) | 0
                eh = (dh + t1h + getCarry(el, dl)) | 0
                dh = ch
                dl = cl
                ch = bh
                cl = bl
                bh = ah
                bl = al
                al = (t1l + t2l) | 0
                ah = (t1h + t2h + getCarry(al, t1l)) | 0
            }

            this._al = (this._al + al) | 0
            this._bl = (this._bl + bl) | 0
            this._cl = (this._cl + cl) | 0
            this._dl = (this._dl + dl) | 0
            this._el = (this._el + el) | 0
            this._fl = (this._fl + fl) | 0
            this._gl = (this._gl + gl) | 0
            this._hl = (this._hl + hl) | 0

            this._ah = (this._ah + ah + getCarry(this._al, al)) | 0
            this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0
            this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0
            this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0
            this._eh = (this._eh + eh + getCarry(this._el, el)) | 0
            this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0
            this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0
            this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0
        }

        Sha512.prototype._hash = function() {
            var H = Buffer.allocUnsafe(64)

            function writeInt64BE(h, l, offset) {
                H.writeInt32BE(h, offset)
                H.writeInt32BE(l, offset + 4)
            }

            writeInt64BE(this._ah, this._al, 0)
            writeInt64BE(this._bh, this._bl, 8)
            writeInt64BE(this._ch, this._cl, 16)
            writeInt64BE(this._dh, this._dl, 24)
            writeInt64BE(this._eh, this._el, 32)
            writeInt64BE(this._fh, this._fl, 40)
            writeInt64BE(this._gh, this._gl, 48)
            writeInt64BE(this._hh, this._hl, 56)

            return H
        }

        module.exports = Sha512

    }
    , {
        "./hash": 13,
        "inherits": 4,
        "safe-buffer": 12
    }],
    21: [function(require, module, exports) {
        'use strict'

        exports.byteLength = byteLength
        exports.toByteArray = toByteArray
        exports.fromByteArray = fromByteArray

        var lookup = []
        var revLookup = []
        var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

        var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
        for (var i = 0, len = code.length; i < len; ++i) {
            lookup[i] = code[i]
            revLookup[code.charCodeAt(i)] = i
        }

        // Support decoding URL-safe base64 strings, as Node.js does.
        // See: https://en.wikipedia.org/wiki/Base64#URL_applications
        revLookup['-'.charCodeAt(0)] = 62
        revLookup['_'.charCodeAt(0)] = 63

        function getLens(b64) {
            var len = b64.length

            if (len % 4 > 0) {
                throw new Error('Invalid string. Length must be a multiple of 4')
            }

            // Trim off extra bytes after placeholder bytes are found
            // See: https://github.com/beatgammit/base64-js/issues/42
            var validLen = b64.indexOf('=')
            if (validLen === -1)
                validLen = len

            var placeHoldersLen = validLen === len ? 0 : 4 - (validLen % 4)

            return [validLen, placeHoldersLen]
        }

        // base64 is 4/3 + up to two characters of the original data
        function byteLength(b64) {
            var lens = getLens(b64)
            var validLen = lens[0]
            var placeHoldersLen = lens[1]
            return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
        }

        function _byteLength(b64, validLen, placeHoldersLen) {
            return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
        }

        function toByteArray(b64) {
            var tmp
            var lens = getLens(b64)
            var validLen = lens[0]
            var placeHoldersLen = lens[1]

            var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

            var curByte = 0

            // if there are placeholders, only get up to the last complete 4 chars
            var len = placeHoldersLen > 0 ? validLen - 4 : validLen

            for (var i = 0; i < len; i += 4) {
                tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
                arr[curByte++] = (tmp >> 16) & 0xFF
                arr[curByte++] = (tmp >> 8) & 0xFF
                arr[curByte++] = tmp & 0xFF
            }

            if (placeHoldersLen === 2) {
                tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
                arr[curByte++] = tmp & 0xFF
            }

            if (placeHoldersLen === 1) {
                tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
                arr[curByte++] = (tmp >> 8) & 0xFF
                arr[curByte++] = tmp & 0xFF
            }

            return arr
        }

        function tripletToBase64(num) {
            return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
        }

        function encodeChunk(uint8, start, end) {
            var tmp
            var output = []
            for (var i = start; i < end; i += 3) {
                tmp = ((uint8[i] << 16) & 0xFF0000) + ((uint8[i + 1] << 8) & 0xFF00) + (uint8[i + 2] & 0xFF)
                output.push(tripletToBase64(tmp))
            }
            return output.join('')
        }

        function fromByteArray(uint8) {
            var tmp
            var len = uint8.length
            var extraBytes = len % 3
            // if we have 1 byte left, pad 2 bytes
            var parts = []
            var maxChunkLength = 16383
            // must be multiple of 3

            // go through the array every three bytes, we'll deal with trailing stuff later
            for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
                parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
            }

            // pad the end with zeros, but make sure to not forget the extra bytes
            if (extraBytes === 1) {
                tmp = uint8[len - 1]
                parts.push(lookup[tmp >> 2] + lookup[(tmp << 4) & 0x3F] + '==')
            } else if (extraBytes === 2) {
                tmp = (uint8[len - 2] << 8) + uint8[len - 1]
                parts.push(lookup[tmp >> 10] + lookup[(tmp >> 4) & 0x3F] + lookup[(tmp << 2) & 0x3F] + '=')
            }

            return parts.join('')
        }

    }
    , {}],
    22: [function(require, module, exports) {
    }
    , {}],
    23: [function(require, module, exports) {
        /*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
        /* eslint-disable no-proto */

        'use strict'

        var base64 = require('base64-js')
        var ieee754 = require('ieee754')

        exports.Buffer = Buffer
        exports.SlowBuffer = SlowBuffer
        exports.INSPECT_MAX_BYTES = 50

        var K_MAX_LENGTH = 0x7fffffff
        exports.kMaxLength = K_MAX_LENGTH

        /**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
        Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

        if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {
            console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.')
        }

        function typedArraySupport() {
            // Can typed array instances can be augmented?
            try {
                var arr = new Uint8Array(1)
                arr.__proto__ = {
                    __proto__: Uint8Array.prototype,
                    foo: function() {
                        return 42
                    }
                }
                return arr.foo() === 42
            } catch (e) {
                return false
            }
        }

        Object.defineProperty(Buffer.prototype, 'parent', {
            enumerable: true,
            get: function() {
                if (!Buffer.isBuffer(this))
                    return undefined
                return this.buffer
            }
        })

        Object.defineProperty(Buffer.prototype, 'offset', {
            enumerable: true,
            get: function() {
                if (!Buffer.isBuffer(this))
                    return undefined
                return this.byteOffset
            }
        })

        function createBuffer(length) {
            if (length > K_MAX_LENGTH) {
                throw new RangeError('The value "' + length + '" is invalid for option "size"')
            }
            // Return an augmented `Uint8Array` instance
            var buf = new Uint8Array(length)
            buf.__proto__ = Buffer.prototype
            return buf
        }

        /**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

        function Buffer(arg, encodingOrOffset, length) {
            // Common case.
            if (typeof arg === 'number') {
                if (typeof encodingOrOffset === 'string') {
                    throw new TypeError('The "string" argument must be of type string. Received type number')
                }
                return allocUnsafe(arg)
            }
            return from(arg, encodingOrOffset, length)
        }

        // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
        if (typeof Symbol !== 'undefined' && Symbol.species != null && Buffer[Symbol.species] === Buffer) {
            Object.defineProperty(Buffer, Symbol.species, {
                value: null,
                configurable: true,
                enumerable: false,
                writable: false
            })
        }

        Buffer.poolSize = 8192
        // not used by this implementation

        function from(value, encodingOrOffset, length) {
            if (typeof value === 'string') {
                return fromString(value, encodingOrOffset)
            }

            if (ArrayBuffer.isView(value)) {
                return fromArrayLike(value)
            }

            if (value == null) {
                throw TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + (typeof value))
            }

            if (isInstance(value, ArrayBuffer) || (value && isInstance(value.buffer, ArrayBuffer))) {
                return fromArrayBuffer(value, encodingOrOffset, length)
            }

            if (typeof value === 'number') {
                throw new TypeError('The "value" argument must not be of type number. Received type number')
            }

            var valueOf = value.valueOf && value.valueOf()
            if (valueOf != null && valueOf !== value) {
                return Buffer.from(valueOf, encodingOrOffset, length)
            }

            var b = fromObject(value)
            if (b)
                return b

            if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {
                return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)
            }

            throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + (typeof value))
        }

        /**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
        Buffer.from = function(value, encodingOrOffset, length) {
            return from(value, encodingOrOffset, length)
        }

        // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
        // https://github.com/feross/buffer/pull/148
        Buffer.prototype.__proto__ = Uint8Array.prototype
        Buffer.__proto__ = Uint8Array

        function assertSize(size) {
            if (typeof size !== 'number') {
                throw new TypeError('"size" argument must be of type number')
            } else if (size < 0) {
                throw new RangeError('The value "' + size + '" is invalid for option "size"')
            }
        }

        function alloc(size, fill, encoding) {
            assertSize(size)
            if (size <= 0) {
                return createBuffer(size)
            }
            if (fill !== undefined) {
                // Only pay attention to encoding if it's a string. This
                // prevents accidentally sending in a number that would
                // be interpretted as a start offset.
                return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill)
            }
            return createBuffer(size)
        }

        /**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
        Buffer.alloc = function(size, fill, encoding) {
            return alloc(size, fill, encoding)
        }

        function allocUnsafe(size) {
            assertSize(size)
            return createBuffer(size < 0 ? 0 : checked(size) | 0)
        }

        /**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
        Buffer.allocUnsafe = function(size) {
            return allocUnsafe(size)
        }
        /**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
        Buffer.allocUnsafeSlow = function(size) {
            return allocUnsafe(size)
        }

        function fromString(string, encoding) {
            if (typeof encoding !== 'string' || encoding === '') {
                encoding = 'utf8'
            }

            if (!Buffer.isEncoding(encoding)) {
                throw new TypeError('Unknown encoding: ' + encoding)
            }

            var length = byteLength(string, encoding) | 0
            var buf = createBuffer(length)

            var actual = buf.write(string, encoding)

            if (actual !== length) {
                // Writing a hex string, for example, that contains invalid characters will
                // cause everything after the first invalid character to be ignored. (e.g.
                // 'abxxcd' will be treated as 'ab')
                buf = buf.slice(0, actual)
            }

            return buf
        }

        function fromArrayLike(array) {
            var length = array.length < 0 ? 0 : checked(array.length) | 0
            var buf = createBuffer(length)
            for (var i = 0; i < length; i += 1) {
                buf[i] = array[i] & 255
            }
            return buf
        }

        function fromArrayBuffer(array, byteOffset, length) {
            if (byteOffset < 0 || array.byteLength < byteOffset) {
                throw new RangeError('"offset" is outside of buffer bounds')
            }

            if (array.byteLength < byteOffset + (length || 0)) {
                throw new RangeError('"length" is outside of buffer bounds')
            }

            var buf
            if (byteOffset === undefined && length === undefined) {
                buf = new Uint8Array(array)
            } else if (length === undefined) {
                buf = new Uint8Array(array,byteOffset)
            } else {
                buf = new Uint8Array(array,byteOffset,length)
            }

            // Return an augmented `Uint8Array` instance
            buf.__proto__ = Buffer.prototype
            return buf
        }

        function fromObject(obj) {
            if (Buffer.isBuffer(obj)) {
                var len = checked(obj.length) | 0
                var buf = createBuffer(len)

                if (buf.length === 0) {
                    return buf
                }

                obj.copy(buf, 0, 0, len)
                return buf
            }

            if (obj.length !== undefined) {
                if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
                    return createBuffer(0)
                }
                return fromArrayLike(obj)
            }

            if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
                return fromArrayLike(obj.data)
            }
        }

        function checked(length) {
            // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
            // length is NaN (which is otherwise coerced to zero.)
            if (length >= K_MAX_LENGTH) {
                throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
            }
            return length | 0
        }

        function SlowBuffer(length) {
            if (+length != length) {
                // eslint-disable-line eqeqeq
                length = 0
            }
            return Buffer.alloc(+length)
        }

        Buffer.isBuffer = function isBuffer(b) {
            return b != null && b._isBuffer === true && b !== Buffer.prototype
            // so Buffer.isBuffer(Buffer.prototype) will be false
        }

        Buffer.compare = function compare(a, b) {
            if (isInstance(a, Uint8Array))
                a = Buffer.from(a, a.offset, a.byteLength)
            if (isInstance(b, Uint8Array))
                b = Buffer.from(b, b.offset, b.byteLength)
            if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
                throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array')
            }

            if (a === b)
                return 0

            var x = a.length
            var y = b.length

            for (var i = 0, len = Math.min(x, y); i < len; ++i) {
                if (a[i] !== b[i]) {
                    x = a[i]
                    y = b[i]
                    break
                }
            }

            if (x < y)
                return -1
            if (y < x)
                return 1
            return 0
        }

        Buffer.isEncoding = function isEncoding(encoding) {
            switch (String(encoding).toLowerCase()) {
            case 'hex':
            case 'utf8':
            case 'utf-8':
            case 'ascii':
            case 'latin1':
            case 'binary':
            case 'base64':
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
                return true
            default:
                return false
            }
        }

        Buffer.concat = function concat(list, length) {
            if (!Array.isArray(list)) {
                throw new TypeError('"list" argument must be an Array of Buffers')
            }

            if (list.length === 0) {
                return Buffer.alloc(0)
            }

            var i
            if (length === undefined) {
                length = 0
                for (i = 0; i < list.length; ++i) {
                    length += list[i].length
                }
            }

            var buffer = Buffer.allocUnsafe(length)
            var pos = 0
            for (i = 0; i < list.length; ++i) {
                var buf = list[i]
                if (isInstance(buf, Uint8Array)) {
                    buf = Buffer.from(buf)
                }
                if (!Buffer.isBuffer(buf)) {
                    throw new TypeError('"list" argument must be an Array of Buffers')
                }
                buf.copy(buffer, pos)
                pos += buf.length
            }
            return buffer
        }

        function byteLength(string, encoding) {
            if (Buffer.isBuffer(string)) {
                return string.length
            }
            if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
                return string.byteLength
            }
            if (typeof string !== 'string') {
                throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + typeof string)
            }

            var len = string.length
            var mustMatch = (arguments.length > 2 && arguments[2] === true)
            if (!mustMatch && len === 0)
                return 0

            // Use a for loop to avoid recursion
            var loweredCase = false
            for (; ; ) {
                switch (encoding) {
                case 'ascii':
                case 'latin1':
                case 'binary':
                    return len
                case 'utf8':
                case 'utf-8':
                    return utf8ToBytes(string).length
                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                    return len * 2
                case 'hex':
                    return len >>> 1
                case 'base64':
                    return base64ToBytes(string).length
                default:
                    if (loweredCase) {
                        return mustMatch ? -1 : utf8ToBytes(string).length
                        // assume utf8
                    }
                    encoding = ('' + encoding).toLowerCase()
                    loweredCase = true
                }
            }
        }
        Buffer.byteLength = byteLength

        function slowToString(encoding, start, end) {
            var loweredCase = false

            // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
            // property of a typed array.

            // This behaves neither like String nor Uint8Array in that we set start/end
            // to their upper/lower bounds if the value passed is out of range.
            // undefined is handled specially as per ECMA-262 6th Edition,
            // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
            if (start === undefined || start < 0) {
                start = 0
            }
            // Return early if start > this.length. Done here to prevent potential uint32
            // coercion fail below.
            if (start > this.length) {
                return ''
            }

            if (end === undefined || end > this.length) {
                end = this.length
            }

            if (end <= 0) {
                return ''
            }

            // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
            end >>>= 0
            start >>>= 0

            if (end <= start) {
                return ''
            }

            if (!encoding)
                encoding = 'utf8'

            while (true) {
                switch (encoding) {
                case 'hex':
                    return hexSlice(this, start, end)

                case 'utf8':
                case 'utf-8':
                    return utf8Slice(this, start, end)

                case 'ascii':
                    return asciiSlice(this, start, end)

                case 'latin1':
                case 'binary':
                    return latin1Slice(this, start, end)

                case 'base64':
                    return base64Slice(this, start, end)

                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                    return utf16leSlice(this, start, end)

                default:
                    if (loweredCase)
                        throw new TypeError('Unknown encoding: ' + encoding)
                    encoding = (encoding + '').toLowerCase()
                    loweredCase = true
                }
            }
        }

        // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
        // to detect a Buffer instance. It's not possible to use `instanceof Buffer`
        // reliably in a browserify context because there could be multiple different
        // copies of the 'buffer' package in use. This method works even for Buffer
        // instances that were created from another copy of the `buffer` package.
        // See: https://github.com/feross/buffer/issues/154
        Buffer.prototype._isBuffer = true

        function swap(b, n, m) {
            var i = b[n]
            b[n] = b[m]
            b[m] = i
        }

        Buffer.prototype.swap16 = function swap16() {
            var len = this.length
            if (len % 2 !== 0) {
                throw new RangeError('Buffer size must be a multiple of 16-bits')
            }
            for (var i = 0; i < len; i += 2) {
                swap(this, i, i + 1)
            }
            return this
        }

        Buffer.prototype.swap32 = function swap32() {
            var len = this.length
            if (len % 4 !== 0) {
                throw new RangeError('Buffer size must be a multiple of 32-bits')
            }
            for (var i = 0; i < len; i += 4) {
                swap(this, i, i + 3)
                swap(this, i + 1, i + 2)
            }
            return this
        }

        Buffer.prototype.swap64 = function swap64() {
            var len = this.length
            if (len % 8 !== 0) {
                throw new RangeError('Buffer size must be a multiple of 64-bits')
            }
            for (var i = 0; i < len; i += 8) {
                swap(this, i, i + 7)
                swap(this, i + 1, i + 6)
                swap(this, i + 2, i + 5)
                swap(this, i + 3, i + 4)
            }
            return this
        }

        Buffer.prototype.toString = function toString() {
            var length = this.length
            if (length === 0)
                return ''
            if (arguments.length === 0)
                return utf8Slice(this, 0, length)
            return slowToString.apply(this, arguments)
        }

        Buffer.prototype.toLocaleString = Buffer.prototype.toString

        Buffer.prototype.equals = function equals(b) {
            if (!Buffer.isBuffer(b))
                throw new TypeError('Argument must be a Buffer')
            if (this === b)
                return true
            return Buffer.compare(this, b) === 0
        }

        Buffer.prototype.inspect = function inspect() {
            var str = ''
            var max = exports.INSPECT_MAX_BYTES
            str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
            if (this.length > max)
                str += ' ... '
            return '<Buffer ' + str + '>'
        }

        Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
            if (isInstance(target, Uint8Array)) {
                target = Buffer.from(target, target.offset, target.byteLength)
            }
            if (!Buffer.isBuffer(target)) {
                throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + (typeof target))
            }

            if (start === undefined) {
                start = 0
            }
            if (end === undefined) {
                end = target ? target.length : 0
            }
            if (thisStart === undefined) {
                thisStart = 0
            }
            if (thisEnd === undefined) {
                thisEnd = this.length
            }

            if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
                throw new RangeError('out of range index')
            }

            if (thisStart >= thisEnd && start >= end) {
                return 0
            }
            if (thisStart >= thisEnd) {
                return -1
            }
            if (start >= end) {
                return 1
            }

            start >>>= 0
            end >>>= 0
            thisStart >>>= 0
            thisEnd >>>= 0

            if (this === target)
                return 0

            var x = thisEnd - thisStart
            var y = end - start
            var len = Math.min(x, y)

            var thisCopy = this.slice(thisStart, thisEnd)
            var targetCopy = target.slice(start, end)

            for (var i = 0; i < len; ++i) {
                if (thisCopy[i] !== targetCopy[i]) {
                    x = thisCopy[i]
                    y = targetCopy[i]
                    break
                }
            }

            if (x < y)
                return -1
            if (y < x)
                return 1
            return 0
        }

        // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
        // OR the last index of `val` in `buffer` at offset <= `byteOffset`.
        //
        // Arguments:
        // - buffer - a Buffer to search
        // - val - a string, Buffer, or number
        // - byteOffset - an index into `buffer`; will be clamped to an int32
        // - encoding - an optional encoding, relevant is val is a string
        // - dir - true for indexOf, false for lastIndexOf
        function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
            // Empty buffer means no match
            if (buffer.length === 0)
                return -1

            // Normalize byteOffset
            if (typeof byteOffset === 'string') {
                encoding = byteOffset
                byteOffset = 0
            } else if (byteOffset > 0x7fffffff) {
                byteOffset = 0x7fffffff
            } else if (byteOffset < -0x80000000) {
                byteOffset = -0x80000000
            }
            byteOffset = +byteOffset
            // Coerce to Number.
            if (numberIsNaN(byteOffset)) {
                // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
                byteOffset = dir ? 0 : (buffer.length - 1)
            }

            // Normalize byteOffset: negative offsets start from the end of the buffer
            if (byteOffset < 0)
                byteOffset = buffer.length + byteOffset
            if (byteOffset >= buffer.length) {
                if (dir)
                    return -1
                else
                    byteOffset = buffer.length - 1
            } else if (byteOffset < 0) {
                if (dir)
                    byteOffset = 0
                else
                    return -1
            }

            // Normalize val
            if (typeof val === 'string') {
                val = Buffer.from(val, encoding)
            }

            // Finally, search either indexOf (if dir is true) or lastIndexOf
            if (Buffer.isBuffer(val)) {
                // Special case: looking for empty string/buffer always fails
                if (val.length === 0) {
                    return -1
                }
                return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
            } else if (typeof val === 'number') {
                val = val & 0xFF
                // Search for a byte value [0-255]
                if (typeof Uint8Array.prototype.indexOf === 'function') {
                    if (dir) {
                        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
                    } else {
                        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
                    }
                }
                return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)
            }

            throw new TypeError('val must be string, number or Buffer')
        }

        function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
            var indexSize = 1
            var arrLength = arr.length
            var valLength = val.length

            if (encoding !== undefined) {
                encoding = String(encoding).toLowerCase()
                if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
                    if (arr.length < 2 || val.length < 2) {
                        return -1
                    }
                    indexSize = 2
                    arrLength /= 2
                    valLength /= 2
                    byteOffset /= 2
                }
            }

            function read(buf, i) {
                if (indexSize === 1) {
                    return buf[i]
                } else {
                    return buf.readUInt16BE(i * indexSize)
                }
            }

            var i
            if (dir) {
                var foundIndex = -1
                for (i = byteOffset; i < arrLength; i++) {
                    if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
                        if (foundIndex === -1)
                            foundIndex = i
                        if (i - foundIndex + 1 === valLength)
                            return foundIndex * indexSize
                    } else {
                        if (foundIndex !== -1)
                            i -= i - foundIndex
                        foundIndex = -1
                    }
                }
            } else {
                if (byteOffset + valLength > arrLength)
                    byteOffset = arrLength - valLength
                for (i = byteOffset; i >= 0; i--) {
                    var found = true
                    for (var j = 0; j < valLength; j++) {
                        if (read(arr, i + j) !== read(val, j)) {
                            found = false
                            break
                        }
                    }
                    if (found)
                        return i
                }
            }

            return -1
        }

        Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
            return this.indexOf(val, byteOffset, encoding) !== -1
        }

        Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
            return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
        }

        Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
            return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
        }

        function hexWrite(buf, string, offset, length) {
            offset = Number(offset) || 0
            var remaining = buf.length - offset
            if (!length) {
                length = remaining
            } else {
                length = Number(length)
                if (length > remaining) {
                    length = remaining
                }
            }

            var strLen = string.length

            if (length > strLen / 2) {
                length = strLen / 2
            }
            for (var i = 0; i < length; ++i) {
                var parsed = parseInt(string.substr(i * 2, 2), 16)
                if (numberIsNaN(parsed))
                    return i
                buf[offset + i] = parsed
            }
            return i
        }

        function utf8Write(buf, string, offset, length) {
            return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
        }

        function asciiWrite(buf, string, offset, length) {
            return blitBuffer(asciiToBytes(string), buf, offset, length)
        }

        function latin1Write(buf, string, offset, length) {
            return asciiWrite(buf, string, offset, length)
        }

        function base64Write(buf, string, offset, length) {
            return blitBuffer(base64ToBytes(string), buf, offset, length)
        }

        function ucs2Write(buf, string, offset, length) {
            return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
        }

        Buffer.prototype.write = function write(string, offset, length, encoding) {
            // Buffer#write(string)
            if (offset === undefined) {
                encoding = 'utf8'
                length = this.length
                offset = 0
                // Buffer#write(string, encoding)
            } else if (length === undefined && typeof offset === 'string') {
                encoding = offset
                length = this.length
                offset = 0
                // Buffer#write(string, offset[, length][, encoding])
            } else if (isFinite(offset)) {
                offset = offset >>> 0
                if (isFinite(length)) {
                    length = length >>> 0
                    if (encoding === undefined)
                        encoding = 'utf8'
                } else {
                    encoding = length
                    length = undefined
                }
            } else {
                throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported')
            }

            var remaining = this.length - offset
            if (length === undefined || length > remaining)
                length = remaining

            if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
                throw new RangeError('Attempt to write outside buffer bounds')
            }

            if (!encoding)
                encoding = 'utf8'

            var loweredCase = false
            for (; ; ) {
                switch (encoding) {
                case 'hex':
                    return hexWrite(this, string, offset, length)

                case 'utf8':
                case 'utf-8':
                    return utf8Write(this, string, offset, length)

                case 'ascii':
                    return asciiWrite(this, string, offset, length)

                case 'latin1':
                case 'binary':
                    return latin1Write(this, string, offset, length)

                case 'base64':
                    // Warning: maxLength not taken into account in base64Write
                    return base64Write(this, string, offset, length)

                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                    return ucs2Write(this, string, offset, length)

                default:
                    if (loweredCase)
                        throw new TypeError('Unknown encoding: ' + encoding)
                    encoding = ('' + encoding).toLowerCase()
                    loweredCase = true
                }
            }
        }

        Buffer.prototype.toJSON = function toJSON() {
            return {
                type: 'Buffer',
                data: Array.prototype.slice.call(this._arr || this, 0)
            }
        }

        function base64Slice(buf, start, end) {
            if (start === 0 && end === buf.length) {
                return base64.fromByteArray(buf)
            } else {
                return base64.fromByteArray(buf.slice(start, end))
            }
        }

        function utf8Slice(buf, start, end) {
            end = Math.min(buf.length, end)
            var res = []

            var i = start
            while (i < end) {
                var firstByte = buf[i]
                var codePoint = null
                var bytesPerSequence = (firstByte > 0xEF) ? 4 : (firstByte > 0xDF) ? 3 : (firstByte > 0xBF) ? 2 : 1

                if (i + bytesPerSequence <= end) {
                    var secondByte, thirdByte, fourthByte, tempCodePoint

                    switch (bytesPerSequence) {
                    case 1:
                        if (firstByte < 0x80) {
                            codePoint = firstByte
                        }
                        break
                    case 2:
                        secondByte = buf[i + 1]
                        if ((secondByte & 0xC0) === 0x80) {
                            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
                            if (tempCodePoint > 0x7F) {
                                codePoint = tempCodePoint
                            }
                        }
                        break
                    case 3:
                        secondByte = buf[i + 1]
                        thirdByte = buf[i + 2]
                        if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
                            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
                            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
                                codePoint = tempCodePoint
                            }
                        }
                        break
                    case 4:
                        secondByte = buf[i + 1]
                        thirdByte = buf[i + 2]
                        fourthByte = buf[i + 3]
                        if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
                            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
                            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
                                codePoint = tempCodePoint
                            }
                        }
                    }
                }

                if (codePoint === null) {
                    // we did not generate a valid codePoint so insert a
                    // replacement char (U+FFFD) and advance only 1 byte
                    codePoint = 0xFFFD
                    bytesPerSequence = 1
                } else if (codePoint > 0xFFFF) {
                    // encode to utf16 (surrogate pair dance)
                    codePoint -= 0x10000
                    res.push(codePoint >>> 10 & 0x3FF | 0xD800)
                    codePoint = 0xDC00 | codePoint & 0x3FF
                }

                res.push(codePoint)
                i += bytesPerSequence
            }

            return decodeCodePointsArray(res)
        }

        // Based on http://stackoverflow.com/a/22747272/680742, the browser with
        // the lowest limit is Chrome, with 0x10000 args.
        // We go 1 magnitude less, for safety
        var MAX_ARGUMENTS_LENGTH = 0x1000

        function decodeCodePointsArray(codePoints) {
            var len = codePoints.length
            if (len <= MAX_ARGUMENTS_LENGTH) {
                return String.fromCharCode.apply(String, codePoints)
                // avoid extra slice()
            }

            // Decode in chunks to avoid "call stack size exceeded".
            var res = ''
            var i = 0
            while (i < len) {
                res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH))
            }
            return res
        }

        function asciiSlice(buf, start, end) {
            var ret = ''
            end = Math.min(buf.length, end)

            for (var i = start; i < end; ++i) {
                ret += String.fromCharCode(buf[i] & 0x7F)
            }
            return ret
        }

        function latin1Slice(buf, start, end) {
            var ret = ''
            end = Math.min(buf.length, end)

            for (var i = start; i < end; ++i) {
                ret += String.fromCharCode(buf[i])
            }
            return ret
        }

        function hexSlice(buf, start, end) {
            var len = buf.length

            if (!start || start < 0)
                start = 0
            if (!end || end < 0 || end > len)
                end = len

            var out = ''
            for (var i = start; i < end; ++i) {
                out += toHex(buf[i])
            }
            return out
        }

        function utf16leSlice(buf, start, end) {
            var bytes = buf.slice(start, end)
            var res = ''
            for (var i = 0; i < bytes.length; i += 2) {
                res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
            }
            return res
        }

        Buffer.prototype.slice = function slice(start, end) {
            var len = this.length
            start = ~~start
            end = end === undefined ? len : ~~end

            if (start < 0) {
                start += len
                if (start < 0)
                    start = 0
            } else if (start > len) {
                start = len
            }

            if (end < 0) {
                end += len
                if (end < 0)
                    end = 0
            } else if (end > len) {
                end = len
            }

            if (end < start)
                end = start

            var newBuf = this.subarray(start, end)
            // Return an augmented `Uint8Array` instance
            newBuf.__proto__ = Buffer.prototype
            return newBuf
        }

        /*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
        function checkOffset(offset, ext, length) {
            if ((offset % 1) !== 0 || offset < 0)
                throw new RangeError('offset is not uint')
            if (offset + ext > length)
                throw new RangeError('Trying to access beyond buffer length')
        }

        Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
            offset = offset >>> 0
            byteLength = byteLength >>> 0
            if (!noAssert)
                checkOffset(offset, byteLength, this.length)

            var val = this[offset]
            var mul = 1
            var i = 0
            while (++i < byteLength && (mul *= 0x100)) {
                val += this[offset + i] * mul
            }

            return val
        }

        Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
            offset = offset >>> 0
            byteLength = byteLength >>> 0
            if (!noAssert) {
                checkOffset(offset, byteLength, this.length)
            }

            var val = this[offset + --byteLength]
            var mul = 1
            while (byteLength > 0 && (mul *= 0x100)) {
                val += this[offset + --byteLength] * mul
            }

            return val
        }

        Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
            offset = offset >>> 0
            if (!noAssert)
                checkOffset(offset, 1, this.length)
            return this[offset]
        }

        Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
            offset = offset >>> 0
            if (!noAssert)
                checkOffset(offset, 2, this.length)
            return this[offset] | (this[offset + 1] << 8)
        }

        Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
            offset = offset >>> 0
            if (!noAssert)
                checkOffset(offset, 2, this.length)
            return (this[offset] << 8) | this[offset + 1]
        }

        Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
            offset = offset >>> 0
            if (!noAssert)
                checkOffset(offset, 4, this.length)

            return ((this[offset]) | (this[offset + 1] << 8) | (this[offset + 2] << 16)) + (this[offset + 3] * 0x1000000)
        }

        Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
            offset = offset >>> 0
            if (!noAssert)
                checkOffset(offset, 4, this.length)

            return (this[offset] * 0x1000000) + ((this[offset + 1] << 16) | (this[offset + 2] << 8) | this[offset + 3])
        }

        Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
            offset = offset >>> 0
            byteLength = byteLength >>> 0
            if (!noAssert)
                checkOffset(offset, byteLength, this.length)

            var val = this[offset]
            var mul = 1
            var i = 0
            while (++i < byteLength && (mul *= 0x100)) {
                val += this[offset + i] * mul
            }
            mul *= 0x80

            if (val >= mul)
                val -= Math.pow(2, 8 * byteLength)

            return val
        }

        Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
            offset = offset >>> 0
            byteLength = byteLength >>> 0
            if (!noAssert)
                checkOffset(offset, byteLength, this.length)

            var i = byteLength
            var mul = 1
            var val = this[offset + --i]
            while (i > 0 && (mul *= 0x100)) {
                val += this[offset + --i] * mul
            }
            mul *= 0x80

            if (val >= mul)
                val -= Math.pow(2, 8 * byteLength)

            return val
        }

        Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
            offset = offset >>> 0
            if (!noAssert)
                checkOffset(offset, 1, this.length)
            if (!(this[offset] & 0x80))
                return (this[offset])
            return ((0xff - this[offset] + 1) * -1)
        }

        Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
            offset = offset >>> 0
            if (!noAssert)
                checkOffset(offset, 2, this.length)
            var val = this[offset] | (this[offset + 1] << 8)
            return (val & 0x8000) ? val | 0xFFFF0000 : val
        }

        Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
            offset = offset >>> 0
            if (!noAssert)
                checkOffset(offset, 2, this.length)
            var val = this[offset + 1] | (this[offset] << 8)
            return (val & 0x8000) ? val | 0xFFFF0000 : val
        }

        Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
            offset = offset >>> 0
            if (!noAssert)
                checkOffset(offset, 4, this.length)

            return (this[offset]) | (this[offset + 1] << 8) | (this[offset + 2] << 16) | (this[offset + 3] << 24)
        }

        Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
            offset = offset >>> 0
            if (!noAssert)
                checkOffset(offset, 4, this.length)

            return (this[offset] << 24) | (this[offset + 1] << 16) | (this[offset + 2] << 8) | (this[offset + 3])
        }

        Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
            offset = offset >>> 0
            if (!noAssert)
                checkOffset(offset, 4, this.length)
            return ieee754.read(this, offset, true, 23, 4)
        }

        Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
            offset = offset >>> 0
            if (!noAssert)
                checkOffset(offset, 4, this.length)
            return ieee754.read(this, offset, false, 23, 4)
        }

        Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
            offset = offset >>> 0
            if (!noAssert)
                checkOffset(offset, 8, this.length)
            return ieee754.read(this, offset, true, 52, 8)
        }

        Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
            offset = offset >>> 0
            if (!noAssert)
                checkOffset(offset, 8, this.length)
            return ieee754.read(this, offset, false, 52, 8)
        }

        function checkInt(buf, value, offset, ext, max, min) {
            if (!Buffer.isBuffer(buf))
                throw new TypeError('"buffer" argument must be a Buffer instance')
            if (value > max || value < min)
                throw new RangeError('"value" argument is out of bounds')
            if (offset + ext > buf.length)
                throw new RangeError('Index out of range')
        }

        Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
            value = +value
            offset = offset >>> 0
            byteLength = byteLength >>> 0
            if (!noAssert) {
                var maxBytes = Math.pow(2, 8 * byteLength) - 1
                checkInt(this, value, offset, byteLength, maxBytes, 0)
            }

            var mul = 1
            var i = 0
            this[offset] = value & 0xFF
            while (++i < byteLength && (mul *= 0x100)) {
                this[offset + i] = (value / mul) & 0xFF
            }

            return offset + byteLength
        }

        Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
            value = +value
            offset = offset >>> 0
            byteLength = byteLength >>> 0
            if (!noAssert) {
                var maxBytes = Math.pow(2, 8 * byteLength) - 1
                checkInt(this, value, offset, byteLength, maxBytes, 0)
            }

            var i = byteLength - 1
            var mul = 1
            this[offset + i] = value & 0xFF
            while (--i >= 0 && (mul *= 0x100)) {
                this[offset + i] = (value / mul) & 0xFF
            }

            return offset + byteLength
        }

        Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
            value = +value
            offset = offset >>> 0
            if (!noAssert)
                checkInt(this, value, offset, 1, 0xff, 0)
            this[offset] = (value & 0xff)
            return offset + 1
        }

        Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
            value = +value
            offset = offset >>> 0
            if (!noAssert)
                checkInt(this, value, offset, 2, 0xffff, 0)
            this[offset] = (value & 0xff)
            this[offset + 1] = (value >>> 8)
            return offset + 2
        }

        Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
            value = +value
            offset = offset >>> 0
            if (!noAssert)
                checkInt(this, value, offset, 2, 0xffff, 0)
            this[offset] = (value >>> 8)
            this[offset + 1] = (value & 0xff)
            return offset + 2
        }

        Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
            value = +value
            offset = offset >>> 0
            if (!noAssert)
                checkInt(this, value, offset, 4, 0xffffffff, 0)
            this[offset + 3] = (value >>> 24)
            this[offset + 2] = (value >>> 16)
            this[offset + 1] = (value >>> 8)
            this[offset] = (value & 0xff)
            return offset + 4
        }

        Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
            value = +value
            offset = offset >>> 0
            if (!noAssert)
                checkInt(this, value, offset, 4, 0xffffffff, 0)
            this[offset] = (value >>> 24)
            this[offset + 1] = (value >>> 16)
            this[offset + 2] = (value >>> 8)
            this[offset + 3] = (value & 0xff)
            return offset + 4
        }

        Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
            value = +value
            offset = offset >>> 0
            if (!noAssert) {
                var limit = Math.pow(2, (8 * byteLength) - 1)

                checkInt(this, value, offset, byteLength, limit - 1, -limit)
            }

            var i = 0
            var mul = 1
            var sub = 0
            this[offset] = value & 0xFF
            while (++i < byteLength && (mul *= 0x100)) {
                if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
                    sub = 1
                }
                this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
            }

            return offset + byteLength
        }

        Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
            value = +value
            offset = offset >>> 0
            if (!noAssert) {
                var limit = Math.pow(2, (8 * byteLength) - 1)

                checkInt(this, value, offset, byteLength, limit - 1, -limit)
            }

            var i = byteLength - 1
            var mul = 1
            var sub = 0
            this[offset + i] = value & 0xFF
            while (--i >= 0 && (mul *= 0x100)) {
                if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
                    sub = 1
                }
                this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
            }

            return offset + byteLength
        }

        Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
            value = +value
            offset = offset >>> 0
            if (!noAssert)
                checkInt(this, value, offset, 1, 0x7f, -0x80)
            if (value < 0)
                value = 0xff + value + 1
            this[offset] = (value & 0xff)
            return offset + 1
        }

        Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
            value = +value
            offset = offset >>> 0
            if (!noAssert)
                checkInt(this, value, offset, 2, 0x7fff, -0x8000)
            this[offset] = (value & 0xff)
            this[offset + 1] = (value >>> 8)
            return offset + 2
        }

        Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
            value = +value
            offset = offset >>> 0
            if (!noAssert)
                checkInt(this, value, offset, 2, 0x7fff, -0x8000)
            this[offset] = (value >>> 8)
            this[offset + 1] = (value & 0xff)
            return offset + 2
        }

        Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
            value = +value
            offset = offset >>> 0
            if (!noAssert)
                checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
            this[offset] = (value & 0xff)
            this[offset + 1] = (value >>> 8)
            this[offset + 2] = (value >>> 16)
            this[offset + 3] = (value >>> 24)
            return offset + 4
        }

        Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
            value = +value
            offset = offset >>> 0
            if (!noAssert)
                checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
            if (value < 0)
                value = 0xffffffff + value + 1
            this[offset] = (value >>> 24)
            this[offset + 1] = (value >>> 16)
            this[offset + 2] = (value >>> 8)
            this[offset + 3] = (value & 0xff)
            return offset + 4
        }

        function checkIEEE754(buf, value, offset, ext, max, min) {
            if (offset + ext > buf.length)
                throw new RangeError('Index out of range')
            if (offset < 0)
                throw new RangeError('Index out of range')
        }

        function writeFloat(buf, value, offset, littleEndian, noAssert) {
            value = +value
            offset = offset >>> 0
            if (!noAssert) {
                checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
            }
            ieee754.write(buf, value, offset, littleEndian, 23, 4)
            return offset + 4
        }

        Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
            return writeFloat(this, value, offset, true, noAssert)
        }

        Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
            return writeFloat(this, value, offset, false, noAssert)
        }

        function writeDouble(buf, value, offset, littleEndian, noAssert) {
            value = +value
            offset = offset >>> 0
            if (!noAssert) {
                checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
            }
            ieee754.write(buf, value, offset, littleEndian, 52, 8)
            return offset + 8
        }

        Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
            return writeDouble(this, value, offset, true, noAssert)
        }

        Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
            return writeDouble(this, value, offset, false, noAssert)
        }

        // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
        Buffer.prototype.copy = function copy(target, targetStart, start, end) {
            if (!Buffer.isBuffer(target))
                throw new TypeError('argument should be a Buffer')
            if (!start)
                start = 0
            if (!end && end !== 0)
                end = this.length
            if (targetStart >= target.length)
                targetStart = target.length
            if (!targetStart)
                targetStart = 0
            if (end > 0 && end < start)
                end = start

            // Copy 0 bytes; we're done
            if (end === start)
                return 0
            if (target.length === 0 || this.length === 0)
                return 0

            // Fatal error conditions
            if (targetStart < 0) {
                throw new RangeError('targetStart out of bounds')
            }
            if (start < 0 || start >= this.length)
                throw new RangeError('Index out of range')
            if (end < 0)
                throw new RangeError('sourceEnd out of bounds')

            // Are we oob?
            if (end > this.length)
                end = this.length
            if (target.length - targetStart < end - start) {
                end = target.length - targetStart + start
            }

            var len = end - start

            if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
                // Use built-in when available, missing from IE11
                this.copyWithin(targetStart, start, end)
            } else if (this === target && start < targetStart && targetStart < end) {
                // descending copy from end
                for (var i = len - 1; i >= 0; --i) {
                    target[i + targetStart] = this[i + start]
                }
            } else {
                Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart)
            }

            return len
        }

        // Usage:
        //    buffer.fill(number[, offset[, end]])
        //    buffer.fill(buffer[, offset[, end]])
        //    buffer.fill(string[, offset[, end]][, encoding])
        Buffer.prototype.fill = function fill(val, start, end, encoding) {
            // Handle string cases:
            if (typeof val === 'string') {
                if (typeof start === 'string') {
                    encoding = start
                    start = 0
                    end = this.length
                } else if (typeof end === 'string') {
                    encoding = end
                    end = this.length
                }
                if (encoding !== undefined && typeof encoding !== 'string') {
                    throw new TypeError('encoding must be a string')
                }
                if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
                    throw new TypeError('Unknown encoding: ' + encoding)
                }
                if (val.length === 1) {
                    var code = val.charCodeAt(0)
                    if ((encoding === 'utf8' && code < 128) || encoding === 'latin1') {
                        // Fast path: If `val` fits into a single byte, use that numeric value.
                        val = code
                    }
                }
            } else if (typeof val === 'number') {
                val = val & 255
            }

            // Invalid ranges are not set to a default, so can range check early.
            if (start < 0 || this.length < start || this.length < end) {
                throw new RangeError('Out of range index')
            }

            if (end <= start) {
                return this
            }

            start = start >>> 0
            end = end === undefined ? this.length : end >>> 0

            if (!val)
                val = 0

            var i
            if (typeof val === 'number') {
                for (i = start; i < end; ++i) {
                    this[i] = val
                }
            } else {
                var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding)
                var len = bytes.length
                if (len === 0) {
                    throw new TypeError('The value "' + val + '" is invalid for argument "value"')
                }
                for (i = 0; i < end - start; ++i) {
                    this[i + start] = bytes[i % len]
                }
            }

            return this
        }

        // HELPER FUNCTIONS
        // ================

        var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

        function base64clean(str) {
            // Node takes equal signs as end of the Base64 encoding
            str = str.split('=')[0]
            // Node strips out invalid characters like \n and \t from the string, base64-js does not
            str = str.trim().replace(INVALID_BASE64_RE, '')
            // Node converts strings with length < 2 to ''
            if (str.length < 2)
                return ''
            // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
            while (str.length % 4 !== 0) {
                str = str + '='
            }
            return str
        }

        function toHex(n) {
            if (n < 16)
                return '0' + n.toString(16)
            return n.toString(16)
        }

        function utf8ToBytes(string, units) {
            units = units || Infinity
            var codePoint
            var length = string.length
            var leadSurrogate = null
            var bytes = []

            for (var i = 0; i < length; ++i) {
                codePoint = string.charCodeAt(i)

                // is surrogate component
                if (codePoint > 0xD7FF && codePoint < 0xE000) {
                    // last char was a lead
                    if (!leadSurrogate) {
                        // no lead yet
                        if (codePoint > 0xDBFF) {
                            // unexpected trail
                            if ((units -= 3) > -1)
                                bytes.push(0xEF, 0xBF, 0xBD)
                            continue
                        } else if (i + 1 === length) {
                            // unpaired lead
                            if ((units -= 3) > -1)
                                bytes.push(0xEF, 0xBF, 0xBD)
                            continue
                        }

                        // valid lead
                        leadSurrogate = codePoint

                        continue
                    }

                    // 2 leads in a row
                    if (codePoint < 0xDC00) {
                        if ((units -= 3) > -1)
                            bytes.push(0xEF, 0xBF, 0xBD)
                        leadSurrogate = codePoint
                        continue
                    }

                    // valid surrogate pair
                    codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
                } else if (leadSurrogate) {
                    // valid bmp char, but last char was a lead
                    if ((units -= 3) > -1)
                        bytes.push(0xEF, 0xBF, 0xBD)
                }

                leadSurrogate = null

                // encode utf8
                if (codePoint < 0x80) {
                    if ((units -= 1) < 0)
                        break
                    bytes.push(codePoint)
                } else if (codePoint < 0x800) {
                    if ((units -= 2) < 0)
                        break
                    bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80)
                } else if (codePoint < 0x10000) {
                    if ((units -= 3) < 0)
                        break
                    bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80)
                } else if (codePoint < 0x110000) {
                    if ((units -= 4) < 0)
                        break
                    bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80)
                } else {
                    throw new Error('Invalid code point')
                }
            }

            return bytes
        }

        function asciiToBytes(str) {
            var byteArray = []
            for (var i = 0; i < str.length; ++i) {
                // Node's code seems to be doing this and not & 0x7F..
                byteArray.push(str.charCodeAt(i) & 0xFF)
            }
            return byteArray
        }

        function utf16leToBytes(str, units) {
            var c, hi, lo
            var byteArray = []
            for (var i = 0; i < str.length; ++i) {
                if ((units -= 2) < 0)
                    break

                c = str.charCodeAt(i)
                hi = c >> 8
                lo = c % 256
                byteArray.push(lo)
                byteArray.push(hi)
            }

            return byteArray
        }

        function base64ToBytes(str) {
            return base64.toByteArray(base64clean(str))
        }

        function blitBuffer(src, dst, offset, length) {
            for (var i = 0; i < length; ++i) {
                if ((i + offset >= dst.length) || (i >= src.length))
                    break
                dst[i + offset] = src[i]
            }
            return i
        }

        // ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
        // the `instanceof` check but they should be treated as of that type.
        // See: https://github.com/feross/buffer/issues/166
        function isInstance(obj, type) {
            return obj instanceof type || (obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name)
        }
        function numberIsNaN(obj) {
            // For IE11 support
            return obj !== obj
            // eslint-disable-line no-self-compare
        }

    }
    , {
        "base64-js": 21,
        "ieee754": 26
    }],
    24: [function(require, module, exports) {
        (function(Buffer) {
            // Copyright Joyent, Inc. and other Node contributors.
            //
            // Permission is hereby granted, free of charge, to any person obtaining a
            // copy of this software and associated documentation files (the
            // "Software"), to deal in the Software without restriction, including
            // without limitation the rights to use, copy, modify, merge, publish,
            // distribute, sublicense, and/or sell copies of the Software, and to permit
            // persons to whom the Software is furnished to do so, subject to the
            // following conditions:
            //
            // The above copyright notice and this permission notice shall be included
            // in all copies or substantial portions of the Software.
            //
            // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
            // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
            // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
            // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
            // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
            // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
            // USE OR OTHER DEALINGS IN THE SOFTWARE.

            // NOTE: These type checking functions intentionally don't use `instanceof`
            // because it is fragile and can be easily faked with `Object.create()`.

            function isArray(arg) {
                if (Array.isArray) {
                    return Array.isArray(arg);
                }
                return objectToString(arg) === '[object Array]';
            }
            exports.isArray = isArray;

            function isBoolean(arg) {
                return typeof arg === 'boolean';
            }
            exports.isBoolean = isBoolean;

            function isNull(arg) {
                return arg === null;
            }
            exports.isNull = isNull;

            function isNullOrUndefined(arg) {
                return arg == null;
            }
            exports.isNullOrUndefined = isNullOrUndefined;

            function isNumber(arg) {
                return typeof arg === 'number';
            }
            exports.isNumber = isNumber;

            function isString(arg) {
                return typeof arg === 'string';
            }
            exports.isString = isString;

            function isSymbol(arg) {
                return typeof arg === 'symbol';
            }
            exports.isSymbol = isSymbol;

            function isUndefined(arg) {
                return arg === void 0;
            }
            exports.isUndefined = isUndefined;

            function isRegExp(re) {
                return objectToString(re) === '[object RegExp]';
            }
            exports.isRegExp = isRegExp;

            function isObject(arg) {
                return typeof arg === 'object' && arg !== null;
            }
            exports.isObject = isObject;

            function isDate(d) {
                return objectToString(d) === '[object Date]';
            }
            exports.isDate = isDate;

            function isError(e) {
                return (objectToString(e) === '[object Error]' || e instanceof Error);
            }
            exports.isError = isError;

            function isFunction(arg) {
                return typeof arg === 'function';
            }
            exports.isFunction = isFunction;

            function isPrimitive(arg) {
                return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || // ES6 symbol
                typeof arg === 'undefined';
            }
            exports.isPrimitive = isPrimitive;

            exports.isBuffer = Buffer.isBuffer;

            function objectToString(o) {
                return Object.prototype.toString.call(o);
            }

        }
        ).call(this, {
            "isBuffer": require("../../is-buffer/index.js")
        })
    }
    , {
        "../../is-buffer/index.js": 28
    }],
    25: [function(require, module, exports) {
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        var objectCreate = Object.create || objectCreatePolyfill
        var objectKeys = Object.keys || objectKeysPolyfill
        var bind = Function.prototype.bind || functionBindPolyfill

        function EventEmitter() {
            if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {
                this._events = objectCreate(null);
                this._eventsCount = 0;
            }

            this._maxListeners = this._maxListeners || undefined;
        }
        module.exports = EventEmitter;

        // Backwards-compat with node 0.10.x
        EventEmitter.EventEmitter = EventEmitter;

        EventEmitter.prototype._events = undefined;
        EventEmitter.prototype._maxListeners = undefined;

        // By default EventEmitters will print a warning if more than 10 listeners are
        // added to it. This is a useful default which helps finding memory leaks.
        var defaultMaxListeners = 10;

        var hasDefineProperty;
        try {
            var o = {};
            if (Object.defineProperty)
                Object.defineProperty(o, 'x', {
                    value: 0
                });
            hasDefineProperty = o.x === 0;
        } catch (err) {
            hasDefineProperty = false
        }
        if (hasDefineProperty) {
            Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
                enumerable: true,
                get: function() {
                    return defaultMaxListeners;
                },
                set: function(arg) {
                    // check whether the input is a positive number (whose value is zero or
                    // greater and not a NaN).
                    if (typeof arg !== 'number' || arg < 0 || arg !== arg)
                        throw new TypeError('"defaultMaxListeners" must be a positive number');
                    defaultMaxListeners = arg;
                }
            });
        } else {
            EventEmitter.defaultMaxListeners = defaultMaxListeners;
        }

        // Obviously not all Emitters should be limited to 10. This function allows
        // that to be increased. Set to zero for unlimited.
        EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
            if (typeof n !== 'number' || n < 0 || isNaN(n))
                throw new TypeError('"n" argument must be a positive number');
            this._maxListeners = n;
            return this;
        }
        ;

        function $getMaxListeners(that) {
            if (that._maxListeners === undefined)
                return EventEmitter.defaultMaxListeners;
            return that._maxListeners;
        }

        EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
            return $getMaxListeners(this);
        }
        ;

        // These standalone emit* functions are used to optimize calling of event
        // handlers for fast cases because emit() itself often has a variable number of
        // arguments and can be deoptimized because of that. These functions always have
        // the same number of arguments and thus do not get deoptimized, so the code
        // inside them can execute faster.
        function emitNone(handler, isFn, self) {
            if (isFn)
                handler.call(self);
            else {
                var len = handler.length;
                var listeners = arrayClone(handler, len);
                for (var i = 0; i < len; ++i)
                    listeners[i].call(self);
            }
        }
        function emitOne(handler, isFn, self, arg1) {
            if (isFn)
                handler.call(self, arg1);
            else {
                var len = handler.length;
                var listeners = arrayClone(handler, len);
                for (var i = 0; i < len; ++i)
                    listeners[i].call(self, arg1);
            }
        }
        function emitTwo(handler, isFn, self, arg1, arg2) {
            if (isFn)
                handler.call(self, arg1, arg2);
            else {
                var len = handler.length;
                var listeners = arrayClone(handler, len);
                for (var i = 0; i < len; ++i)
                    listeners[i].call(self, arg1, arg2);
            }
        }
        function emitThree(handler, isFn, self, arg1, arg2, arg3) {
            if (isFn)
                handler.call(self, arg1, arg2, arg3);
            else {
                var len = handler.length;
                var listeners = arrayClone(handler, len);
                for (var i = 0; i < len; ++i)
                    listeners[i].call(self, arg1, arg2, arg3);
            }
        }

        function emitMany(handler, isFn, self, args) {
            if (isFn)
                handler.apply(self, args);
            else {
                var len = handler.length;
                var listeners = arrayClone(handler, len);
                for (var i = 0; i < len; ++i)
                    listeners[i].apply(self, args);
            }
        }

        EventEmitter.prototype.emit = function emit(type) {
            var er, handler, len, args, i, events;
            var doError = (type === 'error');

            events = this._events;
            if (events)
                doError = (doError && events.error == null);
            else if (!doError)
                return false;

            // If there is no 'error' event listener then throw.
            if (doError) {
                if (arguments.length > 1)
                    er = arguments[1];
                if (er instanceof Error) {
                    throw er;
                    // Unhandled 'error' event
                } else {
                    // At least give some kind of context to the user
                    var err = new Error('Unhandled "error" event. (' + er + ')');
                    err.context = er;
                    throw err;
                }
                return false;
            }

            handler = events[type];

            if (!handler)
                return false;

            var isFn = typeof handler === 'function';
            len = arguments.length;
            switch (len) {
                // fast cases
            case 1:
                emitNone(handler, isFn, this);
                break;
            case 2:
                emitOne(handler, isFn, this, arguments[1]);
                break;
            case 3:
                emitTwo(handler, isFn, this, arguments[1], arguments[2]);
                break;
            case 4:
                emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);
                break;
                // slower
            default:
                args = new Array(len - 1);
                for (i = 1; i < len; i++)
                    args[i - 1] = arguments[i];
                emitMany(handler, isFn, this, args);
            }

            return true;
        }
        ;

        function _addListener(target, type, listener, prepend) {
            var m;
            var events;
            var existing;

            if (typeof listener !== 'function')
                throw new TypeError('"listener" argument must be a function');

            events = target._events;
            if (!events) {
                events = target._events = objectCreate(null);
                target._eventsCount = 0;
            } else {
                // To avoid recursion in the case that type === "newListener"! Before
                // adding it to the listeners, first emit "newListener".
                if (events.newListener) {
                    target.emit('newListener', type, listener.listener ? listener.listener : listener);

                    // Re-assign `events` because a newListener handler could have caused the
                    // this._events to be assigned to a new object
                    events = target._events;
                }
                existing = events[type];
            }

            if (!existing) {
                // Optimize the case of one listener. Don't need the extra array object.
                existing = events[type] = listener;
                ++target._eventsCount;
            } else {
                if (typeof existing === 'function') {
                    // Adding the second element, need to change to array.
                    existing = events[type] = prepend ? [listener, existing] : [existing, listener];
                } else {
                    // If we've already got an array, just append.
                    if (prepend) {
                        existing.unshift(listener);
                    } else {
                        existing.push(listener);
                    }
                }

                // Check for listener leak
                if (!existing.warned) {
                    m = $getMaxListeners(target);
                    if (m && m > 0 && existing.length > m) {
                        existing.warned = true;
                        var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' "' + String(type) + '" listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit.');
                        w.name = 'MaxListenersExceededWarning';
                        w.emitter = target;
                        w.type = type;
                        w.count = existing.length;
                        if (typeof console === 'object' && console.warn) {
                            console.warn('%s: %s', w.name, w.message);
                        }
                    }
                }
            }

            return target;
        }

        EventEmitter.prototype.addListener = function addListener(type, listener) {
            return _addListener(this, type, listener, false);
        }
        ;

        EventEmitter.prototype.on = EventEmitter.prototype.addListener;

        EventEmitter.prototype.prependListener = function prependListener(type, listener) {
            return _addListener(this, type, listener, true);
        }
        ;

        function onceWrapper() {
            if (!this.fired) {
                this.target.removeListener(this.type, this.wrapFn);
                this.fired = true;
                switch (arguments.length) {
                case 0:
                    return this.listener.call(this.target);
                case 1:
                    return this.listener.call(this.target, arguments[0]);
                case 2:
                    return this.listener.call(this.target, arguments[0], arguments[1]);
                case 3:
                    return this.listener.call(this.target, arguments[0], arguments[1], arguments[2]);
                default:
                    var args = new Array(arguments.length);
                    for (var i = 0; i < args.length; ++i)
                        args[i] = arguments[i];
                    this.listener.apply(this.target, args);
                }
            }
        }

        function _onceWrap(target, type, listener) {
            var state = {
                fired: false,
                wrapFn: undefined,
                target: target,
                type: type,
                listener: listener
            };
            var wrapped = bind.call(onceWrapper, state);
            wrapped.listener = listener;
            state.wrapFn = wrapped;
            return wrapped;
        }

        EventEmitter.prototype.once = function once(type, listener) {
            if (typeof listener !== 'function')
                throw new TypeError('"listener" argument must be a function');
            this.on(type, _onceWrap(this, type, listener));
            return this;
        }
        ;

        EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {
            if (typeof listener !== 'function')
                throw new TypeError('"listener" argument must be a function');
            this.prependListener(type, _onceWrap(this, type, listener));
            return this;
        }
        ;

        // Emits a 'removeListener' event if and only if the listener was removed.
        EventEmitter.prototype.removeListener = function removeListener(type, listener) {
            var list, events, position, i, originalListener;

            if (typeof listener !== 'function')
                throw new TypeError('"listener" argument must be a function');

            events = this._events;
            if (!events)
                return this;

            list = events[type];
            if (!list)
                return this;

            if (list === listener || list.listener === listener) {
                if (--this._eventsCount === 0)
                    this._events = objectCreate(null);
                else {
                    delete events[type];
                    if (events.removeListener)
                        this.emit('removeListener', type, list.listener || listener);
                }
            } else if (typeof list !== 'function') {
                position = -1;

                for (i = list.length - 1; i >= 0; i--) {
                    if (list[i] === listener || list[i].listener === listener) {
                        originalListener = list[i].listener;
                        position = i;
                        break;
                    }
                }

                if (position < 0)
                    return this;

                if (position === 0)
                    list.shift();
                else
                    spliceOne(list, position);

                if (list.length === 1)
                    events[type] = list[0];

                if (events.removeListener)
                    this.emit('removeListener', type, originalListener || listener);
            }

            return this;
        }
        ;

        EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {
            var listeners, events, i;

            events = this._events;
            if (!events)
                return this;

            // not listening for removeListener, no need to emit
            if (!events.removeListener) {
                if (arguments.length === 0) {
                    this._events = objectCreate(null);
                    this._eventsCount = 0;
                } else if (events[type]) {
                    if (--this._eventsCount === 0)
                        this._events = objectCreate(null);
                    else
                        delete events[type];
                }
                return this;
            }

            // emit removeListener for all listeners on all events
            if (arguments.length === 0) {
                var keys = objectKeys(events);
                var key;
                for (i = 0; i < keys.length; ++i) {
                    key = keys[i];
                    if (key === 'removeListener')
                        continue;
                    this.removeAllListeners(key);
                }
                this.removeAllListeners('removeListener');
                this._events = objectCreate(null);
                this._eventsCount = 0;
                return this;
            }

            listeners = events[type];

            if (typeof listeners === 'function') {
                this.removeListener(type, listeners);
            } else if (listeners) {
                // LIFO order
                for (i = listeners.length - 1; i >= 0; i--) {
                    this.removeListener(type, listeners[i]);
                }
            }

            return this;
        }
        ;

        function _listeners(target, type, unwrap) {
            var events = target._events;

            if (!events)
                return [];

            var evlistener = events[type];
            if (!evlistener)
                return [];

            if (typeof evlistener === 'function')
                return unwrap ? [evlistener.listener || evlistener] : [evlistener];

            return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
        }

        EventEmitter.prototype.listeners = function listeners(type) {
            return _listeners(this, type, true);
        }
        ;

        EventEmitter.prototype.rawListeners = function rawListeners(type) {
            return _listeners(this, type, false);
        }
        ;

        EventEmitter.listenerCount = function(emitter, type) {
            if (typeof emitter.listenerCount === 'function') {
                return emitter.listenerCount(type);
            } else {
                return listenerCount.call(emitter, type);
            }
        }
        ;

        EventEmitter.prototype.listenerCount = listenerCount;
        function listenerCount(type) {
            var events = this._events;

            if (events) {
                var evlistener = events[type];

                if (typeof evlistener === 'function') {
                    return 1;
                } else if (evlistener) {
                    return evlistener.length;
                }
            }

            return 0;
        }

        EventEmitter.prototype.eventNames = function eventNames() {
            return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];
        }
        ;

        // About 1.5x faster than the two-arg version of Array#splice().
        function spliceOne(list, index) {
            for (var i = index, k = i + 1, n = list.length; k < n; i += 1,
            k += 1)
                list[i] = list[k];
            list.pop();
        }

        function arrayClone(arr, n) {
            var copy = new Array(n);
            for (var i = 0; i < n; ++i)
                copy[i] = arr[i];
            return copy;
        }

        function unwrapListeners(arr) {
            var ret = new Array(arr.length);
            for (var i = 0; i < ret.length; ++i) {
                ret[i] = arr[i].listener || arr[i];
            }
            return ret;
        }

        function objectCreatePolyfill(proto) {
            var F = function() {};
            F.prototype = proto;
            return new F;
        }
        function objectKeysPolyfill(obj) {
            var keys = [];
            for (var k in obj)
                if (Object.prototype.hasOwnProperty.call(obj, k)) {
                    keys.push(k);
                }
            return k;
        }
        function functionBindPolyfill(context) {
            var fn = this;
            return function() {
                return fn.apply(context, arguments);
            }
            ;
        }

    }
    , {}],
    26: [function(require, module, exports) {
        exports.read = function(buffer, offset, isLE, mLen, nBytes) {
            var e, m
            var eLen = (nBytes * 8) - mLen - 1
            var eMax = (1 << eLen) - 1
            var eBias = eMax >> 1
            var nBits = -7
            var i = isLE ? (nBytes - 1) : 0
            var d = isLE ? -1 : 1
            var s = buffer[offset + i]

            i += d

            e = s & ((1 << (-nBits)) - 1)
            s >>= (-nBits)
            nBits += eLen
            for (; nBits > 0; e = (e * 256) + buffer[offset + i],
            i += d,
            nBits -= 8) {}

            m = e & ((1 << (-nBits)) - 1)
            e >>= (-nBits)
            nBits += mLen
            for (; nBits > 0; m = (m * 256) + buffer[offset + i],
            i += d,
            nBits -= 8) {}

            if (e === 0) {
                e = 1 - eBias
            } else if (e === eMax) {
                return m ? NaN : ((s ? -1 : 1) * Infinity)
            } else {
                m = m + Math.pow(2, mLen)
                e = e - eBias
            }
            return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
        }

        exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {
            var e, m, c
            var eLen = (nBytes * 8) - mLen - 1
            var eMax = (1 << eLen) - 1
            var eBias = eMax >> 1
            var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
            var i = isLE ? 0 : (nBytes - 1)
            var d = isLE ? 1 : -1
            var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

            value = Math.abs(value)

            if (isNaN(value) || value === Infinity) {
                m = isNaN(value) ? 1 : 0
                e = eMax
            } else {
                e = Math.floor(Math.log(value) / Math.LN2)
                if (value * (c = Math.pow(2, -e)) < 1) {
                    e--
                    c *= 2
                }
                if (e + eBias >= 1) {
                    value += rt / c
                } else {
                    value += rt * Math.pow(2, 1 - eBias)
                }
                if (value * c >= 2) {
                    e++
                    c /= 2
                }

                if (e + eBias >= eMax) {
                    m = 0
                    e = eMax
                } else if (e + eBias >= 1) {
                    m = ((value * c) - 1) * Math.pow(2, mLen)
                    e = e + eBias
                } else {
                    m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
                    e = 0
                }
            }

            for (; mLen >= 8; buffer[offset + i] = m & 0xff,
            i += d,
            m /= 256,
            mLen -= 8) {}

            e = (e << mLen) | m
            eLen += mLen
            for (; eLen > 0; buffer[offset + i] = e & 0xff,
            i += d,
            e /= 256,
            eLen -= 8) {}

            buffer[offset + i - d] |= s * 128
        }

    }
    , {}],
    27: [function(require, module, exports) {
        arguments[4][4][0].apply(exports, arguments)
    }
    , {
        "dup": 4
    }],
    28: [function(require, module, exports) {
        /*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

        // The _isBuffer check is for Safari 5-7 support, because it's missing
        // Object.prototype.constructor. Remove this eventually
        module.exports = function(obj) {
            return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
        }

        function isBuffer(obj) {
            return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
        }

        // For Node v0.10 support. Remove this eventually.
        function isSlowBuffer(obj) {
            return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
        }

    }
    , {}],
    29: [function(require, module, exports) {
        var toString = {}.toString;

        module.exports = Array.isArray || function(arr) {
            return toString.call(arr) == '[object Array]';
        }
        ;

    }
    , {}],
    30: [function(require, module, exports) {
        (function(process) {
            'use strict';

            if (!process.version || process.version.indexOf('v0.') === 0 || process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
                module.exports = {
                    nextTick: nextTick
                };
            } else {
                module.exports = process
            }

            function nextTick(fn, arg1, arg2, arg3) {
                if (typeof fn !== 'function') {
                    throw new TypeError('"callback" argument must be a function');
                }
                var len = arguments.length;
                var args, i;
                switch (len) {
                case 0:
                case 1:
                    return process.nextTick(fn);
                case 2:
                    return process.nextTick(function afterTickOne() {
                        fn.call(null, arg1);
                    });
                case 3:
                    return process.nextTick(function afterTickTwo() {
                        fn.call(null, arg1, arg2);
                    });
                case 4:
                    return process.nextTick(function afterTickThree() {
                        fn.call(null, arg1, arg2, arg3);
                    });
                default:
                    args = new Array(len - 1);
                    i = 0;
                    while (i < args.length) {
                        args[i++] = arguments[i];
                    }
                    return process.nextTick(function afterTick() {
                        fn.apply(null, args);
                    });
                }
            }

        }
        ).call(this, require('_process'))
    }
    , {
        "_process": 31
    }],
    31: [function(require, module, exports) {
        // shim for using process in browser
        var process = module.exports = {};

        // cached from whatever global is present so that test runners that stub it
        // don't break things.  But we need to wrap it in a try catch in case it is
        // wrapped in strict mode code which doesn't define any globals.  It's inside a
        // function because try/catches deoptimize in certain engines.

        var cachedSetTimeout;
        var cachedClearTimeout;

        function defaultSetTimout() {
            throw new Error('setTimeout has not been defined');
        }
        function defaultClearTimeout() {
            throw new Error('clearTimeout has not been defined');
        }
        (function() {
            try {
                if (typeof setTimeout === 'function') {
                    cachedSetTimeout = setTimeout;
                } else {
                    cachedSetTimeout = defaultSetTimout;
                }
            } catch (e) {
                cachedSetTimeout = defaultSetTimout;
            }
            try {
                if (typeof clearTimeout === 'function') {
                    cachedClearTimeout = clearTimeout;
                } else {
                    cachedClearTimeout = defaultClearTimeout;
                }
            } catch (e) {
                cachedClearTimeout = defaultClearTimeout;
            }
        }())
        function runTimeout(fun) {
            if (cachedSetTimeout === setTimeout) {
                //normal enviroments in sane situations
                return setTimeout(fun, 0);
            }
            // if setTimeout wasn't available but was latter defined
            if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
                cachedSetTimeout = setTimeout;
                return setTimeout(fun, 0);
            }
            try {
                // when when somebody has screwed with setTimeout but no I.E. maddness
                return cachedSetTimeout(fun, 0);
            } catch (e) {
                try {
                    // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
                    return cachedSetTimeout.call(null, fun, 0);
                } catch (e) {
                    // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
                    return cachedSetTimeout.call(this, fun, 0);
                }
            }

        }
        function runClearTimeout(marker) {
            if (cachedClearTimeout === clearTimeout) {
                //normal enviroments in sane situations
                return clearTimeout(marker);
            }
            // if clearTimeout wasn't available but was latter defined
            if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
                cachedClearTimeout = clearTimeout;
                return clearTimeout(marker);
            }
            try {
                // when when somebody has screwed with setTimeout but no I.E. maddness
                return cachedClearTimeout(marker);
            } catch (e) {
                try {
                    // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
                    return cachedClearTimeout.call(null, marker);
                } catch (e) {
                    // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
                    // Some versions of I.E. have different rules for clearTimeout vs setTimeout
                    return cachedClearTimeout.call(this, marker);
                }
            }

        }
        var queue = [];
        var draining = false;
        var currentQueue;
        var queueIndex = -1;

        function cleanUpNextTick() {
            if (!draining || !currentQueue) {
                return;
            }
            draining = false;
            if (currentQueue.length) {
                queue = currentQueue.concat(queue);
            } else {
                queueIndex = -1;
            }
            if (queue.length) {
                drainQueue();
            }
        }

        function drainQueue() {
            if (draining) {
                return;
            }
            var timeout = runTimeout(cleanUpNextTick);
            draining = true;

            var len = queue.length;
            while (len) {
                currentQueue = queue;
                queue = [];
                while (++queueIndex < len) {
                    if (currentQueue) {
                        currentQueue[queueIndex].run();
                    }
                }
                queueIndex = -1;
                len = queue.length;
            }
            currentQueue = null;
            draining = false;
            runClearTimeout(timeout);
        }

        process.nextTick = function(fun) {
            var args = new Array(arguments.length - 1);
            if (arguments.length > 1) {
                for (var i = 1; i < arguments.length; i++) {
                    args[i - 1] = arguments[i];
                }
            }
            queue.push(new Item(fun,args));
            if (queue.length === 1 && !draining) {
                runTimeout(drainQueue);
            }
        }
        ;

        // v8 likes predictible objects
        function Item(fun, array) {
            this.fun = fun;
            this.array = array;
        }
        Item.prototype.run = function() {
            this.fun.apply(null, this.array);
        }
        ;
        process.title = 'browser';
        process.browser = true;
        process.env = {};
        process.argv = [];
        process.version = '';
        // empty string to avoid regexp issues
        process.versions = {};

        function noop() {}

        process.on = noop;
        process.addListener = noop;
        process.once = noop;
        process.off = noop;
        process.removeListener = noop;
        process.removeAllListeners = noop;
        process.emit = noop;
        process.prependListener = noop;
        process.prependOnceListener = noop;

        process.listeners = function(name) {
            return []
        }

        process.binding = function(name) {
            throw new Error('process.binding is not supported');
        }
        ;

        process.cwd = function() {
            return '/'
        }
        ;
        process.chdir = function(dir) {
            throw new Error('process.chdir is not supported');
        }
        ;
        process.umask = function() {
            return 0;
        }
        ;

    }
    , {}],
    32: [function(require, module, exports) {
        module.exports = require('./lib/_stream_duplex.js');

    }
    , {
        "./lib/_stream_duplex.js": 33
    }],
    33: [function(require, module, exports) {
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        // a duplex stream is just a stream that is both readable and writable.
        // Since JS doesn't have multiple prototypal inheritance, this class
        // prototypally inherits from Readable, and then parasitically from
        // Writable.

        'use strict';

        /*<replacement>*/

        var pna = require('process-nextick-args');
        /*</replacement>*/

        /*<replacement>*/
        var objectKeys = Object.keys || function(obj) {
            var keys = [];
            for (var key in obj) {
                keys.push(key);
            }
            return keys;
        }
        ;
        /*</replacement>*/

        module.exports = Duplex;

        /*<replacement>*/
        var util = require('core-util-is');
        util.inherits = require('inherits');
        /*</replacement>*/

        var Readable = require('./_stream_readable');
        var Writable = require('./_stream_writable');

        util.inherits(Duplex, Readable);

        {
            // avoid scope creep, the keys array can then be collected
            var keys = objectKeys(Writable.prototype);
            for (var v = 0; v < keys.length; v++) {
                var method = keys[v];
                if (!Duplex.prototype[method])
                    Duplex.prototype[method] = Writable.prototype[method];
            }
        }

        function Duplex(options) {
            if (!(this instanceof Duplex))
                return new Duplex(options);

            Readable.call(this, options);
            Writable.call(this, options);

            if (options && options.readable === false)
                this.readable = false;

            if (options && options.writable === false)
                this.writable = false;

            this.allowHalfOpen = true;
            if (options && options.allowHalfOpen === false)
                this.allowHalfOpen = false;

            this.once('end', onend);
        }

        Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function() {
                return this._writableState.highWaterMark;
            }
        });

        // the no-half-open enforcer
        function onend() {
            // if we allow half-open state, or if the writable side ended,
            // then we're ok.
            if (this.allowHalfOpen || this._writableState.ended)
                return;

            // no more data can be written.
            // But allow more writes to happen in this tick.
            pna.nextTick(onEndNT, this);
        }

        function onEndNT(self) {
            self.end();
        }

        Object.defineProperty(Duplex.prototype, 'destroyed', {
            get: function() {
                if (this._readableState === undefined || this._writableState === undefined) {
                    return false;
                }
                return this._readableState.destroyed && this._writableState.destroyed;
            },
            set: function(value) {
                // we ignore the value if the stream
                // has not been initialized yet
                if (this._readableState === undefined || this._writableState === undefined) {
                    return;
                }

                // backward compatibility, the user is explicitly
                // managing destroyed
                this._readableState.destroyed = value;
                this._writableState.destroyed = value;
            }
        });

        Duplex.prototype._destroy = function(err, cb) {
            this.push(null);
            this.end();

            pna.nextTick(cb, err);
        }
        ;
    }
    , {
        "./_stream_readable": 35,
        "./_stream_writable": 37,
        "core-util-is": 24,
        "inherits": 27,
        "process-nextick-args": 30
    }],
    34: [function(require, module, exports) {
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        // a passthrough stream.
        // basically just the most minimal sort of Transform stream.
        // Every written chunk gets output as-is.

        'use strict';

        module.exports = PassThrough;

        var Transform = require('./_stream_transform');

        /*<replacement>*/
        var util = require('core-util-is');
        util.inherits = require('inherits');
        /*</replacement>*/

        util.inherits(PassThrough, Transform);

        function PassThrough(options) {
            if (!(this instanceof PassThrough))
                return new PassThrough(options);

            Transform.call(this, options);
        }

        PassThrough.prototype._transform = function(chunk, encoding, cb) {
            cb(null, chunk);
        }
        ;
    }
    , {
        "./_stream_transform": 36,
        "core-util-is": 24,
        "inherits": 27
    }],
    35: [function(require, module, exports) {
        (function(process, global) {
            // Copyright Joyent, Inc. and other Node contributors.
            //
            // Permission is hereby granted, free of charge, to any person obtaining a
            // copy of this software and associated documentation files (the
            // "Software"), to deal in the Software without restriction, including
            // without limitation the rights to use, copy, modify, merge, publish,
            // distribute, sublicense, and/or sell copies of the Software, and to permit
            // persons to whom the Software is furnished to do so, subject to the
            // following conditions:
            //
            // The above copyright notice and this permission notice shall be included
            // in all copies or substantial portions of the Software.
            //
            // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
            // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
            // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
            // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
            // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
            // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
            // USE OR OTHER DEALINGS IN THE SOFTWARE.

            'use strict';

            /*<replacement>*/

            var pna = require('process-nextick-args');
            /*</replacement>*/

            module.exports = Readable;

            /*<replacement>*/
            var isArray = require('isarray');
            /*</replacement>*/

            /*<replacement>*/
            var Duplex;
            /*</replacement>*/

            Readable.ReadableState = ReadableState;

            /*<replacement>*/
            var EE = require('events').EventEmitter;

            var EElistenerCount = function(emitter, type) {
                return emitter.listeners(type).length;
            };
            /*</replacement>*/

            /*<replacement>*/
            var Stream = require('./internal/streams/stream');
            /*</replacement>*/

            /*<replacement>*/

            var Buffer = require('safe-buffer').Buffer;
            var OurUint8Array = global.Uint8Array || function() {}
            ;
            function _uint8ArrayToBuffer(chunk) {
                return Buffer.from(chunk);
            }
            function _isUint8Array(obj) {
                return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
            }

            /*</replacement>*/

            /*<replacement>*/
            var util = require('core-util-is');
            util.inherits = require('inherits');
            /*</replacement>*/

            /*<replacement>*/
            var debugUtil = require('util');
            var debug = void 0;
            if (debugUtil && debugUtil.debuglog) {
                debug = debugUtil.debuglog('stream');
            } else {
                debug = function() {}
                ;
            }
            /*</replacement>*/

            var BufferList = require('./internal/streams/BufferList');
            var destroyImpl = require('./internal/streams/destroy');
            var StringDecoder;

            util.inherits(Readable, Stream);

            var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

            function prependListener(emitter, event, fn) {
                // Sadly this is not cacheable as some libraries bundle their own
                // event emitter implementation with them.
                if (typeof emitter.prependListener === 'function')
                    return emitter.prependListener(event, fn);

                // This is a hack to make sure that our error handler is attached before any
                // userland ones.  NEVER DO THIS. This is here only because this code needs
                // to continue to work with older versions of Node.js that do not include
                // the prependListener() method. The goal is to eventually remove this hack.
                if (!emitter._events || !emitter._events[event])
                    emitter.on(event, fn);
                else if (isArray(emitter._events[event]))
                    emitter._events[event].unshift(fn);
                else
                    emitter._events[event] = [fn, emitter._events[event]];
            }

            function ReadableState(options, stream) {
                Duplex = Duplex || require('./_stream_duplex');

                options = options || {};

                // Duplex streams are both readable and writable, but share
                // the same options object.
                // However, some cases require setting options to different
                // values for the readable and the writable sides of the duplex stream.
                // These options can be provided separately as readableXXX and writableXXX.
                var isDuplex = stream instanceof Duplex;

                // object stream flag. Used to make read(n) ignore n and to
                // make all the buffer merging and length checks go away
                this.objectMode = !!options.objectMode;

                if (isDuplex)
                    this.objectMode = this.objectMode || !!options.readableObjectMode;

                // the point at which it stops calling _read() to fill the buffer
                // Note: 0 is a valid value, means "don't call _read preemptively ever"
                var hwm = options.highWaterMark;
                var readableHwm = options.readableHighWaterMark;
                var defaultHwm = this.objectMode ? 16 : 16 * 1024;

                if (hwm || hwm === 0)
                    this.highWaterMark = hwm;
                else if (isDuplex && (readableHwm || readableHwm === 0))
                    this.highWaterMark = readableHwm;
                else
                    this.highWaterMark = defaultHwm;

                // cast to ints.
                this.highWaterMark = Math.floor(this.highWaterMark);

                // A linked list is used to store data chunks instead of an array because the
                // linked list can remove elements from the beginning faster than
                // array.shift()
                this.buffer = new BufferList();
                this.length = 0;
                this.pipes = null;
                this.pipesCount = 0;
                this.flowing = null;
                this.ended = false;
                this.endEmitted = false;
                this.reading = false;

                // a flag to be able to tell if the event 'readable'/'data' is emitted
                // immediately, or on a later tick.  We set this to true at first, because
                // any actions that shouldn't happen until "later" should generally also
                // not happen before the first read call.
                this.sync = true;

                // whenever we return null, then we set a flag to say
                // that we're awaiting a 'readable' event emission.
                this.needReadable = false;
                this.emittedReadable = false;
                this.readableListening = false;
                this.resumeScheduled = false;

                // has it been destroyed
                this.destroyed = false;

                // Crypto is kind of old and crusty.  Historically, its default string
                // encoding is 'binary' so we have to make this configurable.
                // Everything else in the universe uses 'utf8', though.
                this.defaultEncoding = options.defaultEncoding || 'utf8';

                // the number of writers that are awaiting a drain event in .pipe()s
                this.awaitDrain = 0;

                // if true, a maybeReadMore has been scheduled
                this.readingMore = false;

                this.decoder = null;
                this.encoding = null;
                if (options.encoding) {
                    if (!StringDecoder)
                        StringDecoder = require('string_decoder/').StringDecoder;
                    this.decoder = new StringDecoder(options.encoding);
                    this.encoding = options.encoding;
                }
            }

            function Readable(options) {
                Duplex = Duplex || require('./_stream_duplex');

                if (!(this instanceof Readable))
                    return new Readable(options);

                this._readableState = new ReadableState(options,this);

                // legacy
                this.readable = true;

                if (options) {
                    if (typeof options.read === 'function')
                        this._read = options.read;

                    if (typeof options.destroy === 'function')
                        this._destroy = options.destroy;
                }

                Stream.call(this);
            }

            Object.defineProperty(Readable.prototype, 'destroyed', {
                get: function() {
                    if (this._readableState === undefined) {
                        return false;
                    }
                    return this._readableState.destroyed;
                },
                set: function(value) {
                    // we ignore the value if the stream
                    // has not been initialized yet
                    if (!this._readableState) {
                        return;
                    }

                    // backward compatibility, the user is explicitly
                    // managing destroyed
                    this._readableState.destroyed = value;
                }
            });

            Readable.prototype.destroy = destroyImpl.destroy;
            Readable.prototype._undestroy = destroyImpl.undestroy;
            Readable.prototype._destroy = function(err, cb) {
                this.push(null);
                cb(err);
            }
            ;

            // Manually shove something into the read() buffer.
            // This returns true if the highWaterMark has not been hit yet,
            // similar to how Writable.write() returns true if you should
            // write() some more.
            Readable.prototype.push = function(chunk, encoding) {
                var state = this._readableState;
                var skipChunkCheck;

                if (!state.objectMode) {
                    if (typeof chunk === 'string') {
                        encoding = encoding || state.defaultEncoding;
                        if (encoding !== state.encoding) {
                            chunk = Buffer.from(chunk, encoding);
                            encoding = '';
                        }
                        skipChunkCheck = true;
                    }
                } else {
                    skipChunkCheck = true;
                }

                return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
            }
            ;

            // Unshift should *always* be something directly out of read()
            Readable.prototype.unshift = function(chunk) {
                return readableAddChunk(this, chunk, null, true, false);
            }
            ;

            function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
                var state = stream._readableState;
                if (chunk === null) {
                    state.reading = false;
                    onEofChunk(stream, state);
                } else {
                    var er;
                    if (!skipChunkCheck)
                        er = chunkInvalid(state, chunk);
                    if (er) {
                        stream.emit('error', er);
                    } else if (state.objectMode || chunk && chunk.length > 0) {
                        if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
                            chunk = _uint8ArrayToBuffer(chunk);
                        }

                        if (addToFront) {
                            if (state.endEmitted)
                                stream.emit('error', new Error('stream.unshift() after end event'));
                            else
                                addChunk(stream, state, chunk, true);
                        } else if (state.ended) {
                            stream.emit('error', new Error('stream.push() after EOF'));
                        } else {
                            state.reading = false;
                            if (state.decoder && !encoding) {
                                chunk = state.decoder.write(chunk);
                                if (state.objectMode || chunk.length !== 0)
                                    addChunk(stream, state, chunk, false);
                                else
                                    maybeReadMore(stream, state);
                            } else {
                                addChunk(stream, state, chunk, false);
                            }
                        }
                    } else if (!addToFront) {
                        state.reading = false;
                    }
                }

                return needMoreData(state);
            }

            function addChunk(stream, state, chunk, addToFront) {
                if (state.flowing && state.length === 0 && !state.sync) {
                    stream.emit('data', chunk);
                    stream.read(0);
                } else {
                    // update the buffer info.
                    state.length += state.objectMode ? 1 : chunk.length;
                    if (addToFront)
                        state.buffer.unshift(chunk);
                    else
                        state.buffer.push(chunk);

                    if (state.needReadable)
                        emitReadable(stream);
                }
                maybeReadMore(stream, state);
            }

            function chunkInvalid(state, chunk) {
                var er;
                if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
                    er = new TypeError('Invalid non-string/buffer chunk');
                }
                return er;
            }

            // if it's past the high water mark, we can push in some more.
            // Also, if we have no data yet, we can stand some
            // more bytes.  This is to work around cases where hwm=0,
            // such as the repl.  Also, if the push() triggered a
            // readable event, and the user called read(largeNumber) such that
            // needReadable was set, then we ought to push more, so that another
            // 'readable' event will be triggered.
            function needMoreData(state) {
                return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
            }

            Readable.prototype.isPaused = function() {
                return this._readableState.flowing === false;
            }
            ;

            // backwards compatibility.
            Readable.prototype.setEncoding = function(enc) {
                if (!StringDecoder)
                    StringDecoder = require('string_decoder/').StringDecoder;
                this._readableState.decoder = new StringDecoder(enc);
                this._readableState.encoding = enc;
                return this;
            }
            ;

            // Don't raise the hwm > 8MB
            var MAX_HWM = 0x800000;
            function computeNewHighWaterMark(n) {
                if (n >= MAX_HWM) {
                    n = MAX_HWM;
                } else {
                    // Get the next highest power of 2 to prevent increasing hwm excessively in
                    // tiny amounts
                    n--;
                    n |= n >>> 1;
                    n |= n >>> 2;
                    n |= n >>> 4;
                    n |= n >>> 8;
                    n |= n >>> 16;
                    n++;
                }
                return n;
            }

            // This function is designed to be inlinable, so please take care when making
            // changes to the function body.
            function howMuchToRead(n, state) {
                if (n <= 0 || state.length === 0 && state.ended)
                    return 0;
                if (state.objectMode)
                    return 1;
                if (n !== n) {
                    // Only flow one buffer at a time
                    if (state.flowing && state.length)
                        return state.buffer.head.data.length;
                    else
                        return state.length;
                }
                // If we're asking for more than the current hwm, then raise the hwm.
                if (n > state.highWaterMark)
                    state.highWaterMark = computeNewHighWaterMark(n);
                if (n <= state.length)
                    return n;
                // Don't have enough
                if (!state.ended) {
                    state.needReadable = true;
                    return 0;
                }
                return state.length;
            }

            // you can override either this method, or the async _read(n) below.
            Readable.prototype.read = function(n) {
                debug('read', n);
                n = parseInt(n, 10);
                var state = this._readableState;
                var nOrig = n;

                if (n !== 0)
                    state.emittedReadable = false;

                // if we're doing read(0) to trigger a readable event, but we
                // already have a bunch of data in the buffer, then just trigger
                // the 'readable' event and move on.
                if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
                    debug('read: emitReadable', state.length, state.ended);
                    if (state.length === 0 && state.ended)
                        endReadable(this);
                    else
                        emitReadable(this);
                    return null;
                }

                n = howMuchToRead(n, state);

                // if we've ended, and we're now clear, then finish it up.
                if (n === 0 && state.ended) {
                    if (state.length === 0)
                        endReadable(this);
                    return null;
                }

                // All the actual chunk generation logic needs to be
                // *below* the call to _read.  The reason is that in certain
                // synthetic stream cases, such as passthrough streams, _read
                // may be a completely synchronous operation which may change
                // the state of the read buffer, providing enough data when
                // before there was *not* enough.
                //
                // So, the steps are:
                // 1. Figure out what the state of things will be after we do
                // a read from the buffer.
                //
                // 2. If that resulting state will trigger a _read, then call _read.
                // Note that this may be asynchronous, or synchronous.  Yes, it is
                // deeply ugly to write APIs this way, but that still doesn't mean
                // that the Readable class should behave improperly, as streams are
                // designed to be sync/async agnostic.
                // Take note if the _read call is sync or async (ie, if the read call
                // has returned yet), so that we know whether or not it's safe to emit
                // 'readable' etc.
                //
                // 3. Actually pull the requested chunks out of the buffer and return.

                // if we need a readable event, then we need to do some reading.
                var doRead = state.needReadable;
                debug('need readable', doRead);

                // if we currently have less than the highWaterMark, then also read some
                if (state.length === 0 || state.length - n < state.highWaterMark) {
                    doRead = true;
                    debug('length less than watermark', doRead);
                }

                // however, if we've ended, then there's no point, and if we're already
                // reading, then it's unnecessary.
                if (state.ended || state.reading) {
                    doRead = false;
                    debug('reading or ended', doRead);
                } else if (doRead) {
                    debug('do read');
                    state.reading = true;
                    state.sync = true;
                    // if the length is currently zero, then we *need* a readable event.
                    if (state.length === 0)
                        state.needReadable = true;
                    // call internal read method
                    this._read(state.highWaterMark);
                    state.sync = false;
                    // If _read pushed data synchronously, then `reading` will be false,
                    // and we need to re-evaluate how much data we can return to the user.
                    if (!state.reading)
                        n = howMuchToRead(nOrig, state);
                }

                var ret;
                if (n > 0)
                    ret = fromList(n, state);
                else
                    ret = null;

                if (ret === null) {
                    state.needReadable = true;
                    n = 0;
                } else {
                    state.length -= n;
                }

                if (state.length === 0) {
                    // If we have nothing in the buffer, then we want to know
                    // as soon as we *do* get something into the buffer.
                    if (!state.ended)
                        state.needReadable = true;

                    // If we tried to read() past the EOF, then emit end on the next tick.
                    if (nOrig !== n && state.ended)
                        endReadable(this);
                }

                if (ret !== null)
                    this.emit('data', ret);

                return ret;
            }
            ;

            function onEofChunk(stream, state) {
                if (state.ended)
                    return;
                if (state.decoder) {
                    var chunk = state.decoder.end();
                    if (chunk && chunk.length) {
                        state.buffer.push(chunk);
                        state.length += state.objectMode ? 1 : chunk.length;
                    }
                }
                state.ended = true;

                // emit 'readable' now to make sure it gets picked up.
                emitReadable(stream);
            }

            // Don't emit readable right away in sync mode, because this can trigger
            // another read() call => stack overflow.  This way, it might trigger
            // a nextTick recursion warning, but that's not so bad.
            function emitReadable(stream) {
                var state = stream._readableState;
                state.needReadable = false;
                if (!state.emittedReadable) {
                    debug('emitReadable', state.flowing);
                    state.emittedReadable = true;
                    if (state.sync)
                        pna.nextTick(emitReadable_, stream);
                    else
                        emitReadable_(stream);
                }
            }

            function emitReadable_(stream) {
                debug('emit readable');
                stream.emit('readable');
                flow(stream);
            }

            // at this point, the user has presumably seen the 'readable' event,
            // and called read() to consume some data.  that may have triggered
            // in turn another _read(n) call, in which case reading = true if
            // it's in progress.
            // However, if we're not ended, or reading, and the length < hwm,
            // then go ahead and try to read some more preemptively.
            function maybeReadMore(stream, state) {
                if (!state.readingMore) {
                    state.readingMore = true;
                    pna.nextTick(maybeReadMore_, stream, state);
                }
            }

            function maybeReadMore_(stream, state) {
                var len = state.length;
                while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
                    debug('maybeReadMore read 0');
                    stream.read(0);
                    if (len === state.length)
                        // didn't get any data, stop spinning.
                        break;
                    else
                        len = state.length;
                }
                state.readingMore = false;
            }

            // abstract method.  to be overridden in specific implementation classes.
            // call cb(er, data) where data is <= n in length.
            // for virtual (non-string, non-buffer) streams, "length" is somewhat
            // arbitrary, and perhaps not very meaningful.
            Readable.prototype._read = function(n) {
                this.emit('error', new Error('_read() is not implemented'));
            }
            ;

            Readable.prototype.pipe = function(dest, pipeOpts) {
                var src = this;
                var state = this._readableState;

                switch (state.pipesCount) {
                case 0:
                    state.pipes = dest;
                    break;
                case 1:
                    state.pipes = [state.pipes, dest];
                    break;
                default:
                    state.pipes.push(dest);
                    break;
                }
                state.pipesCount += 1;
                debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

                var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

                var endFn = doEnd ? onend : unpipe;
                if (state.endEmitted)
                    pna.nextTick(endFn);
                else
                    src.once('end', endFn);

                dest.on('unpipe', onunpipe);
                function onunpipe(readable, unpipeInfo) {
                    debug('onunpipe');
                    if (readable === src) {
                        if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
                            unpipeInfo.hasUnpiped = true;
                            cleanup();
                        }
                    }
                }

                function onend() {
                    debug('onend');
                    dest.end();
                }

                // when the dest drains, it reduces the awaitDrain counter
                // on the source.  This would be more elegant with a .once()
                // handler in flow(), but adding and removing repeatedly is
                // too slow.
                var ondrain = pipeOnDrain(src);
                dest.on('drain', ondrain);

                var cleanedUp = false;
                function cleanup() {
                    debug('cleanup');
                    // cleanup event handlers once the pipe is broken
                    dest.removeListener('close', onclose);
                    dest.removeListener('finish', onfinish);
                    dest.removeListener('drain', ondrain);
                    dest.removeListener('error', onerror);
                    dest.removeListener('unpipe', onunpipe);
                    src.removeListener('end', onend);
                    src.removeListener('end', unpipe);
                    src.removeListener('data', ondata);

                    cleanedUp = true;

                    // if the reader is waiting for a drain event from this
                    // specific writer, then it would cause it to never start
                    // flowing again.
                    // So, if this is awaiting a drain, then we just call it now.
                    // If we don't know, then assume that we are waiting for one.
                    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain))
                        ondrain();
                }

                // If the user pushes more data while we're writing to dest then we'll end up
                // in ondata again. However, we only want to increase awaitDrain once because
                // dest will only emit one 'drain' event for the multiple writes.
                // => Introduce a guard on increasing awaitDrain.
                var increasedAwaitDrain = false;
                src.on('data', ondata);
                function ondata(chunk) {
                    debug('ondata');
                    increasedAwaitDrain = false;
                    var ret = dest.write(chunk);
                    if (false === ret && !increasedAwaitDrain) {
                        // If the user unpiped during `dest.write()`, it is possible
                        // to get stuck in a permanently paused state if that write
                        // also returned false.
                        // => Check whether `dest` is still a piping destination.
                        if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
                            debug('false write response, pause', src._readableState.awaitDrain);
                            src._readableState.awaitDrain++;
                            increasedAwaitDrain = true;
                        }
                        src.pause();
                    }
                }

                // if the dest has an error, then stop piping into it.
                // however, don't suppress the throwing behavior for this.
                function onerror(er) {
                    debug('onerror', er);
                    unpipe();
                    dest.removeListener('error', onerror);
                    if (EElistenerCount(dest, 'error') === 0)
                        dest.emit('error', er);
                }

                // Make sure our error handler is attached before userland ones.
                prependListener(dest, 'error', onerror);

                // Both close and finish should trigger unpipe, but only once.
                function onclose() {
                    dest.removeListener('finish', onfinish);
                    unpipe();
                }
                dest.once('close', onclose);
                function onfinish() {
                    debug('onfinish');
                    dest.removeListener('close', onclose);
                    unpipe();
                }
                dest.once('finish', onfinish);

                function unpipe() {
                    debug('unpipe');
                    src.unpipe(dest);
                }

                // tell the dest that it's being piped to
                dest.emit('pipe', src);

                // start the flow if it hasn't been started already.
                if (!state.flowing) {
                    debug('pipe resume');
                    src.resume();
                }

                return dest;
            }
            ;

            function pipeOnDrain(src) {
                return function() {
                    var state = src._readableState;
                    debug('pipeOnDrain', state.awaitDrain);
                    if (state.awaitDrain)
                        state.awaitDrain--;
                    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
                        state.flowing = true;
                        flow(src);
                    }
                }
                ;
            }

            Readable.prototype.unpipe = function(dest) {
                var state = this._readableState;
                var unpipeInfo = {
                    hasUnpiped: false
                };

                // if we're not piping anywhere, then do nothing.
                if (state.pipesCount === 0)
                    return this;

                // just one destination.  most common case.
                if (state.pipesCount === 1) {
                    // passed in one, but it's not the right one.
                    if (dest && dest !== state.pipes)
                        return this;

                    if (!dest)
                        dest = state.pipes;

                    // got a match.
                    state.pipes = null;
                    state.pipesCount = 0;
                    state.flowing = false;
                    if (dest)
                        dest.emit('unpipe', this, unpipeInfo);
                    return this;
                }

                // slow case. multiple pipe destinations.

                if (!dest) {
                    // remove all.
                    var dests = state.pipes;
                    var len = state.pipesCount;
                    state.pipes = null;
                    state.pipesCount = 0;
                    state.flowing = false;

                    for (var i = 0; i < len; i++) {
                        dests[i].emit('unpipe', this, unpipeInfo);
                    }
                    return this;
                }

                // try to find the right one.
                var index = indexOf(state.pipes, dest);
                if (index === -1)
                    return this;

                state.pipes.splice(index, 1);
                state.pipesCount -= 1;
                if (state.pipesCount === 1)
                    state.pipes = state.pipes[0];

                dest.emit('unpipe', this, unpipeInfo);

                return this;
            }
            ;

            // set up data events if they are asked for
            // Ensure readable listeners eventually get something
            Readable.prototype.on = function(ev, fn) {
                var res = Stream.prototype.on.call(this, ev, fn);

                if (ev === 'data') {
                    // Start flowing on next tick if stream isn't explicitly paused
                    if (this._readableState.flowing !== false)
                        this.resume();
                } else if (ev === 'readable') {
                    var state = this._readableState;
                    if (!state.endEmitted && !state.readableListening) {
                        state.readableListening = state.needReadable = true;
                        state.emittedReadable = false;
                        if (!state.reading) {
                            pna.nextTick(nReadingNextTick, this);
                        } else if (state.length) {
                            emitReadable(this);
                        }
                    }
                }

                return res;
            }
            ;
            Readable.prototype.addListener = Readable.prototype.on;

            function nReadingNextTick(self) {
                debug('readable nexttick read 0');
                self.read(0);
            }

            // pause() and resume() are remnants of the legacy readable stream API
            // If the user uses them, then switch into old mode.
            Readable.prototype.resume = function() {
                var state = this._readableState;
                if (!state.flowing) {
                    debug('resume');
                    state.flowing = true;
                    resume(this, state);
                }
                return this;
            }
            ;

            function resume(stream, state) {
                if (!state.resumeScheduled) {
                    state.resumeScheduled = true;
                    pna.nextTick(resume_, stream, state);
                }
            }

            function resume_(stream, state) {
                if (!state.reading) {
                    debug('resume read 0');
                    stream.read(0);
                }

                state.resumeScheduled = false;
                state.awaitDrain = 0;
                stream.emit('resume');
                flow(stream);
                if (state.flowing && !state.reading)
                    stream.read(0);
            }

            Readable.prototype.pause = function() {
                debug('call pause flowing=%j', this._readableState.flowing);
                if (false !== this._readableState.flowing) {
                    debug('pause');
                    this._readableState.flowing = false;
                    this.emit('pause');
                }
                return this;
            }
            ;

            function flow(stream) {
                var state = stream._readableState;
                debug('flow', state.flowing);
                while (state.flowing && stream.read() !== null) {}
            }

            // wrap an old-style stream as the async data source.
            // This is *not* part of the readable stream interface.
            // It is an ugly unfortunate mess of history.
            Readable.prototype.wrap = function(stream) {
                var _this = this;

                var state = this._readableState;
                var paused = false;

                stream.on('end', function() {
                    debug('wrapped end');
                    if (state.decoder && !state.ended) {
                        var chunk = state.decoder.end();
                        if (chunk && chunk.length)
                            _this.push(chunk);
                    }

                    _this.push(null);
                });

                stream.on('data', function(chunk) {
                    debug('wrapped data');
                    if (state.decoder)
                        chunk = state.decoder.write(chunk);

                    // don't skip over falsy values in objectMode
                    if (state.objectMode && (chunk === null || chunk === undefined))
                        return;
                    else if (!state.objectMode && (!chunk || !chunk.length))
                        return;

                    var ret = _this.push(chunk);
                    if (!ret) {
                        paused = true;
                        stream.pause();
                    }
                });

                // proxy all the other methods.
                // important when wrapping filters and duplexes.
                for (var i in stream) {
                    if (this[i] === undefined && typeof stream[i] === 'function') {
                        this[i] = function(method) {
                            return function() {
                                return stream[method].apply(stream, arguments);
                            }
                            ;
                        }(i);
                    }
                }

                // proxy certain important events.
                for (var n = 0; n < kProxyEvents.length; n++) {
                    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
                }

                // when we try to consume some more bytes, simply unpause the
                // underlying stream.
                this._read = function(n) {
                    debug('wrapped _read', n);
                    if (paused) {
                        paused = false;
                        stream.resume();
                    }
                }
                ;

                return this;
            }
            ;

            Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: false,
                get: function() {
                    return this._readableState.highWaterMark;
                }
            });

            // exposed for testing purposes only.
            Readable._fromList = fromList;

            // Pluck off n bytes from an array of buffers.
            // Length is the combined lengths of all the buffers in the list.
            // This function is designed to be inlinable, so please take care when making
            // changes to the function body.
            function fromList(n, state) {
                // nothing buffered
                if (state.length === 0)
                    return null;

                var ret;
                if (state.objectMode)
                    ret = state.buffer.shift();
                else if (!n || n >= state.length) {
                    // read it all, truncate the list
                    if (state.decoder)
                        ret = state.buffer.join('');
                    else if (state.buffer.length === 1)
                        ret = state.buffer.head.data;
                    else
                        ret = state.buffer.concat(state.length);
                    state.buffer.clear();
                } else {
                    // read part of list
                    ret = fromListPartial(n, state.buffer, state.decoder);
                }

                return ret;
            }

            // Extracts only enough buffered data to satisfy the amount requested.
            // This function is designed to be inlinable, so please take care when making
            // changes to the function body.
            function fromListPartial(n, list, hasStrings) {
                var ret;
                if (n < list.head.data.length) {
                    // slice is the same for buffers and strings
                    ret = list.head.data.slice(0, n);
                    list.head.data = list.head.data.slice(n);
                } else if (n === list.head.data.length) {
                    // first chunk is a perfect match
                    ret = list.shift();
                } else {
                    // result spans more than one buffer
                    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
                }
                return ret;
            }

            // Copies a specified amount of characters from the list of buffered data
            // chunks.
            // This function is designed to be inlinable, so please take care when making
            // changes to the function body.
            function copyFromBufferString(n, list) {
                var p = list.head;
                var c = 1;
                var ret = p.data;
                n -= ret.length;
                while (p = p.next) {
                    var str = p.data;
                    var nb = n > str.length ? str.length : n;
                    if (nb === str.length)
                        ret += str;
                    else
                        ret += str.slice(0, n);
                    n -= nb;
                    if (n === 0) {
                        if (nb === str.length) {
                            ++c;
                            if (p.next)
                                list.head = p.next;
                            else
                                list.head = list.tail = null;
                        } else {
                            list.head = p;
                            p.data = str.slice(nb);
                        }
                        break;
                    }
                    ++c;
                }
                list.length -= c;
                return ret;
            }

            // Copies a specified amount of bytes from the list of buffered data chunks.
            // This function is designed to be inlinable, so please take care when making
            // changes to the function body.
            function copyFromBuffer(n, list) {
                var ret = Buffer.allocUnsafe(n);
                var p = list.head;
                var c = 1;
                p.data.copy(ret);
                n -= p.data.length;
                while (p = p.next) {
                    var buf = p.data;
                    var nb = n > buf.length ? buf.length : n;
                    buf.copy(ret, ret.length - n, 0, nb);
                    n -= nb;
                    if (n === 0) {
                        if (nb === buf.length) {
                            ++c;
                            if (p.next)
                                list.head = p.next;
                            else
                                list.head = list.tail = null;
                        } else {
                            list.head = p;
                            p.data = buf.slice(nb);
                        }
                        break;
                    }
                    ++c;
                }
                list.length -= c;
                return ret;
            }

            function endReadable(stream) {
                var state = stream._readableState;

                // If we get here before consuming all the bytes, then that is a
                // bug in node.  Should never happen.
                if (state.length > 0)
                    throw new Error('"endReadable()" called on non-empty stream');

                if (!state.endEmitted) {
                    state.ended = true;
                    pna.nextTick(endReadableNT, state, stream);
                }
            }

            function endReadableNT(state, stream) {
                // Check that we didn't get one last unshift.
                if (!state.endEmitted && state.length === 0) {
                    state.endEmitted = true;
                    stream.readable = false;
                    stream.emit('end');
                }
            }

            function indexOf(xs, x) {
                for (var i = 0, l = xs.length; i < l; i++) {
                    if (xs[i] === x)
                        return i;
                }
                return -1;
            }
        }
        ).call(this, require('_process'), typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
    }
    , {
        "./_stream_duplex": 33,
        "./internal/streams/BufferList": 38,
        "./internal/streams/destroy": 39,
        "./internal/streams/stream": 40,
        "_process": 31,
        "core-util-is": 24,
        "events": 25,
        "inherits": 27,
        "isarray": 29,
        "process-nextick-args": 30,
        "safe-buffer": 46,
        "string_decoder/": 41,
        "util": 22
    }],
    36: [function(require, module, exports) {
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        // a transform stream is a readable/writable stream where you do
        // something with the data.  Sometimes it's called a "filter",
        // but that's not a great name for it, since that implies a thing where
        // some bits pass through, and others are simply ignored.  (That would
        // be a valid example of a transform, of course.)
        //
        // While the output is causally related to the input, it's not a
        // necessarily symmetric or synchronous transformation.  For example,
        // a zlib stream might take multiple plain-text writes(), and then
        // emit a single compressed chunk some time in the future.
        //
        // Here's how this works:
        //
        // The Transform stream has all the aspects of the readable and writable
        // stream classes.  When you write(chunk), that calls _write(chunk,cb)
        // internally, and returns false if there's a lot of pending writes
        // buffered up.  When you call read(), that calls _read(n) until
        // there's enough pending readable data buffered up.
        //
        // In a transform stream, the written data is placed in a buffer.  When
        // _read(n) is called, it transforms the queued up data, calling the
        // buffered _write cb's as it consumes chunks.  If consuming a single
        // written chunk would result in multiple output chunks, then the first
        // outputted bit calls the readcb, and subsequent chunks just go into
        // the read buffer, and will cause it to emit 'readable' if necessary.
        //
        // This way, back-pressure is actually determined by the reading side,
        // since _read has to be called to start processing a new chunk.  However,
        // a pathological inflate type of transform can cause excessive buffering
        // here.  For example, imagine a stream where every byte of input is
        // interpreted as an integer from 0-255, and then results in that many
        // bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
        // 1kb of data being output.  In this case, you could write a very small
        // amount of input, and end up with a very large amount of output.  In
        // such a pathological inflating mechanism, there'd be no way to tell
        // the system to stop doing the transform.  A single 4MB write could
        // cause the system to run out of memory.
        //
        // However, even in such a pathological case, only a single written chunk
        // would be consumed, and then the rest would wait (un-transformed) until
        // the results of the previous transformed chunk were consumed.

        'use strict';

        module.exports = Transform;

        var Duplex = require('./_stream_duplex');

        /*<replacement>*/
        var util = require('core-util-is');
        util.inherits = require('inherits');
        /*</replacement>*/

        util.inherits(Transform, Duplex);

        function afterTransform(er, data) {
            var ts = this._transformState;
            ts.transforming = false;

            var cb = ts.writecb;

            if (!cb) {
                return this.emit('error', new Error('write callback called multiple times'));
            }

            ts.writechunk = null;
            ts.writecb = null;

            if (data != null)
                // single equals check for both `null` and `undefined`
                this.push(data);

            cb(er);

            var rs = this._readableState;
            rs.reading = false;
            if (rs.needReadable || rs.length < rs.highWaterMark) {
                this._read(rs.highWaterMark);
            }
        }

        function Transform(options) {
            if (!(this instanceof Transform))
                return new Transform(options);

            Duplex.call(this, options);

            this._transformState = {
                afterTransform: afterTransform.bind(this),
                needTransform: false,
                transforming: false,
                writecb: null,
                writechunk: null,
                writeencoding: null
            };

            // start out asking for a readable event once data is transformed.
            this._readableState.needReadable = true;

            // we have implemented the _read method, and done the other things
            // that Readable wants before the first _read call, so unset the
            // sync guard flag.
            this._readableState.sync = false;

            if (options) {
                if (typeof options.transform === 'function')
                    this._transform = options.transform;

                if (typeof options.flush === 'function')
                    this._flush = options.flush;
            }

            // When the writable side finishes, then flush out anything remaining.
            this.on('prefinish', prefinish);
        }

        function prefinish() {
            var _this = this;

            if (typeof this._flush === 'function') {
                this._flush(function(er, data) {
                    done(_this, er, data);
                });
            } else {
                done(this, null, null);
            }
        }

        Transform.prototype.push = function(chunk, encoding) {
            this._transformState.needTransform = false;
            return Duplex.prototype.push.call(this, chunk, encoding);
        }
        ;

        // This is the part where you do stuff!
        // override this function in implementation classes.
        // 'chunk' is an input chunk.
        //
        // Call `push(newChunk)` to pass along transformed output
        // to the readable side.  You may call 'push' zero or more times.
        //
        // Call `cb(err)` when you are done with this chunk.  If you pass
        // an error, then that'll put the hurt on the whole operation.  If you
        // never call cb(), then you'll never get another chunk.
        Transform.prototype._transform = function(chunk, encoding, cb) {
            throw new Error('_transform() is not implemented');
        }
        ;

        Transform.prototype._write = function(chunk, encoding, cb) {
            var ts = this._transformState;
            ts.writecb = cb;
            ts.writechunk = chunk;
            ts.writeencoding = encoding;
            if (!ts.transforming) {
                var rs = this._readableState;
                if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark)
                    this._read(rs.highWaterMark);
            }
        }
        ;

        // Doesn't matter what the args are here.
        // _transform does all the work.
        // That we got here means that the readable side wants more data.
        Transform.prototype._read = function(n) {
            var ts = this._transformState;

            if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
                ts.transforming = true;
                this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
            } else {
                // mark that we need a transform, so that any data that comes in
                // will get processed, now that we've asked for it.
                ts.needTransform = true;
            }
        }
        ;

        Transform.prototype._destroy = function(err, cb) {
            var _this2 = this;

            Duplex.prototype._destroy.call(this, err, function(err2) {
                cb(err2);
                _this2.emit('close');
            });
        }
        ;

        function done(stream, er, data) {
            if (er)
                return stream.emit('error', er);

            if (data != null)
                // single equals check for both `null` and `undefined`
                stream.push(data);

            // if there's nothing in the write buffer, then that means
            // that nothing more will ever be provided
            if (stream._writableState.length)
                throw new Error('Calling transform done when ws.length != 0');

            if (stream._transformState.transforming)
                throw new Error('Calling transform done when still transforming');

            return stream.push(null);
        }
    }
    , {
        "./_stream_duplex": 33,
        "core-util-is": 24,
        "inherits": 27
    }],
    37: [function(require, module, exports) {
        (function(process, global, setImmediate) {
            // Copyright Joyent, Inc. and other Node contributors.
            //
            // Permission is hereby granted, free of charge, to any person obtaining a
            // copy of this software and associated documentation files (the
            // "Software"), to deal in the Software without restriction, including
            // without limitation the rights to use, copy, modify, merge, publish,
            // distribute, sublicense, and/or sell copies of the Software, and to permit
            // persons to whom the Software is furnished to do so, subject to the
            // following conditions:
            //
            // The above copyright notice and this permission notice shall be included
            // in all copies or substantial portions of the Software.
            //
            // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
            // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
            // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
            // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
            // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
            // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
            // USE OR OTHER DEALINGS IN THE SOFTWARE.

            // A bit simpler than readable streams.
            // Implement an async ._write(chunk, encoding, cb), and it'll handle all
            // the drain event emission and buffering.

            'use strict';

            /*<replacement>*/

            var pna = require('process-nextick-args');
            /*</replacement>*/

            module.exports = Writable;

            /* <replacement> */
            function WriteReq(chunk, encoding, cb) {
                this.chunk = chunk;
                this.encoding = encoding;
                this.callback = cb;
                this.next = null;
            }

            // It seems a linked list but it is not
            // there will be only 2 of these for each stream
            function CorkedRequest(state) {
                var _this = this;

                this.next = null;
                this.entry = null;
                this.finish = function() {
                    onCorkedFinish(_this, state);
                }
                ;
            }
            /* </replacement> */

            /*<replacement>*/
            var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;
            /*</replacement>*/

            /*<replacement>*/
            var Duplex;
            /*</replacement>*/

            Writable.WritableState = WritableState;

            /*<replacement>*/
            var util = require('core-util-is');
            util.inherits = require('inherits');
            /*</replacement>*/

            /*<replacement>*/
            var internalUtil = {
                deprecate: require('util-deprecate')
            };
            /*</replacement>*/

            /*<replacement>*/
            var Stream = require('./internal/streams/stream');
            /*</replacement>*/

            /*<replacement>*/

            var Buffer = require('safe-buffer').Buffer;
            var OurUint8Array = global.Uint8Array || function() {}
            ;
            function _uint8ArrayToBuffer(chunk) {
                return Buffer.from(chunk);
            }
            function _isUint8Array(obj) {
                return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
            }

            /*</replacement>*/

            var destroyImpl = require('./internal/streams/destroy');

            util.inherits(Writable, Stream);

            function nop() {}

            function WritableState(options, stream) {
                Duplex = Duplex || require('./_stream_duplex');

                options = options || {};

                // Duplex streams are both readable and writable, but share
                // the same options object.
                // However, some cases require setting options to different
                // values for the readable and the writable sides of the duplex stream.
                // These options can be provided separately as readableXXX and writableXXX.
                var isDuplex = stream instanceof Duplex;

                // object stream flag to indicate whether or not this stream
                // contains buffers or objects.
                this.objectMode = !!options.objectMode;

                if (isDuplex)
                    this.objectMode = this.objectMode || !!options.writableObjectMode;

                // the point at which write() starts returning false
                // Note: 0 is a valid value, means that we always return false if
                // the entire buffer is not flushed immediately on write()
                var hwm = options.highWaterMark;
                var writableHwm = options.writableHighWaterMark;
                var defaultHwm = this.objectMode ? 16 : 16 * 1024;

                if (hwm || hwm === 0)
                    this.highWaterMark = hwm;
                else if (isDuplex && (writableHwm || writableHwm === 0))
                    this.highWaterMark = writableHwm;
                else
                    this.highWaterMark = defaultHwm;

                // cast to ints.
                this.highWaterMark = Math.floor(this.highWaterMark);

                // if _final has been called
                this.finalCalled = false;

                // drain event flag.
                this.needDrain = false;
                // at the start of calling end()
                this.ending = false;
                // when end() has been called, and returned
                this.ended = false;
                // when 'finish' is emitted
                this.finished = false;

                // has it been destroyed
                this.destroyed = false;

                // should we decode strings into buffers before passing to _write?
                // this is here so that some node-core streams can optimize string
                // handling at a lower level.
                var noDecode = options.decodeStrings === false;
                this.decodeStrings = !noDecode;

                // Crypto is kind of old and crusty.  Historically, its default string
                // encoding is 'binary' so we have to make this configurable.
                // Everything else in the universe uses 'utf8', though.
                this.defaultEncoding = options.defaultEncoding || 'utf8';

                // not an actual buffer we keep track of, but a measurement
                // of how much we're waiting to get pushed to some underlying
                // socket or file.
                this.length = 0;

                // a flag to see when we're in the middle of a write.
                this.writing = false;

                // when true all writes will be buffered until .uncork() call
                this.corked = 0;

                // a flag to be able to tell if the onwrite cb is called immediately,
                // or on a later tick.  We set this to true at first, because any
                // actions that shouldn't happen until "later" should generally also
                // not happen before the first write call.
                this.sync = true;

                // a flag to know if we're processing previously buffered items, which
                // may call the _write() callback in the same tick, so that we don't
                // end up in an overlapped onwrite situation.
                this.bufferProcessing = false;

                // the callback that's passed to _write(chunk,cb)
                this.onwrite = function(er) {
                    onwrite(stream, er);
                }
                ;

                // the callback that the user supplies to write(chunk,encoding,cb)
                this.writecb = null;

                // the amount that is being written when _write is called.
                this.writelen = 0;

                this.bufferedRequest = null;
                this.lastBufferedRequest = null;

                // number of pending user-supplied write callbacks
                // this must be 0 before 'finish' can be emitted
                this.pendingcb = 0;

                // emit prefinish if the only thing we're waiting for is _write cbs
                // This is relevant for synchronous Transform streams
                this.prefinished = false;

                // True if the error was already emitted and should not be thrown again
                this.errorEmitted = false;

                // count buffered requests
                this.bufferedRequestCount = 0;

                // allocate the first CorkedRequest, there is always
                // one allocated and free to use, and we maintain at most two
                this.corkedRequestsFree = new CorkedRequest(this);
            }

            WritableState.prototype.getBuffer = function getBuffer() {
                var current = this.bufferedRequest;
                var out = [];
                while (current) {
                    out.push(current);
                    current = current.next;
                }
                return out;
            }
            ;

            (function() {
                try {
                    Object.defineProperty(WritableState.prototype, 'buffer', {
                        get: internalUtil.deprecate(function() {
                            return this.getBuffer();
                        }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
                    });
                } catch (_) {}
            }
            )();

            // Test _writableState for inheritance to account for Duplex streams,
            // whose prototype chain only points to Readable.
            var realHasInstance;
            if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
                realHasInstance = Function.prototype[Symbol.hasInstance];
                Object.defineProperty(Writable, Symbol.hasInstance, {
                    value: function(object) {
                        if (realHasInstance.call(this, object))
                            return true;
                        if (this !== Writable)
                            return false;

                        return object && object._writableState instanceof WritableState;
                    }
                });
            } else {
                realHasInstance = function(object) {
                    return object instanceof this;
                }
                ;
            }

            function Writable(options) {
                Duplex = Duplex || require('./_stream_duplex');

                // Writable ctor is applied to Duplexes, too.
                // `realHasInstance` is necessary because using plain `instanceof`
                // would return false, as no `_writableState` property is attached.

                // Trying to use the custom `instanceof` for Writable here will also break the
                // Node.js LazyTransform implementation, which has a non-trivial getter for
                // `_writableState` that would lead to infinite recursion.
                if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
                    return new Writable(options);
                }

                this._writableState = new WritableState(options,this);

                // legacy.
                this.writable = true;

                if (options) {
                    if (typeof options.write === 'function')
                        this._write = options.write;

                    if (typeof options.writev === 'function')
                        this._writev = options.writev;

                    if (typeof options.destroy === 'function')
                        this._destroy = options.destroy;

                    if (typeof options.final === 'function')
                        this._final = options.final;
                }

                Stream.call(this);
            }

            // Otherwise people can pipe Writable streams, which is just wrong.
            Writable.prototype.pipe = function() {
                this.emit('error', new Error('Cannot pipe, not readable'));
            }
            ;

            function writeAfterEnd(stream, cb) {
                var er = new Error('write after end');
                // TODO: defer error events consistently everywhere, not just the cb
                stream.emit('error', er);
                pna.nextTick(cb, er);
            }

            // Checks that a user-supplied chunk is valid, especially for the particular
            // mode the stream is in. Currently this means that `null` is never accepted
            // and undefined/non-string values are only allowed in object mode.
            function validChunk(stream, state, chunk, cb) {
                var valid = true;
                var er = false;

                if (chunk === null) {
                    er = new TypeError('May not write null values to stream');
                } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
                    er = new TypeError('Invalid non-string/buffer chunk');
                }
                if (er) {
                    stream.emit('error', er);
                    pna.nextTick(cb, er);
                    valid = false;
                }
                return valid;
            }

            Writable.prototype.write = function(chunk, encoding, cb) {
                var state = this._writableState;
                var ret = false;
                var isBuf = !state.objectMode && _isUint8Array(chunk);

                if (isBuf && !Buffer.isBuffer(chunk)) {
                    chunk = _uint8ArrayToBuffer(chunk);
                }

                if (typeof encoding === 'function') {
                    cb = encoding;
                    encoding = null;
                }

                if (isBuf)
                    encoding = 'buffer';
                else if (!encoding)
                    encoding = state.defaultEncoding;

                if (typeof cb !== 'function')
                    cb = nop;

                if (state.ended)
                    writeAfterEnd(this, cb);
                else if (isBuf || validChunk(this, state, chunk, cb)) {
                    state.pendingcb++;
                    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
                }

                return ret;
            }
            ;

            Writable.prototype.cork = function() {
                var state = this._writableState;

                state.corked++;
            }
            ;

            Writable.prototype.uncork = function() {
                var state = this._writableState;

                if (state.corked) {
                    state.corked--;

                    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest)
                        clearBuffer(this, state);
                }
            }
            ;

            Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
                // node::ParseEncoding() requires lower case.
                if (typeof encoding === 'string')
                    encoding = encoding.toLowerCase();
                if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1))
                    throw new TypeError('Unknown encoding: ' + encoding);
                this._writableState.defaultEncoding = encoding;
                return this;
            }
            ;

            function decodeChunk(state, chunk, encoding) {
                if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
                    chunk = Buffer.from(chunk, encoding);
                }
                return chunk;
            }

            Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: false,
                get: function() {
                    return this._writableState.highWaterMark;
                }
            });

            // if we're already writing something, then just put this
            // in the queue, and wait our turn.  Otherwise, call _write
            // If we return false, then we need a drain event, so set that flag.
            function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
                if (!isBuf) {
                    var newChunk = decodeChunk(state, chunk, encoding);
                    if (chunk !== newChunk) {
                        isBuf = true;
                        encoding = 'buffer';
                        chunk = newChunk;
                    }
                }
                var len = state.objectMode ? 1 : chunk.length;

                state.length += len;

                var ret = state.length < state.highWaterMark;
                // we must ensure that previous needDrain will not be reset to false.
                if (!ret)
                    state.needDrain = true;

                if (state.writing || state.corked) {
                    var last = state.lastBufferedRequest;
                    state.lastBufferedRequest = {
                        chunk: chunk,
                        encoding: encoding,
                        isBuf: isBuf,
                        callback: cb,
                        next: null
                    };
                    if (last) {
                        last.next = state.lastBufferedRequest;
                    } else {
                        state.bufferedRequest = state.lastBufferedRequest;
                    }
                    state.bufferedRequestCount += 1;
                } else {
                    doWrite(stream, state, false, len, chunk, encoding, cb);
                }

                return ret;
            }

            function doWrite(stream, state, writev, len, chunk, encoding, cb) {
                state.writelen = len;
                state.writecb = cb;
                state.writing = true;
                state.sync = true;
                if (writev)
                    stream._writev(chunk, state.onwrite);
                else
                    stream._write(chunk, encoding, state.onwrite);
                state.sync = false;
            }

            function onwriteError(stream, state, sync, er, cb) {
                --state.pendingcb;

                if (sync) {
                    // defer the callback if we are being called synchronously
                    // to avoid piling up things on the stack
                    pna.nextTick(cb, er);
                    // this can emit finish, and it will always happen
                    // after error
                    pna.nextTick(finishMaybe, stream, state);
                    stream._writableState.errorEmitted = true;
                    stream.emit('error', er);
                } else {
                    // the caller expect this to happen before if
                    // it is async
                    cb(er);
                    stream._writableState.errorEmitted = true;
                    stream.emit('error', er);
                    // this can emit finish, but finish must
                    // always follow error
                    finishMaybe(stream, state);
                }
            }

            function onwriteStateUpdate(state) {
                state.writing = false;
                state.writecb = null;
                state.length -= state.writelen;
                state.writelen = 0;
            }

            function onwrite(stream, er) {
                var state = stream._writableState;
                var sync = state.sync;
                var cb = state.writecb;

                onwriteStateUpdate(state);

                if (er)
                    onwriteError(stream, state, sync, er, cb);
                else {
                    // Check if we're actually ready to finish, but don't emit yet
                    var finished = needFinish(state);

                    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
                        clearBuffer(stream, state);
                    }

                    if (sync) {
                        /*<replacement>*/
                        asyncWrite(afterWrite, stream, state, finished, cb);
                        /*</replacement>*/
                    } else {
                        afterWrite(stream, state, finished, cb);
                    }
                }
            }

            function afterWrite(stream, state, finished, cb) {
                if (!finished)
                    onwriteDrain(stream, state);
                state.pendingcb--;
                cb();
                finishMaybe(stream, state);
            }

            // Must force callback to be called on nextTick, so that we don't
            // emit 'drain' before the write() consumer gets the 'false' return
            // value, and has a chance to attach a 'drain' listener.
            function onwriteDrain(stream, state) {
                if (state.length === 0 && state.needDrain) {
                    state.needDrain = false;
                    stream.emit('drain');
                }
            }

            // if there's something in the buffer waiting, then process it
            function clearBuffer(stream, state) {
                state.bufferProcessing = true;
                var entry = state.bufferedRequest;

                if (stream._writev && entry && entry.next) {
                    // Fast case, write everything using _writev()
                    var l = state.bufferedRequestCount;
                    var buffer = new Array(l);
                    var holder = state.corkedRequestsFree;
                    holder.entry = entry;

                    var count = 0;
                    var allBuffers = true;
                    while (entry) {
                        buffer[count] = entry;
                        if (!entry.isBuf)
                            allBuffers = false;
                        entry = entry.next;
                        count += 1;
                    }
                    buffer.allBuffers = allBuffers;

                    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

                    // doWrite is almost always async, defer these to save a bit of time
                    // as the hot path ends with doWrite
                    state.pendingcb++;
                    state.lastBufferedRequest = null;
                    if (holder.next) {
                        state.corkedRequestsFree = holder.next;
                        holder.next = null;
                    } else {
                        state.corkedRequestsFree = new CorkedRequest(state);
                    }
                    state.bufferedRequestCount = 0;
                } else {
                    // Slow case, write chunks one-by-one
                    while (entry) {
                        var chunk = entry.chunk;
                        var encoding = entry.encoding;
                        var cb = entry.callback;
                        var len = state.objectMode ? 1 : chunk.length;

                        doWrite(stream, state, false, len, chunk, encoding, cb);
                        entry = entry.next;
                        state.bufferedRequestCount--;
                        // if we didn't call the onwrite immediately, then
                        // it means that we need to wait until it does.
                        // also, that means that the chunk and cb are currently
                        // being processed, so move the buffer counter past them.
                        if (state.writing) {
                            break;
                        }
                    }

                    if (entry === null)
                        state.lastBufferedRequest = null;
                }

                state.bufferedRequest = entry;
                state.bufferProcessing = false;
            }

            Writable.prototype._write = function(chunk, encoding, cb) {
                cb(new Error('_write() is not implemented'));
            }
            ;

            Writable.prototype._writev = null;

            Writable.prototype.end = function(chunk, encoding, cb) {
                var state = this._writableState;

                if (typeof chunk === 'function') {
                    cb = chunk;
                    chunk = null;
                    encoding = null;
                } else if (typeof encoding === 'function') {
                    cb = encoding;
                    encoding = null;
                }

                if (chunk !== null && chunk !== undefined)
                    this.write(chunk, encoding);

                // .end() fully uncorks
                if (state.corked) {
                    state.corked = 1;
                    this.uncork();
                }

                // ignore unnecessary end() calls.
                if (!state.ending && !state.finished)
                    endWritable(this, state, cb);
            }
            ;

            function needFinish(state) {
                return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
            }
            function callFinal(stream, state) {
                stream._final(function(err) {
                    state.pendingcb--;
                    if (err) {
                        stream.emit('error', err);
                    }
                    state.prefinished = true;
                    stream.emit('prefinish');
                    finishMaybe(stream, state);
                });
            }
            function prefinish(stream, state) {
                if (!state.prefinished && !state.finalCalled) {
                    if (typeof stream._final === 'function') {
                        state.pendingcb++;
                        state.finalCalled = true;
                        pna.nextTick(callFinal, stream, state);
                    } else {
                        state.prefinished = true;
                        stream.emit('prefinish');
                    }
                }
            }

            function finishMaybe(stream, state) {
                var need = needFinish(state);
                if (need) {
                    prefinish(stream, state);
                    if (state.pendingcb === 0) {
                        state.finished = true;
                        stream.emit('finish');
                    }
                }
                return need;
            }

            function endWritable(stream, state, cb) {
                state.ending = true;
                finishMaybe(stream, state);
                if (cb) {
                    if (state.finished)
                        pna.nextTick(cb);
                    else
                        stream.once('finish', cb);
                }
                state.ended = true;
                stream.writable = false;
            }

            function onCorkedFinish(corkReq, state, err) {
                var entry = corkReq.entry;
                corkReq.entry = null;
                while (entry) {
                    var cb = entry.callback;
                    state.pendingcb--;
                    cb(err);
                    entry = entry.next;
                }
                if (state.corkedRequestsFree) {
                    state.corkedRequestsFree.next = corkReq;
                } else {
                    state.corkedRequestsFree = corkReq;
                }
            }

            Object.defineProperty(Writable.prototype, 'destroyed', {
                get: function() {
                    if (this._writableState === undefined) {
                        return false;
                    }
                    return this._writableState.destroyed;
                },
                set: function(value) {
                    // we ignore the value if the stream
                    // has not been initialized yet
                    if (!this._writableState) {
                        return;
                    }

                    // backward compatibility, the user is explicitly
                    // managing destroyed
                    this._writableState.destroyed = value;
                }
            });

            Writable.prototype.destroy = destroyImpl.destroy;
            Writable.prototype._undestroy = destroyImpl.undestroy;
            Writable.prototype._destroy = function(err, cb) {
                this.end();
                cb(err);
            }
            ;
        }
        ).call(this, require('_process'), typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, require("timers").setImmediate)
    }
    , {
        "./_stream_duplex": 33,
        "./internal/streams/destroy": 39,
        "./internal/streams/stream": 40,
        "_process": 31,
        "core-util-is": 24,
        "inherits": 27,
        "process-nextick-args": 30,
        "safe-buffer": 46,
        "timers": 48,
        "util-deprecate": 49
    }],
    38: [function(require, module, exports) {
        'use strict';

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
            }
        }

        var Buffer = require('safe-buffer').Buffer;
        var util = require('util');

        function copyBuffer(src, target, offset) {
            src.copy(target, offset);
        }

        module.exports = function() {
            function BufferList() {
                _classCallCheck(this, BufferList);

                this.head = null;
                this.tail = null;
                this.length = 0;
            }

            BufferList.prototype.push = function push(v) {
                var entry = {
                    data: v,
                    next: null
                };
                if (this.length > 0)
                    this.tail.next = entry;
                else
                    this.head = entry;
                this.tail = entry;
                ++this.length;
            }
            ;

            BufferList.prototype.unshift = function unshift(v) {
                var entry = {
                    data: v,
                    next: this.head
                };
                if (this.length === 0)
                    this.tail = entry;
                this.head = entry;
                ++this.length;
            }
            ;

            BufferList.prototype.shift = function shift() {
                if (this.length === 0)
                    return;
                var ret = this.head.data;
                if (this.length === 1)
                    this.head = this.tail = null;
                else
                    this.head = this.head.next;
                --this.length;
                return ret;
            }
            ;

            BufferList.prototype.clear = function clear() {
                this.head = this.tail = null;
                this.length = 0;
            }
            ;

            BufferList.prototype.join = function join(s) {
                if (this.length === 0)
                    return '';
                var p = this.head;
                var ret = '' + p.data;
                while (p = p.next) {
                    ret += s + p.data;
                }
                return ret;
            }
            ;

            BufferList.prototype.concat = function concat(n) {
                if (this.length === 0)
                    return Buffer.alloc(0);
                if (this.length === 1)
                    return this.head.data;
                var ret = Buffer.allocUnsafe(n >>> 0);
                var p = this.head;
                var i = 0;
                while (p) {
                    copyBuffer(p.data, ret, i);
                    i += p.data.length;
                    p = p.next;
                }
                return ret;
            }
            ;

            return BufferList;
        }();

        if (util && util.inspect && util.inspect.custom) {
            module.exports.prototype[util.inspect.custom] = function() {
                var obj = util.inspect({
                    length: this.length
                });
                return this.constructor.name + ' ' + obj;
            }
            ;
        }
    }
    , {
        "safe-buffer": 46,
        "util": 22
    }],
    39: [function(require, module, exports) {
        'use strict';

        /*<replacement>*/

        var pna = require('process-nextick-args');
        /*</replacement>*/

        // undocumented cb() API, needed for core, not for public API
        function destroy(err, cb) {
            var _this = this;

            var readableDestroyed = this._readableState && this._readableState.destroyed;
            var writableDestroyed = this._writableState && this._writableState.destroyed;

            if (readableDestroyed || writableDestroyed) {
                if (cb) {
                    cb(err);
                } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
                    pna.nextTick(emitErrorNT, this, err);
                }
                return this;
            }

            // we set destroyed to true before firing error callbacks in order
            // to make it re-entrance safe in case destroy() is called within callbacks

            if (this._readableState) {
                this._readableState.destroyed = true;
            }

            // if this is a duplex stream mark the writable part as destroyed as well
            if (this._writableState) {
                this._writableState.destroyed = true;
            }

            this._destroy(err || null, function(err) {
                if (!cb && err) {
                    pna.nextTick(emitErrorNT, _this, err);
                    if (_this._writableState) {
                        _this._writableState.errorEmitted = true;
                    }
                } else if (cb) {
                    cb(err);
                }
            });

            return this;
        }

        function undestroy() {
            if (this._readableState) {
                this._readableState.destroyed = false;
                this._readableState.reading = false;
                this._readableState.ended = false;
                this._readableState.endEmitted = false;
            }

            if (this._writableState) {
                this._writableState.destroyed = false;
                this._writableState.ended = false;
                this._writableState.ending = false;
                this._writableState.finished = false;
                this._writableState.errorEmitted = false;
            }
        }

        function emitErrorNT(self, err) {
            self.emit('error', err);
        }

        module.exports = {
            destroy: destroy,
            undestroy: undestroy
        };
    }
    , {
        "process-nextick-args": 30
    }],
    40: [function(require, module, exports) {
        module.exports = require('events').EventEmitter;

    }
    , {
        "events": 25
    }],
    41: [function(require, module, exports) {
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        'use strict';

        /*<replacement>*/

        var Buffer = require('safe-buffer').Buffer;
        /*</replacement>*/

        var isEncoding = Buffer.isEncoding || function(encoding) {
            encoding = '' + encoding;
            switch (encoding && encoding.toLowerCase()) {
            case 'hex':
            case 'utf8':
            case 'utf-8':
            case 'ascii':
            case 'binary':
            case 'base64':
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
            case 'raw':
                return true;
            default:
                return false;
            }
        }
        ;

        function _normalizeEncoding(enc) {
            if (!enc)
                return 'utf8';
            var retried;
            while (true) {
                switch (enc) {
                case 'utf8':
                case 'utf-8':
                    return 'utf8';
                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                    return 'utf16le';
                case 'latin1':
                case 'binary':
                    return 'latin1';
                case 'base64':
                case 'ascii':
                case 'hex':
                    return enc;
                default:
                    if (retried)
                        return;
                    // undefined
                    enc = ('' + enc).toLowerCase();
                    retried = true;
                }
            }
        }
        ;
        // Do not cache `Buffer.isEncoding` when checking encoding names as some
        // modules monkey-patch it to support additional encodings
        function normalizeEncoding(enc) {
            var nenc = _normalizeEncoding(enc);
            if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc)))
                throw new Error('Unknown encoding: ' + enc);
            return nenc || enc;
        }

        // StringDecoder provides an interface for efficiently splitting a series of
        // buffers into a series of JS strings without breaking apart multi-byte
        // characters.
        exports.StringDecoder = StringDecoder;
        function StringDecoder(encoding) {
            this.encoding = normalizeEncoding(encoding);
            var nb;
            switch (this.encoding) {
            case 'utf16le':
                this.text = utf16Text;
                this.end = utf16End;
                nb = 4;
                break;
            case 'utf8':
                this.fillLast = utf8FillLast;
                nb = 4;
                break;
            case 'base64':
                this.text = base64Text;
                this.end = base64End;
                nb = 3;
                break;
            default:
                this.write = simpleWrite;
                this.end = simpleEnd;
                return;
            }
            this.lastNeed = 0;
            this.lastTotal = 0;
            this.lastChar = Buffer.allocUnsafe(nb);
        }

        StringDecoder.prototype.write = function(buf) {
            if (buf.length === 0)
                return '';
            var r;
            var i;
            if (this.lastNeed) {
                r = this.fillLast(buf);
                if (r === undefined)
                    return '';
                i = this.lastNeed;
                this.lastNeed = 0;
            } else {
                i = 0;
            }
            if (i < buf.length)
                return r ? r + this.text(buf, i) : this.text(buf, i);
            return r || '';
        }
        ;

        StringDecoder.prototype.end = utf8End;

        // Returns only complete characters in a Buffer
        StringDecoder.prototype.text = utf8Text;

        // Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
        StringDecoder.prototype.fillLast = function(buf) {
            if (this.lastNeed <= buf.length) {
                buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
                return this.lastChar.toString(this.encoding, 0, this.lastTotal);
            }
            buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
            this.lastNeed -= buf.length;
        }
        ;

        // Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
        // continuation byte. If an invalid byte is detected, -2 is returned.
        function utf8CheckByte(byte) {
            if (byte <= 0x7F)
                return 0;
            else if (byte >> 5 === 0x06)
                return 2;
            else if (byte >> 4 === 0x0E)
                return 3;
            else if (byte >> 3 === 0x1E)
                return 4;
            return byte >> 6 === 0x02 ? -1 : -2;
        }

        // Checks at most 3 bytes at the end of a Buffer in order to detect an
        // incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
        // needed to complete the UTF-8 character (if applicable) are returned.
        function utf8CheckIncomplete(self, buf, i) {
            var j = buf.length - 1;
            if (j < i)
                return 0;
            var nb = utf8CheckByte(buf[j]);
            if (nb >= 0) {
                if (nb > 0)
                    self.lastNeed = nb - 1;
                return nb;
            }
            if (--j < i || nb === -2)
                return 0;
            nb = utf8CheckByte(buf[j]);
            if (nb >= 0) {
                if (nb > 0)
                    self.lastNeed = nb - 2;
                return nb;
            }
            if (--j < i || nb === -2)
                return 0;
            nb = utf8CheckByte(buf[j]);
            if (nb >= 0) {
                if (nb > 0) {
                    if (nb === 2)
                        nb = 0;
                    else
                        self.lastNeed = nb - 3;
                }
                return nb;
            }
            return 0;
        }

        // Validates as many continuation bytes for a multi-byte UTF-8 character as
        // needed or are available. If we see a non-continuation byte where we expect
        // one, we "replace" the validated continuation bytes we've seen so far with
        // a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
        // behavior. The continuation byte check is included three times in the case
        // where all of the continuation bytes for a character exist in the same buffer.
        // It is also done this way as a slight performance increase instead of using a
        // loop.
        function utf8CheckExtraBytes(self, buf, p) {
            if ((buf[0] & 0xC0) !== 0x80) {
                self.lastNeed = 0;
                return '\ufffd';
            }
            if (self.lastNeed > 1 && buf.length > 1) {
                if ((buf[1] & 0xC0) !== 0x80) {
                    self.lastNeed = 1;
                    return '\ufffd';
                }
                if (self.lastNeed > 2 && buf.length > 2) {
                    if ((buf[2] & 0xC0) !== 0x80) {
                        self.lastNeed = 2;
                        return '\ufffd';
                    }
                }
            }
        }

        // Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
        function utf8FillLast(buf) {
            var p = this.lastTotal - this.lastNeed;
            var r = utf8CheckExtraBytes(this, buf, p);
            if (r !== undefined)
                return r;
            if (this.lastNeed <= buf.length) {
                buf.copy(this.lastChar, p, 0, this.lastNeed);
                return this.lastChar.toString(this.encoding, 0, this.lastTotal);
            }
            buf.copy(this.lastChar, p, 0, buf.length);
            this.lastNeed -= buf.length;
        }

        // Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
        // partial character, the character's bytes are buffered until the required
        // number of bytes are available.
        function utf8Text(buf, i) {
            var total = utf8CheckIncomplete(this, buf, i);
            if (!this.lastNeed)
                return buf.toString('utf8', i);
            this.lastTotal = total;
            var end = buf.length - (total - this.lastNeed);
            buf.copy(this.lastChar, 0, end);
            return buf.toString('utf8', i, end);
        }

        // For UTF-8, a replacement character is added when ending on a partial
        // character.
        function utf8End(buf) {
            var r = buf && buf.length ? this.write(buf) : '';
            if (this.lastNeed)
                return r + '\ufffd';
            return r;
        }

        // UTF-16LE typically needs two bytes per character, but even if we have an even
        // number of bytes available, we need to check if we end on a leading/high
        // surrogate. In that case, we need to wait for the next two bytes in order to
        // decode the last character properly.
        function utf16Text(buf, i) {
            if ((buf.length - i) % 2 === 0) {
                var r = buf.toString('utf16le', i);
                if (r) {
                    var c = r.charCodeAt(r.length - 1);
                    if (c >= 0xD800 && c <= 0xDBFF) {
                        this.lastNeed = 2;
                        this.lastTotal = 4;
                        this.lastChar[0] = buf[buf.length - 2];
                        this.lastChar[1] = buf[buf.length - 1];
                        return r.slice(0, -1);
                    }
                }
                return r;
            }
            this.lastNeed = 1;
            this.lastTotal = 2;
            this.lastChar[0] = buf[buf.length - 1];
            return buf.toString('utf16le', i, buf.length - 1);
        }

        // For UTF-16LE we do not explicitly append special replacement characters if we
        // end on a partial character, we simply let v8 handle that.
        function utf16End(buf) {
            var r = buf && buf.length ? this.write(buf) : '';
            if (this.lastNeed) {
                var end = this.lastTotal - this.lastNeed;
                return r + this.lastChar.toString('utf16le', 0, end);
            }
            return r;
        }

        function base64Text(buf, i) {
            var n = (buf.length - i) % 3;
            if (n === 0)
                return buf.toString('base64', i);
            this.lastNeed = 3 - n;
            this.lastTotal = 3;
            if (n === 1) {
                this.lastChar[0] = buf[buf.length - 1];
            } else {
                this.lastChar[0] = buf[buf.length - 2];
                this.lastChar[1] = buf[buf.length - 1];
            }
            return buf.toString('base64', i, buf.length - n);
        }

        function base64End(buf) {
            var r = buf && buf.length ? this.write(buf) : '';
            if (this.lastNeed)
                return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
            return r;
        }

        // Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
        function simpleWrite(buf) {
            return buf.toString(this.encoding);
        }

        function simpleEnd(buf) {
            return buf && buf.length ? this.write(buf) : '';
        }
    }
    , {
        "safe-buffer": 46
    }],
    42: [function(require, module, exports) {
        module.exports = require('./readable').PassThrough

    }
    , {
        "./readable": 43
    }],
    43: [function(require, module, exports) {
        exports = module.exports = require('./lib/_stream_readable.js');
        exports.Stream = exports;
        exports.Readable = exports;
        exports.Writable = require('./lib/_stream_writable.js');
        exports.Duplex = require('./lib/_stream_duplex.js');
        exports.Transform = require('./lib/_stream_transform.js');
        exports.PassThrough = require('./lib/_stream_passthrough.js');

    }
    , {
        "./lib/_stream_duplex.js": 33,
        "./lib/_stream_passthrough.js": 34,
        "./lib/_stream_readable.js": 35,
        "./lib/_stream_transform.js": 36,
        "./lib/_stream_writable.js": 37
    }],
    44: [function(require, module, exports) {
        module.exports = require('./readable').Transform

    }
    , {
        "./readable": 43
    }],
    45: [function(require, module, exports) {
        module.exports = require('./lib/_stream_writable.js');

    }
    , {
        "./lib/_stream_writable.js": 37
    }],
    46: [function(require, module, exports) {
        arguments[4][12][0].apply(exports, arguments)
    }
    , {
        "buffer": 23,
        "dup": 12
    }],
    47: [function(require, module, exports) {
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        module.exports = Stream;

        var EE = require('events').EventEmitter;
        var inherits = require('inherits');

        inherits(Stream, EE);
        Stream.Readable = require('readable-stream/readable.js');
        Stream.Writable = require('readable-stream/writable.js');
        Stream.Duplex = require('readable-stream/duplex.js');
        Stream.Transform = require('readable-stream/transform.js');
        Stream.PassThrough = require('readable-stream/passthrough.js');

        // Backwards-compat with node 0.4.x
        Stream.Stream = Stream;

        // old-style streams.  Note that the pipe method (the only relevant
        // part of this class) is overridden in the Readable class.

        function Stream() {
            EE.call(this);
        }

        Stream.prototype.pipe = function(dest, options) {
            var source = this;

            function ondata(chunk) {
                if (dest.writable) {
                    if (false === dest.write(chunk) && source.pause) {
                        source.pause();
                    }
                }
            }

            source.on('data', ondata);

            function ondrain() {
                if (source.readable && source.resume) {
                    source.resume();
                }
            }

            dest.on('drain', ondrain);

            // If the 'end' option is not supplied, dest.end() will be called when
            // source gets the 'end' or 'close' events.  Only dest.end() once.
            if (!dest._isStdio && (!options || options.end !== false)) {
                source.on('end', onend);
                source.on('close', onclose);
            }

            var didOnEnd = false;
            function onend() {
                if (didOnEnd)
                    return;
                didOnEnd = true;

                dest.end();
            }

            function onclose() {
                if (didOnEnd)
                    return;
                didOnEnd = true;

                if (typeof dest.destroy === 'function')
                    dest.destroy();
            }

            // don't leave dangling pipes when there are errors.
            function onerror(er) {
                cleanup();
                if (EE.listenerCount(this, 'error') === 0) {
                    throw er;
                    // Unhandled stream error in pipe.
                }
            }

            source.on('error', onerror);
            dest.on('error', onerror);

            // remove all the event listeners that were added.
            function cleanup() {
                source.removeListener('data', ondata);
                dest.removeListener('drain', ondrain);

                source.removeListener('end', onend);
                source.removeListener('close', onclose);

                source.removeListener('error', onerror);
                dest.removeListener('error', onerror);

                source.removeListener('end', cleanup);
                source.removeListener('close', cleanup);

                dest.removeListener('close', cleanup);
            }

            source.on('end', cleanup);
            source.on('close', cleanup);

            dest.on('close', cleanup);

            dest.emit('pipe', source);

            // Allow for unix-like usage: A.pipe(B).pipe(C)
            return dest;
        }
        ;

    }
    , {
        "events": 25,
        "inherits": 27,
        "readable-stream/duplex.js": 32,
        "readable-stream/passthrough.js": 42,
        "readable-stream/readable.js": 43,
        "readable-stream/transform.js": 44,
        "readable-stream/writable.js": 45
    }],
    48: [function(require, module, exports) {
        (function(setImmediate, clearImmediate) {
            var nextTick = require('process/browser.js').nextTick;
            var apply = Function.prototype.apply;
            var slice = Array.prototype.slice;
            var immediateIds = {};
            var nextImmediateId = 0;

            // DOM APIs, for completeness

            exports.setTimeout = function() {
                return new Timeout(apply.call(setTimeout, window, arguments),clearTimeout);
            }
            ;
            exports.setInterval = function() {
                return new Timeout(apply.call(setInterval, window, arguments),clearInterval);
            }
            ;
            exports.clearTimeout = exports.clearInterval = function(timeout) {
                timeout.close();
            }
            ;

            function Timeout(id, clearFn) {
                this._id = id;
                this._clearFn = clearFn;
            }
            Timeout.prototype.unref = Timeout.prototype.ref = function() {}
            ;
            Timeout.prototype.close = function() {
                this._clearFn.call(window, this._id);
            }
            ;

            // Does not start the time, just sets up the members needed.
            exports.enroll = function(item, msecs) {
                clearTimeout(item._idleTimeoutId);
                item._idleTimeout = msecs;
            }
            ;

            exports.unenroll = function(item) {
                clearTimeout(item._idleTimeoutId);
                item._idleTimeout = -1;
            }
            ;

            exports._unrefActive = exports.active = function(item) {
                clearTimeout(item._idleTimeoutId);

                var msecs = item._idleTimeout;
                if (msecs >= 0) {
                    item._idleTimeoutId = setTimeout(function onTimeout() {
                        if (item._onTimeout)
                            item._onTimeout();
                    }, msecs);
                }
            }
            ;

            // That's not how node.js implements it but the exposed api is the same.
            exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
                var id = nextImmediateId++;
                var args = arguments.length < 2 ? false : slice.call(arguments, 1);

                immediateIds[id] = true;

                nextTick(function onNextTick() {
                    if (immediateIds[id]) {
                        // fn.call() is faster so we optimize for the common use-case
                        // @see http://jsperf.com/call-apply-segu
                        if (args) {
                            fn.apply(null, args);
                        } else {
                            fn.call(null);
                        }
                        // Prevent ids from leaking
                        exports.clearImmediate(id);
                    }
                });

                return id;
            }
            ;

            exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
                delete immediateIds[id];
            }
            ;
        }
        ).call(this, require("timers").setImmediate, require("timers").clearImmediate)
    }
    , {
        "process/browser.js": 31,
        "timers": 48
    }],
    49: [function(require, module, exports) {
        (function(global) {

            /**
 * Module exports.
 */

            module.exports = deprecate;

            /**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

            function deprecate(fn, msg) {
                if (config('noDeprecation')) {
                    return fn;
                }

                var warned = false;
                function deprecated() {
                    if (!warned) {
                        if (config('throwDeprecation')) {
                            throw new Error(msg);
                        } else if (config('traceDeprecation')) {
                            console.trace(msg);
                        } else {
                            console.warn(msg);
                        }
                        warned = true;
                    }
                    return fn.apply(this, arguments);
                }

                return deprecated;
            }

            /**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

            function config(name) {
                // accessing global.localStorage can trigger a DOMException in sandboxed iframes
                try {
                    if (!global.localStorage)
                        return false;
                } catch (_) {
                    return false;
                }
                var val = global.localStorage[name];
                if (null == val)
                    return false;
                return String(val).toLowerCase() === 'true';
            }

        }
        ).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
    }
    , {}]
}, {}, [1]);
var md5 = function(str) {
    var xl;

    var rotateLeft = function(lValue, iShiftBits) {
        return (lValue << iShiftBits) | (lValue >>> (32 - iShiftBits));
    };

    var addUnsigned = function(lX, lY) {
        var lX4, lY4, lX8, lY8, lResult;
        lX8 = (lX & 0x80000000);
        lY8 = (lY & 0x80000000);
        lX4 = (lX & 0x40000000);
        lY4 = (lY & 0x40000000);
        lResult = (lX & 0x3FFFFFFF) + (lY & 0x3FFFFFFF);
        if (lX4 & lY4) {
            return (lResult ^ 0x80000000 ^ lX8 ^ lY8);
        }
        if (lX4 | lY4) {
            if (lResult & 0x40000000) {
                return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);
            } else {
                return (lResult ^ 0x40000000 ^ lX8 ^ lY8);
            }
        } else {
            return (lResult ^ lX8 ^ lY8);
        }
    };

    var _F = function(x, y, z) {
        return (x & y) | ((~x) & z);
    };
    var _G = function(x, y, z) {
        return (x & z) | (y & (~z));
    };
    var _H = function(x, y, z) {
        return (x ^ y ^ z);
    };
    var _I = function(x, y, z) {
        return (y ^ (x | (~z)));
    };

    var _FF = function(a, b, c, d, x, s, ac) {
        a = addUnsigned(a, addUnsigned(addUnsigned(_F(b, c, d), x), ac));
        return addUnsigned(rotateLeft(a, s), b);
    };

    var _GG = function(a, b, c, d, x, s, ac) {
        a = addUnsigned(a, addUnsigned(addUnsigned(_G(b, c, d), x), ac));
        return addUnsigned(rotateLeft(a, s), b);
    };

    var _HH = function(a, b, c, d, x, s, ac) {
        a = addUnsigned(a, addUnsigned(addUnsigned(_H(b, c, d), x), ac));
        return addUnsigned(rotateLeft(a, s), b);
    };

    var _II = function(a, b, c, d, x, s, ac) {
        a = addUnsigned(a, addUnsigned(addUnsigned(_I(b, c, d), x), ac));
        return addUnsigned(rotateLeft(a, s), b);
    };

    var convertToWordArray = function(str) {
        var lWordCount;
        var lMessageLength = str.length;
        var lNumberOfWords_temp1 = lMessageLength + 8;
        var lNumberOfWords_temp2 = (lNumberOfWords_temp1 - (lNumberOfWords_temp1 % 64)) / 64;
        var lNumberOfWords = (lNumberOfWords_temp2 + 1) * 16;
        var lWordArray = new Array(lNumberOfWords - 1);
        var lBytePosition = 0;
        var lByteCount = 0;
        while (lByteCount < lMessageLength) {
            lWordCount = (lByteCount - (lByteCount % 4)) / 4;
            lBytePosition = (lByteCount % 4) * 8;
            lWordArray[lWordCount] = (lWordArray[lWordCount] | (str.charCodeAt(lByteCount) << lBytePosition));
            lByteCount++;
        }
        lWordCount = (lByteCount - (lByteCount % 4)) / 4;
        lBytePosition = (lByteCount % 4) * 8;
        lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80 << lBytePosition);
        lWordArray[lNumberOfWords - 2] = lMessageLength << 3;
        lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29;
        return lWordArray;
    };

    var wordToHex = function(lValue) {
        var wordToHexValue = '', wordToHexValue_temp = '', lByte, lCount;
        for (lCount = 0; lCount <= 3; lCount++) {
            lByte = (lValue >>> (lCount * 8)) & 255;
            wordToHexValue_temp = '0' + lByte.toString(16);
            wordToHexValue = wordToHexValue + wordToHexValue_temp.substr(wordToHexValue_temp.length - 2, 2);
        }
        return wordToHexValue;
    };

    var utf8_encode = function(string) {
        string = (string + '').replace(/\r\n/g, "\n").replace(/\r/g, "\n");

        var utftext = "";
        var start, end;
        var stringl = 0;

        start = end = 0;
        stringl = string.length;
        for (var n = 0; n < stringl; n++) {
            var c1 = string.charCodeAt(n);
            var enc = null;

            if (c1 < 128) {
                end++;
            } else if ((c1 > 127) && (c1 < 2048)) {
                enc = String.fromCharCode((c1 >> 6) | 192) + String.fromCharCode((c1 & 63) | 128);
            } else {
                enc = String.fromCharCode((c1 >> 12) | 224) + String.fromCharCode(((c1 >> 6) & 63) | 128) + String.fromCharCode((c1 & 63) | 128);
            }
            if (enc != null) {
                if (end > start) {
                    utftext += string.substring(start, end);
                }
                utftext += enc;
                start = end = n + 1;
            }
        }

        if (end > start) {
            utftext += string.substring(start, string.length);
        }

        return utftext;
    }

    var x = [], k, AA, BB, CC, DD, a, b, c, d, S11 = 7, S12 = 12, S13 = 17, S14 = 22, S21 = 5, S22 = 9, S23 = 14, S24 = 20, S31 = 4, S32 = 11, S33 = 16, S34 = 23, S41 = 6, S42 = 10, S43 = 15, S44 = 21;

    str = utf8_encode(str);
    x = convertToWordArray(str);
    a = 0x67452301;
    b = 0xEFCDAB89;
    c = 0x98BADCFE;
    d = 0x10325476;

    xl = x.length;
    for (k = 0; k < xl; k += 16) {
        AA = a;
        BB = b;
        CC = c;
        DD = d;
        a = _FF(a, b, c, d, x[k + 0], S11, 0xD76AA478);
        d = _FF(d, a, b, c, x[k + 1], S12, 0xE8C7B756);
        c = _FF(c, d, a, b, x[k + 2], S13, 0x242070DB);
        b = _FF(b, c, d, a, x[k + 3], S14, 0xC1BDCEEE);
        a = _FF(a, b, c, d, x[k + 4], S11, 0xF57C0FAF);
        d = _FF(d, a, b, c, x[k + 5], S12, 0x4787C62A);
        c = _FF(c, d, a, b, x[k + 6], S13, 0xA8304613);
        b = _FF(b, c, d, a, x[k + 7], S14, 0xFD469501);
        a = _FF(a, b, c, d, x[k + 8], S11, 0x698098D8);
        d = _FF(d, a, b, c, x[k + 9], S12, 0x8B44F7AF);
        c = _FF(c, d, a, b, x[k + 10], S13, 0xFFFF5BB1);
        b = _FF(b, c, d, a, x[k + 11], S14, 0x895CD7BE);
        a = _FF(a, b, c, d, x[k + 12], S11, 0x6B901122);
        d = _FF(d, a, b, c, x[k + 13], S12, 0xFD987193);
        c = _FF(c, d, a, b, x[k + 14], S13, 0xA679438E);
        b = _FF(b, c, d, a, x[k + 15], S14, 0x49B40821);
        a = _GG(a, b, c, d, x[k + 1], S21, 0xF61E2562);
        d = _GG(d, a, b, c, x[k + 6], S22, 0xC040B340);
        c = _GG(c, d, a, b, x[k + 11], S23, 0x265E5A51);
        b = _GG(b, c, d, a, x[k + 0], S24, 0xE9B6C7AA);
        a = _GG(a, b, c, d, x[k + 5], S21, 0xD62F105D);
        d = _GG(d, a, b, c, x[k + 10], S22, 0x2441453);
        c = _GG(c, d, a, b, x[k + 15], S23, 0xD8A1E681);
        b = _GG(b, c, d, a, x[k + 4], S24, 0xE7D3FBC8);
        a = _GG(a, b, c, d, x[k + 9], S21, 0x21E1CDE6);
        d = _GG(d, a, b, c, x[k + 14], S22, 0xC33707D6);
        c = _GG(c, d, a, b, x[k + 3], S23, 0xF4D50D87);
        b = _GG(b, c, d, a, x[k + 8], S24, 0x455A14ED);
        a = _GG(a, b, c, d, x[k + 13], S21, 0xA9E3E905);
        d = _GG(d, a, b, c, x[k + 2], S22, 0xFCEFA3F8);
        c = _GG(c, d, a, b, x[k + 7], S23, 0x676F02D9);
        b = _GG(b, c, d, a, x[k + 12], S24, 0x8D2A4C8A);
        a = _HH(a, b, c, d, x[k + 5], S31, 0xFFFA3942);
        d = _HH(d, a, b, c, x[k + 8], S32, 0x8771F681);
        c = _HH(c, d, a, b, x[k + 11], S33, 0x6D9D6122);
        b = _HH(b, c, d, a, x[k + 14], S34, 0xFDE5380C);
        a = _HH(a, b, c, d, x[k + 1], S31, 0xA4BEEA44);
        d = _HH(d, a, b, c, x[k + 4], S32, 0x4BDECFA9);
        c = _HH(c, d, a, b, x[k + 7], S33, 0xF6BB4B60);
        b = _HH(b, c, d, a, x[k + 10], S34, 0xBEBFBC70);
        a = _HH(a, b, c, d, x[k + 13], S31, 0x289B7EC6);
        d = _HH(d, a, b, c, x[k + 0], S32, 0xEAA127FA);
        c = _HH(c, d, a, b, x[k + 3], S33, 0xD4EF3085);
        b = _HH(b, c, d, a, x[k + 6], S34, 0x4881D05);
        a = _HH(a, b, c, d, x[k + 9], S31, 0xD9D4D039);
        d = _HH(d, a, b, c, x[k + 12], S32, 0xE6DB99E5);
        c = _HH(c, d, a, b, x[k + 15], S33, 0x1FA27CF8);
        b = _HH(b, c, d, a, x[k + 2], S34, 0xC4AC5665);
        a = _II(a, b, c, d, x[k + 0], S41, 0xF4292244);
        d = _II(d, a, b, c, x[k + 7], S42, 0x432AFF97);
        c = _II(c, d, a, b, x[k + 14], S43, 0xAB9423A7);
        b = _II(b, c, d, a, x[k + 5], S44, 0xFC93A039);
        a = _II(a, b, c, d, x[k + 12], S41, 0x655B59C3);
        d = _II(d, a, b, c, x[k + 3], S42, 0x8F0CCC92);
        c = _II(c, d, a, b, x[k + 10], S43, 0xFFEFF47D);
        b = _II(b, c, d, a, x[k + 1], S44, 0x85845DD1);
        a = _II(a, b, c, d, x[k + 8], S41, 0x6FA87E4F);
        d = _II(d, a, b, c, x[k + 15], S42, 0xFE2CE6E0);
        c = _II(c, d, a, b, x[k + 6], S43, 0xA3014314);
        b = _II(b, c, d, a, x[k + 13], S44, 0x4E0811A1);
        a = _II(a, b, c, d, x[k + 4], S41, 0xF7537E82);
        d = _II(d, a, b, c, x[k + 11], S42, 0xBD3AF235);
        c = _II(c, d, a, b, x[k + 2], S43, 0x2AD7D2BB);
        b = _II(b, c, d, a, x[k + 9], S44, 0xEB86D391);
        a = addUnsigned(a, AA);
        b = addUnsigned(b, BB);
        c = addUnsigned(c, CC);
        d = addUnsigned(d, DD);
    }

    var temp = wordToHex(a) + wordToHex(b) + wordToHex(c) + wordToHex(d);

    return temp.toLowerCase();
};
!function() {
    var d3 = {
        version: "3.5.16"
    };
    var d3_arraySlice = [].slice
      , d3_array = function(list) {
        return d3_arraySlice.call(list);
    };
    var d3_document = this.document;
    function d3_documentElement(node) {
        return node && (node.ownerDocument || node.document || node).documentElement;
    }
    function d3_window(node) {
        return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);
    }
    if (d3_document) {
        try {
            d3_array(d3_document.documentElement.childNodes)[0].nodeType;
        } catch (e) {
            d3_array = function(list) {
                var i = list.length
                  , array = new Array(i);
                while (i--)
                    array[i] = list[i];
                return array;
            }
            ;
        }
    }
    if (!Date.now)
        Date.now = function() {
            return +new Date();
        }
        ;
    if (d3_document) {
        try {
            d3_document.createElement("DIV").style.setProperty("opacity", 0, "");
        } catch (error) {
            var d3_element_prototype = this.Element.prototype
              , d3_element_setAttribute = d3_element_prototype.setAttribute
              , d3_element_setAttributeNS = d3_element_prototype.setAttributeNS
              , d3_style_prototype = this.CSSStyleDeclaration.prototype
              , d3_style_setProperty = d3_style_prototype.setProperty;
            d3_element_prototype.setAttribute = function(name, value) {
                d3_element_setAttribute.call(this, name, value + "");
            }
            ;
            d3_element_prototype.setAttributeNS = function(space, local, value) {
                d3_element_setAttributeNS.call(this, space, local, value + "");
            }
            ;
            d3_style_prototype.setProperty = function(name, value, priority) {
                d3_style_setProperty.call(this, name, value + "", priority);
            }
            ;
        }
    }
    d3.ascending = d3_ascending;
    function d3_ascending(a, b) {
        return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
    }
    d3.descending = function(a, b) {
        return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
    }
    ;
    d3.min = function(array, f) {
        var i = -1, n = array.length, a, b;
        if (arguments.length === 1) {
            while (++i < n)
                if ((b = array[i]) != null && b >= b) {
                    a = b;
                    break;
                }
            while (++i < n)
                if ((b = array[i]) != null && a > b)
                    a = b;
        } else {
            while (++i < n)
                if ((b = f.call(array, array[i], i)) != null && b >= b) {
                    a = b;
                    break;
                }
            while (++i < n)
                if ((b = f.call(array, array[i], i)) != null && a > b)
                    a = b;
        }
        return a;
    }
    ;
    d3.max = function(array, f) {
        var i = -1, n = array.length, a, b;
        if (arguments.length === 1) {
            while (++i < n)
                if ((b = array[i]) != null && b >= b) {
                    a = b;
                    break;
                }
            while (++i < n)
                if ((b = array[i]) != null && b > a)
                    a = b;
        } else {
            while (++i < n)
                if ((b = f.call(array, array[i], i)) != null && b >= b) {
                    a = b;
                    break;
                }
            while (++i < n)
                if ((b = f.call(array, array[i], i)) != null && b > a)
                    a = b;
        }
        return a;
    }
    ;
    d3.extent = function(array, f) {
        var i = -1, n = array.length, a, b, c;
        if (arguments.length === 1) {
            while (++i < n)
                if ((b = array[i]) != null && b >= b) {
                    a = c = b;
                    break;
                }
            while (++i < n)
                if ((b = array[i]) != null) {
                    if (a > b)
                        a = b;
                    if (c < b)
                        c = b;
                }
        } else {
            while (++i < n)
                if ((b = f.call(array, array[i], i)) != null && b >= b) {
                    a = c = b;
                    break;
                }
            while (++i < n)
                if ((b = f.call(array, array[i], i)) != null) {
                    if (a > b)
                        a = b;
                    if (c < b)
                        c = b;
                }
        }
        return [a, c];
    }
    ;
    function d3_number(x) {
        return x === null ? NaN : +x;
    }
    function d3_numeric(x) {
        return !isNaN(x);
    }
    d3.sum = function(array, f) {
        var s = 0, n = array.length, a, i = -1;
        if (arguments.length === 1) {
            while (++i < n)
                if (d3_numeric(a = +array[i]))
                    s += a;
        } else {
            while (++i < n)
                if (d3_numeric(a = +f.call(array, array[i], i)))
                    s += a;
        }
        return s;
    }
    ;
    d3.mean = function(array, f) {
        var s = 0, n = array.length, a, i = -1, j = n;
        if (arguments.length === 1) {
            while (++i < n)
                if (d3_numeric(a = d3_number(array[i])))
                    s += a;
                else
                    --j;
        } else {
            while (++i < n)
                if (d3_numeric(a = d3_number(f.call(array, array[i], i))))
                    s += a;
                else
                    --j;
        }
        if (j)
            return s / j;
    }
    ;
    d3.quantile = function(values, p) {
        var H = (values.length - 1) * p + 1
          , h = Math.floor(H)
          , v = +values[h - 1]
          , e = H - h;
        return e ? v + e * (values[h] - v) : v;
    }
    ;
    d3.median = function(array, f) {
        var numbers = [], n = array.length, a, i = -1;
        if (arguments.length === 1) {
            while (++i < n)
                if (d3_numeric(a = d3_number(array[i])))
                    numbers.push(a);
        } else {
            while (++i < n)
                if (d3_numeric(a = d3_number(f.call(array, array[i], i))))
                    numbers.push(a);
        }
        if (numbers.length)
            return d3.quantile(numbers.sort(d3_ascending), .5);
    }
    ;
    d3.variance = function(array, f) {
        var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;
        if (arguments.length === 1) {
            while (++i < n) {
                if (d3_numeric(a = d3_number(array[i]))) {
                    d = a - m;
                    m += d / ++j;
                    s += d * (a - m);
                }
            }
        } else {
            while (++i < n) {
                if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {
                    d = a - m;
                    m += d / ++j;
                    s += d * (a - m);
                }
            }
        }
        if (j > 1)
            return s / (j - 1);
    }
    ;
    d3.deviation = function() {
        var v = d3.variance.apply(this, arguments);
        return v ? Math.sqrt(v) : v;
    }
    ;
    function d3_bisector(compare) {
        return {
            left: function(a, x, lo, hi) {
                if (arguments.length < 3)
                    lo = 0;
                if (arguments.length < 4)
                    hi = a.length;
                while (lo < hi) {
                    var mid = lo + hi >>> 1;
                    if (compare(a[mid], x) < 0)
                        lo = mid + 1;
                    else
                        hi = mid;
                }
                return lo;
            },
            right: function(a, x, lo, hi) {
                if (arguments.length < 3)
                    lo = 0;
                if (arguments.length < 4)
                    hi = a.length;
                while (lo < hi) {
                    var mid = lo + hi >>> 1;
                    if (compare(a[mid], x) > 0)
                        hi = mid;
                    else
                        lo = mid + 1;
                }
                return lo;
            }
        };
    }
    var d3_bisect = d3_bisector(d3_ascending);
    d3.bisectLeft = d3_bisect.left;
    d3.bisect = d3.bisectRight = d3_bisect.right;
    d3.bisector = function(f) {
        return d3_bisector(f.length === 1 ? function(d, x) {
            return d3_ascending(f(d), x);
        }
        : f);
    }
    ;
    d3.shuffle = function(array, i0, i1) {
        if ((m = arguments.length) < 3) {
            i1 = array.length;
            if (m < 2)
                i0 = 0;
        }
        var m = i1 - i0, t, i;
        while (m) {
            i = Math.random() * m-- | 0;
            t = array[m + i0],
            array[m + i0] = array[i + i0],
            array[i + i0] = t;
        }
        return array;
    }
    ;
    d3.permute = function(array, indexes) {
        var i = indexes.length
          , permutes = new Array(i);
        while (i--)
            permutes[i] = array[indexes[i]];
        return permutes;
    }
    ;
    d3.pairs = function(array) {
        var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);
        while (i < n)
            pairs[i] = [p0 = p1, p1 = array[++i]];
        return pairs;
    }
    ;
    d3.transpose = function(matrix) {
        if (!(n = matrix.length))
            return [];
        for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {
            for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {
                row[j] = matrix[j][i];
            }
        }
        return transpose;
    }
    ;
    function d3_transposeLength(d) {
        return d.length;
    }
    d3.zip = function() {
        return d3.transpose(arguments);
    }
    ;
    d3.keys = function(map) {
        var keys = [];
        for (var key in map)
            keys.push(key);
        return keys;
    }
    ;
    d3.values = function(map) {
        var values = [];
        for (var key in map)
            values.push(map[key]);
        return values;
    }
    ;
    d3.entries = function(map) {
        var entries = [];
        for (var key in map)
            entries.push({
                key: key,
                value: map[key]
            });
        return entries;
    }
    ;
    d3.merge = function(arrays) {
        var n = arrays.length, m, i = -1, j = 0, merged, array;
        while (++i < n)
            j += arrays[i].length;
        merged = new Array(j);
        while (--n >= 0) {
            array = arrays[n];
            m = array.length;
            while (--m >= 0) {
                merged[--j] = array[m];
            }
        }
        return merged;
    }
    ;
    var abs = Math.abs;
    d3.range = function(start, stop, step) {
        if (arguments.length < 3) {
            step = 1;
            if (arguments.length < 2) {
                stop = start;
                start = 0;
            }
        }
        if ((stop - start) / step === Infinity)
            throw new Error("infinite range");
        var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;
        start *= k,
        stop *= k,
        step *= k;
        if (step < 0)
            while ((j = start + step * ++i) > stop)
                range.push(j / k);
        else
            while ((j = start + step * ++i) < stop)
                range.push(j / k);
        return range;
    }
    ;
    function d3_range_integerScale(x) {
        var k = 1;
        while (x * k % 1)
            k *= 10;
        return k;
    }
    function d3_class(ctor, properties) {
        for (var key in properties) {
            Object.defineProperty(ctor.prototype, key, {
                value: properties[key],
                enumerable: false
            });
        }
    }
    d3.map = function(object, f) {
        var map = new d3_Map();
        if (object instanceof d3_Map) {
            object.forEach(function(key, value) {
                map.set(key, value);
            });
        } else if (Array.isArray(object)) {
            var i = -1, n = object.length, o;
            if (arguments.length === 1)
                while (++i < n)
                    map.set(i, object[i]);
            else
                while (++i < n)
                    map.set(f.call(object, o = object[i], i), o);
        } else {
            for (var key in object)
                map.set(key, object[key]);
        }
        return map;
    }
    ;
    function d3_Map() {
        this._ = Object.create(null);
    }
    var d3_map_proto = "__proto__"
      , d3_map_zero = "\x00";
    d3_class(d3_Map, {
        has: d3_map_has,
        get: function(key) {
            return this._[d3_map_escape(key)];
        },
        set: function(key, value) {
            return this._[d3_map_escape(key)] = value;
        },
        remove: d3_map_remove,
        keys: d3_map_keys,
        values: function() {
            var values = [];
            for (var key in this._)
                values.push(this._[key]);
            return values;
        },
        entries: function() {
            var entries = [];
            for (var key in this._)
                entries.push({
                    key: d3_map_unescape(key),
                    value: this._[key]
                });
            return entries;
        },
        size: d3_map_size,
        empty: d3_map_empty,
        forEach: function(f) {
            for (var key in this._)
                f.call(this, d3_map_unescape(key), this._[key]);
        }
    });
    function d3_map_escape(key) {
        return (key += "") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;
    }
    function d3_map_unescape(key) {
        return (key += "")[0] === d3_map_zero ? key.slice(1) : key;
    }
    function d3_map_has(key) {
        return d3_map_escape(key)in this._;
    }
    function d3_map_remove(key) {
        return (key = d3_map_escape(key))in this._ && delete this._[key];
    }
    function d3_map_keys() {
        var keys = [];
        for (var key in this._)
            keys.push(d3_map_unescape(key));
        return keys;
    }
    function d3_map_size() {
        var size = 0;
        for (var key in this._)
            ++size;
        return size;
    }
    function d3_map_empty() {
        for (var key in this._)
            return false;
        return true;
    }
    d3.nest = function() {
        var nest = {}, keys = [], sortKeys = [], sortValues, rollup;
        function map(mapType, array, depth) {
            if (depth >= keys.length)
                return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;
            var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;
            while (++i < n) {
                if (values = valuesByKey.get(keyValue = key(object = array[i]))) {
                    values.push(object);
                } else {
                    valuesByKey.set(keyValue, [object]);
                }
            }
            if (mapType) {
                object = mapType();
                setter = function(keyValue, values) {
                    object.set(keyValue, map(mapType, values, depth));
                }
                ;
            } else {
                object = {};
                setter = function(keyValue, values) {
                    object[keyValue] = map(mapType, values, depth);
                }
                ;
            }
            valuesByKey.forEach(setter);
            return object;
        }
        function entries(map, depth) {
            if (depth >= keys.length)
                return map;
            var array = []
              , sortKey = sortKeys[depth++];
            map.forEach(function(key, keyMap) {
                array.push({
                    key: key,
                    values: entries(keyMap, depth)
                });
            });
            return sortKey ? array.sort(function(a, b) {
                return sortKey(a.key, b.key);
            }) : array;
        }
        nest.map = function(array, mapType) {
            return map(mapType, array, 0);
        }
        ;
        nest.entries = function(array) {
            return entries(map(d3.map, array, 0), 0);
        }
        ;
        nest.key = function(d) {
            keys.push(d);
            return nest;
        }
        ;
        nest.sortKeys = function(order) {
            sortKeys[keys.length - 1] = order;
            return nest;
        }
        ;
        nest.sortValues = function(order) {
            sortValues = order;
            return nest;
        }
        ;
        nest.rollup = function(f) {
            rollup = f;
            return nest;
        }
        ;
        return nest;
    }
    ;
    d3.set = function(array) {
        var set = new d3_Set();
        if (array)
            for (var i = 0, n = array.length; i < n; ++i)
                set.add(array[i]);
        return set;
    }
    ;
    function d3_Set() {
        this._ = Object.create(null);
    }
    d3_class(d3_Set, {
        has: d3_map_has,
        add: function(key) {
            this._[d3_map_escape(key += "")] = true;
            return key;
        },
        remove: d3_map_remove,
        values: d3_map_keys,
        size: d3_map_size,
        empty: d3_map_empty,
        forEach: function(f) {
            for (var key in this._)
                f.call(this, d3_map_unescape(key));
        }
    });
    d3.behavior = {};
    function d3_identity(d) {
        return d;
    }
    d3.rebind = function(target, source) {
        var i = 1, n = arguments.length, method;
        while (++i < n)
            target[method = arguments[i]] = d3_rebind(target, source, source[method]);
        return target;
    }
    ;
    function d3_rebind(target, source, method) {
        return function() {
            var value = method.apply(source, arguments);
            return value === source ? target : value;
        }
        ;
    }
    function d3_vendorSymbol(object, name) {
        if (name in object)
            return name;
        name = name.charAt(0).toUpperCase() + name.slice(1);
        for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {
            var prefixName = d3_vendorPrefixes[i] + name;
            if (prefixName in object)
                return prefixName;
        }
    }
    var d3_vendorPrefixes = ["webkit", "ms", "moz", "Moz", "o", "O"];
    function d3_noop() {}
    d3.dispatch = function() {
        var dispatch = new d3_dispatch()
          , i = -1
          , n = arguments.length;
        while (++i < n)
            dispatch[arguments[i]] = d3_dispatch_event(dispatch);
        return dispatch;
    }
    ;
    function d3_dispatch() {}
    d3_dispatch.prototype.on = function(type, listener) {
        var i = type.indexOf(".")
          , name = "";
        if (i >= 0) {
            name = type.slice(i + 1);
            type = type.slice(0, i);
        }
        if (type)
            return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);
        if (arguments.length === 2) {
            if (listener == null)
                for (type in this) {
                    if (this.hasOwnProperty(type))
                        this[type].on(name, null);
                }
            return this;
        }
    }
    ;
    function d3_dispatch_event(dispatch) {
        var listeners = []
          , listenerByName = new d3_Map();
        function event() {
            var z = listeners, i = -1, n = z.length, l;
            while (++i < n)
                if (l = z[i].on)
                    l.apply(this, arguments);
            return dispatch;
        }
        event.on = function(name, listener) {
            var l = listenerByName.get(name), i;
            if (arguments.length < 2)
                return l && l.on;
            if (l) {
                l.on = null;
                listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));
                listenerByName.remove(name);
            }
            if (listener)
                listeners.push(listenerByName.set(name, {
                    on: listener
                }));
            return dispatch;
        }
        ;
        return event;
    }
    d3.event = null;
    function d3_eventPreventDefault() {
        d3.event.preventDefault();
    }
    function d3_eventSource() {
        var e = d3.event, s;
        while (s = e.sourceEvent)
            e = s;
        return e;
    }
    function d3_eventDispatch(target) {
        var dispatch = new d3_dispatch()
          , i = 0
          , n = arguments.length;
        while (++i < n)
            dispatch[arguments[i]] = d3_dispatch_event(dispatch);
        dispatch.of = function(thiz, argumentz) {
            return function(e1) {
                try {
                    var e0 = e1.sourceEvent = d3.event;
                    e1.target = target;
                    d3.event = e1;
                    dispatch[e1.type].apply(thiz, argumentz);
                } finally {
                    d3.event = e0;
                }
            }
            ;
        }
        ;
        return dispatch;
    }
    d3.requote = function(s) {
        return s.replace(d3_requote_re, "\\$&");
    }
    ;
    var d3_requote_re = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;
    var d3_subclass = {}.__proto__ ? function(object, prototype) {
        object.__proto__ = prototype;
    }
    : function(object, prototype) {
        for (var property in prototype)
            object[property] = prototype[property];
    }
    ;
    function d3_selection(groups) {
        d3_subclass(groups, d3_selectionPrototype);
        return groups;
    }
    var d3_select = function(s, n) {
        return n.querySelector(s);
    }
      , d3_selectAll = function(s, n) {
        return n.querySelectorAll(s);
    }
      , d3_selectMatches = function(n, s) {
        var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, "matchesSelector")];
        d3_selectMatches = function(n, s) {
            return d3_selectMatcher.call(n, s);
        }
        ;
        return d3_selectMatches(n, s);
    };
    if (typeof Sizzle === "function") {
        d3_select = function(s, n) {
            return Sizzle(s, n)[0] || null;
        }
        ;
        d3_selectAll = Sizzle;
        d3_selectMatches = Sizzle.matchesSelector;
    }
    d3.selection = function() {
        return d3.select(d3_document.documentElement);
    }
    ;
    var d3_selectionPrototype = d3.selection.prototype = [];
    d3_selectionPrototype.select = function(selector) {
        var subgroups = [], subgroup, subnode, group, node;
        selector = d3_selection_selector(selector);
        for (var j = -1, m = this.length; ++j < m; ) {
            subgroups.push(subgroup = []);
            subgroup.parentNode = (group = this[j]).parentNode;
            for (var i = -1, n = group.length; ++i < n; ) {
                if (node = group[i]) {
                    subgroup.push(subnode = selector.call(node, node.__data__, i, j));
                    if (subnode && "__data__"in node)
                        subnode.__data__ = node.__data__;
                } else {
                    subgroup.push(null);
                }
            }
        }
        return d3_selection(subgroups);
    }
    ;
    function d3_selection_selector(selector) {
        return typeof selector === "function" ? selector : function() {
            return d3_select(selector, this);
        }
        ;
    }
    d3_selectionPrototype.selectAll = function(selector) {
        var subgroups = [], subgroup, node;
        selector = d3_selection_selectorAll(selector);
        for (var j = -1, m = this.length; ++j < m; ) {
            for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
                if (node = group[i]) {
                    subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));
                    subgroup.parentNode = node;
                }
            }
        }
        return d3_selection(subgroups);
    }
    ;
    function d3_selection_selectorAll(selector) {
        return typeof selector === "function" ? selector : function() {
            return d3_selectAll(selector, this);
        }
        ;
    }
    var d3_nsXhtml = "http://www.w3.org/1999/xhtml";
    var d3_nsPrefix = {
        svg: "http://www.w3.org/2000/svg",
        xhtml: d3_nsXhtml,
        xlink: "http://www.w3.org/1999/xlink",
        xml: "http://www.w3.org/XML/1998/namespace",
        xmlns: "http://www.w3.org/2000/xmlns/"
    };
    d3.ns = {
        prefix: d3_nsPrefix,
        qualify: function(name) {
            var i = name.indexOf(":")
              , prefix = name;
            if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns")
                name = name.slice(i + 1);
            return d3_nsPrefix.hasOwnProperty(prefix) ? {
                space: d3_nsPrefix[prefix],
                local: name
            } : name;
        }
    };
    d3_selectionPrototype.attr = function(name, value) {
        if (arguments.length < 2) {
            if (typeof name === "string") {
                var node = this.node();
                name = d3.ns.qualify(name);
                return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);
            }
            for (value in name)
                this.each(d3_selection_attr(value, name[value]));
            return this;
        }
        return this.each(d3_selection_attr(name, value));
    }
    ;
    function d3_selection_attr(name, value) {
        name = d3.ns.qualify(name);
        function attrNull() {
            this.removeAttribute(name);
        }
        function attrNullNS() {
            this.removeAttributeNS(name.space, name.local);
        }
        function attrConstant() {
            this.setAttribute(name, value);
        }
        function attrConstantNS() {
            this.setAttributeNS(name.space, name.local, value);
        }
        function attrFunction() {
            var x = value.apply(this, arguments);
            if (x == null)
                this.removeAttribute(name);
            else
                this.setAttribute(name, x);
        }
        function attrFunctionNS() {
            var x = value.apply(this, arguments);
            if (x == null)
                this.removeAttributeNS(name.space, name.local);
            else
                this.setAttributeNS(name.space, name.local, x);
        }
        return value == null ? name.local ? attrNullNS : attrNull : typeof value === "function" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;
    }
    function d3_collapse(s) {
        return s.trim().replace(/\s+/g, " ");
    }
    d3_selectionPrototype.classed = function(name, value) {
        if (arguments.length < 2) {
            if (typeof name === "string") {
                var node = this.node()
                  , n = (name = d3_selection_classes(name)).length
                  , i = -1;
                if (value = node.classList) {
                    while (++i < n)
                        if (!value.contains(name[i]))
                            return false;
                } else {
                    value = node.getAttribute("class");
                    while (++i < n)
                        if (!d3_selection_classedRe(name[i]).test(value))
                            return false;
                }
                return true;
            }
            for (value in name)
                this.each(d3_selection_classed(value, name[value]));
            return this;
        }
        return this.each(d3_selection_classed(name, value));
    }
    ;
    function d3_selection_classedRe(name) {
        return new RegExp("(?:^|\\s+)" + d3.requote(name) + "(?:\\s+|$)","g");
    }
    function d3_selection_classes(name) {
        return (name + "").trim().split(/^|\s+/);
    }
    function d3_selection_classed(name, value) {
        name = d3_selection_classes(name).map(d3_selection_classedName);
        var n = name.length;
        function classedConstant() {
            var i = -1;
            while (++i < n)
                name[i](this, value);
        }
        function classedFunction() {
            var i = -1
              , x = value.apply(this, arguments);
            while (++i < n)
                name[i](this, x);
        }
        return typeof value === "function" ? classedFunction : classedConstant;
    }
    function d3_selection_classedName(name) {
        var re = d3_selection_classedRe(name);
        return function(node, value) {
            if (c = node.classList)
                return value ? c.add(name) : c.remove(name);
            var c = node.getAttribute("class") || "";
            if (value) {
                re.lastIndex = 0;
                if (!re.test(c))
                    node.setAttribute("class", d3_collapse(c + " " + name));
            } else {
                node.setAttribute("class", d3_collapse(c.replace(re, " ")));
            }
        }
        ;
    }
    d3_selectionPrototype.style = function(name, value, priority) {
        var n = arguments.length;
        if (n < 3) {
            if (typeof name !== "string") {
                if (n < 2)
                    value = "";
                for (priority in name)
                    this.each(d3_selection_style(priority, name[priority], value));
                return this;
            }
            if (n < 2) {
                var node = this.node();
                return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);
            }
            priority = "";
        }
        return this.each(d3_selection_style(name, value, priority));
    }
    ;
    function d3_selection_style(name, value, priority) {
        function styleNull() {
            this.style.removeProperty(name);
        }
        function styleConstant() {
            this.style.setProperty(name, value, priority);
        }
        function styleFunction() {
            var x = value.apply(this, arguments);
            if (x == null)
                this.style.removeProperty(name);
            else
                this.style.setProperty(name, x, priority);
        }
        return value == null ? styleNull : typeof value === "function" ? styleFunction : styleConstant;
    }
    d3_selectionPrototype.property = function(name, value) {
        if (arguments.length < 2) {
            if (typeof name === "string")
                return this.node()[name];
            for (value in name)
                this.each(d3_selection_property(value, name[value]));
            return this;
        }
        return this.each(d3_selection_property(name, value));
    }
    ;
    function d3_selection_property(name, value) {
        function propertyNull() {
            delete this[name];
        }
        function propertyConstant() {
            this[name] = value;
        }
        function propertyFunction() {
            var x = value.apply(this, arguments);
            if (x == null)
                delete this[name];
            else
                this[name] = x;
        }
        return value == null ? propertyNull : typeof value === "function" ? propertyFunction : propertyConstant;
    }
    d3_selectionPrototype.text = function(value) {
        return arguments.length ? this.each(typeof value === "function" ? function() {
            var v = value.apply(this, arguments);
            this.textContent = v == null ? "" : v;
        }
        : value == null ? function() {
            this.textContent = "";
        }
        : function() {
            this.textContent = value;
        }
        ) : this.node().textContent;
    }
    ;
    d3_selectionPrototype.html = function(value) {
        return arguments.length ? this.each(typeof value === "function" ? function() {
            var v = value.apply(this, arguments);
            this.innerHTML = v == null ? "" : v;
        }
        : value == null ? function() {
            this.innerHTML = "";
        }
        : function() {
            this.innerHTML = value;
        }
        ) : this.node().innerHTML;
    }
    ;
    d3_selectionPrototype.append = function(name) {
        name = d3_selection_creator(name);
        return this.select(function() {
            return this.appendChild(name.apply(this, arguments));
        });
    }
    ;
    function d3_selection_creator(name) {
        function create() {
            var document = this.ownerDocument
              , namespace = this.namespaceURI;
            return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);
        }
        function createNS() {
            return this.ownerDocument.createElementNS(name.space, name.local);
        }
        return typeof name === "function" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;
    }
    d3_selectionPrototype.insert = function(name, before) {
        name = d3_selection_creator(name);
        before = d3_selection_selector(before);
        return this.select(function() {
            return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);
        });
    }
    ;
    d3_selectionPrototype.remove = function() {
        return this.each(d3_selectionRemove);
    }
    ;
    function d3_selectionRemove() {
        var parent = this.parentNode;
        if (parent)
            parent.removeChild(this);
    }
    d3_selectionPrototype.data = function(value, key) {
        var i = -1, n = this.length, group, node;
        if (!arguments.length) {
            value = new Array(n = (group = this[0]).length);
            while (++i < n) {
                if (node = group[i]) {
                    value[i] = node.__data__;
                }
            }
            return value;
        }
        function bind(group, groupData) {
            var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;
            if (key) {
                var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;
                for (i = -1; ++i < n; ) {
                    if (node = group[i]) {
                        if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {
                            exitNodes[i] = node;
                        } else {
                            nodeByKeyValue.set(keyValue, node);
                        }
                        keyValues[i] = keyValue;
                    }
                }
                for (i = -1; ++i < m; ) {
                    if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {
                        enterNodes[i] = d3_selection_dataNode(nodeData);
                    } else if (node !== true) {
                        updateNodes[i] = node;
                        node.__data__ = nodeData;
                    }
                    nodeByKeyValue.set(keyValue, true);
                }
                for (i = -1; ++i < n; ) {
                    if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {
                        exitNodes[i] = group[i];
                    }
                }
            } else {
                for (i = -1; ++i < n0; ) {
                    node = group[i];
                    nodeData = groupData[i];
                    if (node) {
                        node.__data__ = nodeData;
                        updateNodes[i] = node;
                    } else {
                        enterNodes[i] = d3_selection_dataNode(nodeData);
                    }
                }
                for (; i < m; ++i) {
                    enterNodes[i] = d3_selection_dataNode(groupData[i]);
                }
                for (; i < n; ++i) {
                    exitNodes[i] = group[i];
                }
            }
            enterNodes.update = updateNodes;
            enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;
            enter.push(enterNodes);
            update.push(updateNodes);
            exit.push(exitNodes);
        }
        var enter = d3_selection_enter([])
          , update = d3_selection([])
          , exit = d3_selection([]);
        if (typeof value === "function") {
            while (++i < n) {
                bind(group = this[i], value.call(group, group.parentNode.__data__, i));
            }
        } else {
            while (++i < n) {
                bind(group = this[i], value);
            }
        }
        update.enter = function() {
            return enter;
        }
        ;
        update.exit = function() {
            return exit;
        }
        ;
        return update;
    }
    ;
    function d3_selection_dataNode(data) {
        return {
            __data__: data
        };
    }
    d3_selectionPrototype.datum = function(value) {
        return arguments.length ? this.property("__data__", value) : this.property("__data__");
    }
    ;
    d3_selectionPrototype.filter = function(filter) {
        var subgroups = [], subgroup, group, node;
        if (typeof filter !== "function")
            filter = d3_selection_filter(filter);
        for (var j = 0, m = this.length; j < m; j++) {
            subgroups.push(subgroup = []);
            subgroup.parentNode = (group = this[j]).parentNode;
            for (var i = 0, n = group.length; i < n; i++) {
                if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
                    subgroup.push(node);
                }
            }
        }
        return d3_selection(subgroups);
    }
    ;
    function d3_selection_filter(selector) {
        return function() {
            return d3_selectMatches(this, selector);
        }
        ;
    }
    d3_selectionPrototype.order = function() {
        for (var j = -1, m = this.length; ++j < m; ) {
            for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {
                if (node = group[i]) {
                    if (next && next !== node.nextSibling)
                        next.parentNode.insertBefore(node, next);
                    next = node;
                }
            }
        }
        return this;
    }
    ;
    d3_selectionPrototype.sort = function(comparator) {
        comparator = d3_selection_sortComparator.apply(this, arguments);
        for (var j = -1, m = this.length; ++j < m; )
            this[j].sort(comparator);
        return this.order();
    }
    ;
    function d3_selection_sortComparator(comparator) {
        if (!arguments.length)
            comparator = d3_ascending;
        return function(a, b) {
            return a && b ? comparator(a.__data__, b.__data__) : !a - !b;
        }
        ;
    }
    d3_selectionPrototype.each = function(callback) {
        return d3_selection_each(this, function(node, i, j) {
            callback.call(node, node.__data__, i, j);
        });
    }
    ;
    function d3_selection_each(groups, callback) {
        for (var j = 0, m = groups.length; j < m; j++) {
            for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {
                if (node = group[i])
                    callback(node, i, j);
            }
        }
        return groups;
    }
    d3_selectionPrototype.call = function(callback) {
        var args = d3_array(arguments);
        callback.apply(args[0] = this, args);
        return this;
    }
    ;
    d3_selectionPrototype.empty = function() {
        return !this.node();
    }
    ;
    d3_selectionPrototype.node = function() {
        for (var j = 0, m = this.length; j < m; j++) {
            for (var group = this[j], i = 0, n = group.length; i < n; i++) {
                var node = group[i];
                if (node)
                    return node;
            }
        }
        return null;
    }
    ;
    d3_selectionPrototype.size = function() {
        var n = 0;
        d3_selection_each(this, function() {
            ++n;
        });
        return n;
    }
    ;
    function d3_selection_enter(selection) {
        d3_subclass(selection, d3_selection_enterPrototype);
        return selection;
    }
    var d3_selection_enterPrototype = [];
    d3.selection.enter = d3_selection_enter;
    d3.selection.enter.prototype = d3_selection_enterPrototype;
    d3_selection_enterPrototype.append = d3_selectionPrototype.append;
    d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;
    d3_selection_enterPrototype.node = d3_selectionPrototype.node;
    d3_selection_enterPrototype.call = d3_selectionPrototype.call;
    d3_selection_enterPrototype.size = d3_selectionPrototype.size;
    d3_selection_enterPrototype.select = function(selector) {
        var subgroups = [], subgroup, subnode, upgroup, group, node;
        for (var j = -1, m = this.length; ++j < m; ) {
            upgroup = (group = this[j]).update;
            subgroups.push(subgroup = []);
            subgroup.parentNode = group.parentNode;
            for (var i = -1, n = group.length; ++i < n; ) {
                if (node = group[i]) {
                    subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));
                    subnode.__data__ = node.__data__;
                } else {
                    subgroup.push(null);
                }
            }
        }
        return d3_selection(subgroups);
    }
    ;
    d3_selection_enterPrototype.insert = function(name, before) {
        if (arguments.length < 2)
            before = d3_selection_enterInsertBefore(this);
        return d3_selectionPrototype.insert.call(this, name, before);
    }
    ;
    function d3_selection_enterInsertBefore(enter) {
        var i0, j0;
        return function(d, i, j) {
            var group = enter[j].update, n = group.length, node;
            if (j != j0)
                j0 = j,
                i0 = 0;
            if (i >= i0)
                i0 = i + 1;
            while (!(node = group[i0]) && ++i0 < n)
                ;
            return node;
        }
        ;
    }
    d3.select = function(node) {
        var group;
        if (typeof node === "string") {
            group = [d3_select(node, d3_document)];
            group.parentNode = d3_document.documentElement;
        } else {
            group = [node];
            group.parentNode = d3_documentElement(node);
        }
        return d3_selection([group]);
    }
    ;
    d3.selectAll = function(nodes) {
        var group;
        if (typeof nodes === "string") {
            group = d3_array(d3_selectAll(nodes, d3_document));
            group.parentNode = d3_document.documentElement;
        } else {
            group = d3_array(nodes);
            group.parentNode = null;
        }
        return d3_selection([group]);
    }
    ;
    d3_selectionPrototype.on = function(type, listener, capture) {
        var n = arguments.length;
        if (n < 3) {
            if (typeof type !== "string") {
                if (n < 2)
                    listener = false;
                for (capture in type)
                    this.each(d3_selection_on(capture, type[capture], listener));
                return this;
            }
            if (n < 2)
                return (n = this.node()["__on" + type]) && n._;
            capture = false;
        }
        return this.each(d3_selection_on(type, listener, capture));
    }
    ;
    function d3_selection_on(type, listener, capture) {
        var name = "__on" + type
          , i = type.indexOf(".")
          , wrap = d3_selection_onListener;
        if (i > 0)
            type = type.slice(0, i);
        var filter = d3_selection_onFilters.get(type);
        if (filter)
            type = filter,
            wrap = d3_selection_onFilter;
        function onRemove() {
            var l = this[name];
            if (l) {
                this.removeEventListener(type, l, l.$);
                delete this[name];
            }
        }
        function onAdd() {
            var l = wrap(listener, d3_array(arguments));
            onRemove.call(this);
            this.addEventListener(type, this[name] = l, l.$ = capture);
            l._ = listener;
        }
        function removeAll() {
            var re = new RegExp("^__on([^.]+)" + d3.requote(type) + "$"), match;
            for (var name in this) {
                if (match = name.match(re)) {
                    var l = this[name];
                    this.removeEventListener(match[1], l, l.$);
                    delete this[name];
                }
            }
        }
        return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;
    }
    var d3_selection_onFilters = d3.map({
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    });
    if (d3_document) {
        d3_selection_onFilters.forEach(function(k) {
            if ("on" + k in d3_document)
                d3_selection_onFilters.remove(k);
        });
    }
    function d3_selection_onListener(listener, argumentz) {
        return function(e) {
            var o = d3.event;
            d3.event = e;
            argumentz[0] = this.__data__;
            try {
                listener.apply(this, argumentz);
            } finally {
                d3.event = o;
            }
        }
        ;
    }
    function d3_selection_onFilter(listener, argumentz) {
        var l = d3_selection_onListener(listener, argumentz);
        return function(e) {
            var target = this
              , related = e.relatedTarget;
            if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {
                l.call(target, e);
            }
        }
        ;
    }
    var d3_event_dragSelect, d3_event_dragId = 0;
    function d3_event_dragSuppress(node) {
        var name = ".dragsuppress-" + ++d3_event_dragId
          , click = "click" + name
          , w = d3.select(d3_window(node)).on("touchmove" + name, d3_eventPreventDefault).on("dragstart" + name, d3_eventPreventDefault).on("selectstart" + name, d3_eventPreventDefault);
        if (d3_event_dragSelect == null) {
            d3_event_dragSelect = "onselectstart"in node ? false : d3_vendorSymbol(node.style, "userSelect");
        }
        if (d3_event_dragSelect) {
            var style = d3_documentElement(node).style
              , select = style[d3_event_dragSelect];
            style[d3_event_dragSelect] = "none";
        }
        return function(suppressClick) {
            w.on(name, null);
            if (d3_event_dragSelect)
                style[d3_event_dragSelect] = select;
            if (suppressClick) {
                var off = function() {
                    w.on(click, null);
                };
                w.on(click, function() {
                    d3_eventPreventDefault();
                    off();
                }, true);
                setTimeout(off, 0);
            }
        }
        ;
    }
    d3.mouse = function(container) {
        return d3_mousePoint(container, d3_eventSource());
    }
    ;
    var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;
    function d3_mousePoint(container, e) {
        if (e.changedTouches)
            e = e.changedTouches[0];
        var svg = container.ownerSVGElement || container;
        if (svg.createSVGPoint) {
            var point = svg.createSVGPoint();
            if (d3_mouse_bug44083 < 0) {
                var window = d3_window(container);
                if (window.scrollX || window.scrollY) {
                    svg = d3.select("body").append("svg").style({
                        position: "absolute",
                        top: 0,
                        left: 0,
                        margin: 0,
                        padding: 0,
                        border: "none"
                    }, "important");
                    var ctm = svg[0][0].getScreenCTM();
                    d3_mouse_bug44083 = !(ctm.f || ctm.e);
                    svg.remove();
                }
            }
            if (d3_mouse_bug44083)
                point.x = e.pageX,
                point.y = e.pageY;
            else
                point.x = e.clientX,
                point.y = e.clientY;
            point = point.matrixTransform(container.getScreenCTM().inverse());
            return [point.x, point.y];
        }
        var rect = container.getBoundingClientRect();
        return [e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop];
    }
    d3.touch = function(container, touches, identifier) {
        if (arguments.length < 3)
            identifier = touches,
            touches = d3_eventSource().changedTouches;
        if (touches)
            for (var i = 0, n = touches.length, touch; i < n; ++i) {
                if ((touch = touches[i]).identifier === identifier) {
                    return d3_mousePoint(container, touch);
                }
            }
    }
    ;
    d3.behavior.drag = function() {
        var event = d3_eventDispatch(drag, "drag", "dragstart", "dragend")
          , origin = null
          , mousedown = dragstart(d3_noop, d3.mouse, d3_window, "mousemove", "mouseup")
          , touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, "touchmove", "touchend");
        function drag() {
            this.on("mousedown.drag", mousedown).on("touchstart.drag", touchstart);
        }
        function dragstart(id, position, subject, move, end) {
            return function() {
                var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = ".drag" + (dragId == null ? "" : "-" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);
                if (origin) {
                    dragOffset = origin.apply(that, arguments);
                    dragOffset = [dragOffset.x - position0[0], dragOffset.y - position0[1]];
                } else {
                    dragOffset = [0, 0];
                }
                dispatch({
                    type: "dragstart"
                });
                function moved() {
                    var position1 = position(parent, dragId), dx, dy;
                    if (!position1)
                        return;
                    dx = position1[0] - position0[0];
                    dy = position1[1] - position0[1];
                    dragged |= dx | dy;
                    position0 = position1;
                    dispatch({
                        type: "drag",
                        x: position1[0] + dragOffset[0],
                        y: position1[1] + dragOffset[1],
                        dx: dx,
                        dy: dy
                    });
                }
                function ended() {
                    if (!position(parent, dragId))
                        return;
                    dragSubject.on(move + dragName, null).on(end + dragName, null);
                    dragRestore(dragged);
                    dispatch({
                        type: "dragend"
                    });
                }
            }
            ;
        }
        drag.origin = function(x) {
            if (!arguments.length)
                return origin;
            origin = x;
            return drag;
        }
        ;
        return d3.rebind(drag, event, "on");
    }
    ;
    function d3_behavior_dragTouchId() {
        return d3.event.changedTouches[0].identifier;
    }
    d3.touches = function(container, touches) {
        if (arguments.length < 2)
            touches = d3_eventSource().touches;
        return touches ? d3_array(touches).map(function(touch) {
            var point = d3_mousePoint(container, touch);
            point.identifier = touch.identifier;
            return point;
        }) : [];
    }
    ;
    var ε = 1e-6
      , ε2 = ε * ε
      , π = Math.PI
      , τ = 2 * π
      , τε = τ - ε
      , halfπ = π / 2
      , d3_radians = π / 180
      , d3_degrees = 180 / π;
    function d3_sgn(x) {
        return x > 0 ? 1 : x < 0 ? -1 : 0;
    }
    function d3_cross2d(a, b, c) {
        return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
    }
    function d3_acos(x) {
        return x > 1 ? 0 : x < -1 ? π : Math.acos(x);
    }
    function d3_asin(x) {
        return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);
    }
    function d3_sinh(x) {
        return ((x = Math.exp(x)) - 1 / x) / 2;
    }
    function d3_cosh(x) {
        return ((x = Math.exp(x)) + 1 / x) / 2;
    }
    function d3_tanh(x) {
        return ((x = Math.exp(2 * x)) - 1) / (x + 1);
    }
    function d3_haversin(x) {
        return (x = Math.sin(x / 2)) * x;
    }
    var ρ = Math.SQRT2
      , ρ2 = 2
      , ρ4 = 4;
    d3.interpolateZoom = function(p0, p1) {
        var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;
        if (d2 < ε2) {
            S = Math.log(w1 / w0) / ρ;
            i = function(t) {
                return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S)];
            }
            ;
        } else {
            var d1 = Math.sqrt(d2)
              , b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1)
              , b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1)
              , r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0)
              , r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
            S = (r1 - r0) / ρ;
            i = function(t) {
                var s = t * S
                  , coshr0 = d3_cosh(r0)
                  , u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));
                return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0)];
            }
            ;
        }
        i.duration = S * 1e3;
        return i;
    }
    ;
    d3.behavior.zoom = function() {
        var view = {
            x: 0,
            y: 0,
            k: 1
        }, translate0, center0, center, size = [960, 500], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = "mousedown.zoom", mousemove = "mousemove.zoom", mouseup = "mouseup.zoom", mousewheelTimer, touchstart = "touchstart.zoom", touchtime, event = d3_eventDispatch(zoom, "zoomstart", "zoom", "zoomend"), x0, x1, y0, y1;
        if (!d3_behavior_zoomWheel) {
            d3_behavior_zoomWheel = "onwheel"in d3_document ? (d3_behavior_zoomDelta = function() {
                return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);
            }
            ,
            "wheel") : "onmousewheel"in d3_document ? (d3_behavior_zoomDelta = function() {
                return d3.event.wheelDelta;
            }
            ,
            "mousewheel") : (d3_behavior_zoomDelta = function() {
                return -d3.event.detail;
            }
            ,
            "MozMousePixelScroll");
        }
        function zoom(g) {
            g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + ".zoom", mousewheeled).on("dblclick.zoom", dblclicked).on(touchstart, touchstarted);
        }
        zoom.event = function(g) {
            g.each(function() {
                var dispatch = event.of(this, arguments)
                  , view1 = view;
                if (d3_transitionInheritId) {
                    d3.select(this).transition().each("start.zoom", function() {
                        view = this.__chart__ || {
                            x: 0,
                            y: 0,
                            k: 1
                        };
                        zoomstarted(dispatch);
                    }).tween("zoom:zoom", function() {
                        var dx = size[0]
                          , dy = size[1]
                          , cx = center0 ? center0[0] : dx / 2
                          , cy = center0 ? center0[1] : dy / 2
                          , i = d3.interpolateZoom([(cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k], [(cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k]);
                        return function(t) {
                            var l = i(t)
                              , k = dx / l[2];
                            this.__chart__ = view = {
                                x: cx - l[0] * k,
                                y: cy - l[1] * k,
                                k: k
                            };
                            zoomed(dispatch);
                        }
                        ;
                    }).each("interrupt.zoom", function() {
                        zoomended(dispatch);
                    }).each("end.zoom", function() {
                        zoomended(dispatch);
                    });
                } else {
                    this.__chart__ = view;
                    zoomstarted(dispatch);
                    zoomed(dispatch);
                    zoomended(dispatch);
                }
            });
        }
        ;
        zoom.translate = function(_) {
            if (!arguments.length)
                return [view.x, view.y];
            view = {
                x: +_[0],
                y: +_[1],
                k: view.k
            };
            rescale();
            return zoom;
        }
        ;
        zoom.scale = function(_) {
            if (!arguments.length)
                return view.k;
            view = {
                x: view.x,
                y: view.y,
                k: null
            };
            scaleTo(+_);
            rescale();
            return zoom;
        }
        ;
        zoom.scaleExtent = function(_) {
            if (!arguments.length)
                return scaleExtent;
            scaleExtent = _ == null ? d3_behavior_zoomInfinity : [+_[0], +_[1]];
            return zoom;
        }
        ;
        zoom.center = function(_) {
            if (!arguments.length)
                return center;
            center = _ && [+_[0], +_[1]];
            return zoom;
        }
        ;
        zoom.size = function(_) {
            if (!arguments.length)
                return size;
            size = _ && [+_[0], +_[1]];
            return zoom;
        }
        ;
        zoom.duration = function(_) {
            if (!arguments.length)
                return duration;
            duration = +_;
            return zoom;
        }
        ;
        zoom.x = function(z) {
            if (!arguments.length)
                return x1;
            x1 = z;
            x0 = z.copy();
            view = {
                x: 0,
                y: 0,
                k: 1
            };
            return zoom;
        }
        ;
        zoom.y = function(z) {
            if (!arguments.length)
                return y1;
            y1 = z;
            y0 = z.copy();
            view = {
                x: 0,
                y: 0,
                k: 1
            };
            return zoom;
        }
        ;
        function location(p) {
            return [(p[0] - view.x) / view.k, (p[1] - view.y) / view.k];
        }
        function point(l) {
            return [l[0] * view.k + view.x, l[1] * view.k + view.y];
        }
        function scaleTo(s) {
            view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));
        }
        function translateTo(p, l) {
            l = point(l);
            view.x += p[0] - l[0];
            view.y += p[1] - l[1];
        }
        function zoomTo(that, p, l, k) {
            that.__chart__ = {
                x: view.x,
                y: view.y,
                k: view.k
            };
            scaleTo(Math.pow(2, k));
            translateTo(center0 = p, l);
            that = d3.select(that);
            if (duration > 0)
                that = that.transition().duration(duration);
            that.call(zoom.event);
        }
        function rescale() {
            if (x1)
                x1.domain(x0.range().map(function(x) {
                    return (x - view.x) / view.k;
                }).map(x0.invert));
            if (y1)
                y1.domain(y0.range().map(function(y) {
                    return (y - view.y) / view.k;
                }).map(y0.invert));
        }
        function zoomstarted(dispatch) {
            if (!zooming++)
                dispatch({
                    type: "zoomstart"
                });
        }
        function zoomed(dispatch) {
            rescale();
            dispatch({
                type: "zoom",
                scale: view.k,
                translate: [view.x, view.y]
            });
        }
        function zoomended(dispatch) {
            if (!--zooming)
                dispatch({
                    type: "zoomend"
                }),
                center0 = null;
        }
        function mousedowned() {
            var that = this
              , dispatch = event.of(that, arguments)
              , dragged = 0
              , subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended)
              , location0 = location(d3.mouse(that))
              , dragRestore = d3_event_dragSuppress(that);
            d3_selection_interrupt.call(that);
            zoomstarted(dispatch);
            function moved() {
                dragged = 1;
                translateTo(d3.mouse(that), location0);
                zoomed(dispatch);
            }
            function ended() {
                subject.on(mousemove, null).on(mouseup, null);
                dragRestore(dragged);
                zoomended(dispatch);
            }
        }
        function touchstarted() {
            var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = ".zoom-" + d3.event.changedTouches[0].identifier, touchmove = "touchmove" + zoomName, touchend = "touchend" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);
            started();
            zoomstarted(dispatch);
            subject.on(mousedown, null).on(touchstart, started);
            function relocate() {
                var touches = d3.touches(that);
                scale0 = view.k;
                touches.forEach(function(t) {
                    if (t.identifier in locations0)
                        locations0[t.identifier] = location(t);
                });
                return touches;
            }
            function started() {
                var target = d3.event.target;
                d3.select(target).on(touchmove, moved).on(touchend, ended);
                targets.push(target);
                var changed = d3.event.changedTouches;
                for (var i = 0, n = changed.length; i < n; ++i) {
                    locations0[changed[i].identifier] = null;
                }
                var touches = relocate()
                  , now = Date.now();
                if (touches.length === 1) {
                    if (now - touchtime < 500) {
                        var p = touches[0];
                        zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);
                        d3_eventPreventDefault();
                    }
                    touchtime = now;
                } else if (touches.length > 1) {
                    var p = touches[0]
                      , q = touches[1]
                      , dx = p[0] - q[0]
                      , dy = p[1] - q[1];
                    distance0 = dx * dx + dy * dy;
                }
            }
            function moved() {
                var touches = d3.touches(that), p0, l0, p1, l1;
                d3_selection_interrupt.call(that);
                for (var i = 0, n = touches.length; i < n; ++i,
                l1 = null) {
                    p1 = touches[i];
                    if (l1 = locations0[p1.identifier]) {
                        if (l0)
                            break;
                        p0 = p1,
                        l0 = l1;
                    }
                }
                if (l1) {
                    var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1
                      , scale1 = distance0 && Math.sqrt(distance1 / distance0);
                    p0 = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];
                    l0 = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];
                    scaleTo(scale1 * scale0);
                }
                touchtime = null;
                translateTo(p0, l0);
                zoomed(dispatch);
            }
            function ended() {
                if (d3.event.touches.length) {
                    var changed = d3.event.changedTouches;
                    for (var i = 0, n = changed.length; i < n; ++i) {
                        delete locations0[changed[i].identifier];
                    }
                    for (var identifier in locations0) {
                        return void relocate();
                    }
                }
                d3.selectAll(targets).on(zoomName, null);
                subject.on(mousedown, mousedowned).on(touchstart, touchstarted);
                dragRestore();
                zoomended(dispatch);
            }
        }
        function mousewheeled() {
            var dispatch = event.of(this, arguments);
            if (mousewheelTimer)
                clearTimeout(mousewheelTimer);
            else
                d3_selection_interrupt.call(this),
                translate0 = location(center0 = center || d3.mouse(this)),
                zoomstarted(dispatch);
            mousewheelTimer = setTimeout(function() {
                mousewheelTimer = null;
                zoomended(dispatch);
            }, 50);
            d3_eventPreventDefault();
            scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);
            translateTo(center0, translate0);
            zoomed(dispatch);
        }
        function dblclicked() {
            var p = d3.mouse(this)
              , k = Math.log(view.k) / Math.LN2;
            zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);
        }
        return d3.rebind(zoom, event, "on");
    }
    ;
    var d3_behavior_zoomInfinity = [0, Infinity], d3_behavior_zoomDelta, d3_behavior_zoomWheel;
    d3.color = d3_color;
    function d3_color() {}
    d3_color.prototype.toString = function() {
        return this.rgb() + "";
    }
    ;
    d3.hsl = d3_hsl;
    function d3_hsl(h, s, l) {
        return this instanceof d3_hsl ? void (this.h = +h,
        this.s = +s,
        this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h,h.s,h.l) : d3_rgb_parse("" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h,s,l);
    }
    var d3_hslPrototype = d3_hsl.prototype = new d3_color();
    d3_hslPrototype.brighter = function(k) {
        k = Math.pow(.7, arguments.length ? k : 1);
        return new d3_hsl(this.h,this.s,this.l / k);
    }
    ;
    d3_hslPrototype.darker = function(k) {
        k = Math.pow(.7, arguments.length ? k : 1);
        return new d3_hsl(this.h,this.s,k * this.l);
    }
    ;
    d3_hslPrototype.rgb = function() {
        return d3_hsl_rgb(this.h, this.s, this.l);
    }
    ;
    function d3_hsl_rgb(h, s, l) {
        var m1, m2;
        h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;
        s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;
        l = l < 0 ? 0 : l > 1 ? 1 : l;
        m2 = l <= .5 ? l * (1 + s) : l + s - l * s;
        m1 = 2 * l - m2;
        function v(h) {
            if (h > 360)
                h -= 360;
            else if (h < 0)
                h += 360;
            if (h < 60)
                return m1 + (m2 - m1) * h / 60;
            if (h < 180)
                return m2;
            if (h < 240)
                return m1 + (m2 - m1) * (240 - h) / 60;
            return m1;
        }
        function vv(h) {
            return Math.round(v(h) * 255);
        }
        return new d3_rgb(vv(h + 120),vv(h),vv(h - 120));
    }
    d3.hcl = d3_hcl;
    function d3_hcl(h, c, l) {
        return this instanceof d3_hcl ? void (this.h = +h,
        this.c = +c,
        this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h,h.c,h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h,c,l);
    }
    var d3_hclPrototype = d3_hcl.prototype = new d3_color();
    d3_hclPrototype.brighter = function(k) {
        return new d3_hcl(this.h,this.c,Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));
    }
    ;
    d3_hclPrototype.darker = function(k) {
        return new d3_hcl(this.h,this.c,Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));
    }
    ;
    d3_hclPrototype.rgb = function() {
        return d3_hcl_lab(this.h, this.c, this.l).rgb();
    }
    ;
    function d3_hcl_lab(h, c, l) {
        if (isNaN(h))
            h = 0;
        if (isNaN(c))
            c = 0;
        return new d3_lab(l,Math.cos(h *= d3_radians) * c,Math.sin(h) * c);
    }
    d3.lab = d3_lab;
    function d3_lab(l, a, b) {
        return this instanceof d3_lab ? void (this.l = +l,
        this.a = +a,
        this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l,l.a,l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l,a,b);
    }
    var d3_lab_K = 18;
    var d3_lab_X = .95047
      , d3_lab_Y = 1
      , d3_lab_Z = 1.08883;
    var d3_labPrototype = d3_lab.prototype = new d3_color();
    d3_labPrototype.brighter = function(k) {
        return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)),this.a,this.b);
    }
    ;
    d3_labPrototype.darker = function(k) {
        return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)),this.a,this.b);
    }
    ;
    d3_labPrototype.rgb = function() {
        return d3_lab_rgb(this.l, this.a, this.b);
    }
    ;
    function d3_lab_rgb(l, a, b) {
        var y = (l + 16) / 116
          , x = y + a / 500
          , z = y - b / 200;
        x = d3_lab_xyz(x) * d3_lab_X;
        y = d3_lab_xyz(y) * d3_lab_Y;
        z = d3_lab_xyz(z) * d3_lab_Z;
        return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z),d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z),d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));
    }
    function d3_lab_hcl(l, a, b) {
        return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees,Math.sqrt(a * a + b * b),l) : new d3_hcl(NaN,NaN,l);
    }
    function d3_lab_xyz(x) {
        return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;
    }
    function d3_xyz_lab(x) {
        return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;
    }
    function d3_xyz_rgb(r) {
        return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));
    }
    d3.rgb = d3_rgb;
    function d3_rgb(r, g, b) {
        return this instanceof d3_rgb ? void (this.r = ~~r,
        this.g = ~~g,
        this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r,r.g,r.b) : d3_rgb_parse("" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r,g,b);
    }
    function d3_rgbNumber(value) {
        return new d3_rgb(value >> 16,value >> 8 & 255,value & 255);
    }
    function d3_rgbString(value) {
        return d3_rgbNumber(value) + "";
    }
    var d3_rgbPrototype = d3_rgb.prototype = new d3_color();
    d3_rgbPrototype.brighter = function(k) {
        k = Math.pow(.7, arguments.length ? k : 1);
        var r = this.r
          , g = this.g
          , b = this.b
          , i = 30;
        if (!r && !g && !b)
            return new d3_rgb(i,i,i);
        if (r && r < i)
            r = i;
        if (g && g < i)
            g = i;
        if (b && b < i)
            b = i;
        return new d3_rgb(Math.min(255, r / k),Math.min(255, g / k),Math.min(255, b / k));
    }
    ;
    d3_rgbPrototype.darker = function(k) {
        k = Math.pow(.7, arguments.length ? k : 1);
        return new d3_rgb(k * this.r,k * this.g,k * this.b);
    }
    ;
    d3_rgbPrototype.hsl = function() {
        return d3_rgb_hsl(this.r, this.g, this.b);
    }
    ;
    d3_rgbPrototype.toString = function() {
        return "#" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);
    }
    ;
    function d3_rgb_hex(v) {
        return v < 16 ? "0" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);
    }
    function d3_rgb_parse(format, rgb, hsl) {
        var r = 0, g = 0, b = 0, m1, m2, color;
        m1 = /([a-z]+)\((.*)\)/.exec(format = format.toLowerCase());
        if (m1) {
            m2 = m1[2].split(",");
            switch (m1[1]) {
            case "hsl":
                {
                    return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);
                }

            case "rgb":
                {
                    return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));
                }
            }
        }
        if (color = d3_rgb_names.get(format)) {
            return rgb(color.r, color.g, color.b);
        }
        if (format != null && format.charAt(0) === "#" && !isNaN(color = parseInt(format.slice(1), 16))) {
            if (format.length === 4) {
                r = (color & 3840) >> 4;
                r = r >> 4 | r;
                g = color & 240;
                g = g >> 4 | g;
                b = color & 15;
                b = b << 4 | b;
            } else if (format.length === 7) {
                r = (color & 16711680) >> 16;
                g = (color & 65280) >> 8;
                b = color & 255;
            }
        }
        return rgb(r, g, b);
    }
    function d3_rgb_hsl(r, g, b) {
        var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;
        if (d) {
            s = l < .5 ? d / (max + min) : d / (2 - max - min);
            if (r == max)
                h = (g - b) / d + (g < b ? 6 : 0);
            else if (g == max)
                h = (b - r) / d + 2;
            else
                h = (r - g) / d + 4;
            h *= 60;
        } else {
            h = NaN;
            s = l > 0 && l < 1 ? 0 : h;
        }
        return new d3_hsl(h,s,l);
    }
    function d3_rgb_lab(r, g, b) {
        r = d3_rgb_xyz(r);
        g = d3_rgb_xyz(g);
        b = d3_rgb_xyz(b);
        var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X)
          , y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y)
          , z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);
        return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));
    }
    function d3_rgb_xyz(r) {
        return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);
    }
    function d3_rgb_parseNumber(c) {
        var f = parseFloat(c);
        return c.charAt(c.length - 1) === "%" ? Math.round(f * 2.55) : f;
    }
    var d3_rgb_names = d3.map({
        aliceblue: 15792383,
        antiquewhite: 16444375,
        aqua: 65535,
        aquamarine: 8388564,
        azure: 15794175,
        beige: 16119260,
        bisque: 16770244,
        black: 0,
        blanchedalmond: 16772045,
        blue: 255,
        blueviolet: 9055202,
        brown: 10824234,
        burlywood: 14596231,
        cadetblue: 6266528,
        chartreuse: 8388352,
        chocolate: 13789470,
        coral: 16744272,
        cornflowerblue: 6591981,
        cornsilk: 16775388,
        crimson: 14423100,
        cyan: 65535,
        darkblue: 139,
        darkcyan: 35723,
        darkgoldenrod: 12092939,
        darkgray: 11119017,
        darkgreen: 25600,
        darkgrey: 11119017,
        darkkhaki: 12433259,
        darkmagenta: 9109643,
        darkolivegreen: 5597999,
        darkorange: 16747520,
        darkorchid: 10040012,
        darkred: 9109504,
        darksalmon: 15308410,
        darkseagreen: 9419919,
        darkslateblue: 4734347,
        darkslategray: 3100495,
        darkslategrey: 3100495,
        darkturquoise: 52945,
        darkviolet: 9699539,
        deeppink: 16716947,
        deepskyblue: 49151,
        dimgray: 6908265,
        dimgrey: 6908265,
        dodgerblue: 2003199,
        firebrick: 11674146,
        floralwhite: 16775920,
        forestgreen: 2263842,
        fuchsia: 16711935,
        gainsboro: 14474460,
        ghostwhite: 16316671,
        gold: 16766720,
        goldenrod: 14329120,
        gray: 8421504,
        green: 32768,
        greenyellow: 11403055,
        grey: 8421504,
        honeydew: 15794160,
        hotpink: 16738740,
        indianred: 13458524,
        indigo: 4915330,
        ivory: 16777200,
        khaki: 15787660,
        lavender: 15132410,
        lavenderblush: 16773365,
        lawngreen: 8190976,
        lemonchiffon: 16775885,
        lightblue: 11393254,
        lightcoral: 15761536,
        lightcyan: 14745599,
        lightgoldenrodyellow: 16448210,
        lightgray: 13882323,
        lightgreen: 9498256,
        lightgrey: 13882323,
        lightpink: 16758465,
        lightsalmon: 16752762,
        lightseagreen: 2142890,
        lightskyblue: 8900346,
        lightslategray: 7833753,
        lightslategrey: 7833753,
        lightsteelblue: 11584734,
        lightyellow: 16777184,
        lime: 65280,
        limegreen: 3329330,
        linen: 16445670,
        magenta: 16711935,
        maroon: 8388608,
        mediumaquamarine: 6737322,
        mediumblue: 205,
        mediumorchid: 12211667,
        mediumpurple: 9662683,
        mediumseagreen: 3978097,
        mediumslateblue: 8087790,
        mediumspringgreen: 64154,
        mediumturquoise: 4772300,
        mediumvioletred: 13047173,
        midnightblue: 1644912,
        mintcream: 16121850,
        mistyrose: 16770273,
        moccasin: 16770229,
        navajowhite: 16768685,
        navy: 128,
        oldlace: 16643558,
        olive: 8421376,
        olivedrab: 7048739,
        orange: 16753920,
        orangered: 16729344,
        orchid: 14315734,
        palegoldenrod: 15657130,
        palegreen: 10025880,
        paleturquoise: 11529966,
        palevioletred: 14381203,
        papayawhip: 16773077,
        peachpuff: 16767673,
        peru: 13468991,
        pink: 16761035,
        plum: 14524637,
        powderblue: 11591910,
        purple: 8388736,
        rebeccapurple: 6697881,
        red: 16711680,
        rosybrown: 12357519,
        royalblue: 4286945,
        saddlebrown: 9127187,
        salmon: 16416882,
        sandybrown: 16032864,
        seagreen: 3050327,
        seashell: 16774638,
        sienna: 10506797,
        silver: 12632256,
        skyblue: 8900331,
        slateblue: 6970061,
        slategray: 7372944,
        slategrey: 7372944,
        snow: 16775930,
        springgreen: 65407,
        steelblue: 4620980,
        tan: 13808780,
        teal: 32896,
        thistle: 14204888,
        tomato: 16737095,
        turquoise: 4251856,
        violet: 15631086,
        wheat: 16113331,
        white: 16777215,
        whitesmoke: 16119285,
        yellow: 16776960,
        yellowgreen: 10145074
    });
    d3_rgb_names.forEach(function(key, value) {
        d3_rgb_names.set(key, d3_rgbNumber(value));
    });
    function d3_functor(v) {
        return typeof v === "function" ? v : function() {
            return v;
        }
        ;
    }
    d3.functor = d3_functor;
    d3.xhr = d3_xhrType(d3_identity);
    function d3_xhrType(response) {
        return function(url, mimeType, callback) {
            if (arguments.length === 2 && typeof mimeType === "function")
                callback = mimeType,
                mimeType = null;
            return d3_xhr(url, mimeType, response, callback);
        }
        ;
    }
    function d3_xhr(url, mimeType, response, callback) {
        var xhr = {}
          , dispatch = d3.dispatch("beforesend", "progress", "load", "error")
          , headers = {}
          , request = new XMLHttpRequest()
          , responseType = null;
        if (this.XDomainRequest && !("withCredentials"in request) && /^(http(s)?:)?\/\//.test(url))
            request = new XDomainRequest();
        "onload"in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {
            request.readyState > 3 && respond();
        }
        ;
        function respond() {
            var status = request.status, result;
            if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {
                try {
                    result = response.call(xhr, request);
                } catch (e) {
                    dispatch.error.call(xhr, e);
                    return;
                }
                dispatch.load.call(xhr, result);
            } else {
                dispatch.error.call(xhr, request);
            }
        }
        request.onprogress = function(event) {
            var o = d3.event;
            d3.event = event;
            try {
                dispatch.progress.call(xhr, request);
            } finally {
                d3.event = o;
            }
        }
        ;
        xhr.header = function(name, value) {
            name = (name + "").toLowerCase();
            if (arguments.length < 2)
                return headers[name];
            if (value == null)
                delete headers[name];
            else
                headers[name] = value + "";
            return xhr;
        }
        ;
        xhr.mimeType = function(value) {
            if (!arguments.length)
                return mimeType;
            mimeType = value == null ? null : value + "";
            return xhr;
        }
        ;
        xhr.responseType = function(value) {
            if (!arguments.length)
                return responseType;
            responseType = value;
            return xhr;
        }
        ;
        xhr.response = function(value) {
            response = value;
            return xhr;
        }
        ;
        ["get", "post"].forEach(function(method) {
            xhr[method] = function() {
                return xhr.send.apply(xhr, [method].concat(d3_array(arguments)));
            }
            ;
        });
        xhr.send = function(method, data, callback) {
            if (arguments.length === 2 && typeof data === "function")
                callback = data,
                data = null;
            request.open(method, url, true);
            if (mimeType != null && !("accept"in headers))
                headers["accept"] = mimeType + ",*/*";
            if (request.setRequestHeader)
                for (var name in headers)
                    request.setRequestHeader(name, headers[name]);
            if (mimeType != null && request.overrideMimeType)
                request.overrideMimeType(mimeType);
            if (responseType != null)
                request.responseType = responseType;
            if (callback != null)
                xhr.on("error", callback).on("load", function(request) {
                    callback(null, request);
                });
            dispatch.beforesend.call(xhr, request);
            request.send(data == null ? null : data);
            return xhr;
        }
        ;
        xhr.abort = function() {
            request.abort();
            return xhr;
        }
        ;
        d3.rebind(xhr, dispatch, "on");
        return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));
    }
    function d3_xhr_fixCallback(callback) {
        return callback.length === 1 ? function(error, request) {
            callback(error == null ? request : null);
        }
        : callback;
    }
    function d3_xhrHasResponse(request) {
        var type = request.responseType;
        return type && type !== "text" ? request.response : request.responseText;
    }
    d3.dsv = function(delimiter, mimeType) {
        var reFormat = new RegExp('["' + delimiter + "\n]")
          , delimiterCode = delimiter.charCodeAt(0);
        function dsv(url, row, callback) {
            if (arguments.length < 3)
                callback = row,
                row = null;
            var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);
            xhr.row = function(_) {
                return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;
            }
            ;
            return xhr;
        }
        function response(request) {
            return dsv.parse(request.responseText);
        }
        function typedResponse(f) {
            return function(request) {
                return dsv.parse(request.responseText, f);
            }
            ;
        }
        dsv.parse = function(text, f) {
            var o;
            return dsv.parseRows(text, function(row, i) {
                if (o)
                    return o(row, i - 1);
                var a = new Function("d","return {" + row.map(function(name, i) {
                    return JSON.stringify(name) + ": d[" + i + "]";
                }).join(",") + "}");
                o = f ? function(row, i) {
                    return f(a(row), i);
                }
                : a;
            });
        }
        ;
        dsv.parseRows = function(text, f) {
            var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;
            function token() {
                if (I >= N)
                    return EOF;
                if (eol)
                    return eol = false,
                    EOL;
                var j = I;
                if (text.charCodeAt(j) === 34) {
                    var i = j;
                    while (i++ < N) {
                        if (text.charCodeAt(i) === 34) {
                            if (text.charCodeAt(i + 1) !== 34)
                                break;
                            ++i;
                        }
                    }
                    I = i + 2;
                    var c = text.charCodeAt(i + 1);
                    if (c === 13) {
                        eol = true;
                        if (text.charCodeAt(i + 2) === 10)
                            ++I;
                    } else if (c === 10) {
                        eol = true;
                    }
                    return text.slice(j + 1, i).replace(/""/g, '"');
                }
                while (I < N) {
                    var c = text.charCodeAt(I++)
                      , k = 1;
                    if (c === 10)
                        eol = true;
                    else if (c === 13) {
                        eol = true;
                        if (text.charCodeAt(I) === 10)
                            ++I,
                            ++k;
                    } else if (c !== delimiterCode)
                        continue;
                    return text.slice(j, I - k);
                }
                return text.slice(j);
            }
            while ((t = token()) !== EOF) {
                var a = [];
                while (t !== EOL && t !== EOF) {
                    a.push(t);
                    t = token();
                }
                if (f && (a = f(a, n++)) == null)
                    continue;
                rows.push(a);
            }
            return rows;
        }
        ;
        dsv.format = function(rows) {
            if (Array.isArray(rows[0]))
                return dsv.formatRows(rows);
            var fieldSet = new d3_Set()
              , fields = [];
            rows.forEach(function(row) {
                for (var field in row) {
                    if (!fieldSet.has(field)) {
                        fields.push(fieldSet.add(field));
                    }
                }
            });
            return [fields.map(formatValue).join(delimiter)].concat(rows.map(function(row) {
                return fields.map(function(field) {
                    return formatValue(row[field]);
                }).join(delimiter);
            })).join("\n");
        }
        ;
        dsv.formatRows = function(rows) {
            return rows.map(formatRow).join("\n");
        }
        ;
        function formatRow(row) {
            return row.map(formatValue).join(delimiter);
        }
        function formatValue(text) {
            return reFormat.test(text) ? '"' + text.replace(/\"/g, '""') + '"' : text;
        }
        return dsv;
    }
    ;
    d3.csv = d3.dsv(",", "text/csv");
    d3.tsv = d3.dsv("	", "text/tab-separated-values");
    var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, "requestAnimationFrame")] || function(callback) {
        setTimeout(callback, 17);
    }
    ;
    d3.timer = function() {
        d3_timer.apply(this, arguments);
    }
    ;
    function d3_timer(callback, delay, then) {
        var n = arguments.length;
        if (n < 2)
            delay = 0;
        if (n < 3)
            then = Date.now();
        var time = then + delay
          , timer = {
            c: callback,
            t: time,
            n: null
        };
        if (d3_timer_queueTail)
            d3_timer_queueTail.n = timer;
        else
            d3_timer_queueHead = timer;
        d3_timer_queueTail = timer;
        if (!d3_timer_interval) {
            d3_timer_timeout = clearTimeout(d3_timer_timeout);
            d3_timer_interval = 1;
            d3_timer_frame(d3_timer_step);
        }
        return timer;
    }
    function d3_timer_step() {
        var now = d3_timer_mark()
          , delay = d3_timer_sweep() - now;
        if (delay > 24) {
            if (isFinite(delay)) {
                clearTimeout(d3_timer_timeout);
                d3_timer_timeout = setTimeout(d3_timer_step, delay);
            }
            d3_timer_interval = 0;
        } else {
            d3_timer_interval = 1;
            d3_timer_frame(d3_timer_step);
        }
    }
    d3.timer.flush = function() {
        d3_timer_mark();
        d3_timer_sweep();
    }
    ;
    function d3_timer_mark() {
        var now = Date.now()
          , timer = d3_timer_queueHead;
        while (timer) {
            if (now >= timer.t && timer.c(now - timer.t))
                timer.c = null;
            timer = timer.n;
        }
        return now;
    }
    function d3_timer_sweep() {
        var t0, t1 = d3_timer_queueHead, time = Infinity;
        while (t1) {
            if (t1.c) {
                if (t1.t < time)
                    time = t1.t;
                t1 = (t0 = t1).n;
            } else {
                t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;
            }
        }
        d3_timer_queueTail = t0;
        return time;
    }
    function d3_format_precision(x, p) {
        return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);
    }
    d3.round = function(x, n) {
        return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);
    }
    ;
    var d3_formatPrefixes = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"].map(d3_formatPrefix);
    d3.formatPrefix = function(value, precision) {
        var i = 0;
        if (value = +value) {
            if (value < 0)
                value *= -1;
            if (precision)
                value = d3.round(value, d3_format_precision(value, precision));
            i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);
            i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));
        }
        return d3_formatPrefixes[8 + i / 3];
    }
    ;
    function d3_formatPrefix(d, i) {
        var k = Math.pow(10, abs(8 - i) * 3);
        return {
            scale: i > 8 ? function(d) {
                return d / k;
            }
            : function(d) {
                return d * k;
            }
            ,
            symbol: d
        };
    }
    function d3_locale_numberFormat(locale) {
        var locale_decimal = locale.decimal
          , locale_thousands = locale.thousands
          , locale_grouping = locale.grouping
          , locale_currency = locale.currency
          , formatGroup = locale_grouping && locale_thousands ? function(value, width) {
            var i = value.length
              , t = []
              , j = 0
              , g = locale_grouping[0]
              , length = 0;
            while (i > 0 && g > 0) {
                if (length + g + 1 > width)
                    g = Math.max(1, width - length);
                t.push(value.substring(i -= g, i + g));
                if ((length += g + 1) > width)
                    break;
                g = locale_grouping[j = (j + 1) % locale_grouping.length];
            }
            return t.reverse().join(locale_thousands);
        }
        : d3_identity;
        return function(specifier) {
            var match = d3_format_re.exec(specifier)
              , fill = match[1] || " "
              , align = match[2] || ">"
              , sign = match[3] || "-"
              , symbol = match[4] || ""
              , zfill = match[5]
              , width = +match[6]
              , comma = match[7]
              , precision = match[8]
              , type = match[9]
              , scale = 1
              , prefix = ""
              , suffix = ""
              , integer = false
              , exponent = true;
            if (precision)
                precision = +precision.substring(1);
            if (zfill || fill === "0" && align === "=") {
                zfill = fill = "0";
                align = "=";
            }
            switch (type) {
            case "n":
                comma = true;
                type = "g";
                break;

            case "%":
                scale = 100;
                suffix = "%";
                type = "f";
                break;

            case "p":
                scale = 100;
                suffix = "%";
                type = "r";
                break;

            case "b":
            case "o":
            case "x":
            case "X":
                if (symbol === "#")
                    prefix = "0" + type.toLowerCase();

            case "c":
                exponent = false;

            case "d":
                integer = true;
                precision = 0;
                break;

            case "s":
                scale = -1;
                type = "r";
                break;
            }
            if (symbol === "$")
                prefix = locale_currency[0],
                suffix = locale_currency[1];
            if (type == "r" && !precision)
                type = "g";
            if (precision != null) {
                if (type == "g")
                    precision = Math.max(1, Math.min(21, precision));
                else if (type == "e" || type == "f")
                    precision = Math.max(0, Math.min(20, precision));
            }
            type = d3_format_types.get(type) || d3_format_typeDefault;
            var zcomma = zfill && comma;
            return function(value) {
                var fullSuffix = suffix;
                if (integer && value % 1)
                    return "";
                var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value,
                "-") : sign === "-" ? "" : sign;
                if (scale < 0) {
                    var unit = d3.formatPrefix(value, precision);
                    value = unit.scale(value);
                    fullSuffix = unit.symbol + suffix;
                } else {
                    value *= scale;
                }
                value = type(value, precision);
                var i = value.lastIndexOf("."), before, after;
                if (i < 0) {
                    var j = exponent ? value.lastIndexOf("e") : -1;
                    if (j < 0)
                        before = value,
                        after = "";
                    else
                        before = value.substring(0, j),
                        after = value.substring(j);
                } else {
                    before = value.substring(0, i);
                    after = locale_decimal + value.substring(i + 1);
                }
                if (!zfill && comma)
                    before = formatGroup(before, Infinity);
                var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length)
                  , padding = length < width ? new Array(length = width - length + 1).join(fill) : "";
                if (zcomma)
                    before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);
                negative += prefix;
                value = before + after;
                return (align === "<" ? negative + value + padding : align === ">" ? padding + negative + value : align === "^" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;
            }
            ;
        }
        ;
    }
    var d3_format_re = /(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i;
    var d3_format_types = d3.map({
        b: function(x) {
            return x.toString(2);
        },
        c: function(x) {
            return String.fromCharCode(x);
        },
        o: function(x) {
            return x.toString(8);
        },
        x: function(x) {
            return x.toString(16);
        },
        X: function(x) {
            return x.toString(16).toUpperCase();
        },
        g: function(x, p) {
            return x.toPrecision(p);
        },
        e: function(x, p) {
            return x.toExponential(p);
        },
        f: function(x, p) {
            return x.toFixed(p);
        },
        r: function(x, p) {
            return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));
        }
    });
    function d3_format_typeDefault(x) {
        return x + "";
    }
    var d3_time = d3.time = {}
      , d3_date = Date;
    function d3_date_utc() {
        this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);
    }
    d3_date_utc.prototype = {
        getDate: function() {
            return this._.getUTCDate();
        },
        getDay: function() {
            return this._.getUTCDay();
        },
        getFullYear: function() {
            return this._.getUTCFullYear();
        },
        getHours: function() {
            return this._.getUTCHours();
        },
        getMilliseconds: function() {
            return this._.getUTCMilliseconds();
        },
        getMinutes: function() {
            return this._.getUTCMinutes();
        },
        getMonth: function() {
            return this._.getUTCMonth();
        },
        getSeconds: function() {
            return this._.getUTCSeconds();
        },
        getTime: function() {
            return this._.getTime();
        },
        getTimezoneOffset: function() {
            return 0;
        },
        valueOf: function() {
            return this._.valueOf();
        },
        setDate: function() {
            d3_time_prototype.setUTCDate.apply(this._, arguments);
        },
        setDay: function() {
            d3_time_prototype.setUTCDay.apply(this._, arguments);
        },
        setFullYear: function() {
            d3_time_prototype.setUTCFullYear.apply(this._, arguments);
        },
        setHours: function() {
            d3_time_prototype.setUTCHours.apply(this._, arguments);
        },
        setMilliseconds: function() {
            d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);
        },
        setMinutes: function() {
            d3_time_prototype.setUTCMinutes.apply(this._, arguments);
        },
        setMonth: function() {
            d3_time_prototype.setUTCMonth.apply(this._, arguments);
        },
        setSeconds: function() {
            d3_time_prototype.setUTCSeconds.apply(this._, arguments);
        },
        setTime: function() {
            d3_time_prototype.setTime.apply(this._, arguments);
        }
    };
    var d3_time_prototype = Date.prototype;
    function d3_time_interval(local, step, number) {
        function round(date) {
            var d0 = local(date)
              , d1 = offset(d0, 1);
            return date - d0 < d1 - date ? d0 : d1;
        }
        function ceil(date) {
            step(date = local(new d3_date(date - 1)), 1);
            return date;
        }
        function offset(date, k) {
            step(date = new d3_date(+date), k);
            return date;
        }
        function range(t0, t1, dt) {
            var time = ceil(t0)
              , times = [];
            if (dt > 1) {
                while (time < t1) {
                    if (!(number(time) % dt))
                        times.push(new Date(+time));
                    step(time, 1);
                }
            } else {
                while (time < t1)
                    times.push(new Date(+time)),
                    step(time, 1);
            }
            return times;
        }
        function range_utc(t0, t1, dt) {
            try {
                d3_date = d3_date_utc;
                var utc = new d3_date_utc();
                utc._ = t0;
                return range(utc, t1, dt);
            } finally {
                d3_date = Date;
            }
        }
        local.floor = local;
        local.round = round;
        local.ceil = ceil;
        local.offset = offset;
        local.range = range;
        var utc = local.utc = d3_time_interval_utc(local);
        utc.floor = utc;
        utc.round = d3_time_interval_utc(round);
        utc.ceil = d3_time_interval_utc(ceil);
        utc.offset = d3_time_interval_utc(offset);
        utc.range = range_utc;
        return local;
    }
    function d3_time_interval_utc(method) {
        return function(date, k) {
            try {
                d3_date = d3_date_utc;
                var utc = new d3_date_utc();
                utc._ = date;
                return method(utc, k)._;
            } finally {
                d3_date = Date;
            }
        }
        ;
    }
    d3_time.year = d3_time_interval(function(date) {
        date = d3_time.day(date);
        date.setMonth(0, 1);
        return date;
    }, function(date, offset) {
        date.setFullYear(date.getFullYear() + offset);
    }, function(date) {
        return date.getFullYear();
    });
    d3_time.years = d3_time.year.range;
    d3_time.years.utc = d3_time.year.utc.range;
    d3_time.day = d3_time_interval(function(date) {
        var day = new d3_date(2e3,0);
        day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());
        return day;
    }, function(date, offset) {
        date.setDate(date.getDate() + offset);
    }, function(date) {
        return date.getDate() - 1;
    });
    d3_time.days = d3_time.day.range;
    d3_time.days.utc = d3_time.day.utc.range;
    d3_time.dayOfYear = function(date) {
        var year = d3_time.year(date);
        return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);
    }
    ;
    ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"].forEach(function(day, i) {
        i = 7 - i;
        var interval = d3_time[day] = d3_time_interval(function(date) {
            (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);
            return date;
        }, function(date, offset) {
            date.setDate(date.getDate() + Math.floor(offset) * 7);
        }, function(date) {
            var day = d3_time.year(date).getDay();
            return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);
        });
        d3_time[day + "s"] = interval.range;
        d3_time[day + "s"].utc = interval.utc.range;
        d3_time[day + "OfYear"] = function(date) {
            var day = d3_time.year(date).getDay();
            return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);
        }
        ;
    });
    d3_time.week = d3_time.sunday;
    d3_time.weeks = d3_time.sunday.range;
    d3_time.weeks.utc = d3_time.sunday.utc.range;
    d3_time.weekOfYear = d3_time.sundayOfYear;
    function d3_locale_timeFormat(locale) {
        var locale_dateTime = locale.dateTime
          , locale_date = locale.date
          , locale_time = locale.time
          , locale_periods = locale.periods
          , locale_days = locale.days
          , locale_shortDays = locale.shortDays
          , locale_months = locale.months
          , locale_shortMonths = locale.shortMonths;
        function d3_time_format(template) {
            var n = template.length;
            function format(date) {
                var string = [], i = -1, j = 0, c, p, f;
                while (++i < n) {
                    if (template.charCodeAt(i) === 37) {
                        string.push(template.slice(j, i));
                        if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null)
                            c = template.charAt(++i);
                        if (f = d3_time_formats[c])
                            c = f(date, p == null ? c === "e" ? " " : "0" : p);
                        string.push(c);
                        j = i + 1;
                    }
                }
                string.push(template.slice(j, i));
                return string.join("");
            }
            format.parse = function(string) {
                var d = {
                    y: 1900,
                    m: 0,
                    d: 1,
                    H: 0,
                    M: 0,
                    S: 0,
                    L: 0,
                    Z: null
                }
                  , i = d3_time_parse(d, template, string, 0);
                if (i != string.length)
                    return null;
                if ("p"in d)
                    d.H = d.H % 12 + d.p * 12;
                var localZ = d.Z != null && d3_date !== d3_date_utc
                  , date = new (localZ ? d3_date_utc : d3_date)();
                if ("j"in d)
                    date.setFullYear(d.y, 0, d.j);
                else if ("W"in d || "U"in d) {
                    if (!("w"in d))
                        d.w = "W"in d ? 1 : 0;
                    date.setFullYear(d.y, 0, 1);
                    date.setFullYear(d.y, 0, "W"in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);
                } else
                    date.setFullYear(d.y, d.m, d.d);
                date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);
                return localZ ? date._ : date;
            }
            ;
            format.toString = function() {
                return template;
            }
            ;
            return format;
        }
        function d3_time_parse(date, template, string, j) {
            var c, p, t, i = 0, n = template.length, m = string.length;
            while (i < n) {
                if (j >= m)
                    return -1;
                c = template.charCodeAt(i++);
                if (c === 37) {
                    t = template.charAt(i++);
                    p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];
                    if (!p || (j = p(date, string, j)) < 0)
                        return -1;
                } else if (c != string.charCodeAt(j++)) {
                    return -1;
                }
            }
            return j;
        }
        d3_time_format.utc = function(template) {
            var local = d3_time_format(template);
            function format(date) {
                try {
                    d3_date = d3_date_utc;
                    var utc = new d3_date();
                    utc._ = date;
                    return local(utc);
                } finally {
                    d3_date = Date;
                }
            }
            format.parse = function(string) {
                try {
                    d3_date = d3_date_utc;
                    var date = local.parse(string);
                    return date && date._;
                } finally {
                    d3_date = Date;
                }
            }
            ;
            format.toString = local.toString;
            return format;
        }
        ;
        d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;
        var d3_time_periodLookup = d3.map()
          , d3_time_dayRe = d3_time_formatRe(locale_days)
          , d3_time_dayLookup = d3_time_formatLookup(locale_days)
          , d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays)
          , d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays)
          , d3_time_monthRe = d3_time_formatRe(locale_months)
          , d3_time_monthLookup = d3_time_formatLookup(locale_months)
          , d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths)
          , d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);
        locale_periods.forEach(function(p, i) {
            d3_time_periodLookup.set(p.toLowerCase(), i);
        });
        var d3_time_formats = {
            a: function(d) {
                return locale_shortDays[d.getDay()];
            },
            A: function(d) {
                return locale_days[d.getDay()];
            },
            b: function(d) {
                return locale_shortMonths[d.getMonth()];
            },
            B: function(d) {
                return locale_months[d.getMonth()];
            },
            c: d3_time_format(locale_dateTime),
            d: function(d, p) {
                return d3_time_formatPad(d.getDate(), p, 2);
            },
            e: function(d, p) {
                return d3_time_formatPad(d.getDate(), p, 2);
            },
            H: function(d, p) {
                return d3_time_formatPad(d.getHours(), p, 2);
            },
            I: function(d, p) {
                return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);
            },
            j: function(d, p) {
                return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);
            },
            L: function(d, p) {
                return d3_time_formatPad(d.getMilliseconds(), p, 3);
            },
            m: function(d, p) {
                return d3_time_formatPad(d.getMonth() + 1, p, 2);
            },
            M: function(d, p) {
                return d3_time_formatPad(d.getMinutes(), p, 2);
            },
            p: function(d) {
                return locale_periods[+(d.getHours() >= 12)];
            },
            S: function(d, p) {
                return d3_time_formatPad(d.getSeconds(), p, 2);
            },
            U: function(d, p) {
                return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);
            },
            w: function(d) {
                return d.getDay();
            },
            W: function(d, p) {
                return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);
            },
            x: d3_time_format(locale_date),
            X: d3_time_format(locale_time),
            y: function(d, p) {
                return d3_time_formatPad(d.getFullYear() % 100, p, 2);
            },
            Y: function(d, p) {
                return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);
            },
            Z: d3_time_zone,
            "%": function() {
                return "%";
            }
        };
        var d3_time_parsers = {
            a: d3_time_parseWeekdayAbbrev,
            A: d3_time_parseWeekday,
            b: d3_time_parseMonthAbbrev,
            B: d3_time_parseMonth,
            c: d3_time_parseLocaleFull,
            d: d3_time_parseDay,
            e: d3_time_parseDay,
            H: d3_time_parseHour24,
            I: d3_time_parseHour24,
            j: d3_time_parseDayOfYear,
            L: d3_time_parseMilliseconds,
            m: d3_time_parseMonthNumber,
            M: d3_time_parseMinutes,
            p: d3_time_parseAmPm,
            S: d3_time_parseSeconds,
            U: d3_time_parseWeekNumberSunday,
            w: d3_time_parseWeekdayNumber,
            W: d3_time_parseWeekNumberMonday,
            x: d3_time_parseLocaleDate,
            X: d3_time_parseLocaleTime,
            y: d3_time_parseYear,
            Y: d3_time_parseFullYear,
            Z: d3_time_parseZone,
            "%": d3_time_parseLiteralPercent
        };
        function d3_time_parseWeekdayAbbrev(date, string, i) {
            d3_time_dayAbbrevRe.lastIndex = 0;
            var n = d3_time_dayAbbrevRe.exec(string.slice(i));
            return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()),
            i + n[0].length) : -1;
        }
        function d3_time_parseWeekday(date, string, i) {
            d3_time_dayRe.lastIndex = 0;
            var n = d3_time_dayRe.exec(string.slice(i));
            return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()),
            i + n[0].length) : -1;
        }
        function d3_time_parseMonthAbbrev(date, string, i) {
            d3_time_monthAbbrevRe.lastIndex = 0;
            var n = d3_time_monthAbbrevRe.exec(string.slice(i));
            return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()),
            i + n[0].length) : -1;
        }
        function d3_time_parseMonth(date, string, i) {
            d3_time_monthRe.lastIndex = 0;
            var n = d3_time_monthRe.exec(string.slice(i));
            return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()),
            i + n[0].length) : -1;
        }
        function d3_time_parseLocaleFull(date, string, i) {
            return d3_time_parse(date, d3_time_formats.c.toString(), string, i);
        }
        function d3_time_parseLocaleDate(date, string, i) {
            return d3_time_parse(date, d3_time_formats.x.toString(), string, i);
        }
        function d3_time_parseLocaleTime(date, string, i) {
            return d3_time_parse(date, d3_time_formats.X.toString(), string, i);
        }
        function d3_time_parseAmPm(date, string, i) {
            var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());
            return n == null ? -1 : (date.p = n,
            i);
        }
        return d3_time_format;
    }
    var d3_time_formatPads = {
        "-": "",
        _: " ",
        "0": "0"
    }
      , d3_time_numberRe = /^\s*\d+/
      , d3_time_percentRe = /^%/;
    function d3_time_formatPad(value, fill, width) {
        var sign = value < 0 ? "-" : ""
          , string = (sign ? -value : value) + ""
          , length = string.length;
        return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
    }
    function d3_time_formatRe(names) {
        return new RegExp("^(?:" + names.map(d3.requote).join("|") + ")","i");
    }
    function d3_time_formatLookup(names) {
        var map = new d3_Map()
          , i = -1
          , n = names.length;
        while (++i < n)
            map.set(names[i].toLowerCase(), i);
        return map;
    }
    function d3_time_parseWeekdayNumber(date, string, i) {
        d3_time_numberRe.lastIndex = 0;
        var n = d3_time_numberRe.exec(string.slice(i, i + 1));
        return n ? (date.w = +n[0],
        i + n[0].length) : -1;
    }
    function d3_time_parseWeekNumberSunday(date, string, i) {
        d3_time_numberRe.lastIndex = 0;
        var n = d3_time_numberRe.exec(string.slice(i));
        return n ? (date.U = +n[0],
        i + n[0].length) : -1;
    }
    function d3_time_parseWeekNumberMonday(date, string, i) {
        d3_time_numberRe.lastIndex = 0;
        var n = d3_time_numberRe.exec(string.slice(i));
        return n ? (date.W = +n[0],
        i + n[0].length) : -1;
    }
    function d3_time_parseFullYear(date, string, i) {
        d3_time_numberRe.lastIndex = 0;
        var n = d3_time_numberRe.exec(string.slice(i, i + 4));
        return n ? (date.y = +n[0],
        i + n[0].length) : -1;
    }
    function d3_time_parseYear(date, string, i) {
        d3_time_numberRe.lastIndex = 0;
        var n = d3_time_numberRe.exec(string.slice(i, i + 2));
        return n ? (date.y = d3_time_expandYear(+n[0]),
        i + n[0].length) : -1;
    }
    function d3_time_parseZone(date, string, i) {
        return /^[+-]\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string,
        i + 5) : -1;
    }
    function d3_time_expandYear(d) {
        return d + (d > 68 ? 1900 : 2e3);
    }
    function d3_time_parseMonthNumber(date, string, i) {
        d3_time_numberRe.lastIndex = 0;
        var n = d3_time_numberRe.exec(string.slice(i, i + 2));
        return n ? (date.m = n[0] - 1,
        i + n[0].length) : -1;
    }
    function d3_time_parseDay(date, string, i) {
        d3_time_numberRe.lastIndex = 0;
        var n = d3_time_numberRe.exec(string.slice(i, i + 2));
        return n ? (date.d = +n[0],
        i + n[0].length) : -1;
    }
    function d3_time_parseDayOfYear(date, string, i) {
        d3_time_numberRe.lastIndex = 0;
        var n = d3_time_numberRe.exec(string.slice(i, i + 3));
        return n ? (date.j = +n[0],
        i + n[0].length) : -1;
    }
    function d3_time_parseHour24(date, string, i) {
        d3_time_numberRe.lastIndex = 0;
        var n = d3_time_numberRe.exec(string.slice(i, i + 2));
        return n ? (date.H = +n[0],
        i + n[0].length) : -1;
    }
    function d3_time_parseMinutes(date, string, i) {
        d3_time_numberRe.lastIndex = 0;
        var n = d3_time_numberRe.exec(string.slice(i, i + 2));
        return n ? (date.M = +n[0],
        i + n[0].length) : -1;
    }
    function d3_time_parseSeconds(date, string, i) {
        d3_time_numberRe.lastIndex = 0;
        var n = d3_time_numberRe.exec(string.slice(i, i + 2));
        return n ? (date.S = +n[0],
        i + n[0].length) : -1;
    }
    function d3_time_parseMilliseconds(date, string, i) {
        d3_time_numberRe.lastIndex = 0;
        var n = d3_time_numberRe.exec(string.slice(i, i + 3));
        return n ? (date.L = +n[0],
        i + n[0].length) : -1;
    }
    function d3_time_zone(d) {
        var z = d.getTimezoneOffset()
          , zs = z > 0 ? "-" : "+"
          , zh = abs(z) / 60 | 0
          , zm = abs(z) % 60;
        return zs + d3_time_formatPad(zh, "0", 2) + d3_time_formatPad(zm, "0", 2);
    }
    function d3_time_parseLiteralPercent(date, string, i) {
        d3_time_percentRe.lastIndex = 0;
        var n = d3_time_percentRe.exec(string.slice(i, i + 1));
        return n ? i + n[0].length : -1;
    }
    function d3_time_formatMulti(formats) {
        var n = formats.length
          , i = -1;
        while (++i < n)
            formats[i][0] = this(formats[i][0]);
        return function(date) {
            var i = 0
              , f = formats[i];
            while (!f[1](date))
                f = formats[++i];
            return f[0](date);
        }
        ;
    }
    d3.locale = function(locale) {
        return {
            numberFormat: d3_locale_numberFormat(locale),
            timeFormat: d3_locale_timeFormat(locale)
        };
    }
    ;
    var d3_locale_enUS = d3.locale({
        decimal: ".",
        thousands: ",",
        grouping: [3],
        currency: ["$", ""],
        dateTime: "%a %b %e %X %Y",
        date: "%m/%d/%Y",
        time: "%H:%M:%S",
        periods: ["AM", "PM"],
        days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
        shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
        months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
        shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
    });
    d3.format = d3_locale_enUS.numberFormat;
    d3.geo = {};
    function d3_adder() {}
    d3_adder.prototype = {
        s: 0,
        t: 0,
        add: function(y) {
            d3_adderSum(y, this.t, d3_adderTemp);
            d3_adderSum(d3_adderTemp.s, this.s, this);
            if (this.s)
                this.t += d3_adderTemp.t;
            else
                this.s = d3_adderTemp.t;
        },
        reset: function() {
            this.s = this.t = 0;
        },
        valueOf: function() {
            return this.s;
        }
    };
    var d3_adderTemp = new d3_adder();
    function d3_adderSum(a, b, o) {
        var x = o.s = a + b
          , bv = x - a
          , av = x - bv;
        o.t = a - av + (b - bv);
    }
    d3.geo.stream = function(object, listener) {
        if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {
            d3_geo_streamObjectType[object.type](object, listener);
        } else {
            d3_geo_streamGeometry(object, listener);
        }
    }
    ;
    function d3_geo_streamGeometry(geometry, listener) {
        if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {
            d3_geo_streamGeometryType[geometry.type](geometry, listener);
        }
    }
    var d3_geo_streamObjectType = {
        Feature: function(feature, listener) {
            d3_geo_streamGeometry(feature.geometry, listener);
        },
        FeatureCollection: function(object, listener) {
            var features = object.features
              , i = -1
              , n = features.length;
            while (++i < n)
                d3_geo_streamGeometry(features[i].geometry, listener);
        }
    };
    var d3_geo_streamGeometryType = {
        Sphere: function(object, listener) {
            listener.sphere();
        },
        Point: function(object, listener) {
            object = object.coordinates;
            listener.point(object[0], object[1], object[2]);
        },
        MultiPoint: function(object, listener) {
            var coordinates = object.coordinates
              , i = -1
              , n = coordinates.length;
            while (++i < n)
                object = coordinates[i],
                listener.point(object[0], object[1], object[2]);
        },
        LineString: function(object, listener) {
            d3_geo_streamLine(object.coordinates, listener, 0);
        },
        MultiLineString: function(object, listener) {
            var coordinates = object.coordinates
              , i = -1
              , n = coordinates.length;
            while (++i < n)
                d3_geo_streamLine(coordinates[i], listener, 0);
        },
        Polygon: function(object, listener) {
            d3_geo_streamPolygon(object.coordinates, listener);
        },
        MultiPolygon: function(object, listener) {
            var coordinates = object.coordinates
              , i = -1
              , n = coordinates.length;
            while (++i < n)
                d3_geo_streamPolygon(coordinates[i], listener);
        },
        GeometryCollection: function(object, listener) {
            var geometries = object.geometries
              , i = -1
              , n = geometries.length;
            while (++i < n)
                d3_geo_streamGeometry(geometries[i], listener);
        }
    };
    function d3_geo_streamLine(coordinates, listener, closed) {
        var i = -1, n = coordinates.length - closed, coordinate;
        listener.lineStart();
        while (++i < n)
            coordinate = coordinates[i],
            listener.point(coordinate[0], coordinate[1], coordinate[2]);
        listener.lineEnd();
    }
    function d3_geo_streamPolygon(coordinates, listener) {
        var i = -1
          , n = coordinates.length;
        listener.polygonStart();
        while (++i < n)
            d3_geo_streamLine(coordinates[i], listener, 1);
        listener.polygonEnd();
    }
    d3.geo.area = function(object) {
        d3_geo_areaSum = 0;
        d3.geo.stream(object, d3_geo_area);
        return d3_geo_areaSum;
    }
    ;
    var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();
    var d3_geo_area = {
        sphere: function() {
            d3_geo_areaSum += 4 * π;
        },
        point: d3_noop,
        lineStart: d3_noop,
        lineEnd: d3_noop,
        polygonStart: function() {
            d3_geo_areaRingSum.reset();
            d3_geo_area.lineStart = d3_geo_areaRingStart;
        },
        polygonEnd: function() {
            var area = 2 * d3_geo_areaRingSum;
            d3_geo_areaSum += area < 0 ? 4 * π + area : area;
            d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;
        }
    };
    function d3_geo_areaRingStart() {
        var λ00, φ00, λ0, cosφ0, sinφ0;
        d3_geo_area.point = function(λ, φ) {
            d3_geo_area.point = nextPoint;
            λ0 = (λ00 = λ) * d3_radians,
            cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4),
            sinφ0 = Math.sin(φ);
        }
        ;
        function nextPoint(λ, φ) {
            λ *= d3_radians;
            φ = φ * d3_radians / 2 + π / 4;
            var dλ = λ - λ0
              , sdλ = dλ >= 0 ? 1 : -1
              , adλ = sdλ * dλ
              , cosφ = Math.cos(φ)
              , sinφ = Math.sin(φ)
              , k = sinφ0 * sinφ
              , u = cosφ0 * cosφ + k * Math.cos(adλ)
              , v = k * sdλ * Math.sin(adλ);
            d3_geo_areaRingSum.add(Math.atan2(v, u));
            λ0 = λ,
            cosφ0 = cosφ,
            sinφ0 = sinφ;
        }
        d3_geo_area.lineEnd = function() {
            nextPoint(λ00, φ00);
        }
        ;
    }
    function d3_geo_cartesian(spherical) {
        var λ = spherical[0]
          , φ = spherical[1]
          , cosφ = Math.cos(φ);
        return [cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ)];
    }
    function d3_geo_cartesianDot(a, b) {
        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
    }
    function d3_geo_cartesianCross(a, b) {
        return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
    }
    function d3_geo_cartesianAdd(a, b) {
        a[0] += b[0];
        a[1] += b[1];
        a[2] += b[2];
    }
    function d3_geo_cartesianScale(vector, k) {
        return [vector[0] * k, vector[1] * k, vector[2] * k];
    }
    function d3_geo_cartesianNormalize(d) {
        var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
        d[0] /= l;
        d[1] /= l;
        d[2] /= l;
    }
    function d3_geo_spherical(cartesian) {
        return [Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2])];
    }
    function d3_geo_sphericalEqual(a, b) {
        return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;
    }
    d3.geo.bounds = function() {
        var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;
        var bound = {
            point: point,
            lineStart: lineStart,
            lineEnd: lineEnd,
            polygonStart: function() {
                bound.point = ringPoint;
                bound.lineStart = ringStart;
                bound.lineEnd = ringEnd;
                dλSum = 0;
                d3_geo_area.polygonStart();
            },
            polygonEnd: function() {
                d3_geo_area.polygonEnd();
                bound.point = point;
                bound.lineStart = lineStart;
                bound.lineEnd = lineEnd;
                if (d3_geo_areaRingSum < 0)
                    λ0 = -(λ1 = 180),
                    φ0 = -(φ1 = 90);
                else if (dλSum > ε)
                    φ1 = 90;
                else if (dλSum < -ε)
                    φ0 = -90;
                range[0] = λ0,
                range[1] = λ1;
            }
        };
        function point(λ, φ) {
            ranges.push(range = [λ0 = λ, λ1 = λ]);
            if (φ < φ0)
                φ0 = φ;
            if (φ > φ1)
                φ1 = φ;
        }
        function linePoint(λ, φ) {
            var p = d3_geo_cartesian([λ * d3_radians, φ * d3_radians]);
            if (p0) {
                var normal = d3_geo_cartesianCross(p0, p)
                  , equatorial = [normal[1], -normal[0], 0]
                  , inflection = d3_geo_cartesianCross(equatorial, normal);
                d3_geo_cartesianNormalize(inflection);
                inflection = d3_geo_spherical(inflection);
                var dλ = λ - λ_
                  , s = dλ > 0 ? 1 : -1
                  , λi = inflection[0] * d3_degrees * s
                  , antimeridian = abs(dλ) > 180;
                if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
                    var φi = inflection[1] * d3_degrees;
                    if (φi > φ1)
                        φ1 = φi;
                } else if (λi = (λi + 360) % 360 - 180,
                antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
                    var φi = -inflection[1] * d3_degrees;
                    if (φi < φ0)
                        φ0 = φi;
                } else {
                    if (φ < φ0)
                        φ0 = φ;
                    if (φ > φ1)
                        φ1 = φ;
                }
                if (antimeridian) {
                    if (λ < λ_) {
                        if (angle(λ0, λ) > angle(λ0, λ1))
                            λ1 = λ;
                    } else {
                        if (angle(λ, λ1) > angle(λ0, λ1))
                            λ0 = λ;
                    }
                } else {
                    if (λ1 >= λ0) {
                        if (λ < λ0)
                            λ0 = λ;
                        if (λ > λ1)
                            λ1 = λ;
                    } else {
                        if (λ > λ_) {
                            if (angle(λ0, λ) > angle(λ0, λ1))
                                λ1 = λ;
                        } else {
                            if (angle(λ, λ1) > angle(λ0, λ1))
                                λ0 = λ;
                        }
                    }
                }
            } else {
                point(λ, φ);
            }
            p0 = p,
            λ_ = λ;
        }
        function lineStart() {
            bound.point = linePoint;
        }
        function lineEnd() {
            range[0] = λ0,
            range[1] = λ1;
            bound.point = point;
            p0 = null;
        }
        function ringPoint(λ, φ) {
            if (p0) {
                var dλ = λ - λ_;
                dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;
            } else
                λ__ = λ,
                φ__ = φ;
            d3_geo_area.point(λ, φ);
            linePoint(λ, φ);
        }
        function ringStart() {
            d3_geo_area.lineStart();
        }
        function ringEnd() {
            ringPoint(λ__, φ__);
            d3_geo_area.lineEnd();
            if (abs(dλSum) > ε)
                λ0 = -(λ1 = 180);
            range[0] = λ0,
            range[1] = λ1;
            p0 = null;
        }
        function angle(λ0, λ1) {
            return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;
        }
        function compareRanges(a, b) {
            return a[0] - b[0];
        }
        function withinRange(x, range) {
            return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
        }
        return function(feature) {
            φ1 = λ1 = -(λ0 = φ0 = Infinity);
            ranges = [];
            d3.geo.stream(feature, bound);
            var n = ranges.length;
            if (n) {
                ranges.sort(compareRanges);
                for (var i = 1, a = ranges[0], b, merged = [a]; i < n; ++i) {
                    b = ranges[i];
                    if (withinRange(b[0], a) || withinRange(b[1], a)) {
                        if (angle(a[0], b[1]) > angle(a[0], a[1]))
                            a[1] = b[1];
                        if (angle(b[0], a[1]) > angle(a[0], a[1]))
                            a[0] = b[0];
                    } else {
                        merged.push(a = b);
                    }
                }
                var best = -Infinity, dλ;
                for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b,
                ++i) {
                    b = merged[i];
                    if ((dλ = angle(a[1], b[0])) > best)
                        best = dλ,
                        λ0 = b[0],
                        λ1 = a[1];
                }
            }
            ranges = range = null;
            return λ0 === Infinity || φ0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[λ0, φ0], [λ1, φ1]];
        }
        ;
    }();
    d3.geo.centroid = function(object) {
        d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
        d3.geo.stream(object, d3_geo_centroid);
        var x = d3_geo_centroidX2
          , y = d3_geo_centroidY2
          , z = d3_geo_centroidZ2
          , m = x * x + y * y + z * z;
        if (m < ε2) {
            x = d3_geo_centroidX1,
            y = d3_geo_centroidY1,
            z = d3_geo_centroidZ1;
            if (d3_geo_centroidW1 < ε)
                x = d3_geo_centroidX0,
                y = d3_geo_centroidY0,
                z = d3_geo_centroidZ0;
            m = x * x + y * y + z * z;
            if (m < ε2)
                return [NaN, NaN];
        }
        return [Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees];
    }
    ;
    var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;
    var d3_geo_centroid = {
        sphere: d3_noop,
        point: d3_geo_centroidPoint,
        lineStart: d3_geo_centroidLineStart,
        lineEnd: d3_geo_centroidLineEnd,
        polygonStart: function() {
            d3_geo_centroid.lineStart = d3_geo_centroidRingStart;
        },
        polygonEnd: function() {
            d3_geo_centroid.lineStart = d3_geo_centroidLineStart;
        }
    };
    function d3_geo_centroidPoint(λ, φ) {
        λ *= d3_radians;
        var cosφ = Math.cos(φ *= d3_radians);
        d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));
    }
    function d3_geo_centroidPointXYZ(x, y, z) {
        ++d3_geo_centroidW0;
        d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;
        d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;
        d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;
    }
    function d3_geo_centroidLineStart() {
        var x0, y0, z0;
        d3_geo_centroid.point = function(λ, φ) {
            λ *= d3_radians;
            var cosφ = Math.cos(φ *= d3_radians);
            x0 = cosφ * Math.cos(λ);
            y0 = cosφ * Math.sin(λ);
            z0 = Math.sin(φ);
            d3_geo_centroid.point = nextPoint;
            d3_geo_centroidPointXYZ(x0, y0, z0);
        }
        ;
        function nextPoint(λ, φ) {
            λ *= d3_radians;
            var cosφ = Math.cos(φ *= d3_radians)
              , x = cosφ * Math.cos(λ)
              , y = cosφ * Math.sin(λ)
              , z = Math.sin(φ)
              , w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
            d3_geo_centroidW1 += w;
            d3_geo_centroidX1 += w * (x0 + (x0 = x));
            d3_geo_centroidY1 += w * (y0 + (y0 = y));
            d3_geo_centroidZ1 += w * (z0 + (z0 = z));
            d3_geo_centroidPointXYZ(x0, y0, z0);
        }
    }
    function d3_geo_centroidLineEnd() {
        d3_geo_centroid.point = d3_geo_centroidPoint;
    }
    function d3_geo_centroidRingStart() {
        var λ00, φ00, x0, y0, z0;
        d3_geo_centroid.point = function(λ, φ) {
            λ00 = λ,
            φ00 = φ;
            d3_geo_centroid.point = nextPoint;
            λ *= d3_radians;
            var cosφ = Math.cos(φ *= d3_radians);
            x0 = cosφ * Math.cos(λ);
            y0 = cosφ * Math.sin(λ);
            z0 = Math.sin(φ);
            d3_geo_centroidPointXYZ(x0, y0, z0);
        }
        ;
        d3_geo_centroid.lineEnd = function() {
            nextPoint(λ00, φ00);
            d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;
            d3_geo_centroid.point = d3_geo_centroidPoint;
        }
        ;
        function nextPoint(λ, φ) {
            λ *= d3_radians;
            var cosφ = Math.cos(φ *= d3_radians)
              , x = cosφ * Math.cos(λ)
              , y = cosφ * Math.sin(λ)
              , z = Math.sin(φ)
              , cx = y0 * z - z0 * y
              , cy = z0 * x - x0 * z
              , cz = x0 * y - y0 * x
              , m = Math.sqrt(cx * cx + cy * cy + cz * cz)
              , u = x0 * x + y0 * y + z0 * z
              , v = m && -d3_acos(u) / m
              , w = Math.atan2(m, u);
            d3_geo_centroidX2 += v * cx;
            d3_geo_centroidY2 += v * cy;
            d3_geo_centroidZ2 += v * cz;
            d3_geo_centroidW1 += w;
            d3_geo_centroidX1 += w * (x0 + (x0 = x));
            d3_geo_centroidY1 += w * (y0 + (y0 = y));
            d3_geo_centroidZ1 += w * (z0 + (z0 = z));
            d3_geo_centroidPointXYZ(x0, y0, z0);
        }
    }
    function d3_geo_compose(a, b) {
        function compose(x, y) {
            return x = a(x, y),
            b(x[0], x[1]);
        }
        if (a.invert && b.invert)
            compose.invert = function(x, y) {
                return x = b.invert(x, y),
                x && a.invert(x[0], x[1]);
            }
            ;
        return compose;
    }
    function d3_true() {
        return true;
    }
    function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {
        var subject = []
          , clip = [];
        segments.forEach(function(segment) {
            if ((n = segment.length - 1) <= 0)
                return;
            var n, p0 = segment[0], p1 = segment[n];
            if (d3_geo_sphericalEqual(p0, p1)) {
                listener.lineStart();
                for (var i = 0; i < n; ++i)
                    listener.point((p0 = segment[i])[0], p0[1]);
                listener.lineEnd();
                return;
            }
            var a = new d3_geo_clipPolygonIntersection(p0,segment,null,true)
              , b = new d3_geo_clipPolygonIntersection(p0,null,a,false);
            a.o = b;
            subject.push(a);
            clip.push(b);
            a = new d3_geo_clipPolygonIntersection(p1,segment,null,false);
            b = new d3_geo_clipPolygonIntersection(p1,null,a,true);
            a.o = b;
            subject.push(a);
            clip.push(b);
        });
        clip.sort(compare);
        d3_geo_clipPolygonLinkCircular(subject);
        d3_geo_clipPolygonLinkCircular(clip);
        if (!subject.length)
            return;
        for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {
            clip[i].e = entry = !entry;
        }
        var start = subject[0], points, point;
        while (1) {
            var current = start
              , isSubject = true;
            while (current.v)
                if ((current = current.n) === start)
                    return;
            points = current.z;
            listener.lineStart();
            do {
                current.v = current.o.v = true;
                if (current.e) {
                    if (isSubject) {
                        for (var i = 0, n = points.length; i < n; ++i)
                            listener.point((point = points[i])[0], point[1]);
                    } else {
                        interpolate(current.x, current.n.x, 1, listener);
                    }
                    current = current.n;
                } else {
                    if (isSubject) {
                        points = current.p.z;
                        for (var i = points.length - 1; i >= 0; --i)
                            listener.point((point = points[i])[0], point[1]);
                    } else {
                        interpolate(current.x, current.p.x, -1, listener);
                    }
                    current = current.p;
                }
                current = current.o;
                points = current.z;
                isSubject = !isSubject;
            } while (!current.v);
            listener.lineEnd();
        }
    }
    function d3_geo_clipPolygonLinkCircular(array) {
        if (!(n = array.length))
            return;
        var n, i = 0, a = array[0], b;
        while (++i < n) {
            a.n = b = array[i];
            b.p = a;
            a = b;
        }
        a.n = b = array[0];
        b.p = a;
    }
    function d3_geo_clipPolygonIntersection(point, points, other, entry) {
        this.x = point;
        this.z = points;
        this.o = other;
        this.e = entry;
        this.v = false;
        this.n = this.p = null;
    }
    function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {
        return function(rotate, listener) {
            var line = clipLine(listener)
              , rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);
            var clip = {
                point: point,
                lineStart: lineStart,
                lineEnd: lineEnd,
                polygonStart: function() {
                    clip.point = pointRing;
                    clip.lineStart = ringStart;
                    clip.lineEnd = ringEnd;
                    segments = [];
                    polygon = [];
                },
                polygonEnd: function() {
                    clip.point = point;
                    clip.lineStart = lineStart;
                    clip.lineEnd = lineEnd;
                    segments = d3.merge(segments);
                    var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);
                    if (segments.length) {
                        if (!polygonStarted)
                            listener.polygonStart(),
                            polygonStarted = true;
                        d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);
                    } else if (clipStartInside) {
                        if (!polygonStarted)
                            listener.polygonStart(),
                            polygonStarted = true;
                        listener.lineStart();
                        interpolate(null, null, 1, listener);
                        listener.lineEnd();
                    }
                    if (polygonStarted)
                        listener.polygonEnd(),
                        polygonStarted = false;
                    segments = polygon = null;
                },
                sphere: function() {
                    listener.polygonStart();
                    listener.lineStart();
                    interpolate(null, null, 1, listener);
                    listener.lineEnd();
                    listener.polygonEnd();
                }
            };
            function point(λ, φ) {
                var point = rotate(λ, φ);
                if (pointVisible(λ = point[0], φ = point[1]))
                    listener.point(λ, φ);
            }
            function pointLine(λ, φ) {
                var point = rotate(λ, φ);
                line.point(point[0], point[1]);
            }
            function lineStart() {
                clip.point = pointLine;
                line.lineStart();
            }
            function lineEnd() {
                clip.point = point;
                line.lineEnd();
            }
            var segments;
            var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;
            function pointRing(λ, φ) {
                ring.push([λ, φ]);
                var point = rotate(λ, φ);
                ringListener.point(point[0], point[1]);
            }
            function ringStart() {
                ringListener.lineStart();
                ring = [];
            }
            function ringEnd() {
                pointRing(ring[0][0], ring[0][1]);
                ringListener.lineEnd();
                var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;
                ring.pop();
                polygon.push(ring);
                ring = null;
                if (!n)
                    return;
                if (clean & 1) {
                    segment = ringSegments[0];
                    var n = segment.length - 1, i = -1, point;
                    if (n > 0) {
                        if (!polygonStarted)
                            listener.polygonStart(),
                            polygonStarted = true;
                        listener.lineStart();
                        while (++i < n)
                            listener.point((point = segment[i])[0], point[1]);
                        listener.lineEnd();
                    }
                    return;
                }
                if (n > 1 && clean & 2)
                    ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
                segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));
            }
            return clip;
        }
        ;
    }
    function d3_geo_clipSegmentLength1(segment) {
        return segment.length > 1;
    }
    function d3_geo_clipBufferListener() {
        var lines = [], line;
        return {
            lineStart: function() {
                lines.push(line = []);
            },
            point: function(λ, φ) {
                line.push([λ, φ]);
            },
            lineEnd: d3_noop,
            buffer: function() {
                var buffer = lines;
                lines = [];
                line = null;
                return buffer;
            },
            rejoin: function() {
                if (lines.length > 1)
                    lines.push(lines.pop().concat(lines.shift()));
            }
        };
    }
    function d3_geo_clipSort(a, b) {
        return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);
    }
    var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [-π, -π / 2]);
    function d3_geo_clipAntimeridianLine(listener) {
        var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;
        return {
            lineStart: function() {
                listener.lineStart();
                clean = 1;
            },
            point: function(λ1, φ1) {
                var sλ1 = λ1 > 0 ? π : -π
                  , dλ = abs(λ1 - λ0);
                if (abs(dλ - π) < ε) {
                    listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);
                    listener.point(sλ0, φ0);
                    listener.lineEnd();
                    listener.lineStart();
                    listener.point(sλ1, φ0);
                    listener.point(λ1, φ0);
                    clean = 0;
                } else if (sλ0 !== sλ1 && dλ >= π) {
                    if (abs(λ0 - sλ0) < ε)
                        λ0 -= sλ0 * ε;
                    if (abs(λ1 - sλ1) < ε)
                        λ1 -= sλ1 * ε;
                    φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);
                    listener.point(sλ0, φ0);
                    listener.lineEnd();
                    listener.lineStart();
                    listener.point(sλ1, φ0);
                    clean = 0;
                }
                listener.point(λ0 = λ1, φ0 = φ1);
                sλ0 = sλ1;
            },
            lineEnd: function() {
                listener.lineEnd();
                λ0 = φ0 = NaN;
            },
            clean: function() {
                return 2 - clean;
            }
        };
    }
    function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {
        var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);
        return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;
    }
    function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {
        var φ;
        if (from == null) {
            φ = direction * halfπ;
            listener.point(-π, φ);
            listener.point(0, φ);
            listener.point(π, φ);
            listener.point(π, 0);
            listener.point(π, -φ);
            listener.point(0, -φ);
            listener.point(-π, -φ);
            listener.point(-π, 0);
            listener.point(-π, φ);
        } else if (abs(from[0] - to[0]) > ε) {
            var s = from[0] < to[0] ? π : -π;
            φ = direction * s / 2;
            listener.point(-s, φ);
            listener.point(0, φ);
            listener.point(s, φ);
        } else {
            listener.point(to[0], to[1]);
        }
    }
    function d3_geo_pointInPolygon(point, polygon) {
        var meridian = point[0]
          , parallel = point[1]
          , meridianNormal = [Math.sin(meridian), -Math.cos(meridian), 0]
          , polarAngle = 0
          , winding = 0;
        d3_geo_areaRingSum.reset();
        for (var i = 0, n = polygon.length; i < n; ++i) {
            var ring = polygon[i]
              , m = ring.length;
            if (!m)
                continue;
            var point0 = ring[0]
              , λ0 = point0[0]
              , φ0 = point0[1] / 2 + π / 4
              , sinφ0 = Math.sin(φ0)
              , cosφ0 = Math.cos(φ0)
              , j = 1;
            while (true) {
                if (j === m)
                    j = 0;
                point = ring[j];
                var λ = point[0]
                  , φ = point[1] / 2 + π / 4
                  , sinφ = Math.sin(φ)
                  , cosφ = Math.cos(φ)
                  , dλ = λ - λ0
                  , sdλ = dλ >= 0 ? 1 : -1
                  , adλ = sdλ * dλ
                  , antimeridian = adλ > π
                  , k = sinφ0 * sinφ;
                d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));
                polarAngle += antimeridian ? dλ + sdλ * τ : dλ;
                if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {
                    var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));
                    d3_geo_cartesianNormalize(arc);
                    var intersection = d3_geo_cartesianCross(meridianNormal, arc);
                    d3_geo_cartesianNormalize(intersection);
                    var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);
                    if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {
                        winding += antimeridian ^ dλ >= 0 ? 1 : -1;
                    }
                }
                if (!j++)
                    break;
                λ0 = λ,
                sinφ0 = sinφ,
                cosφ0 = cosφ,
                point0 = point;
            }
        }
        return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;
    }
    function d3_geo_clipCircle(radius) {
        var cr = Math.cos(radius)
          , smallRadius = cr > 0
          , notHemisphere = abs(cr) > ε
          , interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);
        return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-π, radius - π]);
        function visible(λ, φ) {
            return Math.cos(λ) * Math.cos(φ) > cr;
        }
        function clipLine(listener) {
            var point0, c0, v0, v00, clean;
            return {
                lineStart: function() {
                    v00 = v0 = false;
                    clean = 1;
                },
                point: function(λ, φ) {
                    var point1 = [λ, φ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;
                    if (!point0 && (v00 = v0 = v))
                        listener.lineStart();
                    if (v !== v0) {
                        point2 = intersect(point0, point1);
                        if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {
                            point1[0] += ε;
                            point1[1] += ε;
                            v = visible(point1[0], point1[1]);
                        }
                    }
                    if (v !== v0) {
                        clean = 0;
                        if (v) {
                            listener.lineStart();
                            point2 = intersect(point1, point0);
                            listener.point(point2[0], point2[1]);
                        } else {
                            point2 = intersect(point0, point1);
                            listener.point(point2[0], point2[1]);
                            listener.lineEnd();
                        }
                        point0 = point2;
                    } else if (notHemisphere && point0 && smallRadius ^ v) {
                        var t;
                        if (!(c & c0) && (t = intersect(point1, point0, true))) {
                            clean = 0;
                            if (smallRadius) {
                                listener.lineStart();
                                listener.point(t[0][0], t[0][1]);
                                listener.point(t[1][0], t[1][1]);
                                listener.lineEnd();
                            } else {
                                listener.point(t[1][0], t[1][1]);
                                listener.lineEnd();
                                listener.lineStart();
                                listener.point(t[0][0], t[0][1]);
                            }
                        }
                    }
                    if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {
                        listener.point(point1[0], point1[1]);
                    }
                    point0 = point1,
                    v0 = v,
                    c0 = c;
                },
                lineEnd: function() {
                    if (v0)
                        listener.lineEnd();
                    point0 = null;
                },
                clean: function() {
                    return clean | (v00 && v0) << 1;
                }
            };
        }
        function intersect(a, b, two) {
            var pa = d3_geo_cartesian(a)
              , pb = d3_geo_cartesian(b);
            var n1 = [1, 0, 0]
              , n2 = d3_geo_cartesianCross(pa, pb)
              , n2n2 = d3_geo_cartesianDot(n2, n2)
              , n1n2 = n2[0]
              , determinant = n2n2 - n1n2 * n1n2;
            if (!determinant)
                return !two && a;
            var c1 = cr * n2n2 / determinant
              , c2 = -cr * n1n2 / determinant
              , n1xn2 = d3_geo_cartesianCross(n1, n2)
              , A = d3_geo_cartesianScale(n1, c1)
              , B = d3_geo_cartesianScale(n2, c2);
            d3_geo_cartesianAdd(A, B);
            var u = n1xn2
              , w = d3_geo_cartesianDot(A, u)
              , uu = d3_geo_cartesianDot(u, u)
              , t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);
            if (t2 < 0)
                return;
            var t = Math.sqrt(t2)
              , q = d3_geo_cartesianScale(u, (-w - t) / uu);
            d3_geo_cartesianAdd(q, A);
            q = d3_geo_spherical(q);
            if (!two)
                return q;
            var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;
            if (λ1 < λ0)
                z = λ0,
                λ0 = λ1,
                λ1 = z;
            var δλ = λ1 - λ0
              , polar = abs(δλ - π) < ε
              , meridian = polar || δλ < ε;
            if (!polar && φ1 < φ0)
                z = φ0,
                φ0 = φ1,
                φ1 = z;
            if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {
                var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);
                d3_geo_cartesianAdd(q1, A);
                return [q, d3_geo_spherical(q1)];
            }
        }
        function code(λ, φ) {
            var r = smallRadius ? radius : π - radius
              , code = 0;
            if (λ < -r)
                code |= 1;
            else if (λ > r)
                code |= 2;
            if (φ < -r)
                code |= 4;
            else if (φ > r)
                code |= 8;
            return code;
        }
    }
    function d3_geom_clipLine(x0, y0, x1, y1) {
        return function(line) {
            var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;
            r = x0 - ax;
            if (!dx && r > 0)
                return;
            r /= dx;
            if (dx < 0) {
                if (r < t0)
                    return;
                if (r < t1)
                    t1 = r;
            } else if (dx > 0) {
                if (r > t1)
                    return;
                if (r > t0)
                    t0 = r;
            }
            r = x1 - ax;
            if (!dx && r < 0)
                return;
            r /= dx;
            if (dx < 0) {
                if (r > t1)
                    return;
                if (r > t0)
                    t0 = r;
            } else if (dx > 0) {
                if (r < t0)
                    return;
                if (r < t1)
                    t1 = r;
            }
            r = y0 - ay;
            if (!dy && r > 0)
                return;
            r /= dy;
            if (dy < 0) {
                if (r < t0)
                    return;
                if (r < t1)
                    t1 = r;
            } else if (dy > 0) {
                if (r > t1)
                    return;
                if (r > t0)
                    t0 = r;
            }
            r = y1 - ay;
            if (!dy && r < 0)
                return;
            r /= dy;
            if (dy < 0) {
                if (r > t1)
                    return;
                if (r > t0)
                    t0 = r;
            } else if (dy > 0) {
                if (r < t0)
                    return;
                if (r < t1)
                    t1 = r;
            }
            if (t0 > 0)
                line.a = {
                    x: ax + t0 * dx,
                    y: ay + t0 * dy
                };
            if (t1 < 1)
                line.b = {
                    x: ax + t1 * dx,
                    y: ay + t1 * dy
                };
            return line;
        }
        ;
    }
    var d3_geo_clipExtentMAX = 1e9;
    d3.geo.clipExtent = function() {
        var x0, y0, x1, y1, stream, clip, clipExtent = {
            stream: function(output) {
                if (stream)
                    stream.valid = false;
                stream = clip(output);
                stream.valid = true;
                return stream;
            },
            extent: function(_) {
                if (!arguments.length)
                    return [[x0, y0], [x1, y1]];
                clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);
                if (stream)
                    stream.valid = false,
                    stream = null;
                return clipExtent;
            }
        };
        return clipExtent.extent([[0, 0], [960, 500]]);
    }
    ;
    function d3_geo_clipExtent(x0, y0, x1, y1) {
        return function(listener) {
            var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;
            var clip = {
                point: point,
                lineStart: lineStart,
                lineEnd: lineEnd,
                polygonStart: function() {
                    listener = bufferListener;
                    segments = [];
                    polygon = [];
                    clean = true;
                },
                polygonEnd: function() {
                    listener = listener_;
                    segments = d3.merge(segments);
                    var clipStartInside = insidePolygon([x0, y1])
                      , inside = clean && clipStartInside
                      , visible = segments.length;
                    if (inside || visible) {
                        listener.polygonStart();
                        if (inside) {
                            listener.lineStart();
                            interpolate(null, null, 1, listener);
                            listener.lineEnd();
                        }
                        if (visible) {
                            d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);
                        }
                        listener.polygonEnd();
                    }
                    segments = polygon = ring = null;
                }
            };
            function insidePolygon(p) {
                var wn = 0
                  , n = polygon.length
                  , y = p[1];
                for (var i = 0; i < n; ++i) {
                    for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {
                        b = v[j];
                        if (a[1] <= y) {
                            if (b[1] > y && d3_cross2d(a, b, p) > 0)
                                ++wn;
                        } else {
                            if (b[1] <= y && d3_cross2d(a, b, p) < 0)
                                --wn;
                        }
                        a = b;
                    }
                }
                return wn !== 0;
            }
            function interpolate(from, to, direction, listener) {
                var a = 0
                  , a1 = 0;
                if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {
                    do {
                        listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
                    } while ((a = (a + direction + 4) % 4) !== a1);
                } else {
                    listener.point(to[0], to[1]);
                }
            }
            function pointVisible(x, y) {
                return x0 <= x && x <= x1 && y0 <= y && y <= y1;
            }
            function point(x, y) {
                if (pointVisible(x, y))
                    listener.point(x, y);
            }
            var x__, y__, v__, x_, y_, v_, first, clean;
            function lineStart() {
                clip.point = linePoint;
                if (polygon)
                    polygon.push(ring = []);
                first = true;
                v_ = false;
                x_ = y_ = NaN;
            }
            function lineEnd() {
                if (segments) {
                    linePoint(x__, y__);
                    if (v__ && v_)
                        bufferListener.rejoin();
                    segments.push(bufferListener.buffer());
                }
                clip.point = point;
                if (v_)
                    listener.lineEnd();
            }
            function linePoint(x, y) {
                x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));
                y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));
                var v = pointVisible(x, y);
                if (polygon)
                    ring.push([x, y]);
                if (first) {
                    x__ = x,
                    y__ = y,
                    v__ = v;
                    first = false;
                    if (v) {
                        listener.lineStart();
                        listener.point(x, y);
                    }
                } else {
                    if (v && v_)
                        listener.point(x, y);
                    else {
                        var l = {
                            a: {
                                x: x_,
                                y: y_
                            },
                            b: {
                                x: x,
                                y: y
                            }
                        };
                        if (clipLine(l)) {
                            if (!v_) {
                                listener.lineStart();
                                listener.point(l.a.x, l.a.y);
                            }
                            listener.point(l.b.x, l.b.y);
                            if (!v)
                                listener.lineEnd();
                            clean = false;
                        } else if (v) {
                            listener.lineStart();
                            listener.point(x, y);
                            clean = false;
                        }
                    }
                }
                x_ = x,
                y_ = y,
                v_ = v;
            }
            return clip;
        }
        ;
        function corner(p, direction) {
            return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;
        }
        function compare(a, b) {
            return comparePoints(a.x, b.x);
        }
        function comparePoints(a, b) {
            var ca = corner(a, 1)
              , cb = corner(b, 1);
            return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
        }
    }
    function d3_geo_conic(projectAt) {
        var φ0 = 0
          , φ1 = π / 3
          , m = d3_geo_projectionMutator(projectAt)
          , p = m(φ0, φ1);
        p.parallels = function(_) {
            if (!arguments.length)
                return [φ0 / π * 180, φ1 / π * 180];
            return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);
        }
        ;
        return p;
    }
    function d3_geo_conicEqualArea(φ0, φ1) {
        var sinφ0 = Math.sin(φ0)
          , n = (sinφ0 + Math.sin(φ1)) / 2
          , C = 1 + sinφ0 * (2 * n - sinφ0)
          , ρ0 = Math.sqrt(C) / n;
        function forward(λ, φ) {
            var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;
            return [ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ)];
        }
        forward.invert = function(x, y) {
            var ρ0_y = ρ0 - y;
            return [Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n))];
        }
        ;
        return forward;
    }
    (d3.geo.conicEqualArea = function() {
        return d3_geo_conic(d3_geo_conicEqualArea);
    }
    ).raw = d3_geo_conicEqualArea;
    d3.geo.albers = function() {
        return d3.geo.conicEqualArea().rotate([96, 0]).center([-.6, 38.7]).parallels([29.5, 45.5]).scale(1070);
    }
    ;
    d3.geo.albersUsa = function() {
        var lower48 = d3.geo.albers();
        var alaska = d3.geo.conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]);
        var hawaii = d3.geo.conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]);
        var point, pointStream = {
            point: function(x, y) {
                point = [x, y];
            }
        }, lower48Point, alaskaPoint, hawaiiPoint;
        function albersUsa(coordinates) {
            var x = coordinates[0]
              , y = coordinates[1];
            point = null;
            (lower48Point(x, y),
            point) || (alaskaPoint(x, y),
            point) || hawaiiPoint(x, y);
            return point;
        }
        albersUsa.invert = function(coordinates) {
            var k = lower48.scale()
              , t = lower48.translate()
              , x = (coordinates[0] - t[0]) / k
              , y = (coordinates[1] - t[1]) / k;
            return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);
        }
        ;
        albersUsa.stream = function(stream) {
            var lower48Stream = lower48.stream(stream)
              , alaskaStream = alaska.stream(stream)
              , hawaiiStream = hawaii.stream(stream);
            return {
                point: function(x, y) {
                    lower48Stream.point(x, y);
                    alaskaStream.point(x, y);
                    hawaiiStream.point(x, y);
                },
                sphere: function() {
                    lower48Stream.sphere();
                    alaskaStream.sphere();
                    hawaiiStream.sphere();
                },
                lineStart: function() {
                    lower48Stream.lineStart();
                    alaskaStream.lineStart();
                    hawaiiStream.lineStart();
                },
                lineEnd: function() {
                    lower48Stream.lineEnd();
                    alaskaStream.lineEnd();
                    hawaiiStream.lineEnd();
                },
                polygonStart: function() {
                    lower48Stream.polygonStart();
                    alaskaStream.polygonStart();
                    hawaiiStream.polygonStart();
                },
                polygonEnd: function() {
                    lower48Stream.polygonEnd();
                    alaskaStream.polygonEnd();
                    hawaiiStream.polygonEnd();
                }
            };
        }
        ;
        albersUsa.precision = function(_) {
            if (!arguments.length)
                return lower48.precision();
            lower48.precision(_);
            alaska.precision(_);
            hawaii.precision(_);
            return albersUsa;
        }
        ;
        albersUsa.scale = function(_) {
            if (!arguments.length)
                return lower48.scale();
            lower48.scale(_);
            alaska.scale(_ * .35);
            hawaii.scale(_);
            return albersUsa.translate(lower48.translate());
        }
        ;
        albersUsa.translate = function(_) {
            if (!arguments.length)
                return lower48.translate();
            var k = lower48.scale()
              , x = +_[0]
              , y = +_[1];
            lower48Point = lower48.translate(_).clipExtent([[x - .455 * k, y - .238 * k], [x + .455 * k, y + .238 * k]]).stream(pointStream).point;
            alaskaPoint = alaska.translate([x - .307 * k, y + .201 * k]).clipExtent([[x - .425 * k + ε, y + .12 * k + ε], [x - .214 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;
            hawaiiPoint = hawaii.translate([x - .205 * k, y + .212 * k]).clipExtent([[x - .214 * k + ε, y + .166 * k + ε], [x - .115 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;
            return albersUsa;
        }
        ;
        return albersUsa.scale(1070);
    }
    ;
    var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {
        point: d3_noop,
        lineStart: d3_noop,
        lineEnd: d3_noop,
        polygonStart: function() {
            d3_geo_pathAreaPolygon = 0;
            d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;
        },
        polygonEnd: function() {
            d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;
            d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);
        }
    };
    function d3_geo_pathAreaRingStart() {
        var x00, y00, x0, y0;
        d3_geo_pathArea.point = function(x, y) {
            d3_geo_pathArea.point = nextPoint;
            x00 = x0 = x,
            y00 = y0 = y;
        }
        ;
        function nextPoint(x, y) {
            d3_geo_pathAreaPolygon += y0 * x - x0 * y;
            x0 = x,
            y0 = y;
        }
        d3_geo_pathArea.lineEnd = function() {
            nextPoint(x00, y00);
        }
        ;
    }
    var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;
    var d3_geo_pathBounds = {
        point: d3_geo_pathBoundsPoint,
        lineStart: d3_noop,
        lineEnd: d3_noop,
        polygonStart: d3_noop,
        polygonEnd: d3_noop
    };
    function d3_geo_pathBoundsPoint(x, y) {
        if (x < d3_geo_pathBoundsX0)
            d3_geo_pathBoundsX0 = x;
        if (x > d3_geo_pathBoundsX1)
            d3_geo_pathBoundsX1 = x;
        if (y < d3_geo_pathBoundsY0)
            d3_geo_pathBoundsY0 = y;
        if (y > d3_geo_pathBoundsY1)
            d3_geo_pathBoundsY1 = y;
    }
    function d3_geo_pathBuffer() {
        var pointCircle = d3_geo_pathBufferCircle(4.5)
          , buffer = [];
        var stream = {
            point: point,
            lineStart: function() {
                stream.point = pointLineStart;
            },
            lineEnd: lineEnd,
            polygonStart: function() {
                stream.lineEnd = lineEndPolygon;
            },
            polygonEnd: function() {
                stream.lineEnd = lineEnd;
                stream.point = point;
            },
            pointRadius: function(_) {
                pointCircle = d3_geo_pathBufferCircle(_);
                return stream;
            },
            result: function() {
                if (buffer.length) {
                    var result = buffer.join("");
                    buffer = [];
                    return result;
                }
            }
        };
        function point(x, y) {
            buffer.push("M", x, ",", y, pointCircle);
        }
        function pointLineStart(x, y) {
            buffer.push("M", x, ",", y);
            stream.point = pointLine;
        }
        function pointLine(x, y) {
            buffer.push("L", x, ",", y);
        }
        function lineEnd() {
            stream.point = point;
        }
        function lineEndPolygon() {
            buffer.push("Z");
        }
        return stream;
    }
    function d3_geo_pathBufferCircle(radius) {
        return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
    }
    var d3_geo_pathCentroid = {
        point: d3_geo_pathCentroidPoint,
        lineStart: d3_geo_pathCentroidLineStart,
        lineEnd: d3_geo_pathCentroidLineEnd,
        polygonStart: function() {
            d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;
        },
        polygonEnd: function() {
            d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
            d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;
            d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;
        }
    };
    function d3_geo_pathCentroidPoint(x, y) {
        d3_geo_centroidX0 += x;
        d3_geo_centroidY0 += y;
        ++d3_geo_centroidZ0;
    }
    function d3_geo_pathCentroidLineStart() {
        var x0, y0;
        d3_geo_pathCentroid.point = function(x, y) {
            d3_geo_pathCentroid.point = nextPoint;
            d3_geo_pathCentroidPoint(x0 = x, y0 = y);
        }
        ;
        function nextPoint(x, y) {
            var dx = x - x0
              , dy = y - y0
              , z = Math.sqrt(dx * dx + dy * dy);
            d3_geo_centroidX1 += z * (x0 + x) / 2;
            d3_geo_centroidY1 += z * (y0 + y) / 2;
            d3_geo_centroidZ1 += z;
            d3_geo_pathCentroidPoint(x0 = x, y0 = y);
        }
    }
    function d3_geo_pathCentroidLineEnd() {
        d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
    }
    function d3_geo_pathCentroidRingStart() {
        var x00, y00, x0, y0;
        d3_geo_pathCentroid.point = function(x, y) {
            d3_geo_pathCentroid.point = nextPoint;
            d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);
        }
        ;
        function nextPoint(x, y) {
            var dx = x - x0
              , dy = y - y0
              , z = Math.sqrt(dx * dx + dy * dy);
            d3_geo_centroidX1 += z * (x0 + x) / 2;
            d3_geo_centroidY1 += z * (y0 + y) / 2;
            d3_geo_centroidZ1 += z;
            z = y0 * x - x0 * y;
            d3_geo_centroidX2 += z * (x0 + x);
            d3_geo_centroidY2 += z * (y0 + y);
            d3_geo_centroidZ2 += z * 3;
            d3_geo_pathCentroidPoint(x0 = x, y0 = y);
        }
        d3_geo_pathCentroid.lineEnd = function() {
            nextPoint(x00, y00);
        }
        ;
    }
    function d3_geo_pathContext(context) {
        var pointRadius = 4.5;
        var stream = {
            point: point,
            lineStart: function() {
                stream.point = pointLineStart;
            },
            lineEnd: lineEnd,
            polygonStart: function() {
                stream.lineEnd = lineEndPolygon;
            },
            polygonEnd: function() {
                stream.lineEnd = lineEnd;
                stream.point = point;
            },
            pointRadius: function(_) {
                pointRadius = _;
                return stream;
            },
            result: d3_noop
        };
        function point(x, y) {
            context.moveTo(x + pointRadius, y);
            context.arc(x, y, pointRadius, 0, τ);
        }
        function pointLineStart(x, y) {
            context.moveTo(x, y);
            stream.point = pointLine;
        }
        function pointLine(x, y) {
            context.lineTo(x, y);
        }
        function lineEnd() {
            stream.point = point;
        }
        function lineEndPolygon() {
            context.closePath();
        }
        return stream;
    }
    function d3_geo_resample(project) {
        var δ2 = .5
          , cosMinDistance = Math.cos(30 * d3_radians)
          , maxDepth = 16;
        function resample(stream) {
            return (maxDepth ? resampleRecursive : resampleNone)(stream);
        }
        function resampleNone(stream) {
            return d3_geo_transformPoint(stream, function(x, y) {
                x = project(x, y);
                stream.point(x[0], x[1]);
            });
        }
        function resampleRecursive(stream) {
            var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;
            var resample = {
                point: point,
                lineStart: lineStart,
                lineEnd: lineEnd,
                polygonStart: function() {
                    stream.polygonStart();
                    resample.lineStart = ringStart;
                },
                polygonEnd: function() {
                    stream.polygonEnd();
                    resample.lineStart = lineStart;
                }
            };
            function point(x, y) {
                x = project(x, y);
                stream.point(x[0], x[1]);
            }
            function lineStart() {
                x0 = NaN;
                resample.point = linePoint;
                stream.lineStart();
            }
            function linePoint(λ, φ) {
                var c = d3_geo_cartesian([λ, φ])
                  , p = project(λ, φ);
                resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
                stream.point(x0, y0);
            }
            function lineEnd() {
                resample.point = point;
                stream.lineEnd();
            }
            function ringStart() {
                lineStart();
                resample.point = ringPoint;
                resample.lineEnd = ringEnd;
            }
            function ringPoint(λ, φ) {
                linePoint(λ00 = λ, φ00 = φ),
                x00 = x0,
                y00 = y0,
                a00 = a0,
                b00 = b0,
                c00 = c0;
                resample.point = linePoint;
            }
            function ringEnd() {
                resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);
                resample.lineEnd = lineEnd;
                lineEnd();
            }
            return resample;
        }
        function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {
            var dx = x1 - x0
              , dy = y1 - y0
              , d2 = dx * dx + dy * dy;
            if (d2 > 4 * δ2 && depth--) {
                var a = a0 + a1
                  , b = b0 + b1
                  , c = c0 + c1
                  , m = Math.sqrt(a * a + b * b + c * c)
                  , φ2 = Math.asin(c /= m)
                  , λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a)
                  , p = project(λ2, φ2)
                  , x2 = p[0]
                  , y2 = p[1]
                  , dx2 = x2 - x0
                  , dy2 = y2 - y0
                  , dz = dy * dx2 - dx * dy2;
                if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
                    resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);
                    stream.point(x2, y2);
                    resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);
                }
            }
        }
        resample.precision = function(_) {
            if (!arguments.length)
                return Math.sqrt(δ2);
            maxDepth = (δ2 = _ * _) > 0 && 16;
            return resample;
        }
        ;
        return resample;
    }
    d3.geo.path = function() {
        var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;
        function path(object) {
            if (object) {
                if (typeof pointRadius === "function")
                    contextStream.pointRadius(+pointRadius.apply(this, arguments));
                if (!cacheStream || !cacheStream.valid)
                    cacheStream = projectStream(contextStream);
                d3.geo.stream(object, cacheStream);
            }
            return contextStream.result();
        }
        path.area = function(object) {
            d3_geo_pathAreaSum = 0;
            d3.geo.stream(object, projectStream(d3_geo_pathArea));
            return d3_geo_pathAreaSum;
        }
        ;
        path.centroid = function(object) {
            d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
            d3.geo.stream(object, projectStream(d3_geo_pathCentroid));
            return d3_geo_centroidZ2 ? [d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2] : d3_geo_centroidZ1 ? [d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1] : d3_geo_centroidZ0 ? [d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0] : [NaN, NaN];
        }
        ;
        path.bounds = function(object) {
            d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);
            d3.geo.stream(object, projectStream(d3_geo_pathBounds));
            return [[d3_geo_pathBoundsX0, d3_geo_pathBoundsY0], [d3_geo_pathBoundsX1, d3_geo_pathBoundsY1]];
        }
        ;
        path.projection = function(_) {
            if (!arguments.length)
                return projection;
            projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;
            return reset();
        }
        ;
        path.context = function(_) {
            if (!arguments.length)
                return context;
            contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);
            if (typeof pointRadius !== "function")
                contextStream.pointRadius(pointRadius);
            return reset();
        }
        ;
        path.pointRadius = function(_) {
            if (!arguments.length)
                return pointRadius;
            pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_),
            +_);
            return path;
        }
        ;
        function reset() {
            cacheStream = null;
            return path;
        }
        return path.projection(d3.geo.albersUsa()).context(null);
    }
    ;
    function d3_geo_pathProjectStream(project) {
        var resample = d3_geo_resample(function(x, y) {
            return project([x * d3_degrees, y * d3_degrees]);
        });
        return function(stream) {
            return d3_geo_projectionRadians(resample(stream));
        }
        ;
    }
    d3.geo.transform = function(methods) {
        return {
            stream: function(stream) {
                var transform = new d3_geo_transform(stream);
                for (var k in methods)
                    transform[k] = methods[k];
                return transform;
            }
        };
    }
    ;
    function d3_geo_transform(stream) {
        this.stream = stream;
    }
    d3_geo_transform.prototype = {
        point: function(x, y) {
            this.stream.point(x, y);
        },
        sphere: function() {
            this.stream.sphere();
        },
        lineStart: function() {
            this.stream.lineStart();
        },
        lineEnd: function() {
            this.stream.lineEnd();
        },
        polygonStart: function() {
            this.stream.polygonStart();
        },
        polygonEnd: function() {
            this.stream.polygonEnd();
        }
    };
    function d3_geo_transformPoint(stream, point) {
        return {
            point: point,
            sphere: function() {
                stream.sphere();
            },
            lineStart: function() {
                stream.lineStart();
            },
            lineEnd: function() {
                stream.lineEnd();
            },
            polygonStart: function() {
                stream.polygonStart();
            },
            polygonEnd: function() {
                stream.polygonEnd();
            }
        };
    }
    d3.geo.projection = d3_geo_projection;
    d3.geo.projectionMutator = d3_geo_projectionMutator;
    function d3_geo_projection(project) {
        return d3_geo_projectionMutator(function() {
            return project;
        })();
    }
    function d3_geo_projectionMutator(projectAt) {
        var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {
            x = project(x, y);
            return [x[0] * k + δx, δy - x[1] * k];
        }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;
        function projection(point) {
            point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);
            return [point[0] * k + δx, δy - point[1] * k];
        }
        function invert(point) {
            point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);
            return point && [point[0] * d3_degrees, point[1] * d3_degrees];
        }
        projection.stream = function(output) {
            if (stream)
                stream.valid = false;
            stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));
            stream.valid = true;
            return stream;
        }
        ;
        projection.clipAngle = function(_) {
            if (!arguments.length)
                return clipAngle;
            preclip = _ == null ? (clipAngle = _,
            d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);
            return invalidate();
        }
        ;
        projection.clipExtent = function(_) {
            if (!arguments.length)
                return clipExtent;
            clipExtent = _;
            postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;
            return invalidate();
        }
        ;
        projection.scale = function(_) {
            if (!arguments.length)
                return k;
            k = +_;
            return reset();
        }
        ;
        projection.translate = function(_) {
            if (!arguments.length)
                return [x, y];
            x = +_[0];
            y = +_[1];
            return reset();
        }
        ;
        projection.center = function(_) {
            if (!arguments.length)
                return [λ * d3_degrees, φ * d3_degrees];
            λ = _[0] % 360 * d3_radians;
            φ = _[1] % 360 * d3_radians;
            return reset();
        }
        ;
        projection.rotate = function(_) {
            if (!arguments.length)
                return [δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees];
            δλ = _[0] % 360 * d3_radians;
            δφ = _[1] % 360 * d3_radians;
            δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;
            return reset();
        }
        ;
        d3.rebind(projection, projectResample, "precision");
        function reset() {
            projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);
            var center = project(λ, φ);
            δx = x - center[0] * k;
            δy = y + center[1] * k;
            return invalidate();
        }
        function invalidate() {
            if (stream)
                stream.valid = false,
                stream = null;
            return projection;
        }
        return function() {
            project = projectAt.apply(this, arguments);
            projection.invert = project.invert && invert;
            return reset();
        }
        ;
    }
    function d3_geo_projectionRadians(stream) {
        return d3_geo_transformPoint(stream, function(x, y) {
            stream.point(x * d3_radians, y * d3_radians);
        });
    }
    function d3_geo_equirectangular(λ, φ) {
        return [λ, φ];
    }
    (d3.geo.equirectangular = function() {
        return d3_geo_projection(d3_geo_equirectangular);
    }
    ).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;
    d3.geo.rotation = function(rotate) {
        rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);
        function forward(coordinates) {
            coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
            return coordinates[0] *= d3_degrees,
            coordinates[1] *= d3_degrees,
            coordinates;
        }
        forward.invert = function(coordinates) {
            coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
            return coordinates[0] *= d3_degrees,
            coordinates[1] *= d3_degrees,
            coordinates;
        }
        ;
        return forward;
    }
    ;
    function d3_geo_identityRotation(λ, φ) {
        return [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];
    }
    d3_geo_identityRotation.invert = d3_geo_equirectangular;
    function d3_geo_rotation(δλ, δφ, δγ) {
        return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;
    }
    function d3_geo_forwardRotationλ(δλ) {
        return function(λ, φ) {
            return λ += δλ,
            [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];
        }
        ;
    }
    function d3_geo_rotationλ(δλ) {
        var rotation = d3_geo_forwardRotationλ(δλ);
        rotation.invert = d3_geo_forwardRotationλ(-δλ);
        return rotation;
    }
    function d3_geo_rotationφγ(δφ, δγ) {
        var cosδφ = Math.cos(δφ)
          , sinδφ = Math.sin(δφ)
          , cosδγ = Math.cos(δγ)
          , sinδγ = Math.sin(δγ);
        function rotation(λ, φ) {
            var cosφ = Math.cos(φ)
              , x = Math.cos(λ) * cosφ
              , y = Math.sin(λ) * cosφ
              , z = Math.sin(φ)
              , k = z * cosδφ + x * sinδφ;
            return [Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ)];
        }
        rotation.invert = function(λ, φ) {
            var cosφ = Math.cos(φ)
              , x = Math.cos(λ) * cosφ
              , y = Math.sin(λ) * cosφ
              , z = Math.sin(φ)
              , k = z * cosδγ - y * sinδγ;
            return [Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ)];
        }
        ;
        return rotation;
    }
    d3.geo.circle = function() {
        var origin = [0, 0], angle, precision = 6, interpolate;
        function circle() {
            var center = typeof origin === "function" ? origin.apply(this, arguments) : origin
              , rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert
              , ring = [];
            interpolate(null, null, 1, {
                point: function(x, y) {
                    ring.push(x = rotate(x, y));
                    x[0] *= d3_degrees,
                    x[1] *= d3_degrees;
                }
            });
            return {
                type: "Polygon",
                coordinates: [ring]
            };
        }
        circle.origin = function(x) {
            if (!arguments.length)
                return origin;
            origin = x;
            return circle;
        }
        ;
        circle.angle = function(x) {
            if (!arguments.length)
                return angle;
            interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);
            return circle;
        }
        ;
        circle.precision = function(_) {
            if (!arguments.length)
                return precision;
            interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);
            return circle;
        }
        ;
        return circle.angle(90);
    }
    ;
    function d3_geo_circleInterpolate(radius, precision) {
        var cr = Math.cos(radius)
          , sr = Math.sin(radius);
        return function(from, to, direction, listener) {
            var step = direction * precision;
            if (from != null) {
                from = d3_geo_circleAngle(cr, from);
                to = d3_geo_circleAngle(cr, to);
                if (direction > 0 ? from < to : from > to)
                    from += direction * τ;
            } else {
                from = radius + direction * τ;
                to = radius - .5 * step;
            }
            for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {
                listener.point((point = d3_geo_spherical([cr, -sr * Math.cos(t), -sr * Math.sin(t)]))[0], point[1]);
            }
        }
        ;
    }
    function d3_geo_circleAngle(cr, point) {
        var a = d3_geo_cartesian(point);
        a[0] -= cr;
        d3_geo_cartesianNormalize(a);
        var angle = d3_acos(-a[1]);
        return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);
    }
    d3.geo.distance = function(a, b) {
        var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;
        return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);
    }
    ;
    d3.geo.graticule = function() {
        var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;
        function graticule() {
            return {
                type: "MultiLineString",
                coordinates: lines()
            };
        }
        function lines() {
            return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {
                return abs(x % DX) > ε;
            }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {
                return abs(y % DY) > ε;
            }).map(y));
        }
        graticule.lines = function() {
            return lines().map(function(coordinates) {
                return {
                    type: "LineString",
                    coordinates: coordinates
                };
            });
        }
        ;
        graticule.outline = function() {
            return {
                type: "Polygon",
                coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]
            };
        }
        ;
        graticule.extent = function(_) {
            if (!arguments.length)
                return graticule.minorExtent();
            return graticule.majorExtent(_).minorExtent(_);
        }
        ;
        graticule.majorExtent = function(_) {
            if (!arguments.length)
                return [[X0, Y0], [X1, Y1]];
            X0 = +_[0][0],
            X1 = +_[1][0];
            Y0 = +_[0][1],
            Y1 = +_[1][1];
            if (X0 > X1)
                _ = X0,
                X0 = X1,
                X1 = _;
            if (Y0 > Y1)
                _ = Y0,
                Y0 = Y1,
                Y1 = _;
            return graticule.precision(precision);
        }
        ;
        graticule.minorExtent = function(_) {
            if (!arguments.length)
                return [[x0, y0], [x1, y1]];
            x0 = +_[0][0],
            x1 = +_[1][0];
            y0 = +_[0][1],
            y1 = +_[1][1];
            if (x0 > x1)
                _ = x0,
                x0 = x1,
                x1 = _;
            if (y0 > y1)
                _ = y0,
                y0 = y1,
                y1 = _;
            return graticule.precision(precision);
        }
        ;
        graticule.step = function(_) {
            if (!arguments.length)
                return graticule.minorStep();
            return graticule.majorStep(_).minorStep(_);
        }
        ;
        graticule.majorStep = function(_) {
            if (!arguments.length)
                return [DX, DY];
            DX = +_[0],
            DY = +_[1];
            return graticule;
        }
        ;
        graticule.minorStep = function(_) {
            if (!arguments.length)
                return [dx, dy];
            dx = +_[0],
            dy = +_[1];
            return graticule;
        }
        ;
        graticule.precision = function(_) {
            if (!arguments.length)
                return precision;
            precision = +_;
            x = d3_geo_graticuleX(y0, y1, 90);
            y = d3_geo_graticuleY(x0, x1, precision);
            X = d3_geo_graticuleX(Y0, Y1, 90);
            Y = d3_geo_graticuleY(X0, X1, precision);
            return graticule;
        }
        ;
        return graticule.majorExtent([[-180, -90 + ε], [180, 90 - ε]]).minorExtent([[-180, -80 - ε], [180, 80 + ε]]);
    }
    ;
    function d3_geo_graticuleX(y0, y1, dy) {
        var y = d3.range(y0, y1 - ε, dy).concat(y1);
        return function(x) {
            return y.map(function(y) {
                return [x, y];
            });
        }
        ;
    }
    function d3_geo_graticuleY(x0, x1, dx) {
        var x = d3.range(x0, x1 - ε, dx).concat(x1);
        return function(y) {
            return x.map(function(x) {
                return [x, y];
            });
        }
        ;
    }
    function d3_source(d) {
        return d.source;
    }
    function d3_target(d) {
        return d.target;
    }
    d3.geo.greatArc = function() {
        var source = d3_source, source_, target = d3_target, target_;
        function greatArc() {
            return {
                type: "LineString",
                coordinates: [source_ || source.apply(this, arguments), target_ || target.apply(this, arguments)]
            };
        }
        greatArc.distance = function() {
            return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));
        }
        ;
        greatArc.source = function(_) {
            if (!arguments.length)
                return source;
            source = _,
            source_ = typeof _ === "function" ? null : _;
            return greatArc;
        }
        ;
        greatArc.target = function(_) {
            if (!arguments.length)
                return target;
            target = _,
            target_ = typeof _ === "function" ? null : _;
            return greatArc;
        }
        ;
        greatArc.precision = function() {
            return arguments.length ? greatArc : 0;
        }
        ;
        return greatArc;
    }
    ;
    d3.geo.interpolate = function(source, target) {
        return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);
    }
    ;
    function d3_geo_interpolate(x0, y0, x1, y1) {
        var cy0 = Math.cos(y0)
          , sy0 = Math.sin(y0)
          , cy1 = Math.cos(y1)
          , sy1 = Math.sin(y1)
          , kx0 = cy0 * Math.cos(x0)
          , ky0 = cy0 * Math.sin(x0)
          , kx1 = cy1 * Math.cos(x1)
          , ky1 = cy1 * Math.sin(x1)
          , d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0)))
          , k = 1 / Math.sin(d);
        var interpolate = d ? function(t) {
            var B = Math.sin(t *= d) * k
              , A = Math.sin(d - t) * k
              , x = A * kx0 + B * kx1
              , y = A * ky0 + B * ky1
              , z = A * sy0 + B * sy1;
            return [Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees];
        }
        : function() {
            return [x0 * d3_degrees, y0 * d3_degrees];
        }
        ;
        interpolate.distance = d;
        return interpolate;
    }
    d3.geo.length = function(object) {
        d3_geo_lengthSum = 0;
        d3.geo.stream(object, d3_geo_length);
        return d3_geo_lengthSum;
    }
    ;
    var d3_geo_lengthSum;
    var d3_geo_length = {
        sphere: d3_noop,
        point: d3_noop,
        lineStart: d3_geo_lengthLineStart,
        lineEnd: d3_noop,
        polygonStart: d3_noop,
        polygonEnd: d3_noop
    };
    function d3_geo_lengthLineStart() {
        var λ0, sinφ0, cosφ0;
        d3_geo_length.point = function(λ, φ) {
            λ0 = λ * d3_radians,
            sinφ0 = Math.sin(φ *= d3_radians),
            cosφ0 = Math.cos(φ);
            d3_geo_length.point = nextPoint;
        }
        ;
        d3_geo_length.lineEnd = function() {
            d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;
        }
        ;
        function nextPoint(λ, φ) {
            var sinφ = Math.sin(φ *= d3_radians)
              , cosφ = Math.cos(φ)
              , t = abs((λ *= d3_radians) - λ0)
              , cosΔλ = Math.cos(t);
            d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);
            λ0 = λ,
            sinφ0 = sinφ,
            cosφ0 = cosφ;
        }
    }
    function d3_geo_azimuthal(scale, angle) {
        function azimuthal(λ, φ) {
            var cosλ = Math.cos(λ)
              , cosφ = Math.cos(φ)
              , k = scale(cosλ * cosφ);
            return [k * cosφ * Math.sin(λ), k * Math.sin(φ)];
        }
        azimuthal.invert = function(x, y) {
            var ρ = Math.sqrt(x * x + y * y)
              , c = angle(ρ)
              , sinc = Math.sin(c)
              , cosc = Math.cos(c);
            return [Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ)];
        }
        ;
        return azimuthal;
    }
    var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {
        return Math.sqrt(2 / (1 + cosλcosφ));
    }, function(ρ) {
        return 2 * Math.asin(ρ / 2);
    });
    (d3.geo.azimuthalEqualArea = function() {
        return d3_geo_projection(d3_geo_azimuthalEqualArea);
    }
    ).raw = d3_geo_azimuthalEqualArea;
    var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {
        var c = Math.acos(cosλcosφ);
        return c && c / Math.sin(c);
    }, d3_identity);
    (d3.geo.azimuthalEquidistant = function() {
        return d3_geo_projection(d3_geo_azimuthalEquidistant);
    }
    ).raw = d3_geo_azimuthalEquidistant;
    function d3_geo_conicConformal(φ0, φ1) {
        var cosφ0 = Math.cos(φ0)
          , t = function(φ) {
            return Math.tan(π / 4 + φ / 2);
        }
          , n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0))
          , F = cosφ0 * Math.pow(t(φ0), n) / n;
        if (!n)
            return d3_geo_mercator;
        function forward(λ, φ) {
            if (F > 0) {
                if (φ < -halfπ + ε)
                    φ = -halfπ + ε;
            } else {
                if (φ > halfπ - ε)
                    φ = halfπ - ε;
            }
            var ρ = F / Math.pow(t(φ), n);
            return [ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ)];
        }
        forward.invert = function(x, y) {
            var ρ0_y = F - y
              , ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);
            return [Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ];
        }
        ;
        return forward;
    }
    (d3.geo.conicConformal = function() {
        return d3_geo_conic(d3_geo_conicConformal);
    }
    ).raw = d3_geo_conicConformal;
    function d3_geo_conicEquidistant(φ0, φ1) {
        var cosφ0 = Math.cos(φ0)
          , n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0)
          , G = cosφ0 / n + φ0;
        if (abs(n) < ε)
            return d3_geo_equirectangular;
        function forward(λ, φ) {
            var ρ = G - φ;
            return [ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ)];
        }
        forward.invert = function(x, y) {
            var ρ0_y = G - y;
            return [Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y)];
        }
        ;
        return forward;
    }
    (d3.geo.conicEquidistant = function() {
        return d3_geo_conic(d3_geo_conicEquidistant);
    }
    ).raw = d3_geo_conicEquidistant;
    var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {
        return 1 / cosλcosφ;
    }, Math.atan);
    (d3.geo.gnomonic = function() {
        return d3_geo_projection(d3_geo_gnomonic);
    }
    ).raw = d3_geo_gnomonic;
    function d3_geo_mercator(λ, φ) {
        return [λ, Math.log(Math.tan(π / 4 + φ / 2))];
    }
    d3_geo_mercator.invert = function(x, y) {
        return [x, 2 * Math.atan(Math.exp(y)) - halfπ];
    }
    ;
    function d3_geo_mercatorProjection(project) {
        var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;
        m.scale = function() {
            var v = scale.apply(m, arguments);
            return v === m ? clipAuto ? m.clipExtent(null) : m : v;
        }
        ;
        m.translate = function() {
            var v = translate.apply(m, arguments);
            return v === m ? clipAuto ? m.clipExtent(null) : m : v;
        }
        ;
        m.clipExtent = function(_) {
            var v = clipExtent.apply(m, arguments);
            if (v === m) {
                if (clipAuto = _ == null) {
                    var k = π * scale()
                      , t = translate();
                    clipExtent([[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]);
                }
            } else if (clipAuto) {
                v = null;
            }
            return v;
        }
        ;
        return m.clipExtent(null);
    }
    (d3.geo.mercator = function() {
        return d3_geo_mercatorProjection(d3_geo_mercator);
    }
    ).raw = d3_geo_mercator;
    var d3_geo_orthographic = d3_geo_azimuthal(function() {
        return 1;
    }, Math.asin);
    (d3.geo.orthographic = function() {
        return d3_geo_projection(d3_geo_orthographic);
    }
    ).raw = d3_geo_orthographic;
    var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {
        return 1 / (1 + cosλcosφ);
    }, function(ρ) {
        return 2 * Math.atan(ρ);
    });
    (d3.geo.stereographic = function() {
        return d3_geo_projection(d3_geo_stereographic);
    }
    ).raw = d3_geo_stereographic;
    function d3_geo_transverseMercator(λ, φ) {
        return [Math.log(Math.tan(π / 4 + φ / 2)), -λ];
    }
    d3_geo_transverseMercator.invert = function(x, y) {
        return [-y, 2 * Math.atan(Math.exp(x)) - halfπ];
    }
    ;
    (d3.geo.transverseMercator = function() {
        var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator)
          , center = projection.center
          , rotate = projection.rotate;
        projection.center = function(_) {
            return _ ? center([-_[1], _[0]]) : (_ = center(),
            [_[1], -_[0]]);
        }
        ;
        projection.rotate = function(_) {
            return _ ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(),
            [_[0], _[1], _[2] - 90]);
        }
        ;
        return rotate([0, 0, 90]);
    }
    ).raw = d3_geo_transverseMercator;
    d3.geom = {};
    function d3_geom_pointX(d) {
        return d[0];
    }
    function d3_geom_pointY(d) {
        return d[1];
    }
    d3.geom.hull = function(vertices) {
        var x = d3_geom_pointX
          , y = d3_geom_pointY;
        if (arguments.length)
            return hull(vertices);
        function hull(data) {
            if (data.length < 3)
                return [];
            var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];
            for (i = 0; i < n; i++) {
                points.push([+fx.call(this, data[i], i), +fy.call(this, data[i], i), i]);
            }
            points.sort(d3_geom_hullOrder);
            for (i = 0; i < n; i++)
                flippedPoints.push([points[i][0], -points[i][1]]);
            var upper = d3_geom_hullUpper(points)
              , lower = d3_geom_hullUpper(flippedPoints);
            var skipLeft = lower[0] === upper[0]
              , skipRight = lower[lower.length - 1] === upper[upper.length - 1]
              , polygon = [];
            for (i = upper.length - 1; i >= 0; --i)
                polygon.push(data[points[upper[i]][2]]);
            for (i = +skipLeft; i < lower.length - skipRight; ++i)
                polygon.push(data[points[lower[i]][2]]);
            return polygon;
        }
        hull.x = function(_) {
            return arguments.length ? (x = _,
            hull) : x;
        }
        ;
        hull.y = function(_) {
            return arguments.length ? (y = _,
            hull) : y;
        }
        ;
        return hull;
    }
    ;
    function d3_geom_hullUpper(points) {
        var n = points.length
          , hull = [0, 1]
          , hs = 2;
        for (var i = 2; i < n; i++) {
            while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0)
                --hs;
            hull[hs++] = i;
        }
        return hull.slice(0, hs);
    }
    function d3_geom_hullOrder(a, b) {
        return a[0] - b[0] || a[1] - b[1];
    }
    d3.geom.polygon = function(coordinates) {
        d3_subclass(coordinates, d3_geom_polygonPrototype);
        return coordinates;
    }
    ;
    var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];
    d3_geom_polygonPrototype.area = function() {
        var i = -1, n = this.length, a, b = this[n - 1], area = 0;
        while (++i < n) {
            a = b;
            b = this[i];
            area += a[1] * b[0] - a[0] * b[1];
        }
        return area * .5;
    }
    ;
    d3_geom_polygonPrototype.centroid = function(k) {
        var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;
        if (!arguments.length)
            k = -1 / (6 * this.area());
        while (++i < n) {
            a = b;
            b = this[i];
            c = a[0] * b[1] - b[0] * a[1];
            x += (a[0] + b[0]) * c;
            y += (a[1] + b[1]) * c;
        }
        return [x * k, y * k];
    }
    ;
    d3_geom_polygonPrototype.clip = function(subject) {
        var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;
        while (++i < n) {
            input = subject.slice();
            subject.length = 0;
            b = this[i];
            c = input[(m = input.length - closed) - 1];
            j = -1;
            while (++j < m) {
                d = input[j];
                if (d3_geom_polygonInside(d, a, b)) {
                    if (!d3_geom_polygonInside(c, a, b)) {
                        subject.push(d3_geom_polygonIntersect(c, d, a, b));
                    }
                    subject.push(d);
                } else if (d3_geom_polygonInside(c, a, b)) {
                    subject.push(d3_geom_polygonIntersect(c, d, a, b));
                }
                c = d;
            }
            if (closed)
                subject.push(subject[0]);
            a = b;
        }
        return subject;
    }
    ;
    function d3_geom_polygonInside(p, a, b) {
        return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);
    }
    function d3_geom_polygonIntersect(c, d, a, b) {
        var x1 = c[0]
          , x3 = a[0]
          , x21 = d[0] - x1
          , x43 = b[0] - x3
          , y1 = c[1]
          , y3 = a[1]
          , y21 = d[1] - y1
          , y43 = b[1] - y3
          , ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);
        return [x1 + ua * x21, y1 + ua * y21];
    }
    function d3_geom_polygonClosed(coordinates) {
        var a = coordinates[0]
          , b = coordinates[coordinates.length - 1];
        return !(a[0] - b[0] || a[1] - b[1]);
    }
    var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];
    function d3_geom_voronoiBeach() {
        d3_geom_voronoiRedBlackNode(this);
        this.edge = this.site = this.circle = null;
    }
    function d3_geom_voronoiCreateBeach(site) {
        var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();
        beach.site = site;
        return beach;
    }
    function d3_geom_voronoiDetachBeach(beach) {
        d3_geom_voronoiDetachCircle(beach);
        d3_geom_voronoiBeaches.remove(beach);
        d3_geom_voronoiBeachPool.push(beach);
        d3_geom_voronoiRedBlackNode(beach);
    }
    function d3_geom_voronoiRemoveBeach(beach) {
        var circle = beach.circle
          , x = circle.x
          , y = circle.cy
          , vertex = {
            x: x,
            y: y
        }
          , previous = beach.P
          , next = beach.N
          , disappearing = [beach];
        d3_geom_voronoiDetachBeach(beach);
        var lArc = previous;
        while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {
            previous = lArc.P;
            disappearing.unshift(lArc);
            d3_geom_voronoiDetachBeach(lArc);
            lArc = previous;
        }
        disappearing.unshift(lArc);
        d3_geom_voronoiDetachCircle(lArc);
        var rArc = next;
        while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {
            next = rArc.N;
            disappearing.push(rArc);
            d3_geom_voronoiDetachBeach(rArc);
            rArc = next;
        }
        disappearing.push(rArc);
        d3_geom_voronoiDetachCircle(rArc);
        var nArcs = disappearing.length, iArc;
        for (iArc = 1; iArc < nArcs; ++iArc) {
            rArc = disappearing[iArc];
            lArc = disappearing[iArc - 1];
            d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);
        }
        lArc = disappearing[0];
        rArc = disappearing[nArcs - 1];
        rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);
        d3_geom_voronoiAttachCircle(lArc);
        d3_geom_voronoiAttachCircle(rArc);
    }
    function d3_geom_voronoiAddBeach(site) {
        var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;
        while (node) {
            dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;
            if (dxl > ε)
                node = node.L;
            else {
                dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);
                if (dxr > ε) {
                    if (!node.R) {
                        lArc = node;
                        break;
                    }
                    node = node.R;
                } else {
                    if (dxl > -ε) {
                        lArc = node.P;
                        rArc = node;
                    } else if (dxr > -ε) {
                        lArc = node;
                        rArc = node.N;
                    } else {
                        lArc = rArc = node;
                    }
                    break;
                }
            }
        }
        var newArc = d3_geom_voronoiCreateBeach(site);
        d3_geom_voronoiBeaches.insert(lArc, newArc);
        if (!lArc && !rArc)
            return;
        if (lArc === rArc) {
            d3_geom_voronoiDetachCircle(lArc);
            rArc = d3_geom_voronoiCreateBeach(lArc.site);
            d3_geom_voronoiBeaches.insert(newArc, rArc);
            newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
            d3_geom_voronoiAttachCircle(lArc);
            d3_geom_voronoiAttachCircle(rArc);
            return;
        }
        if (!rArc) {
            newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
            return;
        }
        d3_geom_voronoiDetachCircle(lArc);
        d3_geom_voronoiDetachCircle(rArc);
        var lSite = lArc.site
          , ax = lSite.x
          , ay = lSite.y
          , bx = site.x - ax
          , by = site.y - ay
          , rSite = rArc.site
          , cx = rSite.x - ax
          , cy = rSite.y - ay
          , d = 2 * (bx * cy - by * cx)
          , hb = bx * bx + by * by
          , hc = cx * cx + cy * cy
          , vertex = {
            x: (cy * hb - by * hc) / d + ax,
            y: (bx * hc - cx * hb) / d + ay
        };
        d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);
        newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);
        rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);
        d3_geom_voronoiAttachCircle(lArc);
        d3_geom_voronoiAttachCircle(rArc);
    }
    function d3_geom_voronoiLeftBreakPoint(arc, directrix) {
        var site = arc.site
          , rfocx = site.x
          , rfocy = site.y
          , pby2 = rfocy - directrix;
        if (!pby2)
            return rfocx;
        var lArc = arc.P;
        if (!lArc)
            return -Infinity;
        site = lArc.site;
        var lfocx = site.x
          , lfocy = site.y
          , plby2 = lfocy - directrix;
        if (!plby2)
            return lfocx;
        var hl = lfocx - rfocx
          , aby2 = 1 / pby2 - 1 / plby2
          , b = hl / plby2;
        if (aby2)
            return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;
        return (rfocx + lfocx) / 2;
    }
    function d3_geom_voronoiRightBreakPoint(arc, directrix) {
        var rArc = arc.N;
        if (rArc)
            return d3_geom_voronoiLeftBreakPoint(rArc, directrix);
        var site = arc.site;
        return site.y === directrix ? site.x : Infinity;
    }
    function d3_geom_voronoiCell(site) {
        this.site = site;
        this.edges = [];
    }
    d3_geom_voronoiCell.prototype.prepare = function() {
        var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;
        while (iHalfEdge--) {
            edge = halfEdges[iHalfEdge].edge;
            if (!edge.b || !edge.a)
                halfEdges.splice(iHalfEdge, 1);
        }
        halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);
        return halfEdges.length;
    }
    ;
    function d3_geom_voronoiCloseCells(extent) {
        var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;
        while (iCell--) {
            cell = cells[iCell];
            if (!cell || !cell.prepare())
                continue;
            halfEdges = cell.edges;
            nHalfEdges = halfEdges.length;
            iHalfEdge = 0;
            while (iHalfEdge < nHalfEdges) {
                end = halfEdges[iHalfEdge].end(),
                x3 = end.x,
                y3 = end.y;
                start = halfEdges[++iHalfEdge % nHalfEdges].start(),
                x2 = start.x,
                y2 = start.y;
                if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {
                    halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {
                        x: x0,
                        y: abs(x2 - x0) < ε ? y2 : y1
                    } : abs(y3 - y1) < ε && x1 - x3 > ε ? {
                        x: abs(y2 - y1) < ε ? x2 : x1,
                        y: y1
                    } : abs(x3 - x1) < ε && y3 - y0 > ε ? {
                        x: x1,
                        y: abs(x2 - x1) < ε ? y2 : y0
                    } : abs(y3 - y0) < ε && x3 - x0 > ε ? {
                        x: abs(y2 - y0) < ε ? x2 : x0,
                        y: y0
                    } : null),cell.site,null));
                    ++nHalfEdges;
                }
            }
        }
    }
    function d3_geom_voronoiHalfEdgeOrder(a, b) {
        return b.angle - a.angle;
    }
    function d3_geom_voronoiCircle() {
        d3_geom_voronoiRedBlackNode(this);
        this.x = this.y = this.arc = this.site = this.cy = null;
    }
    function d3_geom_voronoiAttachCircle(arc) {
        var lArc = arc.P
          , rArc = arc.N;
        if (!lArc || !rArc)
            return;
        var lSite = lArc.site
          , cSite = arc.site
          , rSite = rArc.site;
        if (lSite === rSite)
            return;
        var bx = cSite.x
          , by = cSite.y
          , ax = lSite.x - bx
          , ay = lSite.y - by
          , cx = rSite.x - bx
          , cy = rSite.y - by;
        var d = 2 * (ax * cy - ay * cx);
        if (d >= -ε2)
            return;
        var ha = ax * ax + ay * ay
          , hc = cx * cx + cy * cy
          , x = (cy * ha - ay * hc) / d
          , y = (ax * hc - cx * ha) / d
          , cy = y + by;
        var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();
        circle.arc = arc;
        circle.site = cSite;
        circle.x = x + bx;
        circle.y = cy + Math.sqrt(x * x + y * y);
        circle.cy = cy;
        arc.circle = circle;
        var before = null
          , node = d3_geom_voronoiCircles._;
        while (node) {
            if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {
                if (node.L)
                    node = node.L;
                else {
                    before = node.P;
                    break;
                }
            } else {
                if (node.R)
                    node = node.R;
                else {
                    before = node;
                    break;
                }
            }
        }
        d3_geom_voronoiCircles.insert(before, circle);
        if (!before)
            d3_geom_voronoiFirstCircle = circle;
    }
    function d3_geom_voronoiDetachCircle(arc) {
        var circle = arc.circle;
        if (circle) {
            if (!circle.P)
                d3_geom_voronoiFirstCircle = circle.N;
            d3_geom_voronoiCircles.remove(circle);
            d3_geom_voronoiCirclePool.push(circle);
            d3_geom_voronoiRedBlackNode(circle);
            arc.circle = null;
        }
    }
    function d3_geom_voronoiClipEdges(extent) {
        var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;
        while (i--) {
            e = edges[i];
            if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {
                e.a = e.b = null;
                edges.splice(i, 1);
            }
        }
    }
    function d3_geom_voronoiConnectEdge(edge, extent) {
        var vb = edge.b;
        if (vb)
            return true;
        var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;
        if (ry === ly) {
            if (fx < x0 || fx >= x1)
                return;
            if (lx > rx) {
                if (!va)
                    va = {
                        x: fx,
                        y: y0
                    };
                else if (va.y >= y1)
                    return;
                vb = {
                    x: fx,
                    y: y1
                };
            } else {
                if (!va)
                    va = {
                        x: fx,
                        y: y1
                    };
                else if (va.y < y0)
                    return;
                vb = {
                    x: fx,
                    y: y0
                };
            }
        } else {
            fm = (lx - rx) / (ry - ly);
            fb = fy - fm * fx;
            if (fm < -1 || fm > 1) {
                if (lx > rx) {
                    if (!va)
                        va = {
                            x: (y0 - fb) / fm,
                            y: y0
                        };
                    else if (va.y >= y1)
                        return;
                    vb = {
                        x: (y1 - fb) / fm,
                        y: y1
                    };
                } else {
                    if (!va)
                        va = {
                            x: (y1 - fb) / fm,
                            y: y1
                        };
                    else if (va.y < y0)
                        return;
                    vb = {
                        x: (y0 - fb) / fm,
                        y: y0
                    };
                }
            } else {
                if (ly < ry) {
                    if (!va)
                        va = {
                            x: x0,
                            y: fm * x0 + fb
                        };
                    else if (va.x >= x1)
                        return;
                    vb = {
                        x: x1,
                        y: fm * x1 + fb
                    };
                } else {
                    if (!va)
                        va = {
                            x: x1,
                            y: fm * x1 + fb
                        };
                    else if (va.x < x0)
                        return;
                    vb = {
                        x: x0,
                        y: fm * x0 + fb
                    };
                }
            }
        }
        edge.a = va;
        edge.b = vb;
        return true;
    }
    function d3_geom_voronoiEdge(lSite, rSite) {
        this.l = lSite;
        this.r = rSite;
        this.a = this.b = null;
    }
    function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {
        var edge = new d3_geom_voronoiEdge(lSite,rSite);
        d3_geom_voronoiEdges.push(edge);
        if (va)
            d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);
        if (vb)
            d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);
        d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge,lSite,rSite));
        d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge,rSite,lSite));
        return edge;
    }
    function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {
        var edge = new d3_geom_voronoiEdge(lSite,null);
        edge.a = va;
        edge.b = vb;
        d3_geom_voronoiEdges.push(edge);
        return edge;
    }
    function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {
        if (!edge.a && !edge.b) {
            edge.a = vertex;
            edge.l = lSite;
            edge.r = rSite;
        } else if (edge.l === rSite) {
            edge.b = vertex;
        } else {
            edge.a = vertex;
        }
    }
    function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {
        var va = edge.a
          , vb = edge.b;
        this.edge = edge;
        this.site = lSite;
        this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);
    }
    d3_geom_voronoiHalfEdge.prototype = {
        start: function() {
            return this.edge.l === this.site ? this.edge.a : this.edge.b;
        },
        end: function() {
            return this.edge.l === this.site ? this.edge.b : this.edge.a;
        }
    };
    function d3_geom_voronoiRedBlackTree() {
        this._ = null;
    }
    function d3_geom_voronoiRedBlackNode(node) {
        node.U = node.C = node.L = node.R = node.P = node.N = null;
    }
    d3_geom_voronoiRedBlackTree.prototype = {
        insert: function(after, node) {
            var parent, grandpa, uncle;
            if (after) {
                node.P = after;
                node.N = after.N;
                if (after.N)
                    after.N.P = node;
                after.N = node;
                if (after.R) {
                    after = after.R;
                    while (after.L)
                        after = after.L;
                    after.L = node;
                } else {
                    after.R = node;
                }
                parent = after;
            } else if (this._) {
                after = d3_geom_voronoiRedBlackFirst(this._);
                node.P = null;
                node.N = after;
                after.P = after.L = node;
                parent = after;
            } else {
                node.P = node.N = null;
                this._ = node;
                parent = null;
            }
            node.L = node.R = null;
            node.U = parent;
            node.C = true;
            after = node;
            while (parent && parent.C) {
                grandpa = parent.U;
                if (parent === grandpa.L) {
                    uncle = grandpa.R;
                    if (uncle && uncle.C) {
                        parent.C = uncle.C = false;
                        grandpa.C = true;
                        after = grandpa;
                    } else {
                        if (after === parent.R) {
                            d3_geom_voronoiRedBlackRotateLeft(this, parent);
                            after = parent;
                            parent = after.U;
                        }
                        parent.C = false;
                        grandpa.C = true;
                        d3_geom_voronoiRedBlackRotateRight(this, grandpa);
                    }
                } else {
                    uncle = grandpa.L;
                    if (uncle && uncle.C) {
                        parent.C = uncle.C = false;
                        grandpa.C = true;
                        after = grandpa;
                    } else {
                        if (after === parent.L) {
                            d3_geom_voronoiRedBlackRotateRight(this, parent);
                            after = parent;
                            parent = after.U;
                        }
                        parent.C = false;
                        grandpa.C = true;
                        d3_geom_voronoiRedBlackRotateLeft(this, grandpa);
                    }
                }
                parent = after.U;
            }
            this._.C = false;
        },
        remove: function(node) {
            if (node.N)
                node.N.P = node.P;
            if (node.P)
                node.P.N = node.N;
            node.N = node.P = null;
            var parent = node.U, sibling, left = node.L, right = node.R, next, red;
            if (!left)
                next = right;
            else if (!right)
                next = left;
            else
                next = d3_geom_voronoiRedBlackFirst(right);
            if (parent) {
                if (parent.L === node)
                    parent.L = next;
                else
                    parent.R = next;
            } else {
                this._ = next;
            }
            if (left && right) {
                red = next.C;
                next.C = node.C;
                next.L = left;
                left.U = next;
                if (next !== right) {
                    parent = next.U;
                    next.U = node.U;
                    node = next.R;
                    parent.L = node;
                    next.R = right;
                    right.U = next;
                } else {
                    next.U = parent;
                    parent = next;
                    node = next.R;
                }
            } else {
                red = node.C;
                node = next;
            }
            if (node)
                node.U = parent;
            if (red)
                return;
            if (node && node.C) {
                node.C = false;
                return;
            }
            do {
                if (node === this._)
                    break;
                if (node === parent.L) {
                    sibling = parent.R;
                    if (sibling.C) {
                        sibling.C = false;
                        parent.C = true;
                        d3_geom_voronoiRedBlackRotateLeft(this, parent);
                        sibling = parent.R;
                    }
                    if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
                        if (!sibling.R || !sibling.R.C) {
                            sibling.L.C = false;
                            sibling.C = true;
                            d3_geom_voronoiRedBlackRotateRight(this, sibling);
                            sibling = parent.R;
                        }
                        sibling.C = parent.C;
                        parent.C = sibling.R.C = false;
                        d3_geom_voronoiRedBlackRotateLeft(this, parent);
                        node = this._;
                        break;
                    }
                } else {
                    sibling = parent.L;
                    if (sibling.C) {
                        sibling.C = false;
                        parent.C = true;
                        d3_geom_voronoiRedBlackRotateRight(this, parent);
                        sibling = parent.L;
                    }
                    if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
                        if (!sibling.L || !sibling.L.C) {
                            sibling.R.C = false;
                            sibling.C = true;
                            d3_geom_voronoiRedBlackRotateLeft(this, sibling);
                            sibling = parent.L;
                        }
                        sibling.C = parent.C;
                        parent.C = sibling.L.C = false;
                        d3_geom_voronoiRedBlackRotateRight(this, parent);
                        node = this._;
                        break;
                    }
                }
                sibling.C = true;
                node = parent;
                parent = parent.U;
            } while (!node.C);
            if (node)
                node.C = false;
        }
    };
    function d3_geom_voronoiRedBlackRotateLeft(tree, node) {
        var p = node
          , q = node.R
          , parent = p.U;
        if (parent) {
            if (parent.L === p)
                parent.L = q;
            else
                parent.R = q;
        } else {
            tree._ = q;
        }
        q.U = parent;
        p.U = q;
        p.R = q.L;
        if (p.R)
            p.R.U = p;
        q.L = p;
    }
    function d3_geom_voronoiRedBlackRotateRight(tree, node) {
        var p = node
          , q = node.L
          , parent = p.U;
        if (parent) {
            if (parent.L === p)
                parent.L = q;
            else
                parent.R = q;
        } else {
            tree._ = q;
        }
        q.U = parent;
        p.U = q;
        p.L = q.R;
        if (p.L)
            p.L.U = p;
        q.R = p;
    }
    function d3_geom_voronoiRedBlackFirst(node) {
        while (node.L)
            node = node.L;
        return node;
    }
    function d3_geom_voronoi(sites, bbox) {
        var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;
        d3_geom_voronoiEdges = [];
        d3_geom_voronoiCells = new Array(sites.length);
        d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();
        d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();
        while (true) {
            circle = d3_geom_voronoiFirstCircle;
            if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {
                if (site.x !== x0 || site.y !== y0) {
                    d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);
                    d3_geom_voronoiAddBeach(site);
                    x0 = site.x,
                    y0 = site.y;
                }
                site = sites.pop();
            } else if (circle) {
                d3_geom_voronoiRemoveBeach(circle.arc);
            } else {
                break;
            }
        }
        if (bbox)
            d3_geom_voronoiClipEdges(bbox),
            d3_geom_voronoiCloseCells(bbox);
        var diagram = {
            cells: d3_geom_voronoiCells,
            edges: d3_geom_voronoiEdges
        };
        d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;
        return diagram;
    }
    function d3_geom_voronoiVertexOrder(a, b) {
        return b.y - a.y || b.x - a.x;
    }
    d3.geom.voronoi = function(points) {
        var x = d3_geom_pointX
          , y = d3_geom_pointY
          , fx = x
          , fy = y
          , clipExtent = d3_geom_voronoiClipExtent;
        if (points)
            return voronoi(points);
        function voronoi(data) {
            var polygons = new Array(data.length)
              , x0 = clipExtent[0][0]
              , y0 = clipExtent[0][1]
              , x1 = clipExtent[1][0]
              , y1 = clipExtent[1][1];
            d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {
                var edges = cell.edges
                  , site = cell.site
                  , polygon = polygons[i] = edges.length ? edges.map(function(e) {
                    var s = e.start();
                    return [s.x, s.y];
                }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [[x0, y1], [x1, y1], [x1, y0], [x0, y0]] : [];
                polygon.point = data[i];
            });
            return polygons;
        }
        function sites(data) {
            return data.map(function(d, i) {
                return {
                    x: Math.round(fx(d, i) / ε) * ε,
                    y: Math.round(fy(d, i) / ε) * ε,
                    i: i
                };
            });
        }
        voronoi.links = function(data) {
            return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {
                return edge.l && edge.r;
            }).map(function(edge) {
                return {
                    source: data[edge.l.i],
                    target: data[edge.r.i]
                };
            });
        }
        ;
        voronoi.triangles = function(data) {
            var triangles = [];
            d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {
                var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;
                while (++j < m) {
                    e0 = e1;
                    s0 = s1;
                    e1 = edges[j].edge;
                    s1 = e1.l === site ? e1.r : e1.l;
                    if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {
                        triangles.push([data[i], data[s0.i], data[s1.i]]);
                    }
                }
            });
            return triangles;
        }
        ;
        voronoi.x = function(_) {
            return arguments.length ? (fx = d3_functor(x = _),
            voronoi) : x;
        }
        ;
        voronoi.y = function(_) {
            return arguments.length ? (fy = d3_functor(y = _),
            voronoi) : y;
        }
        ;
        voronoi.clipExtent = function(_) {
            if (!arguments.length)
                return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;
            clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;
            return voronoi;
        }
        ;
        voronoi.size = function(_) {
            if (!arguments.length)
                return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];
            return voronoi.clipExtent(_ && [[0, 0], _]);
        }
        ;
        return voronoi;
    }
    ;
    var d3_geom_voronoiClipExtent = [[-1e6, -1e6], [1e6, 1e6]];
    function d3_geom_voronoiTriangleArea(a, b, c) {
        return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);
    }
    d3.geom.delaunay = function(vertices) {
        return d3.geom.voronoi().triangles(vertices);
    }
    ;
    d3.geom.quadtree = function(points, x1, y1, x2, y2) {
        var x = d3_geom_pointX, y = d3_geom_pointY, compat;
        if (compat = arguments.length) {
            x = d3_geom_quadtreeCompatX;
            y = d3_geom_quadtreeCompatY;
            if (compat === 3) {
                y2 = y1;
                x2 = x1;
                y1 = x1 = 0;
            }
            return quadtree(points);
        }
        function quadtree(data) {
            var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;
            if (x1 != null) {
                x1_ = x1,
                y1_ = y1,
                x2_ = x2,
                y2_ = y2;
            } else {
                x2_ = y2_ = -(x1_ = y1_ = Infinity);
                xs = [],
                ys = [];
                n = data.length;
                if (compat)
                    for (i = 0; i < n; ++i) {
                        d = data[i];
                        if (d.x < x1_)
                            x1_ = d.x;
                        if (d.y < y1_)
                            y1_ = d.y;
                        if (d.x > x2_)
                            x2_ = d.x;
                        if (d.y > y2_)
                            y2_ = d.y;
                        xs.push(d.x);
                        ys.push(d.y);
                    }
                else
                    for (i = 0; i < n; ++i) {
                        var x_ = +fx(d = data[i], i)
                          , y_ = +fy(d, i);
                        if (x_ < x1_)
                            x1_ = x_;
                        if (y_ < y1_)
                            y1_ = y_;
                        if (x_ > x2_)
                            x2_ = x_;
                        if (y_ > y2_)
                            y2_ = y_;
                        xs.push(x_);
                        ys.push(y_);
                    }
            }
            var dx = x2_ - x1_
              , dy = y2_ - y1_;
            if (dx > dy)
                y2_ = y1_ + dx;
            else
                x2_ = x1_ + dy;
            function insert(n, d, x, y, x1, y1, x2, y2) {
                if (isNaN(x) || isNaN(y))
                    return;
                if (n.leaf) {
                    var nx = n.x
                      , ny = n.y;
                    if (nx != null) {
                        if (abs(nx - x) + abs(ny - y) < .01) {
                            insertChild(n, d, x, y, x1, y1, x2, y2);
                        } else {
                            var nPoint = n.point;
                            n.x = n.y = n.point = null;
                            insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);
                            insertChild(n, d, x, y, x1, y1, x2, y2);
                        }
                    } else {
                        n.x = x,
                        n.y = y,
                        n.point = d;
                    }
                } else {
                    insertChild(n, d, x, y, x1, y1, x2, y2);
                }
            }
            function insertChild(n, d, x, y, x1, y1, x2, y2) {
                var xm = (x1 + x2) * .5
                  , ym = (y1 + y2) * .5
                  , right = x >= xm
                  , below = y >= ym
                  , i = below << 1 | right;
                n.leaf = false;
                n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());
                if (right)
                    x1 = xm;
                else
                    x2 = xm;
                if (below)
                    y1 = ym;
                else
                    y2 = ym;
                insert(n, d, x, y, x1, y1, x2, y2);
            }
            var root = d3_geom_quadtreeNode();
            root.add = function(d) {
                insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);
            }
            ;
            root.visit = function(f) {
                d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);
            }
            ;
            root.find = function(point) {
                return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);
            }
            ;
            i = -1;
            if (x1 == null) {
                while (++i < n) {
                    insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);
                }
                --i;
            } else
                data.forEach(root.add);
            xs = ys = data = d = null;
            return root;
        }
        quadtree.x = function(_) {
            return arguments.length ? (x = _,
            quadtree) : x;
        }
        ;
        quadtree.y = function(_) {
            return arguments.length ? (y = _,
            quadtree) : y;
        }
        ;
        quadtree.extent = function(_) {
            if (!arguments.length)
                return x1 == null ? null : [[x1, y1], [x2, y2]];
            if (_ == null)
                x1 = y1 = x2 = y2 = null;
            else
                x1 = +_[0][0],
                y1 = +_[0][1],
                x2 = +_[1][0],
                y2 = +_[1][1];
            return quadtree;
        }
        ;
        quadtree.size = function(_) {
            if (!arguments.length)
                return x1 == null ? null : [x2 - x1, y2 - y1];
            if (_ == null)
                x1 = y1 = x2 = y2 = null;
            else
                x1 = y1 = 0,
                x2 = +_[0],
                y2 = +_[1];
            return quadtree;
        }
        ;
        return quadtree;
    }
    ;
    function d3_geom_quadtreeCompatX(d) {
        return d.x;
    }
    function d3_geom_quadtreeCompatY(d) {
        return d.y;
    }
    function d3_geom_quadtreeNode() {
        return {
            leaf: true,
            nodes: [],
            point: null,
            x: null,
            y: null
        };
    }
    function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {
        if (!f(node, x1, y1, x2, y2)) {
            var sx = (x1 + x2) * .5
              , sy = (y1 + y2) * .5
              , children = node.nodes;
            if (children[0])
                d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);
            if (children[1])
                d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);
            if (children[2])
                d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);
            if (children[3])
                d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);
        }
    }
    function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {
        var minDistance2 = Infinity, closestPoint;
        (function find(node, x1, y1, x2, y2) {
            if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0)
                return;
            if (point = node.point) {
                var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;
                if (distance2 < minDistance2) {
                    var distance = Math.sqrt(minDistance2 = distance2);
                    x0 = x - distance,
                    y0 = y - distance;
                    x3 = x + distance,
                    y3 = y + distance;
                    closestPoint = point;
                }
            }
            var children = node.nodes
              , xm = (x1 + x2) * .5
              , ym = (y1 + y2) * .5
              , right = x >= xm
              , below = y >= ym;
            for (var i = below << 1 | right, j = i + 4; i < j; ++i) {
                if (node = children[i & 3])
                    switch (i & 3) {
                    case 0:
                        find(node, x1, y1, xm, ym);
                        break;

                    case 1:
                        find(node, xm, y1, x2, ym);
                        break;

                    case 2:
                        find(node, x1, ym, xm, y2);
                        break;

                    case 3:
                        find(node, xm, ym, x2, y2);
                        break;
                    }
            }
        }
        )(root, x0, y0, x3, y3);
        return closestPoint;
    }
    d3.interpolateRgb = d3_interpolateRgb;
    function d3_interpolateRgb(a, b) {
        a = d3.rgb(a);
        b = d3.rgb(b);
        var ar = a.r
          , ag = a.g
          , ab = a.b
          , br = b.r - ar
          , bg = b.g - ag
          , bb = b.b - ab;
        return function(t) {
            return "#" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));
        }
        ;
    }
    d3.interpolateObject = d3_interpolateObject;
    function d3_interpolateObject(a, b) {
        var i = {}, c = {}, k;
        for (k in a) {
            if (k in b) {
                i[k] = d3_interpolate(a[k], b[k]);
            } else {
                c[k] = a[k];
            }
        }
        for (k in b) {
            if (!(k in a)) {
                c[k] = b[k];
            }
        }
        return function(t) {
            for (k in i)
                c[k] = i[k](t);
            return c;
        }
        ;
    }
    d3.interpolateNumber = d3_interpolateNumber;
    function d3_interpolateNumber(a, b) {
        a = +a,
        b = +b;
        return function(t) {
            return a * (1 - t) + b * t;
        }
        ;
    }
    d3.interpolateString = d3_interpolateString;
    function d3_interpolateString(a, b) {
        var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];
        a = a + "",
        b = b + "";
        while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {
            if ((bs = bm.index) > bi) {
                bs = b.slice(bi, bs);
                if (s[i])
                    s[i] += bs;
                else
                    s[++i] = bs;
            }
            if ((am = am[0]) === (bm = bm[0])) {
                if (s[i])
                    s[i] += bm;
                else
                    s[++i] = bm;
            } else {
                s[++i] = null;
                q.push({
                    i: i,
                    x: d3_interpolateNumber(am, bm)
                });
            }
            bi = d3_interpolate_numberB.lastIndex;
        }
        if (bi < b.length) {
            bs = b.slice(bi);
            if (s[i])
                s[i] += bs;
            else
                s[++i] = bs;
        }
        return s.length < 2 ? q[0] ? (b = q[0].x,
        function(t) {
            return b(t) + "";
        }
        ) : function() {
            return b;
        }
        : (b = q.length,
        function(t) {
            for (var i = 0, o; i < b; ++i)
                s[(o = q[i]).i] = o.x(t);
            return s.join("");
        }
        );
    }
    var d3_interpolate_numberA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g
      , d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source,"g");
    d3.interpolate = d3_interpolate;
    function d3_interpolate(a, b) {
        var i = d3.interpolators.length, f;
        while (--i >= 0 && !(f = d3.interpolators[i](a, b)))
            ;
        return f;
    }
    d3.interpolators = [function(a, b) {
        var t = typeof b;
        return (t === "string" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\(|hsl\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === "object" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);
    }
    ];
    d3.interpolateArray = d3_interpolateArray;
    function d3_interpolateArray(a, b) {
        var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;
        for (i = 0; i < n0; ++i)
            x.push(d3_interpolate(a[i], b[i]));
        for (; i < na; ++i)
            c[i] = a[i];
        for (; i < nb; ++i)
            c[i] = b[i];
        return function(t) {
            for (i = 0; i < n0; ++i)
                c[i] = x[i](t);
            return c;
        }
        ;
    }
    var d3_ease_default = function() {
        return d3_identity;
    };
    var d3_ease = d3.map({
        linear: d3_ease_default,
        poly: d3_ease_poly,
        quad: function() {
            return d3_ease_quad;
        },
        cubic: function() {
            return d3_ease_cubic;
        },
        sin: function() {
            return d3_ease_sin;
        },
        exp: function() {
            return d3_ease_exp;
        },
        circle: function() {
            return d3_ease_circle;
        },
        elastic: d3_ease_elastic,
        back: d3_ease_back,
        bounce: function() {
            return d3_ease_bounce;
        }
    });
    var d3_ease_mode = d3.map({
        "in": d3_identity,
        out: d3_ease_reverse,
        "in-out": d3_ease_reflect,
        "out-in": function(f) {
            return d3_ease_reflect(d3_ease_reverse(f));
        }
    });
    d3.ease = function(name) {
        var i = name.indexOf("-")
          , t = i >= 0 ? name.slice(0, i) : name
          , m = i >= 0 ? name.slice(i + 1) : "in";
        t = d3_ease.get(t) || d3_ease_default;
        m = d3_ease_mode.get(m) || d3_identity;
        return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));
    }
    ;
    function d3_ease_clamp(f) {
        return function(t) {
            return t <= 0 ? 0 : t >= 1 ? 1 : f(t);
        }
        ;
    }
    function d3_ease_reverse(f) {
        return function(t) {
            return 1 - f(1 - t);
        }
        ;
    }
    function d3_ease_reflect(f) {
        return function(t) {
            return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));
        }
        ;
    }
    function d3_ease_quad(t) {
        return t * t;
    }
    function d3_ease_cubic(t) {
        return t * t * t;
    }
    function d3_ease_cubicInOut(t) {
        if (t <= 0)
            return 0;
        if (t >= 1)
            return 1;
        var t2 = t * t
          , t3 = t2 * t;
        return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);
    }
    function d3_ease_poly(e) {
        return function(t) {
            return Math.pow(t, e);
        }
        ;
    }
    function d3_ease_sin(t) {
        return 1 - Math.cos(t * halfπ);
    }
    function d3_ease_exp(t) {
        return Math.pow(2, 10 * (t - 1));
    }
    function d3_ease_circle(t) {
        return 1 - Math.sqrt(1 - t * t);
    }
    function d3_ease_elastic(a, p) {
        var s;
        if (arguments.length < 2)
            p = .45;
        if (arguments.length)
            s = p / τ * Math.asin(1 / a);
        else
            a = 1,
            s = p / 4;
        return function(t) {
            return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);
        }
        ;
    }
    function d3_ease_back(s) {
        if (!s)
            s = 1.70158;
        return function(t) {
            return t * t * ((s + 1) * t - s);
        }
        ;
    }
    function d3_ease_bounce(t) {
        return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
    }
    d3.interpolateHcl = d3_interpolateHcl;
    function d3_interpolateHcl(a, b) {
        a = d3.hcl(a);
        b = d3.hcl(b);
        var ah = a.h
          , ac = a.c
          , al = a.l
          , bh = b.h - ah
          , bc = b.c - ac
          , bl = b.l - al;
        if (isNaN(bc))
            bc = 0,
            ac = isNaN(ac) ? b.c : ac;
        if (isNaN(bh))
            bh = 0,
            ah = isNaN(ah) ? b.h : ah;
        else if (bh > 180)
            bh -= 360;
        else if (bh < -180)
            bh += 360;
        return function(t) {
            return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + "";
        }
        ;
    }
    d3.interpolateHsl = d3_interpolateHsl;
    function d3_interpolateHsl(a, b) {
        a = d3.hsl(a);
        b = d3.hsl(b);
        var ah = a.h
          , as = a.s
          , al = a.l
          , bh = b.h - ah
          , bs = b.s - as
          , bl = b.l - al;
        if (isNaN(bs))
            bs = 0,
            as = isNaN(as) ? b.s : as;
        if (isNaN(bh))
            bh = 0,
            ah = isNaN(ah) ? b.h : ah;
        else if (bh > 180)
            bh -= 360;
        else if (bh < -180)
            bh += 360;
        return function(t) {
            return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + "";
        }
        ;
    }
    d3.interpolateLab = d3_interpolateLab;
    function d3_interpolateLab(a, b) {
        a = d3.lab(a);
        b = d3.lab(b);
        var al = a.l
          , aa = a.a
          , ab = a.b
          , bl = b.l - al
          , ba = b.a - aa
          , bb = b.b - ab;
        return function(t) {
            return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + "";
        }
        ;
    }
    d3.interpolateRound = d3_interpolateRound;
    function d3_interpolateRound(a, b) {
        b -= a;
        return function(t) {
            return Math.round(a + b * t);
        }
        ;
    }
    d3.transform = function(string) {
        var g = d3_document.createElementNS(d3.ns.prefix.svg, "g");
        return (d3.transform = function(string) {
            if (string != null) {
                g.setAttribute("transform", string);
                var t = g.transform.baseVal.consolidate();
            }
            return new d3_transform(t ? t.matrix : d3_transformIdentity);
        }
        )(string);
    }
    ;
    function d3_transform(m) {
        var r0 = [m.a, m.b]
          , r1 = [m.c, m.d]
          , kx = d3_transformNormalize(r0)
          , kz = d3_transformDot(r0, r1)
          , ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;
        if (r0[0] * r1[1] < r1[0] * r0[1]) {
            r0[0] *= -1;
            r0[1] *= -1;
            kx *= -1;
            kz *= -1;
        }
        this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;
        this.translate = [m.e, m.f];
        this.scale = [kx, ky];
        this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;
    }
    d3_transform.prototype.toString = function() {
        return "translate(" + this.translate + ")rotate(" + this.rotate + ")skewX(" + this.skew + ")scale(" + this.scale + ")";
    }
    ;
    function d3_transformDot(a, b) {
        return a[0] * b[0] + a[1] * b[1];
    }
    function d3_transformNormalize(a) {
        var k = Math.sqrt(d3_transformDot(a, a));
        if (k) {
            a[0] /= k;
            a[1] /= k;
        }
        return k;
    }
    function d3_transformCombine(a, b, k) {
        a[0] += k * b[0];
        a[1] += k * b[1];
        return a;
    }
    var d3_transformIdentity = {
        a: 1,
        b: 0,
        c: 0,
        d: 1,
        e: 0,
        f: 0
    };
    d3.interpolateTransform = d3_interpolateTransform;
    function d3_interpolateTransformPop(s) {
        return s.length ? s.pop() + "," : "";
    }
    function d3_interpolateTranslate(ta, tb, s, q) {
        if (ta[0] !== tb[0] || ta[1] !== tb[1]) {
            var i = s.push("translate(", null, ",", null, ")");
            q.push({
                i: i - 4,
                x: d3_interpolateNumber(ta[0], tb[0])
            }, {
                i: i - 2,
                x: d3_interpolateNumber(ta[1], tb[1])
            });
        } else if (tb[0] || tb[1]) {
            s.push("translate(" + tb + ")");
        }
    }
    function d3_interpolateRotate(ra, rb, s, q) {
        if (ra !== rb) {
            if (ra - rb > 180)
                rb += 360;
            else if (rb - ra > 180)
                ra += 360;
            q.push({
                i: s.push(d3_interpolateTransformPop(s) + "rotate(", null, ")") - 2,
                x: d3_interpolateNumber(ra, rb)
            });
        } else if (rb) {
            s.push(d3_interpolateTransformPop(s) + "rotate(" + rb + ")");
        }
    }
    function d3_interpolateSkew(wa, wb, s, q) {
        if (wa !== wb) {
            q.push({
                i: s.push(d3_interpolateTransformPop(s) + "skewX(", null, ")") - 2,
                x: d3_interpolateNumber(wa, wb)
            });
        } else if (wb) {
            s.push(d3_interpolateTransformPop(s) + "skewX(" + wb + ")");
        }
    }
    function d3_interpolateScale(ka, kb, s, q) {
        if (ka[0] !== kb[0] || ka[1] !== kb[1]) {
            var i = s.push(d3_interpolateTransformPop(s) + "scale(", null, ",", null, ")");
            q.push({
                i: i - 4,
                x: d3_interpolateNumber(ka[0], kb[0])
            }, {
                i: i - 2,
                x: d3_interpolateNumber(ka[1], kb[1])
            });
        } else if (kb[0] !== 1 || kb[1] !== 1) {
            s.push(d3_interpolateTransformPop(s) + "scale(" + kb + ")");
        }
    }
    function d3_interpolateTransform(a, b) {
        var s = []
          , q = [];
        a = d3.transform(a),
        b = d3.transform(b);
        d3_interpolateTranslate(a.translate, b.translate, s, q);
        d3_interpolateRotate(a.rotate, b.rotate, s, q);
        d3_interpolateSkew(a.skew, b.skew, s, q);
        d3_interpolateScale(a.scale, b.scale, s, q);
        a = b = null;
        return function(t) {
            var i = -1, n = q.length, o;
            while (++i < n)
                s[(o = q[i]).i] = o.x(t);
            return s.join("");
        }
        ;
    }
    function d3_uninterpolateNumber(a, b) {
        b = (b -= a = +a) || 1 / b;
        return function(x) {
            return (x - a) / b;
        }
        ;
    }
    function d3_uninterpolateClamp(a, b) {
        b = (b -= a = +a) || 1 / b;
        return function(x) {
            return Math.max(0, Math.min(1, (x - a) / b));
        }
        ;
    }
    d3.layout = {};
    d3.layout.bundle = function() {
        return function(links) {
            var paths = []
              , i = -1
              , n = links.length;
            while (++i < n)
                paths.push(d3_layout_bundlePath(links[i]));
            return paths;
        }
        ;
    }
    ;
    function d3_layout_bundlePath(link) {
        var start = link.source
          , end = link.target
          , lca = d3_layout_bundleLeastCommonAncestor(start, end)
          , points = [start];
        while (start !== lca) {
            start = start.parent;
            points.push(start);
        }
        var k = points.length;
        while (end !== lca) {
            points.splice(k, 0, end);
            end = end.parent;
        }
        return points;
    }
    function d3_layout_bundleAncestors(node) {
        var ancestors = []
          , parent = node.parent;
        while (parent != null) {
            ancestors.push(node);
            node = parent;
            parent = parent.parent;
        }
        ancestors.push(node);
        return ancestors;
    }
    function d3_layout_bundleLeastCommonAncestor(a, b) {
        if (a === b)
            return a;
        var aNodes = d3_layout_bundleAncestors(a)
          , bNodes = d3_layout_bundleAncestors(b)
          , aNode = aNodes.pop()
          , bNode = bNodes.pop()
          , sharedNode = null;
        while (aNode === bNode) {
            sharedNode = aNode;
            aNode = aNodes.pop();
            bNode = bNodes.pop();
        }
        return sharedNode;
    }
    d3.layout.chord = function() {
        var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;
        function relayout() {
            var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;
            chords = [];
            groups = [];
            k = 0,
            i = -1;
            while (++i < n) {
                x = 0,
                j = -1;
                while (++j < n) {
                    x += matrix[i][j];
                }
                groupSums.push(x);
                subgroupIndex.push(d3.range(n));
                k += x;
            }
            if (sortGroups) {
                groupIndex.sort(function(a, b) {
                    return sortGroups(groupSums[a], groupSums[b]);
                });
            }
            if (sortSubgroups) {
                subgroupIndex.forEach(function(d, i) {
                    d.sort(function(a, b) {
                        return sortSubgroups(matrix[i][a], matrix[i][b]);
                    });
                });
            }
            k = (τ - padding * n) / k;
            x = 0,
            i = -1;
            while (++i < n) {
                x0 = x,
                j = -1;
                while (++j < n) {
                    var di = groupIndex[i]
                      , dj = subgroupIndex[di][j]
                      , v = matrix[di][dj]
                      , a0 = x
                      , a1 = x += v * k;
                    subgroups[di + "-" + dj] = {
                        index: di,
                        subindex: dj,
                        startAngle: a0,
                        endAngle: a1,
                        value: v
                    };
                }
                groups[di] = {
                    index: di,
                    startAngle: x0,
                    endAngle: x,
                    value: groupSums[di]
                };
                x += padding;
            }
            i = -1;
            while (++i < n) {
                j = i - 1;
                while (++j < n) {
                    var source = subgroups[i + "-" + j]
                      , target = subgroups[j + "-" + i];
                    if (source.value || target.value) {
                        chords.push(source.value < target.value ? {
                            source: target,
                            target: source
                        } : {
                            source: source,
                            target: target
                        });
                    }
                }
            }
            if (sortChords)
                resort();
        }
        function resort() {
            chords.sort(function(a, b) {
                return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);
            });
        }
        chord.matrix = function(x) {
            if (!arguments.length)
                return matrix;
            n = (matrix = x) && matrix.length;
            chords = groups = null;
            return chord;
        }
        ;
        chord.padding = function(x) {
            if (!arguments.length)
                return padding;
            padding = x;
            chords = groups = null;
            return chord;
        }
        ;
        chord.sortGroups = function(x) {
            if (!arguments.length)
                return sortGroups;
            sortGroups = x;
            chords = groups = null;
            return chord;
        }
        ;
        chord.sortSubgroups = function(x) {
            if (!arguments.length)
                return sortSubgroups;
            sortSubgroups = x;
            chords = null;
            return chord;
        }
        ;
        chord.sortChords = function(x) {
            if (!arguments.length)
                return sortChords;
            sortChords = x;
            if (chords)
                resort();
            return chord;
        }
        ;
        chord.chords = function() {
            if (!chords)
                relayout();
            return chords;
        }
        ;
        chord.groups = function() {
            if (!groups)
                relayout();
            return groups;
        }
        ;
        return chord;
    }
    ;
    d3.layout.force = function() {
        var force = {}, event = d3.dispatch("start", "tick", "end"), timer, size = [1, 1], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;
        function repulse(node) {
            return function(quad, x1, _, x2) {
                if (quad.point !== node) {
                    var dx = quad.cx - node.x
                      , dy = quad.cy - node.y
                      , dw = x2 - x1
                      , dn = dx * dx + dy * dy;
                    if (dw * dw / theta2 < dn) {
                        if (dn < chargeDistance2) {
                            var k = quad.charge / dn;
                            node.px -= dx * k;
                            node.py -= dy * k;
                        }
                        return true;
                    }
                    if (quad.point && dn && dn < chargeDistance2) {
                        var k = quad.pointCharge / dn;
                        node.px -= dx * k;
                        node.py -= dy * k;
                    }
                }
                return !quad.charge;
            }
            ;
        }
        force.tick = function() {
            if ((alpha *= .99) < .005) {
                timer = null;
                event.end({
                    type: "end",
                    alpha: alpha = 0
                });
                return true;
            }
            var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;
            for (i = 0; i < m; ++i) {
                o = links[i];
                s = o.source;
                t = o.target;
                x = t.x - s.x;
                y = t.y - s.y;
                if (l = x * x + y * y) {
                    l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;
                    x *= l;
                    y *= l;
                    t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);
                    t.y -= y * k;
                    s.x += x * (k = 1 - k);
                    s.y += y * k;
                }
            }
            if (k = alpha * gravity) {
                x = size[0] / 2;
                y = size[1] / 2;
                i = -1;
                if (k)
                    while (++i < n) {
                        o = nodes[i];
                        o.x += (x - o.x) * k;
                        o.y += (y - o.y) * k;
                    }
            }
            if (charge) {
                d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);
                i = -1;
                while (++i < n) {
                    if (!(o = nodes[i]).fixed) {
                        q.visit(repulse(o));
                    }
                }
            }
            i = -1;
            while (++i < n) {
                o = nodes[i];
                if (o.fixed) {
                    o.x = o.px;
                    o.y = o.py;
                } else {
                    o.x -= (o.px - (o.px = o.x)) * friction;
                    o.y -= (o.py - (o.py = o.y)) * friction;
                }
            }
            event.tick({
                type: "tick",
                alpha: alpha
            });
        }
        ;
        force.nodes = function(x) {
            if (!arguments.length)
                return nodes;
            nodes = x;
            return force;
        }
        ;
        force.links = function(x) {
            if (!arguments.length)
                return links;
            links = x;
            return force;
        }
        ;
        force.size = function(x) {
            if (!arguments.length)
                return size;
            size = x;
            return force;
        }
        ;
        force.linkDistance = function(x) {
            if (!arguments.length)
                return linkDistance;
            linkDistance = typeof x === "function" ? x : +x;
            return force;
        }
        ;
        force.distance = force.linkDistance;
        force.linkStrength = function(x) {
            if (!arguments.length)
                return linkStrength;
            linkStrength = typeof x === "function" ? x : +x;
            return force;
        }
        ;
        force.friction = function(x) {
            if (!arguments.length)
                return friction;
            friction = +x;
            return force;
        }
        ;
        force.charge = function(x) {
            if (!arguments.length)
                return charge;
            charge = typeof x === "function" ? x : +x;
            return force;
        }
        ;
        force.chargeDistance = function(x) {
            if (!arguments.length)
                return Math.sqrt(chargeDistance2);
            chargeDistance2 = x * x;
            return force;
        }
        ;
        force.gravity = function(x) {
            if (!arguments.length)
                return gravity;
            gravity = +x;
            return force;
        }
        ;
        force.theta = function(x) {
            if (!arguments.length)
                return Math.sqrt(theta2);
            theta2 = x * x;
            return force;
        }
        ;
        force.alpha = function(x) {
            if (!arguments.length)
                return alpha;
            x = +x;
            if (alpha) {
                if (x > 0) {
                    alpha = x;
                } else {
                    timer.c = null,
                    timer.t = NaN,
                    timer = null;
                    event.end({
                        type: "end",
                        alpha: alpha = 0
                    });
                }
            } else if (x > 0) {
                event.start({
                    type: "start",
                    alpha: alpha = x
                });
                timer = d3_timer(force.tick);
            }
            return force;
        }
        ;
        force.start = function() {
            var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;
            for (i = 0; i < n; ++i) {
                (o = nodes[i]).index = i;
                o.weight = 0;
            }
            for (i = 0; i < m; ++i) {
                o = links[i];
                if (typeof o.source == "number")
                    o.source = nodes[o.source];
                if (typeof o.target == "number")
                    o.target = nodes[o.target];
                ++o.source.weight;
                ++o.target.weight;
            }
            for (i = 0; i < n; ++i) {
                o = nodes[i];
                if (isNaN(o.x))
                    o.x = position("x", w);
                if (isNaN(o.y))
                    o.y = position("y", h);
                if (isNaN(o.px))
                    o.px = o.x;
                if (isNaN(o.py))
                    o.py = o.y;
            }
            distances = [];
            if (typeof linkDistance === "function")
                for (i = 0; i < m; ++i)
                    distances[i] = +linkDistance.call(this, links[i], i);
            else
                for (i = 0; i < m; ++i)
                    distances[i] = linkDistance;
            strengths = [];
            if (typeof linkStrength === "function")
                for (i = 0; i < m; ++i)
                    strengths[i] = +linkStrength.call(this, links[i], i);
            else
                for (i = 0; i < m; ++i)
                    strengths[i] = linkStrength;
            charges = [];
            if (typeof charge === "function")
                for (i = 0; i < n; ++i)
                    charges[i] = +charge.call(this, nodes[i], i);
            else
                for (i = 0; i < n; ++i)
                    charges[i] = charge;
            function position(dimension, size) {
                if (!neighbors) {
                    neighbors = new Array(n);
                    for (j = 0; j < n; ++j) {
                        neighbors[j] = [];
                    }
                    for (j = 0; j < m; ++j) {
                        var o = links[j];
                        neighbors[o.source.index].push(o.target);
                        neighbors[o.target.index].push(o.source);
                    }
                }
                var candidates = neighbors[i], j = -1, l = candidates.length, x;
                while (++j < l)
                    if (!isNaN(x = candidates[j][dimension]))
                        return x;
                return Math.random() * size;
            }
            return force.resume();
        }
        ;
        force.resume = function() {
            return force.alpha(.1);
        }
        ;
        force.stop = function() {
            return force.alpha(0);
        }
        ;
        force.drag = function() {
            if (!drag)
                drag = d3.behavior.drag().origin(d3_identity).on("dragstart.force", d3_layout_forceDragstart).on("drag.force", dragmove).on("dragend.force", d3_layout_forceDragend);
            if (!arguments.length)
                return drag;
            this.on("mouseover.force", d3_layout_forceMouseover).on("mouseout.force", d3_layout_forceMouseout).call(drag);
        }
        ;
        function dragmove(d) {
            d.px = d3.event.x,
            d.py = d3.event.y;
            force.resume();
        }
        return d3.rebind(force, event, "on");
    }
    ;
    function d3_layout_forceDragstart(d) {
        d.fixed |= 2;
    }
    function d3_layout_forceDragend(d) {
        d.fixed &= ~6;
    }
    function d3_layout_forceMouseover(d) {
        d.fixed |= 4;
        d.px = d.x,
        d.py = d.y;
    }
    function d3_layout_forceMouseout(d) {
        d.fixed &= ~4;
    }
    function d3_layout_forceAccumulate(quad, alpha, charges) {
        var cx = 0
          , cy = 0;
        quad.charge = 0;
        if (!quad.leaf) {
            var nodes = quad.nodes, n = nodes.length, i = -1, c;
            while (++i < n) {
                c = nodes[i];
                if (c == null)
                    continue;
                d3_layout_forceAccumulate(c, alpha, charges);
                quad.charge += c.charge;
                cx += c.charge * c.cx;
                cy += c.charge * c.cy;
            }
        }
        if (quad.point) {
            if (!quad.leaf) {
                quad.point.x += Math.random() - .5;
                quad.point.y += Math.random() - .5;
            }
            var k = alpha * charges[quad.point.index];
            quad.charge += quad.pointCharge = k;
            cx += k * quad.point.x;
            cy += k * quad.point.y;
        }
        quad.cx = cx / quad.charge;
        quad.cy = cy / quad.charge;
    }
    var d3_layout_forceLinkDistance = 20
      , d3_layout_forceLinkStrength = 1
      , d3_layout_forceChargeDistance2 = Infinity;
    d3.layout.hierarchy = function() {
        var sort = d3_layout_hierarchySort
          , children = d3_layout_hierarchyChildren
          , value = d3_layout_hierarchyValue;
        function hierarchy(root) {
            var stack = [root], nodes = [], node;
            root.depth = 0;
            while ((node = stack.pop()) != null) {
                nodes.push(node);
                if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {
                    var n, childs, child;
                    while (--n >= 0) {
                        stack.push(child = childs[n]);
                        child.parent = node;
                        child.depth = node.depth + 1;
                    }
                    if (value)
                        node.value = 0;
                    node.children = childs;
                } else {
                    if (value)
                        node.value = +value.call(hierarchy, node, node.depth) || 0;
                    delete node.children;
                }
            }
            d3_layout_hierarchyVisitAfter(root, function(node) {
                var childs, parent;
                if (sort && (childs = node.children))
                    childs.sort(sort);
                if (value && (parent = node.parent))
                    parent.value += node.value;
            });
            return nodes;
        }
        hierarchy.sort = function(x) {
            if (!arguments.length)
                return sort;
            sort = x;
            return hierarchy;
        }
        ;
        hierarchy.children = function(x) {
            if (!arguments.length)
                return children;
            children = x;
            return hierarchy;
        }
        ;
        hierarchy.value = function(x) {
            if (!arguments.length)
                return value;
            value = x;
            return hierarchy;
        }
        ;
        hierarchy.revalue = function(root) {
            if (value) {
                d3_layout_hierarchyVisitBefore(root, function(node) {
                    if (node.children)
                        node.value = 0;
                });
                d3_layout_hierarchyVisitAfter(root, function(node) {
                    var parent;
                    if (!node.children)
                        node.value = +value.call(hierarchy, node, node.depth) || 0;
                    if (parent = node.parent)
                        parent.value += node.value;
                });
            }
            return root;
        }
        ;
        return hierarchy;
    }
    ;
    function d3_layout_hierarchyRebind(object, hierarchy) {
        d3.rebind(object, hierarchy, "sort", "children", "value");
        object.nodes = object;
        object.links = d3_layout_hierarchyLinks;
        return object;
    }
    function d3_layout_hierarchyVisitBefore(node, callback) {
        var nodes = [node];
        while ((node = nodes.pop()) != null) {
            callback(node);
            if ((children = node.children) && (n = children.length)) {
                var n, children;
                while (--n >= 0)
                    nodes.push(children[n]);
            }
        }
    }
    function d3_layout_hierarchyVisitAfter(node, callback) {
        var nodes = [node]
          , nodes2 = [];
        while ((node = nodes.pop()) != null) {
            nodes2.push(node);
            if ((children = node.children) && (n = children.length)) {
                var i = -1, n, children;
                while (++i < n)
                    nodes.push(children[i]);
            }
        }
        while ((node = nodes2.pop()) != null) {
            callback(node);
        }
    }
    function d3_layout_hierarchyChildren(d) {
        return d.children;
    }
    function d3_layout_hierarchyValue(d) {
        return d.value;
    }
    function d3_layout_hierarchySort(a, b) {
        return b.value - a.value;
    }
    function d3_layout_hierarchyLinks(nodes) {
        return d3.merge(nodes.map(function(parent) {
            return (parent.children || []).map(function(child) {
                return {
                    source: parent,
                    target: child
                };
            });
        }));
    }
    d3.layout.partition = function() {
        var hierarchy = d3.layout.hierarchy()
          , size = [1, 1];
        function position(node, x, dx, dy) {
            var children = node.children;
            node.x = x;
            node.y = node.depth * dy;
            node.dx = dx;
            node.dy = dy;
            if (children && (n = children.length)) {
                var i = -1, n, c, d;
                dx = node.value ? dx / node.value : 0;
                while (++i < n) {
                    position(c = children[i], x, d = c.value * dx, dy);
                    x += d;
                }
            }
        }
        function depth(node) {
            var children = node.children
              , d = 0;
            if (children && (n = children.length)) {
                var i = -1, n;
                while (++i < n)
                    d = Math.max(d, depth(children[i]));
            }
            return 1 + d;
        }
        function partition(d, i) {
            var nodes = hierarchy.call(this, d, i);
            position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));
            return nodes;
        }
        partition.size = function(x) {
            if (!arguments.length)
                return size;
            size = x;
            return partition;
        }
        ;
        return d3_layout_hierarchyRebind(partition, hierarchy);
    }
    ;
    d3.layout.pie = function() {
        var value = Number
          , sort = d3_layout_pieSortByValue
          , startAngle = 0
          , endAngle = τ
          , padAngle = 0;
        function pie(data) {
            var n = data.length, values = data.map(function(d, i) {
                return +value.call(pie, d, i);
            }), a = +(typeof startAngle === "function" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === "function" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === "function" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;
            if (sort != null)
                index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {
                    return values[j] - values[i];
                }
                : function(i, j) {
                    return sort(data[i], data[j]);
                }
                );
            index.forEach(function(i) {
                arcs[i] = {
                    data: data[i],
                    value: v = values[i],
                    startAngle: a,
                    endAngle: a += v * k + pa,
                    padAngle: p
                };
            });
            return arcs;
        }
        pie.value = function(_) {
            if (!arguments.length)
                return value;
            value = _;
            return pie;
        }
        ;
        pie.sort = function(_) {
            if (!arguments.length)
                return sort;
            sort = _;
            return pie;
        }
        ;
        pie.startAngle = function(_) {
            if (!arguments.length)
                return startAngle;
            startAngle = _;
            return pie;
        }
        ;
        pie.endAngle = function(_) {
            if (!arguments.length)
                return endAngle;
            endAngle = _;
            return pie;
        }
        ;
        pie.padAngle = function(_) {
            if (!arguments.length)
                return padAngle;
            padAngle = _;
            return pie;
        }
        ;
        return pie;
    }
    ;
    var d3_layout_pieSortByValue = {};
    d3.layout.stack = function() {
        var values = d3_identity
          , order = d3_layout_stackOrderDefault
          , offset = d3_layout_stackOffsetZero
          , out = d3_layout_stackOut
          , x = d3_layout_stackX
          , y = d3_layout_stackY;
        function stack(data, index) {
            if (!(n = data.length))
                return data;
            var series = data.map(function(d, i) {
                return values.call(stack, d, i);
            });
            var points = series.map(function(d) {
                return d.map(function(v, i) {
                    return [x.call(stack, v, i), y.call(stack, v, i)];
                });
            });
            var orders = order.call(stack, points, index);
            series = d3.permute(series, orders);
            points = d3.permute(points, orders);
            var offsets = offset.call(stack, points, index);
            var m = series[0].length, n, i, j, o;
            for (j = 0; j < m; ++j) {
                out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);
                for (i = 1; i < n; ++i) {
                    out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);
                }
            }
            return data;
        }
        stack.values = function(x) {
            if (!arguments.length)
                return values;
            values = x;
            return stack;
        }
        ;
        stack.order = function(x) {
            if (!arguments.length)
                return order;
            order = typeof x === "function" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;
            return stack;
        }
        ;
        stack.offset = function(x) {
            if (!arguments.length)
                return offset;
            offset = typeof x === "function" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;
            return stack;
        }
        ;
        stack.x = function(z) {
            if (!arguments.length)
                return x;
            x = z;
            return stack;
        }
        ;
        stack.y = function(z) {
            if (!arguments.length)
                return y;
            y = z;
            return stack;
        }
        ;
        stack.out = function(z) {
            if (!arguments.length)
                return out;
            out = z;
            return stack;
        }
        ;
        return stack;
    }
    ;
    function d3_layout_stackX(d) {
        return d.x;
    }
    function d3_layout_stackY(d) {
        return d.y;
    }
    function d3_layout_stackOut(d, y0, y) {
        d.y0 = y0;
        d.y = y;
    }
    var d3_layout_stackOrders = d3.map({
        "inside-out": function(data) {
            var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {
                return max[a] - max[b];
            }), top = 0, bottom = 0, tops = [], bottoms = [];
            for (i = 0; i < n; ++i) {
                j = index[i];
                if (top < bottom) {
                    top += sums[j];
                    tops.push(j);
                } else {
                    bottom += sums[j];
                    bottoms.push(j);
                }
            }
            return bottoms.reverse().concat(tops);
        },
        reverse: function(data) {
            return d3.range(data.length).reverse();
        },
        "default": d3_layout_stackOrderDefault
    });
    var d3_layout_stackOffsets = d3.map({
        silhouette: function(data) {
            var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];
            for (j = 0; j < m; ++j) {
                for (i = 0,
                o = 0; i < n; i++)
                    o += data[i][j][1];
                if (o > max)
                    max = o;
                sums.push(o);
            }
            for (j = 0; j < m; ++j) {
                y0[j] = (max - sums[j]) / 2;
            }
            return y0;
        },
        wiggle: function(data) {
            var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];
            y0[0] = o = o0 = 0;
            for (j = 1; j < m; ++j) {
                for (i = 0,
                s1 = 0; i < n; ++i)
                    s1 += data[i][j][1];
                for (i = 0,
                s2 = 0,
                dx = x[j][0] - x[j - 1][0]; i < n; ++i) {
                    for (k = 0,
                    s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {
                        s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;
                    }
                    s2 += s3 * data[i][j][1];
                }
                y0[j] = o -= s1 ? s2 / s1 * dx : 0;
                if (o < o0)
                    o0 = o;
            }
            for (j = 0; j < m; ++j)
                y0[j] -= o0;
            return y0;
        },
        expand: function(data) {
            var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];
            for (j = 0; j < m; ++j) {
                for (i = 0,
                o = 0; i < n; i++)
                    o += data[i][j][1];
                if (o)
                    for (i = 0; i < n; i++)
                        data[i][j][1] /= o;
                else
                    for (i = 0; i < n; i++)
                        data[i][j][1] = k;
            }
            for (j = 0; j < m; ++j)
                y0[j] = 0;
            return y0;
        },
        zero: d3_layout_stackOffsetZero
    });
    function d3_layout_stackOrderDefault(data) {
        return d3.range(data.length);
    }
    function d3_layout_stackOffsetZero(data) {
        var j = -1
          , m = data[0].length
          , y0 = [];
        while (++j < m)
            y0[j] = 0;
        return y0;
    }
    function d3_layout_stackMaxIndex(array) {
        var i = 1, j = 0, v = array[0][1], k, n = array.length;
        for (; i < n; ++i) {
            if ((k = array[i][1]) > v) {
                j = i;
                v = k;
            }
        }
        return j;
    }
    function d3_layout_stackReduceSum(d) {
        return d.reduce(d3_layout_stackSum, 0);
    }
    function d3_layout_stackSum(p, d) {
        return p + d[1];
    }
    d3.layout.histogram = function() {
        var frequency = true
          , valuer = Number
          , ranger = d3_layout_histogramRange
          , binner = d3_layout_histogramBinSturges;
        function histogram(data, i) {
            var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;
            while (++i < m) {
                bin = bins[i] = [];
                bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);
                bin.y = 0;
            }
            if (m > 0) {
                i = -1;
                while (++i < n) {
                    x = values[i];
                    if (x >= range[0] && x <= range[1]) {
                        bin = bins[d3.bisect(thresholds, x, 1, m) - 1];
                        bin.y += k;
                        bin.push(data[i]);
                    }
                }
            }
            return bins;
        }
        histogram.value = function(x) {
            if (!arguments.length)
                return valuer;
            valuer = x;
            return histogram;
        }
        ;
        histogram.range = function(x) {
            if (!arguments.length)
                return ranger;
            ranger = d3_functor(x);
            return histogram;
        }
        ;
        histogram.bins = function(x) {
            if (!arguments.length)
                return binner;
            binner = typeof x === "number" ? function(range) {
                return d3_layout_histogramBinFixed(range, x);
            }
            : d3_functor(x);
            return histogram;
        }
        ;
        histogram.frequency = function(x) {
            if (!arguments.length)
                return frequency;
            frequency = !!x;
            return histogram;
        }
        ;
        return histogram;
    }
    ;
    function d3_layout_histogramBinSturges(range, values) {
        return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));
    }
    function d3_layout_histogramBinFixed(range, n) {
        var x = -1
          , b = +range[0]
          , m = (range[1] - b) / n
          , f = [];
        while (++x <= n)
            f[x] = m * x + b;
        return f;
    }
    function d3_layout_histogramRange(values) {
        return [d3.min(values), d3.max(values)];
    }
    d3.layout.pack = function() {
        var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [1, 1], radius;
        function pack(d, i) {
            var nodes = hierarchy.call(this, d, i)
              , root = nodes[0]
              , w = size[0]
              , h = size[1]
              , r = radius == null ? Math.sqrt : typeof radius === "function" ? radius : function() {
                return radius;
            }
            ;
            root.x = root.y = 0;
            d3_layout_hierarchyVisitAfter(root, function(d) {
                d.r = +r(d.value);
            });
            d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
            if (padding) {
                var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;
                d3_layout_hierarchyVisitAfter(root, function(d) {
                    d.r += dr;
                });
                d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
                d3_layout_hierarchyVisitAfter(root, function(d) {
                    d.r -= dr;
                });
            }
            d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));
            return nodes;
        }
        pack.size = function(_) {
            if (!arguments.length)
                return size;
            size = _;
            return pack;
        }
        ;
        pack.radius = function(_) {
            if (!arguments.length)
                return radius;
            radius = _ == null || typeof _ === "function" ? _ : +_;
            return pack;
        }
        ;
        pack.padding = function(_) {
            if (!arguments.length)
                return padding;
            padding = +_;
            return pack;
        }
        ;
        return d3_layout_hierarchyRebind(pack, hierarchy);
    }
    ;
    function d3_layout_packSort(a, b) {
        return a.value - b.value;
    }
    function d3_layout_packInsert(a, b) {
        var c = a._pack_next;
        a._pack_next = b;
        b._pack_prev = a;
        b._pack_next = c;
        c._pack_prev = b;
    }
    function d3_layout_packSplice(a, b) {
        a._pack_next = b;
        b._pack_prev = a;
    }
    function d3_layout_packIntersects(a, b) {
        var dx = b.x - a.x
          , dy = b.y - a.y
          , dr = a.r + b.r;
        return .999 * dr * dr > dx * dx + dy * dy;
    }
    function d3_layout_packSiblings(node) {
        if (!(nodes = node.children) || !(n = nodes.length))
            return;
        var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;
        function bound(node) {
            xMin = Math.min(node.x - node.r, xMin);
            xMax = Math.max(node.x + node.r, xMax);
            yMin = Math.min(node.y - node.r, yMin);
            yMax = Math.max(node.y + node.r, yMax);
        }
        nodes.forEach(d3_layout_packLink);
        a = nodes[0];
        a.x = -a.r;
        a.y = 0;
        bound(a);
        if (n > 1) {
            b = nodes[1];
            b.x = b.r;
            b.y = 0;
            bound(b);
            if (n > 2) {
                c = nodes[2];
                d3_layout_packPlace(a, b, c);
                bound(c);
                d3_layout_packInsert(a, c);
                a._pack_prev = c;
                d3_layout_packInsert(c, b);
                b = a._pack_next;
                for (i = 3; i < n; i++) {
                    d3_layout_packPlace(a, b, c = nodes[i]);
                    var isect = 0
                      , s1 = 1
                      , s2 = 1;
                    for (j = b._pack_next; j !== b; j = j._pack_next,
                    s1++) {
                        if (d3_layout_packIntersects(j, c)) {
                            isect = 1;
                            break;
                        }
                    }
                    if (isect == 1) {
                        for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev,
                        s2++) {
                            if (d3_layout_packIntersects(k, c)) {
                                break;
                            }
                        }
                    }
                    if (isect) {
                        if (s1 < s2 || s1 == s2 && b.r < a.r)
                            d3_layout_packSplice(a, b = j);
                        else
                            d3_layout_packSplice(a = k, b);
                        i--;
                    } else {
                        d3_layout_packInsert(a, c);
                        b = c;
                        bound(c);
                    }
                }
            }
        }
        var cx = (xMin + xMax) / 2
          , cy = (yMin + yMax) / 2
          , cr = 0;
        for (i = 0; i < n; i++) {
            c = nodes[i];
            c.x -= cx;
            c.y -= cy;
            cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));
        }
        node.r = cr;
        nodes.forEach(d3_layout_packUnlink);
    }
    function d3_layout_packLink(node) {
        node._pack_next = node._pack_prev = node;
    }
    function d3_layout_packUnlink(node) {
        delete node._pack_next;
        delete node._pack_prev;
    }
    function d3_layout_packTransform(node, x, y, k) {
        var children = node.children;
        node.x = x += k * node.x;
        node.y = y += k * node.y;
        node.r *= k;
        if (children) {
            var i = -1
              , n = children.length;
            while (++i < n)
                d3_layout_packTransform(children[i], x, y, k);
        }
    }
    function d3_layout_packPlace(a, b, c) {
        var db = a.r + c.r
          , dx = b.x - a.x
          , dy = b.y - a.y;
        if (db && (dx || dy)) {
            var da = b.r + c.r
              , dc = dx * dx + dy * dy;
            da *= da;
            db *= db;
            var x = .5 + (db - da) / (2 * dc)
              , y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);
            c.x = a.x + x * dx + y * dy;
            c.y = a.y + x * dy - y * dx;
        } else {
            c.x = a.x + db;
            c.y = a.y;
        }
    }
    d3.layout.tree = function() {
        var hierarchy = d3.layout.hierarchy().sort(null).value(null)
          , separation = d3_layout_treeSeparation
          , size = [1, 1]
          , nodeSize = null;
        function tree(d, i) {
            var nodes = hierarchy.call(this, d, i)
              , root0 = nodes[0]
              , root1 = wrapTree(root0);
            d3_layout_hierarchyVisitAfter(root1, firstWalk),
            root1.parent.m = -root1.z;
            d3_layout_hierarchyVisitBefore(root1, secondWalk);
            if (nodeSize)
                d3_layout_hierarchyVisitBefore(root0, sizeNode);
            else {
                var left = root0
                  , right = root0
                  , bottom = root0;
                d3_layout_hierarchyVisitBefore(root0, function(node) {
                    if (node.x < left.x)
                        left = node;
                    if (node.x > right.x)
                        right = node;
                    if (node.depth > bottom.depth)
                        bottom = node;
                });
                var tx = separation(left, right) / 2 - left.x
                  , kx = size[0] / (right.x + separation(right, left) / 2 + tx)
                  , ky = size[1] / (bottom.depth || 1);
                d3_layout_hierarchyVisitBefore(root0, function(node) {
                    node.x = (node.x + tx) * kx;
                    node.y = node.depth * ky;
                });
            }
            return nodes;
        }
        function wrapTree(root0) {
            var root1 = {
                A: null,
                children: [root0]
            }, queue = [root1], node1;
            while ((node1 = queue.pop()) != null) {
                for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {
                    queue.push((children[i] = child = {
                        _: children[i],
                        parent: node1,
                        children: (child = children[i].children) && child.slice() || [],
                        A: null,
                        a: null,
                        z: 0,
                        m: 0,
                        c: 0,
                        s: 0,
                        t: null,
                        i: i
                    }).a = child);
                }
            }
            return root1.children[0];
        }
        function firstWalk(v) {
            var children = v.children
              , siblings = v.parent.children
              , w = v.i ? siblings[v.i - 1] : null;
            if (children.length) {
                d3_layout_treeShift(v);
                var midpoint = (children[0].z + children[children.length - 1].z) / 2;
                if (w) {
                    v.z = w.z + separation(v._, w._);
                    v.m = v.z - midpoint;
                } else {
                    v.z = midpoint;
                }
            } else if (w) {
                v.z = w.z + separation(v._, w._);
            }
            v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
        }
        function secondWalk(v) {
            v._.x = v.z + v.parent.m;
            v.m += v.parent.m;
        }
        function apportion(v, w, ancestor) {
            if (w) {
                var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;
                while (vim = d3_layout_treeRight(vim),
                vip = d3_layout_treeLeft(vip),
                vim && vip) {
                    vom = d3_layout_treeLeft(vom);
                    vop = d3_layout_treeRight(vop);
                    vop.a = v;
                    shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);
                    if (shift > 0) {
                        d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);
                        sip += shift;
                        sop += shift;
                    }
                    sim += vim.m;
                    sip += vip.m;
                    som += vom.m;
                    sop += vop.m;
                }
                if (vim && !d3_layout_treeRight(vop)) {
                    vop.t = vim;
                    vop.m += sim - sop;
                }
                if (vip && !d3_layout_treeLeft(vom)) {
                    vom.t = vip;
                    vom.m += sip - som;
                    ancestor = v;
                }
            }
            return ancestor;
        }
        function sizeNode(node) {
            node.x *= size[0];
            node.y = node.depth * size[1];
        }
        tree.separation = function(x) {
            if (!arguments.length)
                return separation;
            separation = x;
            return tree;
        }
        ;
        tree.size = function(x) {
            if (!arguments.length)
                return nodeSize ? null : size;
            nodeSize = (size = x) == null ? sizeNode : null;
            return tree;
        }
        ;
        tree.nodeSize = function(x) {
            if (!arguments.length)
                return nodeSize ? size : null;
            nodeSize = (size = x) == null ? null : sizeNode;
            return tree;
        }
        ;
        return d3_layout_hierarchyRebind(tree, hierarchy);
    }
    ;
    function d3_layout_treeSeparation(a, b) {
        return a.parent == b.parent ? 1 : 2;
    }
    function d3_layout_treeLeft(v) {
        var children = v.children;
        return children.length ? children[0] : v.t;
    }
    function d3_layout_treeRight(v) {
        var children = v.children, n;
        return (n = children.length) ? children[n - 1] : v.t;
    }
    function d3_layout_treeMove(wm, wp, shift) {
        var change = shift / (wp.i - wm.i);
        wp.c -= change;
        wp.s += shift;
        wm.c += change;
        wp.z += shift;
        wp.m += shift;
    }
    function d3_layout_treeShift(v) {
        var shift = 0, change = 0, children = v.children, i = children.length, w;
        while (--i >= 0) {
            w = children[i];
            w.z += shift;
            w.m += shift;
            shift += w.s + (change += w.c);
        }
    }
    function d3_layout_treeAncestor(vim, v, ancestor) {
        return vim.a.parent === v.parent ? vim.a : ancestor;
    }
    d3.layout.cluster = function() {
        var hierarchy = d3.layout.hierarchy().sort(null).value(null)
          , separation = d3_layout_treeSeparation
          , size = [1, 1]
          , nodeSize = false;
        function cluster(d, i) {
            var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;
            d3_layout_hierarchyVisitAfter(root, function(node) {
                var children = node.children;
                if (children && children.length) {
                    node.x = d3_layout_clusterX(children);
                    node.y = d3_layout_clusterY(children);
                } else {
                    node.x = previousNode ? x += separation(node, previousNode) : 0;
                    node.y = 0;
                    previousNode = node;
                }
            });
            var left = d3_layout_clusterLeft(root)
              , right = d3_layout_clusterRight(root)
              , x0 = left.x - separation(left, right) / 2
              , x1 = right.x + separation(right, left) / 2;
            d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {
                node.x = (node.x - root.x) * size[0];
                node.y = (root.y - node.y) * size[1];
            }
            : function(node) {
                node.x = (node.x - x0) / (x1 - x0) * size[0];
                node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];
            }
            );
            return nodes;
        }
        cluster.separation = function(x) {
            if (!arguments.length)
                return separation;
            separation = x;
            return cluster;
        }
        ;
        cluster.size = function(x) {
            if (!arguments.length)
                return nodeSize ? null : size;
            nodeSize = (size = x) == null;
            return cluster;
        }
        ;
        cluster.nodeSize = function(x) {
            if (!arguments.length)
                return nodeSize ? size : null;
            nodeSize = (size = x) != null;
            return cluster;
        }
        ;
        return d3_layout_hierarchyRebind(cluster, hierarchy);
    }
    ;
    function d3_layout_clusterY(children) {
        return 1 + d3.max(children, function(child) {
            return child.y;
        });
    }
    function d3_layout_clusterX(children) {
        return children.reduce(function(x, child) {
            return x + child.x;
        }, 0) / children.length;
    }
    function d3_layout_clusterLeft(node) {
        var children = node.children;
        return children && children.length ? d3_layout_clusterLeft(children[0]) : node;
    }
    function d3_layout_clusterRight(node) {
        var children = node.children, n;
        return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;
    }
    d3.layout.treemap = function() {
        var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [1, 1], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = "squarify", ratio = .5 * (1 + Math.sqrt(5));
        function scale(children, k) {
            var i = -1, n = children.length, child, area;
            while (++i < n) {
                area = (child = children[i]).value * (k < 0 ? 0 : k);
                child.area = isNaN(area) || area <= 0 ? 0 : area;
            }
        }
        function squarify(node) {
            var children = node.children;
            if (children && children.length) {
                var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === "slice" ? rect.dx : mode === "dice" ? rect.dy : mode === "slice-dice" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;
                scale(remaining, rect.dx * rect.dy / node.value);
                row.area = 0;
                while ((n = remaining.length) > 0) {
                    row.push(child = remaining[n - 1]);
                    row.area += child.area;
                    if (mode !== "squarify" || (score = worst(row, u)) <= best) {
                        remaining.pop();
                        best = score;
                    } else {
                        row.area -= row.pop().area;
                        position(row, u, rect, false);
                        u = Math.min(rect.dx, rect.dy);
                        row.length = row.area = 0;
                        best = Infinity;
                    }
                }
                if (row.length) {
                    position(row, u, rect, true);
                    row.length = row.area = 0;
                }
                children.forEach(squarify);
            }
        }
        function stickify(node) {
            var children = node.children;
            if (children && children.length) {
                var rect = pad(node), remaining = children.slice(), child, row = [];
                scale(remaining, rect.dx * rect.dy / node.value);
                row.area = 0;
                while (child = remaining.pop()) {
                    row.push(child);
                    row.area += child.area;
                    if (child.z != null) {
                        position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);
                        row.length = row.area = 0;
                    }
                }
                children.forEach(stickify);
            }
        }
        function worst(row, u) {
            var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;
            while (++i < n) {
                if (!(r = row[i].area))
                    continue;
                if (r < rmin)
                    rmin = r;
                if (r > rmax)
                    rmax = r;
            }
            s *= s;
            u *= u;
            return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;
        }
        function position(row, u, rect, flush) {
            var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;
            if (u == rect.dx) {
                if (flush || v > rect.dy)
                    v = rect.dy;
                while (++i < n) {
                    o = row[i];
                    o.x = x;
                    o.y = y;
                    o.dy = v;
                    x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);
                }
                o.z = true;
                o.dx += rect.x + rect.dx - x;
                rect.y += v;
                rect.dy -= v;
            } else {
                if (flush || v > rect.dx)
                    v = rect.dx;
                while (++i < n) {
                    o = row[i];
                    o.x = x;
                    o.y = y;
                    o.dx = v;
                    y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);
                }
                o.z = false;
                o.dy += rect.y + rect.dy - y;
                rect.x += v;
                rect.dx -= v;
            }
        }
        function treemap(d) {
            var nodes = stickies || hierarchy(d)
              , root = nodes[0];
            root.x = root.y = 0;
            if (root.value)
                root.dx = size[0],
                root.dy = size[1];
            else
                root.dx = root.dy = 0;
            if (stickies)
                hierarchy.revalue(root);
            scale([root], root.dx * root.dy / root.value);
            (stickies ? stickify : squarify)(root);
            if (sticky)
                stickies = nodes;
            return nodes;
        }
        treemap.size = function(x) {
            if (!arguments.length)
                return size;
            size = x;
            return treemap;
        }
        ;
        treemap.padding = function(x) {
            if (!arguments.length)
                return padding;
            function padFunction(node) {
                var p = x.call(treemap, node, node.depth);
                return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === "number" ? [p, p, p, p] : p);
            }
            function padConstant(node) {
                return d3_layout_treemapPad(node, x);
            }
            var type;
            pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === "function" ? padFunction : type === "number" ? (x = [x, x, x, x],
            padConstant) : padConstant;
            return treemap;
        }
        ;
        treemap.round = function(x) {
            if (!arguments.length)
                return round != Number;
            round = x ? Math.round : Number;
            return treemap;
        }
        ;
        treemap.sticky = function(x) {
            if (!arguments.length)
                return sticky;
            sticky = x;
            stickies = null;
            return treemap;
        }
        ;
        treemap.ratio = function(x) {
            if (!arguments.length)
                return ratio;
            ratio = x;
            return treemap;
        }
        ;
        treemap.mode = function(x) {
            if (!arguments.length)
                return mode;
            mode = x + "";
            return treemap;
        }
        ;
        return d3_layout_hierarchyRebind(treemap, hierarchy);
    }
    ;
    function d3_layout_treemapPadNull(node) {
        return {
            x: node.x,
            y: node.y,
            dx: node.dx,
            dy: node.dy
        };
    }
    function d3_layout_treemapPad(node, padding) {
        var x = node.x + padding[3]
          , y = node.y + padding[0]
          , dx = node.dx - padding[1] - padding[3]
          , dy = node.dy - padding[0] - padding[2];
        if (dx < 0) {
            x += dx / 2;
            dx = 0;
        }
        if (dy < 0) {
            y += dy / 2;
            dy = 0;
        }
        return {
            x: x,
            y: y,
            dx: dx,
            dy: dy
        };
    }
    d3.random = {
        normal: function(µ, σ) {
            var n = arguments.length;
            if (n < 2)
                σ = 1;
            if (n < 1)
                µ = 0;
            return function() {
                var x, y, r;
                do {
                    x = Math.random() * 2 - 1;
                    y = Math.random() * 2 - 1;
                    r = x * x + y * y;
                } while (!r || r > 1);
                return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);
            }
            ;
        },
        logNormal: function() {
            var random = d3.random.normal.apply(d3, arguments);
            return function() {
                return Math.exp(random());
            }
            ;
        },
        bates: function(m) {
            var random = d3.random.irwinHall(m);
            return function() {
                return random() / m;
            }
            ;
        },
        irwinHall: function(m) {
            return function() {
                for (var s = 0, j = 0; j < m; j++)
                    s += Math.random();
                return s;
            }
            ;
        }
    };
    d3.scale = {};
    function d3_scaleExtent(domain) {
        var start = domain[0]
          , stop = domain[domain.length - 1];
        return start < stop ? [start, stop] : [stop, start];
    }
    function d3_scaleRange(scale) {
        return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());
    }
    function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {
        var u = uninterpolate(domain[0], domain[1])
          , i = interpolate(range[0], range[1]);
        return function(x) {
            return i(u(x));
        }
        ;
    }
    function d3_scale_nice(domain, nice) {
        var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;
        if (x1 < x0) {
            dx = i0,
            i0 = i1,
            i1 = dx;
            dx = x0,
            x0 = x1,
            x1 = dx;
        }
        domain[i0] = nice.floor(x0);
        domain[i1] = nice.ceil(x1);
        return domain;
    }
    function d3_scale_niceStep(step) {
        return step ? {
            floor: function(x) {
                return Math.floor(x / step) * step;
            },
            ceil: function(x) {
                return Math.ceil(x / step) * step;
            }
        } : d3_scale_niceIdentity;
    }
    var d3_scale_niceIdentity = {
        floor: d3_identity,
        ceil: d3_identity
    };
    function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {
        var u = []
          , i = []
          , j = 0
          , k = Math.min(domain.length, range.length) - 1;
        if (domain[k] < domain[0]) {
            domain = domain.slice().reverse();
            range = range.slice().reverse();
        }
        while (++j <= k) {
            u.push(uninterpolate(domain[j - 1], domain[j]));
            i.push(interpolate(range[j - 1], range[j]));
        }
        return function(x) {
            var j = d3.bisect(domain, x, 1, k) - 1;
            return i[j](u[j](x));
        }
        ;
    }
    d3.scale.linear = function() {
        return d3_scale_linear([0, 1], [0, 1], d3_interpolate, false);
    }
    ;
    function d3_scale_linear(domain, range, interpolate, clamp) {
        var output, input;
        function rescale() {
            var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear
              , uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;
            output = linear(domain, range, uninterpolate, interpolate);
            input = linear(range, domain, uninterpolate, d3_interpolate);
            return scale;
        }
        function scale(x) {
            return output(x);
        }
        scale.invert = function(y) {
            return input(y);
        }
        ;
        scale.domain = function(x) {
            if (!arguments.length)
                return domain;
            domain = x.map(Number);
            return rescale();
        }
        ;
        scale.range = function(x) {
            if (!arguments.length)
                return range;
            range = x;
            return rescale();
        }
        ;
        scale.rangeRound = function(x) {
            return scale.range(x).interpolate(d3_interpolateRound);
        }
        ;
        scale.clamp = function(x) {
            if (!arguments.length)
                return clamp;
            clamp = x;
            return rescale();
        }
        ;
        scale.interpolate = function(x) {
            if (!arguments.length)
                return interpolate;
            interpolate = x;
            return rescale();
        }
        ;
        scale.ticks = function(m) {
            return d3_scale_linearTicks(domain, m);
        }
        ;
        scale.tickFormat = function(m, format) {
            return d3_scale_linearTickFormat(domain, m, format);
        }
        ;
        scale.nice = function(m) {
            d3_scale_linearNice(domain, m);
            return rescale();
        }
        ;
        scale.copy = function() {
            return d3_scale_linear(domain, range, interpolate, clamp);
        }
        ;
        return rescale();
    }
    function d3_scale_linearRebind(scale, linear) {
        return d3.rebind(scale, linear, "range", "rangeRound", "interpolate", "clamp");
    }
    function d3_scale_linearNice(domain, m) {
        d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));
        d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));
        return domain;
    }
    function d3_scale_linearTickRange(domain, m) {
        if (m == null)
            m = 10;
        var extent = d3_scaleExtent(domain)
          , span = extent[1] - extent[0]
          , step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10))
          , err = m / span * step;
        if (err <= .15)
            step *= 10;
        else if (err <= .35)
            step *= 5;
        else if (err <= .75)
            step *= 2;
        extent[0] = Math.ceil(extent[0] / step) * step;
        extent[1] = Math.floor(extent[1] / step) * step + step * .5;
        extent[2] = step;
        return extent;
    }
    function d3_scale_linearTicks(domain, m) {
        return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));
    }
    function d3_scale_linearTickFormat(domain, m, format) {
        var range = d3_scale_linearTickRange(domain, m);
        if (format) {
            var match = d3_format_re.exec(format);
            match.shift();
            if (match[8] === "s") {
                var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));
                if (!match[7])
                    match[7] = "." + d3_scale_linearPrecision(prefix.scale(range[2]));
                match[8] = "f";
                format = d3.format(match.join(""));
                return function(d) {
                    return format(prefix.scale(d)) + prefix.symbol;
                }
                ;
            }
            if (!match[7])
                match[7] = "." + d3_scale_linearFormatPrecision(match[8], range);
            format = match.join("");
        } else {
            format = ",." + d3_scale_linearPrecision(range[2]) + "f";
        }
        return d3.format(format);
    }
    var d3_scale_linearFormatSignificant = {
        s: 1,
        g: 1,
        p: 1,
        r: 1,
        e: 1
    };
    function d3_scale_linearPrecision(value) {
        return -Math.floor(Math.log(value) / Math.LN10 + .01);
    }
    function d3_scale_linearFormatPrecision(type, range) {
        var p = d3_scale_linearPrecision(range[2]);
        return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== "e") : p - (type === "%") * 2;
    }
    d3.scale.log = function() {
        return d3_scale_log(d3.scale.linear().domain([0, 1]), 10, true, [1, 10]);
    }
    ;
    function d3_scale_log(linear, base, positive, domain) {
        function log(x) {
            return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);
        }
        function pow(x) {
            return positive ? Math.pow(base, x) : -Math.pow(base, -x);
        }
        function scale(x) {
            return linear(log(x));
        }
        scale.invert = function(x) {
            return pow(linear.invert(x));
        }
        ;
        scale.domain = function(x) {
            if (!arguments.length)
                return domain;
            positive = x[0] >= 0;
            linear.domain((domain = x.map(Number)).map(log));
            return scale;
        }
        ;
        scale.base = function(_) {
            if (!arguments.length)
                return base;
            base = +_;
            linear.domain(domain.map(log));
            return scale;
        }
        ;
        scale.nice = function() {
            var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);
            linear.domain(niced);
            domain = niced.map(pow);
            return scale;
        }
        ;
        scale.ticks = function() {
            var extent = d3_scaleExtent(domain)
              , ticks = []
              , u = extent[0]
              , v = extent[1]
              , i = Math.floor(log(u))
              , j = Math.ceil(log(v))
              , n = base % 1 ? 2 : base;
            if (isFinite(j - i)) {
                if (positive) {
                    for (; i < j; i++)
                        for (var k = 1; k < n; k++)
                            ticks.push(pow(i) * k);
                    ticks.push(pow(i));
                } else {
                    ticks.push(pow(i));
                    for (; i++ < j; )
                        for (var k = n - 1; k > 0; k--)
                            ticks.push(pow(i) * k);
                }
                for (i = 0; ticks[i] < u; i++) {}
                for (j = ticks.length; ticks[j - 1] > v; j--) {}
                ticks = ticks.slice(i, j);
            }
            return ticks;
        }
        ;
        scale.tickFormat = function(n, format) {
            if (!arguments.length)
                return d3_scale_logFormat;
            if (arguments.length < 2)
                format = d3_scale_logFormat;
            else if (typeof format !== "function")
                format = d3.format(format);
            var k = Math.max(1, base * n / scale.ticks().length);
            return function(d) {
                var i = d / pow(Math.round(log(d)));
                if (i * base < base - .5)
                    i *= base;
                return i <= k ? format(d) : "";
            }
            ;
        }
        ;
        scale.copy = function() {
            return d3_scale_log(linear.copy(), base, positive, domain);
        }
        ;
        return d3_scale_linearRebind(scale, linear);
    }
    var d3_scale_logFormat = d3.format(".0e")
      , d3_scale_logNiceNegative = {
        floor: function(x) {
            return -Math.ceil(-x);
        },
        ceil: function(x) {
            return -Math.floor(-x);
        }
    };
    d3.scale.pow = function() {
        return d3_scale_pow(d3.scale.linear(), 1, [0, 1]);
    }
    ;
    function d3_scale_pow(linear, exponent, domain) {
        var powp = d3_scale_powPow(exponent)
          , powb = d3_scale_powPow(1 / exponent);
        function scale(x) {
            return linear(powp(x));
        }
        scale.invert = function(x) {
            return powb(linear.invert(x));
        }
        ;
        scale.domain = function(x) {
            if (!arguments.length)
                return domain;
            linear.domain((domain = x.map(Number)).map(powp));
            return scale;
        }
        ;
        scale.ticks = function(m) {
            return d3_scale_linearTicks(domain, m);
        }
        ;
        scale.tickFormat = function(m, format) {
            return d3_scale_linearTickFormat(domain, m, format);
        }
        ;
        scale.nice = function(m) {
            return scale.domain(d3_scale_linearNice(domain, m));
        }
        ;
        scale.exponent = function(x) {
            if (!arguments.length)
                return exponent;
            powp = d3_scale_powPow(exponent = x);
            powb = d3_scale_powPow(1 / exponent);
            linear.domain(domain.map(powp));
            return scale;
        }
        ;
        scale.copy = function() {
            return d3_scale_pow(linear.copy(), exponent, domain);
        }
        ;
        return d3_scale_linearRebind(scale, linear);
    }
    function d3_scale_powPow(e) {
        return function(x) {
            return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);
        }
        ;
    }
    d3.scale.sqrt = function() {
        return d3.scale.pow().exponent(.5);
    }
    ;
    d3.scale.ordinal = function() {
        return d3_scale_ordinal([], {
            t: "range",
            a: [[]]
        });
    }
    ;
    function d3_scale_ordinal(domain, ranger) {
        var index, range, rangeBand;
        function scale(x) {
            return range[((index.get(x) || (ranger.t === "range" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];
        }
        function steps(start, step) {
            return d3.range(domain.length).map(function(i) {
                return start + step * i;
            });
        }
        scale.domain = function(x) {
            if (!arguments.length)
                return domain;
            domain = [];
            index = new d3_Map();
            var i = -1, n = x.length, xi;
            while (++i < n)
                if (!index.has(xi = x[i]))
                    index.set(xi, domain.push(xi));
            return scale[ranger.t].apply(scale, ranger.a);
        }
        ;
        scale.range = function(x) {
            if (!arguments.length)
                return range;
            range = x;
            rangeBand = 0;
            ranger = {
                t: "range",
                a: arguments
            };
            return scale;
        }
        ;
        scale.rangePoints = function(x, padding) {
            if (arguments.length < 2)
                padding = 0;
            var start = x[0]
              , stop = x[1]
              , step = domain.length < 2 ? (start = (start + stop) / 2,
            0) : (stop - start) / (domain.length - 1 + padding);
            range = steps(start + step * padding / 2, step);
            rangeBand = 0;
            ranger = {
                t: "rangePoints",
                a: arguments
            };
            return scale;
        }
        ;
        scale.rangeRoundPoints = function(x, padding) {
            if (arguments.length < 2)
                padding = 0;
            var start = x[0]
              , stop = x[1]
              , step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2),
            0) : (stop - start) / (domain.length - 1 + padding) | 0;
            range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);
            rangeBand = 0;
            ranger = {
                t: "rangeRoundPoints",
                a: arguments
            };
            return scale;
        }
        ;
        scale.rangeBands = function(x, padding, outerPadding) {
            if (arguments.length < 2)
                padding = 0;
            if (arguments.length < 3)
                outerPadding = padding;
            var reverse = x[1] < x[0]
              , start = x[reverse - 0]
              , stop = x[1 - reverse]
              , step = (stop - start) / (domain.length - padding + 2 * outerPadding);
            range = steps(start + step * outerPadding, step);
            if (reverse)
                range.reverse();
            rangeBand = step * (1 - padding);
            ranger = {
                t: "rangeBands",
                a: arguments
            };
            return scale;
        }
        ;
        scale.rangeRoundBands = function(x, padding, outerPadding) {
            if (arguments.length < 2)
                padding = 0;
            if (arguments.length < 3)
                outerPadding = padding;
            var reverse = x[1] < x[0]
              , start = x[reverse - 0]
              , stop = x[1 - reverse]
              , step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));
            range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);
            if (reverse)
                range.reverse();
            rangeBand = Math.round(step * (1 - padding));
            ranger = {
                t: "rangeRoundBands",
                a: arguments
            };
            return scale;
        }
        ;
        scale.rangeBand = function() {
            return rangeBand;
        }
        ;
        scale.rangeExtent = function() {
            return d3_scaleExtent(ranger.a[0]);
        }
        ;
        scale.copy = function() {
            return d3_scale_ordinal(domain, ranger);
        }
        ;
        return scale.domain(domain);
    }
    d3.scale.category10 = function() {
        return d3.scale.ordinal().range(d3_category10);
    }
    ;
    d3.scale.category20 = function() {
        return d3.scale.ordinal().range(d3_category20);
    }
    ;
    d3.scale.category20b = function() {
        return d3.scale.ordinal().range(d3_category20b);
    }
    ;
    d3.scale.category20c = function() {
        return d3.scale.ordinal().range(d3_category20c);
    }
    ;
    var d3_category10 = [2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175].map(d3_rgbString);
    var d3_category20 = [2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725].map(d3_rgbString);
    var d3_category20b = [3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654].map(d3_rgbString);
    var d3_category20c = [3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081].map(d3_rgbString);
    d3.scale.quantile = function() {
        return d3_scale_quantile([], []);
    }
    ;
    function d3_scale_quantile(domain, range) {
        var thresholds;
        function rescale() {
            var k = 0
              , q = range.length;
            thresholds = [];
            while (++k < q)
                thresholds[k - 1] = d3.quantile(domain, k / q);
            return scale;
        }
        function scale(x) {
            if (!isNaN(x = +x))
                return range[d3.bisect(thresholds, x)];
        }
        scale.domain = function(x) {
            if (!arguments.length)
                return domain;
            domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);
            return rescale();
        }
        ;
        scale.range = function(x) {
            if (!arguments.length)
                return range;
            range = x;
            return rescale();
        }
        ;
        scale.quantiles = function() {
            return thresholds;
        }
        ;
        scale.invertExtent = function(y) {
            y = range.indexOf(y);
            return y < 0 ? [NaN, NaN] : [y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1]];
        }
        ;
        scale.copy = function() {
            return d3_scale_quantile(domain, range);
        }
        ;
        return rescale();
    }
    d3.scale.quantize = function() {
        return d3_scale_quantize(0, 1, [0, 1]);
    }
    ;
    function d3_scale_quantize(x0, x1, range) {
        var kx, i;
        function scale(x) {
            return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];
        }
        function rescale() {
            kx = range.length / (x1 - x0);
            i = range.length - 1;
            return scale;
        }
        scale.domain = function(x) {
            if (!arguments.length)
                return [x0, x1];
            x0 = +x[0];
            x1 = +x[x.length - 1];
            return rescale();
        }
        ;
        scale.range = function(x) {
            if (!arguments.length)
                return range;
            range = x;
            return rescale();
        }
        ;
        scale.invertExtent = function(y) {
            y = range.indexOf(y);
            y = y < 0 ? NaN : y / kx + x0;
            return [y, y + 1 / kx];
        }
        ;
        scale.copy = function() {
            return d3_scale_quantize(x0, x1, range);
        }
        ;
        return rescale();
    }
    d3.scale.threshold = function() {
        return d3_scale_threshold([.5], [0, 1]);
    }
    ;
    function d3_scale_threshold(domain, range) {
        function scale(x) {
            if (x <= x)
                return range[d3.bisect(domain, x)];
        }
        scale.domain = function(_) {
            if (!arguments.length)
                return domain;
            domain = _;
            return scale;
        }
        ;
        scale.range = function(_) {
            if (!arguments.length)
                return range;
            range = _;
            return scale;
        }
        ;
        scale.invertExtent = function(y) {
            y = range.indexOf(y);
            return [domain[y - 1], domain[y]];
        }
        ;
        scale.copy = function() {
            return d3_scale_threshold(domain, range);
        }
        ;
        return scale;
    }
    d3.scale.identity = function() {
        return d3_scale_identity([0, 1]);
    }
    ;
    function d3_scale_identity(domain) {
        function identity(x) {
            return +x;
        }
        identity.invert = identity;
        identity.domain = identity.range = function(x) {
            if (!arguments.length)
                return domain;
            domain = x.map(identity);
            return identity;
        }
        ;
        identity.ticks = function(m) {
            return d3_scale_linearTicks(domain, m);
        }
        ;
        identity.tickFormat = function(m, format) {
            return d3_scale_linearTickFormat(domain, m, format);
        }
        ;
        identity.copy = function() {
            return d3_scale_identity(domain);
        }
        ;
        return identity;
    }
    d3.svg = {};
    function d3_zero() {
        return 0;
    }
    d3.svg.arc = function() {
        var innerRadius = d3_svg_arcInnerRadius
          , outerRadius = d3_svg_arcOuterRadius
          , cornerRadius = d3_zero
          , padRadius = d3_svg_arcAuto
          , startAngle = d3_svg_arcStartAngle
          , endAngle = d3_svg_arcEndAngle
          , padAngle = d3_svg_arcPadAngle;
        function arc() {
            var r0 = Math.max(0, +innerRadius.apply(this, arguments))
              , r1 = Math.max(0, +outerRadius.apply(this, arguments))
              , a0 = startAngle.apply(this, arguments) - halfπ
              , a1 = endAngle.apply(this, arguments) - halfπ
              , da = Math.abs(a1 - a0)
              , cw = a0 > a1 ? 0 : 1;
            if (r1 < r0)
                rc = r1,
                r1 = r0,
                r0 = rc;
            if (da >= τε)
                return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : "") + "Z";
            var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];
            if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {
                rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);
                if (!cw)
                    p1 *= -1;
                if (r1)
                    p1 = d3_asin(rp / r1 * Math.sin(ap));
                if (r0)
                    p0 = d3_asin(rp / r0 * Math.sin(ap));
            }
            if (r1) {
                x0 = r1 * Math.cos(a0 + p1);
                y0 = r1 * Math.sin(a0 + p1);
                x1 = r1 * Math.cos(a1 - p1);
                y1 = r1 * Math.sin(a1 - p1);
                var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;
                if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {
                    var h1 = (a0 + a1) / 2;
                    x0 = r1 * Math.cos(h1);
                    y0 = r1 * Math.sin(h1);
                    x1 = y1 = null;
                }
            } else {
                x0 = y0 = 0;
            }
            if (r0) {
                x2 = r0 * Math.cos(a1 - p0);
                y2 = r0 * Math.sin(a1 - p0);
                x3 = r0 * Math.cos(a0 + p0);
                y3 = r0 * Math.sin(a0 + p0);
                var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;
                if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {
                    var h0 = (a0 + a1) / 2;
                    x2 = r0 * Math.cos(h0);
                    y2 = r0 * Math.sin(h0);
                    x3 = y3 = null;
                }
            } else {
                x2 = y2 = 0;
            }
            if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {
                cr = r0 < r1 ^ cw ? 0 : 1;
                var rc1 = rc
                  , rc0 = rc;
                if (da < π) {
                    var oc = x3 == null ? [x2, y2] : x1 == null ? [x0, y0] : d3_geom_polygonIntersect([x0, y0], [x3, y3], [x1, y1], [x2, y2])
                      , ax = x0 - oc[0]
                      , ay = y0 - oc[1]
                      , bx = x1 - oc[0]
                      , by = y1 - oc[1]
                      , kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2)
                      , lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);
                    rc0 = Math.min(rc, (r0 - lc) / (kc - 1));
                    rc1 = Math.min(rc, (r1 - lc) / (kc + 1));
                }
                if (x1 != null) {
                    var t30 = d3_svg_arcCornerTangents(x3 == null ? [x2, y2] : [x3, y3], [x0, y0], r1, rc1, cw)
                      , t12 = d3_svg_arcCornerTangents([x1, y1], [x2, y2], r1, rc1, cw);
                    if (rc === rc1) {
                        path.push("M", t30[0], "A", rc1, ",", rc1, " 0 0,", cr, " ", t30[1], "A", r1, ",", r1, " 0 ", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), ",", cw, " ", t12[1], "A", rc1, ",", rc1, " 0 0,", cr, " ", t12[0]);
                    } else {
                        path.push("M", t30[0], "A", rc1, ",", rc1, " 0 1,", cr, " ", t12[0]);
                    }
                } else {
                    path.push("M", x0, ",", y0);
                }
                if (x3 != null) {
                    var t03 = d3_svg_arcCornerTangents([x0, y0], [x3, y3], r0, -rc0, cw)
                      , t21 = d3_svg_arcCornerTangents([x2, y2], x1 == null ? [x0, y0] : [x1, y1], r0, -rc0, cw);
                    if (rc === rc0) {
                        path.push("L", t21[0], "A", rc0, ",", rc0, " 0 0,", cr, " ", t21[1], "A", r0, ",", r0, " 0 ", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), ",", 1 - cw, " ", t03[1], "A", rc0, ",", rc0, " 0 0,", cr, " ", t03[0]);
                    } else {
                        path.push("L", t21[0], "A", rc0, ",", rc0, " 0 0,", cr, " ", t03[0]);
                    }
                } else {
                    path.push("L", x2, ",", y2);
                }
            } else {
                path.push("M", x0, ",", y0);
                if (x1 != null)
                    path.push("A", r1, ",", r1, " 0 ", l1, ",", cw, " ", x1, ",", y1);
                path.push("L", x2, ",", y2);
                if (x3 != null)
                    path.push("A", r0, ",", r0, " 0 ", l0, ",", 1 - cw, " ", x3, ",", y3);
            }
            path.push("Z");
            return path.join("");
        }
        function circleSegment(r1, cw) {
            return "M0," + r1 + "A" + r1 + "," + r1 + " 0 1," + cw + " 0," + -r1 + "A" + r1 + "," + r1 + " 0 1," + cw + " 0," + r1;
        }
        arc.innerRadius = function(v) {
            if (!arguments.length)
                return innerRadius;
            innerRadius = d3_functor(v);
            return arc;
        }
        ;
        arc.outerRadius = function(v) {
            if (!arguments.length)
                return outerRadius;
            outerRadius = d3_functor(v);
            return arc;
        }
        ;
        arc.cornerRadius = function(v) {
            if (!arguments.length)
                return cornerRadius;
            cornerRadius = d3_functor(v);
            return arc;
        }
        ;
        arc.padRadius = function(v) {
            if (!arguments.length)
                return padRadius;
            padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);
            return arc;
        }
        ;
        arc.startAngle = function(v) {
            if (!arguments.length)
                return startAngle;
            startAngle = d3_functor(v);
            return arc;
        }
        ;
        arc.endAngle = function(v) {
            if (!arguments.length)
                return endAngle;
            endAngle = d3_functor(v);
            return arc;
        }
        ;
        arc.padAngle = function(v) {
            if (!arguments.length)
                return padAngle;
            padAngle = d3_functor(v);
            return arc;
        }
        ;
        arc.centroid = function() {
            var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2
              , a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;
            return [Math.cos(a) * r, Math.sin(a) * r];
        }
        ;
        return arc;
    }
    ;
    var d3_svg_arcAuto = "auto";
    function d3_svg_arcInnerRadius(d) {
        return d.innerRadius;
    }
    function d3_svg_arcOuterRadius(d) {
        return d.outerRadius;
    }
    function d3_svg_arcStartAngle(d) {
        return d.startAngle;
    }
    function d3_svg_arcEndAngle(d) {
        return d.endAngle;
    }
    function d3_svg_arcPadAngle(d) {
        return d && d.padAngle;
    }
    function d3_svg_arcSweep(x0, y0, x1, y1) {
        return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;
    }
    function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {
        var x01 = p0[0] - p1[0]
          , y01 = p0[1] - p1[1]
          , lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01)
          , ox = lo * y01
          , oy = -lo * x01
          , x1 = p0[0] + ox
          , y1 = p0[1] + oy
          , x2 = p1[0] + ox
          , y2 = p1[1] + oy
          , x3 = (x1 + x2) / 2
          , y3 = (y1 + y2) / 2
          , dx = x2 - x1
          , dy = y2 - y1
          , d2 = dx * dx + dy * dy
          , r = r1 - rc
          , D = x1 * y2 - x2 * y1
          , d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D))
          , cx0 = (D * dy - dx * d) / d2
          , cy0 = (-D * dx - dy * d) / d2
          , cx1 = (D * dy + dx * d) / d2
          , cy1 = (-D * dx + dy * d) / d2
          , dx0 = cx0 - x3
          , dy0 = cy0 - y3
          , dx1 = cx1 - x3
          , dy1 = cy1 - y3;
        if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1)
            cx0 = cx1,
            cy0 = cy1;
        return [[cx0 - ox, cy0 - oy], [cx0 * r1 / r, cy0 * r1 / r]];
    }
    function d3_svg_line(projection) {
        var x = d3_geom_pointX
          , y = d3_geom_pointY
          , defined = d3_true
          , interpolate = d3_svg_lineLinear
          , interpolateKey = interpolate.key
          , tension = .7;
        function line(data) {
            var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);
            function segment() {
                segments.push("M", interpolate(projection(points), tension));
            }
            while (++i < n) {
                if (defined.call(this, d = data[i], i)) {
                    points.push([+fx.call(this, d, i), +fy.call(this, d, i)]);
                } else if (points.length) {
                    segment();
                    points = [];
                }
            }
            if (points.length)
                segment();
            return segments.length ? segments.join("") : null;
        }
        line.x = function(_) {
            if (!arguments.length)
                return x;
            x = _;
            return line;
        }
        ;
        line.y = function(_) {
            if (!arguments.length)
                return y;
            y = _;
            return line;
        }
        ;
        line.defined = function(_) {
            if (!arguments.length)
                return defined;
            defined = _;
            return line;
        }
        ;
        line.interpolate = function(_) {
            if (!arguments.length)
                return interpolateKey;
            if (typeof _ === "function")
                interpolateKey = interpolate = _;
            else
                interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
            return line;
        }
        ;
        line.tension = function(_) {
            if (!arguments.length)
                return tension;
            tension = _;
            return line;
        }
        ;
        return line;
    }
    d3.svg.line = function() {
        return d3_svg_line(d3_identity);
    }
    ;
    var d3_svg_lineInterpolators = d3.map({
        linear: d3_svg_lineLinear,
        "linear-closed": d3_svg_lineLinearClosed,
        step: d3_svg_lineStep,
        "step-before": d3_svg_lineStepBefore,
        "step-after": d3_svg_lineStepAfter,
        basis: d3_svg_lineBasis,
        "basis-open": d3_svg_lineBasisOpen,
        "basis-closed": d3_svg_lineBasisClosed,
        bundle: d3_svg_lineBundle,
        cardinal: d3_svg_lineCardinal,
        "cardinal-open": d3_svg_lineCardinalOpen,
        "cardinal-closed": d3_svg_lineCardinalClosed,
        monotone: d3_svg_lineMonotone
    });
    d3_svg_lineInterpolators.forEach(function(key, value) {
        value.key = key;
        value.closed = /-closed$/.test(key);
    });
    function d3_svg_lineLinear(points) {
        return points.length > 1 ? points.join("L") : points + "Z";
    }
    function d3_svg_lineLinearClosed(points) {
        return points.join("L") + "Z";
    }
    function d3_svg_lineStep(points) {
        var i = 0
          , n = points.length
          , p = points[0]
          , path = [p[0], ",", p[1]];
        while (++i < n)
            path.push("H", (p[0] + (p = points[i])[0]) / 2, "V", p[1]);
        if (n > 1)
            path.push("H", p[0]);
        return path.join("");
    }
    function d3_svg_lineStepBefore(points) {
        var i = 0
          , n = points.length
          , p = points[0]
          , path = [p[0], ",", p[1]];
        while (++i < n)
            path.push("V", (p = points[i])[1], "H", p[0]);
        return path.join("");
    }
    function d3_svg_lineStepAfter(points) {
        var i = 0
          , n = points.length
          , p = points[0]
          , path = [p[0], ",", p[1]];
        while (++i < n)
            path.push("H", (p = points[i])[0], "V", p[1]);
        return path.join("");
    }
    function d3_svg_lineCardinalOpen(points, tension) {
        return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));
    }
    function d3_svg_lineCardinalClosed(points, tension) {
        return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]),
        points), d3_svg_lineCardinalTangents([points[points.length - 2]].concat(points, [points[1]]), tension));
    }
    function d3_svg_lineCardinal(points, tension) {
        return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));
    }
    function d3_svg_lineHermite(points, tangents) {
        if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {
            return d3_svg_lineLinear(points);
        }
        var quad = points.length != tangents.length
          , path = ""
          , p0 = points[0]
          , p = points[1]
          , t0 = tangents[0]
          , t = t0
          , pi = 1;
        if (quad) {
            path += "Q" + (p[0] - t0[0] * 2 / 3) + "," + (p[1] - t0[1] * 2 / 3) + "," + p[0] + "," + p[1];
            p0 = points[1];
            pi = 2;
        }
        if (tangents.length > 1) {
            t = tangents[1];
            p = points[pi];
            pi++;
            path += "C" + (p0[0] + t0[0]) + "," + (p0[1] + t0[1]) + "," + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
            for (var i = 2; i < tangents.length; i++,
            pi++) {
                p = points[pi];
                t = tangents[i];
                path += "S" + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
            }
        }
        if (quad) {
            var lp = points[pi];
            path += "Q" + (p[0] + t[0] * 2 / 3) + "," + (p[1] + t[1] * 2 / 3) + "," + lp[0] + "," + lp[1];
        }
        return path;
    }
    function d3_svg_lineCardinalTangents(points, tension) {
        var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;
        while (++i < n) {
            p0 = p1;
            p1 = p2;
            p2 = points[i];
            tangents.push([a * (p2[0] - p0[0]), a * (p2[1] - p0[1])]);
        }
        return tangents;
    }
    function d3_svg_lineBasis(points) {
        if (points.length < 3)
            return d3_svg_lineLinear(points);
        var i = 1
          , n = points.length
          , pi = points[0]
          , x0 = pi[0]
          , y0 = pi[1]
          , px = [x0, x0, x0, (pi = points[1])[0]]
          , py = [y0, y0, y0, pi[1]]
          , path = [x0, ",", y0, "L", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];
        points.push(points[n - 1]);
        while (++i <= n) {
            pi = points[i];
            px.shift();
            px.push(pi[0]);
            py.shift();
            py.push(pi[1]);
            d3_svg_lineBasisBezier(path, px, py);
        }
        points.pop();
        path.push("L", pi);
        return path.join("");
    }
    function d3_svg_lineBasisOpen(points) {
        if (points.length < 4)
            return d3_svg_lineLinear(points);
        var path = [], i = -1, n = points.length, pi, px = [0], py = [0];
        while (++i < 3) {
            pi = points[i];
            px.push(pi[0]);
            py.push(pi[1]);
        }
        path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + "," + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));
        --i;
        while (++i < n) {
            pi = points[i];
            px.shift();
            px.push(pi[0]);
            py.shift();
            py.push(pi[1]);
            d3_svg_lineBasisBezier(path, px, py);
        }
        return path.join("");
    }
    function d3_svg_lineBasisClosed(points) {
        var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];
        while (++i < 4) {
            pi = points[i % n];
            px.push(pi[0]);
            py.push(pi[1]);
        }
        path = [d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];
        --i;
        while (++i < m) {
            pi = points[i % n];
            px.shift();
            px.push(pi[0]);
            py.shift();
            py.push(pi[1]);
            d3_svg_lineBasisBezier(path, px, py);
        }
        return path.join("");
    }
    function d3_svg_lineBundle(points, tension) {
        var n = points.length - 1;
        if (n) {
            var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;
            while (++i <= n) {
                p = points[i];
                t = i / n;
                p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);
                p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);
            }
        }
        return d3_svg_lineBasis(points);
    }
    function d3_svg_lineDot4(a, b) {
        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
    }
    var d3_svg_lineBasisBezier1 = [0, 2 / 3, 1 / 3, 0]
      , d3_svg_lineBasisBezier2 = [0, 1 / 3, 2 / 3, 0]
      , d3_svg_lineBasisBezier3 = [0, 1 / 6, 2 / 3, 1 / 6];
    function d3_svg_lineBasisBezier(path, x, y) {
        path.push("C", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));
    }
    function d3_svg_lineSlope(p0, p1) {
        return (p1[1] - p0[1]) / (p1[0] - p0[0]);
    }
    function d3_svg_lineFiniteDifferences(points) {
        var i = 0
          , j = points.length - 1
          , m = []
          , p0 = points[0]
          , p1 = points[1]
          , d = m[0] = d3_svg_lineSlope(p0, p1);
        while (++i < j) {
            m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;
        }
        m[i] = d;
        return m;
    }
    function d3_svg_lineMonotoneTangents(points) {
        var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;
        while (++i < j) {
            d = d3_svg_lineSlope(points[i], points[i + 1]);
            if (abs(d) < ε) {
                m[i] = m[i + 1] = 0;
            } else {
                a = m[i] / d;
                b = m[i + 1] / d;
                s = a * a + b * b;
                if (s > 9) {
                    s = d * 3 / Math.sqrt(s);
                    m[i] = s * a;
                    m[i + 1] = s * b;
                }
            }
        }
        i = -1;
        while (++i <= j) {
            s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));
            tangents.push([s || 0, m[i] * s || 0]);
        }
        return tangents;
    }
    function d3_svg_lineMonotone(points) {
        return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));
    }
    d3.svg.line.radial = function() {
        var line = d3_svg_line(d3_svg_lineRadial);
        line.radius = line.x,
        delete line.x;
        line.angle = line.y,
        delete line.y;
        return line;
    }
    ;
    function d3_svg_lineRadial(points) {
        var point, i = -1, n = points.length, r, a;
        while (++i < n) {
            point = points[i];
            r = point[0];
            a = point[1] - halfπ;
            point[0] = r * Math.cos(a);
            point[1] = r * Math.sin(a);
        }
        return points;
    }
    function d3_svg_area(projection) {
        var x0 = d3_geom_pointX
          , x1 = d3_geom_pointX
          , y0 = 0
          , y1 = d3_geom_pointY
          , defined = d3_true
          , interpolate = d3_svg_lineLinear
          , interpolateKey = interpolate.key
          , interpolateReverse = interpolate
          , L = "L"
          , tension = .7;
        function area(data) {
            var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {
                return x;
            }
            : d3_functor(x1), fy1 = y0 === y1 ? function() {
                return y;
            }
            : d3_functor(y1), x, y;
            function segment() {
                segments.push("M", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), "Z");
            }
            while (++i < n) {
                if (defined.call(this, d = data[i], i)) {
                    points0.push([x = +fx0.call(this, d, i), y = +fy0.call(this, d, i)]);
                    points1.push([+fx1.call(this, d, i), +fy1.call(this, d, i)]);
                } else if (points0.length) {
                    segment();
                    points0 = [];
                    points1 = [];
                }
            }
            if (points0.length)
                segment();
            return segments.length ? segments.join("") : null;
        }
        area.x = function(_) {
            if (!arguments.length)
                return x1;
            x0 = x1 = _;
            return area;
        }
        ;
        area.x0 = function(_) {
            if (!arguments.length)
                return x0;
            x0 = _;
            return area;
        }
        ;
        area.x1 = function(_) {
            if (!arguments.length)
                return x1;
            x1 = _;
            return area;
        }
        ;
        area.y = function(_) {
            if (!arguments.length)
                return y1;
            y0 = y1 = _;
            return area;
        }
        ;
        area.y0 = function(_) {
            if (!arguments.length)
                return y0;
            y0 = _;
            return area;
        }
        ;
        area.y1 = function(_) {
            if (!arguments.length)
                return y1;
            y1 = _;
            return area;
        }
        ;
        area.defined = function(_) {
            if (!arguments.length)
                return defined;
            defined = _;
            return area;
        }
        ;
        area.interpolate = function(_) {
            if (!arguments.length)
                return interpolateKey;
            if (typeof _ === "function")
                interpolateKey = interpolate = _;
            else
                interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
            interpolateReverse = interpolate.reverse || interpolate;
            L = interpolate.closed ? "M" : "L";
            return area;
        }
        ;
        area.tension = function(_) {
            if (!arguments.length)
                return tension;
            tension = _;
            return area;
        }
        ;
        return area;
    }
    d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;
    d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;
    d3.svg.area = function() {
        return d3_svg_area(d3_identity);
    }
    ;
    d3.svg.area.radial = function() {
        var area = d3_svg_area(d3_svg_lineRadial);
        area.radius = area.x,
        delete area.x;
        area.innerRadius = area.x0,
        delete area.x0;
        area.outerRadius = area.x1,
        delete area.x1;
        area.angle = area.y,
        delete area.y;
        area.startAngle = area.y0,
        delete area.y0;
        area.endAngle = area.y1,
        delete area.y1;
        return area;
    }
    ;
    d3.svg.chord = function() {
        var source = d3_source
          , target = d3_target
          , radius = d3_svg_chordRadius
          , startAngle = d3_svg_arcStartAngle
          , endAngle = d3_svg_arcEndAngle;
        function chord(d, i) {
            var s = subgroup(this, source, d, i)
              , t = subgroup(this, target, d, i);
            return "M" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + "Z";
        }
        function subgroup(self, f, d, i) {
            var subgroup = f.call(self, d, i)
              , r = radius.call(self, subgroup, i)
              , a0 = startAngle.call(self, subgroup, i) - halfπ
              , a1 = endAngle.call(self, subgroup, i) - halfπ;
            return {
                r: r,
                a0: a0,
                a1: a1,
                p0: [r * Math.cos(a0), r * Math.sin(a0)],
                p1: [r * Math.cos(a1), r * Math.sin(a1)]
            };
        }
        function equals(a, b) {
            return a.a0 == b.a0 && a.a1 == b.a1;
        }
        function arc(r, p, a) {
            return "A" + r + "," + r + " 0 " + +(a > π) + ",1 " + p;
        }
        function curve(r0, p0, r1, p1) {
            return "Q 0,0 " + p1;
        }
        chord.radius = function(v) {
            if (!arguments.length)
                return radius;
            radius = d3_functor(v);
            return chord;
        }
        ;
        chord.source = function(v) {
            if (!arguments.length)
                return source;
            source = d3_functor(v);
            return chord;
        }
        ;
        chord.target = function(v) {
            if (!arguments.length)
                return target;
            target = d3_functor(v);
            return chord;
        }
        ;
        chord.startAngle = function(v) {
            if (!arguments.length)
                return startAngle;
            startAngle = d3_functor(v);
            return chord;
        }
        ;
        chord.endAngle = function(v) {
            if (!arguments.length)
                return endAngle;
            endAngle = d3_functor(v);
            return chord;
        }
        ;
        return chord;
    }
    ;
    function d3_svg_chordRadius(d) {
        return d.radius;
    }
    d3.svg.diagonal = function() {
        var source = d3_source
          , target = d3_target
          , projection = d3_svg_diagonalProjection;
        function diagonal(d, i) {
            var p0 = source.call(this, d, i)
              , p3 = target.call(this, d, i)
              , m = (p0.y + p3.y) / 2
              , p = [p0, {
                x: p0.x,
                y: m
            }, {
                x: p3.x,
                y: m
            }, p3];
            p = p.map(projection);
            return "M" + p[0] + "C" + p[1] + " " + p[2] + " " + p[3];
        }
        diagonal.source = function(x) {
            if (!arguments.length)
                return source;
            source = d3_functor(x);
            return diagonal;
        }
        ;
        diagonal.target = function(x) {
            if (!arguments.length)
                return target;
            target = d3_functor(x);
            return diagonal;
        }
        ;
        diagonal.projection = function(x) {
            if (!arguments.length)
                return projection;
            projection = x;
            return diagonal;
        }
        ;
        return diagonal;
    }
    ;
    function d3_svg_diagonalProjection(d) {
        return [d.x, d.y];
    }
    d3.svg.diagonal.radial = function() {
        var diagonal = d3.svg.diagonal()
          , projection = d3_svg_diagonalProjection
          , projection_ = diagonal.projection;
        diagonal.projection = function(x) {
            return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;
        }
        ;
        return diagonal;
    }
    ;
    function d3_svg_diagonalRadialProjection(projection) {
        return function() {
            var d = projection.apply(this, arguments)
              , r = d[0]
              , a = d[1] - halfπ;
            return [r * Math.cos(a), r * Math.sin(a)];
        }
        ;
    }
    d3.svg.symbol = function() {
        var type = d3_svg_symbolType
          , size = d3_svg_symbolSize;
        function symbol(d, i) {
            return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));
        }
        symbol.type = function(x) {
            if (!arguments.length)
                return type;
            type = d3_functor(x);
            return symbol;
        }
        ;
        symbol.size = function(x) {
            if (!arguments.length)
                return size;
            size = d3_functor(x);
            return symbol;
        }
        ;
        return symbol;
    }
    ;
    function d3_svg_symbolSize() {
        return 64;
    }
    function d3_svg_symbolType() {
        return "circle";
    }
    function d3_svg_symbolCircle(size) {
        var r = Math.sqrt(size / π);
        return "M0," + r + "A" + r + "," + r + " 0 1,1 0," + -r + "A" + r + "," + r + " 0 1,1 0," + r + "Z";
    }
    var d3_svg_symbols = d3.map({
        circle: d3_svg_symbolCircle,
        cross: function(size) {
            var r = Math.sqrt(size / 5) / 2;
            return "M" + -3 * r + "," + -r + "H" + -r + "V" + -3 * r + "H" + r + "V" + -r + "H" + 3 * r + "V" + r + "H" + r + "V" + 3 * r + "H" + -r + "V" + r + "H" + -3 * r + "Z";
        },
        diamond: function(size) {
            var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30))
              , rx = ry * d3_svg_symbolTan30;
            return "M0," + -ry + "L" + rx + ",0" + " 0," + ry + " " + -rx + ",0" + "Z";
        },
        square: function(size) {
            var r = Math.sqrt(size) / 2;
            return "M" + -r + "," + -r + "L" + r + "," + -r + " " + r + "," + r + " " + -r + "," + r + "Z";
        },
        "triangle-down": function(size) {
            var rx = Math.sqrt(size / d3_svg_symbolSqrt3)
              , ry = rx * d3_svg_symbolSqrt3 / 2;
            return "M0," + ry + "L" + rx + "," + -ry + " " + -rx + "," + -ry + "Z";
        },
        "triangle-up": function(size) {
            var rx = Math.sqrt(size / d3_svg_symbolSqrt3)
              , ry = rx * d3_svg_symbolSqrt3 / 2;
            return "M0," + -ry + "L" + rx + "," + ry + " " + -rx + "," + ry + "Z";
        }
    });
    d3.svg.symbolTypes = d3_svg_symbols.keys();
    var d3_svg_symbolSqrt3 = Math.sqrt(3)
      , d3_svg_symbolTan30 = Math.tan(30 * d3_radians);
    d3_selectionPrototype.transition = function(name) {
        var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {
            time: Date.now(),
            ease: d3_ease_cubicInOut,
            delay: 0,
            duration: 250
        };
        for (var j = -1, m = this.length; ++j < m; ) {
            subgroups.push(subgroup = []);
            for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
                if (node = group[i])
                    d3_transitionNode(node, i, ns, id, transition);
                subgroup.push(node);
            }
        }
        return d3_transition(subgroups, ns, id);
    }
    ;
    d3_selectionPrototype.interrupt = function(name) {
        return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));
    }
    ;
    var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());
    function d3_selection_interruptNS(ns) {
        return function() {
            var lock, activeId, active;
            if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {
                active.timer.c = null;
                active.timer.t = NaN;
                if (--lock.count)
                    delete lock[activeId];
                else
                    delete this[ns];
                lock.active += .5;
                active.event && active.event.interrupt.call(this, this.__data__, active.index);
            }
        }
        ;
    }
    function d3_transition(groups, ns, id) {
        d3_subclass(groups, d3_transitionPrototype);
        groups.namespace = ns;
        groups.id = id;
        return groups;
    }
    var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;
    d3_transitionPrototype.call = d3_selectionPrototype.call;
    d3_transitionPrototype.empty = d3_selectionPrototype.empty;
    d3_transitionPrototype.node = d3_selectionPrototype.node;
    d3_transitionPrototype.size = d3_selectionPrototype.size;
    d3.transition = function(selection, name) {
        return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);
    }
    ;
    d3.transition.prototype = d3_transitionPrototype;
    d3_transitionPrototype.select = function(selector) {
        var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;
        selector = d3_selection_selector(selector);
        for (var j = -1, m = this.length; ++j < m; ) {
            subgroups.push(subgroup = []);
            for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
                if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {
                    if ("__data__"in node)
                        subnode.__data__ = node.__data__;
                    d3_transitionNode(subnode, i, ns, id, node[ns][id]);
                    subgroup.push(subnode);
                } else {
                    subgroup.push(null);
                }
            }
        }
        return d3_transition(subgroups, ns, id);
    }
    ;
    d3_transitionPrototype.selectAll = function(selector) {
        var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;
        selector = d3_selection_selectorAll(selector);
        for (var j = -1, m = this.length; ++j < m; ) {
            for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
                if (node = group[i]) {
                    transition = node[ns][id];
                    subnodes = selector.call(node, node.__data__, i, j);
                    subgroups.push(subgroup = []);
                    for (var k = -1, o = subnodes.length; ++k < o; ) {
                        if (subnode = subnodes[k])
                            d3_transitionNode(subnode, k, ns, id, transition);
                        subgroup.push(subnode);
                    }
                }
            }
        }
        return d3_transition(subgroups, ns, id);
    }
    ;
    d3_transitionPrototype.filter = function(filter) {
        var subgroups = [], subgroup, group, node;
        if (typeof filter !== "function")
            filter = d3_selection_filter(filter);
        for (var j = 0, m = this.length; j < m; j++) {
            subgroups.push(subgroup = []);
            for (var group = this[j], i = 0, n = group.length; i < n; i++) {
                if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
                    subgroup.push(node);
                }
            }
        }
        return d3_transition(subgroups, this.namespace, this.id);
    }
    ;
    d3_transitionPrototype.tween = function(name, tween) {
        var id = this.id
          , ns = this.namespace;
        if (arguments.length < 2)
            return this.node()[ns][id].tween.get(name);
        return d3_selection_each(this, tween == null ? function(node) {
            node[ns][id].tween.remove(name);
        }
        : function(node) {
            node[ns][id].tween.set(name, tween);
        }
        );
    }
    ;
    function d3_transition_tween(groups, name, value, tween) {
        var id = groups.id
          , ns = groups.namespace;
        return d3_selection_each(groups, typeof value === "function" ? function(node, i, j) {
            node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));
        }
        : (value = tween(value),
        function(node) {
            node[ns][id].tween.set(name, value);
        }
        ));
    }
    d3_transitionPrototype.attr = function(nameNS, value) {
        if (arguments.length < 2) {
            for (value in nameNS)
                this.attr(value, nameNS[value]);
            return this;
        }
        var interpolate = nameNS == "transform" ? d3_interpolateTransform : d3_interpolate
          , name = d3.ns.qualify(nameNS);
        function attrNull() {
            this.removeAttribute(name);
        }
        function attrNullNS() {
            this.removeAttributeNS(name.space, name.local);
        }
        function attrTween(b) {
            return b == null ? attrNull : (b += "",
            function() {
                var a = this.getAttribute(name), i;
                return a !== b && (i = interpolate(a, b),
                function(t) {
                    this.setAttribute(name, i(t));
                }
                );
            }
            );
        }
        function attrTweenNS(b) {
            return b == null ? attrNullNS : (b += "",
            function() {
                var a = this.getAttributeNS(name.space, name.local), i;
                return a !== b && (i = interpolate(a, b),
                function(t) {
                    this.setAttributeNS(name.space, name.local, i(t));
                }
                );
            }
            );
        }
        return d3_transition_tween(this, "attr." + nameNS, value, name.local ? attrTweenNS : attrTween);
    }
    ;
    d3_transitionPrototype.attrTween = function(nameNS, tween) {
        var name = d3.ns.qualify(nameNS);
        function attrTween(d, i) {
            var f = tween.call(this, d, i, this.getAttribute(name));
            return f && function(t) {
                this.setAttribute(name, f(t));
            }
            ;
        }
        function attrTweenNS(d, i) {
            var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));
            return f && function(t) {
                this.setAttributeNS(name.space, name.local, f(t));
            }
            ;
        }
        return this.tween("attr." + nameNS, name.local ? attrTweenNS : attrTween);
    }
    ;
    d3_transitionPrototype.style = function(name, value, priority) {
        var n = arguments.length;
        if (n < 3) {
            if (typeof name !== "string") {
                if (n < 2)
                    value = "";
                for (priority in name)
                    this.style(priority, name[priority], value);
                return this;
            }
            priority = "";
        }
        function styleNull() {
            this.style.removeProperty(name);
        }
        function styleString(b) {
            return b == null ? styleNull : (b += "",
            function() {
                var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;
                return a !== b && (i = d3_interpolate(a, b),
                function(t) {
                    this.style.setProperty(name, i(t), priority);
                }
                );
            }
            );
        }
        return d3_transition_tween(this, "style." + name, value, styleString);
    }
    ;
    d3_transitionPrototype.styleTween = function(name, tween, priority) {
        if (arguments.length < 3)
            priority = "";
        function styleTween(d, i) {
            var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));
            return f && function(t) {
                this.style.setProperty(name, f(t), priority);
            }
            ;
        }
        return this.tween("style." + name, styleTween);
    }
    ;
    d3_transitionPrototype.text = function(value) {
        return d3_transition_tween(this, "text", value, d3_transition_text);
    }
    ;
    function d3_transition_text(b) {
        if (b == null)
            b = "";
        return function() {
            this.textContent = b;
        }
        ;
    }
    d3_transitionPrototype.remove = function() {
        var ns = this.namespace;
        return this.each("end.transition", function() {
            var p;
            if (this[ns].count < 2 && (p = this.parentNode))
                p.removeChild(this);
        });
    }
    ;
    d3_transitionPrototype.ease = function(value) {
        var id = this.id
          , ns = this.namespace;
        if (arguments.length < 1)
            return this.node()[ns][id].ease;
        if (typeof value !== "function")
            value = d3.ease.apply(d3, arguments);
        return d3_selection_each(this, function(node) {
            node[ns][id].ease = value;
        });
    }
    ;
    d3_transitionPrototype.delay = function(value) {
        var id = this.id
          , ns = this.namespace;
        if (arguments.length < 1)
            return this.node()[ns][id].delay;
        return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
            node[ns][id].delay = +value.call(node, node.__data__, i, j);
        }
        : (value = +value,
        function(node) {
            node[ns][id].delay = value;
        }
        ));
    }
    ;
    d3_transitionPrototype.duration = function(value) {
        var id = this.id
          , ns = this.namespace;
        if (arguments.length < 1)
            return this.node()[ns][id].duration;
        return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
            node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));
        }
        : (value = Math.max(1, value),
        function(node) {
            node[ns][id].duration = value;
        }
        ));
    }
    ;
    d3_transitionPrototype.each = function(type, listener) {
        var id = this.id
          , ns = this.namespace;
        if (arguments.length < 2) {
            var inherit = d3_transitionInherit
              , inheritId = d3_transitionInheritId;
            try {
                d3_transitionInheritId = id;
                d3_selection_each(this, function(node, i, j) {
                    d3_transitionInherit = node[ns][id];
                    type.call(node, node.__data__, i, j);
                });
            } finally {
                d3_transitionInherit = inherit;
                d3_transitionInheritId = inheritId;
            }
        } else {
            d3_selection_each(this, function(node) {
                var transition = node[ns][id];
                (transition.event || (transition.event = d3.dispatch("start", "end", "interrupt"))).on(type, listener);
            });
        }
        return this;
    }
    ;
    d3_transitionPrototype.transition = function() {
        var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;
        for (var j = 0, m = this.length; j < m; j++) {
            subgroups.push(subgroup = []);
            for (var group = this[j], i = 0, n = group.length; i < n; i++) {
                if (node = group[i]) {
                    transition = node[ns][id0];
                    d3_transitionNode(node, i, ns, id1, {
                        time: transition.time,
                        ease: transition.ease,
                        delay: transition.delay + transition.duration,
                        duration: transition.duration
                    });
                }
                subgroup.push(node);
            }
        }
        return d3_transition(subgroups, ns, id1);
    }
    ;
    function d3_transitionNamespace(name) {
        return name == null ? "__transition__" : "__transition_" + name + "__";
    }
    function d3_transitionNode(node, i, ns, id, inherit) {
        var lock = node[ns] || (node[ns] = {
            active: 0,
            count: 0
        }), transition = lock[id], time, timer, duration, ease, tweens;
        function schedule(elapsed) {
            var delay = transition.delay;
            timer.t = delay + time;
            if (delay <= elapsed)
                return start(elapsed - delay);
            timer.c = start;
        }
        function start(elapsed) {
            var activeId = lock.active
              , active = lock[activeId];
            if (active) {
                active.timer.c = null;
                active.timer.t = NaN;
                --lock.count;
                delete lock[activeId];
                active.event && active.event.interrupt.call(node, node.__data__, active.index);
            }
            for (var cancelId in lock) {
                if (+cancelId < id) {
                    var cancel = lock[cancelId];
                    cancel.timer.c = null;
                    cancel.timer.t = NaN;
                    --lock.count;
                    delete lock[cancelId];
                }
            }
            timer.c = tick;
            d3_timer(function() {
                if (timer.c && tick(elapsed || 1)) {
                    timer.c = null;
                    timer.t = NaN;
                }
                return 1;
            }, 0, time);
            lock.active = id;
            transition.event && transition.event.start.call(node, node.__data__, i);
            tweens = [];
            transition.tween.forEach(function(key, value) {
                if (value = value.call(node, node.__data__, i)) {
                    tweens.push(value);
                }
            });
            ease = transition.ease;
            duration = transition.duration;
        }
        function tick(elapsed) {
            var t = elapsed / duration
              , e = ease(t)
              , n = tweens.length;
            while (n > 0) {
                tweens[--n].call(node, e);
            }
            if (t >= 1) {
                transition.event && transition.event.end.call(node, node.__data__, i);
                if (--lock.count)
                    delete lock[id];
                else
                    delete node[ns];
                return 1;
            }
        }
        if (!transition) {
            time = inherit.time;
            timer = d3_timer(schedule, 0, time);
            transition = lock[id] = {
                tween: new d3_Map(),
                time: time,
                timer: timer,
                delay: inherit.delay,
                duration: inherit.duration,
                ease: inherit.ease,
                index: i
            };
            inherit = null;
            ++lock.count;
        }
    }
    d3.svg.axis = function() {
        var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [10], tickValues = null, tickFormat_;
        function axis(g) {
            g.each(function() {
                var g = d3.select(this);
                var scale0 = this.__chart__ || scale
                  , scale1 = this.__chart__ = scale.copy();
                var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(".tick").data(ticks, scale1), tickEnter = tick.enter().insert("g", ".domain").attr("class", "tick").style("opacity", ε), tickExit = d3.transition(tick.exit()).style("opacity", ε).remove(), tickUpdate = d3.transition(tick.order()).style("opacity", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;
                var range = d3_scaleRange(scale1)
                  , path = g.selectAll(".domain").data([0])
                  , pathUpdate = (path.enter().append("path").attr("class", "domain"),
                d3.transition(path));
                tickEnter.append("line");
                tickEnter.append("text");
                var lineEnter = tickEnter.select("line"), lineUpdate = tickUpdate.select("line"), text = tick.select("text").text(tickFormat), textEnter = tickEnter.select("text"), textUpdate = tickUpdate.select("text"), sign = orient === "top" || orient === "left" ? -1 : 1, x1, x2, y1, y2;
                if (orient === "bottom" || orient === "top") {
                    tickTransform = d3_svg_axisX,
                    x1 = "x",
                    y1 = "y",
                    x2 = "x2",
                    y2 = "y2";
                    text.attr("dy", sign < 0 ? "0em" : ".71em").style("text-anchor", "middle");
                    pathUpdate.attr("d", "M" + range[0] + "," + sign * outerTickSize + "V0H" + range[1] + "V" + sign * outerTickSize);
                } else {
                    tickTransform = d3_svg_axisY,
                    x1 = "y",
                    y1 = "x",
                    x2 = "y2",
                    y2 = "x2";
                    text.attr("dy", ".32em").style("text-anchor", sign < 0 ? "end" : "start");
                    pathUpdate.attr("d", "M" + sign * outerTickSize + "," + range[0] + "H0V" + range[1] + "H" + sign * outerTickSize);
                }
                lineEnter.attr(y2, sign * innerTickSize);
                textEnter.attr(y1, sign * tickSpacing);
                lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);
                textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);
                if (scale1.rangeBand) {
                    var x = scale1
                      , dx = x.rangeBand() / 2;
                    scale0 = scale1 = function(d) {
                        return x(d) + dx;
                    }
                    ;
                } else if (scale0.rangeBand) {
                    scale0 = scale1;
                } else {
                    tickExit.call(tickTransform, scale1, scale0);
                }
                tickEnter.call(tickTransform, scale0, scale1);
                tickUpdate.call(tickTransform, scale1, scale1);
            });
        }
        axis.scale = function(x) {
            if (!arguments.length)
                return scale;
            scale = x;
            return axis;
        }
        ;
        axis.orient = function(x) {
            if (!arguments.length)
                return orient;
            orient = x in d3_svg_axisOrients ? x + "" : d3_svg_axisDefaultOrient;
            return axis;
        }
        ;
        axis.ticks = function() {
            if (!arguments.length)
                return tickArguments_;
            tickArguments_ = d3_array(arguments);
            return axis;
        }
        ;
        axis.tickValues = function(x) {
            if (!arguments.length)
                return tickValues;
            tickValues = x;
            return axis;
        }
        ;
        axis.tickFormat = function(x) {
            if (!arguments.length)
                return tickFormat_;
            tickFormat_ = x;
            return axis;
        }
        ;
        axis.tickSize = function(x) {
            var n = arguments.length;
            if (!n)
                return innerTickSize;
            innerTickSize = +x;
            outerTickSize = +arguments[n - 1];
            return axis;
        }
        ;
        axis.innerTickSize = function(x) {
            if (!arguments.length)
                return innerTickSize;
            innerTickSize = +x;
            return axis;
        }
        ;
        axis.outerTickSize = function(x) {
            if (!arguments.length)
                return outerTickSize;
            outerTickSize = +x;
            return axis;
        }
        ;
        axis.tickPadding = function(x) {
            if (!arguments.length)
                return tickPadding;
            tickPadding = +x;
            return axis;
        }
        ;
        axis.tickSubdivide = function() {
            return arguments.length && axis;
        }
        ;
        return axis;
    }
    ;
    var d3_svg_axisDefaultOrient = "bottom"
      , d3_svg_axisOrients = {
        top: 1,
        right: 1,
        bottom: 1,
        left: 1
    };
    function d3_svg_axisX(selection, x0, x1) {
        selection.attr("transform", function(d) {
            var v0 = x0(d);
            return "translate(" + (isFinite(v0) ? v0 : x1(d)) + ",0)";
        });
    }
    function d3_svg_axisY(selection, y0, y1) {
        selection.attr("transform", function(d) {
            var v0 = y0(d);
            return "translate(0," + (isFinite(v0) ? v0 : y1(d)) + ")";
        });
    }
    d3.svg.brush = function() {
        var event = d3_eventDispatch(brush, "brushstart", "brush", "brushend"), x = null, y = null, xExtent = [0, 0], yExtent = [0, 0], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];
        function brush(g) {
            g.each(function() {
                var g = d3.select(this).style("pointer-events", "all").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)").on("mousedown.brush", brushstart).on("touchstart.brush", brushstart);
                var background = g.selectAll(".background").data([0]);
                background.enter().append("rect").attr("class", "background").style("visibility", "hidden").style("cursor", "crosshair");
                g.selectAll(".extent").data([0]).enter().append("rect").attr("class", "extent").style("cursor", "move");
                var resize = g.selectAll(".resize").data(resizes, d3_identity);
                resize.exit().remove();
                resize.enter().append("g").attr("class", function(d) {
                    return "resize " + d;
                }).style("cursor", function(d) {
                    return d3_svg_brushCursor[d];
                }).append("rect").attr("x", function(d) {
                    return /[ew]$/.test(d) ? -3 : null;
                }).attr("y", function(d) {
                    return /^[ns]/.test(d) ? -3 : null;
                }).attr("width", 6).attr("height", 6).style("visibility", "hidden");
                resize.style("display", brush.empty() ? "none" : null);
                var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;
                if (x) {
                    range = d3_scaleRange(x);
                    backgroundUpdate.attr("x", range[0]).attr("width", range[1] - range[0]);
                    redrawX(gUpdate);
                }
                if (y) {
                    range = d3_scaleRange(y);
                    backgroundUpdate.attr("y", range[0]).attr("height", range[1] - range[0]);
                    redrawY(gUpdate);
                }
                redraw(gUpdate);
            });
        }
        brush.event = function(g) {
            g.each(function() {
                var event_ = event.of(this, arguments)
                  , extent1 = {
                    x: xExtent,
                    y: yExtent,
                    i: xExtentDomain,
                    j: yExtentDomain
                }
                  , extent0 = this.__chart__ || extent1;
                this.__chart__ = extent1;
                if (d3_transitionInheritId) {
                    d3.select(this).transition().each("start.brush", function() {
                        xExtentDomain = extent0.i;
                        yExtentDomain = extent0.j;
                        xExtent = extent0.x;
                        yExtent = extent0.y;
                        event_({
                            type: "brushstart"
                        });
                    }).tween("brush:brush", function() {
                        var xi = d3_interpolateArray(xExtent, extent1.x)
                          , yi = d3_interpolateArray(yExtent, extent1.y);
                        xExtentDomain = yExtentDomain = null;
                        return function(t) {
                            xExtent = extent1.x = xi(t);
                            yExtent = extent1.y = yi(t);
                            event_({
                                type: "brush",
                                mode: "resize"
                            });
                        }
                        ;
                    }).each("end.brush", function() {
                        xExtentDomain = extent1.i;
                        yExtentDomain = extent1.j;
                        event_({
                            type: "brush",
                            mode: "resize"
                        });
                        event_({
                            type: "brushend"
                        });
                    });
                } else {
                    event_({
                        type: "brushstart"
                    });
                    event_({
                        type: "brush",
                        mode: "resize"
                    });
                    event_({
                        type: "brushend"
                    });
                }
            });
        }
        ;
        function redraw(g) {
            g.selectAll(".resize").attr("transform", function(d) {
                return "translate(" + xExtent[+/e$/.test(d)] + "," + yExtent[+/^s/.test(d)] + ")";
            });
        }
        function redrawX(g) {
            g.select(".extent").attr("x", xExtent[0]);
            g.selectAll(".extent,.n>rect,.s>rect").attr("width", xExtent[1] - xExtent[0]);
        }
        function redrawY(g) {
            g.select(".extent").attr("y", yExtent[0]);
            g.selectAll(".extent,.e>rect,.w>rect").attr("height", yExtent[1] - yExtent[0]);
        }
        function brushstart() {
            var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed("extent"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;
            var w = d3.select(d3_window(target)).on("keydown.brush", keydown).on("keyup.brush", keyup);
            if (d3.event.changedTouches) {
                w.on("touchmove.brush", brushmove).on("touchend.brush", brushend);
            } else {
                w.on("mousemove.brush", brushmove).on("mouseup.brush", brushend);
            }
            g.interrupt().selectAll("*").interrupt();
            if (dragging) {
                origin[0] = xExtent[0] - origin[0];
                origin[1] = yExtent[0] - origin[1];
            } else if (resizing) {
                var ex = +/w$/.test(resizing)
                  , ey = +/^n/.test(resizing);
                offset = [xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1]];
                origin[0] = xExtent[ex];
                origin[1] = yExtent[ey];
            } else if (d3.event.altKey)
                center = origin.slice();
            g.style("pointer-events", "none").selectAll(".resize").style("display", null);
            d3.select("body").style("cursor", eventTarget.style("cursor"));
            event_({
                type: "brushstart"
            });
            brushmove();
            function keydown() {
                if (d3.event.keyCode == 32) {
                    if (!dragging) {
                        center = null;
                        origin[0] -= xExtent[1];
                        origin[1] -= yExtent[1];
                        dragging = 2;
                    }
                    d3_eventPreventDefault();
                }
            }
            function keyup() {
                if (d3.event.keyCode == 32 && dragging == 2) {
                    origin[0] += xExtent[1];
                    origin[1] += yExtent[1];
                    dragging = 0;
                    d3_eventPreventDefault();
                }
            }
            function brushmove() {
                var point = d3.mouse(target)
                  , moved = false;
                if (offset) {
                    point[0] += offset[0];
                    point[1] += offset[1];
                }
                if (!dragging) {
                    if (d3.event.altKey) {
                        if (!center)
                            center = [(xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2];
                        origin[0] = xExtent[+(point[0] < center[0])];
                        origin[1] = yExtent[+(point[1] < center[1])];
                    } else
                        center = null;
                }
                if (resizingX && move1(point, x, 0)) {
                    redrawX(g);
                    moved = true;
                }
                if (resizingY && move1(point, y, 1)) {
                    redrawY(g);
                    moved = true;
                }
                if (moved) {
                    redraw(g);
                    event_({
                        type: "brush",
                        mode: dragging ? "move" : "resize"
                    });
                }
            }
            function move1(point, scale, i) {
                var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;
                if (dragging) {
                    r0 -= position;
                    r1 -= size + position;
                }
                min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];
                if (dragging) {
                    max = (min += position) + size;
                } else {
                    if (center)
                        position = Math.max(r0, Math.min(r1, 2 * center[i] - min));
                    if (position < min) {
                        max = min;
                        min = position;
                    } else {
                        max = position;
                    }
                }
                if (extent[0] != min || extent[1] != max) {
                    if (i)
                        yExtentDomain = null;
                    else
                        xExtentDomain = null;
                    extent[0] = min;
                    extent[1] = max;
                    return true;
                }
            }
            function brushend() {
                brushmove();
                g.style("pointer-events", "all").selectAll(".resize").style("display", brush.empty() ? "none" : null);
                d3.select("body").style("cursor", null);
                w.on("mousemove.brush", null).on("mouseup.brush", null).on("touchmove.brush", null).on("touchend.brush", null).on("keydown.brush", null).on("keyup.brush", null);
                dragRestore();
                event_({
                    type: "brushend"
                });
            }
        }
        brush.x = function(z) {
            if (!arguments.length)
                return x;
            x = z;
            resizes = d3_svg_brushResizes[!x << 1 | !y];
            return brush;
        }
        ;
        brush.y = function(z) {
            if (!arguments.length)
                return y;
            y = z;
            resizes = d3_svg_brushResizes[!x << 1 | !y];
            return brush;
        }
        ;
        brush.clamp = function(z) {
            if (!arguments.length)
                return x && y ? [xClamp, yClamp] : x ? xClamp : y ? yClamp : null;
            if (x && y)
                xClamp = !!z[0],
                yClamp = !!z[1];
            else if (x)
                xClamp = !!z;
            else if (y)
                yClamp = !!z;
            return brush;
        }
        ;
        brush.extent = function(z) {
            var x0, x1, y0, y1, t;
            if (!arguments.length) {
                if (x) {
                    if (xExtentDomain) {
                        x0 = xExtentDomain[0],
                        x1 = xExtentDomain[1];
                    } else {
                        x0 = xExtent[0],
                        x1 = xExtent[1];
                        if (x.invert)
                            x0 = x.invert(x0),
                            x1 = x.invert(x1);
                        if (x1 < x0)
                            t = x0,
                            x0 = x1,
                            x1 = t;
                    }
                }
                if (y) {
                    if (yExtentDomain) {
                        y0 = yExtentDomain[0],
                        y1 = yExtentDomain[1];
                    } else {
                        y0 = yExtent[0],
                        y1 = yExtent[1];
                        if (y.invert)
                            y0 = y.invert(y0),
                            y1 = y.invert(y1);
                        if (y1 < y0)
                            t = y0,
                            y0 = y1,
                            y1 = t;
                    }
                }
                return x && y ? [[x0, y0], [x1, y1]] : x ? [x0, x1] : y && [y0, y1];
            }
            if (x) {
                x0 = z[0],
                x1 = z[1];
                if (y)
                    x0 = x0[0],
                    x1 = x1[0];
                xExtentDomain = [x0, x1];
                if (x.invert)
                    x0 = x(x0),
                    x1 = x(x1);
                if (x1 < x0)
                    t = x0,
                    x0 = x1,
                    x1 = t;
                if (x0 != xExtent[0] || x1 != xExtent[1])
                    xExtent = [x0, x1];
            }
            if (y) {
                y0 = z[0],
                y1 = z[1];
                if (x)
                    y0 = y0[1],
                    y1 = y1[1];
                yExtentDomain = [y0, y1];
                if (y.invert)
                    y0 = y(y0),
                    y1 = y(y1);
                if (y1 < y0)
                    t = y0,
                    y0 = y1,
                    y1 = t;
                if (y0 != yExtent[0] || y1 != yExtent[1])
                    yExtent = [y0, y1];
            }
            return brush;
        }
        ;
        brush.clear = function() {
            if (!brush.empty()) {
                xExtent = [0, 0],
                yExtent = [0, 0];
                xExtentDomain = yExtentDomain = null;
            }
            return brush;
        }
        ;
        brush.empty = function() {
            return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];
        }
        ;
        return d3.rebind(brush, event, "on");
    }
    ;
    var d3_svg_brushCursor = {
        n: "ns-resize",
        e: "ew-resize",
        s: "ns-resize",
        w: "ew-resize",
        nw: "nwse-resize",
        ne: "nesw-resize",
        se: "nwse-resize",
        sw: "nesw-resize"
    };
    var d3_svg_brushResizes = [["n", "e", "s", "w", "nw", "ne", "se", "sw"], ["e", "w"], ["n", "s"], []];
    var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;
    var d3_time_formatUtc = d3_time_format.utc;
    var d3_time_formatIso = d3_time_formatUtc("%Y-%m-%dT%H:%M:%S.%LZ");
    d3_time_format.iso = Date.prototype.toISOString && +new Date("2000-01-01T00:00:00.000Z") ? d3_time_formatIsoNative : d3_time_formatIso;
    function d3_time_formatIsoNative(date) {
        return date.toISOString();
    }
    d3_time_formatIsoNative.parse = function(string) {
        var date = new Date(string);
        return isNaN(date) ? null : date;
    }
    ;
    d3_time_formatIsoNative.toString = d3_time_formatIso.toString;
    d3_time.second = d3_time_interval(function(date) {
        return new d3_date(Math.floor(date / 1e3) * 1e3);
    }, function(date, offset) {
        date.setTime(date.getTime() + Math.floor(offset) * 1e3);
    }, function(date) {
        return date.getSeconds();
    });
    d3_time.seconds = d3_time.second.range;
    d3_time.seconds.utc = d3_time.second.utc.range;
    d3_time.minute = d3_time_interval(function(date) {
        return new d3_date(Math.floor(date / 6e4) * 6e4);
    }, function(date, offset) {
        date.setTime(date.getTime() + Math.floor(offset) * 6e4);
    }, function(date) {
        return date.getMinutes();
    });
    d3_time.minutes = d3_time.minute.range;
    d3_time.minutes.utc = d3_time.minute.utc.range;
    d3_time.hour = d3_time_interval(function(date) {
        var timezone = date.getTimezoneOffset() / 60;
        return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);
    }, function(date, offset) {
        date.setTime(date.getTime() + Math.floor(offset) * 36e5);
    }, function(date) {
        return date.getHours();
    });
    d3_time.hours = d3_time.hour.range;
    d3_time.hours.utc = d3_time.hour.utc.range;
    d3_time.month = d3_time_interval(function(date) {
        date = d3_time.day(date);
        date.setDate(1);
        return date;
    }, function(date, offset) {
        date.setMonth(date.getMonth() + offset);
    }, function(date) {
        return date.getMonth();
    });
    d3_time.months = d3_time.month.range;
    d3_time.months.utc = d3_time.month.utc.range;
    function d3_time_scale(linear, methods, format) {
        function scale(x) {
            return linear(x);
        }
        scale.invert = function(x) {
            return d3_time_scaleDate(linear.invert(x));
        }
        ;
        scale.domain = function(x) {
            if (!arguments.length)
                return linear.domain().map(d3_time_scaleDate);
            linear.domain(x);
            return scale;
        }
        ;
        function tickMethod(extent, count) {
            var span = extent[1] - extent[0]
              , target = span / count
              , i = d3.bisect(d3_time_scaleSteps, target);
            return i == d3_time_scaleSteps.length ? [methods.year, d3_scale_linearTickRange(extent.map(function(d) {
                return d / 31536e6;
            }), count)[2]] : !i ? [d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2]] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];
        }
        scale.nice = function(interval, skip) {
            var domain = scale.domain()
              , extent = d3_scaleExtent(domain)
              , method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" && tickMethod(extent, interval);
            if (method)
                interval = method[0],
                skip = method[1];
            function skipped(date) {
                return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;
            }
            return scale.domain(d3_scale_nice(domain, skip > 1 ? {
                floor: function(date) {
                    while (skipped(date = interval.floor(date)))
                        date = d3_time_scaleDate(date - 1);
                    return date;
                },
                ceil: function(date) {
                    while (skipped(date = interval.ceil(date)))
                        date = d3_time_scaleDate(+date + 1);
                    return date;
                }
            } : interval));
        }
        ;
        scale.ticks = function(interval, skip) {
            var extent = d3_scaleExtent(scale.domain())
              , method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" ? tickMethod(extent, interval) : !interval.range && [{
                range: interval
            }, skip];
            if (method)
                interval = method[0],
                skip = method[1];
            return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);
        }
        ;
        scale.tickFormat = function() {
            return format;
        }
        ;
        scale.copy = function() {
            return d3_time_scale(linear.copy(), methods, format);
        }
        ;
        return d3_scale_linearRebind(scale, linear);
    }
    function d3_time_scaleDate(t) {
        return new Date(t);
    }
    var d3_time_scaleSteps = [1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6];
    var d3_time_scaleLocalMethods = [[d3_time.second, 1], [d3_time.second, 5], [d3_time.second, 15], [d3_time.second, 30], [d3_time.minute, 1], [d3_time.minute, 5], [d3_time.minute, 15], [d3_time.minute, 30], [d3_time.hour, 1], [d3_time.hour, 3], [d3_time.hour, 6], [d3_time.hour, 12], [d3_time.day, 1], [d3_time.day, 2], [d3_time.week, 1], [d3_time.month, 1], [d3_time.month, 3], [d3_time.year, 1]];
    var d3_time_scaleLocalFormat = d3_time_format.multi([[".%L", function(d) {
        return d.getMilliseconds();
    }
    ], [":%S", function(d) {
        return d.getSeconds();
    }
    ], ["%I:%M", function(d) {
        return d.getMinutes();
    }
    ], ["%I %p", function(d) {
        return d.getHours();
    }
    ], ["%a %d", function(d) {
        return d.getDay() && d.getDate() != 1;
    }
    ], ["%b %d", function(d) {
        return d.getDate() != 1;
    }
    ], ["%B", function(d) {
        return d.getMonth();
    }
    ], ["%Y", d3_true]]);
    var d3_time_scaleMilliseconds = {
        range: function(start, stop, step) {
            return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);
        },
        floor: d3_identity,
        ceil: d3_identity
    };
    d3_time_scaleLocalMethods.year = d3_time.year;
    d3_time.scale = function() {
        return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);
    }
    ;
    var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {
        return [m[0].utc, m[1]];
    });
    var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([[".%L", function(d) {
        return d.getUTCMilliseconds();
    }
    ], [":%S", function(d) {
        return d.getUTCSeconds();
    }
    ], ["%I:%M", function(d) {
        return d.getUTCMinutes();
    }
    ], ["%I %p", function(d) {
        return d.getUTCHours();
    }
    ], ["%a %d", function(d) {
        return d.getUTCDay() && d.getUTCDate() != 1;
    }
    ], ["%b %d", function(d) {
        return d.getUTCDate() != 1;
    }
    ], ["%B", function(d) {
        return d.getUTCMonth();
    }
    ], ["%Y", d3_true]]);
    d3_time_scaleUtcMethods.year = d3_time.year.utc;
    d3_time.scale.utc = function() {
        return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);
    }
    ;
    d3.text = d3_xhrType(function(request) {
        return request.responseText;
    });
    d3.json = function(url, callback) {
        return d3_xhr(url, "application/json", d3_json, callback);
    }
    ;
    function d3_json(request) {
        return JSON.parse(request.responseText);
    }
    d3.html = function(url, callback) {
        return d3_xhr(url, "text/html", d3_html, callback);
    }
    ;
    function d3_html(request) {
        var range = d3_document.createRange();
        range.selectNode(d3_document.body);
        return range.createContextualFragment(request.responseText);
    }
    d3.xml = d3_xhrType(function(request) {
        return request.responseXML;
    });
    if (typeof define === "function" && define.amd)
        this.d3 = d3,
        define(d3);
    else if (typeof module === "object" && module.exports)
        module.exports = d3;
    else
        this.d3 = d3;
}();
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(d, b) {
            d.__proto__ = b
        }
        || function(d, b) {
            for (var p in b)
                if (b.hasOwnProperty(p))
                    d[p] = b[p]
        }
        ;
        return extendStatics(d, b)
    };
    return function(d, b) {
        extendStatics(d, b);
        function __() {
            this.constructor = d
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype,
        new __)
    }
}();
angular.module("global", ["pascalprecht.translate", "ngCookies"]);
var dm;
(function(dm) {
    var ngjs;
    (function(ngjs) {
        ngjs.$parse = null;
        ngjs.$q = null;
        ngjs.$timeout = null;
        ngjs.$translate = null;
        ngjs.$cookies = null;
        ngjs.$rootScope = null;
        ngjs.$http = null;
        ngjs.$state = null;
        ngjs.$log = null;
        ngjs.$interval = null;
        ngjs.$filter = null;
        ngjs.$window = null;
        ngjs.$compile = null;
        angular.module("global").run(["$parse", "$q", "$timeout", "$translate", "$cookies", "$rootScope", "$http", "$window", "$state", "$log", "$interval", "$filter", "$compile", function(_$parse, _$q, _$timeout, _$translate, _$cookies, _$rootScope, _$http, _$window, _$state, _$log, _$interval, _$filter, _$compile) {
            ngjs.$parse = _$parse;
            ngjs.$q = _$q;
            ngjs.$timeout = _$timeout;
            ngjs.$translate = _$translate;
            ngjs.$cookies = _$cookies;
            ngjs.$rootScope = _$rootScope;
            ngjs.$http = _$http;
            ngjs.$window = _$window;
            ngjs.$state = _$state;
            ngjs.$log = _$log;
            ngjs.$interval = _$interval;
            ngjs.$filter = _$filter;
            ngjs.$compile = _$compile
        }
        ])
    }
    )(ngjs = dm.ngjs || (dm.ngjs = {}))
}
)(dm || (dm = {}));
var m = angular.module("global");
m.provider("appConfig", function() {
    var config = {
        imgPath: "/img"
    };
    this.configure = function(values) {
        angular.extend(config, values)
    }
    ;
    this.$get = function() {
        return config
    }
});
var dm;
(function(dm) {
    var util;
    (function(util) {
        var ajaxRequest;
        (function(ajaxRequest) {
            var unsentRequests = {
                get: {}
            };
            var requestFilters = {
                get: {}
            };
            var filterRequests = function() {
                var requestRoot = {};
                for (var path in unsentRequests.get) {
                    for (var filterPath in requestFilters.get) {
                        var filter = requestFilters.get[filterPath];
                        if (path.indexOf(filterPath) < 0)
                            continue;
                        var req = filter.fn(requestRoot[filterPath], unsentRequests.get[path], path);
                        if (req) {
                            requestRoot[filterPath] = req;
                            delete unsentRequests.get[path]
                        }
                    }
                }
            };
            var sendRequests = function() {
                filterRequests();
                for (var path in unsentRequests.get) {
                    var deferred = unsentRequests.get[path];
                    dm.ngjs.$http.get(path).then(deferred.resolve, deferred.reject)
                }
                unsentRequests.get = {}
            };
            function registerRequestFilter(method, path, fn) {
                if (!requestFilters[method])
                    return;
                requestFilters[method][path] = {
                    path: path,
                    fn: fn
                }
            }
            ajaxRequest.registerRequestFilter = registerRequestFilter;
            function get(path) {
                if (angular.equals(unsentRequests.get, {})) {
                    dm.ngjs.$rootScope.$evalAsync(sendRequests)
                }
                if (!unsentRequests.get[path])
                    unsentRequests.get[path] = dm.ngjs.$q.defer();
                return unsentRequests.get[path].promise
            }
            ajaxRequest.get = get;
            function post(path, data) {
                return dm.ngjs.$http.post(path, data)
            }
            ajaxRequest.post = post
        }
        )(ajaxRequest = util.ajaxRequest || (util.ajaxRequest = {}))
    }
    )(util = dm.util || (dm.util = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var standardDialog;
    (function(standardDialog) {
        var ngDialog = null;
        angular.module("global").service("standardDialog", ["ngDialog", function(_ngDialog) {
            ngDialog = _ngDialog
        }
        ]);
        var StandardDialog = function() {
            function StandardDialog(scope, titleText, htmlContent, closeText, scopeCallback) {
                this.buttons = [];
                this.dialog = null;
                this.width = "400px";
                this.htmlContent = htmlContent;
                this.callBack = scopeCallback ? scopeCallback : "";
                this.scope = null;
                if (scope) {
                    this.scope = scope;
                    if (titleText)
                        scope.standardDlgTitleText = titleText;
                    if (closeText != null)
                        scope.standardDlgCloseText = closeText;
                    else
                        scope.standardDlgCloseText = ""
                }
            }
            StandardDialog.prototype.setWidth = function(width) {
                this.width = width
            }
            ;
            StandardDialog.prototype.setShowLoading = function(showLoading) {
                this.scope.standardDlgShowLoading = showLoading
            }
            ;
            StandardDialog.prototype.updateValues = function(titleText, closeText) {
                this.scope.standardDlgTitleText = titleText;
                this.scope.standardDlgCloseText = closeText
            }
            ;
            StandardDialog.prototype.closeDialog = function() {
                if (this.dialog != undefined && typeof this.dialog.close == "function") {
                    this.setShowLoading(false);
                    this.dialog.close()
                }
            }
            ;
            StandardDialog.prototype.showDialog = function(templateId, plain) {
                var templateHtml = '                <dialog-template style="width: ' + this.width + '">                 <dialog-title>{{standardDlgTitleText | translate }}                                     <img ng-show="standardDlgShowLoading" class="connect_dialog_animation" style="position:absolute; top:8.5px; right:10px; "src="/img/ajax-loader-micro.gif"/>                     </dialog-title>                     <dialog-content>' + this.htmlContent + '</dialog-content>                     <dialog-button-pane>                        <dialog-button ng-if="standardDlgCloseText!=\'\'" ng-click="closeThisDialog();' + this.callBack + '">{{ standardDlgCloseText |translate}}</dialog-button>';
                for (var i in this.buttons) {
                    var button = this.buttons[i];
                    templateHtml += '<dialog-button ng-click="closeThisDialog();' + button.callback + "\"> {{'" + button.title + "'|translate}}</dialog-button>"
                }
                templateHtml += "</dialog-button-pane>                             </dialog-template>";
                this.dialog = ngDialog.open({
                    template: templateId ? templateId : templateHtml,
                    name: plain === undefined || plain === false ? templateId : "stdDialog",
                    showClose: false,
                    plain: plain == undefined ? templateId == undefined ? true : false : plain,
                    closeByDocument: false,
                    closeByEscape: false,
                    closeByNavigation: true,
                    disableAnimation: true,
                    trapFocus: true,
                    scope: this.scope
                })
            }
            ;
            StandardDialog.prototype.addButton = function(buttonText, scopeClickCallback) {
                this.buttons[buttonText] = {
                    title: buttonText,
                    callback: scopeClickCallback
                }
            }
            ;
            return StandardDialog
        }();
        standardDialog.StandardDialog = StandardDialog
    }
    )(standardDialog = dm.standardDialog || (dm.standardDialog = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var util;
    (function(util) {
        var configRequest;
        (function(configRequest) {
            var checkResponse = function(aCfgResponse) {
                var statusCode = 0;
                try {
                    statusCode = aCfgResponse.Head.Status.Code;
                    var reason = aCfgResponse.Head.Status.Reason;
                    var statusMessage = aCfgResponse.Head.Status.UserMessage;
                    var errorDetail = aCfgResponse.Head.Status.ErrorDetail;
                    if (errorDetail != undefined)
                        var statusNodes = aCfgResponse.Head.Status.ErrorDetail.Nodes;
                    var data = aCfgResponse.Body.Data;
                    if (statusCode == undefined)
                        return false;
                    if (reason == undefined)
                        return false;
                    if (statusMessage == undefined)
                        return false;
                    if (data == undefined)
                        return false;
                    return true
                } catch (e) {
                    aCfgResponse.Head = {
                        Status: {
                            Code: -9999,
                            Reason: "no legal cfg response received",
                            UserMessage: "{{ILLEGAL_CONFIG_RESPONSE}}",
                            ErrorDetail: {
                                Nodes: []
                            }
                        }
                    };
                    return false
                }
                return true
            };
            configRequest.defButtonOK = {};
            configRequest.defButtonOK["OK"] = null;
            var showDialog = function(template) {
                var dialog = new dm.standardDialog.StandardDialog;
                dialog.showDialog(template, true)
            };
            function showCfgFailureDialog(failure) {
                try {
                    showDialog('<dialog-template>                 <dialog-title>CGI-Failure</dialog-title>                 <dialog-content> The server is sending no response or is not accessible </dialog-content>                 <dialog-button-pane>                     <dialog-button ng-click="closeThisDialog()">OK</dialog-button>                 </dialog-button-pane>             </dialog-template>')
                } catch (e) {}
            }
            configRequest.showCfgFailureDialog = showCfgFailureDialog;
            function showCfgErrorDialog(aError) {
                try {
                    var Code = aError.Head.Status.Code;
                    var Reason = aError.Head.Status.Reason;
                    showDialog("<dialog-template>                 <dialog-title>CGI-Error</dialog-title>                 <dialog-content>                     code: " + Code + "<br>                     reason: " + Reason + '                 </dialog-content>                 <dialog-button-pane>                     <dialog-button ng-click="closeThisDialog()">OK</dialog-button>                 </dialog-button-pane>             </dialog-template>')
                } catch (e) {
                    showCfgFailureDialog()
                }
            }
            configRequest.showCfgErrorDialog = showCfgErrorDialog;
            function showCfgSavedDialog() {
                try {
                    showDialog('<dialog-template>                 <dialog-title>{{"DIALOG_TITLE_HINT"|translate}}</dialog-title>                 <dialog-content>{{"DIALOG_TEXT_SAVED"|translate}}</dialog-content>                 <dialog-button-pane>                     <dialog-button ng-click="closeThisDialog()">OK</dialog-button>                 </dialog-button-pane>             </dialog-template>')
                } catch (e) {
                    console.log("caught err: ", e)
                }
            }
            configRequest.showCfgSavedDialog = showCfgSavedDialog;
            function get(resource) {
                return dm.ngjs.$q(function(resolve, reject) {
                    util.ajaxRequest.get(resource).then(function(response) {
                        var data = response.data;
                        if (checkResponse(data) && data.Head.Status.Code == 0) {
                            resolve(data.Body.Data)
                        } else {
                            reject(response)
                        }
                    }, function(response) {
                        reject(response)
                    })
                })
            }
            configRequest.get = get;
            function save(resource, data, doneHandler, errorHandler, failedHandler) {
                if (resource.length && resource[0] == "/") {
                    dm.ngjs.$http.post(resource + "?method=save", data).then(function(aResponse) {
                        aResponse = aResponse.data;
                        if (checkResponse(aResponse)) {
                            if (aResponse.Head.Status.Code == 0) {
                                if (doneHandler != undefined)
                                    doneHandler(aResponse.Body.Data)
                            } else {
                                if (errorHandler != undefined)
                                    errorHandler(aResponse)
                            }
                        } else {
                            if (errorHandler != undefined)
                                errorHandler(aResponse)
                        }
                    }, function(aError) {
                        if (failedHandler != undefined)
                            failedHandler(aError)
                    })
                }
            }
            configRequest.save = save;
            function saveDef(resource, data) {
                if (!(resource.length && resource[0] == "/"))
                    return dm.ngjs.$q.reject();
                return dm.ngjs.$http.post(resource + "?method=save", data).then(function(aResponse) {
                    aResponse = aResponse.data;
                    if (checkResponse(aResponse)) {
                        if (aResponse.Head.Status.Code == 0) {
                            return aResponse.Body.Data
                        } else {
                            return dm.ngjs.$q.reject({
                                error: aResponse
                            })
                        }
                    } else {
                        return dm.ngjs.$q.reject({
                            error: aResponse
                        })
                    }
                }, function(aError) {
                    return dm.ngjs.$q.reject({
                        failure: aError
                    })
                })
            }
            configRequest.saveDef = saveDef
        }
        )(configRequest = util.configRequest || (util.configRequest = {}))
    }
    )(util = dm.util || (dm.util = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var notifications;
        (function(notifications) {
            var Level;
            (function(Level) {
                Level[Level["info"] = 0] = "info";
                Level[Level["alert"] = 1] = "alert"
            }
            )(Level = notifications.Level || (notifications.Level = {}));
            var PartType;
            (function(PartType) {
                PartType[PartType["text"] = 0] = "text";
                PartType[PartType["linebreak"] = 1] = "linebreak";
                PartType[PartType["link"] = 2] = "link"
            }
            )(PartType || (PartType = {}));
            var NotificationPart = function() {
                function NotificationPart(type, content, variables, translate) {
                    var _this = this;
                    if (type === void 0) {
                        type = PartType.text
                    }
                    if (content === void 0) {
                        content = ""
                    }
                    if (variables === void 0) {
                        variables = {}
                    }
                    if (translate === void 0) {
                        translate = true
                    }
                    this.type = type;
                    this.content = content;
                    this.variables = variables;
                    this.translate = translate;
                    this.getType = function() {
                        return PartType[_this.type]
                    }
                    ;
                    this.getVariables = function() {
                        return JSON.stringify(_this.variables)
                    }
                }
                return NotificationPart
            }();
            var NotificationText = function(_super) {
                __extends(NotificationText, _super);
                function NotificationText(text, variables, translate) {
                    if (variables === void 0) {
                        variables = {}
                    }
                    if (translate === void 0) {
                        translate = true
                    }
                    return _super.call(this, PartType.text, text, variables, translate) || this
                }
                return NotificationText
            }(NotificationPart);
            notifications.NotificationText = NotificationText;
            var NotificationLinebreak = function(_super) {
                __extends(NotificationLinebreak, _super);
                function NotificationLinebreak() {
                    return _super.call(this, PartType.linebreak) || this
                }
                return NotificationLinebreak
            }(NotificationPart);
            notifications.NotificationLinebreak = NotificationLinebreak;
            var NotificationLink = function(_super) {
                __extends(NotificationLink, _super);
                function NotificationLink(href, text, variables, translate) {
                    if (variables === void 0) {
                        variables = {}
                    }
                    if (translate === void 0) {
                        translate = true
                    }
                    var _this = _super.call(this, PartType.link, text, variables, translate) || this;
                    _this.href = href;
                    return _this
                }
                return NotificationLink
            }(NotificationPart);
            notifications.NotificationLink = NotificationLink;
            var Notification = function() {
                function Notification(id, level, parts, linkState) {
                    var _this = this;
                    if (level === void 0) {
                        level = Level.info
                    }
                    if (parts === void 0) {
                        parts = []
                    }
                    if (linkState === void 0) {
                        linkState = ""
                    }
                    this.id = id;
                    this.level = level;
                    this.parts = parts;
                    this.linkState = linkState;
                    this.getLevel = function() {
                        return Level[_this.level]
                    }
                }
                return Notification
            }();
            notifications.Notification = Notification;
            notifications.hasNew = false;
            notifications.items = [];
            function findNotification(id) {
                for (var i in notifications.items) {
                    if (notifications.items[i].id == id)
                        return notifications.items[i]
                }
                return undefined
            }
            function add(notif) {
                var existing = findNotification(notif.id);
                if (existing)
                    return;
                notifications.items.push(notif);
                notifications.hasNew = true
            }
            notifications.add = add;
            function remove(id) {
                var existing = findNotification(id);
                if (!existing)
                    return;
                var idx = notifications.items.indexOf(existing);
                notifications.items.splice(idx, 1)
            }
            notifications.remove = remove
        }
        )(notifications = model.notifications || (model.notifications = {}))
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var util;
    (function(util) {
        var DataFetcher;
        (function(DataFetcher_1) {
            var Notification = dm.model.notifications.Notification;
            var NotificationLevel = dm.model.notifications.Level;
            var NotificationText = dm.model.notifications.NotificationText;
            var suppressConnectionLostMsg = false;
            function DataFetcher(sendRequest, responseCb, errorCb, dataIsArray, name) {
                var self = this;
                var _private = {
                    sendRequest: sendRequest,
                    updateInterval: null,
                    fetchTimer: undefined,
                    requestPending: false,
                    subscriptions: {},
                    eventScope: dm.ngjs.$rootScope.$new(),
                    name: name
                };
                var _sendRequest = function() {
                    _private.requestPending = true;
                    sendRequest().then(function(rsp) {
                        var parsedData = responseCb(rsp);
                        if (parsedData) {
                            angular.copy(parsedData, self.data);
                            self.dataValid = true;
                            _private.eventScope.$emit("dataChanged", self.data)
                        }
                        dm.model.notifications.remove("connection_lost")
                    }, function() {
                        if (errorCb)
                            errorCb.apply(this, arguments);
                        if (!suppressConnectionLostMsg)
                            dm.model.notifications.add(new Notification("connection_lost",NotificationLevel.alert,[new NotificationText("NO_CONNECTION_TO_SERVER")]))
                    }).finally(function() {
                        if (_private.updateInterval) {
                            _private.fetchTimer = dm.ngjs.$interval(_sendRequest, _private.updateInterval, 1)
                        } else {
                            _private.fetchTimer = undefined
                        }
                        _private.requestPending = false
                    })
                };
                var onSubscriptionsChanged = function() {
                    var updateInterval = undefined;
                    for (var subIdx in _private.subscriptions) {
                        var subInterval = _private.subscriptions[subIdx];
                        if (subInterval && (!updateInterval || subInterval < updateInterval))
                            updateInterval = subInterval
                    }
                    _private.updateInterval = updateInterval;
                    if (!_private.requestPending && !_private.fetchTimer)
                        _sendRequest()
                };
                this.data = dataIsArray ? [] : {};
                this.dataValid = false;
                this.subscribe = function(name, updateInterval) {
                    _private.subscriptions[name] = updateInterval;
                    onSubscriptionsChanged()
                }
                ;
                this.unsubscribe = function(name) {
                    delete _private.subscriptions[name];
                    onSubscriptionsChanged()
                }
                ;
                this.on = function(event, callback) {
                    return _private.eventScope.$on(event, callback)
                }
            }
            function newInstance(sendRequest, responseCb, errorCb, dataIsArray, name) {
                return new DataFetcher(sendRequest,responseCb,errorCb,dataIsArray,name)
            }
            DataFetcher_1.newInstance = newInstance;
            function suppressConnectionLostNotification(suppress) {
                suppressConnectionLostMsg = suppress;
                if (suppress)
                    dm.model.notifications.remove("connection_lost")
            }
            DataFetcher_1.suppressConnectionLostNotification = suppressConnectionLostNotification
        }
        )(DataFetcher = util.DataFetcher || (util.DataFetcher = {}))
    }
    )(util = dm.util || (dm.util = {}))
}
)(dm || (dm = {}));
angular.module("global").directive("dialogTemplate", ["$window", "$timeout", function($window, $timeout) {
    function css2json(css) {
        var s = {};
        if (!css)
            return s;
        if (css instanceof CSSStyleDeclaration) {
            for (var i in css) {
                if (css[i].toLowerCase) {
                    s[css[i].toLowerCase()] = css[css[i]]
                }
            }
        } else if (typeof css == "string") {
            css = css.split("; ");
            for (var i in css) {
                var l = css[i].split(": ");
                s[l[0].toLowerCase()] = l[1].replace(";", "")
            }
        }
        return s
    }
    return {
        restrict: "E",
        transclude: true,
        replace: true,
        template: '<div class="ui-dialog ui-widget ui-widget-content ui-corner-all ui-dialog-buttons" tabindex="-1"                   ng-style="getStyle()" aria-labelledby="ui-id-1">                <div ng-transclude></div>              </div>',
        link: function(scope, element, attrs) {
            function onResize(scope, element) {
                scope.top = element.height ? ($window.innerHeight - element.height()) / 2 : 0;
                if (scope.top < 0)
                    scope.top = 0;
                scope.left = element.width ? ($window.innerWidth - element.width()) / 2 : 0;
                if (scope.left < 0)
                    scope.left = 0
            }
            angular.element($window).bind("resize", function() {
                onResize(scope, element)
            });
            $timeout(function() {
                onResize(scope, element)
            }, 0);
            scope.style = {
                height: "auto",
                width: "auto",
                outline: "0px",
                "z-index": "1002"
            };
            scope.getStyle = function() {
                angular.extend(scope.style, css2json(element.attr("style")));
                angular.extend(scope.style, {
                    top: scope.top,
                    left: scope.left
                });
                return scope.style
            }
        }
    }
}
]);
angular.module("global").directive("dialogTitle", function() {
    return {
        restrict: "E",
        transclude: true,
        replace: true,
        template: '<div class="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix">                <span id="ui-id-1" class="ui-dialog-title" ng-transclude></span>              </div>'
    }
});
angular.module("global").directive("dialogContent", function() {
    return {
        restrict: "E",
        transclude: true,
        replace: true,
        template: '<div style="position: relative; overflow: visible; width: auto; min-height: 41px; height: auto;"                   class="ui-dialog-content ui-widget-content" scrolltop="0" scrollleft="0" ng-transclude>             </div>'
    }
});
angular.module("global").directive("dialogButtonPane", function() {
    return {
        restrict: "E",
        transclude: true,
        replace: true,
        template: '<div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"> <div class="ui-dialog-buttonset" ng-transclude>              </div> </div>'
    }
});
angular.module("global").directive("dialogButton", function() {
    return {
        restrict: "E",
        transclude: true,
        replace: true,
        template: '<button type="button" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" role="button">                <span class="ui-button-text" ng-transclude></span>              </button>'
    }
});
var dm;
(function(dm) {
    var model;
    (function(model) {
        var Base = function() {
            function Base(id, scope) {
                var _this = this;
                this._id = null;
                this._scopes = [];
                this._origData = [];
                this._dirtyData = [];
                this._allDirty = false;
                this._validators = {};
                this._watchScope = null;
                this.loading = false;
                this.loadingPromise = null;
                this._onSaved = function() {}
                ;
                this.load = function() {
                    if (_this.loading)
                        return _this.loadingPromise;
                    _this.loading = true;
                    _this.loadingPromise = _this._load().then(function() {
                        return _this
                    }).finally(function() {
                        _this.loading = false;
                        _this.selectboxFixIE9()
                    });
                    return _this.loadingPromise
                }
                ;
                this.selectboxFixIE9 = function() {
                    setTimeout(function() {
                        $("select").attr("size", 2);
                        $("select").attr("size", 1)
                    }, 100)
                }
                ;
                this.save = function(param) {
                    _this.setAllDirty();
                    if (_this.loading || !_this.validate())
                        return dm.ngjs.$q.reject();
                    _this.loading = true;
                    return _this._save(param).then(function() {
                        _this._onSaved();
                        for (var name_1 in _this._origData) {
                            _this.setOrigData(name_1)
                        }
                        _this.setAllDirty(false)
                    }).finally(function() {
                        _this.loading = false
                    })
                }
                ;
                this.setOrigData = function(name, data) {
                    if (angular.isDefined(data) && !angular.equals(data, _this[name]))
                        _this[name] = typeof data == "function" ? data() : data;
                    _this._origData[name] = typeof data == "function" ? data : angular.copy(_this[name]);
                    _this._dirtyData[name] = false
                }
                ;
                this.getOrigData = function(name) {
                    if (name)
                        if (typeof _this._origData[name] == "function")
                            return angular.copy(_this._origData[name]());
                        else
                            return angular.copy(_this._origData[name]);
                    else
                        return angular.copy(_this._origData)
                }
                ;
                this.isPropChanged = function(path) {
                    var getter = dm.ngjs.$parse(path);
                    var curProp = getter(_this);
                    var origProp = getter(_this._origData);
                    return !angular.equals(curProp, origProp)
                }
                ;
                this.isPropDirty = function(path) {
                    if (_this._allDirty || _this._dirtyData[path])
                        return true;
                    _this._dirtyData[path] = _this.isPropChanged(path);
                    return _this._dirtyData[path]
                }
                ;
                this.setAllDirty = function(dirty) {
                    _this._allDirty = dirty === undefined ? true : dirty
                }
                ;
                this.resetDirtyValidation = function() {
                    _this._dirtyData = [];
                    _this._allDirty = false
                }
                ;
                this.validate = function(path) {
                    if (path && _this._validators[path])
                        return _this._validators[path](dm.ngjs.$parse(path)(_this));
                    else if (path)
                        return false;
                    for (var _path in _this._validators) {
                        if (!_this.validate(_path))
                            return false
                    }
                    return true
                }
                ;
                this.getRawValidator = function(path) {
                    if (path && _this._validators[path])
                        return _this._validators[path]
                }
                ;
                this.getValidator = function(path) {
                    return function() {
                        return _this.validate(path)
                    }
                }
                ;
                this.getDirtyValidator = function(path) {
                    return function() {
                        return !_this.isPropDirty(path) || _this.validate(path)
                    }
                }
                ;
                this.reset = function() {
                    _this._allDirty = false;
                    _this._dirtyData = [];
                    for (var path in _this._origData) {
                        var src = _this.getOrigData(path);
                        if (!angular.equals(src, _this[path]))
                            if (typeof src == "object")
                                angular.copy(src, _this[path]);
                            else
                                _this[path] = src
                    }
                }
                ;
                this.watch = function(watchExpression, listener, objectEquality) {
                    if (typeof watchExpression == "string")
                        watchExpression = "model." + watchExpression;
                    _this._watchScope.$watch(watchExpression, listener, objectEquality)
                }
                ;
                this._id = id;
                this._registerScope(scope);
                this._watchScope = dm.ngjs.$rootScope.$new(true);
                this._watchScope["model"] = this
            }
            Base.getInstance = function(id, scope, createFn) {
                var cls = this;
                if (!cls._instances)
                    cls._instances = {};
                if (!cls._instances[id])
                    if (createFn) {
                        cls._instances[id] = createFn(id, scope)
                    } else {
                        cls._instances[id] = new cls(id,scope);
                        cls._instances[id].load()
                    }
                return cls._instances[id]
            }
            ;
            Base.prototype.onDestroy = function(callback) {
                this._watchScope.$on("$destroy", callback)
            }
            ;
            Base.prototype._registerScope = function(scope) {
                var _this = this;
                if (!scope)
                    return;
                if (Array.isArray(scope)) {
                    for (var i in scope) {
                        var curScope = scope[i];
                        this._registerScope(curScope)
                    }
                } else {
                    if (this._scopes.indexOf(scope) >= 0)
                        return;
                    this._scopes.push(scope);
                    scope.$on("$destroy", function(event) {
                        return _this._unregisterScope(event.currentScope)
                    })
                }
            }
            ;
            Base.prototype._unregisterScope = function(scope) {
                var idx = this._scopes.indexOf(scope);
                this._scopes.splice(idx, 1);
                if (this._scopes.length == 0) {
                    delete this.constructor["_instances"][this._id];
                    this._watchScope.$destroy()
                }
            }
            ;
            Base.prototype._load = function() {
                throw new Error("to be overwritten!")
            }
            ;
            Base.prototype._save = function(param) {
                throw new Error("to be overwritten!")
            }
            ;
            return Base
        }();
        model.Base = Base
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
angular.module("global").config(["$translateProvider", function($translateProvider) {
    $translateProvider.useStaticFilesLoader({
        prefix: "/i18n/dict/",
        suffix: "/dict.json"
    });
    $translateProvider.preferredLanguage("en");
    $translateProvider.fallbackLanguage("en");
    $translateProvider.useSanitizeValueStrategy(null)
}
]);
var dm;
(function(dm) {
    var model;
    (function(model) {
        var DaloState = function(_super) {
            __extends(DaloState, _super);
            function DaloState(id, scope) {
                var _this = _super.call(this, id, scope) || this;
                _this.isLoading = true;
                _this.platform = null;
                _this.language = null;
                _this.daloID = null;
                _this.daloKey = null;
                _this.systemDate = null;
                _this.salt = null;
                _this.servicePasswordAssigned = false;
                _this.adminPasswordAssigned = false;
                _this.userPasswordAssigned = false;
                _this.isInconsistent = false;
                _this.softInconsistentDevices = null;
                _this.infoInconsistentDevices = null;
                _this.isWlanAvailable = true;
                _this.isMBRTUAvailable = true;
                _this.isBoxVariant = false;
                _this.acceptLanguage = null;
                _this.softwareVersion = null;
                _this.hardwareVersion = null;
                _this.helpBasePath = null;
                _this.systemName = null;
                _this.operateMode = null;
                _this.connectedViaAP = false;
                _this.batteryType = "none";
                _this.allowWizardSettings = false;
                _this.wizardRunning = false;
                _this.pageVisible = false;
                _this.queryParameters = {};
                _this.userAuth = {
                    user: false,
                    admin: false,
                    service: false
                };
                _this.PCBName = "";
                _this.getSalt = function(user) {
                    if (_this.salt)
                        return _this.salt[user]
                }
                ;
                _this.isHybrid = function() {
                    return _this.platform == "arm-wilma-hybrid"
                }
                ;
                _this.getBatteryType = function() {
                    return _this.batteryType
                }
                ;
                _this.setBatteryType = function(type) {
                    _this.batteryType = type
                }
                ;
                _this.searchInconsistency = function(events) {
                    for (var idx in events) {
                        var item = events[idx];
                        if (item.code == "inconsistency") {
                            return item
                        }
                    }
                    return null
                }
                ;
                _this.setInconsistency = function(inconsistentItem) {
                    _this.setOrigData("isInconsistent", inconsistentItem.level.hard.length > 0);
                    var info = [];
                    for (var idxI in inconsistentItem.level.info) {
                        var itemI = inconsistentItem.level.info[idxI];
                        var name_2 = itemI["device-name"] ? itemI["device-name"] : itemI["device"];
                        if (info.indexOf(name_2) == -1)
                            info.push(name_2)
                    }
                    _this.setOrigData("infoInconsistentDevices", info);
                    var soft = [];
                    for (var idxS in inconsistentItem.level.soft) {
                        var itemS = inconsistentItem.level.soft[idxS];
                        var name_3 = itemS["device-name"] ? itemS["device-name"] : itemS["device"];
                        if (soft.indexOf(name_3) == -1)
                            soft.push(name_3)
                    }
                    _this.setOrigData("softInconsistentDevices", soft)
                }
                ;
                _this.setLanguage = function(lang) {
                    var allowedLangs = ["cs", "da", "de", "el", "en", "es", "fi", "fr", "hu", "it", "nl", "pl", "pt", "ro", "ru", "sk", "sv", "tr", "uk"];
                    if ($.inArray(lang, allowedLangs) > -1) {
                        _this.language = lang;
                        dm.ngjs.$cookies.put("lang", _this.language);
                        moment.locale(lang)
                    }
                    return dm.ngjs.$translate.use(_this.language)
                }
                ;
                _this.getDecodedSystemName = function() {
                    return dm.util.string.htmlDecode(_this.systemName)
                }
                ;
                return _this
            }
            DaloState.prototype.loadAndUpdateStatus = function() {
                var _this = this;
                return dm.util.configRequest.get("/page-status.cgi").then(function(status) {
                    return _this._updateStatus(status.page)
                })
            }
            ;
            DaloState.prototype._updateStatus = function(page) {
                this.setOrigData("platform", page.sysInfo.platform);
                this.setOrigData("daloID", page.versionInfo.daloID);
                this.setOrigData("PCBName", page.versionInfo.PCBName);
                this.setOrigData("systemDate", new Date(parseInt(page.systemDate.epoch) * 1e3));
                this.setOrigData("batteryType", page.sysInfo.batteryType);
                this.setOrigData("servicePasswordAssigned", page.operationInfo.isServicePasswordAssigned);
                this.setOrigData("adminPasswordAssigned", page.operationInfo.isAdminPasswordAssigned);
                this.setOrigData("userPasswordAssigned", page.operationInfo.isUserPasswordAssigned);
                this.setOrigData("isWlanAvailable", page.networkInfo.wlanAvailable);
                this.setOrigData("isMBRTUAvailable", page.versionInfo.isModbusRTUAvailable);
                this.setOrigData("isWlanAPAvailable", page.versionInfo.isModbusRTUAvailable);
                this.setOrigData("salt", page.operationInfo.salt);
                this.setOrigData("isBoxVariant", page.versionInfo.isBoxVariant);
                this.setOrigData("acceptLanguage", page.acceptLanguage);
                this.setOrigData("softwareVersion", page.versionInfo.swVersion);
                this.setOrigData("hardwareVersion", page.versionInfo.hwVersion);
                this.setOrigData("helpBasePath", page.sysInfo.onlineHelpBasepath);
                this.setOrigData("systemName", page.systemName);
                this.setOrigData("operateMode", page.operationInfo.operationMode);
                this.setOrigData("daloKey", page.versionInfo.daloKey);
                this.setOrigData("connectedViaAP", page.networkInfo.connectedViaAP);
                this.setOrigData("remoteAddr", page.networkInfo.remoteAddr);
                this.setOrigData("newSWVersion", page.versionInfo.newSWVersion);
                this.setOrigData("updateUrl", page.versionInfo.updateUrl);
                this.setOrigData("wizardRunning", page.wizardRunning)
            }
            ;
            DaloState.prototype._load = function() {
                var _this = this;
                return dm.ngjs.$q.all([dm.util.configRequest.get("/page-status.cgi"), dm.util.configRequest.get("/events/")]).then(function(resonses) {
                    var page = resonses[0].page;
                    var inconsistent = _this.searchInconsistency(resonses[1].activeItems);
                    if (inconsistent != null)
                        _this.setInconsistency(inconsistent);
                    _this._updateStatus(page);
                    var language = dm.ngjs.$cookies.get("lang");
                    if (!language)
                        language = page.language;
                    _this.setOrigData("language", language);
                    _this.isLoading = false;
                    return _this.setLanguage(language)
                })
            }
            ;
            return DaloState
        }(model.Base);
        model.DaloState = DaloState
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var util;
    (function(util) {
        var date;
        (function(date) {
            var af = {
                name: "af-ZA",
                englishName: "Afrikaans (South Africa)",
                nativeName: "Afrikaans (Suid Afrika)",
                dayNames: ["Sondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrydag", "Saterdag"],
                abbreviatedDayNames: ["Son", "Maan", "Dins", "Woen", "Dond", "Vry", "Sat"],
                shortestDayNames: ["So", "Ma", "Di", "Wo", "Do", "Vr", "Sa"],
                firstLetterDayNames: ["S", "M", "D", "W", "D", "V", "S"],
                monthNames: ["Januarie", "Februarie", "Maart", "April", "Mei", "Junie", "Julie", "Augustus", "September", "Oktober", "November", "Desember"],
                abbreviatedMonthNames: ["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Des"],
                amDesignator: "",
                pmDesignator: "nm",
                firstDayOfWeek: 0,
                twoDigitYearMax: 2029,
                dateElementOrder: "ymd",
                formatPatterns: {
                    shortDate: "yyyy/MM/dd",
                    longDate: "dd MMMM yyyy",
                    shortTime: "hh:mm tt",
                    longTime: "hh:mm:ss tt",
                    fullDateTime: "dd MMMM yyyy hh:mm:ss tt",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^jan(uarie)?/i,
                    feb: /^feb(ruarie)?/i,
                    mar: /^maart/i,
                    apr: /^apr(il)?/i,
                    may: /^mei/i,
                    jun: /^jun(ie)?/i,
                    jul: /^jul(ie)?/i,
                    aug: /^aug(ustus)?/i,
                    sep: /^sep(t(ember)?)?/i,
                    oct: /^okt(ober)?/i,
                    nov: /^nov(ember)?/i,
                    dec: /^des(ember)?/i,
                    sun: /^so(n(dag)?)?/i,
                    mon: /^ma(an(dag)?)?/i,
                    tue: /^di(ns(dag)?)?/i,
                    wed: /^wo(en(sdag)?)?/i,
                    thu: /^do(nd(erdag)?)?/i,
                    fri: /^vr(y(dag)?)?/i,
                    sat: /^sa(t(erdag)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var ar = {
                name: "ar-AE",
                englishName: "Arabic (U.A.E.)",
                nativeName: "العربية (الإمارات العربية المتحدة)",
                dayNames: ["الاحد", "الاثنين", "الثلاثاء", "الاربعاء", "الخميس", "الجمعة", "السبت"],
                abbreviatedDayNames: ["الاحد", "الاثنين", "الثلاثاء", "الاربعاء", "الخميس", "الجمعة", "السبت"],
                shortestDayNames: ["أ", "ا", "ث", "أ", "خ", "ج", "س"],
                firstLetterDayNames: ["أ", "ا", "ث", "أ", "خ", "ج", "س"],
                monthNames: ["يناير", "فبراير", "مارس", "ابريل", "مايو", "يونيو", "يوليو", "اغسطس", "سبتمبر", "اكتوبر", "نوفمبر", "ديسمبر"],
                abbreviatedMonthNames: ["يناير", "فبراير", "مارس", "ابريل", "مايو", "يونيو", "يوليو", "اغسطس", "سبتمبر", "اكتوبر", "نوفمبر", "ديسمبر"],
                amDesignator: "ص",
                pmDesignator: "م",
                firstDayOfWeek: 6,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd/MM/yyyy",
                    longDate: "dd MMMM, yyyy",
                    shortTime: "hh:mm tt",
                    longTime: "hh:mm:ss tt",
                    fullDateTime: "dd MMMM, yyyy hh:mm:ss tt",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM, yyyy"
                },
                regexPatterns: {
                    jan: /^يناير/i,
                    feb: /^فبراير/i,
                    mar: /^مارس/i,
                    apr: /^ابريل/i,
                    may: /^مايو/i,
                    jun: /^يونيو/i,
                    jul: /^يوليو/i,
                    aug: /^اغسطس/i,
                    sep: /^سبتمبر/i,
                    oct: /^اكتوبر/i,
                    nov: /^نوفمبر/i,
                    dec: /^ديسمبر/i,
                    sun: /^الاحد/i,
                    mon: /^ا(1)?/i,
                    tue: /^الثلاثاء/i,
                    wed: /^الاربعاء/i,
                    thu: /^الخميس/i,
                    fri: /^الجمعة/i,
                    sat: /^السبت/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var az = {
                name: "az-Cyrl-AZ",
                englishName: "Azeri (Cyrillic, Azerbaijan)",
                nativeName: "Азәрбајҹан (Азәрбајҹан)",
                dayNames: ["Базар", "Базар ертәси", "Чәршәнбә ахшамы", "Чәршәнбә", "Ҹүмә ахшамы", "Ҹүмә", "Шәнбә"],
                abbreviatedDayNames: ["Б", "Бе", "Ча", "Ч", "Ҹа", "Ҹ", "Ш"],
                shortestDayNames: ["Б", "Бе", "Ча", "Ч", "Ҹа", "Ҹ", "Ш"],
                firstLetterDayNames: ["Б", "Б", "Ч", "Ч", "Ҹ", "Ҹ", "Ш"],
                monthNames: ["Јанвар", "Феврал", "Март", "Апрел", "Мај", "Ијун", "Ијул", "Август", "Сентјабр", "Октјабр", "Нојабр", "Декабр"],
                abbreviatedMonthNames: ["Јан", "Фев", "Мар", "Апр", "Мај", "Ијун", "Ијул", "Авг", "Сен", "Окт", "Ноя", "Дек"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd.MM.yyyy",
                    longDate: "d MMMM yyyy",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "d MMMM yyyy H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "d MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^јан(вар)?/i,
                    feb: /^фев(рал)?/i,
                    mar: /^мар(т)?/i,
                    apr: /^апр(ел)?/i,
                    may: /^мај/i,
                    jun: /^ијун/i,
                    jul: /^ијул/i,
                    aug: /^авг(уст)?/i,
                    sep: /^сен(тјабр)?/i,
                    oct: /^окт(јабр)?/i,
                    nov: /^нојабр/i,
                    dec: /^дек(абр)?/i,
                    sun: /^базар/i,
                    mon: /^базар ертәси/i,
                    tue: /^чәршәнбә ахшамы/i,
                    wed: /^чәршәнбә/i,
                    thu: /^ҹүмә ахшамы/i,
                    fri: /^ҹүмә/i,
                    sat: /^шәнбә/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var be = {
                name: "be-BY",
                englishName: "Belarusian (Belarus)",
                nativeName: "Беларускі (Беларусь)",
                dayNames: ["нядзеля", "панядзелак", "аўторак", "серада", "чацвер", "пятніца", "субота"],
                abbreviatedDayNames: ["нд", "пн", "аў", "ср", "чц", "пт", "сб"],
                shortestDayNames: ["нд", "пн", "аў", "ср", "чц", "пт", "сб"],
                firstLetterDayNames: ["н", "п", "а", "с", "ч", "п", "с"],
                monthNames: ["Студзень", "Люты", "Сакавік", "Красавік", "Май", "Чэрвень", "Ліпень", "Жнівень", "Верасень", "Кастрычнік", "Лістапад", "Снежань"],
                abbreviatedMonthNames: ["Сту", "Лют", "Сак", "Кра", "Май", "Чэр", "Ліп", "Жні", "Вер", "Кас", "Ліс", "Сне"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd.MM.yyyy",
                    longDate: "d MMMM yyyy",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "d MMMM yyyy H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "d MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^сту(дзень)?/i,
                    feb: /^лют(ы)?/i,
                    mar: /^сак(авік)?/i,
                    apr: /^кра(савік)?/i,
                    may: /^май/i,
                    jun: /^чэр(вень)?/i,
                    jul: /^ліп(ень)?/i,
                    aug: /^жні(вень)?/i,
                    sep: /^вер(асень)?/i,
                    oct: /^кас(трычнік)?/i,
                    nov: /^ліс(тапад)?/i,
                    dec: /^сне(жань)?/i,
                    sun: /^нядзеля/i,
                    mon: /^панядзелак/i,
                    tue: /^аўторак/i,
                    wed: /^серада/i,
                    thu: /^чацвер/i,
                    fri: /^пятніца/i,
                    sat: /^субота/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var bg = {
                name: "bg-BG",
                englishName: "Bulgarian (Bulgaria)",
                nativeName: "български (България)",
                dayNames: ["неделя", "понеделник", "вторник", "сряда", "четвъртък", "петък", "събота"],
                abbreviatedDayNames: ["Нд", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"],
                shortestDayNames: ["не", "по", "вт", "ср", "че", "пе", "съ"],
                firstLetterDayNames: ["н", "п", "в", "с", "ч", "п", "с"],
                monthNames: ["Януари", "Февруари", "Март", "Април", "Май", "Юни", "Юли", "Август", "Септември", "Октомври", "Ноември", "Декември"],
                abbreviatedMonthNames: ["Януари", "Февруари", "Март", "Април", "Май", "Юни", "Юли", "Август", "Септември", "Октомври", "Ноември", "Декември"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd.M.yyyy 'г.'",
                    longDate: "dd MMMM yyyy 'г.'",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "dd MMMM yyyy 'г.' HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM yyyy 'г.'"
                },
                regexPatterns: {
                    jan: /^януари/i,
                    feb: /^февруари/i,
                    mar: /^март/i,
                    apr: /^април/i,
                    may: /^май/i,
                    jun: /^юни/i,
                    jul: /^юли/i,
                    aug: /^август/i,
                    sep: /^септември/i,
                    oct: /^октомври/i,
                    nov: /^ноември/i,
                    dec: /^декември/i,
                    sun: /^не((деля)?)?/i,
                    mon: /^по((неделник)?)?/i,
                    tue: /^вторник/i,
                    wed: /^сряда/i,
                    thu: /^че((твъртък)?)?/i,
                    fri: /^пе((тък)?)?/i,
                    sat: /^съ((бота)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var bs = {
                name: "bs-Latn-BA",
                englishName: "Bosnian (Bosnia and Herzegovina)",
                nativeName: "bosanski (Bosna i Hercegovina)",
                dayNames: ["nedjelja", "ponedjeljak", "utorak", "srijeda", "četvrtak", "petak", "subota"],
                abbreviatedDayNames: ["ned", "pon", "uto", "sri", "čet", "pet", "sub"],
                shortestDayNames: ["ned", "pon", "uto", "sri", "čet", "pet", "sub"],
                firstLetterDayNames: ["n", "p", "u", "s", "č", "p", "s"],
                monthNames: ["januar", "februar", "mart", "april", "maj", "jun", "jul", "avgust", "septembar", "oktobar", "novembar", "decembar"],
                abbreviatedMonthNames: ["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "d.M.yyyy",
                    longDate: "d. MMMM yyyy",
                    shortTime: "H:mm:ss",
                    longTime: "H:mm:ss",
                    fullDateTime: "d. MMMM yyyy H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "MMMM dd",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^jan(uar)?/i,
                    feb: /^feb(ruar)?/i,
                    mar: /^mar(t)?/i,
                    apr: /^apr(il)?/i,
                    may: /^maj/i,
                    jun: /^jun/i,
                    jul: /^jul/i,
                    aug: /^avg(ust)?/i,
                    sep: /^sep(tembar)?/i,
                    oct: /^okt(obar)?/i,
                    nov: /^nov(embar)?/i,
                    dec: /^dec(embar)?/i,
                    sun: /^nedjelja/i,
                    mon: /^ponedjeljak/i,
                    tue: /^utorak/i,
                    wed: /^srijeda/i,
                    thu: /^četvrtak/i,
                    fri: /^petak/i,
                    sat: /^subota/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var ca = {
                name: "ca-ES",
                englishName: "Catalan (Catalan)",
                nativeName: "català (català)",
                dayNames: ["diumenge", "dilluns", "dimarts", "dimecres", "dijous", "divendres", "dissabte"],
                abbreviatedDayNames: ["dg.", "dl.", "dt.", "dc.", "dj.", "dv.", "ds."],
                shortestDayNames: ["dg", "dl", "dt", "dc", "dj", "dv", "ds"],
                firstLetterDayNames: ["d", "d", "d", "d", "d", "d", "d"],
                monthNames: ["gener", "febrer", "març", "abril", "maig", "juny", "juliol", "agost", "setembre", "octubre", "novembre", "desembre"],
                abbreviatedMonthNames: ["gen", "feb", "març", "abr", "maig", "juny", "jul", "ag", "set", "oct", "nov", "des"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd/MM/yyyy",
                    longDate: "dddd, d' / 'MMMM' / 'yyyy",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "dddd, d' / 'MMMM' / 'yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM' / 'yyyy"
                },
                regexPatterns: {
                    jan: /^gen(er)?/i,
                    feb: /^feb(rer)?/i,
                    mar: /^març/i,
                    apr: /^abr(il)?/i,
                    may: /^maig/i,
                    jun: /^juny/i,
                    jul: /^jul(iol)?/i,
                    aug: /^ag(ost)?/i,
                    sep: /^set(embre)?/i,
                    oct: /^oct(ubre)?/i,
                    nov: /^nov(embre)?/i,
                    dec: /^des(embre)?/i,
                    sun: /^dg((.(umenge)?)?)?/i,
                    mon: /^dl((.(lluns)?)?)?/i,
                    tue: /^dt((.(marts)?)?)?/i,
                    wed: /^dc((.(mecres)?)?)?/i,
                    thu: /^dj((.(jous)?)?)?/i,
                    fri: /^dv((.(vendres)?)?)?/i,
                    sat: /^ds((.(ssabte)?)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var cs = {
                name: "cs-CZ",
                englishName: "Czech (Czech Republic)",
                nativeName: "čeština (Česká republika)",
                dayNames: ["neděle", "pondělí", "úterý", "středa", "čtvrtek", "pátek", "sobota"],
                abbreviatedDayNames: ["ne", "po", "út", "st", "čt", "pá", "so"],
                shortestDayNames: ["ne", "po", "út", "st", "čt", "pá", "so"],
                firstLetterDayNames: ["n", "p", "ú", "s", "č", "p", "s"],
                monthNames: ["leden", "únor", "březen", "duben", "květen", "červen", "červenec", "srpen", "září", "říjen", "listopad", "prosinec"],
                abbreviatedMonthNames: ["I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "XI", "XII"],
                amDesignator: "dop.",
                pmDesignator: "odp.",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "d.M.yyyy",
                    longDate: "d. MMMM yyyy",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "d. MMMM yyyy H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^leden/i,
                    feb: /^únor/i,
                    mar: /^březen/i,
                    apr: /^duben/i,
                    may: /^květen/i,
                    jun: /^červen/i,
                    jul: /^červenec/i,
                    aug: /^srpen/i,
                    sep: /^září/i,
                    oct: /^říjen/i,
                    nov: /^listopad/i,
                    dec: /^prosinec/i,
                    sun: /^neděle/i,
                    mon: /^pondělí/i,
                    tue: /^úterý/i,
                    wed: /^středa/i,
                    thu: /^čtvrtek/i,
                    fri: /^pátek/i,
                    sat: /^sobota/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var cy = {
                name: "cy-GB",
                englishName: "Welsh (United Kingdom)",
                nativeName: "Cymraeg (y Deyrnas Unedig)",
                dayNames: ["Dydd Sul", "Dydd Llun", "Dydd Mawrth", "Dydd Mercher", "Dydd Iau", "Dydd Gwener", "Dydd Sadwrn"],
                abbreviatedDayNames: ["Sul", "Llun", "Maw", "Mer", "Iau", "Gwe", "Sad"],
                shortestDayNames: ["Sul", "Llun", "Maw", "Mer", "Iau", "Gwe", "Sad"],
                firstLetterDayNames: ["S", "L", "M", "M", "I", "G", "S"],
                monthNames: ["Ionawr", "Chwefror", "Mawrth", "Ebrill", "Mai", "Mehefin", "Gorffennaf", "Awst", "Medi", "Hydref", "Tachwedd", "Rhagfyr"],
                abbreviatedMonthNames: ["Ion", "Chwe", "Maw", "Ebr", "Mai", "Meh", "Gor", "Aws", "Med", "Hyd", "Tach", "Rhag"],
                amDesignator: "a.m.",
                pmDesignator: "p.m.",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd/MM/yyyy",
                    longDate: "dd MMMM yyyy",
                    shortTime: "HH:mm:ss",
                    longTime: "HH:mm:ss",
                    fullDateTime: "dd MMMM yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "MMMM dd",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^ion(awr)?/i,
                    feb: /^chwe(fror)?/i,
                    mar: /^maw(rth)?/i,
                    apr: /^ebr(ill)?/i,
                    may: /^mai/i,
                    jun: /^meh(efin)?/i,
                    jul: /^gor(ffennaf)?/i,
                    aug: /^aws(t)?/i,
                    sep: /^med(i)?/i,
                    oct: /^hyd(ref)?/i,
                    nov: /^tach(wedd)?/i,
                    dec: /^rhag(fyr)?/i,
                    sun: /^dydd sul/i,
                    mon: /^dydd llun/i,
                    tue: /^dydd mawrth/i,
                    wed: /^dydd mercher/i,
                    thu: /^dydd iau/i,
                    fri: /^dydd gwener/i,
                    sat: /^dydd sadwrn/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var da = {
                name: "da-DK",
                englishName: "Danish (Denmark)",
                nativeName: "dansk (Danmark)",
                dayNames: ["søndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "lørdag"],
                abbreviatedDayNames: ["sø", "ma", "ti", "on", "to", "fr", "lø"],
                shortestDayNames: ["sø", "ma", "ti", "on", "to", "fr", "lø"],
                firstLetterDayNames: ["s", "m", "t", "o", "t", "f", "l"],
                monthNames: ["januar", "februar", "marts", "april", "maj", "juni", "juli", "august", "september", "oktober", "november", "december"],
                abbreviatedMonthNames: ["jan", "feb", "mar", "apr", "maj", "jun", "jul", "aug", "sep", "okt", "nov", "dec"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd-MM-yyyy",
                    longDate: "d. MMMM yyyy",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "d. MMMM yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "d. MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^jan(uar)?/i,
                    feb: /^feb(ruar)?/i,
                    mar: /^mar(ts)?/i,
                    apr: /^apr(il)?/i,
                    may: /^maj/i,
                    jun: /^jun(i)?/i,
                    jul: /^jul(i)?/i,
                    aug: /^aug(ust)?/i,
                    sep: /^sep(t(ember)?)?/i,
                    oct: /^okt(ober)?/i,
                    nov: /^nov(ember)?/i,
                    dec: /^dec(ember)?/i,
                    sun: /^søndag/i,
                    mon: /^mandag/i,
                    tue: /^tirsdag/i,
                    wed: /^onsdag/i,
                    thu: /^torsdag/i,
                    fri: /^fredag/i,
                    sat: /^lørdag/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var de = {
                name: "de-AT",
                englishName: "German (Austria)",
                nativeName: "Deutsch (Österreich)",
                dayNames: ["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"],
                abbreviatedDayNames: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"],
                shortestDayNames: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"],
                firstLetterDayNames: ["S", "M", "D", "M", "D", "F", "S"],
                monthNames: ["Jänner", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"],
                abbreviatedMonthNames: ["Jän", "Feb", "Mär", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd.MM.yyyy",
                    longDate: "dddd, dd. MMMM yyyy",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "dddd, dd. MMMM yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^jän(ner)?/i,
                    feb: /^feb(ruar)?/i,
                    mar: /^mär(z)?/i,
                    apr: /^apr(il)?/i,
                    may: /^mai/i,
                    jun: /^jun(i)?/i,
                    jul: /^jul(i)?/i,
                    aug: /^aug(ust)?/i,
                    sep: /^sep(t(ember)?)?/i,
                    oct: /^okt(ober)?/i,
                    nov: /^nov(ember)?/i,
                    dec: /^dez(ember)?/i,
                    sun: /^sonntag/i,
                    mon: /^montag/i,
                    tue: /^dienstag/i,
                    wed: /^mittwoch/i,
                    thu: /^donnerstag/i,
                    fri: /^freitag/i,
                    sat: /^samstag/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var dv = {
                name: "dv-MV",
                englishName: "Divehi (Maldives)",
                nativeName: "ދިވެހިބަސް (ދިވެހި ރާއްޖެ)",
                dayNames: ["الاحد", "الاثنين", "الثلاثاء", "الاربعاء", "الخميس", "الجمعة", "السبت"],
                abbreviatedDayNames: ["الاحد", "الاثنين", "الثلاثاء", "الاربعاء", "الخميس", "الجمعة", "السبت"],
                shortestDayNames: ["أ", "ا", "ث", "أ", "خ", "ج", "س"],
                firstLetterDayNames: ["أ", "ا", "ث", "أ", "خ", "ج", "س"],
                monthNames: ["محرم", "صفر", "ربيع الأول", "ربيع الثاني", "جمادى الأولى", "جمادى الثانية", "رجب", "شعبان", "رمضان", "شوال", "ذو القعدة", "ذو الحجة"],
                abbreviatedMonthNames: ["محرم", "صفر", "ربيع الاول", "ربيع الثاني", "جمادى الاولى", "جمادى الثانية", "رجب", "شعبان", "رمضان", "شوال", "ذو القعدة", "ذو الحجة"],
                amDesignator: "މކ",
                pmDesignator: "މފ",
                firstDayOfWeek: 0,
                twoDigitYearMax: 1451,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd/MM/yy",
                    longDate: "dd/MMMM/yyyy",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "dd/MMMM/yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM, yyyy"
                },
                regexPatterns: {
                    jan: /^محرم/i,
                    feb: /^صفر/i,
                    mar: /^ربيع الأول/i,
                    apr: /^ربيع الثاني/i,
                    may: /^جمادى الأولى/i,
                    jun: /^جمادى الثانية/i,
                    jul: /^رجب/i,
                    aug: /^شعبان/i,
                    sep: /^رمضان/i,
                    oct: /^شوال/i,
                    nov: /^ذو القعدة/i,
                    dec: /^ذو الحجة/i,
                    sun: /^الاحد/i,
                    mon: /^ا(1)?/i,
                    tue: /^الثلاثاء/i,
                    wed: /^الاربعاء/i,
                    thu: /^الخميس/i,
                    fri: /^الجمعة/i,
                    sat: /^السبت/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var el = {
                name: "el-GR",
                englishName: "Greek (Greece)",
                nativeName: "ελληνικά (Ελλάδα)",
                dayNames: ["Κυριακή", "Δευτέρα", "Τρίτη", "Τετάρτη", "Πέμπτη", "Παρασκευή", "Σάββατο"],
                abbreviatedDayNames: ["Κυρ", "Δευ", "Τρι", "Τετ", "Πεμ", "Παρ", "Σαβ"],
                shortestDayNames: ["Κυ", "Δε", "Τρ", "Τε", "Πε", "Πα", "Σά"],
                firstLetterDayNames: ["Κ", "Δ", "Τ", "Τ", "Π", "Π", "Σ"],
                monthNames: ["Ιανουάριος", "Φεβρουάριος", "Μάρτιος", "Απρίλιος", "Μάιος", "Ιούνιος", "Ιούλιος", "Αύγουστος", "Σεπτέμβριος", "Οκτώβριος", "Νοέμβριος", "Δεκέμβριος"],
                abbreviatedMonthNames: ["Ιαν", "Φεβ", "Μαρ", "Απρ", "Μαϊ", "Ιουν", "Ιουλ", "Αυγ", "Σεπ", "Οκτ", "Νοε", "Δεκ"],
                amDesignator: "πμ",
                pmDesignator: "μμ",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "d/M/yyyy",
                    longDate: "dddd, d MMMM yyyy",
                    shortTime: "h:mm tt",
                    longTime: "h:mm:ss tt",
                    fullDateTime: "dddd, d MMMM yyyy h:mm:ss tt",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^ιαν(ουάριος)?/i,
                    feb: /^φεβ(ρουάριος)?/i,
                    mar: /^μάρτιος/i,
                    apr: /^απρ(ίλιος)?/i,
                    may: /^μάιος/i,
                    jun: /^ιούνιος/i,
                    jul: /^ιούλιος/i,
                    aug: /^αύγουστος/i,
                    sep: /^σεπ(τέμβριος)?/i,
                    oct: /^οκτ(ώβριος)?/i,
                    nov: /^νοέμβριος/i,
                    dec: /^δεκ(έμβριος)?/i,
                    sun: /^κυ(ρ(ιακή)?)?/i,
                    mon: /^δε(υ(τέρα)?)?/i,
                    tue: /^τρ(ι(τη)?)?/i,
                    wed: /^τε(τ(άρτη)?)?/i,
                    thu: /^πε(μ(πτη)?)?/i,
                    fri: /^πα(ρ(ασκευή)?)?/i,
                    sat: /^σά(β(βατο)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var en = {
                name: "en-US",
                englishName: "English (United States)",
                nativeName: "English (United States)",
                dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                abbreviatedDayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                shortestDayNames: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
                firstLetterDayNames: ["S", "M", "T", "W", "T", "F", "S"],
                monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                abbreviatedMonthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                amDesignator: "AM",
                pmDesignator: "PM",
                firstDayOfWeek: 0,
                twoDigitYearMax: 2029,
                dateElementOrder: "mdy",
                formatPatterns: {
                    shortDate: "M/d/yyyy",
                    longDate: "dddd, MMMM dd, yyyy",
                    shortTime: "h:mm tt",
                    longTime: "h:mm:ss tt",
                    fullDateTime: "dddd, MMMM dd, yyyy h:mm:ss tt",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "MMMM dd",
                    yearMonth: "MMMM, yyyy"
                },
                regexPatterns: {
                    jan: /^jan(uary)?/i,
                    feb: /^feb(ruary)?/i,
                    mar: /^mar(ch)?/i,
                    apr: /^apr(il)?/i,
                    may: /^may/i,
                    jun: /^jun(e)?/i,
                    jul: /^jul(y)?/i,
                    aug: /^aug(ust)?/i,
                    sep: /^sep(t(ember)?)?/i,
                    oct: /^oct(ober)?/i,
                    nov: /^nov(ember)?/i,
                    dec: /^dec(ember)?/i,
                    sun: /^su(n(day)?)?/i,
                    mon: /^mo(n(day)?)?/i,
                    tue: /^tu(e(s(day)?)?)?/i,
                    wed: /^we(d(nesday)?)?/i,
                    thu: /^th(u(r(s(day)?)?)?)?/i,
                    fri: /^fr(i(day)?)?/i,
                    sat: /^sa(t(urday)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var es = {
                name: "es-ES",
                englishName: "Spanish (Spain)",
                nativeName: "español (España)",
                dayNames: ["domingo", "lunes", "martes", "miércoles", "jueves", "viernes", "sábado"],
                abbreviatedDayNames: ["dom", "lun", "mar", "mié", "jue", "vie", "sáb"],
                shortestDayNames: ["do", "lu", "ma", "mi", "ju", "vi", "sá"],
                firstLetterDayNames: ["d", "l", "m", "m", "j", "v", "s"],
                monthNames: ["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"],
                abbreviatedMonthNames: ["ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd/MM/yyyy",
                    longDate: "dddd, dd' de 'MMMM' de 'yyyy",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "dddd, dd' de 'MMMM' de 'yyyy H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM' de 'yyyy"
                },
                regexPatterns: {
                    jan: /^ene(ro)?/i,
                    feb: /^feb(rero)?/i,
                    mar: /^mar(zo)?/i,
                    apr: /^abr(il)?/i,
                    may: /^may(o)?/i,
                    jun: /^jun(io)?/i,
                    jul: /^jul(io)?/i,
                    aug: /^ago(sto)?/i,
                    sep: /^sep(tiembre)?/i,
                    oct: /^oct(ubre)?/i,
                    nov: /^nov(iembre)?/i,
                    dec: /^dic(iembre)?/i,
                    sun: /^do(m(ingo)?)?/i,
                    mon: /^lu(n(es)?)?/i,
                    tue: /^ma(r(tes)?)?/i,
                    wed: /^mi(é(rcoles)?)?/i,
                    thu: /^ju(e(ves)?)?/i,
                    fri: /^vi(e(rnes)?)?/i,
                    sat: /^sá(b(ado)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var et = {
                name: "et-EE",
                englishName: "Estonian (Estonia)",
                nativeName: "eesti (Eesti)",
                dayNames: ["pühapäev", "esmaspäev", "teisipäev", "kolmapäev", "neljapäev", "reede", "laupäev"],
                abbreviatedDayNames: ["P", "E", "T", "K", "N", "R", "L"],
                shortestDayNames: ["P", "E", "T", "K", "N", "R", "L"],
                firstLetterDayNames: ["P", "E", "T", "K", "N", "R", "L"],
                monthNames: ["jaanuar", "veebruar", "märts", "aprill", "mai", "juuni", "juuli", "august", "september", "oktoober", "november", "detsember"],
                abbreviatedMonthNames: ["jaan", "veebr", "märts", "apr", "mai", "juuni", "juuli", "aug", "sept", "okt", "nov", "dets"],
                amDesignator: "EL",
                pmDesignator: "PL",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "d.MM.yyyy",
                    longDate: "d. MMMM yyyy'. a.'",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "d. MMMM yyyy'. a.' H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "d. MMMM",
                    yearMonth: "MMMM yyyy'. a.'"
                },
                regexPatterns: {
                    jan: /^jaan(uar)?/i,
                    feb: /^veebr(uar)?/i,
                    mar: /^märts/i,
                    apr: /^apr(ill)?/i,
                    may: /^mai/i,
                    jun: /^juuni/i,
                    jul: /^juuli/i,
                    aug: /^aug(ust)?/i,
                    sep: /^sep(t(ember)?)?/i,
                    oct: /^okt(oober)?/i,
                    nov: /^nov(ember)?/i,
                    dec: /^dets(ember)?/i,
                    sun: /^pühapäev/i,
                    mon: /^esmaspäev/i,
                    tue: /^teisipäev/i,
                    wed: /^kolmapäev/i,
                    thu: /^neljapäev/i,
                    fri: /^reede/i,
                    sat: /^laupäev/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var eu = {
                name: "eu-ES",
                englishName: "Basque (Basque)",
                nativeName: "euskara (euskara)",
                dayNames: ["igandea", "astelehena", "asteartea", "asteazkena", "osteguna", "ostirala", "larunbata"],
                abbreviatedDayNames: ["ig.", "al.", "as.", "az.", "og.", "or.", "lr."],
                shortestDayNames: ["ig", "al", "as", "az", "og", "or", "lr"],
                firstLetterDayNames: ["i", "a", "a", "a", "o", "o", "l"],
                monthNames: ["urtarrila", "otsaila", "martxoa", "apirila", "maiatza", "ekaina", "uztaila", "abuztua", "iraila", "urria", "azaroa", "abendua"],
                abbreviatedMonthNames: ["urt.", "ots.", "mar.", "api.", "mai.", "eka.", "uzt.", "abu.", "ira.", "urr.", "aza.", "abe."],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "ymd",
                formatPatterns: {
                    shortDate: "yyyy/MM/dd",
                    longDate: "dddd, yyyy.'eko' MMMM'k 'd",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "dddd, yyyy.'eko' MMMM'k 'd HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "MMMM dd",
                    yearMonth: "yyyy.'eko' MMMM"
                },
                regexPatterns: {
                    jan: /^urt(.(arrila)?)?/i,
                    feb: /^ots(.(aila)?)?/i,
                    mar: /^mar(.(txoa)?)?/i,
                    apr: /^api(.(rila)?)?/i,
                    may: /^mai(.(atza)?)?/i,
                    jun: /^eka(.(ina)?)?/i,
                    jul: /^uzt(.(aila)?)?/i,
                    aug: /^abu(.(ztua)?)?/i,
                    sep: /^ira(.(ila)?)?/i,
                    oct: /^urr(.(ia)?)?/i,
                    nov: /^aza(.(roa)?)?/i,
                    dec: /^abe(.(ndua)?)?/i,
                    sun: /^ig((.(andea)?)?)?/i,
                    mon: /^al((.(telehena)?)?)?/i,
                    tue: /^as((.(teartea)?)?)?/i,
                    wed: /^az((.(teazkena)?)?)?/i,
                    thu: /^og((.(teguna)?)?)?/i,
                    fri: /^or((.(tirala)?)?)?/i,
                    sat: /^lr((.(runbata)?)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var fa = {
                name: "fa-IR",
                englishName: "Persian (Iran)",
                nativeName: "فارسى (ايران)",
                dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                abbreviatedDayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                shortestDayNames: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
                firstLetterDayNames: ["S", "M", "T", "W", "T", "F", "S"],
                monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                abbreviatedMonthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                amDesignator: "ق.ظ",
                pmDesignator: "ب.ظ",
                firstDayOfWeek: 0,
                twoDigitYearMax: 2029,
                dateElementOrder: "mdy",
                formatPatterns: {
                    shortDate: "M/d/yyyy",
                    longDate: "dddd, MMMM dd, yyyy",
                    shortTime: "hh:mm tt",
                    longTime: "hh:mm:ss tt",
                    fullDateTime: "dddd, MMMM dd, yyyy hh:mm:ss tt",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "MMMM dd",
                    yearMonth: "MMMM, yyyy"
                },
                regexPatterns: {
                    jan: /^jan(uary)?/i,
                    feb: /^feb(ruary)?/i,
                    mar: /^mar(ch)?/i,
                    apr: /^apr(il)?/i,
                    may: /^may/i,
                    jun: /^jun(e)?/i,
                    jul: /^jul(y)?/i,
                    aug: /^aug(ust)?/i,
                    sep: /^sep(t(ember)?)?/i,
                    oct: /^oct(ober)?/i,
                    nov: /^nov(ember)?/i,
                    dec: /^dec(ember)?/i,
                    sun: /^su(n(day)?)?/i,
                    mon: /^mo(n(day)?)?/i,
                    tue: /^tu(e(s(day)?)?)?/i,
                    wed: /^we(d(nesday)?)?/i,
                    thu: /^th(u(r(s(day)?)?)?)?/i,
                    fri: /^fr(i(day)?)?/i,
                    sat: /^sa(t(urday)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var fi = {
                name: "fi-FI",
                englishName: "Finnish (Finland)",
                nativeName: "suomi (Suomi)",
                dayNames: ["sunnuntai", "maanantai", "tiistai", "keskiviikko", "torstai", "perjantai", "lauantai"],
                abbreviatedDayNames: ["su", "ma", "ti", "ke", "to", "pe", "la"],
                shortestDayNames: ["su", "ma", "ti", "ke", "to", "pe", "la"],
                firstLetterDayNames: ["s", "m", "t", "k", "t", "p", "l"],
                monthNames: ["tammikuu", "helmikuu", "maaliskuu", "huhtikuu", "toukokuu", "kesäkuu", "heinäkuu", "elokuu", "syyskuu", "lokakuu", "marraskuu", "joulukuu"],
                abbreviatedMonthNames: ["tammi", "helmi", "maalis", "huhti", "touko", "kesä", "heinä", "elo", "syys", "loka", "marras", "joulu"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "d.M.yyyy",
                    longDate: "d. MMMM'ta 'yyyy",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "d. MMMM'ta 'yyyy H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "d. MMMM'ta'",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^tammi(kuu)?/i,
                    feb: /^helmi(kuu)?/i,
                    mar: /^maalis(kuu)?/i,
                    apr: /^huhti(kuu)?/i,
                    may: /^touko(kuu)?/i,
                    jun: /^kesä(kuu)?/i,
                    jul: /^heinä(kuu)?/i,
                    aug: /^elo(kuu)?/i,
                    sep: /^syys(kuu)?/i,
                    oct: /^loka(kuu)?/i,
                    nov: /^marras(kuu)?/i,
                    dec: /^joulu(kuu)?/i,
                    sun: /^sunnuntai/i,
                    mon: /^maanantai/i,
                    tue: /^tiistai/i,
                    wed: /^keskiviikko/i,
                    thu: /^torstai/i,
                    fri: /^perjantai/i,
                    sat: /^lauantai/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var fo = {
                name: "fo-FO",
                englishName: "Faroese (Faroe Islands)",
                nativeName: "føroyskt (Føroyar)",
                dayNames: ["sunnudagur", "mánadagur", "týsdagur", "mikudagur", "hósdagur", "fríggjadagur", "leygardagur"],
                abbreviatedDayNames: ["sun", "mán", "týs", "mik", "hós", "frí", "leyg"],
                shortestDayNames: ["su", "má", "tý", "mi", "hó", "fr", "ley"],
                firstLetterDayNames: ["s", "m", "t", "m", "h", "f", "l"],
                monthNames: ["januar", "februar", "mars", "apríl", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"],
                abbreviatedMonthNames: ["jan", "feb", "mar", "apr", "mai", "jun", "jul", "aug", "sep", "okt", "nov", "des"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd-MM-yyyy",
                    longDate: "d. MMMM yyyy",
                    shortTime: "HH.mm",
                    longTime: "HH.mm.ss",
                    fullDateTime: "d. MMMM yyyy HH.mm.ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "d. MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^jan(uar)?/i,
                    feb: /^feb(ruar)?/i,
                    mar: /^mar(s)?/i,
                    apr: /^apr(íl)?/i,
                    may: /^mai/i,
                    jun: /^jun(i)?/i,
                    jul: /^jul(i)?/i,
                    aug: /^aug(ust)?/i,
                    sep: /^sep(t(ember)?)?/i,
                    oct: /^okt(ober)?/i,
                    nov: /^nov(ember)?/i,
                    dec: /^des(ember)?/i,
                    sun: /^su(n(nudagur)?)?/i,
                    mon: /^má(n(adagur)?)?/i,
                    tue: /^tý(s(dagur)?)?/i,
                    wed: /^mi(k(udagur)?)?/i,
                    thu: /^hó(s(dagur)?)?/i,
                    fri: /^fr(í(ggjadagur)?)?/i,
                    sat: /^ley(g(ardagur)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var fr = {
                name: "fr-FR",
                englishName: "French (France)",
                nativeName: "français (France)",
                dayNames: ["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"],
                abbreviatedDayNames: ["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."],
                shortestDayNames: ["di", "lu", "ma", "me", "je", "ve", "sa"],
                firstLetterDayNames: ["d", "l", "m", "m", "j", "v", "s"],
                monthNames: ["janvier", "février", "mars", "avril", "mai", "juin", "juillet", "août", "septembre", "octobre", "novembre", "décembre"],
                abbreviatedMonthNames: ["janv.", "févr.", "mars", "avr.", "mai", "juin", "juil.", "août", "sept.", "oct.", "nov.", "déc."],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd/MM/yyyy",
                    longDate: "dddd d MMMM yyyy",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "dddd d MMMM yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "d MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^janv(.(ier)?)?/i,
                    feb: /^févr(.(ier)?)?/i,
                    mar: /^mars/i,
                    apr: /^avr(.(il)?)?/i,
                    may: /^mai/i,
                    jun: /^juin/i,
                    jul: /^juil(.(let)?)?/i,
                    aug: /^août/i,
                    sep: /^sept(.(embre)?)?/i,
                    oct: /^oct(.(obre)?)?/i,
                    nov: /^nov(.(embre)?)?/i,
                    dec: /^déc(.(embre)?)?/i,
                    sun: /^di(m(.(anche)?)?)?/i,
                    mon: /^lu(n(.(di)?)?)?/i,
                    tue: /^ma(r(.(di)?)?)?/i,
                    wed: /^me(r(.(credi)?)?)?/i,
                    thu: /^je(u(.(di)?)?)?/i,
                    fri: /^ve(n(.(dredi)?)?)?/i,
                    sat: /^sa(m(.(edi)?)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var gl = {
                name: "gl-ES",
                englishName: "Galician (Galician)",
                nativeName: "galego (galego)",
                dayNames: ["domingo", "luns", "martes", "mércores", "xoves", "venres", "sábado"],
                abbreviatedDayNames: ["dom", "luns", "mar", "mér", "xov", "ven", "sab"],
                shortestDayNames: ["do", "lu", "ma", "mé", "xo", "ve", "sa"],
                firstLetterDayNames: ["d", "l", "m", "m", "x", "v", "s"],
                monthNames: ["xaneiro", "febreiro", "marzo", "abril", "maio", "xuño", "xullo", "agosto", "setembro", "outubro", "novembro", "decembro"],
                abbreviatedMonthNames: ["xan", "feb", "mar", "abr", "maio", "xuñ", "xull", "ago", "set", "out", "nov", "dec"],
                amDesignator: "a.m.",
                pmDesignator: "p.m.",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd/MM/yy",
                    longDate: "dddd, dd' de 'MMMM' de 'yyyy",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "dddd, dd' de 'MMMM' de 'yyyy H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM' de 'yyyy"
                },
                regexPatterns: {
                    jan: /^xan(eiro)?/i,
                    feb: /^feb(reiro)?/i,
                    mar: /^mar(zo)?/i,
                    apr: /^abr(il)?/i,
                    may: /^maio/i,
                    jun: /^xuñ(o)?/i,
                    jul: /^xull(o)?/i,
                    aug: /^ago(sto)?/i,
                    sep: /^set(embro)?/i,
                    oct: /^out(ubro)?/i,
                    nov: /^nov(embro)?/i,
                    dec: /^dec(embro)?/i,
                    sun: /^do(m(ingo)?)?/i,
                    mon: /^lu(1)?/i,
                    tue: /^ma(r(tes)?)?/i,
                    wed: /^mé(r(cores)?)?/i,
                    thu: /^xo(v(es)?)?/i,
                    fri: /^ve(n(res)?)?/i,
                    sat: /^sa(b(ado)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var gu = {
                name: "gu-IN",
                englishName: "Gujarati (India)",
                nativeName: "ગુજરાતી (ભારત)",
                dayNames: ["રવિવાર", "સોમવાર", "મંગળવાર", "બુધવાર", "ગુરુવાર", "શુક્રવાર", "શનિવાર"],
                abbreviatedDayNames: ["રવિ", "સોમ", "મંગળ", "બુધ", "ગુરુ", "શુક્ર", "શનિ"],
                shortestDayNames: ["ર", "સ", "મ", "બ", "ગ", "શ", "શ"],
                firstLetterDayNames: ["ર", "સ", "મ", "બ", "ગ", "શ", "શ"],
                monthNames: ["જાન્યુઆરી", "ફેબ્રુઆરી", "માર્ચ", "એપ્રિલ", "મે", "જૂન", "જુલાઈ", "ઑગસ્ટ", "સપ્ટેમ્બર", "ઑક્ટ્બર", "નવેમ્બર", "ડિસેમ્બર"],
                abbreviatedMonthNames: ["જાન્યુ", "ફેબ્રુ", "માર્ચ", "એપ્રિલ", "મે", "જૂન", "જુલાઈ", "ઑગસ્ટ", "સપ્ટે", "ઑક્ટો", "નવે", "ડિસે"],
                amDesignator: "પૂર્વ મધ્યાહ્ન",
                pmDesignator: "ઉત્તર મધ્યાહ્ન",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd-MM-yy",
                    longDate: "dd MMMM yyyy",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "dd MMMM yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM, yyyy"
                },
                regexPatterns: {
                    jan: /^જાન્યુ(આરી)?/i,
                    feb: /^ફેબ્રુ(આરી)?/i,
                    mar: /^માર્ચ/i,
                    apr: /^એપ્રિલ/i,
                    may: /^મે/i,
                    jun: /^જૂન/i,
                    jul: /^જુલાઈ/i,
                    aug: /^ઑગસ્ટ/i,
                    sep: /^સપ્ટે(મ્બર)?/i,
                    oct: /^ઑક્ટ્બર/i,
                    nov: /^નવે(મ્બર)?/i,
                    dec: /^ડિસે(મ્બર)?/i,
                    sun: /^ર(વિ(વાર)?)?/i,
                    mon: /^સ(ોમ(વાર)?)?/i,
                    tue: /^મ(ંગળ(વાર)?)?/i,
                    wed: /^બ(ુધ(વાર)?)?/i,
                    thu: /^ગ(ુરુ(વાર)?)?/i,
                    fri: /^શ(ુક્ર(વાર)?)?/i,
                    sat: /^શ(નિ(વાર)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var he = {
                name: "he-IL",
                englishName: "Hebrew (Israel)",
                nativeName: "עברית (ישראל)",
                dayNames: ["יום ראשון", "יום שני", "יום שלישי", "יום רביעי", "יום חמישי", "יום שישי", "שבת"],
                abbreviatedDayNames: ["יום א", "יום ב", "יום ג", "יום ד", "יום ה", "יום ו", "שבת"],
                shortestDayNames: ["א", "ב", "ג", "ד", "ה", "ו", "ש"],
                firstLetterDayNames: ["א", "ב", "ג", "ד", "ה", "ו", "ש"],
                monthNames: ["ינואר", "פברואר", "מרץ", "אפריל", "מאי", "יוני", "יולי", "אוגוסט", "ספטמבר", "אוקטובר", "נובמבר", "דצמבר"],
                abbreviatedMonthNames: ["ינו", "פבר", "מרץ", "אפר", "מאי", "יונ", "יול", "אוג", "ספט", "אוק", "נוב", "דצמ"],
                amDesignator: "AM",
                pmDesignator: "PM",
                firstDayOfWeek: 0,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd/MM/yyyy",
                    longDate: "dddd dd MMMM yyyy",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "dddd dd MMMM yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^ינו(אר)?/i,
                    feb: /^פבר(ואר)?/i,
                    mar: /^מרץ/i,
                    apr: /^אפר(יל)?/i,
                    may: /^מאי/i,
                    jun: /^יונ(י)?/i,
                    jul: /^יול(י)?/i,
                    aug: /^אוג(וסט)?/i,
                    sep: /^ספט(מבר)?/i,
                    oct: /^אוק(טובר)?/i,
                    nov: /^נוב(מבר)?/i,
                    dec: /^דצמ(בר)?/i,
                    sun: /^א(ום א(אשון)?)?/i,
                    mon: /^ב(ום ב(ני)?)?/i,
                    tue: /^ג(ום ג(לישי)?)?/i,
                    wed: /^ד(ום ד(ביעי)?)?/i,
                    thu: /^ה(ום ה(מישי)?)?/i,
                    fri: /^ו(ום ו(ישי)?)?/i,
                    sat: /^ש(1)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var hi = {
                name: "hi-IN",
                englishName: "Hindi (India)",
                nativeName: "हिंदी (भारत)",
                dayNames: ["रविवार", "सोमवार", "मंगलवार", "बुधवार", "गुरुवार", "शुक्रवार", "शनिवार"],
                abbreviatedDayNames: ["रवि.", "सोम.", "मंगल.", "बुध.", "गुरु.", "शुक्र.", "शनि."],
                shortestDayNames: ["र", "स", "म", "ब", "ग", "श", "श"],
                firstLetterDayNames: ["र", "स", "म", "ब", "ग", "श", "श"],
                monthNames: ["जनवरी", "फरवरी", "मार्च", "अप्रैल", "मई", "जून", "जुलाई", "अगस्त", "सितम्बर", "अक्तूबर", "नवम्बर", "दिसम्बर"],
                abbreviatedMonthNames: ["जनवरी", "फरवरी", "मार्च", "अप्रैल", "मई", "जून", "जुलाई", "अगस्त", "सितम्बर", "अक्तूबर", "नवम्बर", "दिसम्बर"],
                amDesignator: "पूर्वाह्न",
                pmDesignator: "अपराह्न",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd-MM-yyyy",
                    longDate: "dd MMMM yyyy",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "dd MMMM yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM, yyyy"
                },
                regexPatterns: {
                    jan: /^जनवरी/i,
                    feb: /^फरवरी/i,
                    mar: /^मार्च/i,
                    apr: /^अप्रैल/i,
                    may: /^मई/i,
                    jun: /^जून/i,
                    jul: /^जुलाई/i,
                    aug: /^अगस्त/i,
                    sep: /^सितम्बर/i,
                    oct: /^अक्तूबर/i,
                    nov: /^नवम्बर/i,
                    dec: /^दिसम्बर/i,
                    sun: /^र(वि(.(वार)?)?)?/i,
                    mon: /^स(ोम(.(वार)?)?)?/i,
                    tue: /^म(ंगल(.(वार)?)?)?/i,
                    wed: /^ब(ुध(.(वार)?)?)?/i,
                    thu: /^ग(ुरु(.(वार)?)?)?/i,
                    fri: /^श(ुक्र(.(वार)?)?)?/i,
                    sat: /^श(नि(.(वार)?)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var hr = {
                name: "hr-HR",
                englishName: "Croatian (Croatia)",
                nativeName: "hrvatski (Hrvatska)",
                dayNames: ["nedjelja", "ponedjeljak", "utorak", "srijeda", "četvrtak", "petak", "subota"],
                abbreviatedDayNames: ["ned", "pon", "uto", "sri", "čet", "pet", "sub"],
                shortestDayNames: ["ne", "po", "ut", "sr", "če", "pe", "su"],
                firstLetterDayNames: ["n", "p", "u", "s", "č", "p", "s"],
                monthNames: ["siječanj", "veljača", "ožujak", "travanj", "svibanj", "lipanj", "srpanj", "kolovoz", "rujan", "listopad", "studeni", "prosinac"],
                abbreviatedMonthNames: ["sij", "vlj", "ožu", "tra", "svi", "lip", "srp", "kol", "ruj", "lis", "stu", "pro"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "d.M.yyyy",
                    longDate: "d. MMMM yyyy",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "d. MMMM yyyy H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "d. MMMM",
                    yearMonth: "MMMM, yyyy"
                },
                regexPatterns: {
                    jan: /^sij(ečanj)?/i,
                    feb: /^veljača/i,
                    mar: /^ožu(jak)?/i,
                    apr: /^tra(vanj)?/i,
                    may: /^svi(banj)?/i,
                    jun: /^lip(anj)?/i,
                    jul: /^srp(anj)?/i,
                    aug: /^kol(ovoz)?/i,
                    sep: /^ruj(an)?/i,
                    oct: /^lis(topad)?/i,
                    nov: /^stu(deni)?/i,
                    dec: /^pro(sinac)?/i,
                    sun: /^ne(d(jelja)?)?/i,
                    mon: /^po(n(edjeljak)?)?/i,
                    tue: /^ut(o(rak)?)?/i,
                    wed: /^sr(i(jeda)?)?/i,
                    thu: /^če(t(vrtak)?)?/i,
                    fri: /^pe(t(ak)?)?/i,
                    sat: /^su(b(ota)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var hu = {
                name: "hu-HU",
                englishName: "Hungarian (Hungary)",
                nativeName: "magyar (Magyarország)",
                dayNames: ["vasárnap", "hétfő", "kedd", "szerda", "csütörtök", "péntek", "szombat"],
                abbreviatedDayNames: ["V", "H", "K", "Sze", "Cs", "P", "Szo"],
                shortestDayNames: ["V", "H", "K", "Sze", "Cs", "P", "Szo"],
                firstLetterDayNames: ["V", "H", "K", "S", "C", "P", "S"],
                monthNames: ["január", "február", "március", "április", "május", "június", "július", "augusztus", "szeptember", "október", "november", "december"],
                abbreviatedMonthNames: ["jan.", "febr.", "márc.", "ápr.", "máj.", "jún.", "júl.", "aug.", "szept.", "okt.", "nov.", "dec."],
                amDesignator: "de.",
                pmDesignator: "du.",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "ymd",
                formatPatterns: {
                    shortDate: "yyyy. MM. dd.",
                    longDate: "yyyy. MMMM d.",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "yyyy. MMMM d. H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "MMMM d.",
                    yearMonth: "yyyy. MMMM"
                },
                regexPatterns: {
                    jan: /^jan(.(uár)?)?/i,
                    feb: /^febr(.(uár)?)?/i,
                    mar: /^márc(.(ius)?)?/i,
                    apr: /^ápr(.(ilis)?)?/i,
                    may: /^máj(.(us)?)?/i,
                    jun: /^jún(.(ius)?)?/i,
                    jul: /^júl(.(ius)?)?/i,
                    aug: /^aug(.(usztus)?)?/i,
                    sep: /^szept(.(ember)?)?/i,
                    oct: /^okt(.(óber)?)?/i,
                    nov: /^nov(.(ember)?)?/i,
                    dec: /^dec(.(ember)?)?/i,
                    sun: /^vasárnap/i,
                    mon: /^hétfő/i,
                    tue: /^kedd/i,
                    wed: /^szerda/i,
                    thu: /^csütörtök/i,
                    fri: /^péntek/i,
                    sat: /^szombat/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var hy = {
                name: "hy-AM",
                englishName: "Armenian (Armenia)",
                nativeName: "Հայերեն (Հայաստան)",
                dayNames: ["Կիրակի", "Երկուշաբթի", "Երեքշաբթի", "Չորեքշաբթի", "Հինգշաբթի", "ՈՒրբաթ", "Շաբաթ"],
                abbreviatedDayNames: ["Կիր", "Երկ", "Երք", "Չրք", "Հնգ", "ՈՒր", "Շբթ"],
                shortestDayNames: ["Կ", "Ե", "Ե", "Չ", "Հ", "Ո", "Շ"],
                firstLetterDayNames: ["Կ", "Ե", "Ե", "Չ", "Հ", "Ո", "Շ"],
                monthNames: ["Հունվար", "Փետրվար", "Մարտ", "Ապրիլ", "Մայիս", "Հունիս", "Հուլիս", "Օգոստոս", "Սեպտեմբեր", "Հոկտեմբեր", "Նոյեմբեր", "Դեկտեմբեր"],
                abbreviatedMonthNames: ["ՀՆՎ", "ՓՏՎ", "ՄՐՏ", "ԱՊՐ", "ՄՅՍ", "ՀՆՍ", "ՀԼՍ", "ՕԳՍ", "ՍԵՊ", "ՀՈԿ", "ՆՈՅ", "ԴԵԿ"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd.MM.yyyy",
                    longDate: "d MMMM, yyyy",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "d MMMM, yyyy H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "d MMMM",
                    yearMonth: "MMMM, yyyy"
                },
                regexPatterns: {
                    jan: /^հունվար/i,
                    feb: /^փետրվար/i,
                    mar: /^մարտ/i,
                    apr: /^ապր(իլ)?/i,
                    may: /^մայիս/i,
                    jun: /^հունիս/i,
                    jul: /^հուլիս/i,
                    aug: /^օգոստոս/i,
                    sep: /^սեպ(տեմբեր)?/i,
                    oct: /^հոկ(տեմբեր)?/i,
                    nov: /^նոյ(եմբեր)?/i,
                    dec: /^դեկ(տեմբեր)?/i,
                    sun: /^կ(իր(ակի)?)?/i,
                    mon: /^ե(րկ(ուշաբթի)?)?/i,
                    tue: /^ե(րք(քշաբթի)?)?/i,
                    wed: /^չ(րք(եքշաբթի)?)?/i,
                    thu: /^հ(նգ(գշաբթի)?)?/i,
                    fri: /^ո(ւր(բաթ)?)?/i,
                    sat: /^շ(բթ(աթ)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var id = {
                name: "id-ID",
                englishName: "Indonesian (Indonesia)",
                nativeName: "Bahasa Indonesia (Indonesia)",
                dayNames: ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"],
                abbreviatedDayNames: ["Minggu", "Sen", "Sel", "Rabu", "Kamis", "Jumat", "Sabtu"],
                shortestDayNames: ["M", "S", "S", "R", "K", "J", "S"],
                firstLetterDayNames: ["M", "S", "S", "R", "K", "J", "S"],
                monthNames: ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "Nopember", "Desember"],
                abbreviatedMonthNames: ["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agust", "Sep", "Okt", "Nop", "Des"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd/MM/yyyy",
                    longDate: "dd MMMM yyyy",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "dd MMMM yyyy H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^jan(uari)?/i,
                    feb: /^feb(ruari)?/i,
                    mar: /^mar(et)?/i,
                    apr: /^apr(il)?/i,
                    may: /^mei/i,
                    jun: /^jun(i)?/i,
                    jul: /^jul(i)?/i,
                    aug: /^agust(us)?/i,
                    sep: /^sep(t(ember)?)?/i,
                    oct: /^okt(ober)?/i,
                    nov: /^nop(ember)?/i,
                    dec: /^des(ember)?/i,
                    sun: /^m(1)?/i,
                    mon: /^s(en(in)?)?/i,
                    tue: /^s(el(asa)?)?/i,
                    wed: /^r(1)?/i,
                    thu: /^k(1)?/i,
                    fri: /^j(1)?/i,
                    sat: /^s(1)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var is = {
                name: "is-IS",
                englishName: "Icelandic (Iceland)",
                nativeName: "íslenska (Ísland)",
                dayNames: ["sunnudagur", "mánudagur", "þriðjudagur", "miðvikudagur", "fimmtudagur", "föstudagur", "laugardagur"],
                abbreviatedDayNames: ["sun.", "mán.", "þri.", "mið.", "fim.", "fös.", "lau."],
                shortestDayNames: ["su", "má", "þr", "mi", "fi", "fö", "la"],
                firstLetterDayNames: ["s", "m", "þ", "m", "f", "f", "l"],
                monthNames: ["janúar", "febrúar", "mars", "apríl", "maí", "júní", "júlí", "ágúst", "september", "október", "nóvember", "desember"],
                abbreviatedMonthNames: ["jan.", "feb.", "mar.", "apr.", "maí", "jún.", "júl.", "ágú.", "sep.", "okt.", "nóv.", "des."],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "d.M.yyyy",
                    longDate: "d. MMMM yyyy",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "d. MMMM yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "d. MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^jan(.(úar)?)?/i,
                    feb: /^feb(.(rúar)?)?/i,
                    mar: /^mar(.(s)?)?/i,
                    apr: /^apr(.(íl)?)?/i,
                    may: /^maí/i,
                    jun: /^jún(.(í)?)?/i,
                    jul: /^júl(.(í)?)?/i,
                    aug: /^ágú(.(st)?)?/i,
                    sep: /^sep(t(ember)?)?/i,
                    oct: /^okt(.(óber)?)?/i,
                    nov: /^nóv(.(ember)?)?/i,
                    dec: /^des(.(ember)?)?/i,
                    sun: /^su(n(.(nudagur)?)?)?/i,
                    mon: /^má(n(.(udagur)?)?)?/i,
                    tue: /^þr(i(.(ðjudagur)?)?)?/i,
                    wed: /^mi(ð(.(vikudagur)?)?)?/i,
                    thu: /^fi(m(.(mtudagur)?)?)?/i,
                    fri: /^fö(s(.(tudagur)?)?)?/i,
                    sat: /^la(u(.(gardagur)?)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var it = {
                name: "it-IT",
                englishName: "Italian (Italy)",
                nativeName: "italiano (Italia)",
                dayNames: ["domenica", "lunedì", "martedì", "mercoledì", "giovedì", "venerdì", "sabato"],
                abbreviatedDayNames: ["dom", "lun", "mar", "mer", "gio", "ven", "sab"],
                shortestDayNames: ["do", "lu", "ma", "me", "gi", "ve", "sa"],
                firstLetterDayNames: ["d", "l", "m", "m", "g", "v", "s"],
                monthNames: ["gennaio", "febbraio", "marzo", "aprile", "maggio", "giugno", "luglio", "agosto", "settembre", "ottobre", "novembre", "dicembre"],
                abbreviatedMonthNames: ["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd/MM/yyyy",
                    longDate: "dddd d MMMM yyyy",
                    shortTime: "H.mm",
                    longTime: "H.mm.ss",
                    fullDateTime: "dddd d MMMM yyyy H.mm.ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^gen(naio)?/i,
                    feb: /^feb(braio)?/i,
                    mar: /^mar(zo)?/i,
                    apr: /^apr(ile)?/i,
                    may: /^mag(gio)?/i,
                    jun: /^giu(gno)?/i,
                    jul: /^lug(lio)?/i,
                    aug: /^ago(sto)?/i,
                    sep: /^set(tembre)?/i,
                    oct: /^ott(obre)?/i,
                    nov: /^nov(embre)?/i,
                    dec: /^dic(embre)?/i,
                    sun: /^do(m(enica)?)?/i,
                    mon: /^lu(n(edì)?)?/i,
                    tue: /^ma(r(tedì)?)?/i,
                    wed: /^me(r(coledì)?)?/i,
                    thu: /^gi(o(vedì)?)?/i,
                    fri: /^ve(n(erdì)?)?/i,
                    sat: /^sa(b(ato)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var ja = {
                name: "ja-JP",
                englishName: "Japanese (Japan)",
                nativeName: "日本語 (日本)",
                dayNames: ["日曜日", "月曜日", "火曜日", "水曜日", "木曜日", "金曜日", "土曜日"],
                abbreviatedDayNames: ["日", "月", "火", "水", "木", "金", "土"],
                shortestDayNames: ["日", "月", "火", "水", "木", "金", "土"],
                firstLetterDayNames: ["日", "月", "火", "水", "木", "金", "土"],
                monthNames: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
                abbreviatedMonthNames: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"],
                amDesignator: "午前",
                pmDesignator: "午後",
                firstDayOfWeek: 0,
                twoDigitYearMax: 2029,
                dateElementOrder: "ymd",
                formatPatterns: {
                    shortDate: "yyyy/MM/dd",
                    longDate: "yyyy'年'M'月'd'日'",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "yyyy'年'M'月'd'日' H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "M'月'd'日'",
                    yearMonth: "yyyy'年'M'月'"
                },
                regexPatterns: {
                    jan: /^1(月)?/i,
                    feb: /^2(月)?/i,
                    mar: /^3(月)?/i,
                    apr: /^4(月)?/i,
                    may: /^5(月)?/i,
                    jun: /^6(月)?/i,
                    jul: /^7(月)?/i,
                    aug: /^8(月)?/i,
                    sep: /^9(月)?/i,
                    oct: /^10(月)?/i,
                    nov: /^11(月)?/i,
                    dec: /^12(月)?/i,
                    sun: /^日曜日/i,
                    mon: /^月曜日/i,
                    tue: /^火曜日/i,
                    wed: /^水曜日/i,
                    thu: /^木曜日/i,
                    fri: /^金曜日/i,
                    sat: /^土曜日/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var ka = {
                name: "ka-GE",
                englishName: "Georgian (Georgia)",
                nativeName: "ქართული (საქართველო)",
                dayNames: ["კვირა", "ორშაბათი", "სამშაბათი", "ოთხშაბათი", "ხუთშაბათი", "პარასკევი", "შაბათი"],
                abbreviatedDayNames: ["კვირა", "ორშაბათი", "სამშაბათი", "ოთხშაბათი", "ხუთშაბათი", "პარასკევი", "შაბათი"],
                shortestDayNames: ["კ", "ო", "ს", "ო", "ხ", "პ", "შ"],
                firstLetterDayNames: ["კ", "ო", "ს", "ო", "ხ", "პ", "შ"],
                monthNames: ["იანვარი", "თებერვალი", "მარტი", "აპრილი", "მაისი", "ივნისი", "ივლისი", "აგვისტო", "სექტემბერი", "ოქტომბერი", "ნოემბერი", "დეკემბერი"],
                abbreviatedMonthNames: ["იან", "თებ", "მარ", "აპრ", "მაის", "ივნ", "ივლ", "აგვ", "სექ", "ოქტ", "ნოემ", "დეკ"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd.MM.yyyy",
                    longDate: "yyyy 'წლის' dd MM, dddd",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "yyyy 'წლის' dd MM, dddd H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^იან(ვარი)?/i,
                    feb: /^თებ(ერვალი)?/i,
                    mar: /^მარ(ტი)?/i,
                    apr: /^აპრ(ილი)?/i,
                    may: /^მაის(ი)?/i,
                    jun: /^ივნ(ისი)?/i,
                    jul: /^ივლ(ისი)?/i,
                    aug: /^აგვ(ისტო)?/i,
                    sep: /^სექ(ტემბერი)?/i,
                    oct: /^ოქტ(ომბერი)?/i,
                    nov: /^ნოემ(ბერი)?/i,
                    dec: /^დეკ(ემბერი)?/i,
                    sun: /^კ(1)?/i,
                    mon: /^ო(1)?/i,
                    tue: /^ს(1)?/i,
                    wed: /^ო(1)?/i,
                    thu: /^ხ(1)?/i,
                    fri: /^პ(1)?/i,
                    sat: /^შ(1)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var kk = {
                name: "kk-KZ",
                englishName: "Kazakh (Kazakhstan)",
                nativeName: "Қазақ (Қазақстан)",
                dayNames: ["Жексенбі", "Дүйсенбі", "Сейсенбі", "Сәрсенбі", "Бейсенбі", "Жұма", "Сенбі"],
                abbreviatedDayNames: ["Жк", "Дс", "Сс", "Ср", "Бс", "Жм", "Сн"],
                shortestDayNames: ["Жк", "Дс", "Сс", "Ср", "Бс", "Жм", "Сн"],
                firstLetterDayNames: ["Ж", "Д", "С", "С", "Б", "Ж", "С"],
                monthNames: ["қаңтар", "ақпан", "наурыз", "сәуір", "мамыр", "маусым", "шілде", "тамыз", "қыркүйек", "қазан", "қараша", "желтоқсан"],
                abbreviatedMonthNames: ["Қаң", "Ақп", "Нау", "Сәу", "Мам", "Мау", "Шіл", "Там", "Қыр", "Қаз", "Қар", "Жел"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd.MM.yyyy",
                    longDate: "d MMMM yyyy 'ж.'",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "d MMMM yyyy 'ж.' H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "d MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^қаң(тар)?/i,
                    feb: /^ақп(ан)?/i,
                    mar: /^нау(рыз)?/i,
                    apr: /^сәу(ір)?/i,
                    may: /^мам(ыр)?/i,
                    jun: /^мау(сым)?/i,
                    jul: /^шіл(де)?/i,
                    aug: /^там(ыз)?/i,
                    sep: /^қыр(күйек)?/i,
                    oct: /^қаз(ан)?/i,
                    nov: /^қар(аша)?/i,
                    dec: /^жел(тоқсан)?/i,
                    sun: /^жексенбі/i,
                    mon: /^дүйсенбі/i,
                    tue: /^сейсенбі/i,
                    wed: /^сәрсенбі/i,
                    thu: /^бейсенбі/i,
                    fri: /^жұма/i,
                    sat: /^сенбі/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var kn = {
                name: "kn-IN",
                englishName: "Kannada (India)",
                nativeName: "ಕನ್ನಡ (ಭಾರತ)",
                dayNames: ["ಭಾನುವಾರ", "ಸೋಮವಾರ", "ಮಂಗಳವಾರ", "ಬುಧವಾರ", "ಗುರುವಾರ", "ಶುಕ್ರವಾರ", "ಶನಿವಾರ"],
                abbreviatedDayNames: ["ಭಾನು.", "ಸೋಮ.", "ಮಂಗಳ.", "ಬುಧ.", "ಗುರು.", "ಶುಕ್ರ.", "ಶನಿ."],
                shortestDayNames: ["ರ", "ಸ", "ಮ", "ಬ", "ಗ", "ಶ", "ಶ"],
                firstLetterDayNames: ["ರ", "ಸ", "ಮ", "ಬ", "ಗ", "ಶ", "ಶ"],
                monthNames: ["ಜನವರಿ", "ಫೆಬ್ರವರಿ", "ಮಾರ್ಚ್", "ಎಪ್ರಿಲ್", "ಮೇ", "ಜೂನ್", "ಜುಲೈ", "ಆಗಸ್ಟ್", "ಸೆಪ್ಟಂಬರ್", "ಅಕ್ಟೋಬರ್", "ನವೆಂಬರ್", "ಡಿಸೆಂಬರ್"],
                abbreviatedMonthNames: ["ಜನವರಿ", "ಫೆಬ್ರವರಿ", "ಮಾರ್ಚ್", "ಎಪ್ರಿಲ್", "ಮೇ", "ಜೂನ್", "ಜುಲೈ", "ಆಗಸ್ಟ್", "ಸೆಪ್ಟಂಬರ್", "ಅಕ್ಟೋಬರ್", "ನವೆಂಬರ್", "ಡಿಸೆಂಬರ್"],
                amDesignator: "ಪೂರ್ವಾಹ್ನ",
                pmDesignator: "ಅಪರಾಹ್ನ",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd-MM-yy",
                    longDate: "dd MMMM yyyy",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "dd MMMM yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM, yyyy"
                },
                regexPatterns: {
                    jan: /^ಜನವರಿ/i,
                    feb: /^ಫೆಬ್ರವರಿ/i,
                    mar: /^ಮಾರ್ಚ್/i,
                    apr: /^ಎಪ್ರಿಲ್/i,
                    may: /^ಮೇ/i,
                    jun: /^ಜೂನ್/i,
                    jul: /^ಜುಲೈ/i,
                    aug: /^ಆಗಸ್ಟ್/i,
                    sep: /^ಸೆಪ್ಟಂಬರ್/i,
                    oct: /^ಅಕ್ಟೋಬರ್/i,
                    nov: /^ನವೆಂಬರ್/i,
                    dec: /^ಡಿಸೆಂಬರ್/i,
                    sun: /^ರ(ಾನು(.(ವಾರ)?)?)?/i,
                    mon: /^ಸ(ೋಮ(.(ವಾರ)?)?)?/i,
                    tue: /^ಮ(ಂಗಳ(.(ವಾರ)?)?)?/i,
                    wed: /^ಬ(ುಧ(.(ವಾರ)?)?)?/i,
                    thu: /^ಗ(ುರು(.(ವಾರ)?)?)?/i,
                    fri: /^ಶ(ುಕ್ರ(.(ವಾರ)?)?)?/i,
                    sat: /^ಶ(ನಿ(.(ವಾರ)?)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var ko = {
                name: "ko-KR",
                englishName: "Korean (Korea)",
                nativeName: "한국어 (대한민국)",
                dayNames: ["일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일"],
                abbreviatedDayNames: ["일", "월", "화", "수", "목", "금", "토"],
                shortestDayNames: ["일", "월", "화", "수", "목", "금", "토"],
                firstLetterDayNames: ["일", "월", "화", "수", "목", "금", "토"],
                monthNames: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"],
                abbreviatedMonthNames: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"],
                amDesignator: "오전",
                pmDesignator: "오후",
                firstDayOfWeek: 0,
                twoDigitYearMax: 2029,
                dateElementOrder: "ymd",
                formatPatterns: {
                    shortDate: "yyyy-MM-dd",
                    longDate: "yyyy'년' M'월' d'일' dddd",
                    shortTime: "tt h:mm",
                    longTime: "tt h:mm:ss",
                    fullDateTime: "yyyy'년' M'월' d'일' dddd tt h:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "M'월' d'일'",
                    yearMonth: "yyyy'년' M'월'"
                },
                regexPatterns: {
                    jan: /^1(월)?/i,
                    feb: /^2(월)?/i,
                    mar: /^3(월)?/i,
                    apr: /^4(월)?/i,
                    may: /^5(월)?/i,
                    jun: /^6(월)?/i,
                    jul: /^7(월)?/i,
                    aug: /^8(월)?/i,
                    sep: /^9(월)?/i,
                    oct: /^10(월)?/i,
                    nov: /^11(월)?/i,
                    dec: /^12(월)?/i,
                    sun: /^일요일/i,
                    mon: /^월요일/i,
                    tue: /^화요일/i,
                    wed: /^수요일/i,
                    thu: /^목요일/i,
                    fri: /^금요일/i,
                    sat: /^토요일/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var kok = {
                name: "kok-IN",
                englishName: "Konkani (India)",
                nativeName: "कोंकणी (भारत)",
                dayNames: ["आयतार", "सोमार", "मंगळार", "बुधवार", "बिरेस्तार", "सुक्रार", "शेनवार"],
                abbreviatedDayNames: ["आय.", "सोम.", "मंगळ.", "बुध.", "बिरे.", "सुक्र.", "शेन."],
                shortestDayNames: ["आ", "स", "म", "ब", "ब", "स", "श"],
                firstLetterDayNames: ["आ", "स", "म", "ब", "ब", "स", "श"],
                monthNames: ["जानेवारी", "फेब्रुवारी", "मार्च", "एप्रिल", "मे", "जून", "जुलै", "ऑगस्ट", "सप्टेंबर", "ऑक्टोबर", "नोवेम्बर", "डिसेंबर"],
                abbreviatedMonthNames: ["जानेवारी", "फेब्रुवारी", "मार्च", "एप्रिल", "मे", "जून", "जुलै", "ऑगस्ट", "सप्टेंबर", "ऑक्टोबर", "नोवेम्बर", "डिसेंबर"],
                amDesignator: "म.पू.",
                pmDesignator: "म.नं.",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd-MM-yyyy",
                    longDate: "dd MMMM yyyy",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "dd MMMM yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM, yyyy"
                },
                regexPatterns: {
                    jan: /^जानेवारी/i,
                    feb: /^फेब्रुवारी/i,
                    mar: /^मार्च/i,
                    apr: /^एप्रिल/i,
                    may: /^मे/i,
                    jun: /^जून/i,
                    jul: /^जुलै/i,
                    aug: /^ऑगस्ट/i,
                    sep: /^सप्टेंबर/i,
                    oct: /^ऑक्टोबर/i,
                    nov: /^नोवेम्बर/i,
                    dec: /^डिसेंबर/i,
                    sun: /^आ(य(.(तार)?)?)?/i,
                    mon: /^स(ोम(.(ार)?)?)?/i,
                    tue: /^म(ंगळ(.(ार)?)?)?/i,
                    wed: /^ब(ुध(.(वार)?)?)?/i,
                    thu: /^ब(िरे(.(स्तार)?)?)?/i,
                    fri: /^स(ुक्र(.(ार)?)?)?/i,
                    sat: /^श(ेन(.(वार)?)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var ky = {
                name: "ky-KG",
                englishName: "Kyrgyz (Kyrgyzstan)",
                nativeName: "Кыргыз (Кыргызстан)",
                dayNames: ["Жекшемби", "Дүйшөмбү", "Шейшемби", "Шаршемби", "Бейшемби", "Жума", "Ишемби"],
                abbreviatedDayNames: ["Жш", "Дш", "Шш", "Шр", "Бш", "Жм", "Иш"],
                shortestDayNames: ["Жш", "Дш", "Шш", "Шр", "Бш", "Жм", "Иш"],
                firstLetterDayNames: ["Ж", "Д", "Ш", "Ш", "Б", "Ж", "И"],
                monthNames: ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"],
                abbreviatedMonthNames: ["Янв", "Фев", "Мар", "Апр", "Май", "Июн", "Июл", "Авг", "Сен", "Окт", "Ноя", "Дек"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd.MM.yy",
                    longDate: "d'-'MMMM yyyy'-ж.'",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "d'-'MMMM yyyy'-ж.' H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "d MMMM",
                    yearMonth: "MMMM yyyy'-ж.'"
                },
                regexPatterns: {
                    jan: /^янв(арь)?/i,
                    feb: /^фев(раль)?/i,
                    mar: /^мар(т)?/i,
                    apr: /^апр(ель)?/i,
                    may: /^май/i,
                    jun: /^июн(ь)?/i,
                    jul: /^июл(ь)?/i,
                    aug: /^авг(уст)?/i,
                    sep: /^сен(тябрь)?/i,
                    oct: /^окт(ябрь)?/i,
                    nov: /^ноя(брь)?/i,
                    dec: /^дек(абрь)?/i,
                    sun: /^жекшемби/i,
                    mon: /^дүйшөмбү/i,
                    tue: /^шейшемби/i,
                    wed: /^шаршемби/i,
                    thu: /^бейшемби/i,
                    fri: /^жума/i,
                    sat: /^ишемби/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var lt = {
                name: "lt-LT",
                englishName: "Lithuanian (Lithuania)",
                nativeName: "lietuvių (Lietuva)",
                dayNames: ["sekmadienis", "pirmadienis", "antradienis", "trečiadienis", "ketvirtadienis", "penktadienis", "šeštadienis"],
                abbreviatedDayNames: ["Sk", "Pr", "An", "Tr", "Kt", "Pn", "Št"],
                shortestDayNames: ["S", "P", "A", "T", "K", "Pn", "Š"],
                firstLetterDayNames: ["S", "P", "A", "T", "K", "P", "Š"],
                monthNames: ["sausis", "vasaris", "kovas", "balandis", "gegužė", "birželis", "liepa", "rugpjūtis", "rugsėjis", "spalis", "lapkritis", "gruodis"],
                abbreviatedMonthNames: ["Sau", "Vas", "Kov", "Bal", "Geg", "Bir", "Lie", "Rgp", "Rgs", "Spl", "Lap", "Grd"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "ymd",
                formatPatterns: {
                    shortDate: "yyyy.MM.dd",
                    longDate: "yyyy 'm.' MMMM d 'd.'",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "yyyy 'm.' MMMM d 'd.' HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "MMMM d 'd.'",
                    yearMonth: "yyyy 'm.' MMMM"
                },
                regexPatterns: {
                    jan: /^sau(sis)?/i,
                    feb: /^vas(aris)?/i,
                    mar: /^kov(as)?/i,
                    apr: /^bal(andis)?/i,
                    may: /^geg(užė)?/i,
                    jun: /^bir(želis)?/i,
                    jul: /^lie(pa)?/i,
                    aug: /^rugpjūtis/i,
                    sep: /^rugsėjis/i,
                    oct: /^spalis/i,
                    nov: /^lap(kritis)?/i,
                    dec: /^gruodis/i,
                    sun: /^s(k(kmadienis)?)?/i,
                    mon: /^p(r(rmadienis)?)?/i,
                    tue: /^a(n(tradienis)?)?/i,
                    wed: /^t(r(ečiadienis)?)?/i,
                    thu: /^k(t(tvirtadienis)?)?/i,
                    fri: /^penktadienis/i,
                    sat: /^š(t(štadienis)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var lv = {
                name: "lv-LV",
                englishName: "Latvian (Latvia)",
                nativeName: "latviešu (Latvija)",
                dayNames: ["svētdiena", "pirmdiena", "otrdiena", "trešdiena", "ceturtdiena", "piektdiena", "sestdiena"],
                abbreviatedDayNames: ["Sv", "Pr", "Ot", "Tr", "Ce", "Pk", "Se"],
                shortestDayNames: ["Sv", "Pr", "Ot", "Tr", "Ce", "Pk", "Se"],
                firstLetterDayNames: ["S", "P", "O", "T", "C", "P", "S"],
                monthNames: ["janvāris", "februāris", "marts", "aprīlis", "maijs", "jūnijs", "jūlijs", "augusts", "septembris", "oktobris", "novembris", "decembris"],
                abbreviatedMonthNames: ["Jan", "Feb", "Mar", "Apr", "Mai", "Jūn", "Jūl", "Aug", "Sep", "Okt", "Nov", "Dec"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "ymd",
                formatPatterns: {
                    shortDate: "yyyy.MM.dd.",
                    longDate: "dddd, yyyy'. gada 'd. MMMM",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "dddd, yyyy'. gada 'd. MMMM H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "d. MMMM",
                    yearMonth: "yyyy. MMMM"
                },
                regexPatterns: {
                    jan: /^jan(vāris)?/i,
                    feb: /^feb(ruāris)?/i,
                    mar: /^mar(ts)?/i,
                    apr: /^apr(īlis)?/i,
                    may: /^mai(js)?/i,
                    jun: /^jūn(ijs)?/i,
                    jul: /^jūl(ijs)?/i,
                    aug: /^aug(usts)?/i,
                    sep: /^sep(tembris)?/i,
                    oct: /^okt(obris)?/i,
                    nov: /^nov(embris)?/i,
                    dec: /^dec(embris)?/i,
                    sun: /^svētdiena/i,
                    mon: /^pirmdiena/i,
                    tue: /^otrdiena/i,
                    wed: /^trešdiena/i,
                    thu: /^ceturtdiena/i,
                    fri: /^piektdiena/i,
                    sat: /^sestdiena/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var mi = {
                name: "mi-NZ",
                englishName: "Maori (New Zealand)",
                nativeName: "Reo Māori (Aotearoa)",
                dayNames: ["Rātapu", "Mane", "Tūrei", "Wenerei", "Tāite", "Paraire", "Hātarei"],
                abbreviatedDayNames: ["Ta", "Ma", "Tū", "We", "Tāi", "Pa", "Hā"],
                shortestDayNames: ["Ta", "Ma", "Tū", "We", "Tāi", "Pa", "Hā"],
                firstLetterDayNames: ["T", "M", "T", "W", "T", "P", "H"],
                monthNames: ["Kohi-tātea", "Hui-tanguru", "Poutū-te-rangi", "Paenga-whāwhā", "Haratua", "Pipiri", "Hōngoingoi", "Here-turi-kōkā", "Mahuru", "Whiringa-ā-nuku", "Whiringa-ā-rangi", "Hakihea"],
                abbreviatedMonthNames: ["Kohi", "Hui", "Pou", "Pae", "Hara", "Pipi", "Hōngoi", "Here", "Mahu", "Whi-nu", "Whi-ra", "Haki"],
                amDesignator: "a.m.",
                pmDesignator: "p.m.",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "d/MM/yyyy",
                    longDate: "dddd, d MMMM yyyy",
                    shortTime: "h:mm:ss tt",
                    longTime: "h:mm:ss tt",
                    fullDateTime: "dddd, d MMMM yyyy h:mm:ss tt",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "MMMM dd",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^kohi(-tātea)?/i,
                    feb: /^hui(-tanguru)?/i,
                    mar: /^pou(tū-te-rangi)?/i,
                    apr: /^pae(nga-whāwhā)?/i,
                    may: /^hara(tua)?/i,
                    jun: /^pipi(ri)?/i,
                    jul: /^hōngoi(ngoi)?/i,
                    aug: /^here(-turi-kōkā)?/i,
                    sep: /^mahu(ru)?/i,
                    oct: /^whiringa-ā-nuku/i,
                    nov: /^whiringa-ā-rangi/i,
                    dec: /^haki(hea)?/i,
                    sun: /^rātapu/i,
                    mon: /^mane/i,
                    tue: /^tūrei/i,
                    wed: /^wenerei/i,
                    thu: /^tāite/i,
                    fri: /^paraire/i,
                    sat: /^hātarei/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var mk = {
                name: "mk-MK",
                englishName: "Macedonian (Former Yugoslav Republic of Macedonia)",
                nativeName: "македонски јазик (Македонија)",
                dayNames: ["недела", "понеделник", "вторник", "среда", "четврток", "петок", "сабота"],
                abbreviatedDayNames: ["нед", "пон", "втр", "срд", "чет", "пет", "саб"],
                shortestDayNames: ["не", "по", "вт", "ср", "че", "пе", "са"],
                firstLetterDayNames: ["н", "п", "в", "с", "ч", "п", "с"],
                monthNames: ["јануари", "февруари", "март", "април", "мај", "јуни", "јули", "август", "септември", "октомври", "ноември", "декември"],
                abbreviatedMonthNames: ["јан", "фев", "мар", "апр", "мај", "јун", "јул", "авг", "сеп", "окт", "ное", "дек"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd.MM.yyyy",
                    longDate: "dddd, dd MMMM yyyy",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "dddd, dd MMMM yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^јан(уари)?/i,
                    feb: /^фев(руари)?/i,
                    mar: /^мар(т)?/i,
                    apr: /^апр(ил)?/i,
                    may: /^мај/i,
                    jun: /^јун(и)?/i,
                    jul: /^јул(и)?/i,
                    aug: /^авг(уст)?/i,
                    sep: /^сеп(тември)?/i,
                    oct: /^окт(омври)?/i,
                    nov: /^ное(мври)?/i,
                    dec: /^дек(ември)?/i,
                    sun: /^не(д(ела)?)?/i,
                    mon: /^по(н(еделник)?)?/i,
                    tue: /^вт(р(рник)?)?/i,
                    wed: /^ср(д(да)?)?/i,
                    thu: /^че(т(врток)?)?/i,
                    fri: /^пе(т(ок)?)?/i,
                    sat: /^са(б(ота)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var mn = {
                name: "mn-MN",
                englishName: "Mongolian (Cyrillic, Mongolia)",
                nativeName: "Монгол хэл (Монгол улс)",
                dayNames: ["Ням", "Даваа", "Мягмар", "Лхагва", "Пүрэв", "Баасан", "Бямба"],
                abbreviatedDayNames: ["Ня", "Да", "Мя", "Лх", "Пү", "Ба", "Бя"],
                shortestDayNames: ["Ня", "Да", "Мя", "Лх", "Пү", "Ба", "Бя"],
                firstLetterDayNames: ["Н", "Д", "М", "Л", "П", "Б", "Б"],
                monthNames: ["1 дүгээр сар", "2 дугаар сар", "3 дугаар сар", "4 дүгээр сар", "5 дугаар сар", "6 дугаар сар", "7 дугаар сар", "8 дугаар сар", "9 дүгээр сар", "10 дугаар сар", "11 дүгээр сар", "12 дугаар сар"],
                abbreviatedMonthNames: ["I", "II", "III", "IV", "V", "VI", "VII", "VШ", "IX", "X", "XI", "XII"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "ymd",
                formatPatterns: {
                    shortDate: "yy.MM.dd",
                    longDate: "yyyy 'оны' MMMM d",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "yyyy 'оны' MMMM d H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "d MMMM",
                    yearMonth: "yyyy 'он' MMMM"
                },
                regexPatterns: {
                    jan: /^1 дүгээр сар/i,
                    feb: /^2 дугаар сар/i,
                    mar: /^3 дугаар сар/i,
                    apr: /^4 дүгээр сар/i,
                    may: /^5 дугаар сар/i,
                    jun: /^6 дугаар сар/i,
                    jul: /^7 дугаар сар/i,
                    aug: /^8 дугаар сар/i,
                    sep: /^9 дүгээр сар/i,
                    oct: /^10 дугаар сар/i,
                    nov: /^11 дүгээр сар/i,
                    dec: /^12 дугаар сар/i,
                    sun: /^ням/i,
                    mon: /^даваа/i,
                    tue: /^мягмар/i,
                    wed: /^лхагва/i,
                    thu: /^пүрэв/i,
                    fri: /^баасан/i,
                    sat: /^бямба/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var mr = {
                name: "mr-IN",
                englishName: "Marathi (India)",
                nativeName: "मराठी (भारत)",
                dayNames: ["रविवार", "सोमवार", "मंगळवार", "बुधवार", "गुरुवार", "शुक्रवार", "शनिवार"],
                abbreviatedDayNames: ["रवि.", "सोम.", "मंगळ.", "बुध.", "गुरु.", "शुक्र.", "शनि."],
                shortestDayNames: ["र", "स", "म", "ब", "ग", "श", "श"],
                firstLetterDayNames: ["र", "स", "म", "ब", "ग", "श", "श"],
                monthNames: ["जानेवारी", "फेब्रुवारी", "मार्च", "एप्रिल", "मे", "जून", "जुलै", "ऑगस्ट", "सप्टेंबर", "ऑक्टोबर", "नोव्हेंबर", "डिसेंबर"],
                abbreviatedMonthNames: ["जाने.", "फेब्रु.", "मार्च", "एप्रिल", "मे", "जून", "जुलै", "ऑगस्ट", "सप्टें.", "ऑक्टो.", "नोव्हें.", "डिसें."],
                amDesignator: "म.पू.",
                pmDesignator: "म.नं.",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd-MM-yyyy",
                    longDate: "dd MMMM yyyy",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "dd MMMM yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM, yyyy"
                },
                regexPatterns: {
                    jan: /^जाने(.(वारी)?)?/i,
                    feb: /^फेब्रु(.(वारी)?)?/i,
                    mar: /^मार्च/i,
                    apr: /^एप्रिल/i,
                    may: /^मे/i,
                    jun: /^जून/i,
                    jul: /^जुलै/i,
                    aug: /^ऑगस्ट/i,
                    sep: /^सप्टें(.(बर)?)?/i,
                    oct: /^ऑक्टो(.(बर)?)?/i,
                    nov: /^नोव्हें(.(बर)?)?/i,
                    dec: /^डिसें(.(बर)?)?/i,
                    sun: /^र(वि(.(वार)?)?)?/i,
                    mon: /^स(ोम(.(वार)?)?)?/i,
                    tue: /^म(ंगळ(.(वार)?)?)?/i,
                    wed: /^ब(ुध(.(वार)?)?)?/i,
                    thu: /^ग(ुरु(.(वार)?)?)?/i,
                    fri: /^श(ुक्र(.(वार)?)?)?/i,
                    sat: /^श(नि(.(वार)?)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var ms = {
                name: "ms-BN",
                englishName: "Malay (Brunei Darussalam)",
                nativeName: "Bahasa Malaysia (Brunei Darussalam)",
                dayNames: ["Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu"],
                abbreviatedDayNames: ["Ahad", "Isnin", "Sel", "Rabu", "Khamis", "Jumaat", "Sabtu"],
                shortestDayNames: ["A", "I", "S", "R", "K", "J", "S"],
                firstLetterDayNames: ["A", "I", "S", "R", "K", "J", "S"],
                monthNames: ["Januari", "Februari", "Mac", "April", "Mei", "Jun", "Julai", "Ogos", "September", "Oktober", "November", "Disember"],
                abbreviatedMonthNames: ["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ogos", "Sept", "Okt", "Nov", "Dis"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd/MM/yyyy",
                    longDate: "dd MMMM yyyy",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "dd MMMM yyyy H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^jan(uari)?/i,
                    feb: /^feb(ruari)?/i,
                    mar: /^mac/i,
                    apr: /^apr(il)?/i,
                    may: /^mei/i,
                    jun: /^jun/i,
                    jul: /^jul(ai)?/i,
                    aug: /^ogos/i,
                    sep: /^sep(t(ember)?)?/i,
                    oct: /^okt(ober)?/i,
                    nov: /^nov(ember)?/i,
                    dec: /^dis(ember)?/i,
                    sun: /^a(1)?/i,
                    mon: /^i(1)?/i,
                    tue: /^s(el(asa)?)?/i,
                    wed: /^r(1)?/i,
                    thu: /^k(1)?/i,
                    fri: /^j(1)?/i,
                    sat: /^s(1)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var mt = {
                name: "mt-MT",
                englishName: "Maltese (Malta)",
                nativeName: "Malti (Malta)",
                dayNames: ["Il-Ħadd", "It-Tnejn", "It-Tlieta", "L-Erbgħa", "Il-Ħamis", "Il-Ġimgħa", "Is-Sibt"],
                abbreviatedDayNames: ["Ħad", "Tne", "Tli", "Erb", "Ħam", "Ġim", "Sib"],
                shortestDayNames: ["Ħad", "Tne", "Tli", "Erb", "Ħam", "Ġim", "Sib"],
                firstLetterDayNames: ["Ħ", "T", "T", "E", "Ħ", "Ġ", "S"],
                monthNames: ["Jannar", "Frar", "Marzu", "April", "Mejju", "Ġunju", "Lulju", "Awissu", "Settembru", "Ottubru", "Novembru", "Diċembru"],
                abbreviatedMonthNames: ["Jan", "Fra", "Mar", "Apr", "Mej", "Ġun", "Lul", "Awi", "Set", "Ott", "Nov", "Diċ"],
                amDesignator: "AM",
                pmDesignator: "PM",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd/MM/yyyy",
                    longDate: "dddd, d' ta' 'MMMM yyyy",
                    shortTime: "HH:mm:ss",
                    longTime: "HH:mm:ss",
                    fullDateTime: "dddd, d' ta' 'MMMM yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "MMMM dd",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^jan(nar)?/i,
                    feb: /^fra(r)?/i,
                    mar: /^mar(zu)?/i,
                    apr: /^apr(il)?/i,
                    may: /^mej(ju)?/i,
                    jun: /^ġun(ju)?/i,
                    jul: /^lul(ju)?/i,
                    aug: /^awi(ssu)?/i,
                    sep: /^set(tembru)?/i,
                    oct: /^ott(ubru)?/i,
                    nov: /^nov(embru)?/i,
                    dec: /^diċ(embru)?/i,
                    sun: /^il-ħadd/i,
                    mon: /^it-tnejn/i,
                    tue: /^it-tlieta/i,
                    wed: /^l-erbgħa/i,
                    thu: /^il-ħamis/i,
                    fri: /^il-ġimgħa/i,
                    sat: /^is-sibt/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var nb = {
                name: "nb-NO",
                englishName: "Norwegian, Bokmål (Norway)",
                nativeName: "norsk, bokmål (Norge)",
                dayNames: ["søndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "lørdag"],
                abbreviatedDayNames: ["sø", "ma", "ti", "on", "to", "fr", "lø"],
                shortestDayNames: ["sø", "ma", "ti", "on", "to", "fr", "lø"],
                firstLetterDayNames: ["s", "m", "t", "o", "t", "f", "l"],
                monthNames: ["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"],
                abbreviatedMonthNames: ["jan", "feb", "mar", "apr", "mai", "jun", "jul", "aug", "sep", "okt", "nov", "des"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd.MM.yyyy",
                    longDate: "d. MMMM yyyy",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "d. MMMM yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "d. MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^jan(uar)?/i,
                    feb: /^feb(ruar)?/i,
                    mar: /^mar(s)?/i,
                    apr: /^apr(il)?/i,
                    may: /^mai/i,
                    jun: /^jun(i)?/i,
                    jul: /^jul(i)?/i,
                    aug: /^aug(ust)?/i,
                    sep: /^sep(t(ember)?)?/i,
                    oct: /^okt(ober)?/i,
                    nov: /^nov(ember)?/i,
                    dec: /^des(ember)?/i,
                    sun: /^søndag/i,
                    mon: /^mandag/i,
                    tue: /^tirsdag/i,
                    wed: /^onsdag/i,
                    thu: /^torsdag/i,
                    fri: /^fredag/i,
                    sat: /^lørdag/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var nl = {
                name: "nl-NL",
                englishName: "Dutch (Netherlands)",
                nativeName: "Nederlands (Nederland)",
                dayNames: ["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"],
                abbreviatedDayNames: ["zo", "ma", "di", "wo", "do", "vr", "za"],
                shortestDayNames: ["zo", "ma", "di", "wo", "do", "vr", "za"],
                firstLetterDayNames: ["z", "m", "d", "w", "d", "v", "z"],
                monthNames: ["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"],
                abbreviatedMonthNames: ["jan", "feb", "mrt", "apr", "mei", "jun", "jul", "aug", "sep", "okt", "nov", "dec"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "d-M-yyyy",
                    longDate: "dddd d MMMM yyyy",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "dddd d MMMM yyyy H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^jan(uari)?/i,
                    feb: /^feb(ruari)?/i,
                    mar: /^maart/i,
                    apr: /^apr(il)?/i,
                    may: /^mei/i,
                    jun: /^jun(i)?/i,
                    jul: /^jul(i)?/i,
                    aug: /^aug(ustus)?/i,
                    sep: /^sep(t(ember)?)?/i,
                    oct: /^okt(ober)?/i,
                    nov: /^nov(ember)?/i,
                    dec: /^dec(ember)?/i,
                    sun: /^zondag/i,
                    mon: /^maandag/i,
                    tue: /^dinsdag/i,
                    wed: /^woensdag/i,
                    thu: /^donderdag/i,
                    fri: /^vrijdag/i,
                    sat: /^zaterdag/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var nn = {
                name: "nn-NO",
                englishName: "Norwegian, Nynorsk (Norway)",
                nativeName: "norsk, nynorsk (Noreg)",
                dayNames: ["søndag", "måndag", "tysdag", "onsdag", "torsdag", "fredag", "laurdag"],
                abbreviatedDayNames: ["sø", "må", "ty", "on", "to", "fr", "la"],
                shortestDayNames: ["sø", "må", "ty", "on", "to", "fr", "la"],
                firstLetterDayNames: ["s", "m", "t", "o", "t", "f", "l"],
                monthNames: ["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"],
                abbreviatedMonthNames: ["jan", "feb", "mar", "apr", "mai", "jun", "jul", "aug", "sep", "okt", "nov", "des"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd.MM.yyyy",
                    longDate: "d. MMMM yyyy",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "d. MMMM yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "d. MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^jan(uar)?/i,
                    feb: /^feb(ruar)?/i,
                    mar: /^mar(s)?/i,
                    apr: /^apr(il)?/i,
                    may: /^mai/i,
                    jun: /^jun(i)?/i,
                    jul: /^jul(i)?/i,
                    aug: /^aug(ust)?/i,
                    sep: /^sep(t(ember)?)?/i,
                    oct: /^okt(ober)?/i,
                    nov: /^nov(ember)?/i,
                    dec: /^des(ember)?/i,
                    sun: /^søndag/i,
                    mon: /^måndag/i,
                    tue: /^tysdag/i,
                    wed: /^onsdag/i,
                    thu: /^torsdag/i,
                    fri: /^fredag/i,
                    sat: /^laurdag/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var ns = {
                name: "ns-ZA",
                englishName: "Northern Sotho (South Africa)",
                nativeName: "Sesotho sa Leboa (Afrika Borwa)",
                dayNames: ["Lamorena", "Mošupologo", "Labobedi", "Laboraro", "Labone", "Labohlano", "Mokibelo"],
                abbreviatedDayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                shortestDayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                firstLetterDayNames: ["S", "M", "T", "W", "T", "F", "S"],
                monthNames: ["Pherekgong", "Hlakola", "Mopitlo", "Moranang", "Mosegamanye", "Ngoatobošego", "Phuphu", "Phato", "Lewedi", "Diphalana", "Dibatsela", "Manthole"],
                abbreviatedMonthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                amDesignator: "AM",
                pmDesignator: "PM",
                firstDayOfWeek: 0,
                twoDigitYearMax: 2029,
                dateElementOrder: "ymd",
                formatPatterns: {
                    shortDate: "yyyy/MM/dd",
                    longDate: "dd MMMM yyyy",
                    shortTime: "hh:mm:ss tt",
                    longTime: "hh:mm:ss tt",
                    fullDateTime: "dd MMMM yyyy hh:mm:ss tt",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "MMMM dd",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^pherekgong/i,
                    feb: /^hlakola/i,
                    mar: /^mopitlo/i,
                    apr: /^moranang/i,
                    may: /^mosegamanye/i,
                    jun: /^ngoatobošego/i,
                    jul: /^phuphu/i,
                    aug: /^phato/i,
                    sep: /^lewedi/i,
                    oct: /^diphalana/i,
                    nov: /^dibatsela/i,
                    dec: /^manthole/i,
                    sun: /^lamorena/i,
                    mon: /^mošupologo/i,
                    tue: /^labobedi/i,
                    wed: /^laboraro/i,
                    thu: /^labone/i,
                    fri: /^labohlano/i,
                    sat: /^mokibelo/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var pa = {
                name: "pa-IN",
                englishName: "Punjabi (India)",
                nativeName: "ਪੰਜਾਬੀ (ਭਾਰਤ)",
                dayNames: ["ਐਤਵਾਰ", "ਸੋਮਵਾਰ", "ਮੰਗਲਵਾਰ", "ਬੁਧਵਾਰ", "ਵੀਰਵਾਰ", "ਸ਼ੁੱਕਰਵਾਰ", "ਸ਼ਨੀਚਰਵਾਰ"],
                abbreviatedDayNames: ["ਐਤ.", "ਸੋਮ.", "ਮੰਗਲ.", "ਬੁਧ.", "ਵੀਰ.", "ਸ਼ੁਕਰ.", "ਸ਼ਨੀ."],
                shortestDayNames: ["ਐ", "ਸ", "ਮ", "ਬ", "ਵ", "ਸ਼", "ਸ਼"],
                firstLetterDayNames: ["ਐ", "ਸ", "ਮ", "ਬ", "ਵ", "ਸ਼", "ਸ਼"],
                monthNames: ["ਜਨਵਰੀ", "ਫ਼ਰਵਰੀ", "ਮਾਰਚ", "ਅਪ੍ਰੈਲ", "ਮਈ", "ਜੂਨ", "ਜੁਲਾਈ", "ਅਗਸਤ", "ਸਤੰਬਰ", "ਅਕਤੂਬਰ", "ਨਵੰਬਰ", "ਦਸੰਬਰ"],
                abbreviatedMonthNames: ["ਜਨਵਰੀ", "ਫ਼ਰਵਰੀ", "ਮਾਰਚ", "ਅਪ੍ਰੈਲ", "ਮਈ", "ਜੂਨ", "ਜੁਲਾਈ", "ਅਗਸਤ", "ਸਤੰਬਰ", "ਅਕਤੂਬਰ", "ਨਵੰਬਰ", "ਦਸੰਬਰ"],
                amDesignator: "ਸਵੇਰੇ",
                pmDesignator: "ਸ਼ਾਮ",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd-MM-yy",
                    longDate: "dd MMMM yyyy dddd",
                    shortTime: "tt hh:mm",
                    longTime: "tt hh:mm:ss",
                    fullDateTime: "dd MMMM yyyy dddd tt hh:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM, yyyy"
                },
                regexPatterns: {
                    jan: /^ਜਨਵਰੀ/i,
                    feb: /^ਫ਼ਰਵਰੀ/i,
                    mar: /^ਮਾਰਚ/i,
                    apr: /^ਅਪ੍ਰੈਲ/i,
                    may: /^ਮਈ/i,
                    jun: /^ਜੂਨ/i,
                    jul: /^ਜੁਲਾਈ/i,
                    aug: /^ਅਗਸਤ/i,
                    sep: /^ਸਤੰਬਰ/i,
                    oct: /^ਅਕਤੂਬਰ/i,
                    nov: /^ਨਵੰਬਰ/i,
                    dec: /^ਦਸੰਬਰ/i,
                    sun: /^ਐ(ਤ(.(ਵਾਰ)?)?)?/i,
                    mon: /^ਸ(ੋਮ(.(ਵਾਰ)?)?)?/i,
                    tue: /^ਮ(ੰਗਲ(.(ਵਾਰ)?)?)?/i,
                    wed: /^ਬ(ੁਧ(.(ਵਾਰ)?)?)?/i,
                    thu: /^ਵ(ੀਰ(.(ਵਾਰ)?)?)?/i,
                    fri: /^ਸ਼(ੁਕਰ(.(ਰਵਾਰ)?)?)?/i,
                    sat: /^ਸ਼(ਨੀ(.(ਚਰਵਾਰ)?)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var pl = {
                name: "pl-PL",
                englishName: "Polish (Poland)",
                nativeName: "polski (Polska)",
                dayNames: ["niedziela", "poniedziałek", "wtorek", "środa", "czwartek", "piątek", "sobota"],
                abbreviatedDayNames: ["N", "Pn", "Wt", "Śr", "Cz", "Pt", "So"],
                shortestDayNames: ["N", "Pn", "Wt", "Śr", "Cz", "Pt", "So"],
                firstLetterDayNames: ["N", "P", "W", "Ś", "C", "P", "S"],
                monthNames: ["styczeń", "luty", "marzec", "kwiecień", "maj", "czerwiec", "lipiec", "sierpień", "wrzesień", "październik", "listopad", "grudzień"],
                abbreviatedMonthNames: ["sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "paź", "lis", "gru"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "ymd",
                formatPatterns: {
                    shortDate: "yyyy-MM-dd",
                    longDate: "d MMMM yyyy",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "d MMMM yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "d MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^sty(czeń)?/i,
                    feb: /^lut(y)?/i,
                    mar: /^mar(zec)?/i,
                    apr: /^kwi(ecień)?/i,
                    may: /^maj/i,
                    jun: /^cze(rwiec)?/i,
                    jul: /^lip(iec)?/i,
                    aug: /^sie(rpień)?/i,
                    sep: /^wrz(esień)?/i,
                    oct: /^paź(dziernik)?/i,
                    nov: /^lis(topad)?/i,
                    dec: /^gru(dzień)?/i,
                    sun: /^niedziela/i,
                    mon: /^poniedziałek/i,
                    tue: /^wtorek/i,
                    wed: /^środa/i,
                    thu: /^czwartek/i,
                    fri: /^piątek/i,
                    sat: /^sobota/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var pt = {
                name: "pt-BR",
                englishName: "Portuguese (Brazil)",
                nativeName: "Português (Brasil)",
                dayNames: ["domingo", "segunda-feira", "terça-feira", "quarta-feira", "quinta-feira", "sexta-feira", "sábado"],
                abbreviatedDayNames: ["dom", "seg", "ter", "qua", "qui", "sex", "sáb"],
                shortestDayNames: ["dom", "seg", "ter", "qua", "qui", "sex", "sáb"],
                firstLetterDayNames: ["d", "s", "t", "q", "q", "s", "s"],
                monthNames: ["janeiro", "fevereiro", "março", "abril", "maio", "junho", "julho", "agosto", "setembro", "outubro", "novembro", "dezembro"],
                abbreviatedMonthNames: ["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 0,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "d/M/yyyy",
                    longDate: "dddd, d' de 'MMMM' de 'yyyy",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "dddd, d' de 'MMMM' de 'yyyy H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd' de 'MMMM",
                    yearMonth: "MMMM' de 'yyyy"
                },
                regexPatterns: {
                    jan: /^jan(eiro)?/i,
                    feb: /^fev(ereiro)?/i,
                    mar: /^mar(ço)?/i,
                    apr: /^abr(il)?/i,
                    may: /^mai(o)?/i,
                    jun: /^jun(ho)?/i,
                    jul: /^jul(ho)?/i,
                    aug: /^ago(sto)?/i,
                    sep: /^set(embro)?/i,
                    oct: /^out(ubro)?/i,
                    nov: /^nov(embro)?/i,
                    dec: /^dez(embro)?/i,
                    sun: /^domingo/i,
                    mon: /^segunda-feira/i,
                    tue: /^terça-feira/i,
                    wed: /^quarta-feira/i,
                    thu: /^quinta-feira/i,
                    fri: /^sexta-feira/i,
                    sat: /^sábado/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var quz = {
                name: "quz-BO",
                englishName: "Quechua (Bolivia)",
                nativeName: "runasimi (Bolivia Suyu)",
                dayNames: ["intichaw", "killachaw", "atipachaw", "quyllurchaw", "Ch' askachaw", "Illapachaw", "k'uychichaw"],
                abbreviatedDayNames: ["int", "kil", "ati", "quy", "Ch", "Ill", "k'u"],
                shortestDayNames: ["int", "kil", "ati", "quy", "Ch", "Ill", "k'u"],
                firstLetterDayNames: ["i", "k", "a", "q", "C", "I", "k"],
                monthNames: ["Qulla puquy", "Hatun puquy", "Pauqar waray", "ayriwa", "Aymuray", "Inti raymi", "Anta Sitwa", "Qhapaq Sitwa", "Uma raymi", "Kantaray", "Ayamarq'a", "Kapaq Raymi"],
                abbreviatedMonthNames: ["Qul", "Hat", "Pau", "ayr", "Aym", "Int", "Ant", "Qha", "Uma", "Kan", "Aya", "Kap"],
                amDesignator: "a.m.",
                pmDesignator: "p.m.",
                firstDayOfWeek: 0,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd/MM/yyyy",
                    longDate: "dddd, dd' de 'MMMM' de 'yyyy",
                    shortTime: "hh:mm:ss tt",
                    longTime: "hh:mm:ss tt",
                    fullDateTime: "dddd, dd' de 'MMMM' de 'yyyy hh:mm:ss tt",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "MMMM dd",
                    yearMonth: "MMMM' de 'yyyy"
                },
                regexPatterns: {
                    jan: /^qul(la puquy)?/i,
                    feb: /^hat(un puquy)?/i,
                    mar: /^pau(qar waray)?/i,
                    apr: /^ayr(iwa)?/i,
                    may: /^aym(uray)?/i,
                    jun: /^int(i raymi)?/i,
                    jul: /^ant(a sitwa)?/i,
                    aug: /^qha(paq sitwa)?/i,
                    sep: /^uma( raymi)?/i,
                    oct: /^kan(taray)?/i,
                    nov: /^aya(marq'a)?/i,
                    dec: /^kap(aq raymi)?/i,
                    sun: /^intichaw/i,
                    mon: /^killachaw/i,
                    tue: /^atipachaw/i,
                    wed: /^quyllurchaw/i,
                    thu: /^ch' askachaw/i,
                    fri: /^illapachaw/i,
                    sat: /^k'uychichaw/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var ro = {
                name: "ro-RO",
                englishName: "Romanian (Romania)",
                nativeName: "română (România)",
                dayNames: ["duminică", "luni", "marţi", "miercuri", "joi", "vineri", "sâmbătă"],
                abbreviatedDayNames: ["D", "L", "Ma", "Mi", "J", "V", "S"],
                shortestDayNames: ["D", "L", "Ma", "Mi", "J", "V", "S"],
                firstLetterDayNames: ["D", "L", "M", "M", "J", "V", "S"],
                monthNames: ["ianuarie", "februarie", "martie", "aprilie", "mai", "iunie", "iulie", "august", "septembrie", "octombrie", "noiembrie", "decembrie"],
                abbreviatedMonthNames: ["ian.", "feb.", "mar.", "apr.", "mai.", "iun.", "iul.", "aug.", "sep.", "oct.", "nov.", "dec."],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd.MM.yyyy",
                    longDate: "d MMMM yyyy",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "d MMMM yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "d MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^ian(.(uarie)?)?/i,
                    feb: /^feb(.(ruarie)?)?/i,
                    mar: /^mar(.(tie)?)?/i,
                    apr: /^apr(.(ilie)?)?/i,
                    may: /^mai(.()?)?/i,
                    jun: /^iun(.(ie)?)?/i,
                    jul: /^iul(.(ie)?)?/i,
                    aug: /^aug(.(ust)?)?/i,
                    sep: /^sep(.(tembrie)?)?/i,
                    oct: /^oct(.(ombrie)?)?/i,
                    nov: /^noiembrie/i,
                    dec: /^dec(.(embrie)?)?/i,
                    sun: /^duminică/i,
                    mon: /^luni/i,
                    tue: /^marţi/i,
                    wed: /^miercuri/i,
                    thu: /^joi/i,
                    fri: /^vineri/i,
                    sat: /^sâmbătă/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var ru = {
                name: "ru-RU",
                englishName: "Russian (Russia)",
                nativeName: "русский (Россия)",
                dayNames: ["воскресенье", "понедельник", "вторник", "среда", "четверг", "пятница", "суббота"],
                abbreviatedDayNames: ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"],
                shortestDayNames: ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"],
                firstLetterDayNames: ["В", "П", "В", "С", "Ч", "П", "С"],
                monthNames: ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"],
                abbreviatedMonthNames: ["янв", "фев", "мар", "апр", "май", "июн", "июл", "авг", "сен", "окт", "ноя", "дек"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd.MM.yyyy",
                    longDate: "d MMMM yyyy 'г.'",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "d MMMM yyyy 'г.' H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "MMMM dd",
                    yearMonth: "MMMM yyyy 'г.'"
                },
                regexPatterns: {
                    jan: /^янв(арь)?/i,
                    feb: /^фев(раль)?/i,
                    mar: /^мар(т)?/i,
                    apr: /^апр(ель)?/i,
                    may: /^май/i,
                    jun: /^июн(ь)?/i,
                    jul: /^июл(ь)?/i,
                    aug: /^авг(уст)?/i,
                    sep: /^сен(тябрь)?/i,
                    oct: /^окт(ябрь)?/i,
                    nov: /^ноя(брь)?/i,
                    dec: /^дек(абрь)?/i,
                    sun: /^воскресенье/i,
                    mon: /^понедельник/i,
                    tue: /^вторник/i,
                    wed: /^среда/i,
                    thu: /^четверг/i,
                    fri: /^пятница/i,
                    sat: /^суббота/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var sa = {
                name: "sa-IN",
                englishName: "Sanskrit (India)",
                nativeName: "संस्कृत (भारतम्)",
                dayNames: ["रविवासरः", "सोमवासरः", "मङ्गलवासरः", "बुधवासरः", "गुरुवासरः", "शुक्रवासरः", "शनिवासरः"],
                abbreviatedDayNames: ["रविवासरः", "सोमवासरः", "मङ्गलवासरः", "बुधवासरः", "गुरुवासरः", "शुक्रवासरः", "शनिवासरः"],
                shortestDayNames: ["र", "स", "म", "ब", "ग", "श", "श"],
                firstLetterDayNames: ["र", "स", "म", "ब", "ग", "श", "श"],
                monthNames: ["जनवरी", "फरवरी", "मार्च", "अप्रैल", "मई", "जून", "जुलाई", "अगस्त", "सितम्बर", "अक्तूबर", "नवम्बर", "दिसम्बर"],
                abbreviatedMonthNames: ["जनवरी", "फरवरी", "मार्च", "अप्रैल", "मई", "जून", "जुलाई", "अगस्त", "सितम्बर", "अक्तूबर", "नवम्बर", "दिसम्बर"],
                amDesignator: "पूर्वाह्न",
                pmDesignator: "अपराह्न",
                firstDayOfWeek: 0,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd-MM-yyyy",
                    longDate: "dd MMMM yyyy dddd",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "dd MMMM yyyy dddd HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM, yyyy"
                },
                regexPatterns: {
                    jan: /^जनवरी/i,
                    feb: /^फरवरी/i,
                    mar: /^मार्च/i,
                    apr: /^अप्रैल/i,
                    may: /^मई/i,
                    jun: /^जून/i,
                    jul: /^जुलाई/i,
                    aug: /^अगस्त/i,
                    sep: /^सितम्बर/i,
                    oct: /^अक्तूबर/i,
                    nov: /^नवम्बर/i,
                    dec: /^दिसम्बर/i,
                    sun: /^र(1)?/i,
                    mon: /^स(1)?/i,
                    tue: /^म(1)?/i,
                    wed: /^ब(1)?/i,
                    thu: /^ग(1)?/i,
                    fri: /^श(1)?/i,
                    sat: /^श(1)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var se = {
                name: "se-SE",
                englishName: "Sami (Northern) (Sweden)",
                nativeName: "davvisámegiella (Ruoŧŧa)",
                dayNames: ["sotnabeaivi", "mánnodat", "disdat", "gaskavahkku", "duorastat", "bearjadat", "lávvardat"],
                abbreviatedDayNames: ["sotn", "mán", "dis", "gask", "duor", "bear", "láv"],
                shortestDayNames: ["sotn", "mán", "dis", "gask", "duor", "bear", "láv"],
                firstLetterDayNames: ["s", "m", "d", "g", "d", "b", "l"],
                monthNames: ["ođđajagemánnu", "guovvamánnu", "njukčamánnu", "cuoŋománnu", "miessemánnu", "geassemánnu", "suoidnemánnu", "borgemánnu", "čakčamánnu", "golggotmánnu", "skábmamánnu", "juovlamánnu"],
                abbreviatedMonthNames: ["ođđj", "guov", "njuk", "cuo", "mies", "geas", "suoi", "borg", "čakč", "golg", "skáb", "juov"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "ymd",
                formatPatterns: {
                    shortDate: "yyyy-MM-dd",
                    longDate: "MMMM d'. b. 'yyyy",
                    shortTime: "HH:mm:ss",
                    longTime: "HH:mm:ss",
                    fullDateTime: "MMMM d'. b. 'yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "MMMM dd",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^ođđajagemánnu/i,
                    feb: /^guov(vamánnu)?/i,
                    mar: /^njuk(čamánnu)?/i,
                    apr: /^cuo(ŋománnu)?/i,
                    may: /^mies(semánnu)?/i,
                    jun: /^geas(semánnu)?/i,
                    jul: /^suoi(dnemánnu)?/i,
                    aug: /^borg(emánnu)?/i,
                    sep: /^čakč(amánnu)?/i,
                    oct: /^golg(gotmánnu)?/i,
                    nov: /^skáb(mamánnu)?/i,
                    dec: /^juov(lamánnu)?/i,
                    sun: /^sotnabeaivi/i,
                    mon: /^mánnodat/i,
                    tue: /^disdat/i,
                    wed: /^gaskavahkku/i,
                    thu: /^duorastat/i,
                    fri: /^bearjadat/i,
                    sat: /^lávvardat/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var sk = {
                name: "sk-SK",
                englishName: "Slovak (Slovakia)",
                nativeName: "slovenčina (Slovenská republika)",
                dayNames: ["nedeľa", "pondelok", "utorok", "streda", "štvrtok", "piatok", "sobota"],
                abbreviatedDayNames: ["ne", "po", "ut", "st", "št", "pi", "so"],
                shortestDayNames: ["ne", "po", "ut", "st", "št", "pi", "so"],
                firstLetterDayNames: ["n", "p", "u", "s", "š", "p", "s"],
                monthNames: ["január", "február", "marec", "apríl", "máj", "jún", "júl", "august", "september", "október", "november", "december"],
                abbreviatedMonthNames: ["I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "XI", "XII"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "d. M. yyyy",
                    longDate: "d. MMMM yyyy",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "d. MMMM yyyy H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^január/i,
                    feb: /^február/i,
                    mar: /^marec/i,
                    apr: /^apríl/i,
                    may: /^máj/i,
                    jun: /^jún/i,
                    jul: /^júl/i,
                    aug: /^august/i,
                    sep: /^sep(t(ember)?)?/i,
                    oct: /^október/i,
                    nov: /^november/i,
                    dec: /^december/i,
                    sun: /^nedeľa/i,
                    mon: /^pondelok/i,
                    tue: /^utorok/i,
                    wed: /^streda/i,
                    thu: /^štvrtok/i,
                    fri: /^piatok/i,
                    sat: /^sobota/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var sl = {
                name: "sl-SI",
                englishName: "Slovenian (Slovenia)",
                nativeName: "slovenski (Slovenija)",
                dayNames: ["nedelja", "ponedeljek", "torek", "sreda", "četrtek", "petek", "sobota"],
                abbreviatedDayNames: ["ned", "pon", "tor", "sre", "čet", "pet", "sob"],
                shortestDayNames: ["ne", "po", "to", "sr", "če", "pe", "so"],
                firstLetterDayNames: ["n", "p", "t", "s", "č", "p", "s"],
                monthNames: ["januar", "februar", "marec", "april", "maj", "junij", "julij", "avgust", "september", "oktober", "november", "december"],
                abbreviatedMonthNames: ["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "d.M.yyyy",
                    longDate: "d. MMMM yyyy",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "d. MMMM yyyy H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "d. MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^jan(uar)?/i,
                    feb: /^feb(ruar)?/i,
                    mar: /^mar(ec)?/i,
                    apr: /^apr(il)?/i,
                    may: /^maj/i,
                    jun: /^jun(ij)?/i,
                    jul: /^jul(ij)?/i,
                    aug: /^avg(ust)?/i,
                    sep: /^sep(t(ember)?)?/i,
                    oct: /^okt(ober)?/i,
                    nov: /^nov(ember)?/i,
                    dec: /^dec(ember)?/i,
                    sun: /^ne(d(elja)?)?/i,
                    mon: /^po(n(edeljek)?)?/i,
                    tue: /^to(r(ek)?)?/i,
                    wed: /^sr(e(da)?)?/i,
                    thu: /^če(t(rtek)?)?/i,
                    fri: /^pe(t(ek)?)?/i,
                    sat: /^so(b(ota)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var sma = {
                name: "sma-NO",
                englishName: "Sami (Southern) (Norway)",
                nativeName: "åarjelsaemiengiele (Nöörje)",
                dayNames: ["aejlege", "måanta", "dæjsta", "gaskevåhkoe", "duarsta", "bearjadahke", "laavvardahke"],
                abbreviatedDayNames: ["aej", "måa", "dæj", "gask", "duar", "bearj", "laav"],
                shortestDayNames: ["aej", "måa", "dæj", "gask", "duar", "bearj", "laav"],
                firstLetterDayNames: ["a", "m", "d", "g", "d", "b", "l"],
                monthNames: ["tsïengele", "goevte", "njoktje", "voerhtje", "suehpede", "ruffie", "snjaltje", "mïetske", "skïerede", "golke", "rahka", "goeve"],
                abbreviatedMonthNames: ["tsïen", "goevt", "njok", "voer", "sueh", "ruff", "snja", "mïet", "skïer", "golk", "rahk", "goev"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd.MM.yyyy",
                    longDate: "MMMM d'. b. 'yyyy",
                    shortTime: "HH:mm:ss",
                    longTime: "HH:mm:ss",
                    fullDateTime: "MMMM d'. b. 'yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "MMMM dd",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^tsïen(gele)?/i,
                    feb: /^goevt(e)?/i,
                    mar: /^njok(tje)?/i,
                    apr: /^voer(htje)?/i,
                    may: /^sueh(pede)?/i,
                    jun: /^ruff(ie)?/i,
                    jul: /^snja(ltje)?/i,
                    aug: /^mïet(ske)?/i,
                    sep: /^skïer(ede)?/i,
                    oct: /^golk(e)?/i,
                    nov: /^rahk(a)?/i,
                    dec: /^goev(e)?/i,
                    sun: /^aejlege/i,
                    mon: /^måanta/i,
                    tue: /^dæjsta/i,
                    wed: /^gaskevåhkoe/i,
                    thu: /^duarsta/i,
                    fri: /^bearjadahke/i,
                    sat: /^laavvardahke/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var smj = {
                name: "smj-NO",
                englishName: "Sami (Lule) (Norway)",
                nativeName: "julevusámegiella (Vuodna)",
                dayNames: ["sådnåbiejvve", "mánnodahka", "dijstahka", "gasskavahkko", "duorastahka", "bierjjedahka", "lávvodahka"],
                abbreviatedDayNames: ["såd", "mán", "dis", "gas", "duor", "bier", "láv"],
                shortestDayNames: ["såd", "mán", "dis", "gas", "duor", "bier", "láv"],
                firstLetterDayNames: ["s", "m", "d", "g", "d", "b", "l"],
                monthNames: ["ådåjakmánno", "guovvamánno", "sjnjuktjamánno", "vuoratjismánno", "moarmesmánno", "biehtsemánno", "sjnjilltjamánno", "bårggemánno", "ragátmánno", "gålgådismánno", "basádismánno", "javllamánno"],
                abbreviatedMonthNames: ["ådåj", "guov", "snju", "vuor", "moar", "bieh", "snji", "bårg", "ragá", "gålg", "basá", "javl"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd.MM.yyyy",
                    longDate: "MMMM d'. b. 'yyyy",
                    shortTime: "HH:mm:ss",
                    longTime: "HH:mm:ss",
                    fullDateTime: "MMMM d'. b. 'yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "MMMM dd",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^ådåj(akmánno)?/i,
                    feb: /^guov(vamánno)?/i,
                    mar: /^sjnjuktjamánno/i,
                    apr: /^vuor(atjismánno)?/i,
                    may: /^moar(mesmánno)?/i,
                    jun: /^bieh(tsemánno)?/i,
                    jul: /^sjnjilltjamánno/i,
                    aug: /^bårg(gemánno)?/i,
                    sep: /^ragá(tmánno)?/i,
                    oct: /^gålg(ådismánno)?/i,
                    nov: /^basá(dismánno)?/i,
                    dec: /^javl(lamánno)?/i,
                    sun: /^sådnåbiejvve/i,
                    mon: /^mánnodahka/i,
                    tue: /^dijstahka/i,
                    wed: /^gasskavahkko/i,
                    thu: /^duorastahka/i,
                    fri: /^bierjjedahka/i,
                    sat: /^lávvodahka/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var smn = {
                name: "smn-FI",
                englishName: "Sami (Inari) (Finland)",
                nativeName: "sämikielâ (Suomâ)",
                dayNames: ["pasepeivi", "vuossargâ", "majebargâ", "koskokko", "tuorâstâh", "vástuppeivi", "lávárdâh"],
                abbreviatedDayNames: ["pa", "vu", "ma", "ko", "tu", "vá", "lá"],
                shortestDayNames: ["pa", "vu", "ma", "ko", "tu", "vá", "lá"],
                firstLetterDayNames: ["p", "v", "m", "k", "t", "v", "l"],
                monthNames: ["uđđâivemáánu", "kuovâmáánu", "njuhčâmáánu", "cuáŋuimáánu", "vyesimáánu", "kesimáánu", "syeinimáánu", "porgemáánu", "čohčâmáánu", "roovvâdmáánu", "skammâmáánu", "juovlâmáánu"],
                abbreviatedMonthNames: ["uđiv", "kuov", "njuh", "cuoŋ", "vyes", "kesi", "syei", "porg", "čoh", "roov", "ska", "juov"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "d.M.yyyy",
                    longDate: "MMMM d'. p. 'yyyy",
                    shortTime: "H:mm:ss",
                    longTime: "H:mm:ss",
                    fullDateTime: "MMMM d'. p. 'yyyy H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "MMMM dd",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^uđđâivemáánu/i,
                    feb: /^kuov(âmáánu)?/i,
                    mar: /^njuh(čâmáánu)?/i,
                    apr: /^cuáŋuimáánu/i,
                    may: /^vyes(imáánu)?/i,
                    jun: /^kesi(máánu)?/i,
                    jul: /^syei(nimáánu)?/i,
                    aug: /^porg(emáánu)?/i,
                    sep: /^čoh(čâmáánu)?/i,
                    oct: /^roov(vâdmáánu)?/i,
                    nov: /^ska(mmâmáánu)?/i,
                    dec: /^juov(lâmáánu)?/i,
                    sun: /^pasepeivi/i,
                    mon: /^vuossargâ/i,
                    tue: /^majebargâ/i,
                    wed: /^koskokko/i,
                    thu: /^tuorâstâh/i,
                    fri: /^vástuppeivi/i,
                    sat: /^lávárdâh/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var sms = {
                name: "sms-FI",
                englishName: "Sami (Skolt) (Finland)",
                nativeName: "sääm´ǩiõll (Lää´ddjânnam)",
                dayNames: ["pâ´sspei´vv", "vuõssargg", "mââibargg", "seärad", "nelljdpei´vv", "piâtnâc", "sue´vet"],
                abbreviatedDayNames: ["pâ", "vu", "mâ", "se", "ne", "pi", "su"],
                shortestDayNames: ["pâ", "vu", "mâ", "se", "ne", "pi", "su"],
                firstLetterDayNames: ["p", "v", "m", "s", "n", "p", "s"],
                monthNames: ["ođđee´jjmään", "tä´lvvmään", "pâ´zzlâšttammään", "njuhččmään", "vue´ssmään", "ǩie´ssmään", "suei´nnmään", "på´rǧǧmään", "čõhččmään", "kålggmään", "skamm´mään", "rosttovmään"],
                abbreviatedMonthNames: ["ođjm", "tä´lvv", "pâzl", "njuh", "vue", "ǩie", "suei", "på´r", "čõh", "kålg", "ska", "rost"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "d.M.yyyy",
                    longDate: "MMMM d'. p. 'yyyy",
                    shortTime: "H:mm:ss",
                    longTime: "H:mm:ss",
                    fullDateTime: "MMMM d'. p. 'yyyy H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "MMMM dd",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^ođđee´jjmään/i,
                    feb: /^tä´lvv(mään)?/i,
                    mar: /^pâ´zzlâšttammään/i,
                    apr: /^njuh(ččmään)?/i,
                    may: /^vue(´ssmään)?/i,
                    jun: /^ǩie(´ssmään)?/i,
                    jul: /^suei(´nnmään)?/i,
                    aug: /^på´r(ǧǧmään)?/i,
                    sep: /^čõh(ččmään)?/i,
                    oct: /^kålg(gmään)?/i,
                    nov: /^ska(mm´mään)?/i,
                    dec: /^rost(tovmään)?/i,
                    sun: /^pâ´sspei´vv/i,
                    mon: /^vuõssargg/i,
                    tue: /^mââibargg/i,
                    wed: /^seärad/i,
                    thu: /^nelljdpei´vv/i,
                    fri: /^piâtnâc/i,
                    sat: /^sue´vet/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var sq = {
                name: "sq-AL",
                englishName: "Albanian (Albania)",
                nativeName: "shqipe (Shqipëria)",
                dayNames: ["e diel", "e hënë", "e martë", "e mërkurë", "e enjte", "e premte", "e shtunë"],
                abbreviatedDayNames: ["Die", "Hën", "Mar", "Mër", "Enj", "Pre", "Sht"],
                shortestDayNames: ["Di", "Hë", "Ma", "Më", "En", "Pr", "Sh"],
                firstLetterDayNames: ["D", "H", "M", "M", "E", "P", "S"],
                monthNames: ["janar", "shkurt", "mars", "prill", "maj", "qershor", "korrik", "gusht", "shtator", "tetor", "nëntor", "dhjetor"],
                abbreviatedMonthNames: ["Jan", "Shk", "Mar", "Pri", "Maj", "Qer", "Kor", "Gsh", "Sht", "Tet", "Nën", "Dhj"],
                amDesignator: "PD",
                pmDesignator: "MD",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "ymd",
                formatPatterns: {
                    shortDate: "yyyy-MM-dd",
                    longDate: "yyyy-MM-dd",
                    shortTime: "h:mm.tt",
                    longTime: "h:mm:ss.tt",
                    fullDateTime: "yyyy-MM-dd h:mm:ss.tt",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "MMMM dd",
                    yearMonth: "yyyy-MM"
                },
                regexPatterns: {
                    jan: /^jan(ar)?/i,
                    feb: /^shk(urt)?/i,
                    mar: /^mar(s)?/i,
                    apr: /^pri(ll)?/i,
                    may: /^maj/i,
                    jun: /^qer(shor)?/i,
                    jul: /^kor(rik)?/i,
                    aug: /^gusht/i,
                    sep: /^sht(ator)?/i,
                    oct: /^tet(or)?/i,
                    nov: /^nën(tor)?/i,
                    dec: /^dhj(etor)?/i,
                    sun: /^di(e(iel)?)?/i,
                    mon: /^hë(n(ënë)?)?/i,
                    tue: /^ma(r(artë)?)?/i,
                    wed: /^më(r(ërkurë)?)?/i,
                    thu: /^en(j(njte)?)?/i,
                    fri: /^pr(e(remte)?)?/i,
                    sat: /^sh(t(htunë)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var sr = {
                name: "sr-Cyrl-BA",
                englishName: "Serbian (Cyrillic) (Bosnia and Herzegovina)",
                nativeName: "српски (Босна и Херцеговина)",
                dayNames: ["недеља", "понедељак", "уторак", "среда", "четвртак", "петак", "субота"],
                abbreviatedDayNames: ["нед", "пон", "уто", "сре", "чет", "пет", "суб"],
                shortestDayNames: ["нед", "пон", "уто", "сре", "чет", "пет", "суб"],
                firstLetterDayNames: ["н", "п", "у", "с", "ч", "п", "с"],
                monthNames: ["јануар", "фебруар", "март", "април", "мај", "јун", "јул", "август", "септембар", "октобар", "новембар", "децембар"],
                abbreviatedMonthNames: ["јан", "феб", "мар", "апр", "мај", "јун", "јул", "авг", "сеп", "окт", "нов", "дец"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "d.M.yyyy",
                    longDate: "d. MMMM yyyy",
                    shortTime: "H:mm:ss",
                    longTime: "H:mm:ss",
                    fullDateTime: "d. MMMM yyyy H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "MMMM dd",
                    yearMonth: "MMMM, yyyy"
                },
                regexPatterns: {
                    jan: /^јан(уар)?/i,
                    feb: /^феб(руар)?/i,
                    mar: /^мар(т)?/i,
                    apr: /^апр(ил)?/i,
                    may: /^мај/i,
                    jun: /^јун/i,
                    jul: /^јул/i,
                    aug: /^авг(уст)?/i,
                    sep: /^сеп(тембар)?/i,
                    oct: /^окт(обар)?/i,
                    nov: /^нов(ембар)?/i,
                    dec: /^дец(ембар)?/i,
                    sun: /^недеља/i,
                    mon: /^понедељак/i,
                    tue: /^уторак/i,
                    wed: /^среда/i,
                    thu: /^четвртак/i,
                    fri: /^петак/i,
                    sat: /^субота/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var sv = {
                name: "sv-SE",
                englishName: "Swedish (Sweden)",
                nativeName: "svenska (Sverige)",
                dayNames: ["söndag", "måndag", "tisdag", "onsdag", "torsdag", "fredag", "lördag"],
                abbreviatedDayNames: ["sö", "må", "ti", "on", "to", "fr", "lö"],
                shortestDayNames: ["sö", "må", "ti", "on", "to", "fr", "lö"],
                firstLetterDayNames: ["s", "m", "t", "o", "t", "f", "l"],
                monthNames: ["januari", "februari", "mars", "april", "maj", "juni", "juli", "augusti", "september", "oktober", "november", "december"],
                abbreviatedMonthNames: ["jan", "feb", "mar", "apr", "maj", "jun", "jul", "aug", "sep", "okt", "nov", "dec"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "ymd",
                formatPatterns: {
                    shortDate: "yyyy-MM-dd",
                    longDate: "'den 'd MMMM yyyy",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "'den 'd MMMM yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "'den 'd MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^jan(uari)?/i,
                    feb: /^feb(ruari)?/i,
                    mar: /^mar(s)?/i,
                    apr: /^apr(il)?/i,
                    may: /^maj/i,
                    jun: /^jun(i)?/i,
                    jul: /^jul(i)?/i,
                    aug: /^aug(usti)?/i,
                    sep: /^sep(t(ember)?)?/i,
                    oct: /^okt(ober)?/i,
                    nov: /^nov(ember)?/i,
                    dec: /^dec(ember)?/i,
                    sun: /^söndag/i,
                    mon: /^måndag/i,
                    tue: /^tisdag/i,
                    wed: /^onsdag/i,
                    thu: /^torsdag/i,
                    fri: /^fredag/i,
                    sat: /^lördag/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var sw = {
                name: "sw-KE",
                englishName: "Kiswahili (Kenya)",
                nativeName: "Kiswahili (Kenya)",
                dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                abbreviatedDayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                shortestDayNames: ["S", "M", "T", "W", "T", "F", "S"],
                firstLetterDayNames: ["S", "M", "T", "W", "T", "F", "S"],
                monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                abbreviatedMonthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                amDesignator: "AM",
                pmDesignator: "PM",
                firstDayOfWeek: 0,
                twoDigitYearMax: 2029,
                dateElementOrder: "mdy",
                formatPatterns: {
                    shortDate: "M/d/yyyy",
                    longDate: "dddd, MMMM dd, yyyy",
                    shortTime: "h:mm tt",
                    longTime: "h:mm:ss tt",
                    fullDateTime: "dddd, MMMM dd, yyyy h:mm:ss tt",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "MMMM dd",
                    yearMonth: "MMMM, yyyy"
                },
                regexPatterns: {
                    jan: /^jan(uary)?/i,
                    feb: /^feb(ruary)?/i,
                    mar: /^mar(ch)?/i,
                    apr: /^apr(il)?/i,
                    may: /^may/i,
                    jun: /^jun(e)?/i,
                    jul: /^jul(y)?/i,
                    aug: /^aug(ust)?/i,
                    sep: /^sep(t(ember)?)?/i,
                    oct: /^oct(ober)?/i,
                    nov: /^nov(ember)?/i,
                    dec: /^dec(ember)?/i,
                    sun: /^s(un(day)?)?/i,
                    mon: /^m(on(day)?)?/i,
                    tue: /^tu(e(s(day)?)?)?/i,
                    wed: /^w(ed(nesday)?)?/i,
                    thu: /^th(u(r(s(day)?)?)?)?/i,
                    fri: /^f(ri(day)?)?/i,
                    sat: /^s(at(urday)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var syr = {
                name: "syr-SY",
                englishName: "Syriac (Syria)",
                nativeName: "ܣܘܪܝܝܐ (سوريا)",
                dayNames: ["ܚܕ ܒܫܒܐ", "ܬܪܝܢ ܒܫܒܐ", "ܬܠܬܐ ܒܫܒܐ", "ܐܪܒܥܐ ܒܫܒܐ", "ܚܡܫܐ ܒܫܒܐ", "ܥܪܘܒܬܐ", "ܫܒܬܐ"],
                abbreviatedDayNames: ["܏ܐ ܏ܒܫ", "܏ܒ ܏ܒܫ", "܏ܓ ܏ܒܫ", "܏ܕ ܏ܒܫ", "܏ܗ ܏ܒܫ", "܏ܥܪܘܒ", "܏ܫܒ"],
                shortestDayNames: ["܏", "܏", "܏", "܏", "܏", "܏", "܏"],
                firstLetterDayNames: ["܏", "܏", "܏", "܏", "܏", "܏", "܏"],
                monthNames: ["ܟܢܘܢ ܐܚܪܝ", "ܫܒܛ", "ܐܕܪ", "ܢܝܣܢ", "ܐܝܪ", "ܚܙܝܪܢ", "ܬܡܘܙ", "ܐܒ", "ܐܝܠܘܠ", "ܬܫܪܝ ܩܕܝܡ", "ܬܫܪܝ ܐܚܪܝ", "ܟܢܘܢ ܩܕܝܡ"],
                abbreviatedMonthNames: ["܏ܟܢ ܏ܒ", "ܫܒܛ", "ܐܕܪ", "ܢܝܣܢ", "ܐܝܪ", "ܚܙܝܪܢ", "ܬܡܘܙ", "ܐܒ", "ܐܝܠܘܠ", "܏ܬܫ ܏ܐ", "܏ܬܫ ܏ܒ", "܏ܟܢ ܏ܐ"],
                amDesignator: "ܩ.ܛ",
                pmDesignator: "ܒ.ܛ",
                firstDayOfWeek: 6,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd/MM/yyyy",
                    longDate: "dd MMMM, yyyy",
                    shortTime: "hh:mm tt",
                    longTime: "hh:mm:ss tt",
                    fullDateTime: "dd MMMM, yyyy hh:mm:ss tt",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM, yyyy"
                },
                regexPatterns: {
                    jan: /^ܟܢܘܢ ܐܚܪܝ/i,
                    feb: /^ܫܒܛ/i,
                    mar: /^ܐܕܪ/i,
                    apr: /^ܢܝܣܢ/i,
                    may: /^ܐܝܪ/i,
                    jun: /^ܚܙܝܪܢ/i,
                    jul: /^ܬܡܘܙ/i,
                    aug: /^ܐܒ/i,
                    sep: /^ܐܝܠܘܠ/i,
                    oct: /^ܬܫܪܝ ܩܕܝܡ/i,
                    nov: /^ܬܫܪܝ ܐܚܪܝ/i,
                    dec: /^ܟܢܘܢ ܩܕܝܡ/i,
                    sun: /^܏(ܐ ܏ܒܫ(ܐ)?)?/i,
                    mon: /^܏(ܒ ܏ܒܫ(ܫܒܐ)?)?/i,
                    tue: /^܏(ܓ ܏ܒܫ(ܫܒܐ)?)?/i,
                    wed: /^܏(ܕ ܏ܒܫ(ܒܫܒܐ)?)?/i,
                    thu: /^܏(ܗ ܏ܒܫ(ܫܒܐ)?)?/i,
                    fri: /^܏(ܥܪܘܒ(ܐ)?)?/i,
                    sat: /^܏(ܫܒ(ܐ)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var ta = {
                name: "ta-IN",
                englishName: "Tamil (India)",
                nativeName: "தமிழ் (இந்தியா)",
                dayNames: ["ஞாயிறு", "திங்கள்", "செவ்வாய்", "புதன்", "வியாழன்", "வெள்ளி", "சனி"],
                abbreviatedDayNames: ["ஞா", "தி", "செ", "பு", "வி", "வெ", "ச"],
                shortestDayNames: ["ஞ", "த", "ச", "ப", "வ", "வ", "ச"],
                firstLetterDayNames: ["ஞ", "த", "ச", "ப", "வ", "வ", "ச"],
                monthNames: ["ஜனவரி", "பெப்ரவரி", "மார்ச்", "ஏப்ரல்", "மே", "ஜூன்", "ஜூலை", "ஆகஸ்ட்", "செப்டம்பர்", "அக்டோபர்", "நவம்பர்", "டிசம்பர்"],
                abbreviatedMonthNames: ["ஜன.", "பெப்.", "மார்.", "ஏப்.", "மே", "ஜூன்", "ஜூலை", "ஆக.", "செப்.", "அக்.", "நவ.", "டிச."],
                amDesignator: "காலை",
                pmDesignator: "மாலை",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd-MM-yyyy",
                    longDate: "dd MMMM yyyy",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "dd MMMM yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^ஜன(.(வரி)?)?/i,
                    feb: /^பெப்(.(ரவரி)?)?/i,
                    mar: /^மார்(.(ச்)?)?/i,
                    apr: /^ஏப்(.(ரல்)?)?/i,
                    may: /^மே/i,
                    jun: /^ஜூன்/i,
                    jul: /^ஜூலை/i,
                    aug: /^ஆக(.(ஸ்ட்)?)?/i,
                    sep: /^செப்(.(டம்பர்)?)?/i,
                    oct: /^அக்(.(டோபர்)?)?/i,
                    nov: /^நவ(.(ம்பர்)?)?/i,
                    dec: /^டிச(.(ம்பர்)?)?/i,
                    sun: /^ஞ(ா(யிறு)?)?/i,
                    mon: /^த(ி(ங்கள்)?)?/i,
                    tue: /^ச(ெ(வ்வாய்)?)?/i,
                    wed: /^ப(ு(தன்)?)?/i,
                    thu: /^வ(ி(யாழன்)?)?/i,
                    fri: /^வ(ெ(ள்ளி)?)?/i,
                    sat: /^சனி/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var te = {
                name: "te-IN",
                englishName: "Telugu (India)",
                nativeName: "తెలుగు (భారత దేశం)",
                dayNames: ["ఆదివారం", "సోమవారం", "మంగళవారం", "బుధవారం", "గురువారం", "శుక్రవారం", "శనివారం"],
                abbreviatedDayNames: ["ఆది.", "సోమ.", "మంగళ.", "బుధ.", "గురు.", "శుక్ర.", "శని."],
                shortestDayNames: ["ఆ", "స", "మ", "బ", "గ", "శ", "శ"],
                firstLetterDayNames: ["ఆ", "స", "మ", "బ", "గ", "శ", "శ"],
                monthNames: ["జనవరి", "ఫిబ్రవరి", "మార్చి", "ఏప్రిల్", "మే", "జూన్", "జూలై", "ఆగస్టు", "సెప్టెంబర్", "అక్టోబర్", "నవంబర్", "డిసెంబర్"],
                abbreviatedMonthNames: ["జనవరి", "ఫిబ్రవరి", "మార్చి", "ఏప్రిల్", "మే", "జూన్", "జూలై", "ఆగస్టు", "సెప్టెంబర్", "అక్టోబర్", "నవంబర్", "డిసెంబర్"],
                amDesignator: "పూర్వాహ్న",
                pmDesignator: "అపరాహ్న",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd-MM-yy",
                    longDate: "dd MMMM yyyy",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "dd MMMM yyyy HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM, yyyy"
                },
                regexPatterns: {
                    jan: /^జనవరి/i,
                    feb: /^ఫిబ్రవరి/i,
                    mar: /^మార్చి/i,
                    apr: /^ఏప్రిల్/i,
                    may: /^మే/i,
                    jun: /^జూన్/i,
                    jul: /^జూలై/i,
                    aug: /^ఆగస్టు/i,
                    sep: /^సెప్టెంబర్/i,
                    oct: /^అక్టోబర్/i,
                    nov: /^నవంబర్/i,
                    dec: /^డిసెంబర్/i,
                    sun: /^ఆ(ది(.(వారం)?)?)?/i,
                    mon: /^స(ోమ(.(వారం)?)?)?/i,
                    tue: /^మ(ంగళ(.(వారం)?)?)?/i,
                    wed: /^బ(ుధ(.(వారం)?)?)?/i,
                    thu: /^గ(ురు(.(వారం)?)?)?/i,
                    fri: /^శ(ుక్ర(.(వారం)?)?)?/i,
                    sat: /^శ(ని(.(వారం)?)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var th = {
                name: "th-TH",
                englishName: "Thai (Thailand)",
                nativeName: "ไทย (ไทย)",
                dayNames: ["อาทิตย์", "จันทร์", "อังคาร", "พุธ", "พฤหัสบดี", "ศุกร์", "เสาร์"],
                abbreviatedDayNames: ["อา.", "จ.", "อ.", "พ.", "พฤ.", "ศ.", "ส."],
                shortestDayNames: ["อ", "จ", "อ", "พ", "พ", "ศ", "ส"],
                firstLetterDayNames: ["อ", "จ", "อ", "พ", "พ", "ศ", "ส"],
                monthNames: ["มกราคม", "กุมภาพันธ์", "มีนาคม", "เมษายน", "พฤษภาคม", "มิถุนายน", "กรกฎาคม", "สิงหาคม", "กันยายน", "ตุลาคม", "พฤศจิกายน", "ธันวาคม"],
                abbreviatedMonthNames: ["ม.ค.", "ก.พ.", "มี.ค.", "เม.ย.", "พ.ค.", "มิ.ย.", "ก.ค.", "ส.ค.", "ก.ย.", "ต.ค.", "พ.ย.", "ธ.ค."],
                amDesignator: "AM",
                pmDesignator: "PM",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2572,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "d/M/yyyy",
                    longDate: "d MMMM yyyy",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "d MMMM yyyy H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^ม(.(กราค)?)?/i,
                    feb: /^ก(.(ุมภาพันธ์)?)?/i,
                    mar: /^มี(.(นาคม)?)?/i,
                    apr: /^เม(.(ษายน)?)?/i,
                    may: /^พ(.(ฤษภาคม)?)?/i,
                    jun: /^มิ(.(ถุนายน)?)?/i,
                    jul: /^ก(.(รฎาคม)?)?/i,
                    aug: /^ส(.(ิงหาคม)?)?/i,
                    sep: /^ก(.(ันยายน)?)?/i,
                    oct: /^ต(.(ุลาคม)?)?/i,
                    nov: /^พ(.(ฤศจิกายน)?)?/i,
                    dec: /^ธ(.(ันวาคม)?)?/i,
                    sun: /^อ(า(.(ทิตย์)?)?)?/i,
                    mon: /^จ((.(ันทร์)?)?)?/i,
                    tue: /^อ((.(ังคาร)?)?)?/i,
                    wed: /^พ((.(ุธ)?)?)?/i,
                    thu: /^พ(ฤ(.(หัสบดี)?)?)?/i,
                    fri: /^ศ((.(ุกร์)?)?)?/i,
                    sat: /^ส((.(สาร์)?)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var tn = {
                name: "tn-ZA",
                englishName: "Tswana (South Africa)",
                nativeName: "Setswana (Aforika Borwa)",
                dayNames: ["Latshipi", "Mosupologo", "Labobedi", "Laboraro", "Labone", "Labotlhano", "Lamatlhatso"],
                abbreviatedDayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                shortestDayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                firstLetterDayNames: ["S", "M", "T", "W", "T", "F", "S"],
                monthNames: ["Ferikgong", "Tlhakole", "Mopitloe", "Moranang", "Motsheganong", "Seetebosigo", "Phukwi", "Phatwe", "Lwetse", "Diphalane", "Ngwanatsele", "Sedimothole"],
                abbreviatedMonthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                amDesignator: "AM",
                pmDesignator: "PM",
                firstDayOfWeek: 0,
                twoDigitYearMax: 2029,
                dateElementOrder: "ymd",
                formatPatterns: {
                    shortDate: "yyyy/MM/dd",
                    longDate: "dd MMMM yyyy",
                    shortTime: "hh:mm:ss tt",
                    longTime: "hh:mm:ss tt",
                    fullDateTime: "dd MMMM yyyy hh:mm:ss tt",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "MMMM dd",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^ferikgong/i,
                    feb: /^tlhakole/i,
                    mar: /^mopitloe/i,
                    apr: /^moranang/i,
                    may: /^motsheganong/i,
                    jun: /^seetebosigo/i,
                    jul: /^phukwi/i,
                    aug: /^phatwe/i,
                    sep: /^lwetse/i,
                    oct: /^diphalane/i,
                    nov: /^ngwanatsele/i,
                    dec: /^sedimothole/i,
                    sun: /^latshipi/i,
                    mon: /^mosupologo/i,
                    tue: /^labobedi/i,
                    wed: /^laboraro/i,
                    thu: /^labone/i,
                    fri: /^labotlhano/i,
                    sat: /^lamatlhatso/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var tr = {
                name: "tr-TR",
                englishName: "Turkish (Turkey)",
                nativeName: "Türkçe (Türkiye)",
                dayNames: ["Pazar", "Pazartesi", "Salı", "Çarşamba", "Perşembe", "Cuma", "Cumartesi"],
                abbreviatedDayNames: ["Paz", "Pzt", "Sal", "Çar", "Per", "Cum", "Cmt"],
                shortestDayNames: ["Pz", "Pt", "Sa", "Ça", "Pe", "Cu", "Ct"],
                firstLetterDayNames: ["P", "P", "S", "Ç", "P", "C", "C"],
                monthNames: ["Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık"],
                abbreviatedMonthNames: ["Oca", "Şub", "Mar", "Nis", "May", "Haz", "Tem", "Ağu", "Eyl", "Eki", "Kas", "Ara"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd.MM.yyyy",
                    longDate: "dd MMMM yyyy dddd",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "dd MMMM yyyy dddd HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^oca(k)?/i,
                    feb: /^şub(at)?/i,
                    mar: /^mar(t)?/i,
                    apr: /^nis(an)?/i,
                    may: /^may(ıs)?/i,
                    jun: /^haz(iran)?/i,
                    jul: /^tem(muz)?/i,
                    aug: /^ağu(stos)?/i,
                    sep: /^eyl(ül)?/i,
                    oct: /^eki(m)?/i,
                    nov: /^kas(ım)?/i,
                    dec: /^ara(lık)?/i,
                    sun: /^pz(z(ar)?)?/i,
                    mon: /^pt(t(artesi)?)?/i,
                    tue: /^sa(l(ı)?)?/i,
                    wed: /^ça(r(şamba)?)?/i,
                    thu: /^pe(r(şembe)?)?/i,
                    fri: /^cu(m(a)?)?/i,
                    sat: /^ct(t(artesi)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var tt = {
                name: "tt-RU",
                englishName: "Tatar (Russia)",
                nativeName: "Татар (Россия)",
                dayNames: ["Якшәмбе", "Дүшәмбе", "Сишәмбе", "Чәршәмбе", "Пәнҗешәмбе", "Җомга", "Шимбә"],
                abbreviatedDayNames: ["Якш", "Дүш", "Сиш", "Чәрш", "Пәнҗ", "Җом", "Шим"],
                shortestDayNames: ["Якш", "Дүш", "Сиш", "Чәрш", "Пәнҗ", "Җом", "Шим"],
                firstLetterDayNames: ["Я", "Д", "С", "Ч", "П", "Җ", "Ш"],
                monthNames: ["Гыйнварь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"],
                abbreviatedMonthNames: ["Гыйнв", "Фев", "Мар", "Апр", "Май", "Июн", "Июл", "Авг", "Сен", "Окт", "Ноя", "Дек"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd.MM.yyyy",
                    longDate: "d MMMM yyyy",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "d MMMM yyyy H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "d MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^гыйнв(арь)?/i,
                    feb: /^фев(раль)?/i,
                    mar: /^мар(т)?/i,
                    apr: /^апр(ель)?/i,
                    may: /^май/i,
                    jun: /^июн(ь)?/i,
                    jul: /^июл(ь)?/i,
                    aug: /^авг(уст)?/i,
                    sep: /^сен(тябрь)?/i,
                    oct: /^окт(ябрь)?/i,
                    nov: /^ноя(брь)?/i,
                    dec: /^дек(абрь)?/i,
                    sun: /^якшәмбе/i,
                    mon: /^дүшәмбе/i,
                    tue: /^сишәмбе/i,
                    wed: /^чәршәмбе/i,
                    thu: /^пәнҗешәмбе/i,
                    fri: /^җомга/i,
                    sat: /^шимбә/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var uk = {
                name: "uk-UA",
                englishName: "Ukrainian (Ukraine)",
                nativeName: "україньска (Україна)",
                dayNames: ["неділя", "понеділок", "вівторок", "середа", "четвер", "п'ятниця", "субота"],
                abbreviatedDayNames: ["Нд", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"],
                shortestDayNames: ["Нд", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"],
                firstLetterDayNames: ["Н", "П", "В", "С", "Ч", "П", "С"],
                monthNames: ["Січень", "Лютий", "Березень", "Квітень", "Травень", "Червень", "Липень", "Серпень", "Вересень", "Жовтень", "Листопад", "Грудень"],
                abbreviatedMonthNames: ["Січ", "Лют", "Бер", "Кві", "Тра", "Чер", "Лип", "Сер", "Вер", "Жов", "Лис", "Гру"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd.MM.yyyy",
                    longDate: "d MMMM yyyy' р.'",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "d MMMM yyyy' р.' H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "d MMMM",
                    yearMonth: "MMMM yyyy' р.'"
                },
                regexPatterns: {
                    jan: /^січ(ень)?/i,
                    feb: /^лют(ий)?/i,
                    mar: /^бер(езень)?/i,
                    apr: /^кві(тень)?/i,
                    may: /^тра(вень)?/i,
                    jun: /^чер(вень)?/i,
                    jul: /^лип(ень)?/i,
                    aug: /^сер(пень)?/i,
                    sep: /^вер(есень)?/i,
                    oct: /^жов(тень)?/i,
                    nov: /^лис(топад)?/i,
                    dec: /^гру(день)?/i,
                    sun: /^неділя/i,
                    mon: /^понеділок/i,
                    tue: /^вівторок/i,
                    wed: /^середа/i,
                    thu: /^четвер/i,
                    fri: /^п'ятниця/i,
                    sat: /^субота/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var ur = {
                name: "ur-PK",
                englishName: "Urdu (Islamic Republic of Pakistan)",
                nativeName: "اُردو (پاکستان)",
                dayNames: ["اتوار", "پير", "منگل", "بدھ", "جمعرات", "جمعه", "هفته"],
                abbreviatedDayNames: ["اتوار", "پير", "منگل", "بدھ", "جمعرات", "جمعه", "هفته"],
                shortestDayNames: ["ا", "پ", "م", "ب", "ج", "ج", "ه"],
                firstLetterDayNames: ["ا", "پ", "م", "ب", "ج", "ج", "ه"],
                monthNames: ["جنورى", "فرورى", "مارچ", "اپريل", "مئ", "جون", "جولاٸ", "اگست", "ستمبر", "اکتوبر", "نومبر", "دسمبر"],
                abbreviatedMonthNames: ["جنورى", "فرورى", "مارچ", "اپريل", "مئ", "جون", "جولاٸ", "اگست", "ستمبر", "اکتوبر", "نومبر", "دسمبر"],
                amDesignator: "AM",
                pmDesignator: "PM",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd/MM/yyyy",
                    longDate: "dd MMMM, yyyy",
                    shortTime: "h:mm tt",
                    longTime: "h:mm:ss tt",
                    fullDateTime: "dd MMMM, yyyy h:mm:ss tt",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM, yyyy"
                },
                regexPatterns: {
                    jan: /^جنورى/i,
                    feb: /^فرورى/i,
                    mar: /^مارچ/i,
                    apr: /^اپريل/i,
                    may: /^مئ/i,
                    jun: /^جون/i,
                    jul: /^جولاٸ/i,
                    aug: /^اگست/i,
                    sep: /^ستمبر/i,
                    oct: /^اکتوبر/i,
                    nov: /^نومبر/i,
                    dec: /^دسمبر/i,
                    sun: /^ا(1)?/i,
                    mon: /^پ(1)?/i,
                    tue: /^م(1)?/i,
                    wed: /^ب(1)?/i,
                    thu: /^ج(1)?/i,
                    fri: /^ج(1)?/i,
                    sat: /^ه(1)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var uz = {
                name: "uz-Cyrl-UZ",
                englishName: "Uzbek (Cyrillic, Uzbekistan)",
                nativeName: "Ўзбек (Ўзбекистон)",
                dayNames: ["якшанба", "душанба", "сешанба", "чоршанба", "пайшанба", "жума", "шанба"],
                abbreviatedDayNames: ["якш", "дш", "сш", "чш", "пш", "ж", "ш"],
                shortestDayNames: ["якш", "дш", "сш", "чш", "пш", "ж", "ш"],
                firstLetterDayNames: ["я", "д", "с", "ч", "п", "ж", "ш"],
                monthNames: ["Январ", "Феврал", "Март", "Апрел", "Май", "Июн", "Июл", "Август", "Сентябр", "Октябр", "Ноябр", "Декабр"],
                abbreviatedMonthNames: ["Янв", "Фев", "Мар", "Апр", "Май", "Июн", "Июл", "Авг", "Сен", "Окт", "Ноя", "Дек"],
                amDesignator: "",
                pmDesignator: "",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd.MM.yyyy",
                    longDate: "yyyy 'йил' d-MMMM",
                    shortTime: "HH:mm",
                    longTime: "HH:mm:ss",
                    fullDateTime: "yyyy 'йил' d-MMMM HH:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "d-MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^янв(ар)?/i,
                    feb: /^фев(рал)?/i,
                    mar: /^мар(т)?/i,
                    apr: /^апр(ел)?/i,
                    may: /^май/i,
                    jun: /^июн/i,
                    jul: /^июл/i,
                    aug: /^авг(уст)?/i,
                    sep: /^сен(тябр)?/i,
                    oct: /^окт(ябр)?/i,
                    nov: /^ноя(бр)?/i,
                    dec: /^дек(абр)?/i,
                    sun: /^якшанба/i,
                    mon: /^душанба/i,
                    tue: /^сешанба/i,
                    wed: /^чоршанба/i,
                    thu: /^пайшанба/i,
                    fri: /^жума/i,
                    sat: /^шанба/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var vi = {
                name: "vi-VN",
                englishName: "Vietnamese (Vietnam)",
                nativeName: "Tiếng Việt (Việt Nam)",
                dayNames: ["Chủ Nhật", "Thứ Hai", "Thứ Ba", "Thứ Tư", "Thứ Năm", "Thứ Sáu", "Thứ Bảy"],
                abbreviatedDayNames: ["CN", "Hai", "Ba", "Tư", "Năm", "Sáu", "Bảy"],
                shortestDayNames: ["C", "H", "B", "T", "N", "S", "B"],
                firstLetterDayNames: ["C", "H", "B", "T", "N", "S", "B"],
                monthNames: ["Tháng Giêng", "Tháng Hai", "Tháng Ba", "Tháng Tư", "Tháng Năm", "Tháng Sáu", "Tháng Bảy", "Tháng Tám", "Tháng Chín", "Tháng Mười", "Tháng Mười Một", "Tháng Mười Hai"],
                abbreviatedMonthNames: ["Thg1", "Thg2", "Thg3", "Thg4", "Thg5", "Thg6", "Thg7", "Thg8", "Thg9", "Thg10", "Thg11", "Thg12"],
                amDesignator: "SA",
                pmDesignator: "CH",
                firstDayOfWeek: 1,
                twoDigitYearMax: 2029,
                dateElementOrder: "dmy",
                formatPatterns: {
                    shortDate: "dd/MM/yyyy",
                    longDate: "dd MMMM yyyy",
                    shortTime: "h:mm tt",
                    longTime: "h:mm:ss tt",
                    fullDateTime: "dd MMMM yyyy h:mm:ss tt",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "dd MMMM",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^tháng giêng/i,
                    feb: /^tháng hai/i,
                    mar: /^tháng ba/i,
                    apr: /^tháng tư/i,
                    may: /^tháng năm/i,
                    jun: /^tháng sáu/i,
                    jul: /^tháng bảy/i,
                    aug: /^tháng tám/i,
                    sep: /^tháng chín/i,
                    oct: /^tháng mười/i,
                    nov: /^tháng mười một/i,
                    dec: /^tháng mười hai/i,
                    sun: /^c(n(ủ nhật)?)?/i,
                    mon: /^h(ai(́ hai)?)?/i,
                    tue: /^b(a(ứ ba)?)?/i,
                    wed: /^t(ư(ứ tư)?)?/i,
                    thu: /^n(ăm(́ năm)?)?/i,
                    fri: /^s(áu( sáu)?)?/i,
                    sat: /^b(ảy( bảy)?)?/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var xh = {
                name: "xh-ZA",
                englishName: "Xhosa (South Africa)",
                nativeName: "isiXhosa (uMzantsi Afrika)",
                dayNames: ["iCawa", "uMvulo", "uLwesibini", "uLwesithathu", "uLwesine", "uLwesihlanu", "uMgqibelo"],
                abbreviatedDayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                shortestDayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                firstLetterDayNames: ["S", "M", "T", "W", "T", "F", "S"],
                monthNames: ["eyoMqungu", "eyoMdumba", "eyoKwindla", "Tshazimpuzi", "Canzibe", "eyeSilimela", "eyeKhala", "eyeThupha", "eyoMsintsi", "eyeDwara", "eyeNkanga", "eyoMnga"],
                abbreviatedMonthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                amDesignator: "AM",
                pmDesignator: "PM",
                firstDayOfWeek: 0,
                twoDigitYearMax: 2029,
                dateElementOrder: "ymd",
                formatPatterns: {
                    shortDate: "yyyy/MM/dd",
                    longDate: "dd MMMM yyyy",
                    shortTime: "hh:mm:ss tt",
                    longTime: "hh:mm:ss tt",
                    fullDateTime: "dd MMMM yyyy hh:mm:ss tt",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "MMMM dd",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^eyomqungu/i,
                    feb: /^eyomdumba/i,
                    mar: /^eyokwindla/i,
                    apr: /^tshazimpuzi/i,
                    may: /^canzibe/i,
                    jun: /^eyesilimela/i,
                    jul: /^eyekhala/i,
                    aug: /^eyethupha/i,
                    sep: /^eyomsintsi/i,
                    oct: /^eyedwara/i,
                    nov: /^eyenkanga/i,
                    dec: /^eyomnga/i,
                    sun: /^icawa/i,
                    mon: /^umvulo/i,
                    tue: /^ulwesibini/i,
                    wed: /^ulwesithathu/i,
                    thu: /^ulwesine/i,
                    fri: /^ulwesihlanu/i,
                    sat: /^umgqibelo/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var zh = {
                name: "zh-CN",
                englishName: "Chinese (People's Republic of China)",
                nativeName: "中文(中华人民共和国)",
                dayNames: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
                abbreviatedDayNames: ["日", "一", "二", "三", "四", "五", "六"],
                shortestDayNames: ["日", "一", "二", "三", "四", "五", "六"],
                firstLetterDayNames: ["日", "一", "二", "三", "四", "五", "六"],
                monthNames: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
                abbreviatedMonthNames: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
                amDesignator: "上午",
                pmDesignator: "下午",
                firstDayOfWeek: 0,
                twoDigitYearMax: 2029,
                dateElementOrder: "ymd",
                formatPatterns: {
                    shortDate: "yyyy/M/d",
                    longDate: "yyyy'年'M'月'd'日'",
                    shortTime: "H:mm",
                    longTime: "H:mm:ss",
                    fullDateTime: "yyyy'年'M'月'd'日' H:mm:ss",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "M'月'd'日'",
                    yearMonth: "yyyy'年'M'月'"
                },
                regexPatterns: {
                    jan: /^一月/i,
                    feb: /^二月/i,
                    mar: /^三月/i,
                    apr: /^四月/i,
                    may: /^五月/i,
                    jun: /^六月/i,
                    jul: /^七月/i,
                    aug: /^八月/i,
                    sep: /^九月/i,
                    oct: /^十月/i,
                    nov: /^十一月/i,
                    dec: /^十二月/i,
                    sun: /^星期日/i,
                    mon: /^星期一/i,
                    tue: /^星期二/i,
                    wed: /^星期三/i,
                    thu: /^星期四/i,
                    fri: /^星期五/i,
                    sat: /^星期六/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            var zu = {
                name: "zu-ZA",
                englishName: "Zulu (South Africa)",
                nativeName: "isiZulu (iNingizimu Afrika)",
                dayNames: ["iSonto", "uMsombuluko", "uLwesibili", "uLwesithathu", "uLwesine", "uLwesihlanu", "uMgqibelo"],
                abbreviatedDayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                shortestDayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                firstLetterDayNames: ["S", "M", "T", "W", "T", "F", "S"],
                monthNames: ["uJanuwari", "uFebuwari", "uMashi", "uAprhili", "uMeyi", "uJuni", "uJulayi", "uAgaste", "uSepthemba", "uOkthoba", "uNovemba", "uDisemba"],
                abbreviatedMonthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                amDesignator: "AM",
                pmDesignator: "PM",
                firstDayOfWeek: 0,
                twoDigitYearMax: 2029,
                dateElementOrder: "ymd",
                formatPatterns: {
                    shortDate: "yyyy/MM/dd",
                    longDate: "dd MMMM yyyy",
                    shortTime: "hh:mm:ss tt",
                    longTime: "hh:mm:ss tt",
                    fullDateTime: "dd MMMM yyyy hh:mm:ss tt",
                    sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
                    universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
                    rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
                    monthDay: "MMMM dd",
                    yearMonth: "MMMM yyyy"
                },
                regexPatterns: {
                    jan: /^ujanuwari/i,
                    feb: /^ufebuwari/i,
                    mar: /^umashi/i,
                    apr: /^uaprhili/i,
                    may: /^umeyi/i,
                    jun: /^ujuni/i,
                    jul: /^ujulayi/i,
                    aug: /^uagaste/i,
                    sep: /^usepthemba/i,
                    oct: /^uokthoba/i,
                    nov: /^unovemba/i,
                    dec: /^udisemba/i,
                    sun: /^isonto/i,
                    mon: /^umsombuluko/i,
                    tue: /^ulwesibili/i,
                    wed: /^ulwesithathu/i,
                    thu: /^ulwesine/i,
                    fri: /^ulwesihlanu/i,
                    sat: /^umgqibelo/i,
                    future: /^next/i,
                    past: /^last|past|prev(ious)?/i,
                    add: /^(\+|after|from)/i,
                    subtract: /^(\-|before|ago)/i,
                    yesterday: /^yesterday/i,
                    today: /^t(oday)?/i,
                    tomorrow: /^tomorrow/i,
                    now: /^n(ow)?/i,
                    millisecond: /^ms|milli(second)?s?/i,
                    second: /^sec(ond)?s?/i,
                    minute: /^min(ute)?s?/i,
                    hour: /^h(ou)?rs?/i,
                    week: /^w(ee)?k/i,
                    month: /^m(o(nth)?s?)?/i,
                    day: /^d(ays?)?/i,
                    year: /^y((ea)?rs?)?/i,
                    shortMeridian: /^(a|p)/i,
                    longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
                    timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
                    ordinalSuffix: /^\s*(st|nd|rd|th)/i,
                    timeContext: /^\s*(\:|a|p)/i
                },
                abbreviatedTimeZoneStandard: {
                    GMT: "-000",
                    EST: "-0400",
                    CST: "-0500",
                    MST: "-0600",
                    PST: "-0700"
                },
                abbreviatedTimeZoneDST: {
                    GMT: "-000",
                    EDT: "-0500",
                    CDT: "-0600",
                    MDT: "-0700",
                    PDT: "-0800"
                }
            };
            function getCultureInfos(lang) {
                switch (lang) {
                case "af-ZA":
                    return af;
                case "ar-AE":
                case "ar-BH":
                case "ar-DZ":
                case "ar-EG":
                case "ar-IQ":
                case "ar-JO":
                case "ar-KW":
                case "ar-LB":
                case "ar-LY":
                case "ar-MA":
                case "ar-OM":
                case "ar-QA":
                case "ar-SA":
                case "ar-SY":
                case "ar-TN":
                case "ar-YE":
                    return ar;
                case "az-Cyrl-AZ":
                case "az-Latn-AZ":
                    return az;
                case "be-BY":
                    return be;
                case "bg-BG":
                    return bg;
                case "bs-Latn-BA":
                    return bs;
                case "ca-ES":
                    return ca;
                case "cs":
                case "cs-CZ":
                    return cs;
                case "cy-GB":
                    return cy;
                case "da":
                case "da-DK":
                    return da;
                case "de":
                case "de-AT":
                case "de-CH":
                case "de-DE":
                case "de-LI":
                case "de-LU":
                    return de;
                case "dv-MV":
                    return dv;
                case "el":
                case "el-GR":
                    return el;
                case "en":
                case "en-029":
                case "en-AU":
                case "en-BZ":
                case "en-CA":
                case "en-GB":
                case "en-IE":
                case "en-JM":
                case "en-NZ":
                case "en-PH":
                case "en-TT":
                case "en-US":
                case "en-ZA":
                case "en-ZW":
                    return en;
                case "es":
                case "es-AR":
                case "es-BO":
                case "es-CL":
                case "es-CO":
                case "es-CR":
                case "es-DO":
                case "es-EC":
                case "es-ES":
                case "es-GT":
                case "es-HN":
                case "es-MX":
                case "es-NI":
                case "es-PA":
                case "es-PE":
                case "es-PR":
                case "es-PY":
                case "es-SV":
                case "es-UY":
                case "es-VE":
                    return es;
                case "et-EE":
                    return et;
                case "eu-ES":
                    return eu;
                case "fa-IR":
                    return fa;
                case "fi-FI":
                    return fi;
                case "fo-FO":
                    return fo;
                case "fr":
                case "fr-BE":
                case "fr-CA":
                case "fr-CH":
                case "fr-FR":
                case "fr-LU":
                case "fr-MC":
                    return fr;
                case "gl-ES":
                    return gl;
                case "gu-IN":
                    return gu;
                case "he-IL":
                    return he;
                case "hi-IN":
                    return hi;
                case "hr-BA":
                case "hr-HR":
                    return hr;
                case "hu":
                case "hu-HU":
                    return hu;
                case "hy-AM":
                    return hy;
                case "id-ID":
                    return id;
                case "is-IS":
                    return is;
                case "it":
                case "it-CH":
                case "it-IT":
                    return it;
                case "ja-JP":
                    return ja;
                case "ka-GE":
                    return ka;
                case "kk-KZ":
                    return kk;
                case "kn-IN":
                    return kn;
                case "ko-KR":
                    return ko;
                case "kok-IN":
                    return kok;
                case "ky-KG":
                    return ky;
                case "lt-LT":
                    return lt;
                case "lv-LV":
                    return lv;
                case "mi-NZ":
                    return mi;
                case "mk-MK":
                    return mk;
                case "mn-MN":
                    return mn;
                case "mr-IN":
                    return mr;
                case "ms-BN":
                case "ms-MY":
                    return ms;
                case "mt-MT":
                    return mt;
                case "nb-NO":
                    return nb;
                case "nl":
                case "nl-BE":
                case "nl-NL":
                    return nl;
                case "nn-NO":
                    return nn;
                case "ns-ZA":
                    return ns;
                case "pa-IN":
                    return pa;
                case "pl":
                case "pl-PL":
                    return pl;
                case "pt":
                case "pt-BR":
                case "pt-PT":
                    return pt;
                case "quz-BO":
                case "quz-EC":
                case "quz-PE":
                    return quz;
                case "ro":
                case "ro-RO":
                    return ro;
                case "ru":
                case "ru-RU":
                    return ru;
                case "sa-IN":
                    return sa;
                case "se-FI":
                case "se-NO":
                case "se-SE":
                    return se;
                case "sk":
                case "sk-SK":
                    return sk;
                case "sl-SI":
                    return sl;
                case "sma-NO":
                case "sma-SE":
                    return sma;
                case "smj-NO":
                case "smj-SE":
                    return smj;
                case "smn-FI":
                    return smn;
                case "sms-FI":
                    return sms;
                case "sq":
                    return sq;
                case "sr-Cyrl-BA":
                case "sr-Cyrl-CS":
                case "sr-Latn-BA":
                case "sr-Latn-CS":
                    return sr;
                case "sv":
                case "sv-FI":
                case "sv-SE":
                    return sv;
                case "sw":
                    return sw;
                case "syr":
                    return syr;
                case "ta-IN":
                    return ta;
                case "te-IN":
                    return te;
                case "th-TH":
                    return th;
                case "tn-ZA":
                    return tn;
                case "tr":
                case "tr-TR":
                    return tr;
                case "tt-RU":
                    return tt;
                case "uk-UA":
                    return uk;
                case "ur-PK":
                    return ur;
                case "uz-Cyrl-UZ":
                case "uz-Latn-UZ":
                    return uz;
                case "vi-VN":
                    return vi;
                case "xh-ZA":
                    return xh;
                case "zh-CN":
                case "zh-HK":
                case "zh-MO":
                case "zh-SG":
                case "zh-TW":
                    return zh;
                case "zu-ZA":
                    return zu;
                default:
                    return en
                }
            }
            date.getCultureInfos = getCultureInfos
        }
        )(date = util.date || (util.date = {}))
    }
    )(util = dm.util || (dm.util = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var util;
    (function(util) {
        var date;
        (function(date) {
            angular.module("global").run(function() {
                var daloState = dm.model.DaloState.getInstance("DaloStateModel", this._scopes);
                DateFormatLoader(daloState.acceptLanguage)
            });
            function acceptLanguageParser(string) {
                try {
                    var langs = string.split(","), i, c;
                    for (i = 0,
                    c = langs.length; i < c; i++) {
                        langs[i] = langs[i].split(";q=");
                        langs[i][1] = +langs[i][1] || 1
                    }
                    langs = langs.sort(function(a, b) {
                        return b[1] - a[1]
                    });
                    for (i = 0,
                    c = langs.length; i < c; i++) {
                        langs[i] = langs[i][0].replace(/^\s+|\s+$/, "")
                    }
                    return langs
                } catch (e) {
                    return []
                }
            }
            date.acceptLanguageParser = acceptLanguageParser;
            function DateFormatLoader(acceptLanguage) {
                var langs = acceptLanguageParser(acceptLanguage);
                var langAliases = {
                    af: "af-ZA",
                    ar: "ar-AE",
                    az: "az-Cyrl-AZ",
                    be: "be-BY",
                    bg: "bg-BG",
                    bs: "bs-Latn-AZ",
                    ca: "ca-ES",
                    cs: "cs-CZ",
                    cy: "cy-GB",
                    da: "da-DK",
                    de: "de-DE",
                    dv: "dv-MV",
                    el: "el-GR",
                    en: "en-US",
                    es: "es-ES",
                    et: "et-EE",
                    eu: "eu-ES",
                    fa: "fa-IR",
                    fi: "fi-FI",
                    fo: "fo-FO",
                    fr: "fr-FR",
                    gl: "gl-ES",
                    gu: "gu-IN",
                    he: "he-IL",
                    hi: "hi-IN",
                    hr: "hr-HR",
                    hu: "hu-HU",
                    hy: "hy-AM",
                    id: "id-ID",
                    is: "is-IS",
                    it: "it-IT",
                    ja: "ja-JP",
                    ka: "ka-GE",
                    kk: "kk-KZ",
                    kn: "kn-IN",
                    ko: "ko-KR",
                    kok: "kok-IN",
                    ky: "ky-KG",
                    lt: "lt-LT",
                    lv: "lv-LV",
                    mi: "mi-NZ",
                    mk: "mk-MK",
                    mn: "mn-MN",
                    mr: "mr-IN",
                    ms: "ms-BN",
                    mt: "mt-MT",
                    nb: "nb-NO",
                    nl: "nl-NL",
                    nn: "nn-NO",
                    ns: "ns-ZA",
                    pa: "pa-IN",
                    pl: "pl-PL",
                    pt: "pt-PT",
                    quz: "quz-BO",
                    ro: "ro-RO",
                    ru: "ru-RU",
                    sa: "sa-IN",
                    se: "se-SE",
                    sk: "sk-SK",
                    sl: "sl-SI",
                    sma: "sma-NO",
                    smj: "smj-NO",
                    smn: "smn-FI",
                    sms: "sms-FI",
                    sq: "sq-AL",
                    sr: "sr-Cryl-BA",
                    sv: "sv-FI",
                    sw: "sw-KE",
                    syr: "syr-SY",
                    ta: "ta-IN",
                    te: "te-IN",
                    th: "th-TH",
                    tn: "tn-ZA",
                    tr: "tr-TR",
                    tt: "tt-RU",
                    uk: "uk-UA",
                    ur: "ur-PK",
                    uz: "uz-Cyrl-UZ",
                    vi: "vi-VN",
                    xh: "xh-ZA",
                    zh: "zh-CN",
                    zu: "zu-ZA"
                };
                var LoadFormatFile = function(aIdx) {
                    if (aIdx < langs.length) {
                        var lang;
                        if (langAliases.hasOwnProperty(langs[aIdx]))
                            lang = langAliases[langs[aIdx]];
                        else
                            lang = langs[aIdx];
                        if (date.getCultureInfos(lang))
                            Date.CultureInfo = date.getCultureInfos(lang);
                        else
                            LoadFormatFile(aIdx + 1)
                    } else {
                        Date.CultureInfo = date.getCultureInfos("de-AT")
                    }
                };
                LoadFormatFile(0)
            }
            date.DateFormatLoader = DateFormatLoader;
            function getDatePickerFormatString() {
                var f = "dd.MM.yyyy";
                var f2;
                try {
                    f = Date.CultureInfo.formatPatterns.shortDate
                } catch (e) {}
                f = f.replace("dddd", "DD");
                f = f.replace("ddd", "D");
                f2 = f.replace("yyyy", "yy");
                if (f2 == f)
                    f = f.replace("yy", "y");
                else
                    f = f2;
                f2 = f.replace("MMMM", "MM");
                if (f2 == f) {
                    f2 = f.replace("MM", "mm");
                    if (f2 == f) {
                        f2 = f.replace("MMM", "M");
                        if (f2 == f) {
                            f = f.replace("M", "m")
                        } else
                            f = f2
                    } else
                        f = f2
                } else
                    f = f2;
                return f
            }
            date.getDatePickerFormatString = getDatePickerFormatString;
            function isTwelveHoureFormat() {
                var retval = false;
                try {
                    var tf = Date.CultureInfo.formatPatterns.shortTime;
                    if (tf.search(/h/) != -1) {
                        retval = true
                    }
                } catch (e) {}
                return moment.localeData()["_longDateFormat"].LT.indexOf("A") >= 0 || moment.localeData()["_longDateFormat"].LT.indexOf("a") >= 0
            }
            date.isTwelveHoureFormat = isTwelveHoureFormat;
            function printShortDate(aDate) {
                return aDate.toString(Date.CultureInfo.formatPatterns.shortDate)
            }
            date.printShortDate = printShortDate;
            function getCultureInfo() {
                return Date.CultureInfo
            }
            date.getCultureInfo = getCultureInfo;
            var _now = null;
            function setNow(now) {
                _now = now
            }
            date.setNow = setNow;
            function getNow(timezone) {
                return _now ? moment.tz(_now, timezone) : moment.tz(timezone)
            }
            date.getNow = getNow
        }
        )(date = util.date || (util.date = {}))
    }
    )(util = dm.util || (dm.util = {}))
}
)(dm || (dm = {}));
angular.module("global").directive("jqdatepicker", ["$translate", function($translate) {
    return {
        restrict: "A",
        require: "ngModel",
        link: function(scope, element, attrs, ctrl) {
            $.datepicker.parseDate = function(format, value) {
                return moment(value, format).toDate()
            }
            ;
            $.datepicker.formatDate = function(format, value) {
                return moment(value).format(format)
            }
            ;
            $translate(["DATE_M_1", "DATE_M_2", "DATE_M_3", "DATE_M_4", "DATE_M_5", "DATE_M_6", "DATE_M_7", "DATE_M_8", "DATE_M_9", "DATE_M_10", "DATE_M_11", "DATE_M_12", "DATE_D_1", "DATE_D_2", "DATE_D_3", "DATE_D_4", "DATE_D_5", "DATE_D_6", "DATE_D_7"]).then(function(dict) {
                $(element).datepicker({
                    dateFormat: moment.localeData().longDateFormat("L"),
                    monthNames: [dict.DATE_M_1, dict.DATE_M_2, dict.DATE_M_3, dict.DATE_M_4, dict.DATE_M_5, dict.DATE_M_6, dict.DATE_M_7, dict.DATE_M_8, dict.DATE_M_9, dict.DATE_M_10, dict.DATE_M_11, dict.DATE_M_12],
                    dayNamesMin: [dict.DATE_D_1, dict.DATE_D_2, dict.DATE_D_3, dict.DATE_D_4, dict.DATE_D_5, dict.DATE_D_6, dict.DATE_D_7],
                    constrainInput: true,
                    onSelect: function(date) {
                        ctrl.$setViewValue(date);
                        ctrl.$render();
                        scope.$apply()
                    }
                })
            })
        }
    }
}
]);
var pbkdf2Sync = window["pbkdf2Sync"];
var dm;
(function(dm) {
    var util;
    (function(util) {
        var helpers;
        (function(helpers) {
            function checkStatusResponse(aCfgResponse) {
                var statusCode = 0;
                try {
                    statusCode = aCfgResponse.Head.Status.Code;
                    var reason = aCfgResponse.Head.Status.Reason;
                    var statusMessage = aCfgResponse.Head.Status.UserMessage;
                    var errorDetail = aCfgResponse.Head.Status.ErrorDetail;
                    var statusNodes = aCfgResponse.Head.Status.ErrorDetail.Nodes;
                    var data = aCfgResponse.Body.Data;
                    if (statusCode == undefined)
                        return false;
                    if (reason == undefined)
                        return false;
                    if (statusMessage == undefined)
                        return false;
                    if (errorDetail == undefined)
                        return false;
                    if (statusNodes == undefined)
                        return false;
                    if (data == undefined)
                        return false;
                    return true
                } catch (e) {
                    aCfgResponse.Head = {
                        Status: {
                            Code: -9999,
                            Reason: "no legal cfg response received",
                            UserMessage: "{{ILLEGAL_CONFIG_RESPONSE}}",
                            ErrorDetail: {
                                Nodes: []
                            }
                        }
                    };
                    return false
                }
                return true
            }
            helpers.checkStatusResponse = checkStatusResponse;
            function roundN(aValue, maxDecimal) {
                if (!isInteger(maxDecimal))
                    return NaN;
                var decimal = Math.pow(10, maxDecimal);
                return Math.round(aValue * decimal) / decimal
            }
            helpers.roundN = roundN;
            function parseInt(aIntString) {
                var IntString = aIntString;
                IntString = IntString.replace(/^0+/, "");
                if (aIntString != IntString && IntString == "") {
                    IntString = "0"
                }
                var x = window.parseInt(IntString, 10);
                if (x.toString() == IntString) {
                    return x
                } else {
                    return NaN
                }
            }
            helpers.parseInt = parseInt;
            function CreatePasswordNode(theuser, password, doGenSalt) {
                var toHexString = function(uint8_array) {
                    var hexString = "";
                    for (var _i = 0, uint8_array_1 = uint8_array; _i < uint8_array_1.length; _i++) {
                        var byte = uint8_array_1[_i];
                        if (byte > 255)
                            throw "error while converting byte array";
                        hexString = hexString + ("0" + byte.toString(16)).slice(-2)
                    }
                    return hexString
                };
                var genSalt = function(byteCount) {
                    var ret = "";
                    var byteMax = Math.pow(2, 8) - 1;
                    for (var i = 0; i < byteCount; i++) {
                        ret = ret + ("00" + Math.floor(Math.random() * byteMax).toString(16)).slice(-2)
                    }
                    return ret.toLowerCase()
                };
                var Realm = "Webinterface area";
                var node = {};
                switch (theuser) {
                case "service":
                    node["service"] = md5(theuser + ":" + Realm + ":" + password);
                    break;
                case "admin":
                    node["admin"] = md5(theuser + ":" + Realm + ":" + password);
                    break;
                case "user":
                    node["user"] = md5(theuser + ":" + Realm + ":" + password);
                    break
                }
                if (theuser == "user" && password.length == 0) {
                    node["pbkdf2_" + theuser] = "";
                    node["pbkdf2_salt"] = ""
                } else {
                    var salt = genSalt(4);
                    node["pbkdf2_" + theuser] = toHexString(pbkdf2Sync(password, salt, 1e4, 64, "sha512"));
                    if (doGenSalt)
                        node["pbkdf2_salt"] = salt
                }
                return node
            }
            helpers.CreatePasswordNode = CreatePasswordNode;
            function isInteger(aValue) {
                if (aValue === undefined || aValue === null)
                    return false;
                return !isNaN(dm.util.helpers.parseInt(aValue.toString()))
            }
            helpers.isInteger = isInteger;
            function parseFloat(aFloatString) {
                var FloatString = aFloatString;
                if (FloatString.indexOf(".") != -1) {
                    FloatString = FloatString.replace(/0*$/, "");
                    FloatString = FloatString.replace(/\.$/, "")
                }
                FloatString = FloatString.replace(/^0+/, "");
                if (FloatString.indexOf(".") == 0) {
                    FloatString = "0" + FloatString
                }
                if (aFloatString != FloatString && FloatString == "") {
                    FloatString = "0"
                }
                var x = window.parseFloat(FloatString);
                if (x.toString() == FloatString) {
                    return x
                } else {
                    return NaN
                }
            }
            helpers.parseFloat = parseFloat
        }
        )(helpers = util.helpers || (util.helpers = {}))
    }
    )(util = dm.util || (dm.util = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var util;
    (function(util) {
        var templateUrls;
        (function(templateUrls) {
            function getMeterTemplate() {
                return "/html/templates/meterDialog.html?ver=" + "1.1.24-1"
            }
            templateUrls.getMeterTemplate = getMeterTemplate;
            function getPolicyTemplate() {
                return "/html/templates/policyDialog.html?ver=" + "1.1.24-1"
            }
            templateUrls.getPolicyTemplate = getPolicyTemplate;
            function getSyncSolarWebTemplate() {
                return "/html/templates/syncSolarWeb.html?ver=" + "1.1.24-1"
            }
            templateUrls.getSyncSolarWebTemplate = getSyncSolarWebTemplate;
            function getIOTemplate() {
                return "/html/templates/ioDialog.html?ver=" + "1.1.24-1"
            }
            templateUrls.getIOTemplate = getIOTemplate
        }
        )(templateUrls = util.templateUrls || (util.templateUrls = {}))
    }
    )(util = dm.util || (dm.util = {}))
}
)(dm || (dm = {}));
var InputValidatorDirective = function() {
    function InputValidatorDirective($parse, $rootScope) {
        var _this = this;
        this.$parse = $parse;
        this.$rootScope = $rootScope;
        this.restrict = "A";
        this.require = "?";
        this.scope = {
            inputValidator: "&"
        };
        this.replace = true;
        this.link = function(scope, element, attrs, ngModel) {
            if (!scope.hasOwnProperty(InputValidatorDirective._instanceKey)) {
                scope["validatorName"] = attrs.inputValidator;
                scope[InputValidatorDirective._instanceKey] = new InputValidator(scope.$parent,element,attrs,ngModel,_this.$parse);
                scope[InputValidatorDirective._instanceKey].init()
            }
        }
    }
    InputValidatorDirective.factory = function() {
        var directive = function($parse, $rootScope) {
            return new InputValidatorDirective($parse,$rootScope)
        };
        directive.$inject = ["$parse", "$rootScope"];
        return directive
    }
    ;
    InputValidatorDirective._instanceKey = "inputValidatorInstance";
    return InputValidatorDirective
}();
var InputValidator = function() {
    function InputValidator(scope, element, attrs, _ngModel, $parse) {
        this.scope = scope;
        this.element = element;
        this.attrs = attrs;
        this._ngModel = _ngModel;
        this.$parse = $parse;
        this._dirty = false;
        this._singleSelectedHint = false;
        this._validatorName = attrs.inputValidator
    }
    Object.defineProperty(InputValidator.prototype, "isChecked", {
        get: function() {
            return this.element.attr("checked") === "checked"
        },
        enumerable: true,
        configurable: true
    });
    InputValidator.prototype._createHint = function() {
        var hint = this.attrs.hint;
        if (this.attrs.validatorParam != undefined)
            this.valParam = this.attrs.validatorParam;
        if (hint != undefined) {
            this._qtipOptions.content = hint;
            this.element.qtip(this._qtipOptions);
            this.element.trigger("evalFailed");
            this.element.trigger("evalOK")
        }
    }
    ;
    InputValidator.prototype._updateHint = function() {
        var hint = this.attrs.hint;
        if (this.attrs.validatorParam != undefined)
            this.valParam = this.attrs.validatorParam;
        if (hint != undefined) {
            var current = this.element.data("qtip").current;
            var theQTip = this.element.data("qtip").interfaces[current];
            theQTip.updateContent(hint, true)
        }
    }
    ;
    InputValidator.prototype._setInvalid = function() {
        if (this._singleSelectedHint) {
            if (this.isChecked) {
                this.element.trigger("evalFailed")
            } else {
                this.element.trigger("evalOK")
            }
        } else {
            this.element.trigger("evalFailed")
        }
        this.element.addClass("input-validation-error")
    }
    ;
    InputValidator.prototype._setValid = function() {
        this.element.trigger("evalOK");
        this.element.removeClass("input-validation-error")
    }
    ;
    InputValidator.prototype._validate = function(newVal, valParam) {
        this._validator = this._getValidator(this.scope, this._validatorName);
        if (!this._validator) {
            return false
        }
        return this._validator(newVal, valParam)
    }
    ;
    InputValidator.prototype._onModelChange = function(newVal) {
        var _this = this;
        this._modelChangeTimeOutId = InputValidator._debounce(function() {
            if (_this._validate(newVal, _this.valParam))
                _this._setValid();
            else
                _this._setInvalid()
        }, InputValidator.TIMEOUT, this._modelChangeTimeOutId)
    }
    ;
    InputValidator._debounce = function(action, time, cancelId) {
        if (cancelId) {
            clearTimeout(cancelId)
        }
        return setTimeout(action, time)
    }
    ;
    InputValidator.prototype._getValidator = function(scope, valFunction) {
        if (!valFunction) {
            console.warn("no validator present for " + this._validatorName);
            return function() {
                return false
            }
        }
        var validator = this.$parse(valFunction)(scope);
        if (!validator || typeof validator != "function") {
            console.warn("no validator found for " + this._validatorName);
            return function() {
                return false
            }
        }
        return validator
    }
    ;
    InputValidator._createQTipOptions = function(inDialog) {
        return {
            show: "evalFailed",
            hide: "evalOK",
            style: {
                name: "red",
                background: "#F78B83",
                tip: {
                    corner: "leftBottom",
                    border: 1
                },
                border: {
                    width: 1
                },
                classes: {
                    tooltip: inDialog ? "QTIPinDialog" : "QTIPnotinDialog"
                }
            },
            position: {
                corner: {
                    target: "topRight",
                    tooltip: "bottomLeft"
                }
            }
        }
    }
    ;
    InputValidator.prototype._initDependencyTrigger = function(dependencyValue) {
        var _this = this;
        var dependencies = InputValidator._parseDependencies(dependencyValue);
        this.scope.$watchGroup(dependencies, function() {
            _this._dependencyTimeOutId = InputValidator._debounce(function() {
                _this._updateHint();
                var newValue;
                if (_this._ngModel) {
                    newValue = _this._ngModel.$viewValue
                } else {
                    newValue = _this.$parse(_this._ngModelPath)(_this.scope)
                }
                if (_this._validate(newValue, _this.valParam)) {
                    _this._setValid()
                } else {
                    _this._setInvalid()
                }
            }, InputValidator.TIMEOUT, _this._dependencyTimeOutId)
        })
    }
    ;
    InputValidator._parseDependencies = function(dependencyValue) {
        switch (typeof dependencyValue) {
        case "string":
            if (dependencyValue.length > 2 && dependencyValue[0] === "[") {
                try {
                    return JSON.parse(dependencyValue)
                } catch (e) {
                    return []
                }
            }
            return dependencyValue.split(",").map(function(dependency) {
                return dependency.trim()
            });
        case "object":
            if (Array.isArray(dependencyValue)) {
                return dependencyValue
            } else {
                return []
            }
        default:
            return []
        }
    }
    ;
    InputValidator.prototype._destroy = function() {
        if (this._destroyed || !this.element.data("qtip"))
            return;
        var current = this.element.data("qtip").current;
        var theQTip = this.element.data("qtip").interfaces[current];
        theQTip.destroy();
        this._destroyed = true
    }
    ;
    InputValidator.prototype.init = function() {
        var _this = this;
        this._singleSelectedHint = this.attrs.type === "radio";
        this._destroyed = false;
        this._dirty = false;
        this._qtipOptions = InputValidator._createQTipOptions(this.attrs.inDialog != undefined);
        this._validator = this._getValidator(this.scope, this.attrs.inputValidator);
        var activeValModel = this.attrs.validatorModel;
        var passiveValModel = this.attrs.validatorModelPassive;
        var dependencies = this.attrs.validatorDependencies;
        this._ngModelPath = this.attrs.ngModel && this.attrs.ngModel.valueOf();
        if (activeValModel)
            this._ngModelPath = activeValModel;
        if (!this._ngModelPath)
            return;
        this._createHint();
        if (passiveValModel) {
            this.scope.$watch(passiveValModel, function(newVal) {
                if (_this._validate(newVal, _this.valParam))
                    _this._setValid()
            }, true)
        }
        if (dependencies) {
            this._initDependencyTrigger(dependencies)
        }
        this.scope.$watch(this._ngModelPath, function(newVal) {
            return _this._onModelChange(newVal)
        }, true);
        this.scope.$watch(function() {
            return _this.attrs.hint
        }, function() {
            return _this._updateHint()
        });
        this.scope.$on("showValidators", function() {
            _this._dirty = true;
            _this._onModelChange(InputValidator.byString(_this.scope, _this._ngModelPath))
        });
        this.scope.$on("destroyValidators", function() {
            return _this._destroy()
        });
        this.scope.$on("$destroy", function() {
            return _this._destroy()
        });
        if (this._singleSelectedHint) {
            this._checkRadioButtonCheckedAfterViewInit()
        }
    }
    ;
    InputValidator.prototype._checkRadioButtonCheckedAfterViewInit = function() {
        var _this = this;
        setTimeout(function() {
            if (_this.isChecked) {
                _this._onModelChange(_this._ngModel && _this._ngModel.$viewValue)
            }
        }, 0)
    }
    ;
    InputValidator.byString = function(o, s) {
        s = s.replace(/\[(\w+)\]/g, ".$1");
        s = s.replace(/^\./, "");
        var a = s.split(".");
        for (var i = 0, n = a.length; i < n; ++i) {
            var k = a[i];
            if (k in o) {
                o = o[k]
            } else {
                return
            }
        }
        return o
    }
    ;
    InputValidator.TIMEOUT = 100;
    return InputValidator
}();
angular.module("global").directive("inputValidator", InputValidatorDirective.factory());
var dm;
(function(dm) {
    var util;
    (function(util) {
        util.ngDialog = null;
        angular.module("global").run(["ngDialog", function(_ngDialog) {
            util.ngDialog = _ngDialog
        }
        ])
    }
    )(util = dm.util || (dm.util = {}))
}
)(dm || (dm = {}));
(function() {
    "use strict";
    var m = angular.module("global");
    var $el = angular.element;
    var isDef = angular.isDefined;
    var style = (document.body || document.documentElement).style;
    var animationEndSupport = isDef(style.animation) || isDef(style.WebkitAnimation) || isDef(style.MozAnimation) || isDef(style.MsAnimation) || isDef(style.OAnimation);
    var animationEndEvent = "animationend webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend";
    var focusableElementSelector = "a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]";
    var disabledAnimationClass = "ngdialog-disabled-animation";
    var forceElementsReload = {
        html: false,
        body: false
    };
    var scopes = {};
    var openIdStack = [];
    var keydownIsBound = false;
    var openOnePerName = true;
    m.provider("ngDialog", function() {
        var defaults = this.defaults = {
            className: "ngdialog-theme-default",
            appendClassName: "",
            disableAnimation: false,
            plain: false,
            showClose: true,
            closeByDocument: true,
            closeByEscape: true,
            closeByNavigation: false,
            appendTo: false,
            preCloseCallback: false,
            overlay: true,
            cache: true,
            trapFocus: true,
            preserveFocus: true,
            ariaAuto: true,
            ariaRole: null,
            ariaLabelledById: null,
            ariaLabelledBySelector: null,
            ariaDescribedById: null,
            ariaDescribedBySelector: null,
            bodyClassName: "ngdialog-open",
            width: null
        };
        this.setForceHtmlReload = function(_useIt) {
            forceElementsReload.html = _useIt || false
        }
        ;
        this.setForceBodyReload = function(_useIt) {
            forceElementsReload.body = _useIt || false
        }
        ;
        this.setDefaults = function(newDefaults) {
            angular.extend(defaults, newDefaults)
        }
        ;
        this.setOpenOnePerName = function(isOpenOne) {
            openOnePerName = isOpenOne || false
        }
        ;
        var globalID = 0, dialogsCount = 0, closeByDocumentHandler, defers = {};
        this.$get = ["$document", "$templateCache", "$compile", "$q", "$http", "$rootScope", "$timeout", "$window", "$controller", "$injector", function($document, $templateCache, $compile, $q, $http, $rootScope, $timeout, $window, $controller, $injector) {
            var $elements = [];
            var privateMethods = {
                onDocumentKeydown: function(event) {
                    if (event.keyCode === 27) {
                        publicMethods.close("$escape")
                    }
                },
                activate: function($dialog) {
                    var options = $dialog.data("$ngDialogOptions");
                    if (options.trapFocus) {
                        $dialog.on("keydown", privateMethods.onTrapFocusKeydown);
                        $elements["body"].on("keydown", privateMethods.onTrapFocusKeydown)
                    }
                },
                deactivate: function($dialog) {
                    $dialog.off("keydown", privateMethods.onTrapFocusKeydown);
                    $elements["body"].off("keydown", privateMethods.onTrapFocusKeydown)
                },
                deactivateAll: function(els) {
                    angular.forEach(els, function(el) {
                        var $dialog = angular.element(el);
                        privateMethods.deactivate($dialog)
                    })
                },
                setBodyPadding: function(width) {
                    var originalBodyPadding = parseInt($elements["body"].css("padding-right") || 0, 10);
                    $elements["body"].css("padding-right", originalBodyPadding + width + "px");
                    $elements["body"].data("ng-dialog-original-padding", originalBodyPadding);
                    $rootScope.$broadcast("ngDialog.setPadding", width)
                },
                resetBodyPadding: function() {
                    var originalBodyPadding = $elements["body"].data("ng-dialog-original-padding");
                    if (originalBodyPadding) {
                        $elements["body"].css("padding-right", originalBodyPadding + "px")
                    } else {
                        $elements["body"].css("padding-right", "")
                    }
                    $rootScope.$broadcast("ngDialog.setPadding", 0)
                },
                performCloseDialog: function($dialog, value) {
                    var options = $dialog.data("$ngDialogOptions");
                    var id = $dialog.attr("id");
                    var scope = scopes[id];
                    if (!scope) {
                        return
                    }
                    if (typeof $window.Hammer !== "undefined") {
                        var hammerTime = scope.hammerTime;
                        hammerTime.off("tap", closeByDocumentHandler);
                        hammerTime.destroy && hammerTime.destroy();
                        delete scope.hammerTime
                    } else {
                        $dialog.unbind("click")
                    }
                    if (dialogsCount === 1) {
                        $elements["body"].unbind("keydown", privateMethods.onDocumentKeydown)
                    }
                    if (!$dialog.hasClass("ngdialog-closing")) {
                        dialogsCount -= 1
                    }
                    var previousFocus = $dialog.data("$ngDialogPreviousFocus");
                    if (previousFocus && previousFocus.focus) {
                        previousFocus.focus()
                    }
                    $rootScope.$broadcast("ngDialog.closing", $dialog, value);
                    dialogsCount = dialogsCount < 0 ? 0 : dialogsCount;
                    if (animationEndSupport && !options.disableAnimation) {
                        scope.$destroy();
                        $dialog.unbind(animationEndEvent).bind(animationEndEvent, function() {
                            privateMethods.closeDialogElement($dialog, value)
                        }).addClass("ngdialog-closing")
                    } else {
                        scope.$destroy();
                        privateMethods.closeDialogElement($dialog, value)
                    }
                    if (defers[id]) {
                        defers[id].resolve({
                            id: id,
                            value: value,
                            $dialog: $dialog,
                            remainingDialogs: dialogsCount
                        });
                        delete defers[id]
                    }
                    if (scopes[id]) {
                        delete scopes[id]
                    }
                    openIdStack.splice(openIdStack.indexOf(id), 1);
                    if (!openIdStack.length) {
                        $elements["body"].unbind("keydown", privateMethods.onDocumentKeydown);
                        keydownIsBound = false
                    }
                },
                closeDialogElement: function($dialog, value) {
                    var options = $dialog.data("$ngDialogOptions");
                    $dialog.remove();
                    if (dialogsCount === 0) {
                        $elements["html"].removeClass(options.bodyClassName);
                        $elements["body"].removeClass(options.bodyClassName);
                        privateMethods.resetBodyPadding()
                    }
                    $rootScope.$broadcast("ngDialog.closed", $dialog, value)
                },
                closeDialog: function($dialog, value) {
                    var preCloseCallback = $dialog.data("$ngDialogPreCloseCallback");
                    if (preCloseCallback && angular.isFunction(preCloseCallback)) {
                        var preCloseCallbackResult = preCloseCallback.call($dialog, value);
                        if (angular.isObject(preCloseCallbackResult)) {
                            if (preCloseCallbackResult.closePromise) {
                                preCloseCallbackResult.closePromise.then(function() {
                                    privateMethods.performCloseDialog($dialog, value)
                                })
                            } else {
                                preCloseCallbackResult.then(function() {
                                    privateMethods.performCloseDialog($dialog, value)
                                }, function() {
                                    return
                                })
                            }
                        } else if (preCloseCallbackResult !== false) {
                            privateMethods.performCloseDialog($dialog, value)
                        }
                    } else {
                        privateMethods.performCloseDialog($dialog, value)
                    }
                },
                onTrapFocusKeydown: function(ev) {
                    var el = angular.element(ev.currentTarget);
                    var $dialog;
                    if (el.hasClass("ngdialog")) {
                        $dialog = el
                    } else {
                        $dialog = privateMethods.getActiveDialog();
                        if ($dialog === null) {
                            return
                        }
                    }
                    var isTab = ev.keyCode === 9;
                    var backward = ev.shiftKey === true;
                    if (isTab) {
                        privateMethods.handleTab($dialog, ev, backward)
                    }
                },
                handleTab: function($dialog, ev, backward) {
                    var focusableElements = privateMethods.getFocusableElements($dialog);
                    if (focusableElements.length === 0) {
                        if (document.activeElement && document.activeElement["blur"]) {
                            document.activeElement["blur"]()
                        }
                        return
                    }
                    var currentFocus = document.activeElement;
                    var focusIndex = Array.prototype.indexOf.call(focusableElements, currentFocus);
                    var isFocusIndexUnknown = focusIndex === -1;
                    var isFirstElementFocused = focusIndex === 0;
                    var isLastElementFocused = focusIndex === focusableElements.length - 1;
                    var cancelEvent = false;
                    if (backward) {
                        if (isFocusIndexUnknown || isFirstElementFocused) {
                            focusableElements[focusableElements.length - 1].focus();
                            cancelEvent = true
                        }
                    } else {
                        if (isFocusIndexUnknown || isLastElementFocused) {
                            focusableElements[0].focus();
                            cancelEvent = true
                        }
                    }
                    if (cancelEvent) {
                        ev.preventDefault();
                        ev.stopPropagation()
                    }
                },
                autoFocus: function($dialog) {
                    var dialogEl = $dialog[0];
                    var autoFocusEl = dialogEl.querySelector("*[autofocus]");
                    if (autoFocusEl !== null) {
                        autoFocusEl.focus();
                        if (document.activeElement === autoFocusEl) {
                            return
                        }
                    }
                    var focusableElements = privateMethods.getFocusableElements($dialog);
                    if (focusableElements.length > 0) {
                        focusableElements[0].focus();
                        return
                    }
                    var contentElements = privateMethods.filterVisibleElements(dialogEl.querySelectorAll("h1,h2,h3,h4,h5,h6,p,span"));
                    if (contentElements.length > 0) {
                        var contentElement = contentElements[0];
                        $el(contentElement).attr("tabindex", "-1").css("outline", "0");
                        contentElement.focus()
                    }
                },
                getFocusableElements: function($dialog) {
                    var dialogEl = $dialog[0];
                    var rawElements = dialogEl.querySelectorAll(focusableElementSelector);
                    var tabbableElements = privateMethods.filterTabbableElements(rawElements);
                    return privateMethods.filterVisibleElements(tabbableElements)
                },
                filterTabbableElements: function(els) {
                    var tabbableFocusableElements = [];
                    for (var i = 0; i < els.length; i++) {
                        var el = els[i];
                        if ($el(el).attr("tabindex") !== "-1") {
                            tabbableFocusableElements.push(el)
                        }
                    }
                    return tabbableFocusableElements
                },
                filterVisibleElements: function(els) {
                    var visibleFocusableElements = [];
                    for (var i = 0; i < els.length; i++) {
                        var el = els[i];
                        if (el.offsetWidth > 0 || el.offsetHeight > 0) {
                            visibleFocusableElements.push(el)
                        }
                    }
                    return visibleFocusableElements
                },
                getActiveDialog: function() {
                    var dialogs = document.querySelectorAll(".ngdialog");
                    if (dialogs.length === 0) {
                        return null
                    }
                    return $el(dialogs[dialogs.length - 1])
                },
                applyAriaAttributes: function($dialog, options) {
                    if (options.ariaAuto) {
                        if (!options.ariaRole) {
                            var detectedRole = privateMethods.getFocusableElements($dialog).length > 0 ? "dialog" : "alertdialog";
                            options.ariaRole = detectedRole
                        }
                        if (!options.ariaLabelledBySelector) {
                            options.ariaLabelledBySelector = "h1,h2,h3,h4,h5,h6"
                        }
                        if (!options.ariaDescribedBySelector) {
                            options.ariaDescribedBySelector = "article,section,p"
                        }
                    }
                    if (options.ariaRole) {
                        $dialog.attr("role", options.ariaRole)
                    }
                    privateMethods.applyAriaAttribute($dialog, "aria-labelledby", options.ariaLabelledById, options.ariaLabelledBySelector);
                    privateMethods.applyAriaAttribute($dialog, "aria-describedby", options.ariaDescribedById, options.ariaDescribedBySelector)
                },
                applyAriaAttribute: function($dialog, attr, id, selector) {
                    if (id) {
                        $dialog.attr(attr, id)
                    }
                    if (selector) {
                        var dialogId = $dialog.attr("id");
                        var firstMatch = $dialog[0].querySelector(selector);
                        if (!firstMatch) {
                            return
                        }
                        var generatedId = dialogId + "-" + attr;
                        $el(firstMatch).attr("id", generatedId);
                        $dialog.attr(attr, generatedId);
                        return generatedId
                    }
                },
                detectUIRouter: function() {
                    try {
                        angular.module("ui.router");
                        return true
                    } catch (err) {
                        return false
                    }
                },
                getRouterLocationEventName: function() {
                    if (privateMethods.detectUIRouter()) {
                        return "$stateChangeSuccess"
                    }
                    return "$locationChangeSuccess"
                }
            };
            var publicMethods = {
                __PRIVATE__: privateMethods,
                open: function(opts) {
                    var dialogID = null;
                    opts = opts || {};
                    if (openOnePerName && opts.name) {
                        dialogID = opts.name + " dialog";
                        if (this.isOpen(dialogID)) {
                            return
                        }
                    }
                    var options = angular.copy(defaults);
                    var localID = ++globalID;
                    dialogID = dialogID || "ngdialog" + localID;
                    openIdStack.push(dialogID);
                    if (typeof options.data !== "undefined") {
                        if (typeof opts.data === "undefined") {
                            opts.data = {}
                        }
                        opts.data = angular.merge(angular.copy(options.data), opts.data)
                    }
                    angular.extend(options, opts);
                    var defer;
                    defers[dialogID] = defer = $q.defer();
                    var scope;
                    scopes[dialogID] = scope = angular.isObject(options.scope) ? options.scope.$new() : $rootScope.$new();
                    var $dialog, $dialogParent;
                    var resolve = angular.extend({}, options.resolve);
                    angular.forEach(resolve, function(value, key) {
                        resolve[key] = angular.isString(value) ? $injector.get(value) : $injector.invoke(value, null, null, key)
                    });
                    $q.all({
                        template: loadTemplate(options.template || options.templateUrl),
                        locals: $q.all(resolve)
                    }).then(function(setup) {
                        var template = setup.template
                          , locals = setup.locals;
                        if (options.showClose) {
                            template += '<div class="ngdialog-close"></div>'
                        }
                        var hasOverlayClass = options.overlay ? "" : " ngdialog-no-overlay";
                        $dialog = $el('<div id="' + dialogID + '" class="ngdialog' + hasOverlayClass + '"></div>');
                        $dialog.html(options.overlay ? '<div class="ngdialog-overlay"></div><div class="ngdialog-content" role="document">' + template + "</div>" : '<div class="ngdialog-content" role="document">' + template + "</div>");
                        $dialog.data("$ngDialogOptions", options);
                        scope.ngDialogId = dialogID;
                        if (options.data && angular.isString(options.data)) {
                            var firstLetter = options.data.replace(/^\s*/, "")[0];
                            scope.ngDialogData = firstLetter === "{" || firstLetter === "[" ? angular.fromJson(options.data) : new String(options.data);
                            scope.ngDialogData.ngDialogId = dialogID
                        } else if (options.data && angular.isObject(options.data)) {
                            scope.ngDialogData = options.data;
                            scope.ngDialogData.ngDialogId = dialogID
                        }
                        if (options.className) {
                            $dialog.addClass(options.className)
                        }
                        if (options.appendClassName) {
                            $dialog.addClass(options.appendClassName)
                        }
                        if (options.width) {
                            var $dialogContent = $dialog[0].querySelector(".ngdialog-content");
                            if (angular.isString(options.width)) {
                                $dialogContent.style.width = options.width
                            } else {
                                $dialogContent.style.width = options.width + "px"
                            }
                        }
                        if (options.disableAnimation) {
                            $dialog.addClass(disabledAnimationClass)
                        }
                        if (options.appendTo && angular.isString(options.appendTo)) {
                            $dialogParent = angular.element(document.querySelector(options.appendTo))
                        } else {
                            $dialogParent = $elements["body"]
                        }
                        privateMethods.applyAriaAttributes($dialog, options);
                        if (options.preCloseCallback) {
                            var preCloseCallback;
                            if (angular.isFunction(options.preCloseCallback)) {
                                preCloseCallback = options.preCloseCallback
                            } else if (angular.isString(options.preCloseCallback)) {
                                if (scope) {
                                    if (angular.isFunction(scope[options.preCloseCallback])) {
                                        preCloseCallback = scope[options.preCloseCallback]
                                    } else if (scope.$parent && angular.isFunction(scope.$parent[options.preCloseCallback])) {
                                        preCloseCallback = scope.$parent[options.preCloseCallback]
                                    } else if ($rootScope && angular.isFunction($rootScope[options.preCloseCallback])) {
                                        preCloseCallback = $rootScope[options.preCloseCallback]
                                    }
                                }
                            }
                            if (preCloseCallback) {
                                $dialog.data("$ngDialogPreCloseCallback", preCloseCallback)
                            }
                        }
                        scope.closeThisDialog = function(value) {
                            privateMethods.closeDialog($dialog, value)
                        }
                        ;
                        if (options.controller && (angular.isString(options.controller) || angular.isArray(options.controller) || angular.isFunction(options.controller))) {
                            var label;
                            if (options.controllerAs && angular.isString(options.controllerAs)) {
                                label = options.controllerAs
                            }
                            var controllerInstance = $controller(options.controller, angular.extend(locals, {
                                $scope: scope,
                                $element: $dialog
                            }), true, label);
                            if (options.bindToController) {
                                angular.extend(controllerInstance.instance, {
                                    ngDialogId: scope.ngDialogId,
                                    ngDialogData: scope.ngDialogData,
                                    closeThisDialog: scope.closeThisDialog
                                })
                            }
                            if (typeof controllerInstance === "function") {
                                $dialog.data("$ngDialogControllerController", controllerInstance())
                            } else {
                                $dialog.data("$ngDialogControllerController", controllerInstance)
                            }
                        }
                        $timeout(function() {
                            var $activeDialogs = document.querySelectorAll(".ngdialog");
                            privateMethods.deactivateAll($activeDialogs);
                            $compile($dialog)(scope);
                            var widthDiffs = $window.innerWidth - $elements["body"].prop("clientWidth");
                            $elements["html"].addClass(options.bodyClassName);
                            $elements["body"].addClass(options.bodyClassName);
                            var scrollBarWidth = widthDiffs - ($window.innerWidth - $elements["body"].prop("clientWidth"));
                            if (scrollBarWidth > 0) {
                                privateMethods.setBodyPadding(scrollBarWidth)
                            }
                            $dialogParent.append($dialog);
                            privateMethods.activate($dialog);
                            if (options.trapFocus) {
                                privateMethods.autoFocus($dialog)
                            }
                            if (options.name) {
                                $rootScope.$broadcast("ngDialog.opened", {
                                    dialog: $dialog,
                                    name: options.name
                                })
                            } else {
                                $rootScope.$broadcast("ngDialog.opened", $dialog)
                            }
                        });
                        if (!keydownIsBound) {
                            $elements["body"].bind("keydown", privateMethods.onDocumentKeydown);
                            keydownIsBound = true
                        }
                        if (options.closeByNavigation) {
                            var eventName = privateMethods.getRouterLocationEventName();
                            var deregistration = $rootScope.$on(eventName, function() {
                                privateMethods.closeDialog($dialog);
                                deregistration()
                            })
                        }
                        if (options.preserveFocus) {
                            $dialog.data("$ngDialogPreviousFocus", document.activeElement)
                        }
                        closeByDocumentHandler = function(event) {
                            var isOverlay = options.closeByDocument ? $el(event.target).hasClass("ngdialog-overlay") : false;
                            var isCloseBtn = $el(event.target).hasClass("ngdialog-close");
                            if (isOverlay || isCloseBtn) {
                                publicMethods.close($dialog.attr("id"), isCloseBtn ? "$closeButton" : "$document")
                            }
                        }
                        ;
                        if (typeof $window.Hammer !== "undefined") {
                            var hammerTime = scope.hammerTime = $window.Hammer($dialog[0]);
                            hammerTime.on("tap", closeByDocumentHandler)
                        } else {
                            $dialog.bind("click", closeByDocumentHandler)
                        }
                        dialogsCount += 1;
                        return publicMethods
                    });
                    return {
                        id: dialogID,
                        closePromise: defer.promise,
                        close: function(value) {
                            privateMethods.closeDialog($dialog, value)
                        }
                    };
                    function loadTemplateUrl(tmpl, config) {
                        $rootScope.$broadcast("ngDialog.templateLoading", tmpl);
                        return $http.get(tmpl, config || {}).then(function(res) {
                            $rootScope.$broadcast("ngDialog.templateLoaded", tmpl);
                            return res.data || ""
                        })
                    }
                    function loadTemplate(tmpl) {
                        if (!tmpl) {
                            return "Empty template"
                        }
                        if (angular.isString(tmpl) && options.plain) {
                            return tmpl
                        }
                        if (typeof options.cache === "boolean" && !options.cache) {
                            return loadTemplateUrl(tmpl, {
                                cache: false
                            })
                        }
                        return loadTemplateUrl(tmpl, {
                            cache: $templateCache
                        })
                    }
                },
                openConfirm: function(opts) {
                    var defer = $q.defer();
                    var options = angular.copy(defaults);
                    opts = opts || {};
                    if (typeof options.data !== "undefined") {
                        if (typeof opts.data === "undefined") {
                            opts.data = {}
                        }
                        opts.data = angular.merge(angular.copy(options.data), opts.data)
                    }
                    angular.extend(options, opts);
                    options.scope = angular.isObject(options.scope) ? options.scope.$new() : $rootScope.$new();
                    options.scope.confirm = function(value) {
                        defer.resolve(value);
                        var $dialog = $el(document.getElementById(openResult.id));
                        privateMethods.performCloseDialog($dialog, value)
                    }
                    ;
                    var openResult = publicMethods.open(options);
                    if (openResult) {
                        openResult.closePromise.then(function(data) {
                            if (data) {
                                return defer.reject(data.value)
                            }
                            return defer.reject()
                        });
                        return defer.promise
                    }
                },
                isOpen: function(id) {
                    var $dialog = $el(document.getElementById(id));
                    return $dialog.length > 0
                },
                close: function(id, value) {
                    var $dialog = $el(document.getElementById(id));
                    if ($dialog.length) {
                        privateMethods.closeDialog($dialog, value)
                    } else {
                        if (id === "$escape") {
                            var topDialogId = openIdStack[openIdStack.length - 1];
                            $dialog = $el(document.getElementById(topDialogId));
                            if ($dialog.data("$ngDialogOptions")["closeByEscape"]) {
                                privateMethods.closeDialog($dialog, "$escape")
                            }
                        } else {
                            publicMethods.closeAll(value)
                        }
                    }
                    return publicMethods
                },
                closeAll: function(value) {
                    var $all = document.querySelectorAll(".ngdialog");
                    for (var i = $all.length - 1; i >= 0; i--) {
                        var dialog = $all[i];
                        privateMethods.closeDialog($el(dialog), value)
                    }
                },
                getOpenDialogs: function() {
                    return openIdStack
                },
                getDefaults: function() {
                    return defaults
                }
            };
            angular.forEach(["html", "body"], function(elementName) {
                $elements[elementName] = $document.find(elementName);
                if (forceElementsReload[elementName]) {
                    var eventName = privateMethods.getRouterLocationEventName();
                    $rootScope.$on(eventName, function() {
                        $elements[elementName] = $document.find(elementName)
                    })
                }
            });
            return publicMethods
        }
        ]
    });
    m.directive("ngDialog", ["ngDialog", function(ngDialog) {
        return {
            restrict: "A",
            scope: {
                ngDialogScope: "="
            },
            link: function(scope, elem, attrs) {
                elem.on("click", function(e) {
                    e.preventDefault();
                    var ngDialogScope = angular.isDefined(scope.ngDialogScope) ? scope.ngDialogScope : "noScope";
                    angular.isDefined(attrs.ngDialogClosePrevious) && ngDialog.close(attrs.ngDialogClosePrevious);
                    var defaults = ngDialog.getDefaults();
                    ngDialog.open({
                        template: attrs.ngDialog,
                        className: attrs.ngDialogClass || defaults.className,
                        appendClassName: attrs.ngDialogAppendClass,
                        controller: attrs.ngDialogController,
                        controllerAs: attrs.ngDialogControllerAs,
                        bindToController: attrs.ngDialogBindToController,
                        scope: ngDialogScope,
                        data: attrs.ngDialogData,
                        showClose: attrs.ngDialogShowClose === "false" ? false : attrs.ngDialogShowClose === "true" ? true : defaults.showClose,
                        closeByDocument: attrs.ngDialogCloseByDocument === "false" ? false : attrs.ngDialogCloseByDocument === "true" ? true : defaults.closeByDocument,
                        closeByEscape: attrs.ngDialogCloseByEscape === "false" ? false : attrs.ngDialogCloseByEscape === "true" ? true : defaults.closeByEscape,
                        overlay: attrs.ngDialogOverlay === "false" ? false : attrs.ngDialogOverlay === "true" ? true : defaults.overlay,
                        preCloseCallback: attrs.ngDialogPreCloseCallback || defaults.preCloseCallback,
                        bodyClassName: attrs.ngDialogBodyClass || defaults.bodyClassName
                    })
                })
            }
        }
    }
    ]);
    return m
}
)();
var dm;
(function(dm) {
    var util;
    (function(util) {
        var string;
        (function(string) {
            var jq = $;
            function GetLocale(lang) {
                var loc;
                try {
                    loc = lang
                } catch (e) {
                    loc = navigator.language
                }
                return loc
            }
            string.GetLocale = GetLocale;
            function FormatNumber(aNumber, aPattern, lang) {
                var pat = aPattern || "#,##0.##";
                return jq.formatNumber(aNumber, {
                    format: pat,
                    locale: GetLocale(lang)
                })
            }
            string.FormatNumber = FormatNumber;
            function FormatValue(aValue, aUnit, lang) {
                if (aValue == null) {
                    return "--- " + aUnit
                }
                var finValue = aValue;
                var finUnit = aUnit;
                if (aValue >= 1e13) {
                    finValue /= 1e12;
                    finUnit = "T" + aUnit
                } else if (aValue >= 1e10) {
                    finValue /= 1e9;
                    finUnit = "G" + aUnit
                } else if (aValue >= 1e7) {
                    finValue /= 1e6;
                    finUnit = "M" + aUnit
                } else if (aValue >= 1e4) {
                    finValue /= 1e3;
                    finUnit = "k" + aUnit
                } else {
                    finValue = aValue;
                    finUnit = aUnit
                }
                return FormatNumber(finValue, "0.## ", lang) + finUnit
            }
            string.FormatValue = FormatValue;
            function StartsWith(string1, string2) {
                return string1.lastIndexOf(string2) === 0
            }
            string.StartsWith = StartsWith;
            function GetDecimalSeparator(lang) {
                var formatted;
                try {
                    formatted = jq.formatNumber(1.1, {
                        format: "#.#",
                        locale: GetLocale(lang)
                    })
                } catch (e) {
                    formatted = 1.1.toString()
                }
                return formatted.substring(1, 2)
            }
            string.GetDecimalSeparator = GetDecimalSeparator;
            function checkRepetition(pLen, str) {
                var res = "";
                for (var i = 0; i < str.length; i++) {
                    var repeated = true;
                    for (var j = 0; j < pLen && j + i + pLen < str.length; j++)
                        repeated = repeated && str.charAt(j + i) == str.charAt(j + i + pLen);
                    if (j < pLen)
                        repeated = false;
                    if (repeated) {
                        i += pLen - 1;
                        repeated = false
                    } else {
                        res += str.charAt(i)
                    }
                }
                return res
            }
            string.checkRepetition = checkRepetition;
            function passwordStrength(password, username) {
                var score = 0;
                if (password.length < 4) {
                    return "bad"
                }
                if (password.toLowerCase() == username.toLowerCase())
                    return "bad";
                score += password.length * 4;
                score += (checkRepetition(1, password).length - password.length) * 1;
                score += (checkRepetition(2, password).length - password.length) * 1;
                score += (checkRepetition(3, password).length - password.length) * 1;
                score += (checkRepetition(4, password).length - password.length) * 1;
                if (password.match(/(.*[0-9].*[0-9].*[0-9])/))
                    score += 5;
                if (password.match(/(.*[!,@,#,$,%,^,&,*,?,_,~].*[!,@,#,$,%,^,&,*,?,_,~])/))
                    score += 5;
                if (password.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/))
                    score += 10;
                if (password.match(/([a-zA-Z])/) && password.match(/([0-9])/))
                    score += 15;
                if (password.match(/([!,@,#,$,%,^,&,*,?,_,~])/) && password.match(/([0-9])/))
                    score += 15;
                if (password.match(/([!,@,#,$,%,^,&,*,?,_,~])/) && password.match(/([a-zA-Z])/))
                    score += 15;
                if (password.match(/^\w+$/) || password.match(/^\d+$/))
                    score -= 10;
                if (score < 0)
                    score = 0;
                if (score > 100)
                    score = 100;
                if (score < 34)
                    return "bad";
                if (score < 68)
                    return "good";
                return "strong"
            }
            string.passwordStrength = passwordStrength;
            function htmlEncode(rawdata) {
                var encodeAllChars = true;
                var htmldata = "";
                for (var i = 0; i < rawdata.length; i++) {
                    var ck = rawdata.charCodeAt(i);
                    if (ck < 32)
                        continue;
                    else if (!encodeAllChars && ck < 127) {
                        if (ck == 32 || ck == 34 || ck == 38 || ck == 60 || ck == 62)
                            htmldata += "&#" + ck + ";";
                        else
                            htmldata += rawdata.charAt(i)
                    } else
                        htmldata += "&#" + ck + ";"
                }
                return htmldata
            }
            string.htmlEncode = htmlEncode;
            function htmlDecode(value) {
                if (value) {
                    var retval = $("<div/>").html(value).text();
                    return retval
                } else {
                    return ""
                }
            }
            string.htmlDecode = htmlDecode;
            function getCurrencyString(value) {
                var CurrencyMap = [];
                CurrencyMap["AED"] = "د.إ.‏";
                CurrencyMap["AFN"] = "؋";
                CurrencyMap["ALL"] = "Lek";
                CurrencyMap["AMD"] = "֏";
                CurrencyMap["ANG"] = "ANG";
                CurrencyMap["AOA"] = "AOA";
                CurrencyMap["ARS"] = "$";
                CurrencyMap["AUD"] = "$";
                CurrencyMap["AWG"] = "AWG";
                CurrencyMap["AZN"] = "ман.";
                CurrencyMap["BAM"] = "KM";
                CurrencyMap["BBD"] = "BBD";
                CurrencyMap["BDT"] = "৳";
                CurrencyMap["BGN"] = "лв.";
                CurrencyMap["BHD"] = "د.ب.‏";
                CurrencyMap["BIF"] = "BIF";
                CurrencyMap["BMD"] = "BMD";
                CurrencyMap["BND"] = "$";
                CurrencyMap["BOB"] = "$b";
                CurrencyMap["BOV"] = "BOV";
                CurrencyMap["BRL"] = "R$";
                CurrencyMap["BSD"] = "BSD";
                CurrencyMap["BTN"] = "BTN";
                CurrencyMap["BWP"] = "P";
                CurrencyMap["BYR"] = "р.";
                CurrencyMap["BZD"] = "BZ$";
                CurrencyMap["CAD"] = "$";
                CurrencyMap["CDF"] = "CDF";
                CurrencyMap["CHE"] = "CHE";
                CurrencyMap["CHF"] = "CHF";
                CurrencyMap["CHW"] = "CHW";
                CurrencyMap["CLF"] = "CLF";
                CurrencyMap["CLP"] = "$";
                CurrencyMap["CNY"] = "¥)";
                CurrencyMap["COP"] = "$";
                CurrencyMap["COU"] = "COU";
                CurrencyMap["CRC"] = "₡";
                CurrencyMap["CUC"] = "CUC";
                CurrencyMap["CUP"] = "CUP";
                CurrencyMap["CVE"] = "CVE";
                CurrencyMap["CZK"] = "Kč";
                CurrencyMap["DJF"] = "DJF)";
                CurrencyMap["DKK"] = "kr.";
                CurrencyMap["DOP"] = "RD$";
                CurrencyMap["DZD"] = "DZD";
                CurrencyMap["EGP"] = "ج.م.‏";
                CurrencyMap["ERN"] = "ERN";
                CurrencyMap["ETB"] = "ETB";
                CurrencyMap["EUR"] = "€";
                CurrencyMap["FJD"] = "FJD";
                CurrencyMap["FKP"] = "FKP";
                CurrencyMap["GBP"] = "£";
                CurrencyMap["GEL"] = "ლ.";
                CurrencyMap["GHS"] = "GHS";
                CurrencyMap["GIP"] = "GIP";
                CurrencyMap["GMD"] = "GMD";
                CurrencyMap["GNF"] = "GNF";
                CurrencyMap["GTQ"] = "Q";
                CurrencyMap["GYD"] = "GYD";
                CurrencyMap["HKD"] = "HK$";
                CurrencyMap["HNL"] = "L.";
                CurrencyMap["HRK"] = "kn";
                CurrencyMap["HTG"] = "HTG";
                CurrencyMap["HUF"] = "Ft";
                CurrencyMap["IDR"] = "Rp";
                CurrencyMap["ILS"] = "₪";
                CurrencyMap["INR"] = "₹";
                CurrencyMap["IQD"] = "د.ع.‏";
                CurrencyMap["IRR"] = "ريال";
                CurrencyMap["ISK"] = "kr.";
                CurrencyMap["JMD"] = "J$";
                CurrencyMap["JOD"] = "د.ا.‏";
                CurrencyMap["JPY"] = "¥";
                CurrencyMap["KES"] = "S";
                CurrencyMap["KGS"] = "сом";
                CurrencyMap["KHR"] = "៛";
                CurrencyMap["KMF"] = "KMF";
                CurrencyMap["KPW"] = "KPW)";
                CurrencyMap["KRW"] = "₩";
                CurrencyMap["KWD"] = "د.ك.‏";
                CurrencyMap["KYD"] = "KYD";
                CurrencyMap["KZT"] = "₸";
                CurrencyMap["LAK"] = "₭";
                CurrencyMap["LBP"] = "ل.ل.‏";
                CurrencyMap["LKR"] = "රු.";
                CurrencyMap["LRD"] = "LRD";
                CurrencyMap["LSL"] = "LSL";
                CurrencyMap["LTL"] = "Lt";
                CurrencyMap["LVL"] = "Ls";
                CurrencyMap["LYD"] = "د.ل.‏";
                CurrencyMap["MAD"] = "ⴷⵔ";
                CurrencyMap["MDL"] = "MDL";
                CurrencyMap["MGA"] = "MGA";
                CurrencyMap["MKD"] = "ден.";
                CurrencyMap["MMK"] = "MMK";
                CurrencyMap["MNT"] = "₮";
                CurrencyMap["MOP"] = "MOP";
                CurrencyMap["MRO"] = "MRO";
                CurrencyMap["MUR"] = "MUR";
                CurrencyMap["MVR"] = "ރ.";
                CurrencyMap["MWK"] = "MWK";
                CurrencyMap["MXN"] = "$";
                CurrencyMap["MXV"] = "MXV";
                CurrencyMap["MYR"] = "RM";
                CurrencyMap["MZN"] = "MZN";
                CurrencyMap["NAD"] = "NAD";
                CurrencyMap["NGN"] = "₦";
                CurrencyMap["NIO"] = "C$";
                CurrencyMap["NOK"] = "kr";
                CurrencyMap["NPR"] = "रु";
                CurrencyMap["NZD"] = "$";
                CurrencyMap["OMR"] = "ر.ع.‏";
                CurrencyMap["PAB"] = "B/.";
                CurrencyMap["PEN"] = "S/.";
                CurrencyMap["PGK"] = "PGK";
                CurrencyMap["PHP"] = "PhP";
                CurrencyMap["PKR"] = "Rs";
                CurrencyMap["PLN"] = "zł";
                CurrencyMap["PYG"] = "₲";
                CurrencyMap["QAR"] = "ر.ق.‏";
                CurrencyMap["RON"] = "RON";
                CurrencyMap["RSD"] = "din.";
                CurrencyMap["RUB"] = "р.";
                CurrencyMap["RWF"] = "RWF";
                CurrencyMap["SAR"] = "ر.س.‏";
                CurrencyMap["SBD"] = "SBD";
                CurrencyMap["SCR"] = "SCR";
                CurrencyMap["SDG"] = "SDG";
                CurrencyMap["SEK"] = "kr";
                CurrencyMap["SGD"] = "$";
                CurrencyMap["SHP"] = "SHP";
                CurrencyMap["SLL"] = "SLL";
                CurrencyMap["SOS"] = "SOS";
                CurrencyMap["SRD"] = "SRD";
                CurrencyMap["SSP"] = "SSP";
                CurrencyMap["STD"] = "STD";
                CurrencyMap["SVC"] = "SVC";
                CurrencyMap["SYP"] = "ل.س.‏";
                CurrencyMap["SZL"] = "SZL";
                CurrencyMap["THB"] = "฿";
                CurrencyMap["TJS"] = "смн";
                CurrencyMap["TMT"] = "m.";
                CurrencyMap["TND"] = "د.ت.‏";
                CurrencyMap["TOP"] = "TOP";
                CurrencyMap["TRY"] = "₺";
                CurrencyMap["TTD"] = "TT$";
                CurrencyMap["TWD"] = "NT$";
                CurrencyMap["TZS"] = "TZS";
                CurrencyMap["UAH"] = "₴";
                CurrencyMap["UGX"] = "UGX";
                CurrencyMap["USD"] = "$";
                CurrencyMap["USN"] = "USN";
                CurrencyMap["USS"] = "USS";
                CurrencyMap["UYI"] = "UYI";
                CurrencyMap["UYU"] = "$U";
                CurrencyMap["UZS"] = "so'm";
                CurrencyMap["VEF"] = "Bs.F.";
                CurrencyMap["VND"] = "₫";
                CurrencyMap["VUV"] = "VUV";
                CurrencyMap["WST"] = "WST";
                CurrencyMap["XAF"] = "XAF";
                CurrencyMap["XCD"] = "EC$";
                CurrencyMap["XDR"] = "XDR";
                CurrencyMap["XOF"] = "XOF";
                CurrencyMap["XPF"] = "XPF";
                CurrencyMap["XSU"] = "XSU";
                CurrencyMap["XUA"] = "XUA";
                CurrencyMap["YER"] = "ر.ي.‏";
                CurrencyMap["ZAR"] = "R";
                CurrencyMap["ZMW"] = "ZMW";
                CurrencyMap["ZWL"] = "ZWL";
                return CurrencyMap[value] ? CurrencyMap[value] : ""
            }
            string.getCurrencyString = getCurrencyString
        }
        )(string = util.string || (util.string = {}))
    }
    )(util = dm.util || (dm.util = {}))
}
)(dm || (dm = {}));
(function() {
    "use strict";
    function createActivationState($parse, attr, scope) {
        function unboundState(initValue) {
            var activated = initValue;
            return {
                getValue: function() {
                    return activated
                },
                setValue: function(value) {
                    activated = value
                }
            }
        }
        function oneWayBindingState(getter, scope) {
            return {
                getValue: function() {
                    return getter(scope)
                },
                setValue: function() {}
            }
        }
        function twoWayBindingState(getter, setter, scope) {
            return {
                getValue: function() {
                    return getter(scope)
                },
                setValue: function(value) {
                    if (value !== getter(scope)) {
                        scope.$apply(function() {
                            setter(scope, value)
                        })
                    }
                }
            }
        }
        if (attr !== "") {
            var getter = $parse(attr);
            if (getter.assign !== undefined) {
                return twoWayBindingState(getter, getter.assign, scope)
            } else {
                return oneWayBindingState(getter, scope)
            }
        } else {
            return unboundState(true)
        }
    }
    function createDirective(module, attrName, direction) {
        module.directive(attrName, ["$parse", "$window", function($parse, $window) {
            return {
                priority: 1,
                restrict: "A",
                link: function(scope, $el, attrs) {
                    var el = $el[0]
                      , activationState = createActivationState($parse, attrs[attrName], scope);
                    function scrollIfGlued() {
                        if (activationState.getValue() && !direction.isAttached(el)) {
                            direction.scroll(el)
                        }
                    }
                    scope.$watch(scrollIfGlued);
                    $window.addEventListener("resize", scrollIfGlued, false);
                    $el.bind("scroll", function() {
                        activationState.setValue(direction.isAttached(el))
                    })
                }
            }
        }
        ])
    }
    var bottom = {
        isAttached: function(el) {
            return el.scrollTop + el.clientHeight + 1 >= el.scrollHeight
        },
        scroll: function(el) {
            el.scrollTop = el.scrollHeight
        }
    };
    var top = {
        isAttached: function(el) {
            return el.scrollTop <= 1
        },
        scroll: function(el) {
            el.scrollTop = 0
        }
    };
    var right = {
        isAttached: function(el) {
            return el.scrollLeft + el.clientWidth + 1 >= el.scrollWidth
        },
        scroll: function(el) {
            el.scrollLeft = el.scrollWidth
        }
    };
    var left = {
        isAttached: function(el) {
            return el.scrollLeft <= 1
        },
        scroll: function(el) {
            el.scrollLeft = 0
        }
    };
    var module = angular.module("global");
    createDirective(module, "scrollGlue", bottom);
    createDirective(module, "scrollGlueTop", top);
    createDirective(module, "scrollGlueBottom", bottom);
    createDirective(module, "scrollGlueLeft", left);
    createDirective(module, "scrollGlueRight", right)
}
)();
var dm;
(function(dm) {
    var util;
    (function(util) {
        var solarAPIRequest;
        (function(solarAPIRequest) {
            function checkResponse(aCfgResponse) {
                var statusCode = 0;
                try {
                    statusCode = aCfgResponse.Head.Status.Code;
                    var reason = aCfgResponse.Head.Status.Reason;
                    var statusMessage = aCfgResponse.Head.Status.UserMessage;
                    var data = aCfgResponse.Body.Data;
                    if (statusCode == undefined)
                        return false;
                    if (reason == undefined)
                        return false;
                    if (statusMessage == undefined)
                        return false;
                    if (data == undefined)
                        return false;
                    return true
                } catch (e) {
                    aCfgResponse.Head = {
                        Status: {
                            Code: -9999,
                            Reason: "no legal cfg response received",
                            UserMessage: "{{ILLEGAL_CONFIG_RESPONSE}}",
                            ErrorDetail: {
                                Nodes: []
                            }
                        }
                    };
                    return false
                }
                return true
            }
            function get(resource) {
                return dm.ngjs.$q(function(resolve, reject) {
                    dm.ngjs.$http.get(resource).then(function(data) {
                        data = data.data;
                        if (checkResponse(data) && data.Head.Status.Code == 0) {
                            resolve(data.Body.Data)
                        } else {
                            reject(data)
                        }
                    }, function() {
                        reject("FAILURE")
                    })
                })
            }
            solarAPIRequest.get = get
        }
        )(solarAPIRequest = util.solarAPIRequest || (util.solarAPIRequest = {}))
    }
    )(util = dm.util || (dm.util = {}))
}
)(dm || (dm = {}));
angular.module("global").service("solarAPIRequest", ["$http", "$q", function($http, $q) {
    var checkResponse = function(aCfgResponse) {
        var statusCode = 0;
        try {
            statusCode = aCfgResponse.Head.Status.Code;
            var reason = aCfgResponse.Head.Status.Reason;
            var statusMessage = aCfgResponse.Head.Status.UserMessage;
            var data = aCfgResponse.Body.Data;
            if (statusCode == undefined)
                return false;
            if (reason == undefined)
                return false;
            if (statusMessage == undefined)
                return false;
            if (data == undefined)
                return false;
            return true
        } catch (e) {
            aCfgResponse.Head = {
                Status: {
                    Code: -9999,
                    Reason: "no legal cfg response received",
                    UserMessage: "{{ILLEGAL_CONFIG_RESPONSE}}",
                    ErrorDetail: {
                        Nodes: []
                    }
                }
            };
            return false
        }
        return true
    };
    this.get = function(resource) {
        return $q(function(resolve, reject) {
            $http.get(resource).then(function(data) {
                data = data.data;
                if (checkResponse(data) && data.Head.Status.Code == 0) {
                    resolve(data.Body.Data)
                } else {
                    reject(data)
                }
            }, function() {
                reject("FAILURE")
            })
        })
    }
}
]);
var dm;
(function(dm) {
    var config;
    (function(config) {
        var exportLimits;
        (function(exportLimits) {
            var ActivePowerMode;
            (function(ActivePowerMode) {
                ActivePowerMode["off"] = "off";
                ActivePowerMode["entireSystem"] = "entireSystem";
                ActivePowerMode["weakestPhase"] = "weakestPhase"
            }
            )(ActivePowerMode = exportLimits.ActivePowerMode || (exportLimits.ActivePowerMode = {}));
            var DisplayMode;
            (function(DisplayMode) {
                DisplayMode["absolute"] = "absolute";
                DisplayMode["relative"] = "relative"
            }
            )(DisplayMode = exportLimits.DisplayMode || (exportLimits.DisplayMode = {}))
        }
        )(exportLimits = config.exportLimits || (config.exportLimits = {}))
    }
    )(config = dm.config || (dm.config = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var validators;
    (function(validators) {
        var Validators = function() {
            function Validators() {}
            Validators.numberOrDefault = function(compareValue, defaultValue) {
                if (defaultValue === void 0) {
                    defaultValue = 0
                }
                return isNaN(compareValue) ? defaultValue : compareValue
            }
            ;
            Validators.rangeValidator = function(range, value) {
                try {
                    var compareValue = Number(value);
                    if (isNaN(compareValue) || isNaN(range.min) || isNaN(range.max)) {
                        return false
                    }
                    return Math.max(range.min, -Validators.CPP_FLOAT_MAX) <= compareValue && compareValue <= Math.min(range.max, Validators.CPP_FLOAT_MAX)
                } catch (e) {
                    console.log(e);
                    return false
                }
            }
            ;
            Validators.CPP_FLOAT_MAX = 340282e33;
            return Validators
        }();
        validators.Validators = Validators
    }
    )(validators = dm.validators || (dm.validators = {}))
}
)(dm || (dm = {}));
angular.module("backendComm", ["global"]);
angular.module("backendComm").run(function() {
    var extractPassConfig = function(request, deferred, user) {
        request.then(function(response) {
            var rsp = angular.copy(response);
            try {
                delete rsp.data.Body.Data.pass;
                rsp.data.Body.Data[user] = angular.copy(response.data.Body.Data.pass[user]);
                deferred.resolve(rsp)
            } catch (e) {
                deferred.resolve(response)
            }
        }, deferred.reject)
    };
    var filterPassConfig = function(rootRequest, request, path) {
        if (path.indexOf("/config/pass/") < 0)
            return;
        var subPaths = path.split("/");
        if (subPaths.length <= 3)
            return;
        if (!rootRequest)
            rootRequest = dm.ngjs.$http.get("/config/pass/");
        extractPassConfig(rootRequest, request, subPaths[3]);
        return rootRequest
    };
    dm.util.ajaxRequest.registerRequestFilter("GET", "/config/pass/", filterPassConfig)
});
angular.module("aboutSystem", ["global"]);
angular.module("aboutSystem").factory("aboutSystemModel", ["$window", "$http", function($window, $http) {
    return dm.util.DataFetcher.newInstance(function() {
        return $http.get("/admincgi-bin/aboutSystem.cgi")
    }, function(response) {
        if (response.data) {
            var _data = {};
            angular.copy(response.data, _data);
            _data.txtUserAgent = $window.navigator.userAgent;
            return _data
        }
    })
}
]);
angular.module("aboutSystem").service("ioStateModel", ["$http", function($http) {
    var self = this;
    var df = dm.util.DataFetcher.newInstance(function() {
        return $http.get("/status/io/gpios/")
    }, function(response) {
        if (!response.data)
            return;
        if (!response.data.Body.Data.gpios)
            return;
        var data = response.data.Body.Data.gpios;
        var direction = [];
        var value = [];
        if (data && data instanceof Array) {
            for (var i = 0; i < data.length; i++) {
                if (typeof data[i].direction == "string")
                    direction.push(data[i].direction.toUpperCase());
                if (typeof data[i].value == "boolean")
                    value.push(data[i].value ? "on" : "off")
            }
        }
        angular.copy(direction, self.direction);
        angular.copy(value, self.value)
    });
    this.direction = [];
    this.value = [];
    this.subscribe = df.subscribe;
    this.unsubscribe = df.unsubscribe
}
]);
angular.module("aboutSystem").service("aboutModel", ["$http", "ioStateModel", "aboutSystemModel", function($http, ioStateModel, aboutSystemModel) {
    var self = this;
    this.io = ioStateModel;
    this.about = aboutSystemModel.data;
    this.getDataReady = function() {
        return !angular.equals(self.about, {}) && !angular.equals(self.io.direction, []) && !angular.equals(self.io.value, [])
    }
    ;
    this.startPolling = function() {
        ioStateModel.subscribe("aboutSystemModel", 6e4);
        aboutSystemModel.subscribe("aboutSystemModel", 6e4)
    }
    ;
    this.stopPolling = function() {
        ioStateModel.unsubscribe("aboutSystemModel");
        aboutSystemModel.unsubscribe("aboutSystemModel")
    }
    ;
    this.sendRebootCommand = function() {
        return $http.get("/admincgi-bin/reboot.cgi")
    }
    ;
    this.sendRevertCommand = function(scope) {
        return $http.get("/admincgi-bin/configRevert.cgi?scope=" + scope)
    }
}
]);
var dm;
(function(dm) {
    var model;
    (function(model) {
        var Timespan = function() {
            function Timespan() {}
            return Timespan
        }();
        var AboutSystem = function(_super) {
            __extends(AboutSystem, _super);
            function AboutSystem(id, scope) {
                var _this = _super.call(this, id, scope) || this;
                _this.io = {};
                _this.batteries = [];
                _this.inverters = new Array;
                _this.meters = new Array;
                _this.ohmPilot = new Array;
                _this.operatingTime = {
                    total: null,
                    backup: null
                };
                _this.aboutSystem = {};
                _this.isMeterConfigured = false;
                _this.ohmPilotPairButtonEnable = true;
                _this.ohmPilotConfig = null;
                _this.ohmPilotComponent = null;
                _this.connectedOhmpilotSerial = null;
                return _this
            }
            AboutSystem.prototype.createTimeSpanFromSeconds = function(seconds) {
                var timespan = new Timespan;
                timespan.days = Math.floor(seconds / 86400);
                var remainder = seconds % 86400;
                timespan.hours = Math.floor(remainder / 3600);
                remainder = remainder % 3600;
                timespan.minutes = Math.floor(remainder / 60);
                remainder = remainder % 60;
                timespan.seconds = remainder;
                return timespan
            }
            ;
            AboutSystem.prototype.prepareOhmpilotData = function(ohmPilotState) {
                var self = this;
                self.ohmPilot = new Array;
                $.each(ohmPilotState, function(id, ohmpilot) {
                    var op = {};
                    op.Serial = ohmpilot.key.serial || "";
                    op.pairedWith = ohmpilot.details.MasterId || "";
                    op.SWrev = ohmpilot.details.Software || "";
                    op.HWrev = ohmpilot.details.Hardware || "";
                    self.ohmPilot.push(op)
                })
            }
            ;
            AboutSystem.prototype.startOhmPilotPolling = function(serial) {
                var self = this;
                this.ohmPilotPairButtonEnable = false;
                dm.ngjs.$q.all([dm.util.configRequest.get("/components/available"), dm.util.configRequest.get("/components/OhmPilot/attributes")]).then(function(responses) {
                    var ohmPilotState = self.getAvailableDevices("OhmPilot", responses[0]);
                    self.prepareOhmpilotData(ohmPilotState);
                    self.ohmPilotComponent = responses[1]
                }).finally(function() {
                    if (!self.getOhmpilotEnable(serial)) {
                        dm.ngjs.$timeout(function() {
                            self.startOhmPilotPolling(serial)
                        }, 5e3)
                    } else {
                        self.ohmPilotPairButtonEnable = true
                    }
                })
            }
            ;
            AboutSystem.prototype.toggleShowAccuDetails = function(index) {
                if (this.batteries[index].modules.length == 0)
                    return;
                this.batteries[index].showAccuDetails = !this.batteries[index].showAccuDetails
            }
            ;
            AboutSystem.prototype.getAvailableDevices = function(type, availableDevices) {
                var ret = [];
                for (var idx in availableDevices) {
                    var device = availableDevices[idx];
                    if (device.key["device-group"] == type) {
                        ret.push(device)
                    }
                }
                return ret
            }
            ;
            AboutSystem.prototype.getOhmpilotEnable = function(newSerial) {
                for (var compIdx in this.ohmPilotComponent) {
                    var comp = this.ohmPilotComponent[compIdx];
                    if (comp["serial"] == newSerial && comp["[ENABLE]"] == "true" && comp["[VISIBLE]"] == "true")
                        return true
                }
                return false
            }
            ;
            AboutSystem.prototype._load = function() {
                var _this = this;
                var modifySNumber = function(s) {
                    var first = 0
                      , part = 3
                      , last = -1;
                    return s.slice(first, part) + "-" + s.slice(part, last) + "-" + s.slice(last)
                };
                var daloState = dm.model.DaloState.getInstance("DaloStateModel", this._scopes);
                var aboutSysQuery = dm.ngjs.$http.get("/admincgi-bin/aboutSystem.cgi");
                var ioQuery = dm.util.configRequest.get("/status/io/gpios/");
                var invertersQuery = dm.util.configRequest.get("/components/Inverter/readable");
                var meterListQuery = dm.util.configRequest.get("/components/PowerMeter/readable");
                var meterConfigQuery = dm.util.configRequest.get("/config/meter/admin/primary/");
                var componentsAvailableQuery = dm.util.configRequest.get("/components/available");
                var configOhmpilot = dm.util.configRequest.get("/config/ohmpilot/");
                var componentOhmpilot = dm.util.configRequest.get("/components/OhmPilot/attributes");
                var queries = [];
                queries.push(aboutSysQuery, ioQuery, invertersQuery, meterListQuery, meterConfigQuery, componentsAvailableQuery, configOhmpilot, componentOhmpilot, daloState.loadingPromise);
                return daloState.loadingPromise.then(function() {
                    if (daloState.isHybrid()) {
                        queries.push(dm.util.configRequest.get("/components/BatteryManagementSystem/attributes"));
                        queries.push(dm.util.configRequest.get("/components/BatteryCell/attributes"))
                    }
                    return dm.ngjs.$q.all(queries).then(function(responses) {
                        _this.aboutSystem = responses[0].data;
                        _this.aboutSystem.txtUserAgent = dm.ngjs.$window.navigator.userAgent;
                        var ioResponse = responses[1].gpios;
                        var invertersResponse = responses[2];
                        var meterListResponse = responses[3];
                        try {
                            var meterConfigResponse = responses[4];
                            _this.isMeterConfigured = meterConfigResponse.primary.available
                        } catch (e) {
                            _this.isMeterConfigured = false
                        }
                        var ohmPilotState = _this.getAvailableDevices("OhmPilot", responses[5]);
                        _this.prepareOhmpilotData(ohmPilotState);
                        _this.ohmPilotConfig = responses[6];
                        _this.ohmPilotComponent = responses[7];
                        var self = _this;
                        _this.io.direction = new Array;
                        _this.io.value = new Array;
                        _this.io.name = new Array;
                        $.each(ioResponse, function(id, io) {
                            if (typeof io.direction == "string")
                                self.io.direction.push(io.direction.toUpperCase());
                            if (typeof io.value == "boolean")
                                self.io.value.push(io.value ? "on" : "off");
                            if (typeof io.name == "string")
                                self.io.name.push(io.name.indexOf("IO") == 0 ? "IO" : "I")
                        });
                        self.inverters = new Array;
                        $.each(invertersResponse, function(id, inverter) {
                            var inverterAttributes = inverter["attributes"];
                            var iv = {};
                            iv.pmc = inverterAttributes["CTRL.pmc"];
                            iv.model = inverterAttributes.model;
                            iv.serial = inverterAttributes.serial;
                            iv.id = inverterAttributes.addr - 96;
                            self.inverters.push(iv);
                            var inverterChannels = inverter["channels"];
                            if (inverterChannels.Inverter_Operating_Time_Total && !self.operatingTime.total) {
                                var total = self.createTimeSpanFromSeconds(inverterChannels.Inverter_Operating_Time_Total);
                                self.operatingTime.total = total
                            }
                            if (inverterChannels.Inverter_Operating_Time_Backup && !self.operatingTime.backup) {
                                var backuptime = self.createTimeSpanFromSeconds(inverterChannels.Inverter_Operating_Time_Backup);
                                self.operatingTime.backup = backuptime
                            }
                        });
                        self.meters = new Array;
                        $.each(meterListResponse, function(id, aMeter) {
                            var meterAttributes = aMeter["attributes"];
                            var meterChannels = aMeter["channels"];
                            if (!meterChannels)
                                return;
                            if (!meterChannels.Enable)
                                return;
                            if (!meterChannels.Visible)
                                return;
                            if (!meterAttributes)
                                return;
                            var meter = {};
                            meter.id = meterAttributes.addr;
                            meter.model = meterAttributes.model;
                            meter.serial = meterAttributes.serial;
                            switch (meterChannels.Meter_Location_Current) {
                            case 0:
                                meter.location = "METER_POS_1";
                                break;
                            case 1:
                                meter.location = "METER_POS_2";
                                break;
                            case 3:
                                meter.location = "GEN_METER";
                                break;
                            default:
                                meter.location = "CON_METER";
                                break
                            }
                            if (1 == meterAttributes.addr)
                                meter.isprimary = "ABOUTSYSTEM_METERPRIMARY";
                            else
                                meter.isprimary = "";
                            self.meters.push(meter)
                        });
                        if (daloState.isHybrid()) {
                            _this.batteries = [];
                            for (var batIdx in responses[9]) {
                                var self = _this;
                                var batteryResponse = responses[9][batIdx];
                                var moduleListResponse = responses[10];
                                if (!batteryResponse["[ENABLE]"] || batteryResponse["[ENABLE]"] === "false" || !batteryResponse["[VISIBLE]"] || batteryResponse["[VISIBLE]"] === "false")
                                    continue;
                                var bat = {};
                                var batData = JSON.parse(batteryResponse.nameplate);
                                bat.serial = batData.serial;
                                bat.model = batData.model;
                                bat.plateCapacity = batData.capacity_wh;
                                bat.showAccuDetails = false;
                                bat.modules = new Array;
                                var childModules = [];
                                if (batteryResponse.children)
                                    childModules = batteryResponse.children.split(",");
                                for (var idx = 0; idx < childModules.length; idx++) {
                                    var mod = {};
                                    var splits = childModules[idx].split("/");
                                    var id = (parseInt(splits[1]) << 16) + parseInt(splits[2]);
                                    if (moduleListResponse[id] != undefined) {
                                        mod.capacity = moduleListResponse[id].cap;
                                        mod.serial = moduleListResponse[id].serial.length == 0 ? "---" : modifySNumber(moduleListResponse[id].serial);
                                        bat.modules.push(mod)
                                    }
                                }
                                _this.batteries.push(bat)
                            }
                        }
                    }, function(errors) {})
                })
            }
            ;
            return AboutSystem
        }(model.Base);
        model.AboutSystem = AboutSystem
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
angular.module("aboutSystem").controller("aboutCtrl", ["$scope", "aboutModel", "standardDialog", "loginService", function($scope, aboutModel, standardDialog, loginService) {
    var _private = {
        pollTimer: undefined
    };
    $scope.daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    var stdDialog = new dm.standardDialog.StandardDialog($scope);
    var newOhmPilotSerial = null;
    $scope.model = null;
    $scope.aboutSystemLoading = true;
    $scope.SDP_State = "hide";
    $scope.ui = {
        revertScope: "normal",
        isWlanAvailable: $scope.daloState.isWlanAvailable,
        showBtnDownload: false,
        ohmpilotConnectedWithThisDM: false,
        ohmpilotConnectedWithOtherDM: false
    };
    var onDocumentDoubleClick = function(evt) {
        if (!$scope.ui.showBtnDownload && evt.ctrlKey && evt.altKey) {
            $scope.$apply(function(scope) {
                scope.ui.showBtnDownload = true
            });
            $(document).off("dblclick", onDocumentDoubleClick)
        }
    };
    $(document).on("dblclick", onDocumentDoubleClick);
    $scope.init = function() {
        $scope.daloState.loadingPromise.then(function() {
            if ($scope.model == undefined)
                $scope.model = dm.model.AboutSystem.getInstance("AboutSystem", $scope);
            $scope.model.loadingPromise.then(function() {
                $scope.aboutSystemLoading = false;
                if (!_private.pollTimer)
                    _private.pollTimer = dm.ngjs.$interval($scope.model.load, 6e4)
            }, function(error) {
                $scope.aboutSystemLoading = false;
                if (error.status == 401) {
                    dm.ngjs.$state.go("login", {
                        previousState: "aboutSystem",
                        requiredUser: "admin"
                    })
                }
            })
        }, function() {
            $scope.aboutSystemLoading = false;
            console.log("failed to load!!")
        })
    }
    ;
    $scope.onOffColor = function(onOff) {
        if (onOff === "on")
            return "green";
        else
            return "black"
    }
    ;
    $scope.doReboot = function() {
        aboutModel.sendRebootCommand().then(function() {
            stdDialog.showDialog("DoRebootTemplate")
        })
    }
    ;
    $scope.isMeterConfigured = function() {
        return $scope.model.isMeterConfigured
    }
    ;
    $scope.connectedWithThisDM = function(daloId, serial) {
        return $scope.isMeterConfigured() && $scope.daloState.daloID == daloId && this.model.getOhmpilotEnable(serial)
    }
    ;
    $scope.checkOhmPilotConnected = function(serial) {
        newOhmPilotSerial = serial;
        $scope.ui.ohmpilotConnectedWithThisDM = false;
        $scope.ui.ohmpilotConnectedWithOtherDM = false;
        for (var i = 0; i < $scope.model.ohmPilot.length; i++) {
            if ($scope.model.ohmPilot[i].pairedWith == $scope.daloState.daloID) {
                $scope.ui.ohmpilotConnectedWithThisDM = true
            }
            if ($scope.model.ohmPilot[i].Serial == serial)
                if ($scope.model.ohmPilot[i].pairedWith != $scope.daloState.daloID && $scope.model.ohmPilot[i].pairedWith.length > 0)
                    $scope.ui.ohmpilotConnectedWithOtherDM = true
        }
        if (!$scope.ui.ohmpilotConnectedWithThisDM && !$scope.ui.ohmpilotConnectedWithOtherDM)
            $scope.connectWithOhmPilot();
        else
            stdDialog.showDialog("HintOhmPilot")
    }
    ;
    $scope.connectWithOhmPilot = function() {
        var data = {
            ohmpilot: {
                selected: newOhmPilotSerial
            }
        };
        $scope.model.ohmPilotPairButtonEnable = false;
        dm.ngjs.$http.post("/config/ohmpilot/", data).then(function(response) {
            try {
                if (response.status == 200 && response.data["Head"].Status.Code == 0) {
                    $scope.model.startOhmPilotPolling(newOhmPilotSerial);
                    return
                }
                throw ""
            } catch (e) {
                dm.util.configRequest.showCfgFailureDialog()
            }
        })
    }
    ;
    $scope.sendRebootAfterRevert = function() {
        aboutModel.sendRebootCommand()
    }
    ;
    $scope.doRevert = function() {
        aboutModel.sendRevertCommand($scope.ui.revertScope).then(function() {
            stdDialog.showDialog("DoRevertTemplate");
            loginService.removeCredentials()
        })
    }
    ;
    var getPowerMode = function() {
        return dm.ngjs.$http.get("/solar_api/v1/GetPowerFlowRealtimeData.fcgi")
    };
    $scope.reboot = function() {
        getPowerMode().then(function(response) {
            if (!response)
                return;
            var PowerFlow = response;
            if (PowerFlow.data && PowerFlow.data.Body && PowerFlow.data.Body.Data && PowerFlow.data.Body.Data.Site && PowerFlow.data.Body.Data.Site.BackupMode) {
                stdDialog.showDialog("RebootImpossibleTemplate")
            } else {
                stdDialog.showDialog("RebootTemplate")
            }
        })
    }
    ;
    $scope.revertConfig = function() {
        getPowerMode().then(function(response) {
            if (!response)
                return;
            var PowerFlow = response;
            if (PowerFlow.data && PowerFlow.data.Body && PowerFlow.data.Body.Data && PowerFlow.data.Body.Data.Site && PowerFlow.data.Body.Data.Site.BackupMode) {
                stdDialog.showDialog("RevertImpossibleTemplate")
            } else {
                stdDialog.showDialog("RevertConfigTemplate")
            }
        })
    }
    ;
    $scope.onHrClick = function() {
        if (this.ui.showBtnDownload)
            return;
        if (!this._lastClick) {
            this._lastClick = new Date;
            return
        }
        var now = new Date;
        var diffSec = (now - this._lastClick) / 1e3;
        this._lastClick = now;
        if (diffSec < 5) {
            this.ui.showBtnDownload = true
        }
    }
    ;
    $scope.onDownloadClick = function() {
        $scope.SDP_State = "prepare";
        dm.ngjs.$http.get("/admincgi-bin/getsdp.cgi").then(function() {
            $scope.SDP_State = "finished"
        }, function() {
            $scope.SDP_State = "hide"
        })
    }
    ;
    loginService.waitForLogin(true).then(function() {
        var user = loginService.getLoggedInUser();
        if (user == "admin" || user == "service" || user == "today")
            $scope.init();
        else
            dm.ngjs.$state.go("login", {
                previousState: "aboutSystem",
                requiredUser: "admin"
            })
    });
    $scope.$on("$destroy", function() {
        if (_private.pollTimer) {
            dm.ngjs.$interval.cancel(_private.pollTimer);
            _private.pollTimer = undefined
        }
    })
}
]);
angular.module("dataModels", ["global"]);
var dm;
(function(dm) {
    var model;
    (function(model) {
        var BatteryNowData;
        (function(BatteryNowData) {
            var _instance = null;
            function transformResponse(response) {
                if (!response.data)
                    return;
                if (response.data.Head.Status.Code != 0)
                    return;
                var store = {
                    DataValid: false,
                    TimeStamp: null,
                    Enable: false,
                    Visible: false,
                    Current_DC: null,
                    Current_DC_Minimum: null,
                    Current_DC_Maximum: null,
                    Current_DC_Charge_Target: null,
                    Voltage_DC: null,
                    Voltage_DC_Minimum_Cell: null,
                    Voltage_DC_Maximum_Cell: null,
                    Voltage_DC_Minimum_System: null,
                    Voltage_DC_Maximum_System: null,
                    Voltage_DC_Average_Cell: null,
                    Voltage_DC_Charge_Target: null,
                    PowerReal_DC: null,
                    StateOfCharge_Wh: null,
                    StateOfCharge_Relative: null,
                    StateOfHealth_Relative: null,
                    Temperature_Cell: null,
                    Temperature_Cell_Minimum: null,
                    Temperature_Cell_Maximum: null,
                    Status_Powerstage: null,
                    Status_Battery: null,
                    Status_BatteryManagmentSystem: null
                };
                var firstID = undefined;
                for (firstID in response.data.Body.Data)
                    break;
                try {
                    $.extend(store, response.data.Body.Data[firstID]);
                    store.TimeStamp = response.data.Body.Data[firstID].TimeStamp;
                    store.Enable = response.data.Body.Data[firstID].Enable != 0;
                    store.Visible = response.data.Body.Data[firstID].Visible != 0;
                    store.DataValid = true
                } catch (e) {
                    store.DataValid = false
                }
                return store
            }
            function newInstance() {
                return dm.util.DataFetcher.newInstance(function() {
                    return dm.ngjs.$http.get("/components/BatteryManagementSystem/channels/readable")
                }, transformResponse, undefined, false)
            }
            function getInstance() {
                if (!_instance)
                    _instance = newInstance();
                return _instance
            }
            BatteryNowData.getInstance = getInstance
        }
        )(BatteryNowData = model.BatteryNowData || (model.BatteryNowData = {}))
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var BatteryConfig = function(_super) {
            __extends(BatteryConfig, _super);
            function BatteryConfig() {
                var _this = _super !== null && _super.apply(this, arguments) || this;
                _this.data = null;
                _this.cNone = "none";
                _this.cLG = "lg_chem_resu_h";
                _this.cLGmin = 12;
                _this.cLGmax = 98;
                _this.cLGCustomMax = 100;
                _this.cBYD = "byd_b_box_hv";
                _this.cBYDmin = 5;
                _this.cBYDmax = 100;
                _this.cFRONIUS = "sony";
                _this.cFRONIUSmin = 0;
                _this.cFRONIUSmax = 100;
                _this.isMinMaxSOCFeatureAvailable = false;
                _this.metaConfig = {
                    MIN_SOC: 0,
                    MAX_SOC: 100
                };
                _this.BackupReservedBorder = {
                    MIN: 7,
                    MAX: 95
                };
                _this._validators = {
                    "data.BAT_M0_SOC_MIN": function(val) {
                        if (!_this.isMinMaxSOCFeatureAvailable)
                            return true;
                        var compData = _this.data;
                        if (!dm.util.helpers.isInteger(val))
                            return false;
                        return val >= _this.metaConfig.MIN_SOC && val <= compData.BAT_M0_SOC_MAX
                    },
                    "data.BAT_M0_SOC_MAX": function(val) {
                        if (!_this.isMinMaxSOCFeatureAvailable)
                            return true;
                        var compData = _this.data;
                        if (!dm.util.helpers.isInteger(val))
                            return false;
                        return val >= compData.BAT_M0_SOC_MIN && val <= _this.metaConfig.MAX_SOC && compData.HYB_BACKUP_RESERVED <= val
                    },
                    "data.HYB_BACKUP_RESERVED": function(val) {
                        var compData = _this.data;
                        return val >= _this.BackupReservedBorder.MIN && val <= Math.min(_this.BackupReservedBorder.MAX, compData.BAT_M0_SOC_MAX) && compData.HYB_BACKUP_CRITICALSOC <= val
                    },
                    "data.HYB_BACKUP_CRITICALSOC": function(val) {
                        var compData = _this.data;
                        return val >= _this.BackupReservedBorder.MIN && val <= compData.HYB_BACKUP_RESERVED
                    }
                };
                _this.getBackupReservedBorder = function() {
                    return {
                        MIN: Math.max(_this.BackupReservedBorder.MIN, _this.data.HYB_BACKUP_CRITICALSOC),
                        MAX: Math.min(_this.BackupReservedBorder.MAX, _this.data.BAT_M0_SOC_MAX)
                    }
                }
                ;
                _this.getCriticalSoCBorder = function() {
                    return {
                        MIN: _this.BackupReservedBorder.MIN,
                        MAX: _this.data.HYB_BACKUP_RESERVED
                    }
                }
                ;
                return _this
            }
            BatteryConfig.prototype._load = function() {
                var _this = this;
                return dm.ngjs.$q.all([dm.util.configRequest.get("/config/batteries/")]).then(function(responses) {
                    var data = responses[0].batteries;
                    _this.isMinMaxSOCFeatureAvailable = !(data.BAT_M0_SOC_MIN == undefined || data.BAT_M0_SOC_MAX == undefined || data.BAT_M0_SOC_MODE == undefined);
                    _this.setOrigData("data", data)
                })
            }
            ;
            BatteryConfig.prototype.getBatteryType = function() {
                return this.data.BAT_TYPE
            }
            ;
            BatteryConfig.prototype.setBatteryType = function(type) {
                this.data.BAT_TYPE = type;
                this.setSOCCompareValues();
                this.setDefaultSOCValues()
            }
            ;
            BatteryConfig.prototype.getSoCMode = function() {
                return this.data.BAT_M0_SOC_MODE
            }
            ;
            BatteryConfig.prototype.setSoCMode = function(mode) {
                this.data.BAT_M0_SOC_MODE = mode
            }
            ;
            BatteryConfig.prototype.setDefaultSOCValues = function() {
                if (!this.isMinMaxSOCFeatureAvailable)
                    return;
                if (this.data.BAT_TYPE == this.cLG) {
                    this.data.BAT_M0_SOC_MIN = this.cLGmin;
                    this.data.BAT_M0_SOC_MAX = this.cLGmax
                } else if (this.data.BAT_TYPE == this.cBYD) {
                    this.data.BAT_M0_SOC_MIN = this.cBYDmin;
                    this.data.BAT_M0_SOC_MAX = this.cBYDmax
                } else {
                    this.data.BAT_M0_SOC_MIN = this.cFRONIUSmin;
                    this.data.BAT_M0_SOC_MAX = this.cFRONIUSmax
                }
                this.data.BAT_M0_SOC_MODE = "auto"
            }
            ;
            BatteryConfig.prototype.setSOCCompareValues = function() {
                if (this.data.BAT_TYPE == this.cLG) {
                    this.metaConfig.MIN_SOC = this.cLGmin;
                    this.metaConfig.MAX_SOC = this.cLGCustomMax
                } else if (this.data.BAT_TYPE == this.cBYD) {
                    this.metaConfig.MIN_SOC = this.cBYDmin;
                    this.metaConfig.MAX_SOC = this.cBYDmax
                } else {
                    this.metaConfig.MIN_SOC = this.cFRONIUSmin;
                    this.metaConfig.MAX_SOC = this.cFRONIUSmax
                }
            }
            ;
            BatteryConfig.prototype.changeSoCMode = function() {
                if (this.isSoCModeAuto())
                    this.setDefaultSOCValues();
                this.setSOCCompareValues()
            }
            ;
            BatteryConfig.prototype.isSoCModeAuto = function() {
                return this.getSoCMode() == "auto"
            }
            ;
            BatteryConfig.prototype._save = function(param) {
                var data2save = angular.copy(this.data);
                return dm.util.configRequest.saveDef("/config/batteries/", {
                    batteries: data2save
                })
            }
            ;
            return BatteryConfig
        }(model.Base);
        model.BatteryConfig = BatteryConfig
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var InverterInfo;
        (function(InverterInfo) {
            var _instance = null;
            function newInstance() {
                return dm.util.DataFetcher.newInstance(function() {
                    return dm.ngjs.$http.get("/solar_api/v1/GetInverterInfo.cgi")
                }, function(response) {
                    if (!response.data)
                        return;
                    if (response.data.Head.Status.Code != 0)
                        return;
                    var store = {
                        DataValid: false,
                        DeviceInfos: {},
                        Count: Number.NaN,
                        PVPower: {
                            Unit: "W",
                            Sum: Number.NaN
                        }
                    };
                    var dataNode = response.data.Body.Data;
                    store.PVPower.Sum = 0;
                    store.Count = 0;
                    for (var deviceId in dataNode) {
                        if (dataNode[deviceId].Show != 0) {
                            var devicePVPower = dataNode[deviceId]["PVPower"];
                            store.DeviceInfos[deviceId] = $.extend({}, dataNode[deviceId]);
                            store.PVPower.Sum += devicePVPower == -1 ? Number.NaN : devicePVPower;
                            store.Count++
                        }
                    }
                    store.DataValid = true;
                    return store
                }, undefined, false)
            }
            function getInstance() {
                if (!_instance)
                    _instance = newInstance();
                return _instance
            }
            InverterInfo.getInstance = getInstance
        }
        )(InverterInfo = model.InverterInfo || (model.InverterInfo = {}))
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var DeviceDB;
        (function(DeviceDB) {
            var FALLBACK_STATECODE_ID = "Fronius Datamanager Hybrid";
            var _instance = null;
            var inverterInfoModel = null;
            var inverterInfo = null;
            var aDatabase = {
                Inverters: null,
                Datalogger: null,
                NTRanges: null,
                SensorCard: null,
                StringControl: null,
                stateCodeIdMapping: null
            };
            var strInverter = "Inverter";
            var loadingPromise = null;
            function GetDisplayName(aDeviceId) {
                var info = inverterInfo;
                var customName = "";
                if (info != null && info.DeviceInfos.hasOwnProperty(aDeviceId) && info.DeviceInfos[aDeviceId].hasOwnProperty("CustomName")) {
                    customName = dm.util.string.htmlDecode(info.DeviceInfos[aDeviceId].CustomName)
                }
                return customName != "" ? customName : strInverter + " (" + aDeviceId + ")"
            }
            function GetInverterStatusString(aStatusCode) {
                switch (aStatusCode) {
                case -1:
                    return "---";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 11:
                    return "Startup";
                case 7:
                    return "Running";
                case 8:
                    return "Standby";
                case 9:
                    return "Bootloading";
                case 10:
                    return "Error";
                default:
                    return aStatusCode
                }
            }
            function GetInverterProductName(aDT, _strInverter) {
                if (_strInverter)
                    strInverter = _strInverter;
                if (!aDatabase.Inverters)
                    return "Fronius " + strInverter;
                var db = aDatabase.Inverters;
                var dt = parseInt(aDT).toString();
                if (db.hasOwnProperty(dt)) {
                    return db[dt].ProductName
                } else {
                    return "Fronius " + strInverter
                }
            }
            function GetInverterSpecification(aDT) {
                var db = aDatabase.Inverters;
                var dt = parseInt(aDT).toString();
                try {
                    if (db.hasOwnProperty(dt)) {
                        return db[dt]
                    } else {
                        return {
                            ProductName: "Unknown Inverter",
                            DeviceFamily: "0",
                            NominalPower: "0",
                            PhaseCountAC: "1"
                        }
                    }
                } catch (e) {
                    return {
                        ProductName: "Unknown Inverter",
                        DeviceFamily: "0",
                        NominalPower: "0",
                        PhaseCountAC: "1"
                    }
                }
            }
            function GetDataloggerProductName(aDT) {
                var db = aDatabase.Datalogger;
                var dt = parseInt(aDT).toString();
                if (db.hasOwnProperty(dt)) {
                    return db[dt].ProductName
                } else {
                    return "---"
                }
            }
            function GetSensorcardProductName(aDT) {
                var db = aDatabase.SensorCard.SensorBox;
                var dt = parseInt(aDT).toString();
                if (db.hasOwnProperty(dt)) {
                    return db[dt].ProductName
                } else {
                    return "---"
                }
            }
            function GetStringcontrolProductName(aDT) {
                var aStringcontrol = aDatabase.StringControl;
                var db = aStringcontrol.StringControl;
                var dt = parseInt(aDT).toString();
                if (db.hasOwnProperty(dt)) {
                    return db[dt].ProductName
                } else {
                    return "---"
                }
            }
            function GetProductName(aNT, aDT, _strInverter) {
                if (_strInverter)
                    strInverter = _strInverter;
                var aNTranges = aDatabase.NTRanges;
                if (aNTranges.Datalogger.indexOf(aNT) != -1)
                    return GetDataloggerProductName(aDT);
                if (aNTranges.Inverter.indexOf(aNT) != -1)
                    return GetInverterProductName(aDT);
                if (aNTranges.SensorCard.indexOf(aNT) != -1)
                    return GetSensorcardProductName(aDT);
                if (aNTranges.StringControl.indexOf(aNT) != -1)
                    return GetStringcontrolProductName(aDT);
                return "---"
            }
            function GetStateCodeErrorMessage(aNT, aDT, aCode) {
                var deviceName = this.GetProductName(aNT, aDT);
                var stateCodeId = this.MapStateCode(deviceName);
                return stateCodeId + "-" + aCode
            }
            function MapStateCode(productName) {
                if (aDatabase.stateCodeIdMapping.hasOwnProperty(productName)) {
                    return aDatabase.stateCodeIdMapping[productName]
                } else {
                    return FALLBACK_STATECODE_ID
                }
            }
            function createStateCodeMap(stateCodeIdMap) {
                var stateCodeMap = {};
                if (stateCodeIdMap) {
                    Object.keys(stateCodeIdMap).map(function(key) {
                        return stateCodeIdMap[key]
                    }).forEach(function(entry) {
                        stateCodeMap[entry.ProductName] = entry.StateCodeToolId
                    })
                }
                return stateCodeMap
            }
            function newInstance() {
                var inverterInfoModel = dm.model.InverterInfo.getInstance();
                inverterInfo = inverterInfoModel.data;
                loadingPromise = dm.ngjs.$q.all([dm.ngjs.$http.get("/solar_api/v1/data/DeviceDB_Data.json"), dm.ngjs.$http.get("/solar_api/v1/data/DataloggerDB_Data.json"), dm.ngjs.$http.get("/solar_api/v1/data/NTRangesDB_Data.json"), dm.ngjs.$http.get("/solar_api/v1/data/SensorCardDB_Data.json"), dm.ngjs.$http.get("/solar_api/v1/data/StringControlDB_Data.json"), dm.ngjs.$http.get("/i18n/stateCodeIdMapping.json"), dm.ngjs.$translate("INVERTER")]).then(function(responses) {
                    aDatabase.Inverters = responses[0].data.Inverters;
                    aDatabase.Datalogger = responses[1].data.Datalogger;
                    aDatabase.NTRanges = responses[2].data;
                    aDatabase.SensorCard = responses[3].data.SensorCard;
                    aDatabase.StringControl = responses[4].data.StringControl;
                    aDatabase.stateCodeIdMapping = createStateCodeMap(responses[5].data);
                    strInverter = responses[6]
                });
                inverterInfoModel.subscribe("inverterDetailWidget");
                return {
                    GetDisplayName: GetDisplayName,
                    GetInverterStatusString: GetInverterStatusString,
                    GetInverterProductName: GetInverterProductName,
                    GetInverterSpecification: GetInverterSpecification,
                    GetDataloggerProductName: GetDataloggerProductName,
                    GetSensorcardProductName: GetSensorcardProductName,
                    GetStringcontrolProductName: GetStringcontrolProductName,
                    GetProductName: GetProductName,
                    GetStateCodeErrorMessage: GetStateCodeErrorMessage,
                    MapStateCode: MapStateCode,
                    loadingPromise: loadingPromise
                }
            }
            function getInstance() {
                if (!_instance)
                    _instance = newInstance();
                return _instance
            }
            DeviceDB.getInstance = getInstance
        }
        )(DeviceDB = model.DeviceDB || (model.DeviceDB = {}))
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var inverterDetailWidget;
        (function(inverterDetailWidget) {
            var inverterDetails = {};
            function toggleVisible(id) {
                if (inverterDetails.hasOwnProperty(id))
                    inverterDetails[id].show = !inverterDetails[id].show
            }
            inverterDetailWidget.toggleVisible = toggleVisible;
            function setVisible(id) {
                if (inverterDetails.hasOwnProperty(id))
                    inverterDetails[id].show = true
            }
            inverterDetailWidget.setVisible = setVisible;
            function hideAll() {
                for (var idx in inverterDetails) {
                    inverterDetails[idx].show = false
                }
            }
            inverterDetailWidget.hideAll = hideAll;
            function getVisible(id) {
                if (inverterDetails.hasOwnProperty(id))
                    return inverterDetails[id].show;
                return false
            }
            inverterDetailWidget.getVisible = getVisible;
            function initInverterDetails(inverterData) {
                for (var idx in inverterData) {
                    if (!inverterDetails.hasOwnProperty(idx)) {
                        inverterDetails[idx] = {};
                        inverterDetails[idx].show = false
                    }
                }
            }
            inverterDetailWidget.initInverterDetails = initInverterDetails;
            function getNumberOfPreviousInverters(deviceID) {
                var devices = Object.keys(inverterDetails).indexOf(deviceID);
                if (isNaN(devices))
                    return 0;
                return devices
            }
            inverterDetailWidget.getNumberOfPreviousInverters = getNumberOfPreviousInverters
        }
        )(inverterDetailWidget = model.inverterDetailWidget || (model.inverterDetailWidget = {}))
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var RawInverterSystemData;
        (function(RawInverterSystemData) {
            var _instance = null;
            function newInstance() {
                return dm.util.DataFetcher.newInstance(function() {
                    return dm.ngjs.$http.get("/solar_api/v1/GetPowerFlowRealtimeData.fcgi")
                }, function(response) {
                    if (!response.data)
                        return;
                    if (response.data.Head.Status.Code != 0)
                        return;
                    return response.data.Body.Data
                }, undefined, false)
            }
            function getInstance() {
                if (!_instance)
                    _instance = newInstance();
                return _instance
            }
            RawInverterSystemData.getInstance = getInstance
        }
        )(RawInverterSystemData = model.RawInverterSystemData || (model.RawInverterSystemData = {}))
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var InverterSystemData;
        (function(InverterSystemData) {
            var _instance = null;
            var CInverterSystemData = function() {
                function CInverterSystemData() {
                    var _this = this;
                    this.eventScope = dm.ngjs.$rootScope.$new();
                    this.inverterInfoModel = model.InverterInfo.getInstance();
                    this.rawInverterSystemData = model.RawInverterSystemData.getInstance();
                    this.parseInverterSystemData = function(rawInverterSystemData, inverterInfo) {
                        var store = {
                            DataValid: false,
                            Power: {
                                Unit: "",
                                Sum: Number.NaN,
                                Percentage: Number.NaN,
                                Devices: {},
                                DevicesPercentage: {}
                            },
                            Energy: {
                                Day: {
                                    Unit: "",
                                    Sum: Number.NaN,
                                    Devices: {}
                                },
                                Year: {
                                    Unit: "",
                                    Sum: Number.NaN,
                                    Devices: {}
                                },
                                Total: {
                                    Unit: "",
                                    Sum: Number.NaN,
                                    Devices: {}
                                }
                            }
                        };
                        if (angular.equals(rawInverterSystemData, {}) || angular.equals(inverterInfo, {}))
                            return;
                        try {
                            var deviceValue;
                            var dataNode = rawInverterSystemData;
                            var deviceIndexStr, deviceId;
                            store.Energy.Day.Unit = "Wh";
                            store.Energy.Year.Unit = "Wh";
                            store.Energy.Total.Unit = "Wh";
                            store.Energy.Day.Sum = dataNode.Site.E_Day;
                            store.Energy.Year.Sum = dataNode.Site.E_Year;
                            store.Energy.Total.Sum = dataNode.Site.E_Total;
                            store.Power.Unit = "W";
                            store.Power.Sum = 0;
                            for (var deviceId_1 in dataNode.Inverters) {
                                deviceValue = dataNode.Inverters[deviceId_1].P ? dataNode.Inverters[deviceId_1].P : 0;
                                store.Power.Sum += deviceValue;
                                store.Power.Devices[deviceId_1] = deviceValue;
                                if (inverterInfo.DeviceInfos[deviceId_1] != null) {
                                    store.Power.DevicesPercentage[deviceId_1] = deviceValue / inverterInfo.DeviceInfos[deviceId_1].PVPower;
                                    if (store.Power.DevicesPercentage[deviceId_1] < 0) {
                                        store.Power.DevicesPercentage[deviceId_1] = 0
                                    }
                                }
                                store.Energy.Day.Devices[deviceId_1] = dataNode.Inverters[deviceId_1].E_Day ? dataNode.Inverters[deviceId_1].E_Day : 0;
                                store.Energy.Year.Devices[deviceId_1] = dataNode.Inverters[deviceId_1].E_Year ? dataNode.Inverters[deviceId_1].E_Year : 0;
                                store.Energy.Total.Devices[deviceId_1] = dataNode.Inverters[deviceId_1].E_Total ? dataNode.Inverters[deviceId_1].E_Total : 0
                            }
                            store.DataValid = true;
                            var getObjectSize = function(aObj) {
                                return Object.keys(aObj).length
                            };
                            if (!isNaN(inverterInfo.PVPower.Sum))
                                store.Power.Percentage = store.Power.Sum / inverterInfo.PVPower.Sum;
                            else
                                store.Power.Percentage = Number.NaN;
                            angular.copy(store, _this.data);
                            _this.eventScope.$emit("dataChanged", _this.data)
                        } catch (err) {}
                    }
                    ;
                    this.data = {};
                    this.unsubscribe = function() {
                        this.rawInverterSystemData.unsubscribe("inverterSystemDataModel")
                    }
                    ;
                    this.on = function(event, callback) {
                        return this.eventScope.$on(event, callback)
                    }
                    ;
                    this.cancelInverterSystemUpdate = this.rawInverterSystemData.on("dataChanged", function() {
                        _this.parseInverterSystemData(_this.rawInverterSystemData.data, _this.inverterInfoModel.data)
                    });
                    this.cancelInverterInfoUpdate = this.inverterInfoModel.on("dataChanged", function() {
                        _this.parseInverterSystemData(_this.rawInverterSystemData.data, _this.inverterInfoModel.data)
                    })
                }
                CInverterSystemData.prototype.subscribe = function(name, updateInterval) {
                    this.inverterInfoModel.subscribe("inverterSystemDataModel:" + name);
                    this.rawInverterSystemData.subscribe("inverterSystemDataModel:" + name, updateInterval)
                }
                ;
                return CInverterSystemData
            }();
            function newInstance() {
                return new CInverterSystemData
            }
            function getInstance() {
                if (!_instance)
                    _instance = newInstance();
                return _instance
            }
            InverterSystemData.getInstance = getInstance
        }
        )(InverterSystemData = model.InverterSystemData || (model.InverterSystemData = {}))
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var LoggerInfo;
        (function(LoggerInfo) {
            var _instance = null;
            function getCurrencyString(value) {
                var CurrencyMap = [];
                CurrencyMap["AED"] = "د.إ.‏";
                CurrencyMap["AFN"] = "؋";
                CurrencyMap["ALL"] = "Lek";
                CurrencyMap["AMD"] = "֏";
                CurrencyMap["ANG"] = "ANG";
                CurrencyMap["AOA"] = "AOA";
                CurrencyMap["ARS"] = "$";
                CurrencyMap["AUD"] = "$";
                CurrencyMap["AWG"] = "AWG";
                CurrencyMap["AZN"] = "ман.";
                CurrencyMap["BAM"] = "KM";
                CurrencyMap["BBD"] = "BBD";
                CurrencyMap["BDT"] = "৳";
                CurrencyMap["BGN"] = "лв.";
                CurrencyMap["BHD"] = "د.ب.‏";
                CurrencyMap["BIF"] = "BIF";
                CurrencyMap["BMD"] = "BMD";
                CurrencyMap["BND"] = "$";
                CurrencyMap["BOB"] = "$b";
                CurrencyMap["BOV"] = "BOV";
                CurrencyMap["BRL"] = "R$";
                CurrencyMap["BSD"] = "BSD";
                CurrencyMap["BTN"] = "BTN";
                CurrencyMap["BWP"] = "P";
                CurrencyMap["BYR"] = "р.";
                CurrencyMap["BZD"] = "BZ$";
                CurrencyMap["CAD"] = "$";
                CurrencyMap["CDF"] = "CDF";
                CurrencyMap["CHE"] = "CHE";
                CurrencyMap["CHF"] = "CHF";
                CurrencyMap["CHW"] = "CHW";
                CurrencyMap["CLF"] = "CLF";
                CurrencyMap["CLP"] = "$";
                CurrencyMap["CNY"] = "¥)";
                CurrencyMap["COP"] = "$";
                CurrencyMap["COU"] = "COU";
                CurrencyMap["CRC"] = "₡";
                CurrencyMap["CUC"] = "CUC";
                CurrencyMap["CUP"] = "CUP";
                CurrencyMap["CVE"] = "CVE";
                CurrencyMap["CZK"] = "Kč";
                CurrencyMap["DJF"] = "DJF)";
                CurrencyMap["DKK"] = "kr.";
                CurrencyMap["DOP"] = "RD$";
                CurrencyMap["DZD"] = "DZD";
                CurrencyMap["EGP"] = "ج.م.‏";
                CurrencyMap["ERN"] = "ERN";
                CurrencyMap["ETB"] = "ETB";
                CurrencyMap["EUR"] = "€";
                CurrencyMap["FJD"] = "FJD";
                CurrencyMap["FKP"] = "FKP";
                CurrencyMap["GBP"] = "£";
                CurrencyMap["GEL"] = "ლ.";
                CurrencyMap["GHS"] = "GHS";
                CurrencyMap["GIP"] = "GIP";
                CurrencyMap["GMD"] = "GMD";
                CurrencyMap["GNF"] = "GNF";
                CurrencyMap["GTQ"] = "Q";
                CurrencyMap["GYD"] = "GYD";
                CurrencyMap["HKD"] = "HK$";
                CurrencyMap["HNL"] = "L.";
                CurrencyMap["HRK"] = "kn";
                CurrencyMap["HTG"] = "HTG";
                CurrencyMap["HUF"] = "Ft";
                CurrencyMap["IDR"] = "Rp";
                CurrencyMap["ILS"] = "₪";
                CurrencyMap["INR"] = "₹";
                CurrencyMap["IQD"] = "د.ع.‏";
                CurrencyMap["IRR"] = "ريال";
                CurrencyMap["ISK"] = "kr.";
                CurrencyMap["JMD"] = "J$";
                CurrencyMap["JOD"] = "د.ا.‏";
                CurrencyMap["JPY"] = "¥";
                CurrencyMap["KES"] = "S";
                CurrencyMap["KGS"] = "сом";
                CurrencyMap["KHR"] = "៛";
                CurrencyMap["KMF"] = "KMF";
                CurrencyMap["KPW"] = "KPW)";
                CurrencyMap["KRW"] = "₩";
                CurrencyMap["KWD"] = "د.ك.‏";
                CurrencyMap["KYD"] = "KYD";
                CurrencyMap["KZT"] = "₸";
                CurrencyMap["LAK"] = "₭";
                CurrencyMap["LBP"] = "ل.ل.‏";
                CurrencyMap["LKR"] = "රු.";
                CurrencyMap["LRD"] = "LRD";
                CurrencyMap["LSL"] = "LSL";
                CurrencyMap["LTL"] = "Lt";
                CurrencyMap["LVL"] = "Ls";
                CurrencyMap["LYD"] = "د.ل.‏";
                CurrencyMap["MAD"] = "ⴷⵔ";
                CurrencyMap["MDL"] = "MDL";
                CurrencyMap["MGA"] = "MGA";
                CurrencyMap["MKD"] = "ден.";
                CurrencyMap["MMK"] = "MMK";
                CurrencyMap["MNT"] = "₮";
                CurrencyMap["MOP"] = "MOP";
                CurrencyMap["MRO"] = "MRO";
                CurrencyMap["MUR"] = "MUR";
                CurrencyMap["MVR"] = "ރ.";
                CurrencyMap["MWK"] = "MWK";
                CurrencyMap["MXN"] = "$";
                CurrencyMap["MXV"] = "MXV";
                CurrencyMap["MYR"] = "RM";
                CurrencyMap["MZN"] = "MZN";
                CurrencyMap["NAD"] = "NAD";
                CurrencyMap["NGN"] = "₦";
                CurrencyMap["NIO"] = "C$";
                CurrencyMap["NOK"] = "kr";
                CurrencyMap["NPR"] = "रु";
                CurrencyMap["NZD"] = "$";
                CurrencyMap["OMR"] = "ر.ع.‏";
                CurrencyMap["PAB"] = "B/.";
                CurrencyMap["PEN"] = "S/.";
                CurrencyMap["PGK"] = "PGK";
                CurrencyMap["PHP"] = "PhP";
                CurrencyMap["PKR"] = "Rs";
                CurrencyMap["PLN"] = "zł";
                CurrencyMap["PYG"] = "₲";
                CurrencyMap["QAR"] = "ر.ق.‏";
                CurrencyMap["RON"] = "RON";
                CurrencyMap["RSD"] = "din.";
                CurrencyMap["RUB"] = "р.";
                CurrencyMap["RWF"] = "RWF";
                CurrencyMap["SAR"] = "ر.س.‏";
                CurrencyMap["SBD"] = "SBD";
                CurrencyMap["SCR"] = "SCR";
                CurrencyMap["SDG"] = "SDG";
                CurrencyMap["SEK"] = "kr";
                CurrencyMap["SGD"] = "$";
                CurrencyMap["SHP"] = "SHP";
                CurrencyMap["SLL"] = "SLL";
                CurrencyMap["SOS"] = "SOS";
                CurrencyMap["SRD"] = "SRD";
                CurrencyMap["SSP"] = "SSP";
                CurrencyMap["STD"] = "STD";
                CurrencyMap["SVC"] = "SVC";
                CurrencyMap["SYP"] = "ل.س.‏";
                CurrencyMap["SZL"] = "SZL";
                CurrencyMap["THB"] = "฿";
                CurrencyMap["TJS"] = "смн";
                CurrencyMap["TMT"] = "m.";
                CurrencyMap["TND"] = "د.ت.‏";
                CurrencyMap["TOP"] = "TOP";
                CurrencyMap["TRY"] = "₺";
                CurrencyMap["TTD"] = "TT$";
                CurrencyMap["TWD"] = "NT$";
                CurrencyMap["TZS"] = "TZS";
                CurrencyMap["UAH"] = "₴";
                CurrencyMap["UGX"] = "UGX";
                CurrencyMap["USD"] = "$";
                CurrencyMap["USN"] = "USN";
                CurrencyMap["USS"] = "USS";
                CurrencyMap["UYI"] = "UYI";
                CurrencyMap["UYU"] = "$U";
                CurrencyMap["UZS"] = "so'm";
                CurrencyMap["VEF"] = "Bs.F.";
                CurrencyMap["VND"] = "₫";
                CurrencyMap["VUV"] = "VUV";
                CurrencyMap["WST"] = "WST";
                CurrencyMap["XAF"] = "XAF";
                CurrencyMap["XCD"] = "EC$";
                CurrencyMap["XDR"] = "XDR";
                CurrencyMap["XOF"] = "XOF";
                CurrencyMap["XPF"] = "XPF";
                CurrencyMap["XSU"] = "XSU";
                CurrencyMap["XUA"] = "XUA";
                CurrencyMap["YER"] = "ر.ي.‏";
                CurrencyMap["ZAR"] = "R";
                CurrencyMap["ZMW"] = "ZMW";
                CurrencyMap["ZWL"] = "ZWL";
                return CurrencyMap[value] ? CurrencyMap[value] : ""
            }
            function transformResponse(response) {
                if (!response.data)
                    return;
                if (response.data.Head.Status.Code != 0)
                    return;
                var store = {
                    DataValid: false
                };
                var dataNode = response.data.Body.LoggerInfo;
                angular.extend(store, dataNode);
                store.CashCurrency = getCurrencyString(store.CashCurrency);
                store.DataValid = true;
                return store
            }
            function newInstance() {
                return dm.util.DataFetcher.newInstance(function() {
                    return dm.ngjs.$http.get("/solar_api/v1/GetLoggerInfo.cgi")
                }, transformResponse, undefined, false)
            }
            function getInstance() {
                if (!_instance)
                    _instance = newInstance();
                return _instance
            }
            LoggerInfo.getInstance = getInstance
        }
        )(LoggerInfo = model.LoggerInfo || (model.LoggerInfo = {}))
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var SensorData;
        (function(SensorData) {
            var _instance = null;
            function transformResponse(response) {
                if (!response.data)
                    return;
                if (response.data.Head.Status.Code != 0)
                    return;
                var store = {
                    DataValid: false,
                    Devices: {}
                };
                if (!response.data.Body || !response.data.Body.Data)
                    return;
                var data = response.data.Body.Data;
                for (var deviceId in data) {
                    store.Devices[deviceId] = data[deviceId]
                }
                store.DataValid = true;
                return store
            }
            function newInstance() {
                return dm.util.DataFetcher.newInstance(function() {
                    return dm.ngjs.$http.get("/solar_api/v1/GetSensorRealtimeData.cgi", {
                        params: {
                            Scope: "System",
                            DataCollection: "NowSensorData"
                        }
                    })
                }, transformResponse, undefined, false)
            }
            function getInstance() {
                if (!_instance)
                    _instance = newInstance();
                return _instance
            }
            SensorData.getInstance = getInstance
        }
        )(SensorData = model.SensorData || (model.SensorData = {}))
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var SensorInfo;
        (function(SensorInfo) {
            var _instance = null;
            function transformResponse(response) {
                if (!response.data)
                    return;
                if (response.data.Head.Status.Code != 0)
                    return;
                var store = {
                    DataValid: false,
                    DeviceInfos: {},
                    DeviceCount: Number.NaN
                };
                var dataNode = response.data.Body.Data;
                store.DeviceCount = 0;
                for (var p in dataNode) {
                    store.DeviceInfos[p] = dataNode[p];
                    store.DeviceCount++
                }
                store.DataValid = true;
                return store
            }
            function newInstance() {
                return dm.util.DataFetcher.newInstance(function() {
                    return dm.ngjs.$http.get("/solar_api/v1/GetActiveDeviceInfo.cgi", {
                        params: {
                            DeviceClass: "SensorCard"
                        }
                    })
                }, transformResponse, undefined, false)
            }
            function getInstance() {
                if (!_instance)
                    _instance = newInstance();
                return _instance
            }
            SensorInfo.getInstance = getInstance
        }
        )(SensorInfo = model.SensorInfo || (model.SensorInfo = {}))
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var SiteNowData;
        (function(SiteNowData) {
            var _instance = null;
            var storeDefault = {
                Mode: "NONE",
                BackupMode: false,
                P_AC: null,
                P_Grid: null,
                P_Load: null,
                P_Akku: null,
                P_PV: null,
                E_Day: null,
                E_Year: null,
                E_Total: null,
                Meter_Location: "",
                batterySOC: null,
                batteryMode: null,
                Pmax: null,
                batteryAvailable: false,
                loadAvailable: false,
                gridAvailable: false,
                P_Ohmpilots: null
            };
            function onDataFetched(response) {
                var deviceDB = dm.model.DeviceDB.getInstance();
                if (!response.data)
                    return;
                if (response.data.Head.Status.Code != 0)
                    return;
                if (!response.data.Body.Data)
                    return;
                var powerFlowRealtimeData = response.data.Body.Data;
                var store = {
                    Mode: "NONE",
                    BackupMode: false,
                    P_AC: null,
                    P_Grid: null,
                    P_Load: null,
                    P_Akku: null,
                    P_PV: null,
                    E_Day: null,
                    E_Year: null,
                    E_Total: null,
                    Meter_Location: "",
                    batterySOC: null,
                    batteryMode: null,
                    Pmax: null,
                    batteryAvailable: false,
                    loadAvailable: false,
                    gridAvailable: false,
                    P_Ohmpilots: null
                };
                store = angular.copy(storeDefault);
                store.Mode = powerFlowRealtimeData.Site.Mode;
                store.BackupMode = powerFlowRealtimeData.Site.BackupMode;
                store.Meter_Location = powerFlowRealtimeData.Site.Meter_Location;
                switch (store.Mode) {
                case "isolated":
                case "bidirectional":
                    store.P_Akku = powerFlowRealtimeData.Site.P_Akku !== null ? Math.round(powerFlowRealtimeData.Site.P_Akku) : null;
                case "vague-meter":
                case "meter":
                    store.P_Grid = powerFlowRealtimeData.Site.P_Grid !== null ? Math.round(powerFlowRealtimeData.Site.P_Grid) : null;
                    store.P_Load = powerFlowRealtimeData.Site.P_Load !== null ? Math.round(powerFlowRealtimeData.Site.P_Load) : null;
                    store.gridAvailable = true;
                    store.loadAvailable = true;
                    if (powerFlowRealtimeData.Smartloads && powerFlowRealtimeData.Smartloads.Ohmpilots)
                        store.P_Ohmpilots = function(ohmpilots) {
                            var powerSum = 0;
                            for (var idx in ohmpilots) {
                                var ohmpilot = ohmpilots[idx];
                                powerSum = powerSum + ohmpilot.P_AC_Total
                            }
                            return powerSum
                        }(powerFlowRealtimeData.Smartloads.Ohmpilots);
                case "produce-only":
                    store.P_PV = powerFlowRealtimeData.Site.P_PV !== null ? Math.round(powerFlowRealtimeData.Site.P_PV) : null;
                    if (powerFlowRealtimeData.Inverters && powerFlowRealtimeData.Inverters["1"]) {
                        var DT = powerFlowRealtimeData.Inverters["1"].DT;
                        if (DT) {
                            store.Pmax = parseInt(deviceDB.GetInverterSpecification(DT).NominalPower)
                        }
                    }
                    if (powerFlowRealtimeData.Inverters && powerFlowRealtimeData.Inverters["1"] && powerFlowRealtimeData.Inverters["1"].Battery_Mode && powerFlowRealtimeData.Inverters["1"].SOC !== undefined && powerFlowRealtimeData.Inverters["1"].SOC !== null) {
                        store.batteryMode = powerFlowRealtimeData.Inverters["1"].Battery_Mode;
                        store.batteryAvailable = true;
                        if (powerFlowRealtimeData.Inverters["1"].SOC % 1 === 0)
                            store.batterySOC = powerFlowRealtimeData.Inverters["1"].SOC;
                        else
                            store.batterySOC = powerFlowRealtimeData.Inverters["1"].SOC.toFixed(2)
                    }
                }
                if (store.Mode == "produce-only")
                    store.P_Grid = store.P_PV;
                store.P_AC = 0;
                if (powerFlowRealtimeData.Inverters) {
                    for (var idx in powerFlowRealtimeData.Inverters) {
                        var inverter = powerFlowRealtimeData.Inverters[idx];
                        store.P_AC = store.P_AC + inverter.P
                    }
                }
                return store
            }
            function newInstance() {
                return dm.util.DataFetcher.newInstance(function() {
                    return dm.ngjs.$http.get("/solar_api/v1/GetPowerFlowRealtimeData.fcgi")
                }, onDataFetched, undefined, false)
            }
            function getInstance() {
                if (!_instance)
                    _instance = newInstance();
                return _instance
            }
            SiteNowData.getInstance = getInstance
        }
        )(SiteNowData = model.SiteNowData || (model.SiteNowData = {}))
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var WizardState = function(_super) {
            __extends(WizardState, _super);
            function WizardState(id, scope) {
                var _this = _super.call(this, id, scope) || this;
                _this.WizardState = null;
                _this.WizardStep = null;
                _this.WizardInitialized = false;
                _this.ServiceDone = "false";
                _this.IpLock = null;
                _this.startWizard = function(ipAddr) {
                    _this.WizardState = 1;
                    _this.WizardStep = 0;
                    _this.IpLock = ipAddr;
                    return _this.save()
                }
                ;
                _this.finishWizard = function() {
                    _this.WizardState = 0;
                    _this.WizardInitialized = true;
                    return _this.save()
                }
                ;
                _this.isWizardRunning = function() {
                    return _this.WizardState > 0
                }
                ;
                return _this
            }
            WizardState.prototype._load = function() {
                var _this = this;
                return dm.ngjs.$q.all([dm.util.configRequest.get("/config/wizard/")]).then(function(responses) {
                    var wizardConfig = responses[0];
                    _this.setOrigData("WizardState", wizardConfig.wizard.state);
                    _this.setOrigData("WizardStep", wizardConfig.wizard.step);
                    _this.setOrigData("WizardInitialized", wizardConfig.wizard.system.init);
                    _this.setOrigData("IpLock", wizardConfig.wizard.iplock);
                    _this.setOrigData("ServiceDone", wizardConfig.wizard.system.servicedone)
                })
            }
            ;
            WizardState.prototype._save = function() {
                var wizardSave = dm.ngjs.$q.defer();
                var retryCount = 1;
                var postData = angular.copy({
                    wizard: {
                        system: {
                            init: this.WizardInitialized,
                            servicedone: this.ServiceDone
                        },
                        state: this.WizardState,
                        step: this.WizardStep,
                        iplock: this.IpLock
                    }
                });
                var saveRequest = function() {
                    dm.ngjs.$http.post("/config/wizard/", postData).then(function() {
                        wizardSave.resolve()
                    }, function(err) {
                        if (err.status == 401 && retryCount > 0) {
                            retryCount--;
                            saveRequest()
                        } else {
                            wizardSave.reject(err)
                        }
                    })
                };
                saveRequest();
                return wizardSave.promise
            }
            ;
            return WizardState
        }(model.Base);
        model.WizardState = WizardState
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var HWIPSwitch = function(_super) {
            __extends(HWIPSwitch, _super);
            function HWIPSwitch(id, scope) {
                var _this = _super.call(this, id, scope) || this;
                _this.Switch = null;
                return _this
            }
            HWIPSwitch.prototype._load = function() {
                var _this = this;
                return dm.ngjs.$q.all([dm.util.configRequest.get("/status/io/hwipswitch/")]).then(function(responses) {
                    var resp = responses[0];
                    _this.setOrigData("Switch", resp.hwipswitch)
                })
            }
            ;
            return HWIPSwitch
        }(model.Base);
        model.HWIPSwitch = HWIPSwitch
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var PolicyTerms = function(_super) {
            __extends(PolicyTerms, _super);
            function PolicyTerms(id, scope) {
                var _this = _super.call(this, id, scope) || this;
                _this.dialogTemplateId = null;
                _this.authUser = null;
                _this.stdDialog = null;
                _this.updateUser = function(authUser, wantAuth) {
                    if (!authUser && (wantAuth == "user" || wantAuth == "admin" || wantAuth == "service"))
                        return true;
                    if (authUser == "user" && (wantAuth == "admin" || wantAuth == "service"))
                        return true;
                    return authUser == "admin" && wantAuth == "service"
                }
                ;
                _this.showPolicyDialog = function(service, scope, onOk, onNOk) {
                    this.stdDialog = new dm.standardDialog.StandardDialog(scope);
                    var self = this;
                    scope.acceptPolicy = function() {
                        if (onOk)
                            onOk();
                        self.updatePolicyTermsAccepted(service, true)
                    }
                    ;
                    scope.declinePolicyShowDemand = function() {
                        self.showPolicytermsDemand(service, scope, onOk, onNOk)
                    }
                    ;
                    this.stdDialog.showDialog(this.dialogTemplateId)
                }
                ;
                return _this
            }
            PolicyTerms.prototype.authenticatedUser = function(userAuth) {
                return userAuth.service ? "service" : userAuth.admin ? "admin" : "user"
            }
            ;
            PolicyTerms.prototype.showPolicytermsDialog1 = function(user, service, scope, onOk, onNOk) {
                this.dialogTemplateId = "POLICY_TEMPLATE_1";
                this.authUser = this.authenticatedUser(user);
                this.showPolicyDialog(service, scope, onOk, onNOk)
            }
            ;
            PolicyTerms.prototype.showPolicytermsDialog2 = function(user, service, scope, onOk, onNOk) {
                this.dialogTemplateId = "POLICY_TEMPLATE_2";
                this.authUser = this.authenticatedUser(user);
                this.showPolicyDialog(service, scope, onOk, onNOk)
            }
            ;
            PolicyTerms.prototype.showPolicytermsDemand = function(service, scope, onOk, onNOk) {
                this.stdDialog = new dm.standardDialog.StandardDialog(scope);
                var self = this;
                scope.acceptDemandShowPolicy = function() {
                    self.showPolicyDialog(service, scope, onOk, onNOk)
                }
                ;
                scope.declineDemand = function() {
                    if (onNOk)
                        onNOk();
                    self.updatePolicyTermsAccepted(service, false)
                }
                ;
                this.stdDialog.showDialog("POLICY_TEMPLATE_DEMAND")
            }
            ;
            PolicyTerms.prototype.updatePolicyTermsAccepted = function(service, decision) {
                var self = this;
                return dm.ngjs.$q.all([dm.ngjs.$http.get("/cgi-bin/readPolicyState.cgi")]).then(function(responses) {
                    var acceptedVersions = responses[0].data.Body.Data.policyTerms;
                    var newVersions = responses[0].data.Body.Data.newPolicyVersion;
                    var somethingChanged = false;
                    for (var i = 0; i < acceptedVersions.length; i++) {
                        if (acceptedVersions[i].name == service) {
                            if (acceptedVersions[i].acceptedversion != newVersions[service] || self.updateUser(acceptedVersions[i].user, self.authUser)) {
                                somethingChanged = true;
                                acceptedVersions[i].servicestopped = !decision;
                                if (decision) {
                                    acceptedVersions[i].acceptedversion = newVersions[service];
                                    acceptedVersions[i].date = new Date;
                                    acceptedVersions[i].user = self.authUser
                                }
                            }
                        }
                    }
                    if (somethingChanged) {
                        return dm.ngjs.$http.post("/config/solarweb/policyTerms/?method=save", JSON.stringify({
                            policyTerms: acceptedVersions
                        }))
                    }
                    return null
                })
            }
            ;
            PolicyTerms.prototype._load = function() {
                return dm.ngjs.$q.resolve()
            }
            ;
            PolicyTerms.prototype._save = function() {
                return dm.ngjs.$q.resolve()
            }
            ;
            return PolicyTerms
        }(model.Base);
        model.PolicyTerms = PolicyTerms
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var TimeOfUseModel = function(_super) {
            __extends(TimeOfUseModel, _super);
            function TimeOfUseModel(id, scope) {
                var _this = _super.call(this, id, scope) || this;
                _this.batterieScheduleInitvalue = {
                    Active: false,
                    ScheduleType: "CHARGE_MAX",
                    Power: 0,
                    Weekdays: {
                        Mon: false,
                        Tue: false,
                        Wed: false,
                        Thu: false,
                        Fri: false,
                        Sat: false,
                        Sun: false
                    },
                    TimeTable: {
                        Start: "12:00",
                        End: "14:00"
                    }
                };
                _this.BatterieSchedule = {
                    Rules: [],
                    RuleErrors: [],
                    NewRule: {},
                    TimeValidationMsg: {
                        "-1": "HINT_VALID_TIME"
                    }
                };
                _this.getScheduleTypes = function() {
                    return ["CHARGE_MAX", "CHARGE_MIN", "DISCHARGE_MAX", "DISCHARGE_MIN"]
                }
                ;
                _this.getWeekdays = function() {
                    return ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]
                }
                ;
                _this.insertScheduleTime = function(timeTable, ruleIdx, newScheduleType, newRuleDate, newRulePower) {
                    var overlapping = false;
                    for (var _i = 0, timeTable_1 = timeTable; _i < timeTable_1.length; _i++) {
                        var entry = timeTable_1[_i];
                        if (newScheduleType == "CHARGE_MAX" && entry.scheduleType == "CHARGE_MIN" && newRulePower >= entry.power || newScheduleType == "CHARGE_MAX" && entry.scheduleType == "DISCHARGE_MAX" || newScheduleType == "CHARGE_MIN" && entry.scheduleType == "CHARGE_MAX" && newRulePower <= entry.power || newScheduleType == "DISCHARGE_MAX" && entry.scheduleType == "CHARGE_MAX" || newScheduleType == "DISCHARGE_MAX" && entry.scheduleType == "DISCHARGE_MIN" && newRulePower >= entry.power || newScheduleType == "DISCHARGE_MIN" && entry.scheduleType == "DISCHARGE_MAX" && newRulePower <= entry.power) {
                            continue
                        }
                        if (newRuleDate.Start > entry.date.Start && newRuleDate.Start < entry.date.End || newRuleDate.End > entry.date.Start && newRuleDate.End < entry.date.End || newRuleDate.Start <= entry.date.Start && newRuleDate.End >= entry.date.End) {
                            overlapping = true;
                            entry.isOverlapping = true
                        }
                    }
                    timeTable.push({
                        index: ruleIdx,
                        scheduleType: newScheduleType,
                        date: newRuleDate,
                        power: newRulePower,
                        isOverlapping: overlapping
                    })
                }
                ;
                _this.convert2Date = function(weekday, time) {
                    var d = new Date;
                    var splits = time.split(":");
                    var ret = new Date(d.getFullYear(),d.getMonth(),1 + weekday,parseInt(splits[0]),parseInt(splits[1]),0,0);
                    return ret.getTime()
                }
                ;
                return _this
            }
            TimeOfUseModel.prototype._load = function() {
                var _this = this;
                return dm.ngjs.$q.all([dm.util.configRequest.get("/config/timeofuse/")]).then(function(responses) {
                    var self = _this;
                    var timeOfUse = responses[0].timeofuse;
                    _this.BatterieSchedule.Rules = angular.copy(timeOfUse);
                    angular.forEach(_this.BatterieSchedule.Rules, function(v, i) {
                        self.BatterieSchedule.RuleErrors.push(false)
                    });
                    _this.BatterieSchedule.NewRule = angular.copy(_this.batterieScheduleInitvalue);
                    _this.setOrigData("BatterieSchedule", _this.BatterieSchedule)
                })
            }
            ;
            TimeOfUseModel.prototype.addNewRule = function() {
                if (!this.isPowerValid(this.BatterieSchedule.NewRule["Power"]))
                    return;
                if (!this.isTimeValid(this.BatterieSchedule.NewRule["TimeTable"]))
                    return;
                this.BatterieSchedule.Rules.push(angular.copy(this.BatterieSchedule.NewRule));
                this.BatterieSchedule.RuleErrors.push(false);
                this.BatterieSchedule.NewRule = angular.copy(this.batterieScheduleInitvalue)
            }
            ;
            TimeOfUseModel.prototype.deleteRule = function(index) {
                this.BatterieSchedule.Rules.splice(index, 1);
                this.BatterieSchedule.RuleErrors.splice(index, 1)
            }
            ;
            TimeOfUseModel.prototype.prependZero = function(timeString) {
                var splits = timeString.split(":");
                if (splits[0].length == 1)
                    return "0" + timeString;
                return timeString
            }
            ;
            TimeOfUseModel.prototype.getPowerBorder = function() {
                return {
                    MIN: 0,
                    MAX: 2e9
                }
            }
            ;
            TimeOfUseModel.prototype.isPowerValid = function(power) {
                if (!dm.util.helpers.isInteger(power)) {
                    return false
                }
                return power >= this.getPowerBorder().MIN && power <= this.getPowerBorder().MAX
            }
            ;
            TimeOfUseModel.prototype.isTimeValid = function(time, ruleIndex) {
                if (!time)
                    return false;
                var today = (new Date).toISOString().slice(0, 11);
                var start = null;
                var end = null;
                if (time.End == "24:00") {
                    this.BatterieSchedule.TimeValidationMsg[ruleIndex] = "HINT_VALID_TIME";
                    if (ruleIndex && time.Start == "24:00") {
                        this.BatterieSchedule.TimeValidationMsg[ruleIndex] = "HINT_VALID_TIME_1";
                        return
                    }
                    start = Date.parse(today + this.prependZero(time.Start));
                    end = Date.parse(today + this.prependZero("23:59"));
                    return start && end && start <= end
                }
                start = Date.parse(today + this.prependZero(time.Start));
                end = Date.parse(today + this.prependZero(time.End));
                this.BatterieSchedule.TimeValidationMsg[ruleIndex] = "HINT_VALID_TIME";
                if (ruleIndex && start >= end)
                    this.BatterieSchedule.TimeValidationMsg[ruleIndex] = "HINT_VALID_TIME_1";
                return start && end && start < end
            }
            ;
            TimeOfUseModel.prototype.getStartEndObj = function(dayIdx, timeTable) {
                var start = this.convert2Date(dayIdx, timeTable.Start);
                var end = this.convert2Date(dayIdx, timeTable.End);
                return {
                    Start: start,
                    End: end
                }
            }
            ;
            TimeOfUseModel.prototype.applyErrors = function(timetable) {
                var ret = false;
                for (var _i = 0, timetable_1 = timetable; _i < timetable_1.length; _i++) {
                    var entry = timetable_1[_i];
                    if (entry.isOverlapping) {
                        this.BatterieSchedule.RuleErrors[entry.index] = true;
                        ret = true
                    }
                }
                return ret
            }
            ;
            TimeOfUseModel.prototype.resetErrors = function() {
                var self = this;
                angular.forEach(this.BatterieSchedule.RuleErrors, function(v, i) {
                    self.BatterieSchedule.RuleErrors[i] = false
                })
            }
            ;
            TimeOfUseModel.prototype.getDataForSaving = function() {
                var timeofuse = {
                    timeofuse: this.BatterieSchedule.Rules
                };
                for (var _i = 0, _a = timeofuse.timeofuse; _i < _a.length; _i++) {
                    var rule = _a[_i];
                    rule.TimeTable.Start = this.prependZero(rule.TimeTable.Start);
                    rule.TimeTable.End = this.prependZero(rule.TimeTable.End)
                }
                return angular.copy(timeofuse)
            }
            ;
            TimeOfUseModel.prototype.scheduleRulesValid = function() {
                if (this.BatterieSchedule.Rules.length > 50)
                    throw "to_many_rules";
                var timeTable = [];
                for (var ruleIdx in this.BatterieSchedule.Rules) {
                    var rule = this.BatterieSchedule.Rules[ruleIdx];
                    if (!this.isPowerValid(rule.Power))
                        throw "power_invalid";
                    if (!this.isTimeValid(rule.TimeTable))
                        throw "time_invalid";
                    if (!rule.Active)
                        continue;
                    var dayIdx = 0;
                    for (var _i = 0, _a = this.getWeekdays(); _i < _a.length; _i++) {
                        var day = _a[_i];
                        if (rule.Weekdays[day]) {
                            var dateObj = this.getStartEndObj(dayIdx, rule.TimeTable);
                            this.insertScheduleTime(timeTable, ruleIdx, rule.ScheduleType, dateObj, rule.Power)
                        }
                        dayIdx++
                    }
                }
                if (this.applyErrors(timeTable))
                    throw "overlap_error"
            }
            ;
            TimeOfUseModel.prototype.addNewRuleIfNoRuleAdded = function() {
                if (this.BatterieSchedule.Rules.length === 0 && this.checkAddRuleModified()) {
                    this.addNewRule()
                }
            }
            ;
            TimeOfUseModel.prototype.checkAddRuleModified = function() {
                return !angular.equals(this.BatterieSchedule.NewRule, this.batterieScheduleInitvalue)
            }
            ;
            TimeOfUseModel.prototype.setTOURules = function(rules) {
                this.BatterieSchedule.Rules = rules
            }
            ;
            TimeOfUseModel.prototype.getTOURules = function() {
                return this.BatterieSchedule.Rules
            }
            ;
            TimeOfUseModel.prototype.minChargeRuleActive = function() {
                for (var _i = 0, _a = this.BatterieSchedule.Rules; _i < _a.length; _i++) {
                    var rule = _a[_i];
                    if (rule.Active && rule.ScheduleType == "CHARGE_MIN")
                        return true
                }
                return false
            }
            ;
            TimeOfUseModel.prototype.getTimeOfUseData = function() {
                return this.BatterieSchedule.Rules
            }
            ;
            TimeOfUseModel.prototype.TimeOfUseNotAllowed = function(chargeFromEVU, chargeFromAC) {
                return this.minChargeRuleActive() && !chargeFromEVU && chargeFromAC
            }
            ;
            return TimeOfUseModel
        }(model.Base);
        model.TimeOfUseModel = TimeOfUseModel
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var APSettings = function(_super) {
            __extends(APSettings, _super);
            function APSettings(id, scope) {
                var _this = _super.call(this, id, scope) || this;
                _this.ssid = "";
                _this.psk = "";
                _this.resetSsid = false;
                _this.forceValidation = false;
                _this._validators = {
                    ssid: function(ssid) {
                        if (_this.resetSsid)
                            return true;
                        if (!ssid)
                            return false;
                        if (ssid.length < 4 || ssid.length > 16)
                            return false;
                        if (ssid.slice(0, 7) == "FRONIUS")
                            return false;
                        var regexAlphaNumeric = /^[a-zA-Z0-9][a-zA-Z0-9-_]+$/;
                        return ssid.match(regexAlphaNumeric) == null ? false : true
                    },
                    psk: function(psk) {
                        if (psk.length >= 8 && psk.length < 64 || _this.resetSsid)
                            return true;
                        return false
                    }
                };
                return _this
            }
            APSettings.prototype.resetModel = function() {
                this.resetSsid = false;
                this._dirtyData = [];
                this._allDirty = false;
                this.ssid = this.getOrigData("ssid");
                this.psk = this.getOrigData("psk");
                this.forceValidation = false
            }
            ;
            APSettings.prototype._load = function() {
                var _this = this;
                return dm.ngjs.$q.all([dm.util.configRequest.get("/config/hostap/")]).then(function(responses) {
                    var resp = responses[0];
                    _this.setOrigData("ssid", resp.hostap.ssid);
                    _this.setOrigData("psk", resp.hostap.psk);
                    if (_this.ssid == "" && resp.hostap.psk == "12345678")
                        _this.setOrigData("psk", "")
                })
            }
            ;
            APSettings.prototype._save = function() {
                var hostap = {
                    ssid: this.ssid,
                    psk: this.psk
                };
                if (this.resetSsid) {
                    hostap.ssid = "";
                    hostap.psk = "12345678"
                }
                var payloadHostAP = {
                    hostap: hostap
                };
                var payloadAPEnabled = {
                    userAPenabled: hostap.ssid != ""
                };
                var requests = [dm.util.configRequest.saveDef("/config/hostap/", payloadHostAP), dm.util.configRequest.saveDef("/config/multinetwork/interfaceConfig/userAPenabled/", payloadAPEnabled)];
                return dm.ngjs.$q.all(requests)
            }
            ;
            return APSettings
        }(model.Base);
        model.APSettings = APSettings
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var CommonSettings = function(_super) {
            __extends(CommonSettings, _super);
            function CommonSettings(id, scope) {
                var _this = _super.call(this, id, scope) || this;
                _this._OLSON_DB = null;
                _this.TZ1Options = null;
                _this.TZ2Options = null;
                _this.TZ1Selection = null;
                _this.TZ2Selection = null;
                _this.profit = null;
                _this.system = {
                    name: ""
                };
                _this.is12HourFormat = false;
                _this.datetime = null;
                _this.comparison = null;
                _this.timezone = null;
                _this.daloState = model.DaloState.getInstance("DaloStateModel", _this._scopes);
                _this.wizardState = model.WizardState.getInstance("wizardCtrl", _this._scopes);
                _this.isInWizard = false;
                _this.currentDate = undefined;
                _this.onTZ1SelectionChanged = function(newVal) {
                    if (!newVal)
                        return;
                    var selectionFound = false;
                    _this.TZ2Options = [];
                    for (var idx in _this._OLSON_DB[newVal]) {
                        var item = _this._OLSON_DB[newVal][idx];
                        var itemText = item.replace("_", " ");
                        _this.TZ2Options.push({
                            item: item,
                            text: itemText
                        });
                        if (_this.TZ2Selection && _this.TZ2Selection.item == item) {
                            _this.TZ2Selection = _this.TZ2Options[_this.TZ2Options.length - 1];
                            selectionFound = true
                        }
                    }
                    if (!selectionFound)
                        _this.TZ2Selection = _this.TZ2Options[0];
                    if (_this.currentDate) {
                        _this.currentDate = _this.currentDate.tz(_this._getFormattedTimeZone());
                        _this.updateDateTimeFields()
                    }
                }
                ;
                _this.updateDateTimeFields = function() {
                    if (!_this.currentDate) {
                        return
                    }
                    _this.is12HourFormat = dm.util.date.isTwelveHoureFormat();
                    var hour = _this.currentDate.hours();
                    var minute = _this.currentDate.minutes();
                    var second = _this.currentDate.seconds();
                    var periodIndicator = "am";
                    if (_this.is12HourFormat) {
                        if (hour > 12) {
                            hour -= 12;
                            periodIndicator = "pm"
                        } else if (hour > 11) {
                            periodIndicator = "pm"
                        } else if (hour == 0) {
                            hour = 12
                        }
                    }
                    _this.datetime = {
                        date: _this.currentDate.format(moment.localeData().longDateFormat("L")),
                        hour: hour > 9 ? hour.toString(10) : "0" + hour,
                        minute: minute > 9 ? minute.toString(10) : "0" + minute,
                        second: second > 9 ? second.toString(10) : "0" + second,
                        periodIndicator: periodIndicator
                    }
                }
                ;
                _this.syncTime = function() {
                    var tzFull = "Europe/Vienna";
                    try {
                        tzFull = "" + moment.tz.guess()
                    } catch (err) {
                        console.error("failed to guess timezone")
                    }
                    _this.TZ1Selection = tzFull.split("/")[0];
                    var tz2 = tzFull.split("/")[1];
                    var tz2Text = tz2.replace("_", " ");
                    _this.TZ2Selection = {
                        item: tz2,
                        text: tz2Text
                    };
                    _this.onTZ1SelectionChanged(_this.TZ1Selection);
                    _this.currentDate = dm.util.date.getNow(_this._getFormattedTimeZone());
                    _this.updateDateTimeFields()
                }
                ;
                _this._validators = {
                    "system.name": function(val) {
                        try {
                            var regex = /^\S.*$/;
                            return regex.test(val)
                        } catch (e) {
                            return false
                        }
                    },
                    "profit.cashFactor": function(val) {
                        try {
                            if (typeof val != "number")
                                val = dm.util.helpers.parseFloat(val);
                            return !(isNaN(val) || val < .001 || val > 1e6)
                        } catch (e) {
                            return false
                        }
                    },
                    "profit.deliveryFactor": function(val) {
                        try {
                            if (typeof val != "number")
                                val = dm.util.helpers.parseFloat(val);
                            return !(isNaN(val) || val < .001 || val > 1e6)
                        } catch (e) {
                            return false
                        }
                    }
                };
                dm.ngjs.$rootScope.$watch(function() {
                    return _this.TZ1Selection
                }, _this.onTZ1SelectionChanged);
                dm.ngjs.$rootScope.$on("$translateChangeSuccess", _this.updateDateTimeFields);
                return _this
            }
            CommonSettings.prototype.setWizard = function(isInWizard) {
                this.isInWizard = isInWizard
            }
            ;
            CommonSettings.prototype.incrementDateByOneSecond = function() {
                this.currentDate = this.isInWizard ? dm.util.date.getNow(this._getFormattedTimeZone()) : this.currentDate && this.currentDate.add(1, "seconds");
                this.updateDateTimeFields()
            }
            ;
            CommonSettings.prototype._load = function() {
                var _this = this;
                return dm.ngjs.$q.all([dm.util.configRequest.get("/status/timezone/db/"), dm.util.configRequest.get("/config/date/"), dm.util.configRequest.get("/config/views/"), this.daloState.loadingPromise, this.wizardState.loadingPromise]).then(function(responses) {
                    var dbData = responses[0];
                    var dateData = responses[1];
                    var miscData = responses[2].views.misc;
                    _this.comparison = responses[2].views.comparison;
                    _this.timezone = dateData.date.timezone;
                    _this._OLSON_DB = dbData.db;
                    var data = dateData.date;
                    if (!_this.wizardState.WizardInitialized) {
                        if (_this.daloState.queryParameters.timezone != undefined)
                            data.timezone = _this.daloState.queryParameters.timezone
                    }
                    var parts = data.timezone.split("/");
                    data.timezone1 = parts[0];
                    if (parts.length == 3) {
                        data.timezone2 = parts[1] + "/" + parts[2]
                    } else {
                        data.timezone2 = parts[1]
                    }
                    _this.TZ1Options = [];
                    for (var idx in _this._OLSON_DB) {
                        _this.TZ1Options.push(idx)
                    }
                    _this.TZ1Selection = data.timezone1;
                    _this.onTZ1SelectionChanged(_this.TZ1Selection);
                    for (var optIdx in _this.TZ2Options) {
                        var opt = _this.TZ2Options[optIdx];
                        if (opt.item == data.timezone2)
                            _this.TZ2Selection = opt
                    }
                    if (_this.isInWizard) {
                        _this.syncTime()
                    } else {
                        _this.currentDate = moment.tz(data.time * 1e3, _this._getFormattedTimeZone());
                        _this.updateDateTimeFields()
                    }
                    _this.profit = miscData.profit;
                    _this.profit.cashFactor = dm.util.helpers.roundN(_this.profit.cashFactor, 3);
                    _this.profit.deliveryFactor = dm.util.helpers.roundN(_this.profit.deliveryFactor, 3);
                    _this.system.name = dm.util.string.htmlDecode(miscData.systemName);
                    _this.setOrigData("TZ1Options");
                    _this.setOrigData("TZ1Selection");
                    _this.setOrigData("TZ2Options");
                    _this.setOrigData("TZ2Selection");
                    _this.setOrigData("is12HourFormat");
                    _this.setOrigData("datetime");
                    _this.setOrigData("profit");
                    _this.setOrigData("timezone");
                    _this.setOrigData("system")
                })
            }
            ;
            CommonSettings.prototype._save = function() {
                var timezone = this._getFormattedTimeZone();
                var miscPostData = {
                    misc: {
                        profit: angular.copy(this.profit),
                        systemName: dm.util.string.htmlEncode(this.system.name)
                    }
                };
                var requests = [dm.util.configRequest.saveDef("/config/date/timezone", {
                    timezone: timezone
                }), dm.util.configRequest.saveDef("/config/date/timesync", {
                    timesync: true
                }), dm.util.configRequest.saveDef("/config/views/misc/", miscPostData)];
                if (this.isInWizard) {
                    var time = dm.util.date.getNow(timezone).unix();
                    this.currentDate = moment.tz(time * 1e3, this._getFormattedTimeZone());
                    dm.util.configRequest.saveDef("/config/date/time", {
                        time: time
                    })
                }
                return dm.ngjs.$q.all(requests).then(function() {}, function(err) {
                    console.log(err)
                })
            }
            ;
            CommonSettings.prototype._getFormattedTimeZone = function() {
                return this.TZ1Selection + "/" + this.TZ2Selection.item
            }
            ;
            return CommonSettings
        }(model.Base);
        model.CommonSettings = CommonSettings
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var util;
    (function(util) {
        var configRequest;
        (function(configRequest) {
            var ResponseMapper = function() {
                function ResponseMapper() {}
                ResponseMapper.getContent = function(response, key) {
                    var content = response && response.data && response.data.Body && response.data.Body.Data;
                    if (key && Object.keys(content).length > 0 && content.hasOwnProperty(key)) {
                        return content[key]
                    }
                    return content
                }
                ;
                return ResponseMapper
            }();
            configRequest.ResponseMapper = ResponseMapper
        }
        )(configRequest = util.configRequest || (util.configRequest = {}))
    }
    )(util = dm.util || (dm.util = {}))
}
)(dm || (dm = {}));
var round = dm.util.helpers.roundN;
var NUMBER_PHASES_DEFAULT = 3;
var dm;
(function(dm) {
    var model;
    (function(model_1) {
        var Validators = dm.validators.Validators;
        var DplSettings = function(_super) {
            __extends(DplSettings, _super);
            function DplSettings(id, scope) {
                var _this = _super.call(this, id, scope) || this;
                _this.primary_available = null;
                _this.powerLimits = null;
                _this.wattPeakReferenceValueRange = {
                    min: 0,
                    max: Validators.CPP_FLOAT_MAX,
                    unit: "W"
                };
                _this._daloState = dm.model.DaloState.getInstance("DaloStateModel", _this._scopes);
                _this._deviceDB = dm.model.DeviceDB.getInstance();
                _this.activePowerModeDependencies = ["model.powerLimits.exportLimits.activePower.softLimit.enabled", "model.powerLimits.exportLimits.activePower.hardLimit.enabled"];
                _this.softLimitValidationDependencies = ["model.powerLimits.visualization.wattPeakReferenceValue", "model.powerLimits.exportLimits.activePower.softLimit.enabled", "model.powerLimits.exportLimits.activePower.hardLimit.enabled", "model.powerLimits.exportLimits.activePower.hardLimit.powerLimit", "model.powerLimits.exportLimits.activePower.mode"];
                _this.hardLimitValidationDependencies = ["model.powerLimits.visualization.wattPeakReferenceValue", "model.powerLimits.exportLimits.activePower.hardLimit.enabled", "model.powerLimits.exportLimits.activePower.softLimit.enabled", "model.powerLimits.exportLimits.activePower.softLimit.powerLimit", "model.powerLimits.exportLimits.activePower.mode"];
                _this._activePowerModeOptions = {
                    off: dm.config.exportLimits.ActivePowerMode.off,
                    entireSystem: dm.config.exportLimits.ActivePowerMode.entireSystem
                };
                _this._validators = {
                    "powerLimits.visualization.wattPeakReferenceValue": function(value) {
                        return dm.validators.Validators.rangeValidator(_this.wattPeakReferenceValueRange, value) || _this.isOff
                    },
                    "powerLimits.exportLimits.activePower.softLimit.powerLimit": function(value) {
                        return dm.validators.Validators.rangeValidator(_this.softLimitRange, value) || _this.isOff
                    },
                    "powerLimits.exportLimits.activePower.mode": function(value) {
                        return _this._activePowerModeValidator(value)
                    },
                    "powerLimits.exportLimits.activePower.hardLimit.powerLimit": function(value) {
                        return dm.validators.Validators.rangeValidator(_this.hardLimitRange, value) || _this.isOff
                    }
                };
                _this._onSaved = function() {
                    var model = PowerLimitsHelper.viewModelToModel(_this.powerLimits, _this._phaseCount);
                    var viewModel = PowerLimitsHelper.modelToViewModel(model, _this._phaseCount);
                    _this.setOrigData("powerLimits", viewModel)
                }
                ;
                return _this
            }
            Object.defineProperty(DplSettings.prototype, "_visualization", {
                get: function() {
                    return this.powerLimits && this.powerLimits.visualization
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(DplSettings.prototype, "_factor", {
                get: function() {
                    return PowerLimitsHelper.calculateFactor(this.powerLimits, this._phaseCount)
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(DplSettings.prototype, "softLimitRange", {
                get: function() {
                    return this._calculatePowerLimitRange(this.softLimit, this.hardLimit, -10, "smallerEqualsOther")
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(DplSettings.prototype, "hardLimitRange", {
                get: function() {
                    return this._calculatePowerLimitRange(this.hardLimit, this.softLimit, 0, "greaterEqualsOther")
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(DplSettings.prototype, "hardLimit", {
                get: function() {
                    return {
                        value: this.hardLimitValue,
                        enabled: this.hardLimitEnabled,
                        absolute: this.hardLimitAbsolute
                    }
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(DplSettings.prototype, "softLimit", {
                get: function() {
                    return {
                        value: this.softLimitValue,
                        enabled: this.softLimitEnabled,
                        absolute: this.softLimitAbsolute
                    }
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(DplSettings.prototype, "weakestPhaseAvailable", {
                get: function() {
                    return !this.isHybrid && this._phaseCount > 1
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(DplSettings.prototype, "activePowerModeOptions", {
                get: function() {
                    if (this.weakestPhaseAvailable) {
                        this._activePowerModeOptions["weakestPhase"] = dm.config.exportLimits.ActivePowerMode.weakestPhase
                    } else if (this._activePowerModeOptions.hasOwnProperty("weakestPhase")) {
                        delete this._activePowerModeOptions["weakestPhase"]
                    }
                    return this._activePowerModeOptions
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(DplSettings.prototype, "softLimitValue", {
                get: function() {
                    if (this.activePower.softLimit.enabled) {
                        return this.activePower.softLimit.powerLimit
                    }
                    return undefined
                },
                set: function(val) {
                    this.powerLimits.exportLimits.activePower.softLimit.powerLimit = val
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(DplSettings.prototype, "hardLimitValue", {
                get: function() {
                    if (this.activePower.hardLimit.enabled) {
                        return this.activePower.hardLimit.powerLimit
                    }
                    return undefined
                },
                set: function(val) {
                    this.powerLimits.exportLimits.activePower.hardLimit.powerLimit = val
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(DplSettings.prototype, "isWeakestPhase", {
                get: function() {
                    return this.powerLimits.exportLimits.activePower.mode === dm.config.exportLimits.ActivePowerMode.weakestPhase
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(DplSettings.prototype, "wattPeakReferenceValuePerPhase", {
                get: function() {
                    var wattPeakReferenceValue = PowerLimitsHelper.round(this.powerLimits.visualization.wattPeakReferenceValue / this._factor);
                    return Validators.numberOrDefault(wattPeakReferenceValue)
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(DplSettings.prototype, "activePowerMode", {
                get: function() {
                    return this.powerLimits.exportLimits.activePower.mode
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(DplSettings.prototype, "activePower", {
                get: function() {
                    return this.powerLimits && this.powerLimits.exportLimits.activePower
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(DplSettings.prototype, "hardLimitEnabled", {
                get: function() {
                    if (!this.activePower) {
                        return undefined
                    }
                    return this.activePower.hardLimit.enabled
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(DplSettings.prototype, "softLimitEnabled", {
                get: function() {
                    if (!this.activePower) {
                        return undefined
                    }
                    return this.activePower.softLimit.enabled
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(DplSettings.prototype, "hardLimitAbsolute", {
                get: function() {
                    return this.powerLimits && this.powerLimits.visualization.exportLimits.activePower.displayModeHardLimit === "absolute"
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(DplSettings.prototype, "softLimitAbsolute", {
                get: function() {
                    return this.powerLimits && this.powerLimits.visualization.exportLimits.activePower.displayModeSoftLimit === "absolute"
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(DplSettings.prototype, "isOff", {
                get: function() {
                    return this.activePowerMode === dm.config.exportLimits.ActivePowerMode.off
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(DplSettings.prototype, "isHybrid", {
                get: function() {
                    return this._daloState.isHybrid()
                },
                enumerable: true,
                configurable: true
            });
            DplSettings.prototype.onDisplayModeHardLimitChanged = function(newValue, oldValue) {
                if (this.activePower) {
                    this._displayModeChanged(newValue, oldValue, this.activePower.hardLimit)
                }
            }
            ;
            DplSettings.prototype.onDisplayModeSoftLimitChanged = function(newValue, oldValue) {
                if (this.activePower) {
                    this._displayModeChanged(newValue, oldValue, this.activePower.softLimit)
                }
            }
            ;
            DplSettings.prototype.onActivePowerModeChanged = function(newValue, oldValue) {
                if (this.isHybrid) {
                    if (this.activePower && newValue === dm.config.exportLimits.ActivePowerMode.entireSystem) {
                        this.activePower.softLimit.enabled = true
                    }
                }
            }
            ;
            DplSettings.prototype._displayModeChanged = function(newValue, oldValue, powerLimit) {
                var isInitialSet = oldValue === undefined;
                if (newValue !== oldValue && !isInitialSet) {
                    if (newValue == dm.config.exportLimits.DisplayMode.absolute) {
                        powerLimit.powerLimit = PowerLimitsHelper.convertRelLimitToAbs(powerLimit.powerLimit, this._factor, this._visualization.wattPeakReferenceValue)
                    } else if (newValue === dm.config.exportLimits.DisplayMode.relative) {
                        powerLimit.powerLimit = PowerLimitsHelper.convertAbsLimitToRel(powerLimit.powerLimit, this._factor, this._visualization.wattPeakReferenceValue)
                    }
                }
            }
            ;
            DplSettings.prototype._calculatePowerLimitRange = function(powerLimit, otherPowerLimit, minRelValue, powerLimitOperator) {
                var minValue = Validators.numberOrDefault(minRelValue);
                var maxValue = 100;
                var otherPowerLimitValue = Validators.numberOrDefault(otherPowerLimit.value);
                if (!this._visualization)
                    return;
                if (powerLimit.absolute) {
                    minValue = Validators.numberOrDefault(minValue == 0 ? 0 : PowerLimitsHelper.round(this.wattPeakReferenceValuePerPhase / minValue));
                    maxValue = this.wattPeakReferenceValuePerPhase
                }
                if (otherPowerLimit.enabled) {
                    if (powerLimit.absolute && !otherPowerLimit.absolute)
                        otherPowerLimitValue = PowerLimitsHelper.convertRelLimitToAbs(otherPowerLimitValue, this._factor, Validators.numberOrDefault(this._visualization.wattPeakReferenceValue));
                    if (!powerLimit.absolute && otherPowerLimit.absolute)
                        otherPowerLimitValue = PowerLimitsHelper.convertAbsLimitToRel(otherPowerLimitValue, this._factor, Validators.numberOrDefault(this._visualization.wattPeakReferenceValue));
                    if (powerLimitOperator === "greaterEqualsOther")
                        minValue = Math.min(otherPowerLimitValue, minValue, maxValue);
                    else if (powerLimitOperator === "smallerEqualsOther")
                        maxValue = Math.max(Math.min(maxValue, otherPowerLimitValue), minValue)
                }
                return {
                    min: Validators.numberOrDefault(minValue, -Validators.CPP_FLOAT_MAX),
                    max: Validators.numberOrDefault(maxValue, Validators.CPP_FLOAT_MAX),
                    unit: powerLimit.absolute ? "W" : "%"
                }
            }
            ;
            DplSettings.prototype._load = function() {
                var _this = this;
                return dm.ngjs.$q.all([dm.util.configRequest.get("/config/meter/service/primary/"), dm.util.configRequest.get("/components/Inverter/readable"), dm.util.ajaxRequest.get("/config/exportlimit/"), this._daloState.loadingPromise, this._deviceDB.loadingPromise]).then(function(_a) {
                    var meterConfig = _a[0]
                      , inverter = _a[1]
                      , exportLimitResponse = _a[2];
                    var powerLimits = dm.util.configRequest.ResponseMapper.getContent(exportLimitResponse, "powerLimits");
                    _this._phaseCount = DplSettings._getNumberOfPhases(inverter);
                    var primary_available = meterConfig.primary.available;
                    _this.setOrigData("primary_available", primary_available);
                    _this.setOrigData("powerLimits", PowerLimitsHelper.modelToViewModel(powerLimits, _this._phaseCount))
                })
            }
            ;
            DplSettings.prototype._activePowerModeValidator = function(mode) {
                if (mode === dm.config.exportLimits.ActivePowerMode.off) {
                    return true
                }
                return this.hardLimitEnabled || this.softLimitEnabled
            }
            ;
            DplSettings.prototype._save = function() {
                var postData = {
                    powerLimits: PowerLimitsHelper.viewModelToModel(this.powerLimits, this._phaseCount)
                };
                return dm.util.configRequest.saveDef("/config/exportlimit/", postData)
            }
            ;
            DplSettings._getNumberOfPhases = function(inverter) {
                var numberOfPhases;
                var inverterHasAttributes = inverter && inverter[0] && inverter[0].hasOwnProperty("attributes");
                if (inverterHasAttributes && inverter[0].attributes.hasOwnProperty("Nameplate.cnt-ac"))
                    numberOfPhases = inverter[0].attributes["Nameplate.cnt-ac"];
                if (!numberOfPhases) {
                    numberOfPhases = NUMBER_PHASES_DEFAULT;
                    console.warn("Number of phases can't be fetched from system! Therefore fallback value \"" + NUMBER_PHASES_DEFAULT + '" is used.')
                }
                return numberOfPhases
            }
            ;
            DplSettings.prototype.isPowerLimitMode = function(mode) {
                return this.powerLimits && this.powerLimits.exportLimits.activePower.mode === mode
            }
            ;
            return DplSettings
        }(model_1.Base);
        model_1.DplSettings = DplSettings;
        var PowerLimitsHelper = function() {
            function PowerLimitsHelper() {}
            PowerLimitsHelper.copy = function(val) {
                return JSON.parse(JSON.stringify(val))
            }
            ;
            PowerLimitsHelper.modelToViewModel = function(model, phaseCount) {
                var viewModel = PowerLimitsHelper.copy(model);
                var factor = PowerLimitsHelper.calculateFactor(viewModel, phaseCount);
                if (viewModel.visualization.exportLimits.activePower.displayModeSoftLimit === dm.config.exportLimits.DisplayMode.relative) {
                    viewModel.exportLimits.activePower.softLimit.powerLimit = PowerLimitsHelper.convertAbsLimitToRel(viewModel.exportLimits.activePower.softLimit.powerLimit, factor, viewModel.visualization.wattPeakReferenceValue)
                }
                if (viewModel.visualization.exportLimits.activePower.displayModeHardLimit === dm.config.exportLimits.DisplayMode.relative) {
                    viewModel.exportLimits.activePower.hardLimit.powerLimit = PowerLimitsHelper.convertAbsLimitToRel(viewModel.exportLimits.activePower.hardLimit.powerLimit, factor, viewModel.visualization.wattPeakReferenceValue)
                }
                return viewModel
            }
            ;
            PowerLimitsHelper.viewModelToModel = function(viewModel, phaseCount) {
                var model = PowerLimitsHelper.copy(viewModel);
                var factor = PowerLimitsHelper.calculateFactor(model, phaseCount);
                if (model.exportLimits.activePower.mode === dm.config.exportLimits.ActivePowerMode.off) {
                    PowerLimitsHelper.resetPowerLimit(model.exportLimits.activePower.hardLimit);
                    PowerLimitsHelper.resetPowerLimit(model.exportLimits.activePower.softLimit);
                    model.visualization.wattPeakReferenceValue = 0;
                    model.visualization.exportLimits.activePower.displayModeHardLimit = dm.config.exportLimits.DisplayMode.absolute;
                    model.visualization.exportLimits.activePower.displayModeSoftLimit = dm.config.exportLimits.DisplayMode.absolute
                }
                if (viewModel.visualization.exportLimits.activePower.displayModeSoftLimit === dm.config.exportLimits.DisplayMode.relative) {
                    model.exportLimits.activePower.softLimit.powerLimit = PowerLimitsHelper.convertRelLimitToAbs(model.exportLimits.activePower.softLimit.powerLimit, factor, model.visualization.wattPeakReferenceValue)
                }
                if (viewModel.visualization.exportLimits.activePower.displayModeHardLimit === dm.config.exportLimits.DisplayMode.relative) {
                    model.exportLimits.activePower.hardLimit.powerLimit = PowerLimitsHelper.convertRelLimitToAbs(model.exportLimits.activePower.hardLimit.powerLimit, factor, model.visualization.wattPeakReferenceValue)
                }
                return model
            }
            ;
            PowerLimitsHelper.resetPowerLimit = function(powerLimit) {
                powerLimit.enabled = false;
                powerLimit.powerLimit = 0
            }
            ;
            PowerLimitsHelper.calculateFactor = function(model, phaseCount) {
                return model.exportLimits.activePower.mode === dm.config.exportLimits.ActivePowerMode.weakestPhase && phaseCount > 1 ? phaseCount : 1
            }
            ;
            PowerLimitsHelper.convertAbsLimitToRel = function(absValue, factor, wattPeakReferenceValue) {
                return PowerLimitsHelper.round(absValue / wattPeakReferenceValue * 100 * factor)
            }
            ;
            PowerLimitsHelper.convertRelLimitToAbs = function(relValue, factor, wattPeakReferenceValue) {
                return PowerLimitsHelper.round(wattPeakReferenceValue * relValue / 100 / factor)
            }
            ;
            PowerLimitsHelper.round = function(value, decimalPlaces) {
                if (decimalPlaces === void 0) {
                    decimalPlaces = 2
                }
                var numberToRoundStr = value.toString();
                var shiftExponent = Math.pow(10, decimalPlaces);
                var base = value;
                var idxExponent = numberToRoundStr.indexOf("e");
                if (idxExponent !== -1) {
                    var parts = numberToRoundStr.split("e");
                    base = Number(parts[0]);
                    shiftExponent *= Math.pow(10, Number(parts[1]))
                }
                var value1 = Math.round(base * shiftExponent);
                return value1 * (1 / Math.pow(10, decimalPlaces))
            }
            ;
            return PowerLimitsHelper
        }();
        model_1.PowerLimitsHelper = PowerLimitsHelper
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var GpioSettings = function(_super) {
            __extends(GpioSettings, _super);
            function GpioSettings(id, scope) {
                var _this = _super.call(this, id, scope) || this;
                _this.user = null;
                _this.stdDialog = null;
                _this.gpios = null;
                _this.features = null;
                _this.dnoFeature = null;
                _this.services = null;
                _this.optionsPerService = null;
                _this.hasExtendedModbusIF = null;
                _this.servicesPerPin = null;
                _this.availableOptionsPerService = {};
                _this.unconfiguredDNOServices = [];
                _this.blockedDNOServices = {};
                _this.dnoRules = {};
                _this.createOptionsPerService = function(gpios, services) {
                    var options = {};
                    for (var i in services) {
                        var availablePins = [];
                        if (!services[i].mandatory) {
                            availablePins.push({
                                id: -1,
                                nrStr: -1,
                                label: "none"
                            })
                        }
                        for (var j in gpios) {
                            var gpioHasAllServices = true;
                            for (var _i = 0, _a = services[i].dir; _i < _a.length; _i++) {
                                var serviceChar = _a[_i];
                                var gpioDir = gpios[j].dir;
                                if (gpioDir.indexOf(serviceChar) == -1)
                                    gpioHasAllServices = false
                            }
                            if (gpioHasAllServices)
                                availablePins.push(gpios[j]);
                            if (gpios[j].id == services[i]["default-pin"])
                                gpios[j].isDefault = true;
                            else
                                gpios[j].isDefault = false;
                            gpios[j].nrStr = gpios[j].id
                        }
                        options[services[i].name] = availablePins
                    }
                    return options
                }
                ;
                _this.initFeatures = function(features) {
                    for (var i = 0; i < features.length; i++) {
                        var feature = features[i];
                        if (feature.label == "GSTR_GPIO_TITLE_DNO")
                            _this.dnoFeature = feature;
                        feature.reqUser = "admin";
                        for (var j in _this.services) {
                            var service = _this.services[j];
                            if (service.feature != feature.label)
                                continue;
                            var reqUser = service["req-user"];
                            if (reqUser == "service")
                                feature.reqUser = "service"
                        }
                        for (var j in feature.ios) {
                            var iomapping = feature.ios[j];
                            if (_this.services[iomapping.service] && _this.services[iomapping.service].mandatory && iomapping.PinId == -1 && feature.visible)
                                iomapping.PinId = _this.services[iomapping.service]["default-pin"]
                        }
                    }
                    return features
                }
                ;
                _this.initServices = function(servicesIn) {
                    var servicesOut = {};
                    for (var i in servicesIn) {
                        var service = servicesIn[i];
                        servicesOut[service.name] = service;
                        if (service.label == "PSTR_GPIO_SRC_EVU_INPUT")
                            servicesOut[service.name].showIdx = true
                    }
                    return servicesOut
                }
                ;
                _this.updateCurrentPinUsage = function(features) {
                    var servicesPerPin = {};
                    for (var i in _this.gpios) {
                        servicesPerPin[_this.gpios[i].id] = {
                            service: "none",
                            reqUser: "admin",
                            editAllowed: true,
                            name: "none",
                            blocked: false,
                            dnoblocked: false,
                            label: "PSTR_GPIO_NONE"
                        }
                    }
                    for (var i in features) {
                        for (var j in features[i].ios) {
                            if (features[i].enable && features[i].ios[j].PinId >= 0) {
                                if (features[i].label == "GSTR_GPIO_TITLE_DNO" && servicesPerPin[features[i].ios[j].PinId].service != "none")
                                    continue;
                                servicesPerPin[features[i].ios[j].PinId] = {
                                    service: features[i].ios[j].service,
                                    blocked: !(_this.user == "service" && _this.services[features[i].ios[j].service].feature == "GSTR_GPIO_TITLE_DNO" && !_this.blockedDNOServices[features[i].ios[j].service]),
                                    dnoblocked: _this.blockedDNOServices[features[i].ios[j].service],
                                    reqUser: _this.services[features[i].ios[j].service]["req-user"],
                                    editAllowed: _this.services[features[i].ios[j].service]["req-user"] == "service" ? _this.user == "service" : true
                                }
                            }
                        }
                    }
                    return servicesPerPin
                }
                ;
                _this.updateAvailableOptionsPerService = function(features) {
                    var availableOptionsPerService = {};
                    for (var i in features) {
                        var feature = features[i];
                        for (var j in feature.ios) {
                            var iomapping = feature.ios[j];
                            var availableOptions = [];
                            if (!_this.optionsPerService[iomapping.service])
                                continue;
                            for (var k = 0; k < _this.optionsPerService[iomapping.service].length; k++) {
                                var option = _this.optionsPerService[iomapping.service][k];
                                if (option.id == _this.services[iomapping.service]["default-pin"])
                                    option.isDefault = true;
                                else
                                    option.isDefault = false;
                                if (option.id < 0 || _this.servicesPerPin[option.id].service == "none" || _this.user == "service" && _this.services[_this.servicesPerPin[option.id].service].feature == "GSTR_GPIO_TITLE_DNO" || _this.servicesPerPin[option.id].service == iomapping.service) {
                                    option.pinInUse = false
                                } else {
                                    option.pinInUse = true
                                }
                                if (option.id >= 0 && _this.blockedDNOServices[_this.servicesPerPin[option.id].service] && _this.servicesPerPin[option.id].service != iomapping.service)
                                    option.pinInUse = true;
                                availableOptions.push(angular.copy(option))
                            }
                            availableOptionsPerService[iomapping.service] = angular.copy(availableOptions)
                        }
                    }
                    return availableOptionsPerService
                }
                ;
                _this.updateFeatures = function(features, prevFeatures) {
                    _this.repareDNOPins(features);
                    _this.servicesPerPin = _this.updateCurrentPinUsage(features);
                    _this.availableOptionsPerService = _this.updateAvailableOptionsPerService(features);
                    if (_this.dnoFeature && _this.dnoFeature.enable) {
                        var dno = _this.dnoFeature;
                        for (var i in dno.ios) {
                            var iomapping = dno.ios[i];
                            if (iomapping.PinId > -1 && _this.servicesPerPin[iomapping.PinId].service != iomapping.service)
                                iomapping.PinId = -1
                        }
                    }
                    _this.updateUnconfiguredDNOPins()
                }
                ;
                _this.updateUnconfiguredDNOPins = function() {
                    var pinsPerActiveService = {};
                    for (var i in this.servicesPerPin) {
                        pinsPerActiveService[this.servicesPerPin[i].service] = i
                    }
                    this.unconfiguredDNOServices = [];
                    for (var i in this.blockedDNOServices) {
                        if (!pinsPerActiveService[i]) {
                            this.unconfiguredDNOServices.push(this.services[i])
                        }
                    }
                }
                ;
                _this.watch("features", _this.updateFeatures, true);
                _this.stdDialog = new dm.standardDialog.StandardDialog(scope);
                return _this
            }
            GpioSettings.prototype.repareDNOPins = function(features) {
                for (var featureIdx in features) {
                    var feature = features[featureIdx];
                    if (feature.label != "GSTR_GPIO_TITLE_DNO")
                        continue;
                    for (var i in feature.ios) {
                        var iomapping = feature.ios[i];
                        if (iomapping.PinId === null)
                            iomapping.PinId = -1
                    }
                }
            }
            ;
            GpioSettings.prototype.isFeatureValid = function(index) {
                var usedPinsInFeature = {};
                for (var i in this.features[index].ios) {
                    var iomapping = this.features[index].ios[i];
                    if (iomapping.PinId > -1 && (this.servicesPerPin[iomapping.PinId].blocked || usedPinsInFeature[iomapping.PinId]))
                        return false;
                    else
                        usedPinsInFeature[iomapping.PinId] = true
                }
                return true
            }
            ;
            GpioSettings.prototype.isFeatureEnabled = function(featureName) {
                for (var idx in this.features) {
                    if (this.features[idx].label === featureName && this.features[idx].enable) {
                        return true
                    }
                }
                return false
            }
            ;
            GpioSettings.prototype.isFeatureEnableDirty = function(featureName) {
                for (var idx in this.features) {
                    if (this.features[idx].label === featureName && this.isPropDirty("features[" + idx + "].enable")) {
                        return true
                    }
                }
                return false
            }
            ;
            GpioSettings.prototype.arePinsUnique = function(index) {
                var usedPinsInFeature = {};
                for (var i in this.features[index].ios) {
                    var iomapping = this.features[index].ios[i];
                    if (iomapping.PinId > -1 && usedPinsInFeature[iomapping.PinId])
                        return false;
                    else
                        usedPinsInFeature[iomapping.PinId] = true
                }
                return true
            }
            ;
            GpioSettings.prototype.disableDNORules = function() {
                var _this = this;
                for (var i in this.dnoRules) {
                    this.dnoRules[i].Active = false
                }
                var payload = {
                    dno: this.dnoRules
                };
                return dm.util.configRequest.saveDef("/servicecgi-bin/PCCconfig.cgi/dno", payload).then(function() {
                    _this.blockedDNOServices = {};
                    _this.unconfiguredDNOServices = []
                })
            }
            ;
            GpioSettings.prototype.DNOPinsValid = function() {
                var pinsPerService = {};
                for (var i in this.servicesPerPin) {
                    pinsPerService[this.servicesPerPin[i].service] = i
                }
                for (var blockedDNOService in this.blockedDNOServices) {
                    if (!pinsPerService[blockedDNOService])
                        return false
                }
                return true
            }
            ;
            GpioSettings.prototype.initBlockedDNOServices = function(dnoRules) {
                var blockedDNOServices = {};
                for (var i in dnoRules) {
                    var rule = dnoRules[i];
                    if (rule.Active) {
                        var mask = 1;
                        for (var j = 0; j < 8; j++) {
                            if ((rule.IOMask & mask) != 0)
                                blockedDNOServices[this.dnoFeature.ios[j].service] = true;
                            mask = mask * 2
                        }
                        if (rule.EVUOut)
                            blockedDNOServices["EVU_FEEDBACK"] = true
                    }
                }
                return blockedDNOServices
            }
            ;
            return GpioSettings
        }(model.Base);
        model.GpioSettings = GpioSettings;
        var AdminGpioSettings = function(_super) {
            __extends(AdminGpioSettings, _super);
            function AdminGpioSettings(id, scope) {
                var _this = _super.call(this, id, scope) || this;
                _this.user = "admin";
                return _this
            }
            AdminGpioSettings.prototype._load = function() {
                var _this = this;
                return dm.ngjs.$q.all([dm.util.configRequest.get("/config/ioservice/admin/"), dm.util.ajaxRequest.get("/js/modules/dlweb/data/capabilities-gpios.json"), dm.util.ajaxRequest.get("/js/modules/dlweb/data/services.json"), dm.util.configRequest.get("/admincgi-bin/PCCconfig.cgi/"), dm.util.configRequest.get(["/components/datamanager/attributes/"])]).then(function(responses) {
                    var deviceTreeInfo = JSON.parse(function(comp) {
                        for (var idx in comp) {
                            return comp[idx].deviceTreeInfo.trim()
                        }
                        return JSON.stringify({})
                    }(responses[4]));
                    _this.setOrigData("hasExtendedModbusIF", deviceTreeInfo.modbus.available.length > 1);
                    _this.setOrigData("gpios", responses[1].data.gpios);
                    _this.setOrigData("services", _this.initServices(responses[2].data.services));
                    _this.setOrigData("features", _this.initFeatures(responses[0].iomapping.features));
                    _this.setOrigData("optionsPerService", _this.createOptionsPerService(_this.gpios, _this.services));
                    _this.setOrigData("servicesPerPin", _this.updateCurrentPinUsage(_this.features));
                    _this.setOrigData("availableOptionsPerService", _this.updateAvailableOptionsPerService(_this.features));
                    _this.setOrigData("dnoRules", responses[3].pcc.dno);
                    _this.setOrigData("blockedDNOServices", _this.initBlockedDNOServices(responses[3].pcc.dno))
                })
            }
            ;
            AdminGpioSettings.prototype._save = function() {
                var features = angular.copy(this.features);
                for (var i = 0; i < features.length; i++) {
                    if (features[i].reqUser == "service" && this.user != "service" || features[i].visible == false) {
                        for (var j = 0; j < features[i].ios.length; j++) {
                            if (this.services[features[i].ios[j].service].feature != "GSTR_GPIO_TITLE_DNO") {
                                var origPinId = this.getOrigData("features")[i].ios[j].PinId;
                                features[i].ios[j].PinId = origPinId;
                                this.features[i].ios[j].PinId = origPinId
                            }
                        }
                    }
                    delete features[i].reqUser
                }
                var data = {
                    iomapping: {
                        features: features
                    }
                };
                return dm.util.configRequest.saveDef("/config/ioservice/" + this.user + "/", data)
            }
            ;
            return AdminGpioSettings
        }(GpioSettings);
        model.AdminGpioSettings = AdminGpioSettings;
        var ServiceGpioSettings = function(_super) {
            __extends(ServiceGpioSettings, _super);
            function ServiceGpioSettings(id, scope) {
                var _this = _super.call(this, id, scope) || this;
                _this.user = "service";
                _this.scope = null;
                _this.resetBatteryType = false;
                _this.scope = scope;
                return _this
            }
            ServiceGpioSettings.prototype._load = function() {
                var _this = this;
                this.daloState = dm.model.DaloState.getInstance("DaloStateModel", this.scope);
                var req = [dm.util.configRequest.get("/config/ioservice/service/"), dm.util.ajaxRequest.get("/js/modules/dlweb/data/capabilities-gpios.json"), dm.util.ajaxRequest.get("/js/modules/dlweb/data/services.json"), dm.util.configRequest.get("/servicecgi-bin/PCCconfig.cgi/dno"), dm.util.configRequest.get(["/components/datamanager/attributes/"]), this.daloState.loadingPromise];
                return dm.ngjs.$q.all(req).then(function(responses) {
                    if (_this.daloState.isHybrid()) {
                        _this.battModel = _this.battModel = dm.model.BatteryConfig.getInstance("BatteryConfig", _this.scope);
                        _this.battModel.loadingPromise.then()
                    }
                    var deviceTreeInfo = JSON.parse(function(comp) {
                        for (var idx in comp) {
                            return comp[idx].deviceTreeInfo.trim()
                        }
                        return JSON.stringify({})
                    }(responses[4]));
                    _this.setOrigData("hasExtendedModbusIF", deviceTreeInfo.modbus.available.length > 1);
                    _this.setOrigData("gpios", responses[1].data.gpios);
                    _this.setOrigData("services", _this.initServices(responses[2].data.services));
                    _this.setOrigData("features", _this.initFeatures(responses[0].iomapping.features));
                    _this.setOrigData("optionsPerService", _this.createOptionsPerService(_this.gpios, _this.services));
                    _this.setOrigData("servicesPerPin", _this.updateCurrentPinUsage(_this.features));
                    _this.setOrigData("availableOptionsPerService", _this.updateAvailableOptionsPerService(_this.features));
                    _this.setOrigData("dnoRules", responses[3].dno);
                    _this.setOrigData("blockedDNOServices", _this.initBlockedDNOServices(responses[3].dno))
                })
            }
            ;
            ServiceGpioSettings.prototype.resetAndSave = function() {
                var _this = this;
                if (this.battModel == null)
                    return;
                this.battModel.data.BAT_TYPE = "none";
                if (this.battModel.isMinMaxSOCFeatureAvailable) {
                    this.battModel.data.BAT_M0_SOC_MIN = 0;
                    this.battModel.data.BAT_M0_SOC_MAX = 100;
                    this.battModel.data.BAT_M0_SOC_MODE = "auto"
                }
                this.battModel.data.BAT_ENABLED = false;
                this.battModel.data.BAT_LG_CHECKBOX_INSTALLDATE = "";
                return this.battModel.save().finally(function() {
                    _this.resetBatteryType = false
                })
            }
            ;
            ServiceGpioSettings.prototype.setResetBatteryType = function(state) {
                this.resetBatteryType = state
            }
            ;
            ServiceGpioSettings.prototype.crossCheckForSaving = function() {
                var _this = this;
                var getStorageEnableChanged = function() {
                    var featureName = "GSTR_GPIO_TITLE_STORAGE";
                    for (var idx in _this.features) {
                        if (_this.features[idx].label === featureName && _this.isPropChanged("features[" + idx + "].enable")) {
                            return true
                        }
                    }
                    return false
                };
                if (!getStorageEnableChanged()) {
                    return true
                } else {
                    if (this.isFeatureEnabled("GSTR_GPIO_TITLE_STORAGE")) {
                        if (this.battModel && (this.battModel.data.BAT_TYPE == "sony" || this.battModel.data.BAT_TYPE == "byd_b_box_hv")) {
                            this.resetBatteryType = true
                        }
                        return true
                    } else {
                        if (this.battModel && this.battModel.data.BAT_TYPE && this.battModel.data.BAT_TYPE !== "none" && !this.resetBatteryType) {
                            this.stdDialog.showDialog("STORAGE_FEATURE_HINT_OFF");
                            return false
                        }
                        return true
                    }
                }
            }
            ;
            ServiceGpioSettings.prototype._save = function() {
                if (!this.crossCheckForSaving())
                    return dm.ngjs.$q.reject();
                var req = [];
                if (this.resetBatteryType)
                    req.push(this.resetAndSave());
                var features = angular.copy(this.features);
                for (var i = 0; i < features.length; i++) {
                    delete features[i].reqUser
                }
                var data = {
                    iomapping: {
                        features: features
                    }
                };
                req.push(dm.util.configRequest.saveDef("/config/ioservice/" + this.user + "/", data));
                return dm.ngjs.$q.all(req)
            }
            ;
            return ServiceGpioSettings
        }(GpioSettings);
        model.ServiceGpioSettings = ServiceGpioSettings
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var InverterSettings = function(_super) {
            __extends(InverterSettings, _super);
            function InverterSettings(id, scope) {
                var _this = _super.call(this, id, scope) || this;
                _this.viewsData = null;
                _this.misc = null;
                _this.comparison = null;
                _this.inverters = null;
                _this.updatingInverterList = false;
                _this.updateInverterList = function(getInverterInfo) {
                    if (_this.updatingInverterList)
                        return;
                    _this.updatingInverterList = true;
                    if (!getInverterInfo)
                        getInverterInfo = dm.util.configRequest.get("/status/inverteronline/");
                    _this.inverters = {};
                    var self = _this;
                    return dm.ngjs.$q.all([getInverterInfo, dm.ngjs.$translate("INVERTER"), dm.model.DeviceDB.getInstance().loadingPromise, dm.util.configRequest.get("/config/views/")]).then(function(responses) {
                        var inverterOnline = responses[0];
                        var inverterInfo = {};
                        var strInverter = responses[1];
                        var viewsData = responses[3].views;
                        self.setOrigData("viewsData", viewsData);
                        self.misc = viewsData.misc;
                        self.misc.systemName = dm.util.string.htmlDecode(self.misc.systemName);
                        self.setOrigData("misc");
                        self.setOrigData("comparison", viewsData.comparison);
                        $.each(inverterOnline, function(id, inverterDT) {
                            inverterInfo[id] = {
                                DT: inverterDT,
                                deviceType: "",
                                name: "",
                                Wp: -1,
                                isWatched: true
                            };
                            var name = dm.model.DeviceDB.getInstance().GetInverterProductName(inverterDT, strInverter);
                            try {
                                if (name.indexOf("Fronius ", 0) == 0) {
                                    name = name.substr(8, name.length - 8)
                                }
                            } catch (e) {}
                            inverterInfo[id].deviceType = name;
                            var Name = dm.util.string.htmlDecode(self.comparison[id].name);
                            if (Name == "")
                                Name = name + " (" + id + ")";
                            inverterInfo[id].name = Name;
                            var Wp = self.comparison[id].Wp;
                            if (Wp == -1)
                                Wp = null;
                            inverterInfo[id].Wp = Wp;
                            try {
                                inverterInfo[id].isWatched = self.comparison[id].isWatched
                            } catch (e) {}
                        });
                        self.inverters = inverterInfo;
                        self.setOrigData("inverters");
                        self.updatingInverterList = false
                    })
                }
                ;
                _this.isNameValid = function(name) {
                    return name != ""
                }
                ;
                _this.isWpValid = function(wp) {
                    if (isNaN(wp) || !/^\d+$/.test(wp) || parseInt(wp) < 0 || parseInt(wp) > 2e6)
                        return false;
                    return true
                }
                ;
                _this._validators = {
                    inverters: function(val) {
                        for (var LNR in val) {
                            var data = val[LNR];
                            _this.curLNR = LNR;
                            if (!_this.isNameValid(data.name))
                                return false;
                            if (!_this.isWpValid(data.Wp))
                                return false
                        }
                        return true
                    },
                    "misc.systemName": function(val) {
                        if (val == undefined || val == "")
                            return false;
                        try {
                            var regex = /^\S.*$/;
                            return regex.test(val)
                        } catch (e) {
                            return false
                        }
                    }
                };
                return _this
            }
            InverterSettings.prototype._load = function() {
                return this.updateInverterList()
            }
            ;
            InverterSettings.prototype._save = function() {
                for (var LNR in this.inverters) {
                    var inv = this.inverters[LNR];
                    this.viewsData.comparison[LNR].name = dm.util.string.htmlEncode(inv.name);
                    try {
                        this.viewsData.comparison[LNR].Wp = parseInt(inv.Wp);
                        this.viewsData.comparison[LNR].isWatched = inv.isWatched
                    } catch (e) {}
                }
                var viewsData = angular.copy(this.viewsData);
                viewsData.misc.systemName = dm.util.string.htmlEncode(this.misc.systemName);
                return dm.util.configRequest.saveDef("/config/views/", {
                    views: viewsData
                })
            }
            ;
            return InverterSettings
        }(model.Base);
        model.InverterSettings = InverterSettings
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var aMeterState;
        (function(aMeterState) {
            aMeterState[aMeterState["Searching"] = 0] = "Searching";
            aMeterState[aMeterState["OK"] = 1] = "OK";
            aMeterState[aMeterState["TimedOut"] = 2] = "TimedOut";
            aMeterState[aMeterState["ADDMETER"] = 3] = "ADDMETER";
            aMeterState[aMeterState["NOTCONFIGURED"] = 4] = "NOTCONFIGURED";
            aMeterState[aMeterState["ERROR"] = 5] = "ERROR"
        }
        )(aMeterState = model.aMeterState || (model.aMeterState = {}));
        var MeterSettings = function(_super) {
            __extends(MeterSettings, _super);
            function MeterSettings(id, scope) {
                var _this = _super.call(this, id, scope) || this;
                _this.daloState = model.DaloState.getInstance("DaloStateModel", _this._scopes);
                _this.circuitLink = null;
                _this.isAppMode = false;
                _this.IsMBRTUAvailable = false;
                _this.primaryMeterOptions = null;
                _this.secondaryMeterOptions = null;
                _this.scope = null;
                _this.df = undefined;
                _this.s0Idx = [];
                _this.secondaryMeterData = null;
                _this.dialogOpen = false;
                _this.isNewSecondaryMeter = false;
                _this.scanningForAddr = null;
                _this.dialogData = {
                    meterPower: 0,
                    currentPosition: -1,
                    meterSerial: 0,
                    meterState: aMeterState.NOTCONFIGURED,
                    timeOutCount: 10,
                    primary: true
                };
                _this._validators = {
                    "dialogConfig.s0settings.ImpKWh": function(val) {
                        try {
                            if (!dm.util.helpers.isInteger(val))
                                return false;
                            val = parseInt(val);
                            return val >= 1 && val <= 1e5
                        } catch (e) {
                            return false
                        }
                    },
                    "dialogConfig.smsettings.id": function(val) {
                        try {
                            if (!dm.util.helpers.isInteger(val))
                                return false;
                            val = parseInt(val);
                            return _this.canIdBeConfigured(val)
                        } catch (e) {
                            return false
                        }
                    },
                    "dialogConfig.category": function(val) {
                        try {
                            return val != ""
                        } catch (e) {
                            return false
                        }
                    },
                    "dialogTransform.currenttransform.numerator": function(val) {
                        try {
                            if (!angular.isDefined(val))
                                return true;
                            if (val.fixed === true) {
                                return true
                            } else {
                                if (!dm.util.helpers.isInteger(val.value))
                                    return false;
                                if (val.value < val.min || val.value > val.max)
                                    return false;
                                return true
                            }
                        } catch (e) {
                            return false
                        }
                    },
                    "dialogTransform.currenttransform.denominator": function(val) {
                        try {
                            if (!angular.isDefined(val))
                                return true;
                            if (val.fixed === true) {
                                return true
                            } else {
                                if (!dm.util.helpers.isInteger(val.value))
                                    return false;
                                if (val.value < val.min || val.value > val.max)
                                    return false;
                                return true
                            }
                        } catch (e) {
                            return false
                        }
                    }
                };
                _this.getMeterTemplate = dm.util.templateUrls.getMeterTemplate;
                _this.scope = scope;
                var self = _this;
                return _this
            }
            MeterSettings.prototype.primaryMeterType = function(type) {
                if (!type) {
                    if (this.configMeter.primary.config.available) {
                        if (this.configMeter.primary.config.type == "s0")
                            return "s0_" + this.configMeter.primary.config.s0settings.nr;
                        else
                            return this.configMeter.primary.config.type
                    }
                    return "none"
                }
                if (type == "none") {
                    this.configMeter.primary.config.available = false;
                    this.configMeter.primary.transform = null;
                    this.configMeter.primary.meterPower = null;
                    this.configMeter.primary.currentPosition = null;
                    this.configMeter.primary.meterSerial = null;
                    this.configMeter.primary.meterState = aMeterState.NOTCONFIGURED;
                    this.configMeter.primary.timeOutCount = 10
                } else {
                    this.configMeter.primary.config.available = true;
                    if (this.startsWith(type, "s0")) {
                        this.configMeter.primary.config.type = "s0";
                        this.configMeter.primary.config.s0settings.nr = parseInt(type.split("_")[1])
                    } else {
                        this.configMeter.primary.config.type = type
                    }
                }
            }
            ;
            MeterSettings.prototype.getLabelNum = function(opt) {
                var val = opt.value;
                if (!val || val.indexOf("s0_") < 0)
                    return "";
                if (this.s0Idx.indexOf(val) < 0)
                    this.s0Idx.push(val);
                if (opt.invId != undefined)
                    return " " + opt.invId;
                return " " + this.s0Idx.indexOf(val)
            }
            ;
            MeterSettings.prototype.isMeterActive = function(primary, index) {
                if (primary)
                    return this.configMeter.primary.config.available;
                else
                    return true
            }
            ;
            MeterSettings.prototype.isSmartMeter = function(meter) {
                return meter.type == "smrtu" || meter.type == "smtcp"
            }
            ;
            MeterSettings.prototype.setMeterType = function(primary, type, index) {
                if (type != "smrtu" && type != "smtcp" && !(type.indexOf("s0") == 0) && type != "none")
                    return;
                if (primary)
                    this.configMeter.primary.config.type = type;
                else
                    this.configMeter.secondary[index].config.type = type
            }
            ;
            MeterSettings.prototype.isLoadMeter = function(primary, index) {
                if (primary)
                    return this.configMeter.primary.config.isLoadMeter;
                else
                    return this.configMeter.secondary[index].config.position == 1
            }
            ;
            MeterSettings.prototype.getMinMax = function(type) {
                if (type == "SMId")
                    return {
                        MIN: 2,
                        MAX: 255
                    };
                if (type == "numerator")
                    return {
                        MIN: this.dialogTransform.currenttransform.numerator.min,
                        MAX: this.dialogTransform.currenttransform.numerator.max
                    };
                else if (type == "denominator")
                    return {
                        MIN: this.dialogTransform.currenttransform.denominator.min,
                        MAX: this.dialogTransform.currenttransform.denominator.max
                    };
                else if (type == "s0")
                    return {
                        MIN: 1,
                        MAX: 1e5
                    }
            }
            ;
            MeterSettings.prototype.isPrimaryMeterConfigured = function() {
                return this.configMeter.primary.config.available
            }
            ;
            MeterSettings.prototype.addNewSecondaryMeter = function(type) {
                var s0Nr = 0;
                var newId = 2;
                var newPos = 3;
                var ip = "";
                var port = 502;
                this.isNewSecondaryMeter = true;
                if (type.indexOf("s0") == 0) {
                    s0Nr = parseInt(type.split("_")[1]);
                    type = "s0"
                } else if (type == "smrtu") {
                    var currentIds = [];
                    for (var meterIdx in this.configMeter.secondary) {
                        var meter = this.configMeter.secondary[meterIdx];
                        currentIds.push(meter.config.smsettings.id)
                    }
                    var foundNewId = false;
                    while (!foundNewId) {
                        if (currentIds.indexOf(newId) == -1)
                            foundNewId = true;
                        else
                            newId = newId + 1
                    }
                } else if (type == "smtcp") {}
                this.dialogConfig = angular.copy({
                    type: type,
                    position: newPos,
                    name: "",
                    category: "METER_CAT_OTHER",
                    s0settings: {
                        ImpKWh: 1e4,
                        nr: s0Nr
                    },
                    smsettings: {
                        id: newId,
                        ip: ip,
                        port: port
                    }
                });
                this.dialogTransform = undefined;
                this.dialogData.meterState = aMeterState.ADDMETER;
                this.dialogData.timeOutCount = 10;
                this.dialogData.meterPower = undefined;
                this.dialogData.currentPosition = undefined;
                this.dialogData.meterSerial = undefined;
                this.dialogData.primary = false;
                this.dialogOpenState(true)
            }
            ;
            MeterSettings.prototype.resetMeterCategory = function() {
                this.dialogConfig.category = ""
            }
            ;
            MeterSettings.prototype.updateDialogOrigs = function(updateConfig, updateTransform) {
                if (updateConfig)
                    this.setOrigData("dialogConfig");
                if (updateTransform)
                    this.setOrigData("dialogTransform")
            }
            ;
            MeterSettings.prototype._load = function() {
                var _this = this;
                return dm.ngjs.$q.all([dm.util.configRequest.get("/status/inverteronline/"), dm.util.configRequest.get("/config/meter/admin/"), this.daloState.loadingPromise]).then(function(responses) {
                    var self = _this;
                    _this.setOrigData("IsMBRTUAvailable", _this.daloState.isMBRTUAvailable);
                    _this.circuitLink = "/help/" + (_this.daloState.isHybrid() ? "SE_DS_Energy_Profiling_EN_V1.pdf" : "Schema_Multimeter_V2.pdf");
                    _this.setOrigData("circuitLink");
                    _this.isAppMode = _this.daloState.queryParameters.app == "true";
                    _this.setOrigData("isAppMode");
                    _this.secondaryMeterOptions = [];
                    _this.secondaryMeterOptions.push({
                        value: "none",
                        label: "METER_NO"
                    });
                    if (_this.IsMBRTUAvailable) {
                        _this.secondaryMeterOptions.push({
                            value: "smrtu",
                            label: "METER_MB"
                        })
                    }
                    _this.primaryMeterOptions = [];
                    angular.forEach(_this.secondaryMeterOptions, function(v, k) {
                        self.primaryMeterOptions.push(angular.copy(v))
                    });
                    if (!_this.daloState.isHybrid()) {
                        var visibleInverter = responses[0];
                        for (var invId in visibleInverter) {
                            _this.primaryMeterOptions.push({
                                value: "s0_" + invId,
                                label: "METER_S0",
                                invId: invId
                            })
                        }
                    }
                    _this.configMeter = {
                        primary: {
                            config: responses[1].meter.primary,
                            meterState: responses[1].meter.primary.available ? aMeterState.Searching : aMeterState.NOTCONFIGURED,
                            timeOutCount: 10
                        }
                    };
                    _this.configMeter.secondary = new Array;
                    for (var _i = 0, _a = responses[1].meter.secondary; _i < _a.length; _i++) {
                        var config_1 = _a[_i];
                        _this.configMeter.secondary.push({
                            config: config_1,
                            meterState: aMeterState.Searching,
                            timeOutCount: 10
                        })
                    }
                    _this.setOrigData("timedOut", false);
                    _this.setOrigData("dialogConfig", _this.configMeter.primary.config);
                    _this.setOrigData("configMeter", _this.configMeter);
                    _this.setOrigData("meterOptions")
                })
            }
            ;
            MeterSettings.prototype.canIdBeConfigured = function(meterId) {
                if (!this.isNewSecondaryMeter || this.dialogConfig.type !== "smrtu")
                    return true;
                if (this.dialogData.primary) {
                    return meterId == 1
                } else {
                    if (meterId <= 1)
                        return false;
                    for (var idx in this.configMeter.secondary) {
                        var meter = this.configMeter.secondary[idx];
                        if (meter.config.smsettings.id == meterId)
                            return false
                    }
                    return meterId >= 2 && meterId <= 14 || meterId >= 84 && meterId <= 127
                }
            }
            ;
            MeterSettings.prototype.secondaryDisabled = function(type) {
                return type == "none" || this.startsWith(this.configMeter.primary.config.type, "s0") || !this.IsMBRTUAvailable
            }
            ;
            MeterSettings.prototype.secondaryMeterCanBeConfigured = function() {
                return this.configMeter.secondary.length <= 14 - 2 + 1 + (127 - 84 + 1)
            }
            ;
            MeterSettings.prototype.saveConfigForScanning = function() {
                if (this.validate()) {
                    this.dialogData.meterState = aMeterState.Searching;
                    this.copyDialogDataBack();
                    this._saveConfig();
                    this.dialogConfig.category = "";
                    this.scanningForAddr = this.dialogConfig.smsettings.id
                }
            }
            ;
            MeterSettings.prototype.setMeterSearching = function(primary, index) {
                if (primary) {
                    this.configMeter.primary.meterState = aMeterState.Searching;
                    this.configMeter.primary.timeOutCount = 10
                } else {
                    this.configMeter.secondary[index].meterState = aMeterState.Searching;
                    this.configMeter.secondary[index].timeOutCount = 10
                }
            }
            ;
            MeterSettings.prototype.dialogOpenState = function(state, save) {
                if (state !== undefined) {
                    if (!state) {
                        this.isNewSecondaryMeter = false;
                        this.scanningForAddr = null;
                        if (save) {
                            if (this.isPropDirty("dialogConfig")) {
                                this.setMeterSearching(this.dialogData.primary, this.dialogData.index);
                                this._saveConfig()
                            }
                            if (this.isPropDirty("dialogTransform")) {
                                this.setMeterSearching(this.dialogData.primary, this.dialogData.index);
                                this._saveTransform(this.dialogData.primary, this.dialogData.index)
                            }
                        }
                    }
                    this.dialogOpen = state
                }
                return this.dialogOpen
            }
            ;
            MeterSettings.prototype.copyMeterDataForDialog = function(primary, index) {
                this.dialogData = {
                    meterPower: null,
                    currentPosition: null,
                    meterSerial: null,
                    meterState: aMeterState.NOTCONFIGURED,
                    timeOutCount: 10,
                    primary: primary,
                    index: index
                };
                var resetMeterCategory = this.dialogConfig && this.dialogConfig.category == "";
                this.dialogConfig = null;
                this.dialogTransform = null;
                if (primary) {
                    this.dialogConfig = angular.copy(this.configMeter.primary.config);
                    this.dialogTransform = angular.copy(this.configMeter.primary.transform);
                    this.dialogData.meterState = this.configMeter.primary.meterState;
                    this.dialogData.meterPower = this.configMeter.primary.meterPower;
                    this.dialogData.currentPosition = this.configMeter.primary.currentPosition;
                    this.dialogData.meterSerial = this.configMeter.primary.meterSerial
                } else {
                    this.dialogConfig = angular.copy(this.configMeter.secondary[index].config);
                    if (this.dialogConfig.position >= 256) {
                        this.dialogData.secondaryPosition = this.dialogConfig.position;
                        this.dialogConfig.position = 255
                    }
                    if (resetMeterCategory)
                        this.dialogConfig.category = "";
                    this.dialogTransform = angular.copy(this.configMeter.secondary[index].transform);
                    this.dialogData.meterState = this.configMeter.secondary[index].meterState;
                    this.dialogData.meterPower = this.configMeter.secondary[index].meterPower;
                    this.dialogData.currentPosition = this.configMeter.secondary[index].currentPosition;
                    this.dialogData.meterSerial = this.configMeter.secondary[index].meterSerial
                }
                this.dialogData.primary = primary;
                this.dialogData.index = index;
                this.updateDialogOrigs(true, true);
                this.dialogOpenState(true)
            }
            ;
            MeterSettings.prototype.copyDialogDataBack = function() {
                if (this.dialogData.primary) {
                    this.configMeter.primary.config = angular.copy(this.dialogConfig);
                    this.configMeter.primary.transform = angular.copy(this.dialogTransform);
                    this.configMeter.primary.meterState = this.dialogData.meterState;
                    this.configMeter.primary.timeOutCount = this.dialogData.timeOutCount
                } else {
                    if (this.isNewSecondaryMeter) {
                        this.configMeter.secondary.push(angular.copy({
                            config: this.dialogConfig,
                            transform: this.dialogTransform,
                            meterState: this.dialogData.meterState,
                            timeOutCount: 10
                        }));
                        this.dialogData.primary = false;
                        this.dialogData.index = this.configMeter.secondary.length - 1;
                        this.isNewSecondaryMeter = false
                    } else {
                        if (this.dialogConfig.position == 255) {
                            if (this.dialogData.secondaryPosition >= 256) {
                                this.dialogConfig.position = this.dialogData.secondaryPosition
                            } else {
                                var currentPositions = [];
                                for (var meterIdx in this.configMeter.secondary) {
                                    var meter = this.configMeter.secondary[meterIdx];
                                    if (Number(meterIdx) != this.dialogData.index)
                                        currentPositions.push(meter.config.position)
                                }
                                var newPosition = 256;
                                var foundPosition = false;
                                while (!foundPosition) {
                                    if (currentPositions.indexOf(newPosition) == -1)
                                        foundPosition = true;
                                    else
                                        newPosition = newPosition + 1
                                }
                                this.dialogConfig.position = newPosition
                            }
                        }
                        this.configMeter.secondary[this.dialogData.index].config = angular.copy(this.dialogConfig);
                        this.configMeter.secondary[this.dialogData.index].transform = angular.copy(this.dialogTransform);
                        this.configMeter.secondary[this.dialogData.index].meterState = this.dialogData.meterState;
                        this.configMeter.secondary[this.dialogData.index].timeOutCount = this.dialogData.timeOutCount
                    }
                }
            }
            ;
            MeterSettings.prototype.saveConfig = function() {
                this._saveConfig()
            }
            ;
            MeterSettings.prototype._saveConfig = function(setOrig) {
                var _this = this;
                if (!this.configMeter.primary.config.available)
                    this.configMeter.primary.meterState = undefined;
                if (!this.configMeter.primary.config.available || this.configMeter.primary.config.available && this.configMeter.primary.config.type != "smrtu") {
                    this.configMeter.secondary = []
                }
                var mdata = angular.copy(this.configMeter);
                var meter = {
                    primary: mdata.primary.config,
                    secondary: []
                };
                for (var _i = 0, _a = mdata.secondary; _i < _a.length; _i++) {
                    var aSecondary = _a[_i];
                    meter.secondary.push(aSecondary.config)
                }
                var postData = {
                    meter: meter
                };
                return dm.util.configRequest.saveDef("/config/meter/service/", postData).then(function() {
                    if (setOrig)
                        _this.setOrigData("configMeter")
                })
            }
            ;
            MeterSettings.prototype._saveTransform = function(primary, index) {
                var mdata;
                if (primary)
                    mdata = angular.copy(this.configMeter.primary);
                else
                    mdata = angular.copy(this.configMeter.secondary[index]);
                if (mdata.config.type == "smrtu") {
                    var req = [];
                    var addr = mdata.config.smsettings.id;
                    if (mdata.transform.currenttransform) {
                        var postData = {
                            service: "modbus-meter",
                            serial: mdata.transform.serial,
                            component: mdata.transform.component,
                            command: "currenttransform",
                            arg: mdata.transform.currenttransform
                        };
                        req.push(dm.ngjs.$http.post("/admincgi-bin/modbus-config.cgi", JSON.stringify(postData)))
                    }
                    if (mdata.transform.nettype) {
                        var postData = {
                            service: "modbus-meter",
                            serial: mdata.transform.serial,
                            component: mdata.transform.component,
                            command: "nettype",
                            arg: mdata.transform.nettype
                        };
                        req.push(dm.ngjs.$http.post("/admincgi-bin/modbus-config.cgi", JSON.stringify(postData)))
                    }
                    if (req.length > 0) {
                        dm.ngjs.$q.all(req).then(function(responses) {}).catch(function(e) {})
                    }
                }
            }
            ;
            MeterSettings.prototype.copyStateValues2DialogSettings = function() {
                var self = this;
                var setDialogData = function(meter) {
                    if (!meter)
                        return;
                    self.dialogData.meterState = meter.meterState;
                    self.dialogData.meterPower = meter.meterPower;
                    self.dialogData.currentPosition = meter.currentPosition;
                    self.dialogData.meterSerial = meter.meterSerial;
                    if (!self.dialogTransform && meter.transform && (meter.transform.currenttransform || meter.transform.nettype)) {
                        self.dialogTransform = angular.copy({
                            currenttransform: meter.transform.currenttransform,
                            nettype: meter.transform.nettype,
                            serial: meter.transform.serial,
                            component: meter.transform.component
                        });
                        self.updateDialogOrigs(false, true)
                    }
                };
                if (!this.dialogConfig)
                    return;
                if (this.dialogData.primary) {
                    setDialogData(this.configMeter.primary)
                } else {
                    setDialogData(this.configMeter.secondary[this.dialogData.index])
                }
            }
            ;
            MeterSettings.prototype.updateTimeOutValues = function() {
                if (this.configMeter.primary.config.available) {
                    if (this.configMeter.primary.meterState == aMeterState.Searching) {
                        if (this.configMeter.primary.timeOutCount > 0) {
                            this.configMeter.primary.timeOutCount = this.configMeter.primary.timeOutCount - 1
                        } else {
                            this.configMeter.primary.meterState = aMeterState.TimedOut
                        }
                    }
                }
                if (this.configMeter.secondary.length > 0) {
                    for (var _i = 0, _a = this.configMeter.secondary; _i < _a.length; _i++) {
                        var cfgMeter = _a[_i];
                        if (cfgMeter.meterState == aMeterState.Searching) {
                            if (cfgMeter.timeOutCount > 0) {
                                cfgMeter.timeOutCount = cfgMeter.timeOutCount - 1
                            } else {
                                cfgMeter.meterState = aMeterState.TimedOut
                            }
                        }
                    }
                }
                if (this.dialogOpenState()) {
                    if (this.dialogData.meterState == aMeterState.Searching) {
                        if (this.dialogData.timeOutCount > 0)
                            this.dialogData.timeOutCount = this.dialogData.timeOutCount - 1;
                        else
                            this.dialogData.meterState = aMeterState.TimedOut
                    }
                }
            }
            ;
            MeterSettings.prototype.setMeterAttributes = function(componentId, meterConfig, attributes, channels, found) {
                if (found) {
                    if (channels.PowerReal_P_Sum == undefined) {
                        meterConfig.meterState = aMeterState.ERROR
                    } else {
                        meterConfig.meterState = aMeterState.OK;
                        meterConfig.meterPower = Math.floor(channels.PowerReal_P_Sum)
                    }
                    meterConfig.currentPosition = channels.Meter_Location_Current;
                    meterConfig.meterSerial = attributes.serial;
                    if (!meterConfig.transform)
                        meterConfig.transform = {
                            currenttransform: null,
                            nettype: null,
                            serial: null,
                            component: componentId
                        };
                    if (attributes.currenttransform && !meterConfig.transform.currenttransform)
                        meterConfig.transform.currenttransform = JSON.parse(attributes.currenttransform);
                    if (attributes.nettype && !meterConfig.transform.nettype)
                        meterConfig.transform.nettype = JSON.parse(attributes.nettype);
                    if (attributes.serial && !meterConfig.transform.serial) {
                        try {
                            meterConfig.transform.serial = JSON.parse(attributes.serial)
                        } catch (e) {}
                    }
                    if (!this.isNewSecondaryMeter && this.dialogOpenState())
                        this.copyStateValues2DialogSettings()
                }
            }
            ;
            MeterSettings.prototype.startsWith = function(str, comp) {
                if (!str)
                    return false;
                return str.indexOf(comp) == 0
            }
            ;
            MeterSettings.prototype.equalsWith = function(str, comp) {
                return str === comp
            }
            ;
            MeterSettings.prototype.foundMeter = function(componentId, meter, found) {
                if (this.configMeter.primary.config.type == "s0" && meter.attributes.if == "LN" && meter.attributes.addr == this.configMeter.primary.config.s0settings.nr || this.startsWith(meter.attributes.id, "rtu-meter") && this.equalsWith(meter.attributes.addr, "1")) {
                    this.setMeterAttributes(componentId, this.configMeter.primary, meter.attributes, meter.channels, found)
                } else {
                    for (var _i = 0, _a = this.configMeter.secondary; _i < _a.length; _i++) {
                        var cfgMeter = _a[_i];
                        if (cfgMeter.config.type == "smrtu") {
                            if (cfgMeter.config.smsettings.id == meter.attributes.addr)
                                this.setMeterAttributes(componentId, cfgMeter, meter.attributes, meter.channels, found)
                        } else if (cfgMeter.config.type == "s0") {
                            if (cfgMeter.config.s0settings.nr == meter.attributes.addr)
                                this.setMeterAttributes(componentId, cfgMeter, meter.attributes, meter.channels, found)
                        }
                    }
                }
            }
            ;
            MeterSettings.prototype.reactivateSearching = function() {
                this.dialogData.meterState = aMeterState.Searching;
                this.dialogData.timeOutCount = 10;
                this.copyDialogDataBack();
                this._saveConfig()
            }
            ;
            MeterSettings.prototype.copyScanningMeterDataToDialog = function() {
                if (!this.scanningForAddr)
                    return;
                for (var meterIdx in this.configMeter.secondary) {
                    var meter = this.configMeter.secondary[meterIdx];
                    if (meter.config.smsettings.id == this.scanningForAddr && meter.meterState == aMeterState.OK) {
                        this.copyMeterDataForDialog(false, parseInt(meterIdx));
                        this.scanningForAddr = null
                    }
                }
            }
            ;
            MeterSettings.prototype.startMeterPolling = function() {
                var self = this;
                this.df = dm.util.DataFetcher.newInstance(function() {
                    return dm.util.ajaxRequest.get("/components/PowerMeter/readable")
                }, function(response) {
                    if (response.status != 200 || response.data.Head.Status.Code != 0)
                        return;
                    var theMeters;
                    try {
                        theMeters = response.data.Body.Data
                    } catch (e) {
                        return
                    }
                    self.secondaryMeterData = theMeters;
                    for (var meterComponentId in theMeters) {
                        var meter = theMeters[meterComponentId];
                        self.foundMeter(meterComponentId, meter, meter.attributes["[ENABLE]"] == "true" && meter.attributes["[VISIBLE]"] == "true")
                    }
                    self.copyScanningMeterDataToDialog();
                    self.updateTimeOutValues()
                });
                if (this.df)
                    this.df.subscribe("meterSettingsModel", 3e3)
            }
            ;
            MeterSettings.prototype.stopMeterPolling = function() {
                if (this.df) {
                    this.df.unsubscribe("meterSettingsModel");
                    this.df = null
                }
            }
            ;
            MeterSettings.prototype._save = function(setOrig) {
                return this._saveConfig(setOrig)
            }
            ;
            return MeterSettings
        }(model.Base);
        model.MeterSettings = MeterSettings
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var NetworkConfig = function(_super) {
            __extends(NetworkConfig, _super);
            function NetworkConfig(id, scope) {
                var _this = _super.call(this, id, scope) || this;
                _this.daloState = model.DaloState.getInstance("DaloStateModel", _this._scopes);
                _this.networkConfigs = null;
                _this.ifaceEth0ConfigFields = null;
                _this.isWlanAvailable = null;
                _this.ifaceWlan0ConfigFields = null;
                _this.saveWifiPromise = dm.ngjs.$q(function(res) {
                    res()
                });
                _this.saveWifiIPPromise = dm.ngjs.$q(function(res) {
                    res()
                });
                _this.saveSelInetIfacePromise = dm.ngjs.$q(function(res) {
                    res()
                });
                _this.saveWifiIPSettingsInvoked = false;
                _this.isIPValid = function(value) {
                    if (!value)
                        return false;
                    if (value instanceof Array) {
                        var valid = true;
                        for (var i in value) {
                            valid = valid && _this.isIPValid(value[i])
                        }
                        return valid
                    }
                    if (value == "0.0.0.0")
                        return false;
                    if (value == "255.255.255.255")
                        return false;
                    if (value == "127.0.0.1")
                        return false;
                    var regexIP = /^(?:[0-9]|[1-9][0-9]|[1][0-9][0-9]|[2][0-4][0-9]|[2][5][0-5])(?:\.(?:[0-9]|[1-9][0-9]|[1][0-9][0-9]|[2][0-4][0-9]|[2][5][0-5])){2}(?:\.(?:[1-9]|[1-9][0-9]|[1][0-9][0-9]|[2][0-4][0-9]|[2][5][0-5]))$/;
                    var valid = value.match(regexIP) == null ? false : true;
                    if (valid) {
                        if (dm.util.string.StartsWith(value, "192.168.250"))
                            return false;
                        if (dm.util.string.StartsWith(value, "169.254.0"))
                            return false
                    }
                    return valid
                }
                ;
                _this.selectedWLAN = null;
                _this._validators = {
                    "networkConfigs.eth0.ipAddress": _this.isIPValid,
                    "networkConfigs.eth0.subnetMask": function(value) {
                        if (!value)
                            return false;
                        var regexMask = /^(?:0|128|192|224|240|248|252|254|255)(\.(?:0|128|192|224|240|248|252|254|255)){2}(\.(?:0|128|192|224|240|248|252|254))$/;
                        if (value.match(regexMask) == null ? false : true) {
                            var nums = value.split(".");
                            for (var i = 0; i < nums.length - 1; i++) {
                                if (nums[i] != "255" && nums[i + 1] != "0")
                                    return false
                            }
                        } else {
                            return false
                        }
                        return true
                    },
                    "networkConfigs.eth0.hostname": function(hostName) {
                        var regex = /^[0-9a-zA-Z][0-9a-zA-Z\\-]{0,61}[0-9a-zA-Z]$|^$/;
                        return hostName.match(regex) == null ? false : true
                    },
                    "networkConfigs.eth0.gateway": _this.isIPValid,
                    "networkConfigs.eth0.nameservers": _this.isIPValid
                };
                return _this
            }
            NetworkConfig.prototype._load = function() {
                var _this = this;
                return dm.util.configRequest.get(["/config/multinetwork/"]).then(function(response) {
                    var networkConfigs = response.multinetwork;
                    _this.setOrigData("networkConfigs", networkConfigs);
                    _this.setOrigData("ifaceEth0ConfigFields", function() {
                        return _this.networkConfigs.eth0
                    });
                    if (_this.daloState.isWlanAvailable)
                        _this.setOrigData("isWlanAvailable", function() {
                            return _this.daloState.isWlanAvailable && _this.networkConfigs.wlan0.available
                        });
                    else
                        _this.setOrigData("isWlanAvailable", false);
                    _this.setOrigData("ifaceWlan0ConfigFields", _this.networkConfigs.wlan0);
                    _this.setOrigData("selectedWLAN", null)
                })
            }
            ;
            NetworkConfig.prototype.activateConfiguration = function(iface) {
                if (iface == null)
                    return dm.util.ajaxRequest.get("/admincgi-bin/reconfigureNetwork.cgi");
                if (iface == "eth0")
                    return dm.util.ajaxRequest.get("/admincgi-bin/reconfigureNetwork.cgi?operation=configeth");
                else
                    return dm.util.ajaxRequest.get("/admincgi-bin/reconfigureNetwork.cgi?operation=configwifi")
            }
            ;
            NetworkConfig.prototype.setWPSState = function(on) {
                if (on)
                    return dm.util.ajaxRequest.get("/admincgi-bin/reconfigureNetwork.cgi?operation=startwps");
                else
                    return dm.util.ajaxRequest.get("/admincgi-bin/reconfigureNetwork.cgi?operation=stopwps")
            }
            ;
            NetworkConfig.prototype.getWifiConnectionState = function() {
                return dm.util.ajaxRequest.get("/admincgi-bin/reconfigureNetwork.cgi?operation=readstate")
            }
            ;
            NetworkConfig.prototype.saveWlanIPSettings = function() {
                if (angular.isArray(this.ifaceWlan0ConfigFields.nameservers) == false)
                    this.ifaceWlan0ConfigFields.nameservers = [this.ifaceWlan0ConfigFields.nameservers];
                var wlan0IPSettings = angular.copy(this.ifaceWlan0ConfigFields);
                wlan0IPSettings.network = null;
                this.saveWifiIPPromise = dm.util.configRequest.saveDef("/config/multinetwork/wlan0/", {
                    wlan0: wlan0IPSettings
                });
                this.saveWifiIPSettingsInvoked = true;
                return this.saveWifiIPPromise
            }
            ;
            NetworkConfig.prototype.saveWlanNetworkSettings = function() {
                var wlan0NetworkConfig = angular.copy(this.ifaceWlan0ConfigFields.network);
                this.saveWifiPromise = dm.util.configRequest.saveDef("/config/multinetwork/wlan0/network/", {
                    network: wlan0NetworkConfig
                });
                return this.saveWifiPromise
            }
            ;
            NetworkConfig.prototype._save = function() {
                var multinetwork = angular.copy(this.networkConfigs);
                multinetwork.eth0 = angular.copy(this.ifaceEth0ConfigFields);
                if (angular.isArray(multinetwork.eth0.nameservers) == false)
                    multinetwork.eth0.nameservers = [multinetwork.eth0.nameservers];
                if (this.isWlanAvailable) {
                    multinetwork.wlan0 = angular.copy(this.ifaceWlan0ConfigFields);
                    if (angular.isArray(multinetwork.wlan0.nameservers) == false)
                        multinetwork.wlan0.nameservers = [multinetwork.wlan0.nameservers]
                }
                multinetwork.wlan0.network = null;
                return this.saveWifiPromise.then(function() {
                    return dm.util.configRequest.saveDef("/config/multinetwork/", {
                        multinetwork: multinetwork
                    })
                })
            }
            ;
            return NetworkConfig
        }(model.Base);
        model.NetworkConfig = NetworkConfig;
        var NetworkStatus = function(_super) {
            __extends(NetworkStatus, _super);
            function NetworkStatus(id, scope) {
                var _this = _super.call(this, id, scope) || this;
                _this.wlanNetworks = null;
                _this.ConSSID = null;
                _this.ConBSSID = null;
                _this.internet = null;
                _this.wlan0 = null;
                _this.ipAddress = null;
                _this.macAddress = null;
                _this.gateway = null;
                _this.subnetMask = null;
                _this.nameserver = null;
                _this.daloState = model.DaloState.getInstance("DaloStateModel", _this._scopes);
                return _this
            }
            NetworkStatus.prototype.parseWlanStatus = function(wlanStatusResponse) {
                var wlanNetworks = wlanStatusResponse.availableNets;
                var sigLevel1 = -90;
                var sigLevel2 = -75;
                var sigLevel3 = -55;
                var ConSSID = null;
                var ConBSSID = null;
                var ConnectedWLANisListed = false;
                try {
                    ConSSID = wlanStatusResponse.activeConnection[0].ssid;
                    ConBSSID = wlanStatusResponse.activeConnection[0].bssid
                } catch (e) {}
                for (var id in wlanNetworks) {
                    var net = wlanNetworks[id];
                    wlanNetworks[id].show = true;
                    wlanNetworks[id].offline = false;
                    if (net.bssid == ConBSSID) {
                        ConnectedWLANisListed = true
                    }
                }
                for (var id in wlanNetworks) {
                    var net = wlanNetworks[id];
                    for (var id2 in wlanNetworks) {
                        var net2 = wlanNetworks[id2];
                        if (net.ssid == net2.ssid && id != id2) {
                            if (parseInt(net.signalLevel) < parseInt(net2.signalLevel)) {
                                wlanNetworks[id].show = false
                            } else {
                                wlanNetworks[id2].show = false
                            }
                        }
                    }
                }
                if (ConnectedWLANisListed) {
                    for (var id in wlanNetworks) {
                        var net = wlanNetworks[id];
                        if (net.ssid == ConSSID) {
                            wlanNetworks[id].show = false
                        }
                        if (net.bssid == ConBSSID) {
                            wlanNetworks[id].show = true
                        }
                    }
                }
                for (var id in wlanNetworks) {
                    var net = wlanNetworks[id];
                    if (!net.offline && net.show && net.ssid != "") {
                        var open = true
                          , wep = false
                          , wpa = false
                          , wps = false
                          , wpa2 = false
                          , security = false;
                        for (var i = 0; i < net.security.length; i++) {
                            if (typeof net.security[i] == "string") {
                                if (net.security[i].search("WPA2-") == 0)
                                    wpa2 = true;
                                else if (net.security[i].search("WPA-") == 0)
                                    wpa = true;
                                else if (net.security[i].search("WEP") == 0)
                                    wep = true;
                                else if (net.security[i].search("WPS") == 0)
                                    wps = true
                            }
                        }
                        if (open) {
                            security = false;
                            net.security_type = "open"
                        }
                        if (wep) {
                            security = true;
                            net.security_type = "WEP"
                        }
                        if (wpa) {
                            security = true;
                            net.security_type = "WPA"
                        }
                        if (wpa2) {
                            security = true;
                            net.security_type = "WPA2"
                        }
                        net.wps_supported = wps
                    }
                }
                return wlanNetworks
            }
            ;
            NetworkStatus.prototype._load = function() {
                var _this = this;
                if (this.daloState.isWlanAvailable) {
                    return dm.util.configRequest.get(["/status/multinetwork/"]).then(function(response) {
                        var wlan0 = response.multinetwork.wlan0;
                        var wlanNetworks = _this.parseWlanStatus(wlan0);
                        try {
                            var ConSSID = wlan0.activeConnection[0].ssid;
                            var ConBSSID = wlan0.activeConnection[0].bssid
                        } catch (e) {}
                        _this.setOrigData("wlanNetworks", wlanNetworks);
                        _this.setOrigData("ConSSID", ConSSID);
                        _this.setOrigData("ConBSSID", ConBSSID);
                        _this.setOrigData("eth0", response.multinetwork.eth0);
                        _this.setOrigData("internet", response.multinetwork.internet);
                        _this.setOrigData("gateway", response.multinetwork.gateway);
                        _this.setOrigData("nameserver", response.multinetwork.nameservers[0]);
                        if (_this.internet.interface == "wlan0") {
                            _this.setOrigData("ipAddress", response.multinetwork.wlan0.ipAddress);
                            _this.setOrigData("macAddress", response.multinetwork.wlan0.macAddress);
                            _this.setOrigData("subnetMask", response.multinetwork.wlan0.subnetMask)
                        } else {
                            _this.setOrigData("ipAddress", response.multinetwork.eth0.ipAddress);
                            _this.setOrigData("macAddress", response.multinetwork.eth0.macAddress);
                            _this.setOrigData("subnetMask", response.multinetwork.eth0.subnetMask)
                        }
                        _this.setOrigData("wlan0", response.multinetwork.wlan0)
                    })
                } else {
                    return dm.ngjs.$q.all([dm.util.configRequest.get(["/status/multinetwork/eth0"]), dm.util.configRequest.get(["/status/multinetwork/nameservers"]), dm.util.configRequest.get(["/status/multinetwork/internet"]), dm.util.configRequest.get(["/status/multinetwork/gateway"])]).then(function(responses) {
                        var eth0 = responses[0].eth0;
                        _this.setOrigData("ipAddress", eth0.ipAddress);
                        _this.setOrigData("macAddress", eth0.macAddress);
                        _this.setOrigData("subnetMask", eth0.subnetMask);
                        _this.setOrigData("eth0", eth0);
                        _this.setOrigData("nameserver", responses[1].nameservers[0]);
                        _this.setOrigData("internet", responses[2].internet);
                        _this.setOrigData("gateway", responses[3].gateway)
                    })
                }
            }
            ;
            return NetworkStatus
        }(model.Base);
        model.NetworkStatus = NetworkStatus
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var OverviewSettings = function(_super) {
            __extends(OverviewSettings, _super);
            function OverviewSettings(id, scope) {
                var _this = _super.call(this, id, scope) || this;
                _this.LNNR = null;
                _this.COMPARISON_DATA = null;
                _this.WP = null;
                _this.BAT = null;
                _this.HYB = null;
                _this.MeterAndBackup = {
                    meter: {
                        meterActivated: null,
                        isLoadMeter: null
                    },
                    backupMode: null,
                    BAT: {}
                };
                _this.meterModel = null;
                _this.SecGenMeterPosition = 3;
                _this.scope = null;
                _this.PACBorder = {
                    MIN: 1,
                    MAX: 2e6
                };
                _this.PPVBorder = {
                    MIN: 0,
                    MAX: 2e6
                };
                _this.ioServiceBackupModeConfigured = false;
                _this.authenticationLevel = "service";
                _this.battState = null;
                _this.battModel = dm.model.BatteryConfig.getInstance("BatteryConfig", _this.scope);
                _this.daloState = dm.model.DaloState.getInstance("DaloStateModel", _this.scope);
                _this.lgCheckbox = {
                    installed: false,
                    saved: false
                };
                _this.setAuthenticationLevel = function(level) {
                    if (level === "admin" || level === "service")
                        this.authenticationLevel = level
                }
                ;
                _this.onSiteData = function() {}
                ;
                _this.getMeterValidForBackup = function() {
                    return _this.MeterAndBackup.meter.meterActivated && !_this.meterModel.isLoadMeter(true) && _this.meterModel.isSmartMeter(_this.meterModel.configMeter.primary.config)
                }
                ;
                _this.getBackupModeEnable = function() {
                    return _this.getMeterValidForBackup() && _this.ioServiceBackupModeConfigured
                }
                ;
                _this.isBackupModeActive = function() {
                    return _this.getBackupModeEnable()
                }
                ;
                _this.validateMeterForBackup = function() {
                    if (_this.MeterAndBackup.backupMode == "OFF") {
                        return true
                    }
                    return _this.getMeterValidForBackup()
                }
                ;
                _this.validateBackupMode = function() {
                    if (_this.MeterAndBackup.backupMode == "OFF") {
                        return true
                    } else {
                        if (!_this.MeterAndBackup.meter.meterActivated)
                            return false;
                        if (_this.BAT.TYPE === "lg_chem_resu_h")
                            return false;
                        return _this.getBackupModeEnable()
                    }
                }
                ;
                _this.refreshGenericBatState = function() {
                    var self = _this;
                    return dm.util.configRequest.get("/config/ioservice/admin/").then(function(response) {
                        var features = response.iomapping.features;
                        for (var idx in features) {
                            if (features[idx].label === "GSTR_GPIO_TITLE_STORAGE")
                                self.BAT.GenericBatEnabled = features[idx].enable
                        }
                    })
                }
                ;
                _this.isGenericBatValid = function() {
                    if (_this.BAT.TYPE !== "none" && _this.BAT.TYPE !== "sony" && _this.BAT.TYPE !== "lg_chem_resu_h" && _this.BAT.TYPE !== "generic_storage" && _this.BAT.TYPE !== "byd_b_box_hv")
                        return false;
                    if (_this.BAT.GenericBatEnabled && (_this.BAT.TYPE === "sony" || _this.BAT.TYPE === "byd_b_box_hv"))
                        return false;
                    if (!_this.BAT.GenericBatEnabled && _this.BAT.TYPE === "lg_chem_resu_h")
                        return false;
                    if (_this.BAT.TYPE === "lg_chem_resu_h" && _this.MeterAndBackup.backupMode != "OFF")
                        return false;
                    return true
                }
                ;
                _this.isGenericBatEnabled = function() {
                    return _this.BAT.GenericBatEnabled
                }
                ;
                _this._validators = {
                    MeterAndBackup: function(val) {
                        return _this.validateBackupMode()
                    },
                    "BAT.TYPE": function(val) {
                        return _this.isGenericBatValid()
                    },
                    "HYB.BM.PACMIN": function(val) {
                        try {
                            if (!dm.util.helpers.isInteger(val))
                                return false;
                            if (_this.HYB.BM.CHARGEFROMAC) {
                                return !(val <= _this.PACBorder.MIN || val > _this.PACBorder.MAX)
                            } else {
                                return !(val < _this.PACBorder.MIN || val > _this.PACBorder.MAX)
                            }
                        } catch (e) {
                            return false
                        }
                    },
                    "HYB.EM.POWER": function(val) {
                        if (_this.HYB.EM.MODE == 0)
                            return true;
                        if (!dm.util.helpers.isInteger(val))
                            return false;
                        return val >= 0 && val <= 5e4
                    },
                    lgCheckbox: function(val) {
                        try {
                            if (_this.BAT.TYPE !== "lg_chem_resu_h")
                                return true;
                            return !val.saved || val.installed
                        } catch (e) {
                            return false
                        }
                    },
                    WP: function(val) {
                        try {
                            if (!dm.util.helpers.isInteger(val))
                                return false;
                            return val >= _this.PPVBorder.MIN && val <= _this.PPVBorder.MAX
                        } catch (e) {
                            return false
                        }
                    }
                };
                _this.onBatTypeChanged = function(newVal, oldVal) {
                    if (!newVal || !oldVal)
                        return;
                    _this.BAT.ENABLED = newVal != "none"
                }
                ;
                _this.scope = scope;
                dm.model.SiteNowData.getInstance().subscribe("settingsOverviewCtrl", 3e3);
                var cancelSiteDataUpdate = dm.model.SiteNowData.getInstance().on("dataChanged", _this.onSiteData);
                _this.onDestroy(function() {
                    cancelSiteDataUpdate()
                });
                return _this
            }
            OverviewSettings.prototype.toTimeString = function(value) {
                if (typeof value !== "number") {
                    return null
                }
                var m = parseInt("" + value / 60 % 60)
                  , h = parseInt("" + value / 3600);
                return (h < 10 ? "0" + h : h) + ":" + (m < 10 ? "0" + m : m)
            }
            ;
            OverviewSettings.prototype.parseTimeString = function(value) {
                var a = value.split(":");
                if (a.length !== 2)
                    return NaN;
                var h = parseInt(a[0]);
                var m = parseInt(a[1]);
                if (isNaN(h) || isNaN(m))
                    return NaN;
                if (h < 0 || h > 23)
                    return NaN;
                if (m < 0 || m > 59)
                    return NaN;
                return (h * 60 + m) * 60
            }
            ;
            OverviewSettings.prototype._load = function() {
                var _this = this;
                var req = [dm.util.configRequest.get("/status/inverteronline/"), dm.util.configRequest.get("/config/views/"), dm.util.configRequest.get("/config/ioservice/admin/"), dm.util.ajaxRequest.get("/solar_api/v1/data/DeviceDB_Data.json"), this.battModel.loadingPromise];
                if (this.authenticationLevel === "service") {
                    if (this.meterModel == null)
                        this.meterModel = dm.model.MeterSettings.getInstance("OverviewSettingsModel", this.scope);
                    req.push(this.meterModel.loadingPromise)
                }
                return dm.ngjs.$q.all(req).then(function(responses) {
                    var invInfo = responses[0];
                    var viewsConfig = responses[1];
                    var ioServices = responses[2];
                    var DeviceDB = responses[3].data.Inverters;
                    _this.meterModel.startMeterPolling();
                    var LNNR = 0;
                    var DeviceType;
                    for (var id in invInfo) {
                        LNNR = id;
                        DeviceType = invInfo[id]
                    }
                    _this.setOrigData("LNNR", LNNR);
                    if (DeviceType)
                        _this.NominalDCPower = Math.max(1200, DeviceDB[DeviceType] ? DeviceDB[DeviceType].NominalPower : 1200);
                    else {
                        console.warn("No DeviceType / no inverter dected; using default WP: 1200");
                        _this.NominalDCPower = 1200
                    }
                    var COMPARISON_DATA = viewsConfig.views.comparison;
                    _this.setOrigData("COMPARISON_DATA", COMPARISON_DATA);
                    var WP = COMPARISON_DATA[LNNR].Wp;
                    WP = WP == -1 ? 0 : WP;
                    _this.setOrigData("WP", WP);
                    var time = _this.toTimeString(_this.battModel.data.BAT_TIME_SET);
                    if (time === null)
                        time = "12:00";
                    _this.lgCheckbox.installed = _this.battModel.data.BAT_LG_CHECKBOX_INSTALLDATE.length > 0;
                    _this.setOrigData("BAT", {
                        ENABLED: _this.battModel.data.BAT_ENABLED,
                        TYPE: _this.battModel.data.BAT_TYPE,
                        TIME: {
                            SET: time
                        },
                        OPT: {
                            STORMGMT: _this.battModel.data.BAT_OPT_STORMGMT
                        }
                    });
                    dm.ngjs.$rootScope.$watch(function() {
                        return _this.BAT.TYPE
                    }, _this.onBatTypeChanged);
                    _this.setOrigData("HYB", {
                        BM: {
                            PACMIN: -_this.battModel.data.HYB_BM_PACMIN,
                            CHARGEFROMAC: _this.battModel.data.HYB_BM_CHARGEFROMAC
                        },
                        EVU: {
                            ACCOUPLED: _this.battModel.data.HYB_EVU_ACCOUPLED,
                            CHARGEFROMGRID: _this.battModel.data.HYB_EVU_CHARGEFROMGRID
                        },
                        EM: {
                            MODE: _this.battModel.data.HYB_EM_MODE,
                            POWER: Math.abs(_this.battModel.data.HYB_EM_POWER),
                            DIRECTION: _this.battModel.data.HYB_EM_POWER <= 0 ? "out" : "in"
                        },
                        BACKUP: {
                            MODE: _this.battModel.data.HYB_BACKUP_MODE,
                            RESERVED: _this.battModel.data.HYB_BACKUP_RESERVED,
                            CRITICALSOC: _this.battModel.data.HYB_BACKUP_CRITICALSOC
                        }
                    });
                    _this.BAT.GenericBatEnabled = false;
                    for (var idx in ioServices.iomapping.features) {
                        var elem = ioServices.iomapping.features[idx];
                        if (elem.visible && elem.enable) {
                            if (elem.label === "GSTR_GPIO_TITLE_BACKUP")
                                _this.ioServiceBackupModeConfigured = true;
                            else if (elem.label === "GSTR_GPIO_TITLE_STORAGE")
                                _this.BAT.GenericBatEnabled = true
                        }
                    }
                    _this.setOrigData("MeterAndBackup", {
                        meter: {
                            meterActivated: _this.meterModel.configMeter.primary.config.available,
                            isLoadMeter: _this.meterModel.configMeter.primary.config.isLoadMeter
                        },
                        backupMode: _this.battModel.data.HYB_BACKUP_MODE === "AUTO" ? _this.battModel.data.HYB_BACKUP_MODE : "OFF",
                        BAT: _this.BAT
                    });
                    var self = _this;
                    _this.scope.$watch(function() {
                        return self.meterModel.configMeter.primary.config.isLoadMeter
                    }, function(newVal, oldVal) {
                        self.MeterAndBackup.meter.isLoadMeter = newVal
                    })
                })
            }
            ;
            OverviewSettings.prototype.getPowerSum = function(isGeneratorMeter) {
                var sum = 0;
                for (var idx in this.meterModel.secondaryMeterData) {
                    var meter = this.meterModel.secondaryMeterData[idx];
                    if (meter.attributes["[ENABLE]"] == "true" && meter.attributes["[VISIBLE]"] == "true" && (isGeneratorMeter && meter.channels.Meter_Location_Current == 3) || !isGeneratorMeter && meter.channels.Meter_Location_Current >= 256)
                        sum = sum + meter.channels.PowerReal_P_Sum
                }
                return Math.abs(Math.floor(sum))
            }
            ;
            OverviewSettings.prototype.secondaryMetersAvailable = function(isGeneratorMeter) {
                for (var idx in this.meterModel.secondaryMeterData) {
                    var meter = this.meterModel.secondaryMeterData[idx];
                    if (meter.attributes["[ENABLE]"] == "true" && meter.attributes["[VISIBLE]"] == "true" && (isGeneratorMeter && meter.channels.Meter_Location_Current == 3 || !isGeneratorMeter && meter.channels.Meter_Location_Current >= 256))
                        return true
                }
                return false
            }
            ;
            OverviewSettings.prototype.secConMeters = function() {
                return this.secondaryMetersAvailable(false)
            }
            ;
            OverviewSettings.prototype.secGenMeters = function() {
                return this.secondaryMetersAvailable(true)
            }
            ;
            OverviewSettings.prototype._save = function() {
                if (this.BAT.TYPE === "lg_chem_resu_h") {
                    if (!this.lgCheckbox.installed) {
                        this.lgCheckbox.saved = true;
                        return dm.ngjs.$q.reject()
                    } else {
                        var d = new Date;
                        this.battModel.data.BAT_LG_CHECKBOX_INSTALLDATE = d.getDate() + "." + (d.getMonth() + 1) + "." + d.getFullYear()
                    }
                } else {
                    this.battModel.data.BAT_LG_CHECKBOX_INSTALLDATE = ""
                }
                var WPValue = this.WP == this.PPVBorder.MIN ? this.NominalDCPower : this.WP;
                this.COMPARISON_DATA[this.LNNR].Wp = parseInt(WPValue);
                this.COMPARISON_DATA[this.LNNR].name = "";
                this.daloState.setBatteryType(this.BAT.TYPE);
                var requests = null;
                if (this.authenticationLevel == "service") {
                    this.meterModel.save().then();
                    this.battModel.data.HYB_EM_MODE = parseInt(this.HYB.EM.MODE);
                    this.battModel.data.HYB_EM_POWER = this.HYB.EM.DIRECTION == "in" ? this.HYB.EM.POWER : this.HYB.EM.POWER * -1;
                    this.battModel.data.HYB_BM_PACMIN = -this.HYB.BM.PACMIN;
                    this.battModel.data.PV_PEAK_POWER = WPValue;
                    this.battModel.data.HYB_BACKUP_RESERVED = this.HYB.BACKUP.RESERVED;
                    this.battModel.data.HYB_BACKUP_CRITICALSOC = this.HYB.BACKUP.CRITICALSOC;
                    this.battModel.data.BAT_ENABLED = this.BAT.ENABLED;
                    if (this.isPropChanged("BAT.TYPE"))
                        this.battModel.setBatteryType(this.BAT.TYPE);
                    this.battModel.data.HYB_EVU_ACCOUPLED = this.HYB.EVU.ACCOUPLED;
                    this.battModel.data.HYB_EVU_CHARGEFROMGRID = this.HYB.EVU.CHARGEFROMGRID;
                    this.battModel.data.HYB_BM_CHARGEFROMAC = this.HYB.BM.CHARGEFROMAC;
                    this.battModel.data.HYB_BACKUP_MODE = this.MeterAndBackup.backupMode;
                    requests = [dm.util.configRequest.saveDef("/config/views/comparison/", {
                        comparison: this.COMPARISON_DATA
                    }), this.battModel.save()]
                } else {
                    this.battModel.data.PV_PEAK_POWER = WPValue;
                    this.battModel.data.HYB_EM_MODE = parseInt(this.HYB.EM.MODE);
                    this.battModel.data.HYB_EM_POWER = this.HYB.EM.DIRECTION == "in" ? this.HYB.EM.POWER : this.HYB.EM.POWER * -1;
                    this.battModel.data.HYB_BACKUP_MODE = this.MeterAndBackup.backupMode;
                    requests = [dm.util.configRequest.saveDef("/config/views/comparison/", {
                        comparison: this.COMPARISON_DATA
                    }), this.battModel.save()]
                }
                return dm.ngjs.$q.all(requests)
            }
            ;
            return OverviewSettings
        }(model.Base);
        model.OverviewSettings = OverviewSettings
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var PasswordSettings = function(_super) {
            __extends(PasswordSettings, _super);
            function PasswordSettings(id, scope, type) {
                var _this = _super.call(this, id, scope) || this;
                _this.daloState = model.DaloState.getInstance("DaloStateModel", _this._scopes);
                _this.loginModel = dm.model.LoginModel.getInstance();
                _this.activateAfterSave = true;
                _this.type = null;
                _this.pass = {};
                _this.getPWStrength = function() {
                    var strength = dm.util.string.passwordStrength(_this.pass.new1 || "", _this.type);
                    if (strength == "bad" && _this.type == "user")
                        strength = "good";
                    _this.pass.strength = strength;
                    _this.pass.new1Set = _this.pass.new1Set || _this.pass.new1;
                    return strength
                }
                ;
                _this.activatePasswords = function() {
                    return dm.util.ajaxRequest.get("/admincgi-bin/activatePasswords.cgi").then(function(aResponse) {
                        if (aResponse.data.ok) {
                            _this.loginModel.activatePassword();
                            if (_this.type == "service")
                                _this.daloState.servicePasswordAssigned = true;
                            else if (_this.type == "admin")
                                _this.daloState.adminPasswordAssigned = true
                        }
                    })
                }
                ;
                _this.getPWEqual = function() {
                    var password = _this.pass.new1;
                    var password2 = _this.pass.new2;
                    _this.pass.new2Set = _this.pass.new2Set || _this.pass.new2;
                    if (password == password2) {
                        _this.pass.pwEqual = "strong"
                    } else {
                        _this.pass.pwEqual = "bad"
                    }
                    return _this.pass.pwEqual
                }
                ;
                _this._validators = {
                    new1: function() {
                        return _this.getPWStrength() == "strong" || _this.getPWStrength() == "good"
                    },
                    new2: function() {
                        return _this.getPWEqual() == "strong"
                    }
                };
                _this.type = type;
                return _this
            }
            PasswordSettings.prototype._load = function() {
                var _this = this;
                return dm.util.configRequest.get("/config/pass/" + this.type).then(function(response) {
                    _this.pass = response[_this.type] || {};
                    _this.setOrigData("pass")
                })
            }
            ;
            PasswordSettings.prototype.checkPasswords = function() {
                if (this.type != "user" && (this.pass.new1Set == undefined && this.pass.new1Set == undefined || !this.pass.new1Set))
                    return {
                        message: "SaveFail_NoPassSet",
                        type: this.type
                    };
                if (this.pass.isset && (!this.pass.new1Set || !this.pass.new2Set || this.pass.new1 != this.pass.new2 || this.getPWEqual() == "bad"))
                    return {
                        message: "SaveFail_PassNotEqual",
                        type: this.type
                    };
                if (this.pass.isset && this.getPWStrength() == "bad")
                    return {
                        message: "SaveFail_PassNotSecure",
                        type: this.type
                    };
                return {
                    message: "OK",
                    type: this.type
                }
            }
            ;
            PasswordSettings.prototype._save = function() {
                var _this = this;
                var self = this;
                var calcHash = function(user, pwOld, pwNew) {
                    if (pwOld === void 0) {
                        pwOld = ""
                    }
                    var oldPasswordOrEmpty = function(user, oldPW) {
                        if (oldPW)
                            return oldPW;
                        return user == "service" ? "84d3c4823485485369078648e67b0367" : ""
                    };
                    var currentSalt = self.daloState.getSalt(user);
                    var outData = {};
                    outData[user] = {};
                    outData[user]["new"] = dm.util.helpers.CreatePasswordNode(user, pwNew || "", true);
                    outData[user]["old"] = dm.util.helpers.CreatePasswordNode(user, oldPasswordOrEmpty(user, pwOld), false);
                    return outData
                };
                if (this.type != "user" && this.pass.isset && (!this.pass.new1Set || this.pass.new1 == "") && (!this.pass.new2Set || this.pass.new2 == ""))
                    return dm.ngjs.$q(function(res) {
                        res()
                    });
                if (this.type == "user" && !this.getOrigData("pass").isset && (!this.pass.new1Set || this.pass.new1 == "") && (!this.pass.new2Set || this.pass.new2 == ""))
                    return dm.ngjs.$q(function(res) {
                        res()
                    });
                this.pass.forceValidation = true;
                if (this.pass.isset && (!this.pass.new1Set || !this.pass.new2Set || this.pass.new1 != this.pass.new2 || this.getPWEqual() == "bad"))
                    return dm.ngjs.$q.reject({
                        message: "SaveFail_PassNotEqual_Service"
                    });
                if (this.type != "user" && this.pass.isset && this.getPWStrength() == "bad")
                    return dm.ngjs.$q.reject({
                        message: "SaveFail_PassNotSecure_Service"
                    });
                var postData = calcHash(this.type, this.pass.old, this.pass.new1);
                return dm.util.configRequest.saveDef("/config/pass/" + this.type + "/", postData).then(function(rsp) {
                    _this.loginModel.setDataToActivatePassword(_this.type, _this.pass.new1);
                    _this.pass.isset = _this.pass.new1 != "";
                    _this.pass.old = "";
                    _this.pass.new1 = "";
                    _this.pass.new2 = "";
                    _this.pass.new1Set = false;
                    _this.pass.new2Set = false;
                    _this.pass.forceValidation = false;
                    _this.setOrigData("pass");
                    if (_this.activateAfterSave)
                        return _this.activatePasswords()
                })
            }
            ;
            PasswordSettings.getInstance = function(id, scope, type) {
                return model.Base.getInstance.call(this, id + "_" + type, scope, function(_id, _scope) {
                    var instance = new PasswordSettings(_id,_scope,type);
                    instance.load();
                    return instance
                })
            }
            ;
            return PasswordSettings
        }(model.Base);
        model.PasswordSettings = PasswordSettings
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var SolarWebSettings = function(_super) {
            __extends(SolarWebSettings, _super);
            function SolarWebSettings(id, scope) {
                var _this = _super.call(this, id, scope) || this;
                _this.system = {
                    name: null
                };
                _this.logSettings = null;
                _this.swSettings = null;
                _this.syncSolarWeb = null;
                _this.preSave = function() {
                    var _this = this;
                    return dm.ngjs.$http.get("/cgi-bin/readPolicyState.cgi").then(function(resp) {
                        _this.swSettings.policyTerms = resp.data["Body"]["Data"]["policyTerms"]
                    })
                }
                ;
                return _this
            }
            SolarWebSettings.prototype._load = function() {
                var _this = this;
                return dm.ngjs.$q.all([dm.util.configRequest.get("/config/solarweb/"), dm.util.configRequest.get("/config/logging/"), dm.util.configRequest.get("/config/date/timesync")]).then(function(responses) {
                    var solarwebData = responses[0];
                    var loggingData = responses[1];
                    _this.syncSolarWeb = responses[2].timesync;
                    _this.setOrigData("solarWebSync");
                    _this.setOrigData("logSettings", loggingData);
                    var swSettings = solarwebData.solarweb;
                    _this.setOrigData("policyTerms", swSettings.policyTerms);
                    for (var idx in swSettings.dataSendAtWhichHours) {
                        var elem = swSettings.dataSendAtWhichHours[idx];
                        swSettings["dataSendAtWhichHours" + idx] = elem
                    }
                    delete swSettings.dataSendAtWhichHours;
                    for (var idx in swSettings.dataSendAtWhichDays) {
                        var elem = swSettings.dataSendAtWhichDays[idx];
                        swSettings["dataSendAtWhichDays" + idx] = elem
                    }
                    delete swSettings.dataSendAtWhichDays;
                    _this.setOrigData("swSettings", swSettings)
                })
            }
            ;
            SolarWebSettings.prototype._save = function() {
                var swSettings = angular.copy(this.swSettings);
                swSettings.dataSendAtWhichHours = [];
                for (var i = 0; i < 24; i++) {
                    swSettings.dataSendAtWhichHours.push(swSettings["dataSendAtWhichHours" + i]);
                    delete swSettings["dataSendAtWhichHours" + i]
                }
                swSettings.dataSendAtWhichDays = [];
                for (var i = 0; i < 7; i++) {
                    swSettings.dataSendAtWhichDays.push(swSettings["dataSendAtWhichDays" + i]);
                    delete swSettings["dataSendAtWhichDays" + i]
                }
                swSettings = {
                    solarweb: swSettings
                };
                return dm.ngjs.$q.all([dm.util.configRequest.saveDef("/config/solarweb/", swSettings), dm.util.configRequest.saveDef("/config/logging/", this.logSettings)])
            }
            ;
            return SolarWebSettings
        }(model.Base);
        model.SolarWebSettings = SolarWebSettings
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
angular.module("fwUpdate", ["global"]);
angular.module("fwUpdate").service("updateConfigModel", [function() {
    var self = this;
    var loadedUpdateDefaults = {};
    var daloState = dm.model.DaloState.getInstance("DaloStateModel", []);
    this.data = {
        autoUpdateCheck: false,
        allowAutoUpdate: false,
        autoUpdateTime: "18:00",
        remoteAddr: "127.0.0.1",
        useProxy: false,
        proxy: {
            proxyURL: "http://",
            proxyPort: "8080",
            proxyUser: "",
            proxyPass: ""
        }
    };
    this.dataReady = false;
    var dataExtensions = {
        updateKind: daloState.isInconsistent ? "local" : "web",
        ipAddrPart1: "",
        ipAddrPart2: "",
        ipAddrPart3: "",
        ipAddrPart4: "",
        autoUpdateTime_hh: "",
        autoUpdateTime_mm: "",
        getIpAddr: function() {
            return self.data.ipAddrPart1 + "." + self.data.ipAddrPart2 + "." + self.data.ipAddrPart3 + "." + self.data.ipAddrPart4
        },
        setIpAddr: function(ipAddr) {
            if (ipAddr) {
                var addrParts = ipAddr.split(".");
                for (var i = 0; i < 4; i++)
                    self.data["ipAddrPart" + (i + 1)] = addrParts.length > i ? addrParts[i] : ""
            }
        },
        getAutoUpdateTime: function() {
            return self.data.autoUpdateTime_hh + ":" + self.data.autoUpdateTime_mm
        },
        setAutoUpdateTime: function(time) {
            if (time) {
                var timeParts = time.split(":");
                if (timeParts[0].length < 2)
                    timeParts[0] = "0" + timeParts[0];
                if (timeParts[1].length < 2)
                    timeParts[1] = "0" + timeParts[1];
                self.data.autoUpdateTime_hh = timeParts[0];
                self.data.autoUpdateTime_mm = timeParts[1]
            }
        }
    };
    angular.extend(this.data, dataExtensions);
    this.isInvalid = function(id, val) {
        if (val === undefined)
            return true;
        switch (id) {
        case "proxyURL":
            var cValidAbsoluteUrlExpr = /^(http:\/\/|ftp:\/\/)[0-9a-zA-Z\/~_:@%#\.\-]*$/;
            var cMinLength = 5;
            var cMaxLength = 255;
            return val.length < cMinLength || val.length > cMaxLength || !val.match(cValidAbsoluteUrlExpr);
        case "proxyPort":
            var cValidSignedIntegerExpr = /^(\+|\-)?\d+$/;
            var cLowBound = 0;
            var cUpBound = 65535;
            return parseInt(val) < cLowBound || parseInt(val) > cUpBound || !val.match(cValidSignedIntegerExpr);
        case "remoteAddr":
            try {
                var parts = val.split(".");
                if (parts.length !== 4)
                    return true;
                for (var i = 0; i < parts.length; i++) {
                    var iPart = parseInt(parts[i]);
                    if (isNaN(iPart))
                        return true;
                    if (iPart < 0)
                        return true;
                    if (iPart > 255)
                        return true
                }
            } catch (e) {
                return true
            }
            return false;
        case "hour":
            var cLowBound = 7;
            var cUpBound = 16;
            var cIsNumeric = /^[0-9]*$/;
            return val == "" || parseInt(val) < cLowBound || parseInt(val) > cUpBound || !val.match(cIsNumeric);
        case "minute":
            var cLowBound = 0;
            var cUpBound = 59;
            var cIsNumeric = /^[0-9]*$/;
            return val == "" || parseInt(val) < cLowBound || parseInt(val) > cUpBound || !val.match(cIsNumeric);
        default:
            return true
        }
    }
    ;
    this.compareConfig = function() {
        if (!angular.equals(loadedUpdateDefaults.autoUpdateCheck, this.data.autoUpdateCheck) || !angular.equals(loadedUpdateDefaults.useProxy, this.data.useProxy) || !angular.equals(loadedUpdateDefaults.proxy, this.data.proxy)) {
            this.save(function() {
                dm.ngjs.$log.log("save new data")
            }, function() {
                dm.ngjs.$log.log("failure on saving data")
            }, function() {
                dm.ngjs.$log.log("error on saving data")
            })
        }
    }
    ;
    this.setDefaultValues = function() {
        for (var key in self.data) {
            delete self.data[key]
        }
        angular.extend(self.data, loadedUpdateDefaults);
        angular.extend(self.data, dataExtensions);
        self.data.setIpAddr(self.data.remoteAddr);
        self.data.setAutoUpdateTime(self.data.autoUpdateTime)
    }
    ;
    this.loadDefaultValues = function() {
        dm.util.configRequest.get("/config/update/").then(function(data) {
            angular.copy(data.update, loadedUpdateDefaults);
            self.setDefaultValues();
            self.dataReady = true
        }, function(error) {
            dm.ngjs.$log.log("could not load /config/update")
        })
    }
    ;
    this.getConnectionParameter = function() {
        var attr = {
            source: self.data.updateKind,
            refreshSource: self.data.updateKind == "web",
            server: self.data.getIpAddr()
        };
        return attr
    }
    ;
    this.isDataValid = function() {
        var invalid = self.isInvalid("proxyURL", self.data.proxy.proxyURL) || self.isInvalid("proxyPort", self.data.proxy.proxyPort) || self.isInvalid("remoteAddr", self.data.getIpAddr()) || self.isInvalid("hour", self.data.autoUpdateTime_hh) || self.isInvalid("minute", self.data.autoUpdateTime_mm);
        return !invalid
    }
    ;
    this.save = function(onSuccess, onError, onFailure) {
        if (!self.isDataValid()) {
            onError("invalidData")
        } else {
            var attrs = {
                autoUpdateCheck: self.data.autoUpdateCheck,
                allowAutoUpdate: self.data.allowAutoUpdate,
                autoUpdateTime: self.data.getAutoUpdateTime(),
                useProxy: self.data.useProxy,
                proxy: {
                    proxyURL: self.data.proxy.proxyURL,
                    proxyPort: self.data.proxy.proxyPort,
                    proxyUser: self.data.proxy.proxyUser,
                    proxyPass: self.data.proxy.proxyPass
                }
            };
            dm.util.configRequest.save("/config/update/", {
                update: attrs
            }, function() {
                angular.extend(loadedUpdateDefaults, attrs);
                angular.extend(self.data, loadedUpdateDefaults);
                if (onSuccess)
                    onSuccess()
            }, onError, onFailure)
        }
    }
}
]);
var dm;
(function(dm) {
    var model;
    (function(model) {
        var UpdateLog;
        (function(UpdateLog) {
            var _UpdateLog = function() {
                function _UpdateLog() {
                    var _this = this;
                    this.xhrParams = {
                        first: 1,
                        last: -1
                    };
                    this.dataChangeDeferred = null;
                    this.logClearedDeferred = null;
                    this.errorCnt = 0;
                    this.df = null;
                    this.suppressTimer = undefined;
                    this.log = [];
                    this.status = "FINISHED";
                    this.Timestamp = undefined;
                    this.subscribe = null;
                    this.unsubscribe = null;
                    this.analyzeLog = function(log) {
                        var status = log.length > 0 ? "RUNNING" : "FINISHED";
                        for (var entryIdx in log) {
                            var entry = log[entryIdx];
                            if (entry.Status == undefined || entry.Step == undefined || entry.Message == undefined || entry.TagDefault == undefined || entry.Progress == undefined || entry.Weight == undefined || entry.Duration == undefined || entry.Timestamp == undefined) {
                                throw "parse error"
                            }
                            if (entry.Status == "FINISHED" || entry.Status == "ABORTED") {
                                var _entryIdx = parseInt(entryIdx);
                                log.splice(_entryIdx + 1, log.length - _entryIdx - 1);
                                return entry.Status
                            }
                        }
                        return status
                    }
                    ;
                    this.onError = function(error) {
                        _this.errorCnt++;
                        if (_this.errorCnt <= 10)
                            return;
                        if (!_this.suppressTimer)
                            _this.suppressTimer = dm.ngjs.$interval(function() {
                                dm.util.DataFetcher.suppressConnectionLostNotification(false)
                            }, 30 * 60 * 1e3, 1)
                    }
                    ;
                    this.onResponse = function(data) {
                        if (data.data)
                            data = data.data;
                        else
                            return _this.onError();
                        if (_this.suppressTimer) {
                            dm.ngjs.$interval.cancel(_this.suppressTimer);
                            _this.suppressTimer = undefined
                        }
                        try {
                            _this.analyzeLog(data.log)
                        } catch (e) {
                            return _this.onError()
                        }
                        _this.errorCnt = 0;
                        if (_this.xhrParams.last == -1) {
                            if (_this.xhrParams.first == 1) {
                                angular.copy(data.log, _this.log);
                                _this.logClearedDeferred.notify()
                            } else {
                                _this.log.push.apply(_this.log, data.log)
                            }
                        } else if (_this.xhrParams.first == 1 && _this.xhrParams.last == 1) {
                            if (_this.log.length < 1 || !_this.log[0].Timestamp || data.log.length > 0 && data.log[0].Timestamp && data.log[0].Timestamp > _this.log[0].Timestamp) {
                                _this.xhrParams.first = 1;
                                _this.xhrParams.last = -1;
                                return
                            }
                        }
                        _this.status = _this.analyzeLog(_this.log);
                        if (_this.status == "RUNNING") {
                            _this.xhrParams.first = _this.log.length + 1;
                            _this.xhrParams.last = -1
                        } else if (_this.log.length > 0) {
                            _this.xhrParams.first = 1;
                            _this.xhrParams.last = 1
                        } else {
                            _this.xhrParams.first = 1;
                            _this.xhrParams.last = -1
                        }
                        if (data.Timestamp)
                            _this.Timestamp = data.Timestamp;
                        _this.dataChangeDeferred.notify()
                    }
                    ;
                    this.onDataChanged = function(callback) {
                        _this.dataChangeDeferred.promise.then(undefined, undefined, callback)
                    }
                    ;
                    this.onLogCleared = function(callback) {
                        _this.logClearedDeferred.promise.then(undefined, undefined, callback)
                    }
                    ;
                    this.dataChangeDeferred = dm.ngjs.$q.defer();
                    this.logClearedDeferred = dm.ngjs.$q.defer();
                    this.df = dm.util.DataFetcher.newInstance(function() {
                        var url = "/cgi-bin/GetUpdateLog.cgi?first=" + _this.xhrParams.first + "&last=" + _this.xhrParams.last;
                        return dm.ngjs.$http.get(url, {
                            timeout: 6e4
                        })
                    }, this.onResponse, this.onError);
                    this.subscribe = this.df.subscribe;
                    this.unsubscribe = this.df.unsubscribe
                }
                return _UpdateLog
            }();
            var _instance = null;
            function getInstance() {
                if (!_instance)
                    _instance = new _UpdateLog;
                return _instance
            }
            UpdateLog.getInstance = getInstance
        }
        )(UpdateLog = model.UpdateLog || (model.UpdateLog = {}))
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var Fraction;
(function(Fraction_1) {
    var isInteger = function(i) {
        return !isNaN(i) && parseInt(i) == parseFloat(i)
    };
    var gcd = function(a, b) {
        var temp;
        while (b > 0) {
            temp = b;
            b = a % b;
            a = temp
        }
        return a
    };
    var lcm = function(a, b) {
        return a * (b / gcd(a, b))
    };
    function NotAFractionError(message) {
        this.name = "NotAFractionError";
        this.message = message || "Not a Fraction"
    }
    Fraction_1.Fraction = function(n, d) {
        if (typeof n == "undefined")
            throw new NotAFractionError("You must specify a fraction");
        if (!(this instanceof Fraction_1.Fraction)) {
            return new Fraction_1.Fraction(n,d)
        }
        if (n instanceof Fraction_1.Fraction && typeof d == "undefined") {
            this.n = n.n;
            this.d = n.d;
            return
        }
        if (isInteger(n) && isInteger(d)) {
            this.n = parseInt(n);
            this.d = parseInt(d);
            return
        }
        if (isInteger(n) && typeof d == "undefined") {
            this.n = parseInt(n);
            this.d = 1;
            return
        }
        if (typeof n == "number") {
            var ns = "" + n;
            var decimals = ns.length - ns.indexOf(".") - 1;
            this.n = parseInt(ns.replace(".", ""));
            this.d = Math.pow(10, decimals);
            return
        }
        throw new NotAFractionError("Cannot instantiate Fraction(" + n + (typeof d == "undefined" ? "" : d) + ")")
    }
    ;
    Fraction_1.Fraction.prototype.toString = Fraction_1.Fraction.prototype.toS = Fraction_1.Fraction.prototype.inspect = function() {
        return "(" + this.n + "/" + this.d + ")"
    }
    ;
    Fraction_1.Fraction.prototype.toNumber = function() {
        return this.n / this.d
    }
    ;
    Fraction_1.Fraction.prototype.toLatex = function() {
        return "\\frac{" + this.n + "}{" + this.d + "}"
    }
    ;
    Fraction_1.Fraction.prototype.toMathML = function() {
        return "<mfrac><mn>" + this.n + "</mn><mn>" + this.d + "</mfrac>"
    }
    ;
    Fraction_1.Fraction.prototype.simplify = function() {
        var g = gcd(this.n, this.d);
        return g == 1 ? this : new Fraction_1.Fraction(this.n / g,this.d / g)
    }
    ;
    Fraction_1.Fraction.prototype.inverse = function() {
        return new Fraction_1.Fraction(this.d,this.n)
    }
    ;
    Fraction_1.Fraction.prototype.times = Fraction_1.Fraction.prototype.multiply = function(n, d) {
        if (n instanceof Fraction_1.Fraction && typeof d == "undefined")
            return new Fraction_1.Fraction(this.n * n.n,this.d * n.d).simplify();
        else if (isInteger(n) && isInteger(d)) {
            return this.times(new Fraction_1.Fraction(n,d))
        }
        throw new NotAFractionError("Cannot multiply " + this + " with n=" + n + ", d=" + d)
    }
    ;
    Fraction_1.Fraction.prototype.dividedBy = Fraction_1.Fraction.prototype.div = function(n, d) {
        if (n instanceof Fraction_1.Fraction && typeof d == "undefined")
            return n.inverse().times(this);
        else if (isInteger(n) && isInteger(d)) {
            return this.times(new Fraction_1.Fraction(d,n))
        }
        throw new NotAFractionError("Cannot divide " + this + " by n=" + n + ", d=" + d)
    }
    ;
    Fraction_1.Fraction.prototype.plus = function(n, d) {
        if (n instanceof Fraction_1.Fraction && typeof d == "undefined") {
            var l = lcm(this.d, n.d);
            return new Fraction_1.Fraction(this.n * l / this.d + n.n * l / n.d,l)
        } else if (isInteger(n) && isInteger(d)) {
            return this.plus(new Fraction_1.Fraction(n,d))
        }
        throw new NotAFractionError("Cannot add " + this + " to n=" + n + ", d=" + d)
    }
    ;
    Fraction_1.Fraction.prototype.minus = function(n, d) {
        if (n instanceof Fraction_1.Fraction && typeof d == "undefined") {
            var l = lcm(this.d, n.d);
            return new Fraction_1.Fraction(this.n * l / this.d - n.n * l / n.d,l)
        } else if (isInteger(n) && isInteger(d)) {
            return this.minus(new Fraction_1.Fraction(n,d))
        }
        throw new NotAFractionError("Cannot add " + this + " to n=" + n + ", d=" + d)
    }
}
)(Fraction || (Fraction = {}));
angular.module("fwUpdate").service("updateProgressCalc", ["$log", function($log) {
    var self = this;
    var asFraction = function(number) {
        if (typeof number == "object")
            return number;
        else
            return Fraction.Fraction(number, 1)
    };
    this.createRangePart = function(curRange, progressPartStr, weightPartStr, timestamp, durationStr) {
        var divFactor = undefined;
        var duration = parseInt(durationStr);
        if (weightPartStr) {
            var weightStrParts = weightPartStr.split("/");
            if (weightStrParts.length > 1) {
                var num = parseInt(weightStrParts[0]);
                var div = parseInt(weightStrParts[1]);
                if (!isNaN(num) && !isNaN(div))
                    divFactor = Fraction.Fraction(num, div)
            }
        }
        if (!divFactor && progressPartStr) {
            var progressStrParts = progressPartStr.split("/");
            if (progressStrParts.length > 1) {
                var div = parseInt(progressStrParts[1]);
                if (!isNaN(div))
                    divFactor = Fraction.Fraction(1, div)
            }
        }
        if (!divFactor)
            return angular.copy(curRange);
        var partEnd = asFraction(curRange.begin);
        for (var partIdx in curRange.parts) {
            var part = curRange.parts[partIdx];
            if (asFraction(part.end).toNumber() > partEnd.toNumber())
                partEnd = asFraction(part.end)
        }
        var end = asFraction(curRange.end);
        var begin = asFraction(curRange.begin);
        var curWidth = end.minus(begin);
        var curEnd = curWidth.multiply(divFactor).plus(partEnd);
        if (curEnd.toNumber() > asFraction(curRange.end).toNumber())
            curEnd = curRange.end;
        if (isNaN(duration))
            duration = curRange.duration * divFactor.toNumber();
        return {
            begin: asFraction(partEnd),
            end: asFraction(curEnd),
            duration: duration,
            startTime: timestamp,
            parent: curRange,
            parts: []
        }
    }
    ;
    this.updateStepState = function(stepState, logEntry, timestamp) {
        var curRange = stepState.progress.range;
        if (logEntry && logEntry.Progress) {
            var progressParts = logEntry.Progress.split(";");
            var weightParts = logEntry.Weight.split(";");
            curRange = stepState.rootRange;
            for (var partStrIdx in progressParts) {
                var progressPartStr = progressParts[partStrIdx];
                var denominator = progressPartStr.split("/")[0] || "0";
                var weightPartStr = weightParts[partStrIdx];
                if (Number(partStrIdx) != progressParts.length - 1 && denominator > 0)
                    denominator--;
                for (var i = curRange.parts.length; i < denominator; i++) {
                    curRange.parts[i] = self.createRangePart(curRange, progressPartStr, "-", logEntry.Timestamp, logEntry.Duration)
                }
                if (!curRange.parts[denominator]) {
                    curRange.parts[denominator] = self.createRangePart(curRange, progressPartStr, weightPartStr, logEntry.Timestamp, logEntry.Duration)
                }
                curRange = curRange.parts[denominator]
            }
            if (curRange.begin.toNumber() >= stepState.progress.current)
                stepState.progress.range = curRange;
            else
                curRange = stepState.progress.range
        }
        if (curRange == stepState.rootRange) {
            stepState.status = "waiting"
        } else if (curRange.begin.toNumber() >= 100) {
            stepState.status = "finished";
            stepState.progress.current = 100
        } else {
            stepState.status = "running";
            var curProg = curRange.begin.toNumber();
            if (curRange.end.toNumber() != curRange.begin.toNumber()) {
                var partTime = timestamp - curRange.startTime;
                var rangeWidth = curRange.end.minus(curRange.begin).toNumber();
                var partProgress = rangeWidth * (1 - Math.exp(0 - partTime / curRange.duration));
                if (partTime)
                    curProg += partProgress
            }
            if (curProg > stepState.progress.current && curProg <= curRange.end.toNumber()) {
                stepState.progress.current = curProg
            } else {}
        }
    }
}
]);
angular.module("fwUpdate").service("updateStateModel", ["updateProgressCalc", "$log", "$interval", "$translate", function(updateProgressCalc, $log, $interval, $translate) {
    var self = this;
    var _private = {
        lastUpdateLogTimestamp: undefined
    };
    var dict = {};
    var updateLogPollingModel = dm.model.UpdateLog.getInstance();
    $translate(["UPD_STP_EXECUTOR", "UPD_STP_DOWNLOAD", "UPD_STP_INVERTER", "getUpdStrFromDict", "UPD_STP_DMC", "UPD_STP_FINALIZE", "UPD_MSG_EXECUTOR_01", "PW_UPD_MSG_01", "PW_UPD_MSG_02", "PW_UPD_MSG_03", "PW_UPD_ERR_POWERWALL_01", "UPD_MSG_01", "UPD_MSG_02", "UPD_MSG_03", "UPD_MSG_04", "UPD_MSG_05", "UPD_MSG_06", "UPD_MSG_07", "UPD_ERR_EXECUTOR_01", "UPD_ERR_03", "UPD_ERR_05", "UPD_ERR_06", "UPD_ERR_09", "UPD_ERR_10", "UPD_ERR_25", "UPD_ERR_INVERTER_01", "UPD_ERR_INVERTER_02", "UPD_ERR_82", "UPD_ERR_83", "UPD_ERR_99", "UPD_ERR_CODE"]).then(function(trans) {
        dict = trans
    });
    var getUpdStrFromDict = function(strTag) {
        var strTagParts = strTag.split(";");
        switch (strTagParts[0]) {
        case "UPD_STP_EXECUTOR":
        case "UPD_STP_DOWNLOAD":
        case "UPD_STP_INVERTER":
        case "UPD_STP_POWERWALL":
        case "UPD_STP_DMC":
        case "UPD_STP_FINALIZE":
        case "UPD_MSG_EXECUTOR_01":
        case "UPD_MSG_01":
        case "UPD_MSG_02":
        case "UPD_MSG_03":
        case "UPD_MSG_04":
        case "UPD_MSG_05":
        case "UPD_MSG_06":
        case "UPD_MSG_07":
        case "UPD_MSG_12":
        case "PW_UPD_MSG_01":
        case "PW_UPD_MSG_02":
        case "PW_UPD_MSG_03":
        case "UPD_ERR_EXECUTOR_01":
        case "UPD_ERR_03":
        case "UPD_ERR_05":
        case "UPD_ERR_06":
        case "UPD_ERR_09":
        case "UPD_ERR_10":
        case "UPD_ERR_25":
        case "UPD_ERR_INVERTER_01":
        case "UPD_ERR_INVERTER_02":
        case "UPD_ERR_82":
        case "UPD_ERR_83":
        case "PW_UPD_ERR_POWERWALL_01":
            return strTagParts[0];
        case "UPD_ERR_99":
            var retStr = dict["UPD_ERR_99"];
            if (strTagParts[1])
                retStr += " (" + dict["UPD_ERR_CODE"] + ": " + strTagParts[1] + ")";
            return retStr;
        case "":
            return undefined;
        default:
            $log.error("received unknown Update-String-Tag: " + strTag);
            return undefined
        }
    };
    var getStepState = function(logEntry) {
        for (var stepIdx in self.updateState.steps) {
            var step = self.updateState.steps[stepIdx];
            if (step.titleTag == logEntry.Step)
                return step
        }
        var rootRange = {
            begin: Fraction.Fraction(0, 1),
            end: Fraction.Fraction(100, 1),
            duration: logEntry.Duration ? logEntry.Duration : 3600,
            parent: undefined,
            parts: []
        };
        var stepState = {
            titleTag: logEntry.Step,
            title: getUpdStrFromDict(logEntry.Step) || logEntry.TagDefault,
            messageTag: logEntry.Message,
            messageDefault: "",
            message: getUpdStrFromDict(logEntry.Message) || "",
            messageType: logEntry.Status == "ERROR" ? "error" : "normal",
            status: "waiting",
            rootRange: rootRange,
            progress: {
                current: 0,
                range: rootRange
            }
        };
        var newLen = undefined;
        if (stepState.titleTag)
            newLen = self.updateState.steps.push(stepState);
        if (newLen)
            return self.updateState.steps[newLen - 1];
        else
            return stepState
    };
    var fakeInterval = undefined;
    var onUpdateLogChanged = function(fake) {
        self.receivedLog = true;
        self.updateState.updateRunning = updateLogPollingModel.status == "RUNNING";
        if (!fake) {
            if (fakeInterval) {
                $interval.cancel(fakeInterval)
            }
            fakeInterval = $interval(function() {
                updateLogPollingModel.Timestamp++;
                onUpdateLogChanged(true)
            }, 1e3)
        }
        var updatedSteps = [];
        var updateStepState = function(stepState, logEntry, timestamp) {
            if (logEntry && logEntry.Message && logEntry.Message != stepState.messageTag) {
                stepState.messageTag = logEntry.Message;
                stepState.messageDefault = logEntry.TagDefault;
                stepState.message = getUpdStrFromDict(stepState.messageTag) || stepState.messageDefault;
                stepState.messageColor = logEntry.Status == "ERROR" ? "red" : "black"
            }
            updateProgressCalc.updateStepState(stepState, logEntry, timestamp)
        };
        for (var entryIdx in updateLogPollingModel.log) {
            var entry = updateLogPollingModel.log[entryIdx];
            if (Number(entryIdx) == 0 && !entry.isAnalyzed)
                self.clear();
            if (entry.isAnalyzed)
                continue;
            self.updateState.updateStarted = false;
            var stepState = getStepState(entry);
            updateStepState(stepState, entry, updateLogPollingModel.Timestamp);
            if (!updatedSteps[stepState.titleTag])
                updatedSteps[stepState.titleTag] = stepState;
            if (entry.Status == "FINISHED" || entry.Status == "ABORTED") {
                self.updateState.updateRunning = false;
                for (var stepIdx in self.updateState.steps) {
                    var step = self.updateState.steps[stepIdx];
                    if (step.status == "running") {
                        step.status = entry.Status == "FINISHED" ? "finished" : "failed"
                    } else if (step.status == "finished" && step.messageColor == "red" && entry.Status == "ABORTED") {
                        step.status = "failed"
                    }
                }
            }
            entry.isAnalyzed = true
        }
        for (var stepIdx in self.updateState.steps) {
            var step = self.updateState.steps[stepIdx];
            if (!updatedSteps[step.titleTag] && step.status == "running") {
                updateStepState(step, undefined, updateLogPollingModel.Timestamp)
            }
        }
    };
    updateLogPollingModel.onDataChanged(onUpdateLogChanged);
    this.updateState = {
        updateRunning: false,
        updateStarted: false,
        lastUpdateFinishedTime: undefined,
        steps: [],
        executorStep: {
            title: "UPD_STP_EXECUTOR",
            message: "UPD_MSG_EXECUTOR_01"
        }
    };
    this.receivedLog = false;
    this.subscribe = updateLogPollingModel.subscribe;
    this.unsubscribe = updateLogPollingModel.unsubscribe;
    this.clear = function() {
        self.updateState.steps.splice(0, self.updateState.steps.length)
    }
    ;
    this.getUpdateInProgress = function() {
        if (self.log.allMessages.length == 0) {
            self.updateStatus.updateRunning = false;
            return false
        }
        var lastMsg = self.log.allMessages[0];
        if (lastMsg.Status == undefined) {
            self.updateStatus.updateRunning = false;
            return false
        }
        if (lastMsg.Timestamp == "") {
            self.updateStatus.updateRunning = false
        } else {
            self.updateStatus.updateRunning = lastMsg.Status != "FINISHED" && lastMsg.Status != "ABORTED"
        }
        return self.updateStatus.updateRunning
    }
}
]);
angular.module("fwUpdate").controller("fwUpdateCtrl", ["$scope", "$http", "updateConfigModel", "updateStateModel", "$state", "appConfig", "standardDialog", "$translate", "$stateParams", "$q", "loginService", function($scope, $http, updateConfigModel, updateStateModel, $state, appConfig, standardDialog, $translate, $stateParams, $q, loginService) {
    var stdDialog = new dm.standardDialog.StandardDialog($scope);
    var policyTerms = dm.model.PolicyTerms.getInstance("fwUpdate", $scope);
    $scope.closeDialog = stdDialog.closeDialog;
    var askOnBackupDlg;
    var daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    var controlData = {
        strViewChangeLog: "",
        updateSearchActive: false,
        updateSearchMsg: "",
        updateSearchGlyphicon: null,
        updateSearchHref: "",
        showUpdateProgress: false,
        showRedirectionMessage: false,
        isRedirection: false
    };
    var dict = {};
    var uiLoading = true;
    var translations = $translate(["UPDATE_FOUND", "UPDATE_STARTED", "VIEW_CHANGELOG", "NO_NEW_UPDATES", "SEARCHING_FOR_UPDATES", "HINT_PROXY_SERVER", "HINT_PROXY_PORT", "HINT_IP_ADDRESS", "HINT_INVALID_VALUE", "STR_UPDATE_SOLWEBUSR", "STR_UPDATE_SOLAPPUSR", "STR_UPDATE_LOCALUSR", "FRONIUS_SOLAR_BATTERY"]);
    var evaluateUpdateData = function(xhr) {
        var updateData = xhr.getElementsByTagName("update");
        var currentVersion = xhr.getElementsByTagName("updateChecker")[0].getAttribute("currentVersion");
        if (updateData.length > 0) {
            for (var i = 0; i < updateData.length; i++) {
                var newVersion = updateData[i].getAttribute("newVersion");
                var baseurl = updateData[i].getAttribute("url");
                controlData.updateSearchMsg = "UPDATE_FOUND";
                $scope.versionObject.current_version = currentVersion;
                $scope.versionObject.new_version = newVersion;
                controlData.updateSearchHref = baseurl + "/changelog.txt";
                controlData.strViewChangeLog = "VIEW_CHANGELOG"
            }
        } else {
            controlData.updateSearchMsg = "NO_NEW_UPDATES"
        }
    };
    var getShowUpdateProgress = function() {
        if (updateStateModel.receivedLog && updateStateModel.updateState.updateRunning) {
            controlData.showUpdateProgress = true;
            controlData.showRedirectionMessage = false;
            $scope.closeDialog()
        }
        return controlData.showUpdateProgress
    };
    var getUpdateAborted = function() {
        var aborted = false;
        for (var stepIdx in updateStateModel.updateState.steps) {
            var step = updateStateModel.updateState.steps[stepIdx];
            aborted = aborted || step.status == "failed"
        }
        return aborted
    };
    var getAbortHidden = function() {
        if (controlData.showUpdateProgress) {
            return updateStateModel.updateState.updateStarted || updateStateModel.updateState.updateRunning || !getUpdateAborted()
        } else {
            return false
        }
    };
    var getUpdateRunning = function() {
        if (controlData.showUpdateProgress) {
            return updateStateModel.updateState.updateStarted || updateStateModel.updateState.updateRunning
        } else {
            return false
        }
    };
    $scope.versionObject = {
        current_version: "",
        new_version: ""
    };
    $scope.model = undefined;
    loginService.waitForLogin(true).then(function() {
        var user = loginService.getLoggedInUser();
        if (user == "admin" || user == "service" || user == "today") {
            $scope.init();
            updateConfigModel.loadDefaultValues();
            updateStateModel.subscribe("fwUpdateCtrl", 2e3)
        } else {
            dm.ngjs.$state.go("login", {
                previousState: $state.current.name,
                requiredUser: "admin"
            })
        }
    });
    if (controlData.showRedirectionMessage) {
        $("#navcol_content").hide(0, function() {})
    }
    $scope.onAllowAutoUpdateClicked = function() {
        if ($scope.config.allowAutoUpdate) {
            policyTerms.showPolicytermsDialog1(daloState.userAuth, "fwupdate", $scope, null, function() {
                $scope.config.allowAutoUpdate = false
            })
        }
    }
    ;
    $scope.onAutoUpdateCheckClicked = function() {
        if ($scope.config.autoUpdateCheck) {
            policyTerms.showPolicytermsDialog1(daloState.userAuth, "fwupdate", $scope, null, function() {
                $scope.config.autoUpdateCheck = false
            })
        }
    }
    ;
    $scope.$watch(function() {
        return getShowUpdateProgress() && !getUpdateRunning()
    }, function(newValue, oldValue) {
        if (newValue && !oldValue) {
            if (getUpdateAborted()) {
                stdDialog.showDialog("abortUpdateDialogTemplate")
            } else {
                stdDialog.showDialog("finishUpdateDialogTemplate")
            }
        }
    });
    $scope.config = updateConfigModel.data;
    $scope.configModel = updateConfigModel;
    $scope.updateState = updateStateModel.updateState;
    $scope.imgPath = appConfig.imgPath;
    $scope.control = controlData;
    $scope.metaObject = null;
    $scope.inconsistency = {
        soft: [],
        info: []
    };
    $scope.getOrigin = function() {
        return $scope.metaObject.options.origin
    }
    ;
    $scope.getActivator = function() {
        var time = parseInt($scope.metaObject.options.utctimestamp) * 1e3;
        return {
            activator: $scope.metaObject.options.activator,
            version: $scope.metaObject.options.toVersion,
            time: new Date(time).toLocaleTimeString()
        }
    }
    ;
    var readUpdateStatus = function() {
        $http.get("/status/update/").then(function(response) {
            var aData = response.data;
            if (aData.Head.Status.Code != 0 || aData.Body == undefined)
                return;
            var updateStatus = aData.Body.Data;
            $scope.metaObject = null;
            for (var logIdx in updateStatus) {
                if (updateStatus[logIdx].status.state == "running") {
                    $scope.metaObject = updateStatus[logIdx];
                    break
                }
            }
            if ($scope.metaObject == null) {
                dm.ngjs.$interval(readUpdateStatus, 1e3, 1)
            }
        })
    };
    $scope.$watch(function() {
        return getUpdateRunning()
    }, function(newval, oldval) {
        if (newval)
            readUpdateStatus()
    });
    $scope.onShowLogClicked = function() {
        $scope.showLog = !$scope.showLog;
        $scope.showLogGlyphicon = $scope.showLog ? "glyphicon-collapse-up" : "glyphicon-collapse-down"
    }
    ;
    $scope.getDataReady = function() {
        return updateConfigModel.dataReady && !uiLoading
    }
    ;
    $scope.getStartUpdateAllowed = function() {
        return updateStateModel.receivedLog && !updateStateModel.updateState.updateRunning
    }
    ;
    $scope.getPolicyTemplate = dm.util.templateUrls.getPolicyTemplate;
    $scope.getShowUpdateProgress = getShowUpdateProgress;
    $scope.onUpdateCheckBtn = function() {
        var checkRequestCode = 1;
        controlData.strViewChangeLog = "";
        controlData.updateSearchActive = true;
        controlData.updateSearchGlyphicon = null;
        controlData.updateSearchMsg = "SEARCHING_FOR_UPDATES";
        $http.get("/cgi-bin/updateChecker.cgi?checkCode=" + checkRequestCode).then(function(xhr) {
            evaluateUpdateData($.parseXML(xhr.data));
            controlData.updateSearchGlyphicon = "glyphicon glyphicon-remove-circle"
        }, function() {
            controlData.updateSearchActive = false
        })
    }
    ;
    $scope.btnOK = {};
    $scope.btnOK["OK"] = null;
    $scope.onOkClicked = function() {
        updateConfigModel.save(function() {
            dm.util.configRequest.showCfgSavedDialog()
        }, function(error) {
            if (error == "invalidData")
                stdDialog.showDialog("invalidDataTemplate");
            else
                dm.util.configRequest.showCfgErrorDialog(error)
        }, function(failure) {
            dm.util.configRequest.showCfgFailureDialog(failure)
        })
    }
    ;
    $scope.getErrorMessage = function() {
        var errors = "";
        if (updateConfigModel.isInvalid("proxyURL", updateConfigModel.data.proxy.proxyURL))
            errors += dict.HINT_PROXY_SERVER + "\n";
        if (updateConfigModel.isInvalid("proxyPort", updateConfigModel.data.proxy.proxyPort)) {
            errors += dict.HINT_PROXY_PORT + "\n"
        }
        if (updateConfigModel.isInvalid("remoteAddr", updateConfigModel.data.getIpAddr())) {
            errors += dict.HINT_IP_ADDRESS + "\n"
        }
        if (updateConfigModel.isInvalid("hour", updateConfigModel.data.autoUpdateTime_hh) || updateConfigModel.isInvalid("minute", updateConfigModel.data.autoUpdateTime_mm)) {
            errors += dict.HINT_INVALID_VALUE + " 7..16 : 00..59" + "\n"
        }
        return errors
    }
    ;
    $scope.getAbortHidden = getAbortHidden;
    $scope.onAbortClicked = function() {
        if (controlData.isRedirection) {
            window.location.href = "/"
        } else {
            if (controlData.showUpdateProgress) {
                controlData.showUpdateProgress = false
            } else {
                updateConfigModel.setDefaultValues()
            }
        }
    }
    ;
    $scope.onExecuteUpdateClicked = function() {
        if (!updateConfigModel.isDataValid()) {
            stdDialog.showDialog("invalidDataTemplate");
            return
        }
        $q.all([$http.get("/status/update/"), $http.get("/solar_api/v1/GetPowerFlowRealtimeData.fcgi")]).then(function(responses) {
            var aData = responses[0].data;
            var realTimeData = responses[1].data;
            var aUpdateRunning = false;
            if (aData.Head.Status.Code != 0 || aData.Body == undefined)
                return;
            for (var tag in aData.Body.Data) {
                var item = aData.Body.Data[tag];
                aUpdateRunning = aUpdateRunning || item.status.state == "running" && item.type != "Datamanager"
            }
            if (realTimeData && realTimeData.Body.Data && realTimeData.Body.Data.Site && realTimeData.Body.Data.Site.BackupMode) {
                askOnBackupDlg = new dm.standardDialog.StandardDialog($scope,"DIALOG_TITLE_HINT","{{'UPDATE_FORCEBACKUP' | translate}}");
                askOnBackupDlg.addButton("OK", "closeThisDialog()");
                askOnBackupDlg.showDialog()
            } else if (aUpdateRunning) {
                stdDialog.showDialog("inverterUpdateRunning")
            } else {
                if (!$scope.updateState.updateRunning) {
                    updateConfigModel.compareConfig();
                    $scope.showUpdateDialog()
                }
            }
        })
    }
    ;
    $scope.startUpdate = function() {
        var url = "/admincgi-bin/updateExecutor.cgi";
        var p = $scope.configModel.getConnectionParameter();
        url = url + "?refreshSource=" + p.refreshSource.toString();
        url = url + "&server=" + p.server;
        url = url + "&source=" + p.source;
        $http.get(url, {
            transformResponse: function(data) {
                return data
            }
        }).catch(function(error) {
            if (error.status == 401) {
                $state.go("login", {
                    previousState: "fwUpdate",
                    requiredUser: "admin"
                })
            }
        });
        updateStateModel.clear();
        controlData.showUpdateProgress = true;
        updateStateModel.updateState.updateStarted = true;
        controlData.showRedirectionMessage = false;
        $scope.closeDialog();
        dm.util.DataFetcher.suppressConnectionLostNotification(true)
    }
    ;
    $scope.init = function() {
        if ($scope.model == undefined)
            $scope.model = dm.model.SolarWebSettings.getInstance("settingsSolarWebCtrl", $scope);
        $q.all([translations, $scope.model.loadingPromise, daloState.loadingPromise]).then(function(responses) {
            dict = responses[0];
            controlData.showRedirectionMessage = daloState.isInconsistent;
            controlData.isRedirection = daloState.isInconsistent;
            $scope.inconsistency.info = angular.copy(daloState.infoInconsistentDevices, $scope.inconsistency.info);
            $scope.inconsistency.soft = angular.copy(daloState.softInconsistentDevices, $scope.inconsistency.soft);
            if ($scope.inconsistency.soft.length > 0 || $scope.inconsistency.info.length > 0) {
                $scope.config.updateKind = "local"
            }
            if (controlData.showRedirectionMessage) {
                $("#navcol_content").hide(0, function() {})
            }
            if ($stateParams.searchUpdate) {
                $scope.onUpdateCheckBtn()
            }
            uiLoading = false
        })
    }
    ;
    $scope.onUpdateDialogYes = function() {
        $scope.startUpdate()
    }
    ;
    $scope.onFinishDialogOk = function() {
        var win = window;
        win.location = win.location.origin
    }
    ;
    $scope.showUpdateDialog = function() {
        stdDialog.showDialog("startUpdateDialogTemplate")
    }
    ;
    $scope.$on("$destroy", function() {
        updateStateModel.unsubscribe("fwUpdateCtrl")
    })
}
]);
var dm;
(function(dm) {
    var view;
    (function(view) {
        var header;
        (function(header) {
            angular.module("header", ["global"])
        }
        )(header = view.header || (view.header = {}))
    }
    )(view = dm.view || (dm.view = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var other;
    (function(other) {
        var DataFetcher;
        (function(DataFetcher) {
            var Notification = dm.model.notifications.Notification;
            var NotificationLevel = dm.model.notifications.Level;
            var NotificationText = dm.model.notifications.NotificationText;
            var NotificationLinebreak = dm.model.notifications.NotificationLinebreak;
            var NotificationLink = dm.model.notifications.NotificationLink;
            var SECOND = 1e3;
            var MINUTE = SECOND * 60;
            angular.module("header").directive("langChooser", ["$document", function($document) {
                var linkFn = function(scope, elem, attrs) {
                    var daloState = dm.model.DaloState.getInstance("DaloStateModel", scope);
                    var _$ = $;
                    daloState.loadingPromise.then(function() {
                        scope.onLangClick = function() {
                            var e = $("#lang_content");
                            var others = $(".headerbutton_flyout").not(e);
                            others.hide();
                            others.trigger("hide");
                            e.toggle("fade", "fast");
                            if (e.css("display") != "none") {
                                e.position({
                                    my: "right top",
                                    at: "right bottom",
                                    of: $("#btn_language")
                                })
                            }
                        }
                        ;
                        scope.onRbClick = function(lang) {
                            if (lang == daloState.language) {
                                scope.onLangClick()
                            } else {
                                var params = _$.url().param();
                                if (params.lang) {
                                    var currentStr = "lang=" + params.lang;
                                    window.location.search = window.location.search.replace(currentStr, "lang=" + lang)
                                }
                                daloState.setLanguage(lang)
                            }
                        }
                        ;
                        _$("#lang_radio_set input:radio").filter("[value=" + daloState.language + "]").attr("checked", true);
                        var langRadioSet = $("#lang_radio_set");
                        langRadioSet.buttonset();
                        var langContent = $("#lang_content");
                        langContent.position({
                            my: "right top",
                            at: "right bottom",
                            of: $("#btn_language")
                        });
                        var hideAllFlyouts = function(evt) {
                            try {
                                var idsNotToHide = ["btn_sysinfo", "btn_help", "btn_expand_content", "btn_notifications", "btn_language"];
                                var elemId = null;
                                var parentId = null;
                                if (evt.srcElement && evt.srcElement.parentElement) {
                                    elemId = evt.srcElement.id;
                                    parentId = evt.srcElement.parentElement.id
                                } else if (evt.target && evt.target.parentElement) {
                                    elemId = evt.target.id;
                                    parentId = evt.target.parentElement.id
                                }
                                if (!(elemId && idsNotToHide.indexOf(elemId) >= 0) && !(parentId && idsNotToHide.indexOf(parentId) >= 0)) {
                                    $(".headerbutton_flyout").hide();
                                    $(".headerbutton_flyout").trigger("hide")
                                }
                            } catch (e) {}
                        };
                        $document.on("click", hideAllFlyouts);
                        $(document).bind("keydown", function(e) {
                            if (e.keyCode == 27) {
                                hideAllFlyouts(e)
                            }
                            return true
                        })
                    })
                };
                return {
                    restrict: "E",
                    link: linkFn
                }
            }
            ]);
            angular.module("header").directive("sysInfo", ["$http", function($http) {
                var linkFn = function(scope, elem, attrs) {
                    var daloState = dm.model.DaloState.getInstance("DaloStateModel", scope);
                    daloState.loadingPromise.then(function() {
                        scope.DaloID = daloState.daloID;
                        scope.SoftwareVersion = daloState.softwareVersion;
                        scope.HardwareVersion = daloState.hardwareVersion;
                        scope.SolarNetConnectionState = -1;
                        scope.SolarWebConnectionState = -1;
                        scope.onInfoClick = function() {
                            var e = $("#sysinfo_content");
                            var others = $(".headerbutton_flyout").not(e);
                            others.hide();
                            others.trigger("hide");
                            e.toggle("fade", "fast");
                            if (e.css("display") != "none") {
                                e.position({
                                    my: "right top",
                                    at: "right bottom",
                                    of: $("#btn_sysinfo")
                                })
                            }
                        }
                        ;
                        scope.getStringForState = function(aState) {
                            switch (aState) {
                            case 0:
                                return "DISABLED";
                            case 1:
                                return "DISCONNECTED";
                            case 2:
                                return "CONNECTED";
                            default:
                                return ""
                            }
                        }
                        ;
                        scope.getClassForState = function(aState) {
                            switch (aState) {
                            case 0:
                                return "connection_state_disabled";
                            case 1:
                                return "connection_state_disconnected";
                            case 2:
                                return "connection_state_connected";
                            default:
                                return "connection_state_disconnected"
                            }
                        }
                        ;
                        var df = dm.util.DataFetcher.newInstance(function() {
                            return $http.get("/solar_api/v1/GetLoggerConnectionInfo.cgi")
                        }, function(response) {
                            if (!response.data || !response.data.Body || !response.data.Body.Data)
                                return;
                            scope.SolarNetConnectionState = response.data.Body.Data.SolarNetConnectionState;
                            scope.SolarWebConnectionState = response.data.Body.Data.SolarWebConnectionState
                        });
                        df.subscribe("sysInfo", 3e4);
                        var sysInfoContent = $("#sysinfo_content");
                        sysInfoContent.position({
                            my: "right top",
                            at: "right bottom",
                            of: $("#btn_sysinfo")
                        })
                    })
                };
                return {
                    restrict: "E",
                    link: linkFn
                }
            }
            ]);
            angular.module("header").directive("help", function() {
                var linkFn = function(scope, elem, attrs) {
                    var daloState = dm.model.DaloState.getInstance("DaloStateModel", scope);
                    daloState.loadingPromise.then(function() {
                        scope.ONLINE_HELP_BASEPATH = daloState.helpBasePath;
                        scope.onHelpClick = function() {
                            var e = $("#help_content");
                            var others = $(".headerbutton_flyout").not(e);
                            others.hide();
                            others.trigger("hide");
                            e.toggle("fade", "fast");
                            if (e.css("display") != "none") {
                                e.position({
                                    my: "right top",
                                    at: "right bottom",
                                    of: $("#btn_help")
                                })
                            }
                        }
                        ;
                        var helpContent = $("#help_content");
                        if (helpContent.length) {
                            helpContent.position({
                                my: "right top",
                                at: "right bottom",
                                of: $("#btn_help")
                            })
                        }
                        var contentResizing = false;
                        $("#btn_expand_content").click(function(aEvt) {
                            if (daloState.isInconsistent)
                                return;
                            if (contentResizing) {
                                return
                            }
                            if ($("#backlayer").css("marginRight") != "0px") {
                                $("#navcol_content").hide();
                                $("#backlayer").animate({
                                    marginRight: "0px"
                                });
                                $("#topheader").animate({
                                    marginRight: "0px"
                                })
                            } else {
                                $("#backlayer").animate({
                                    marginRight: "184px"
                                }, {
                                    complete: function() {
                                        return $("#navcol_content").show()
                                    }
                                });
                                $("#topheader").animate({
                                    marginRight: "184px"
                                })
                            }
                        })
                    })
                };
                return {
                    restrict: "E",
                    link: linkFn
                }
            });
            angular.module("header").controller("headerCtrl", ["$scope", "$rootScope", "$translate", "$http", "$state", "$timeout", "$q", "loginService", function($scope, $rootScope, $translate, $http, $state, $timeout, $q, loginService) {
                var daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
                var loginModel = dm.model.LoginModel.getInstance();
                function showUpdateNotification() {
                    var aCurrentVersion = daloState.softwareVersion;
                    var aNewVersion = daloState.newSWVersion;
                    var aUpdateUrl = daloState.updateUrl + "/changelog.txt";
                    if (aNewVersion == "") {
                        dm.model.notifications.remove("update_available")
                    } else {
                        dm.model.notifications.add(new Notification("update_available",NotificationLevel.info,[new NotificationText("UPDATE_FOUND",{
                            current_version: aCurrentVersion,
                            new_version: aNewVersion || "?"
                        }), new NotificationLinebreak, new NotificationLink(aUpdateUrl,"VIEW_CHANGELOG")],"fwUpdate"))
                    }
                }
                function checkForDateDeviation() {
                    var clientDate = new Date;
                    var clientTime = clientDate.getTime();
                    var _deviation = (daloState.systemDate.getTime() - clientTime) / 6e4;
                    if (Math.abs(_deviation) > 70) {
                        console.debug("Date deviation too high: ", _deviation.toFixed(2), " minutes.");
                        dm.model.notifications.add(new Notification("date_not_set",NotificationLevel.alert,[new NotificationText("DATE_NOT_SET_01"), new NotificationLinebreak, new NotificationText("DATE_NOT_SET_02")],"settings.common"))
                    } else {
                        dm.model.notifications.remove("date_not_set")
                    }
                }
                $scope.loading = true;
                $scope.showNotifications = false;
                $scope.notificationFilter = [];
                $rootScope.$on("$stateChangeSuccess", function(event, toState, toParams, fromState, fromParams) {
                    var isUpdatePage = toState.name === "fwUpdate";
                    $scope.showNotifications = !daloState.wizardRunning || isUpdatePage;
                    $scope.notificationFilter = daloState.wizardRunning && isUpdatePage ? ["date_not_set"] : []
                });
                $scope.init = function() {
                    daloState.loadingPromise.then(function() {
                        $scope.SystemName = dm.util.string.htmlDecode(daloState.systemName);
                        $scope.loading = false;
                        $rootScope.isHeaderLoaded = true;
                        initNotifications();
                        dm.ngjs.$interval(function() {
                            showUpdateNotification()
                        }, 2e3, 1);
                        dm.ngjs.$interval(function() {
                            return daloState.loadAndUpdateStatus().then(function() {
                                return checkForDateDeviation()
                            })
                        }, MINUTE * 15);
                        checkForDateDeviation()
                    }, function() {
                        $scope.loading = false
                    })
                }
                ;
                var getNotificationLink = function(id) {
                    switch (id) {
                    case "meter":
                        if (daloState.isHybrid())
                            return "settings.overview";
                        else
                            return "settings.meter";
                    default:
                        break
                    }
                };
                var initNotifications = function() {
                    var EventsFetcher = dm.util.DataFetcher.newInstance(function() {
                        return $http.get("/events/")
                    }, function(response) {
                        if (!response.data || !response.data.Body || !response.data.Body.Data || !response.data.Body.Data.activeItems || !response.data.Body.Data.viewer || response.data.Body.Data.viewer != "website")
                            return;
                        var activeItems = response.data.Body.Data.activeItems;
                        var meterAvailable = true;
                        var teslaAvailable = true;
                        var softInconsistencyAvailable = false;
                        var infoInconsistencyAvailable = false;
                        for (var idx in activeItems) {
                            var item = activeItems[idx];
                            if (item.code == "989") {
                                meterAvailable = false;
                                dm.ngjs.$http.get("/solar_api/v1/GetPowerFlowRealtimeData.fcgi").then(function(PowerFlowResponse) {
                                    var powerFlowRealtimeData = PowerFlowResponse.data.Body.Data;
                                    if (!powerFlowRealtimeData || !powerFlowRealtimeData.Site || powerFlowRealtimeData.Site.BackupMode) {
                                        dm.model.notifications.remove("METERNotification");
                                        return
                                    }
                                    dm.model.notifications.add(new Notification("METERNotification",NotificationLevel.alert,[new NotificationText("METER_FAILED")],getNotificationLink("meter")))
                                })
                            } else if (item.code == "inconsistency") {
                                daloState.setInconsistency(item);
                                if (daloState.softInconsistentDevices.length > 0) {
                                    softInconsistencyAvailable = true;
                                    dm.model.notifications.add(new Notification("SoftInconsistentNotification",NotificationLevel.alert,[new NotificationText("INCONSISTENT_1"), new NotificationLinebreak, new NotificationText("INCONSISTENT_2")],"fwUpdate"))
                                }
                                if (daloState.infoInconsistentDevices.length > 0) {
                                    infoInconsistencyAvailable = true;
                                    dm.model.notifications.add(new Notification("InfoInconsistentNotification",NotificationLevel.info,[new NotificationText("INCONSISTENT_3")],"fwUpdate"))
                                }
                            }
                        }
                        if (meterAvailable)
                            dm.model.notifications.remove("METERNotification");
                        if (teslaAvailable)
                            dm.model.notifications.remove("TeslaLidNotification");
                        if (!softInconsistencyAvailable) {
                            dm.model.notifications.remove("SoftInconsistentNotification")
                        }
                        if (!infoInconsistencyAvailable) {
                            dm.model.notifications.remove("InfoInconsistentNotification")
                        }
                    });
                    if (daloState.isHybrid()) {
                        var BATFullChargeVisible = false;
                        var LDESFetcher = dm.util.DataFetcher.newInstance(function() {
                            return $http.get("/status/powerflowcontroller/")
                        }, function(response) {
                            try {
                                var aData = response.data.Body;
                                if (!aData.Data || !aData.Data.batteries || !aData.Data.batteries.service)
                                    return;
                                if (aData.Data.batteries.service.bat_full_request && !daloState.isInconsistent) {
                                    if (!BATFullChargeVisible) {
                                        BATFullChargeVisible = true;
                                        dm.model.notifications.add(new Notification("BATFullRequest",NotificationLevel.info,[new NotificationText("BAT_FULLCHARGE")],"settings.energymanagement"))
                                    }
                                } else {
                                    dm.model.notifications.remove("BATFullRequest")
                                }
                            } catch (e) {}
                        })
                    }
                    var PCCSNotificationPLVisible = false;
                    var LastPowerLimit = undefined;
                    var PCCSNotificationCPVisible = false;
                    var LastCosPhi = undefined;
                    var PCCStateFetcher = dm.util.DataFetcher.newInstance(function() {
                        return $http.get("/status/pccs/state")
                    }, function(response) {
                        try {
                            var aData = response.data;
                            if (!aData)
                                return;
                            if (aData.PowerLimit.active) {
                                if (LastPowerLimit != aData.PowerLimit.value) {
                                    dm.model.notifications.remove("PCCSNotificationPL");
                                    PCCSNotificationPLVisible = false;
                                    LastPowerLimit = aData.PowerLimit.value
                                }
                                if (!PCCSNotificationPLVisible) {
                                    if (aData.PowerLimit.ruleNr == -1) {
                                        dm.model.notifications.add(new Notification("PCCSNotificationPL",NotificationLevel.info,[new NotificationText("MODBUS_POWER_ACTIVE",{
                                            DATE: new Date(aData.PowerLimit.date * 1e3).toLocaleString(),
                                            LIMIT: aData.PowerLimit.value
                                        })]))
                                    } else {
                                        dm.model.notifications.add(new Notification("PCCSNotificationPL",NotificationLevel.info,[new NotificationText("EVU_POWER_ACTIVE",{
                                            DATE: new Date(aData.PowerLimit.date * 1e3).toLocaleString(),
                                            LIMIT: aData.PowerLimit.value,
                                            RuleNr: aData.PowerLimit.ruleNr
                                        })],"settings.evu"))
                                    }
                                    PCCSNotificationPLVisible = true
                                }
                            } else {
                                if (PCCSNotificationPLVisible) {
                                    dm.model.notifications.remove("PCCSNotificationPL");
                                    PCCSNotificationPLVisible = false;
                                    LastPowerLimit = undefined
                                }
                            }
                            if (aData.CosPhiFactor.active) {
                                if (LastCosPhi != aData.CosPhiFactor.value) {
                                    dm.model.notifications.remove("PCCSNotificationCP");
                                    PCCSNotificationCPVisible = false;
                                    LastCosPhi = aData.CosPhiFactor.value
                                }
                                if (!PCCSNotificationCPVisible) {
                                    if (aData.CosPhiFactor.ruleNr == -1) {
                                        dm.model.notifications.add(new Notification("PCCSNotificationCP",NotificationLevel.info,[new NotificationText("MODBUS_COSPHI_ACTIVE",{
                                            DATE: new Date(aData.CosPhiFactor.date * 1e3).toLocaleString(),
                                            LIMIT: aData.CosPhiFactor.value
                                        })]))
                                    } else {
                                        dm.model.notifications.add(new Notification("PCCSNotificationCP",NotificationLevel.info,[new NotificationText("EVU_COSPHI_ACTIVE",{
                                            DATE: new Date(aData.CosPhiFactor.date * 1e3).toLocaleString(),
                                            LIMIT: dm.util.helpers.roundN(aData.CosPhiFactor.value, 3),
                                            RuleNr: aData.CosPhiFactor.ruleNr
                                        })],"settings.evu"))
                                    }
                                    PCCSNotificationCPVisible = true
                                }
                            } else {
                                if (PCCSNotificationCPVisible) {
                                    dm.model.notifications.remove("PCCSNotificationCP");
                                    PCCSNotificationCPVisible = false;
                                    LastCosPhi = undefined
                                }
                            }
                        } catch (e) {}
                    });
                    var UpdateStateFetcher = dm.util.DataFetcher.newInstance(function() {
                        return $http.get("/status/update/")
                    }, function(response) {
                        try {
                            var aData = response.data;
                            var aUpdateRunning = false;
                            for (var updateIdx in aData.Body.Data) {
                                var update = aData.Body.Data[updateIdx];
                                aUpdateRunning = aUpdateRunning || update.status.state == "running"
                            }
                            if (aUpdateRunning) {
                                dm.util.DataFetcher.suppressConnectionLostNotification(true);
                                dm.model.notifications.add(new Notification("UpdateNotification",NotificationLevel.info,[new NotificationText("STR_UPDATE_RUNNING",{})],"fwUpdate"))
                            } else {
                                dm.util.DataFetcher.suppressConnectionLostNotification(false);
                                dm.model.notifications.remove("UpdateNotification")
                            }
                        } catch (e) {}
                    });
                    var PCCSTimeoutVisible = false;
                    var PCCS_PLAlertVisible = false;
                    var PCCS_CPAlertVisible = false;
                    var PCCErrorFetcher = dm.util.DataFetcher.newInstance(function() {
                        return $http.get("/status/pccs/error")
                    }, function(response) {
                        function createInverterListNotificationArray(alertTag, inverterList, stepwidth) {
                            if (stepwidth === void 0) {
                                stepwidth = 20
                            }
                            var notificationTextArray = [];
                            notificationTextArray.push(new NotificationText(alertTag,{
                                INVERTERS: ""
                            }));
                            notificationTextArray.push(new NotificationLinebreak);
                            var chucks = [];
                            while (inverterList.length > 0) {
                                chucks.push(inverterList.splice(0, stepwidth))
                            }
                            for (var chuckIdx in chucks) {
                                var str = chucks[chuckIdx].join(",");
                                if (Number(chuckIdx) == 0)
                                    str = "[" + str;
                                if (Number(chuckIdx) == chucks.length - 1)
                                    str = str + "]";
                                notificationTextArray.push(new NotificationText(str));
                                notificationTextArray.push(new NotificationLinebreak)
                            }
                            return notificationTextArray
                        }
                        try {
                            var aData = response.data;
                            if ((aData.cpTimeout || aData.plTimeout) && (PCCSNotificationPLVisible || PCCSNotificationCPVisible)) {
                                if (!PCCSTimeoutVisible) {
                                    PCCSTimeoutVisible = true;
                                    dm.model.notifications.add(new Notification("PCCSTimeout",NotificationLevel.info,[new NotificationText("EVU_TIMEOUT")],"settings.evu"))
                                }
                            } else {
                                if (PCCSTimeoutVisible) {
                                    dm.model.notifications.remove("PCCSTimeout");
                                    PCCSTimeoutVisible = false
                                }
                            }
                            if (aData.plInverterErrors != undefined && aData.plInverterErrors.length && PCCSNotificationPLVisible) {
                                if (!PCCS_PLAlertVisible) {
                                    PCCS_PLAlertVisible = true;
                                    dm.model.notifications.add(new Notification("PCCS_PLAlert",NotificationLevel.alert,createInverterListNotificationArray("EVU_PL_ALERT", aData.plInverterErrors, 20),"settings.evu"))
                                }
                            } else {
                                if (PCCS_PLAlertVisible) {
                                    dm.model.notifications.remove("PCCS_PLAlert");
                                    PCCS_PLAlertVisible = false
                                }
                            }
                            if (aData.cpInverterErrors != undefined && aData.cpInverterErrors.length && PCCSNotificationCPVisible) {
                                if (!PCCS_CPAlertVisible) {
                                    PCCS_CPAlertVisible = true;
                                    dm.model.notifications.add(new Notification("PCCS_CPAlert",NotificationLevel.alert,createInverterListNotificationArray("EVU_CP_ALERT", aData.cpInverterErrors, 20),"settings.evu"))
                                }
                            } else {
                                if (PCCS_CPAlertVisible) {
                                    dm.model.notifications.remove("PCCS_CPAlert");
                                    PCCS_CPAlertVisible = false
                                }
                            }
                        } catch (e) {}
                    });
                    var startPolling = function() {
                        EventsFetcher.subscribe("METERNotification", 1e4);
                        if (daloState.isHybrid())
                            LDESFetcher.subscribe("BATFullRequest", 3e4);
                        UpdateStateFetcher.subscribe("UpdateNotification", 3e4);
                        PCCStateFetcher.subscribe("PCCSNotificationCP", 3e4);
                        PCCErrorFetcher.subscribe("PCCSerrorNotifications", 3e4)
                    };
                    var stopPolling = function() {
                        EventsFetcher.unsubscribe("METERNotification");
                        if (daloState.isHybrid())
                            LDESFetcher.unsubscribe("BATFullRequest");
                        UpdateStateFetcher.unsubscribe("UpdateNotification");
                        PCCStateFetcher.unsubscribe("PCCSNotificationCP");
                        PCCErrorFetcher.unsubscribe("PCCSerrorNotifications")
                    };
                    startPolling()
                };
                loginService.waitForLogin().then(function() {
                    $scope.init()
                })
            }
            ])
        }
        )(DataFetcher = other.DataFetcher || (other.DataFetcher = {}))
    }
    )(other = dm.other || (dm.other = {}))
}
)(dm || (dm = {}));
angular.module("header").controller("navigationCtrl", ["$scope", "standardDialog", "$state", "$http", "loginService", function($scope, standardDialog, $state, $http, loginService) {
    var stdDialog = new dm.standardDialog.StandardDialog($scope);
    $scope.init = function() {
        $http.get("/solar_api/v1/GetLoggerConnectionInfo.cgi").then(function(response) {
            if (!response.data || !response.data.Body || !response.data.Body.Data)
                return;
            $scope.SolarWebConnectionState = response.data.Body.Data.SolarWebConnectionState
        })
    }
    ;
    $scope.onGotoWizardYes = function() {
        var wizardStateModel = dm.model.WizardState.getInstance("wizardCtrl", $scope);
        wizardStateModel.load().then(function() {
            wizardStateModel.startWizard($scope.daloState.remoteAddr).then(function() {
                $scope.daloState.pageVisible = false;
                $scope.daloState.wizardRunning = true;
                $state.go("wizard")
            })
        })
    }
    ;
    $scope.gotoWizard = function() {
        if ($scope.getLoggedInUser() == "user") {
            loginService.waitForLogin(true, true).then(function() {
                return $scope.onGotoWizardYes()
            });
            $state.go("login", {
                previousState: "startpage",
                requiredUser: "admin"
            })
        } else {
            $scope.onGotoWizardYes()
        }
    }
    ;
    $scope.userLoggedIn = function() {
        return loginService.isUserLoggedIn()
    }
    ;
    $scope.getLoggedInUser = function() {
        return loginService.getLoggedInUser()
    }
    ;
    $scope.loginUser = function() {
        var previousStateName = undefined;
        if ($state && $state.current && $state.current.name) {
            previousStateName = $state.current.name
        }
        $state.go("login", {
            previousState: previousStateName
        })
    }
    ;
    $scope.logoutUser = function() {
        $state.go("startpage").then(function() {
            return loginService.logout()
        })
    }
    ;
    var df = dm.util.DataFetcher.newInstance(function() {
        return $http.get("/solar_api/v1/GetLoggerConnectionInfo.cgi")
    }, function(response) {
        if (!response.data || !response.data.Body || !response.data.Body.Data)
            return;
        $scope.SolarWebConnectionState = response.data.Body.Data.SolarWebConnectionState
    });
    df.subscribe("navigation", 3e4);
    $scope.init()
}
]);
angular.module("header").directive("siteNavigation", [function() {
    return {
        restrict: "E",
        transclude: true,
        replace: true,
        templateUrl: "../html/navigation.html",
        controller: "navigationCtrl",
        link: function() {}
    }
}
]);
angular.module("header").directive("siteHeader", [function() {
    return {
        restrict: "E",
        transclude: true,
        replace: true,
        templateUrl: "../html/header.html",
        controller: "headerCtrl",
        link: function() {}
    }
}
]);
angular.module("header").directive("notifications", ["$document", "$state", function($document, $state) {
    var template = '         <span id="btn_notifications" class="ui-state-default ui-corner-all" title="{{\'NOTIFICATIONS\'|translate}}" style="display: inline-block; vertical-align: middle"               ng-class="{\'new_notifications\': hasNew()}" ng-click="onNotifBtnClick($event)">             <span class="ui-state-default ui-corner-all ui-icon ui-icon-mail-closed"> </span>             <span id="notification_count">{{getFilteredNotifications().length}} </span>         </span>         <div class="ui-widget-content ui-corner-all" style="padding: 1em; position:absolute; box-shadow: 0 0 10px 1px;              z-index: 1000; display: block; width:400px;" ng-show="showNotifications()"              ng-style="getPosStyle()">             <ul style="list-style-type:none; padding:0px;">               <li ng-repeat="notif in getFilteredNotifications()" data-msgid="{{notif.id}}" style="margin-top:10px; cursor:pointer;" ng-click="onNotifClick(notif, $event)">                 <div class="ui-corner-all" ng-class="{' + "'ui-state-error': notif.getLevel() == 'alert', 'ui-state-highlight': notif.getLevel() == 'info'}" + '">                 <p style="overflow: hidden; padding-left: 5px; padding-right: 5px;">                     <span ng-class="{\'ui-icon-alert\': notif.getLevel() == \'alert\', \'ui-icon-info\': notif.getLevel() == \'info\'}"                           class="ui-icon" style="float: left; margin-right: .3em;"                           style="display:inline-block; vertical-align:middle; cursor:pointer;"></span> <span>                     <span ng-repeat-start="part in notif.parts" ng-if="part.getType() == \'text\'"                           style="display:inline-block; vertical-align:middle; cursor:pointer; width:360px; margin-left:5px; whitespace:pre-line">                         {{part.translate ? (part.content | translate:part.getVariables()) : part.content}}                     </span>                     <span ng-if="part.getType() == \'link\'"                           style="display:inline-block; vertical-align:middle; cursor:pointer; width:360px; margin-left:5px;"> \t\t\t            <span ng-click="stopHrefEvent($event);">                        <a target="_blank" ng-href="{{part.href}}" style="text-decoration: underline;">                             {{part.translate ? (part.content | translate:part.getVariables()) : part.content}}                         </a> </span>                    </span>                     <br ng-repeat-end ng-if="part.getType() == \'linebreak\'"/>                 </span> </p> </div>               </li>             </ul>         </div>';
    var linkFn = function(scope, elem, attrs) {
        scope.notifications = dm.model.notifications.items;
        var _showNotifications = false;
        $document.on("click", function() {
            _showNotifications = false;
            dm.model.notifications.hasNew = false;
            scope.$digest()
        });
        scope.hasNew = function() {
            return dm.model.notifications.hasNew && scope.getFilteredNotifications().length
        }
        ;
        scope.showNotifications = function() {
            return _showNotifications || scope.hasNew()
        }
        ;
        scope.getPosStyle = function() {
            var buttonNotifications = angular.element("#btn_notifications");
            var notificationsAvailable = buttonNotifications && buttonNotifications.length > 0;
            return {
                left: notificationsAvailable ? buttonNotifications.offset().left - 420 + 32 : 0
            }
        }
        ;
        scope.stopHrefEvent = function($event) {
            $event.stopPropagation()
        }
        ;
        scope.onNotifBtnClick = function($event) {
            if (scope.getFilteredNotifications().length > 0) {
                _showNotifications = true;
                $event.stopPropagation()
            }
        }
        ;
        scope.onNotifClick = function(notif, $event) {
            if (notif.linkState)
                $state.go(notif.linkState);
            $event.stopPropagation()
        }
        ;
        scope.$watch("notifications.length", function(newVal) {
            if (newVal == 0)
                _showNotifications = false
        });
        scope.getFilteredNotifications = function() {
            var containsFilter = scope.notificationFilter && scope.notificationFilter.length > 0;
            return containsFilter ? scope.notifications.filter(function(notification) {
                return scope.notificationFilter.indexOf(notification.id) > -1
            }) : scope.notifications
        }
    };
    return {
        restrict: "E",
        link: linkFn,
        scope: {
            notificationFilter: "=filter"
        },
        template: template
    }
}
]);
angular.module("networkDiagnostics", ["global"]).controller("networkDiagnosticsCtrl", ["$scope", "$http", "$interval", "standardDialog", function($scope, $http, $interval, standardDialog) {
    var ctrl = {
        host: "solarweb.fronius.com",
        output: "",
        cmdRunningInterval: null
    };
    var stdDialog = new dm.standardDialog.StandardDialog($scope);
    var sendCommand = function(commandID, targetHost) {
        return $http({
            url: "/admincgi-bin/networkDiagnostics.cgi",
            method: "POST",
            data: $.param({
                commandID: commandID,
                targetHost: targetHost
            }),
            headers: {
                "Content-Type": "application/x-www-form-urlencoded"
            }
        })
    };
    var runCmd = function(commandID, targetHost) {
        cout(".");
        ctrl.cmdRunningInterval = $interval(function() {
            cout(".")
        }, 2e3);
        sendCommand(commandID, targetHost).then(function(response) {
            var formOutput = response.data.replace(/\n/g, String.fromCharCode(10));
            cout(String.fromCharCode(10));
            cout(formOutput)
        }, function() {
            stdDialog.showDialog('<dialog-template>                     <dialog-title>Error</dialog-title>                     <dialog-content> Config request failed. </dialog-content>                     <dialog-button-pane>                         <dialog-button ng-click="closeThisDialog();">ok</dialog-button>                     </dialog-button-pane>                 </dialog-template>', true)
        }).finally(function() {
            $interval.cancel(ctrl.cmdRunningInterval);
            ctrl.cmdRunningInterval = null
        })
    };
    var cout = function(text) {
        $scope.control.output += text
    };
    $scope.control = ctrl;
    $scope.ping = function() {
        cout(">>> Sending ping to '" + ctrl.host + "' ");
        runCmd(0, ctrl.host)
    }
    ;
    $scope.traceroute = function() {
        cout(">>> Tracing route to '" + ctrl.host + "' ");
        runCmd(1, ctrl.host)
    }
}
]);
angular.module("settings", ["global", "dataModels"]);
angular.module("settings").controller("settingsBatteryServiceCtrl", ["$scope", "$http", "$q", "$interval", "standardDialog", "$state", "settingsHelperFunctions", function($scope, $http, $q, $interval, standardDialog, $state, settingsHelperFunctions) {
    var stdDialog = new dm.standardDialog.StandardDialog($scope);
    var cancelBatteryNowDataUpdate = undefined;
    var siteNowDataUpdate = undefined;
    var batteryNowDataModel = dm.model.BatteryNowData.getInstance();
    var siteNowDataModel = dm.model.SiteNowData.getInstance();
    var battModel = dm.model.BatteryConfig.getInstance("BatteryConfig", $scope);
    var onBatteryNowDataChanged = function(e, data) {
        $scope.batAvailable = data.DataValid && data.Enable
    };
    var onSiteNowDataChanged = function(e, data) {
        $scope.backupActive = data.BackupMode
    };
    var getSOC = function() {
        dm.ngjs.$q.all([$http.get("/status/powerflowcontroller/"), $http.get("/solar_api/v1/GetPowerFlowRealtimeData.fcgi")]).then(function(responses) {
            var batService = responses[0].data.Body.Data.batteries.service;
            var realTimeData = responses[1].data.Body.Data;
            var soc = 0;
            for (var idx in realTimeData.Inverters) {
                var inverter = realTimeData.Inverters[idx];
                soc = inverter.SOC;
                break
            }
            var durString = "";
            var remainingTime = parseFloat("" + batService.remainingTime);
            if (isNaN(remainingTime)) {
                durString = "Infinity"
            } else {
                var h = Math.floor(remainingTime);
                var m_1 = Math.round(remainingTime % 1 * 60);
                durString = h > 0 ? h + "h" : "";
                durString += m_1 > 0 ? " " + m_1 + "min" : "";
                durString = durString == "" ? " -- " : " ~ " + durString
            }
            $scope.socInfo = {
                soc: soc,
                part1: "" + (soc <= 53 ? soc : 53) + "%",
                part2: "" + Math.abs(soc - 53) + "%",
                durString: durString
            };
            $scope.BAT.SERVICE.OK = batService.status
        })
    };
    $scope.loading = true;
    $scope.buttonsLocked = false;
    $scope.batAvailable = true;
    $scope.CalibChargeDisabled = true;
    $scope.calibSuspendData = 0;
    $scope.pageDestroy = true;
    $scope.socInfo = {
        soc: 0,
        part1: "0%",
        part2: "100%",
        durString: "--h"
    };
    $scope.socInterval = null;
    $scope.$watch("ServiceModeEnabled", function(newVal, oldVal) {
        if (!newVal && !oldVal)
            return;
        if (newVal) {
            if ($scope.socInterval)
                $interval.cancel($scope.socInterval);
            $scope.socInterval = $interval(getSOC, 2e3)
        } else {
            $interval.cancel($scope.socInterval)
        }
    });
    $scope.aTimer = function() {
        dm.util.configRequest.get("/servicecgi-bin/suspend_battery_calibration/").then(function(response) {
            $scope.calibSuspendData = parseInt("" + response.suspension_time_seconds);
            if ($scope.calibSuspendData > 0 && !$scope.pageDestroy) {
                $scope.CalibChargeDisabled = true;
                dm.ngjs.$timeout(function() {
                    $scope.aTimer()
                }, 60 * 1e3)
            } else {
                $scope.CalibChargeDisabled = false
            }
        })
    }
    ;
    $scope.daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    $scope.init = function() {
        $scope.loading = true;
        cancelBatteryNowDataUpdate = batteryNowDataModel.on("dataChanged", onBatteryNowDataChanged);
        siteNowDataUpdate = siteNowDataModel.on("dataChanged", onSiteNowDataChanged);
        batteryNowDataModel.subscribe("settingsBatteryServiceCtrl", 3e4);
        siteNowDataModel.subscribe("settingsBatteryServiceCtrl", 3e3);
        dm.ngjs.$q.all([dm.util.configRequest.get("/status/powerflowcontroller/"), battModel.loadingPromise, $scope.daloState.loadingPromise]).then(function(responses) {
            $scope.pageDestroy = false;
            var powerflowcontroller = responses[0];
            if (!$scope.BAT)
                $scope.BAT = {};
            $scope.BAT.SERVICE = {
                OK: powerflowcontroller.batteries.service.status,
                DURATION: powerflowcontroller.batteries.service.remainingTime,
                ON: battModel.data.BAT_SERVICE_ON
            };
            $scope.ServiceModeEnabled = battModel.data.BAT_SERVICE_ON;
            $scope.aTimer();
            $scope.daloState.setBatteryType(battModel.data.BAT_TYPE);
            $scope.loading = false
        }, function(response) {
            $scope.loading = false;
            settingsHelperFunctions.checkStatusResponseAndRedirect(response, $state)
        })
    }
    ;
    $scope.getSuspensionTime = function() {
        return {
            time: Math.floor($scope.calibSuspendData / 60)
        }
    }
    ;
    $scope.onSkipCalibrationCharge = function() {
        var postData = {
            suspension_time_seconds: 3 * 60 * 60
        };
        dm.util.configRequest.save("/servicecgi-bin/suspend_battery_calibration/", postData, function() {
            $scope.CalibChargeDisabled = true;
            $scope.aTimer();
            dm.util.configRequest.showCfgSavedDialog()
        }, function(err) {
            dm.util.configRequest.showCfgErrorDialog(err)
        }, function() {
            dm.util.configRequest.showCfgFailureDialog()
        })
    }
    ;
    $scope.save = function() {
        if ($scope.buttonsLocked)
            return;
        var onSuccess = function() {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            dm.util.configRequest.showCfgSavedDialog()
        };
        var onError = function(error) {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            dm.util.configRequest.showCfgErrorDialog(error)
        };
        $scope.loading = true;
        $scope.buttonsLocked = true;
        battModel.data.BAT_SERVICE_ON = $scope.BAT.SERVICE.ON;
        $scope.doSave = function() {
            battModel.save().then(function(resp) {
                onSuccess()
            }, function(err) {
                if (err)
                    dm.util.configRequest.showCfgFailureDialog(err.error)
            }).finally(function() {
                $scope.loading = false
            })
        }
        ;
        $scope.doDiscard = function() {
            $scope.BAT.SERVICE.ON = !$scope.BAT.SERVICE.ON;
            $scope.ServiceModeEnabled = $scope.BAT.SERVICE.ON;
            $scope.loading = false;
            $scope.buttonsLocked = false
        }
        ;
        if (!$scope.ServiceModeEnabled && $scope.BAT.SERVICE.ON) {
            stdDialog.showDialog("BatServiceOnTemplate")
        } else if ($scope.ServiceModeEnabled && !$scope.BAT.SERVICE.ON) {
            stdDialog.showDialog("BatServiceOffTemplate")
        } else {
            $scope.doSave()
        }
        $scope.ServiceModeEnabled = $scope.BAT.SERVICE.ON
    }
    ;
    $scope.init();
    $scope.$on("$destroy", function() {
        $scope.pageDestroy = true;
        batteryNowDataModel.unsubscribe("settingsBatteryServiceCtrl");
        siteNowDataModel.unsubscribe("settingsBatteryServiceCtrl")
    })
}
]);
angular.module("settings").controller("settingsBatterySOCLimitCtrl", ["$scope", "$state", function($scope, $state) {
    $scope.loading = true;
    var daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    $scope.configBattery = dm.model.BatteryConfig.getInstance("BatteryConfig", $scope);
    $scope.init = function() {
        dm.ngjs.$q.all([$scope.configBattery.loadingPromise, daloState.loadingPromise]).then(function(responses) {}).finally(function() {
            $scope.loading = false
        })
    }
    ;
    $scope.getMin = function() {
        return {
            MIN: $scope.configBattery.metaConfig.MIN_SOC,
            MAX: $scope.configBattery.data.BAT_M0_SOC_MAX
        }
    }
    ;
    $scope.getMax = function() {
        return {
            MIN: Math.max($scope.configBattery.data.BAT_M0_SOC_MIN, $scope.configBattery.data.HYB_BACKUP_RESERVED),
            MAX: $scope.configBattery.metaConfig.MAX_SOC
        }
    }
    ;
    $scope.onSOCModeChange = function() {
        $scope.configBattery.changeSoCMode()
    }
    ;
    $scope.isDisabled = function() {
        return $scope.configBattery.isSoCModeAuto()
    }
    ;
    $scope.isMinSoCValid = $scope.configBattery.getDirtyValidator("data.BAT_M0_SOC_MIN");
    $scope.isMaxSoCValid = $scope.configBattery.getDirtyValidator("data.BAT_M0_SOC_MAX");
    $scope.init();
    $scope.save = function() {
        $scope.loading = true;
        $scope.configBattery.save().then(function() {
            dm.util.configRequest.showCfgSavedDialog()
        }, function(err) {
            if (err)
                dm.util.configRequest.showCfgErrorDialog(err.error)
        }).finally(function() {
            $scope.loading = false
        })
    }
}
]);
angular.module("settings").controller("settingsEnergyManagementCtrl", ["$scope", "$http", "$q", "standardDialog", "$rootScope", "$state", "settingsHelperFunctions", function($scope, $http, $q, standardDialog, $rootScope, $state, settingsHelperFunctions) {
    var stdDialog = new dm.standardDialog.StandardDialog($scope);
    var siteNowDataModel = dm.model.SiteNowData.getInstance();
    var onSiteData = function() {
        $scope.backupActive = siteNowDataModel.data.BackupMode
    };
    $scope.loading = true;
    $scope.buttonsLocked = false;
    $scope.daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    $scope.touModel = dm.model.TimeOfUseModel.getInstance("TimeOfUse", $scope);
    $scope.model = dm.model.OverviewSettings.getInstance("settingsOverviewCtrl", $scope);
    $scope.model.setAuthenticationLevel("admin");
    $scope.batteryModel = null;
    $scope.calibSuspendData = 1;
    $scope.pageDestroy = true;
    $scope.chargeFromGrid = false;
    var initialRuleName = "rules";
    $scope.dialog = {
        save: {
            rulesFileName: initialRuleName,
            srcUrl: ""
        },
        load: {
            src: "",
            info: false,
            valid: false,
            data: null
        }
    };
    $scope.init = function() {
        var timer = function() {
            dm.util.configRequest.get("/admincgi-bin/suspend_battery_calibration/").then(function(response) {
                $scope.calibSuspendData = parseInt("" + response.suspension_time_seconds);
                if ($scope.calibSuspendData > 0 && !$scope.pageDestroy) {
                    dm.ngjs.$timeout(function() {
                        timer()
                    }, 60 * 1e3)
                }
            })
        };
        $scope.backupActive = true;
        $scope.loading = true;
        $scope.model.reset();
        $scope.touModel.reset();
        siteNowDataModel.on("dataChanged", onSiteData);
        siteNowDataModel.subscribe("settingsEnergyManagementCtrl", 3e3);
        $q.all([$scope.model.loadingPromise, $scope.touModel.loadingPromise, $scope.daloState.loadingPromise]).then(function(responses) {
            $scope.batteryModel = $scope.model.battModel;
            $scope.chargeFromGrid = $scope.batteryModel.data.HYB_EVU_CHARGEFROMGRID;
            $scope.daloState.setBatteryType($scope.batteryModel.data.BAT_TYPE);
            $scope.$watch("model.HYB.BM.CHARGEFROMAC", function(newV, oldV) {
                if (newV == undefined || oldV == undefined || newV == oldV || $scope.loading)
                    return;
                if ($scope.touModel.TimeOfUseNotAllowed($scope.model.HYB.EVU.CHARGEFROMGRID, newV))
                    stdDialog.showDialog("TOUNotAllowedActive")
            });
            timer();
            $scope.loading = false;
            $scope.pageDestroy = false
        }, function(response) {
            $scope.loading = false;
            settingsHelperFunctions.checkStatusResponseAndRedirect(response, $state)
        })
    }
    ;
    $scope.getSuspensionTime = function() {
        return {
            time: Math.floor($scope.calibSuspendData / 60)
        }
    }
    ;
    $scope.showCalibrationDialog = function() {
        stdDialog.showDialog("CalibrationDialogTemplate")
    }
    ;
    $scope.resetRuleName = function() {
        $scope.dialog.save.rulesFileName = initialRuleName
    }
    ;
    $scope.onCalibrationDialogYes = function() {
        $scope.batteryModel.data.BAT_CALIBRATION = true;
        $scope.batteryModel.save().then(function() {}).finally(function() {})
    }
    ;
    $scope.getTOUHintVisible = function() {
        if ($scope.loading)
            return false;
        return this.touModel.TimeOfUseNotAllowed($scope.model.HYB.EVU.CHARGEFROMGRID, $scope.model.HYB.BM.CHARGEFROMAC)
    }
    ;
    $scope.getTimeValidationHint = function(ruleIndex) {
        if (!ruleIndex == undefined)
            return "HINT_VALID_TIME";
        else if (!$scope.touModel.BatterieSchedule.TimeValidationMsg[ruleIndex])
            return "HINT_VALID_TIME";
        else
            return $scope.touModel.BatterieSchedule.TimeValidationMsg[ruleIndex]
    }
    ;
    $scope.isPACMinValid = function() {
        try {
            if (!$scope.model.HYB || !$scope.model.HYB.BM || !$scope.model.HYB.BM.PACMIN)
                return false;
            var val = dm.util.helpers.parseFloat("" + $scope.model.HYB.BM.PACMIN);
            if (isNaN(val))
                return false;
            if ($scope.model.HYB.BM.CHARGEFROMAC) {
                return !(val <= 0 || val > 2e6)
            } else {
                return !(val < 0 || val > 2e6)
            }
        } catch (e) {
            return false
        }
    }
    ;
    $scope.isTimeValid = function(time, ruleIndex) {
        return $scope.touModel.isTimeValid(time, ruleIndex)
    }
    ;
    $scope.checkAddRuleModified = function() {
        if ($scope.touModel.checkAddRuleModified()) {
            stdDialog.showDialog("RuleNotAdded");
            return true
        }
        return false
    }
    ;
    $scope.save = function(callback) {
        if ($scope.buttonsLocked || !$scope.isPACMinValid())
            return;
        $scope.touModel.addNewRuleIfNoRuleAdded();
        if ($scope.checkAddRuleModified())
            return;
        $scope.saveFinally(callback)
    }
    ;
    $scope.saveFinally = function(callback) {
        try {
            $scope.touModel.resetErrors();
            $scope.touModel.scheduleRulesValid()
        } catch (e) {
            if (e == "overlap_error")
                stdDialog.showDialog("RuleOverlapError");
            else if (e == "to_many_rules")
                stdDialog.showDialog("ToManyRulesError");
            return
        }
        $scope.batteryModel.data.HYB_BM_PACMIN = -$scope.model.HYB.BM.PACMIN;
        $scope.batteryModel.data.HYB_BM_CHARGEFROMAC = $scope.model.HYB.BM.CHARGEFROMAC;
        var timeofuse = $scope.touModel.getDataForSaving();
        var onSuccess = function() {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            if (callback)
                callback();
            else
                dm.util.configRequest.showCfgSavedDialog()
        };
        var onError = function(error) {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            dm.util.configRequest.showCfgErrorDialog(error)
        };
        $scope.loading = true;
        $scope.buttonsLocked = true;
        $q.all([$scope.batteryModel.save(), dm.util.configRequest.saveDef("/config/timeofuse/", timeofuse)]).then(function(responses) {
            onSuccess()
        }, function(err) {
            if (err)
                onError(err.error)
        }).finally(function() {
            $scope.loading = false;
            $scope.buttonsLocked = false
        })
    }
    ;
    $scope.init();
    $scope.onLoadFileClick = function(aEvent) {
        $scope.dialog.load.src = "";
        $scope.dialog.load.info = false;
        $scope.dialog.load.valid = false;
        $scope.dialog.load.data = null;
        stdDialog.showDialog("LoadTimeOfUseRules")
    }
    ;
    $scope.onSaveFileClick = function() {
        $scope.dialog.save.srcUrl = "";
        stdDialog.showDialog("SaveTimeOfUseRules")
    }
    ;
    $scope.exportToFile = function() {
        var timeofuse = {
            timeofuse: angular.copy($scope.touModel.getTOURules())
        };
        if ($scope.dialog.save.rulesFileName.length == 0)
            $scope.dialog.save.rulesFileName = "rules";
        var fileName = $scope.dialog.save.rulesFileName + ".tou";
        settingsHelperFunctions.Json2File(fileName, timeofuse);
        $scope.resetRuleName()
    }
    ;
    $scope.isPowerValid = function(power) {
        return $scope.touModel.isPowerValid(power)
    }
    ;
    $scope.getBatteryScheduleLink = function() {
        var currentLang = $scope.daloState.language;
        switch (currentLang) {
        case "de":
            return "https://www.fronius.com/~/downloads/Solar%20Energy/Whitepaper/SE_WP_How_to_set_up_Battery_control_schedule_DE.pdf";
        default:
            return "https://www.fronius.com/~/downloads/Solar%20Energy/Whitepaper/SE_WP_How_to_set_up_Battery_control_schedule_EN.pdf"
        }
    }
    ;
    $scope.loadFromFile = function() {
        this.touModel.setTOURules(angular.copy($scope.dialog.load.data));
        $scope.dialog.load.data = null
    }
    ;
    $scope.getImportedConfigLength = function() {
        if (!$scope.dialog.load.data)
            return null;
        return {
            count: $scope.dialog.load.data.length
        }
    }
    ;
    $scope.$watch("dialog.load.src", function(newVal) {
        if (!newVal)
            return;
        var reader = new FileReader;
        reader.onload = function() {
            return function(e) {
                function checkDataStructure(input) {
                    if (Object.prototype.toString.call(input["timeofuse"]) !== "[object Array]")
                        throw "input is not an array";
                    for (var _i = 0, _a = input.timeofuse; _i < _a.length; _i++) {
                        var item = _a[_i];
                        if (!item.hasOwnProperty("Active") || !item.hasOwnProperty("Power") || !item.hasOwnProperty("ScheduleType") || !item.hasOwnProperty("TimeTable") || !item["TimeTable"].hasOwnProperty("Start") || !item["TimeTable"].hasOwnProperty("End") || !item.hasOwnProperty("Weekdays") || !item["Weekdays"].hasOwnProperty("Mon") || !item["Weekdays"].hasOwnProperty("Tue") || !item["Weekdays"].hasOwnProperty("Wed") || !item["Weekdays"].hasOwnProperty("Thu") || !item["Weekdays"].hasOwnProperty("Fri") || !item["Weekdays"].hasOwnProperty("Sat") || !item["Weekdays"].hasOwnProperty("Sun"))
                            throw "not all properties in rule";
                        if (item.Active !== true && item.Active !== false)
                            throw "invalid active value";
                        if (!$scope.isPowerValid(item.Power))
                            throw "invalid power value";
                        if (item.ScheduleType != "CHARGE_MAX" && item.ScheduleType != "CHARGE_MIN" && item.ScheduleType != "DISCHARGE_MAX" && item.ScheduleType != "DISCHARGE_MIN")
                            throw "invalid schedule type";
                        if (!$scope.isTimeValid(item.TimeTable))
                            throw "the time is not valid";
                        for (var day in item.Weekdays) {
                            if (item.Weekdays[day] === true || item.Weekdays[day] === false)
                                continue;
                            throw "invalid data in Weekdays"
                        }
                    }
                }
                try {
                    var newData = JSON.parse(e.target.result);
                    checkDataStructure(newData);
                    $scope.dialog.load.data = newData.timeofuse;
                    $scope.dialog.load.valid = true
                } catch (e) {
                    $scope.dialog.load.valid = false;
                    $scope.dialog.load.data = null
                }
                $scope.dialog.load.info = true;
                $scope.$digest()
            }
        }();
        reader.readAsText(newVal)
    });
    $scope.$on("$destroy", function() {
        $scope.pageDestroy = true;
        siteNowDataModel.unsubscribe("settingsEnergyManagementCtrl")
    });
    $rootScope.$on("$translateChangeSuccess", function() {
        $scope.loading = true;
        dm.ngjs.$timeout(function() {
            $scope.loading = false
        }, 1)
    })
}
]);
var dm;
(function(dm) {
    var controllers;
    (function(controllers) {
        var settings;
        (function(settings) {
            var common;
            (function(common) {
                var Notification = dm.model.notifications.Notification;
                var NotificationLevel = dm.model.notifications.Level;
                var NotificationText = dm.model.notifications.NotificationText;
                var NotificationLinebreak = dm.model.notifications.NotificationLinebreak;
                var TIME_SECOND_INTERVAL = 1e3;
                angular.module("settings").controller("settingsCommonCtrl", ["$scope", "$state", "$translate", "$rootScope", "settingsHelperFunctions", function($scope, $state, $translate, $rootScope, settingsHelperFunctions) {
                    var dict = {
                        HINT_DATE: ""
                    };
                    var daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
                    var dateRefreshIntervalId = Number.NaN;
                    $scope.model = dm.model.CommonSettings.getInstance("settingsCommonCtrl", $scope);
                    $scope.model.setWizard($scope.WIZARDACTIVE);
                    $rootScope.$on("$translateChangeSuccess", function() {
                        $scope.loading = true;
                        dm.ngjs.$timeout(function() {
                            $scope.loading = false
                        }, 100)
                    });
                    $scope.$on("$destroy", function() {
                        clearDateRefreshInterval()
                    });
                    if ($scope.WIZARDACTIVE) {
                        $scope.wizardButtons.showForward = true;
                        $scope.wizardButtons.showBackward = true;
                        $scope.wizardButtons.showAbort = false;
                        $scope.wizardButtons.showSkipNetworkSetup = false;
                        $scope.wizardButtons.forwardText = "WIZARD_FORWARD";
                        $scope.ShowWizardLoading()
                    }
                    $scope.buttonsLocked = false;
                    $scope.amDesignator = moment.localeData().meridiem(2, 2, false);
                    $scope.pmDesignator = moment.localeData().meridiem(20, 20, false);
                    $scope.loading = true;
                    $scope.init = function() {
                        $scope.loading = true;
                        dm.ngjs.$q.all([$translate("HINT_DATE"), $scope.model.loadingPromise, daloState.loadingPromise]).then(function(results) {
                            dict = results[0];
                            $scope.loading = false
                        }, function(response) {
                            return settingsHelperFunctions.checkStatusResponseAndRedirect(response, $state)
                        }).finally(function() {
                            $scope.model.reset();
                            if ($scope.WIZARDACTIVE) {
                                $scope.HideWizardLoading()
                            }
                            registerDateRefreshInterval()
                        })
                    }
                    ;
                    $scope.reset = angular.bind($scope.model, $scope.model.reset);
                    $scope.onChangeTariff = function(tariff) {
                        switch (tariff) {
                        case "diliveryFactor":
                            $scope.model.profit.deliveryFactor = dm.util.helpers.roundN($scope.model.profit.deliveryFactor, 3);
                            break;
                        case "cashFactor":
                            $scope.model.profit.cashFactor = dm.util.helpers.roundN($scope.model.profit.cashFactor, 3);
                            break;
                        case "CO2Factor":
                            $scope.model.profit.CO2Factor = dm.util.helpers.roundN($scope.model.profit.CO2Factor, 3);
                            break;
                        default:
                            break
                        }
                    }
                    ;
                    $scope.isCashFactorValid = $scope.model.getDirtyValidator("profit.cashFactor");
                    $scope.isDeliveryFactorValid = $scope.model.getDirtyValidator("profit.deliveryFactor");
                    $scope.isSystemNameValid = $scope.model.getDirtyValidator("system.name");
                    $scope.save = function() {
                        if ($scope.loading)
                            return;
                        $scope.loading = true;
                        $scope.model.save().then(function() {
                            dm.util.configRequest.showCfgSavedDialog()
                        }, function(err) {
                            $scope.$broadcast("showValidators");
                            if (err && err.error)
                                dm.util.configRequest.showCfgErrorDialog(err.error);
                            else if (err && err.failure)
                                dm.util.configRequest.showCfgFailureDialog(err.failure);
                            else if (err)
                                dm.util.configRequest.showCfgErrorDialog(err)
                        }).finally(function() {
                            $scope.loading = false;
                            daloState.load().then(function() {
                                var clientDate = new Date;
                                var clientTime = clientDate.getTime();
                                var _deviation = (daloState.systemDate.getTime() - clientTime) / 6e4;
                                if (Math.abs(_deviation) > 70) {
                                    console.debug("Date deviation too high: ", _deviation.toFixed(2), " minutes.");
                                    dm.model.notifications.add(new Notification("date_not_set",NotificationLevel.alert,[new NotificationText("DATE_NOT_SET_01"), new NotificationLinebreak, new NotificationText("DATE_NOT_SET_02")],"settings.common"))
                                } else {
                                    dm.model.notifications.remove("date_not_set")
                                }
                            })
                        })
                    }
                    ;
                    function registerDateRefreshInterval() {
                        clearDateRefreshInterval();
                        dateRefreshIntervalId = setInterval(function() {
                            $scope.$apply(function() {
                                return $scope.model.incrementDateByOneSecond()
                            })
                        }, TIME_SECOND_INTERVAL)
                    }
                    function clearDateRefreshInterval() {
                        if (isNaN(dateRefreshIntervalId)) {
                            return
                        }
                        clearInterval(dateRefreshIntervalId);
                        dateRefreshIntervalId = Number.NaN
                    }
                    $scope.init()
                }
                ])
            }
            )(common = settings.common || (settings.common = {}))
        }
        )(settings = controllers.settings || (controllers.settings = {}))
    }
    )(controllers = dm.controllers || (dm.controllers = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var controllers;
    (function(controllers) {
        var settings;
        (function(settings) {
            var common;
            (function(common) {
                angular.module("settings").service("settingsHelperFunctions", ["$state", function($state) {
                    this.checkStatusResponse = function(aCfgResponse) {
                        var statusCode = 0;
                        try {
                            statusCode = aCfgResponse.Head.Status.Code;
                            var reason = aCfgResponse.Head.Status.Reason;
                            var statusMessage = aCfgResponse.Head.Status.UserMessage;
                            var errorDetail = aCfgResponse.Head.Status.ErrorDetail;
                            var statusNodes = aCfgResponse.Head.Status.ErrorDetail.Nodes;
                            var data = aCfgResponse.Body.Data;
                            if (statusCode == undefined)
                                return false;
                            if (reason == undefined)
                                return false;
                            if (statusMessage == undefined)
                                return false;
                            if (errorDetail == undefined)
                                return false;
                            if (statusNodes == undefined)
                                return false;
                            if (data == undefined)
                                return false;
                            return true
                        } catch (e) {
                            aCfgResponse.Head = {
                                Status: {
                                    Code: -9999,
                                    Reason: "no legal cfg response received",
                                    UserMessage: "{{ILLEGAL_CONFIG_RESPONSE}}",
                                    ErrorDetail: {
                                        Nodes: []
                                    }
                                }
                            };
                            return false
                        }
                        return true
                    }
                    ;
                    this.Json2File = function(filename, object) {
                        var json = JSON.stringify(object);
                        var blob = new Blob([json],{
                            type: "application/json"
                        });
                        if (window.navigator && window.navigator.msSaveOrOpenBlob) {
                            window.navigator.msSaveOrOpenBlob(blob, filename)
                        } else {
                            var a_1 = document.createElement("a");
                            document.body.appendChild(a_1);
                            a_1.style.display = "none";
                            var url_1 = window.URL.createObjectURL(blob);
                            a_1.href = url_1;
                            a_1["download"] = filename;
                            setTimeout(function() {
                                a_1.click();
                                window.URL.revokeObjectURL(url_1)
                            }, 0)
                        }
                    }
                    ;
                    this.checkStatusResponseAndRedirect = function(response, currentState, failure) {
                        try {
                            switch (response.status) {
                            case 0:
                                break;
                            case 401:
                                var previousStateName = undefined;
                                if (currentState && currentState.current && currentState.current.name) {
                                    previousStateName = currentState.current.name
                                }
                                $state.go("login", {
                                    previousState: previousStateName
                                });
                                break;
                            case 200:
                                dm.util.configRequest.showCfgErrorDialog(response.data);
                                break;
                            default:
                                dm.util.configRequest.showCfgFailureDialog(failure);
                                break
                            }
                        } catch (e) {
                            dm.util.configRequest.showCfgFailureDialog(failure)
                        }
                    }
                    ;
                    this.parseInt = function(aIntString) {
                        var IntString = aIntString;
                        IntString = IntString.replace(/^0+/, "");
                        if (aIntString != IntString && IntString == "") {
                            IntString = "0"
                        }
                        var x = parseInt(IntString, 10);
                        if (x.toString() == IntString) {
                            return x
                        } else {
                            return NaN
                        }
                    }
                    ;
                    this.parseFloat = function(aFloatString) {
                        var FloatString = aFloatString;
                        if (FloatString.indexOf(".") != -1) {
                            FloatString = FloatString.replace(/0*$/, "");
                            FloatString = FloatString.replace(/\.$/, "")
                        }
                        FloatString = FloatString.replace(/^0+/, "");
                        if (FloatString.indexOf(".") == 0) {
                            FloatString = "0" + FloatString
                        }
                        if (aFloatString != FloatString && FloatString == "") {
                            FloatString = "0"
                        }
                        var x = parseFloat(FloatString);
                        if (x.toString() == FloatString) {
                            return x
                        } else {
                            return NaN
                        }
                    }
                }
                ])
            }
            )(common = settings.common || (settings.common = {}))
        }
        )(settings = controllers.settings || (controllers.settings = {}))
    }
    )(controllers = dm.controllers || (dm.controllers = {}))
}
)(dm || (dm = {}));
angular.module("settings").controller("settingsLoadmanagementCtrl", ["$scope", "$state", "$translate", "$http", "$q", "settingsHelperFunctions", "$log", function($scope, $state, $translate, $http, $q, settingsHelperFunctions, $log) {
    var _private = {
        dialog: undefined
    };
    var daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    var dict = {
        CONSUMPTION: "",
        FEED_IN: "",
        ON: "",
        OFF: ""
    };
    var siteNowDataModel = dm.model.SiteNowData.getInstance();
    _private.StateFetcher = dm.util.DataFetcher.newInstance(function() {
        return $http.get("/status/emrs/")
    }, function(response) {
        try {
            var aData = response.data.Body.Data.emrs.gpios;
            if (aData.length == 0)
                throw "";
            for (var _i = 0, _a = Object.keys(aData); _i < _a.length; _i++) {
                var key = _a[_i];
                $scope.uiCtrl.ioState[key].html = aData[key].state ? "ON" : "OFF";
                $scope.uiCtrl.ioState[key].color = "#00AAFF";
                $scope.uiCtrl.ioState[key].title = aData[key].reason
            }
        } catch (e) {
            for (var _b = 0, _c = Object.keys($scope.uiCtrl.ioState); _b < _c.length; _b++) {
                var key = _c[_b];
                $scope.uiCtrl.ioState[key].html = "---";
                $scope.uiCtrl.ioState[key].color = "#4d4d4d";
                $scope.uiCtrl.ioState[key].title = ""
            }
        }
    });
    $scope.loading = true;
    $scope.buttonsLocked = false;
    $scope.EMRules = [];
    $scope.emPrios = null;
    var prioWatcher = null;
    $scope.uiCtrl = {
        meterAvailable: false,
        ioState: {
            pin1: {
                color: "#4d4d4d",
                html: "---",
                title: ""
            },
            pin2: {
                color: "#4d4d4d",
                html: "---",
                title: ""
            },
            pin3: {
                color: "#4d4d4d",
                html: "---",
                title: ""
            },
            pin4: {
                color: "#4d4d4d",
                html: "---",
                title: ""
            }
        }
    };
    $scope.tabs = {
        active: 0
    };
    $scope.isTwelveHoureFormat = dm.util.date.isTwelveHoureFormat();
    $scope.CultureInfo = Date.CultureInfo;
    $scope.dirOptions = [];
    $scope.daloState = daloState;
    $scope.amDesignator = moment.localeData().meridiem(2, 2, false);
    $scope.pmDesignator = moment.localeData().meridiem(20, 20, false);
    var onDataSiteNowChanged = function() {
        try {
            var operateMode = siteNowDataModel.data.Mode;
            switch (operateMode) {
            case "meter":
            case "vague-meter":
            case "bidirectional":
                $scope.uiCtrl.meterAvailable = true;
                break;
            case "produce-only":
            case "isolate":
                break;
            default:
                $log.error("illegal operate mode");
                break
            }
        } catch (e) {
            $log.error("illegal operate mode")
        }
    };
    $scope.updatePosition = function(oldPos, newPos) {
        var tmp = $scope.loadManagementFunctions[oldPos];
        $scope.loadManagementFunctions[oldPos] = $scope.loadManagementFunctions[newPos];
        $scope.loadManagementFunctions[newPos] = tmp
    }
    ;
    $scope.getTypeID = function(id) {
        switch (id) {
        case "batteries":
            return "BATTERIE";
        case "ohmpilots":
            return "OHMPILOT_HEADLINE";
        case "ios":
            return "LOAD_MANAGEMENT_IOS"
        }
    }
    ;
    $scope.loadManagementFunctions = ["", "", ""];
    $scope.init = function() {
        $scope.loading = true;
        $q.all([dm.util.configRequest.get("/config/emrs/"), $translate(["CONSUMPTION", "FEED_IN", "ON", "OFF"]), daloState.loadingPromise]).then(function(responses) {
            var emrs = responses[0].emrs;
            dict = responses[1];
            for (var func in emrs.priorities) {
                if (func == "supply_ohmpilots_from_battery")
                    continue;
                $scope.loadManagementFunctions[emrs.priorities[func] - 1] = func
            }
            $scope.loadManagementFunctions.reverse();
            if (!daloState.isHybrid()) {
                var elem2del = $scope.loadManagementFunctions.indexOf("batteries");
                $scope.loadManagementFunctions.splice(elem2del, 1)
            }
            $scope.isTwelveHoureFormat = dm.util.date.isTwelveHoureFormat();
            $scope.emPrios = emrs.priorities;
            $scope.EMRules = [];
            $scope.EMRules.push(angular.copy(emrs.rules.pin1));
            $scope.EMRules.push(angular.copy(emrs.rules.pin2));
            $scope.EMRules.push(angular.copy(emrs.rules.pin3));
            $scope.EMRules.push(angular.copy(emrs.rules.pin4));
            $scope.dirOptions = [-1, 1];
            for (var _i = 0, _a = $scope.EMRules; _i < _a.length; _i++) {
                var EMRule = _a[_i];
                EMRule.thresholdOnDirection = EMRule.thresholdOn <= 0 ? -1 : 1;
                EMRule.thresholdOn = Math.abs(EMRule.thresholdOn);
                EMRule.thresholdOffDirection = EMRule.thresholdOff <= 0 ? -1 : 1;
                EMRule.thresholdOff = Math.abs(EMRule.thresholdOff);
                EMRule.minTimeOnEnabled = EMRule.minTimeOn != 0;
                EMRule.maxTimeOnEnabled = EMRule.maxTimeOn != 0;
                var splits = EMRule.ScheduleOnTime.split(":");
                EMRule.ScheduleOnTime = {
                    hh: splits[0],
                    mm: splits[1],
                    tt: "am"
                };
                if ($scope.isTwelveHoureFormat) {
                    EMRule.ScheduleOnTime.tt = EMRule.ScheduleOnTime.hh > 11 ? "pm" : "am";
                    EMRule.ScheduleOnTime.hh = ((parseInt(EMRule.ScheduleOnTime.hh) + 11) % 12 + 1).toString();
                    EMRule.ScheduleOnTime.hh = EMRule.ScheduleOnTime.hh < 10 ? "0" + EMRule.ScheduleOnTime.hh : "" + EMRule.ScheduleOnTime.hh
                }
            }
            _private.StateFetcher.subscribe("settingsHybEmCtrl", 1e4);
            $scope.loading = false
        }, function(response) {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            settingsHelperFunctions.checkStatusResponseAndRedirect(response, $state)
        });
        siteNowDataModel.on("dataChanged", onDataSiteNowChanged);
        siteNowDataModel.subscribe("settingsLoadmanagementCtrl", 5e3)
    }
    ;
    $scope.dirToStr = function(dir) {
        return dir > 0 ? "CONSUMPTION" : "FEED_IN"
    }
    ;
    $scope.handleUpClick = function(ruleIdx, hh_mm) {
        if ($scope.EMRules[ruleIdx].mode == "off")
            return;
        var value = $scope.EMRules[ruleIdx].ScheduleOnTime[hh_mm];
        if (isNaN(value))
            value = 0;
        value++;
        if ($scope.isTwelveHoureFormat) {
            if (hh_mm == "hh" && value > 12)
                value = 1
        } else {
            if (hh_mm == "hh" && value > 23)
                value = 0
        }
        if (hh_mm == "mm" && value > 59)
            value = 0;
        $scope.EMRules[ruleIdx].ScheduleOnTime[hh_mm] = value > 9 ? value : "0" + value
    }
    ;
    $scope.handleDownClick = function(ruleIdx, hh_mm) {
        if ($scope.EMRules[ruleIdx].mode == "off")
            return;
        var value = $scope.EMRules[ruleIdx].ScheduleOnTime[hh_mm];
        if (isNaN(value))
            value = 0;
        value--;
        if ($scope.isTwelveHoureFormat) {
            if (hh_mm == "hh" && value < 1)
                value = 12
        } else {
            if (hh_mm == "hh" && value < 0)
                value = 23
        }
        if (hh_mm == "mm" && value < 0)
            value = 59;
        $scope.EMRules[ruleIdx].ScheduleOnTime[hh_mm] = value > 9 ? value : "0" + value
    }
    ;
    $scope.isThresholdOnValid = function(newval, ruleIdx) {
        try {
            if ($scope.EMRules[ruleIdx].mode == "off")
                return true;
            if (!dm.util.helpers.isInteger($scope.EMRules[ruleIdx].thresholdOn))
                return false;
            return $scope.EMRules[ruleIdx].thresholdOn >= 0 && $scope.EMRules[ruleIdx].thresholdOn <= 1e9
        } catch (e) {
            return false
        }
    }
    ;
    $scope.isThresholdOffValid = function(newval, ruleIdx) {
        try {
            if ($scope.EMRules[ruleIdx].mode == "off")
                return true;
            if (!dm.util.helpers.isInteger($scope.EMRules[ruleIdx].thresholdOff))
                return false;
            return $scope.EMRules[ruleIdx].thresholdOff >= 0 && $scope.EMRules[ruleIdx].thresholdOff <= 1e9
        } catch (e) {
            return false
        }
    }
    ;
    $scope.isMinTimeValid = function(newval, ruleIdx) {
        if ($scope.EMRules[ruleIdx].mode == "off")
            return true;
        if (!dm.util.helpers.isInteger($scope.EMRules[ruleIdx].minTimeOn))
            return false;
        if ($scope.EMRules[ruleIdx].minTimeOnEnabled) {
            if ($scope.EMRules[ruleIdx].minTimeOn <= 0)
                return false;
            if ($scope.EMRules[ruleIdx].minTimeOn > $scope.EMRules[ruleIdx].maxTimeOn && $scope.EMRules[ruleIdx].maxTimeOn != 0)
                return false;
            if ($scope.EMRules[ruleIdx].minTimeOn > $scope.EMRules[ruleIdx].requiredTimeOn && $scope.EMRules[ruleIdx].ScheduleOnDone)
                return false;
            if ($scope.EMRules[ruleIdx].minTimeOn > 1440)
                return false
        }
        return true
    }
    ;
    $scope.isMaxTimeValid = function(newval, ruleIdx) {
        if ($scope.EMRules[ruleIdx].mode == "off")
            return true;
        if (!dm.util.helpers.isInteger($scope.EMRules[ruleIdx].maxTimeOn))
            return false;
        if ($scope.EMRules[ruleIdx].maxTimeOnEnabled) {
            if ($scope.EMRules[ruleIdx].maxTimeOn <= 0)
                return false;
            if ($scope.EMRules[ruleIdx].maxTimeOn < $scope.EMRules[ruleIdx].minTimeOn && $scope.EMRules[ruleIdx].minTimeOn != 0)
                return false;
            if ($scope.EMRules[ruleIdx].maxTimeOn < $scope.EMRules[ruleIdx].requiredTimeOn && $scope.EMRules[ruleIdx].ScheduleOnDone)
                return false;
            if ($scope.EMRules[ruleIdx].maxTimeOn > 1440)
                return false
        }
        return true
    }
    ;
    $scope.isScheduleTimeHoureValid = function(newval, ruleIdx) {
        try {
            var value = parseInt($scope.EMRules[ruleIdx].ScheduleOnTime.hh);
            return dm.util.helpers.isInteger($scope.EMRules[ruleIdx].ScheduleOnTime.hh) && typeof value == "number" && value >= ($scope.isTwelveHoureFormat ? 1 : 0) && value <= ($scope.isTwelveHoureFormat ? 12 : 23)
        } catch (e) {
            return false
        }
    }
    ;
    $scope.updateActiveTab = function(idx) {
        $scope.tabs.active = idx
    }
    ;
    $scope.isScheduleTimeMinuteValid = function(newval, ruleIdx) {
        try {
            var value = parseInt($scope.EMRules[ruleIdx].ScheduleOnTime.mm);
            return dm.util.helpers.isInteger($scope.EMRules[ruleIdx].ScheduleOnTime.mm) && typeof value == "number" && value >= 0 && value <= 59
        } catch (e) {
            return false
        }
    }
    ;
    $scope.isScheduleTimeValid = function(EMRule) {
        try {
            var value = parseInt(EMRule.ScheduleOnTime.mm);
            if (!(dm.util.helpers.isInteger(EMRule.ScheduleOnTime.mm) && typeof value == "number" && value >= 0 && value <= 59))
                return true;
            if (!$scope.isTwelveHoureFormat) {
                if (EMRule.requiredTimeOn == 1440 && EMRule.ScheduleOnTime.hh == "00" && EMRule.ScheduleOnTime.mm == "00")
                    return true;
                if (EMRule.requiredTimeOn > parseInt(EMRule.ScheduleOnTime.hh) * 60 + parseInt(EMRule.ScheduleOnTime.mm))
                    return false
            } else {
                if ($scope.EMRule.ScheduleOnTime.tt == "am") {
                    if (EMRule.requiredTimeOn > EMRule.ScheduleOnTime.hh % 12 * 60 + parseInt(EMRule.ScheduleOnTime.mm))
                        return false
                } else {
                    if (EMRule.requiredTimeOn == 1440 && EMRule.ScheduleOnTime.hh == "12" && EMRule.ScheduleOnTime.mm == "00")
                        return true;
                    if (EMRule.requiredTimeOn > (EMRule.ScheduleOnTime.hh % 12 + 12) * 60 + parseInt(EMRule.ScheduleOnTime.mm))
                        return false
                }
            }
            return true
        } catch (e) {
            return true
        }
    }
    ;
    $scope.isRequiredTimeValid = function(EMRule) {
        if (EMRule.mode == "off")
            return true;
        if (!EMRule.ScheduleOnDone)
            return true;
        if (!dm.util.helpers.isInteger(EMRule.requiredTimeOn))
            return false;
        if (EMRule.requiredTimeOn > EMRule.maxTimeOn && EMRule.maxTimeOnEnabled)
            return false;
        if (EMRule.requiredTimeOn < EMRule.minTimeOn && EMRule.minTimeOnEnabled)
            return false;
        if (EMRule.requiredTimeOn > 1440 || EMRule.requiredTimeOn < 0)
            return false;
        if (!$scope.isTwelveHoureFormat) {
            if (EMRule.requiredTimeOn == 1440 && EMRule.ScheduleOnTime.hh == "00" && EMRule.ScheduleOnTime.mm == "00")
                return true;
            if (EMRule.requiredTimeOn > parseInt(EMRule.ScheduleOnTime.hh) * 60 + parseInt(EMRule.ScheduleOnTime.mm))
                return false
        } else {
            if (EMRule.ScheduleOnTime.tt == "am") {
                if (EMRule.requiredTimeOn > EMRule.ScheduleOnTime.hh % 12 * 60 + parseInt(EMRule.ScheduleOnTime.mm))
                    return false
            } else {
                if (EMRule.requiredTimeOn == 1440 && EMRule.ScheduleOnTime.hh == "12" && EMRule.ScheduleOnTime.mm == "00")
                    return true;
                if (EMRule.requiredTimeOn > (EMRule.ScheduleOnTime.hh % 12 + 12) * 60 + parseInt(EMRule.ScheduleOnTime.mm))
                    return false
            }
        }
        return true
    }
    ;
    $scope.save = function(callback) {
        $scope.buttonsLocked = true;
        $scope.loading = true;
        var onSuccess = function() {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            if (callback)
                callback();
            else
                dm.util.configRequest.showCfgSavedDialog()
        };
        var onError = function(error) {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            dm.util.configRequest.showCfgErrorDialog(error)
        };
        var onFailure = function(failure) {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            dm.util.configRequest.showCfgFailureDialog(failure)
        };
        var rules = angular.copy($scope.EMRules);
        for (var _i = 0, rules_1 = rules; _i < rules_1.length; _i++) {
            var rule = rules_1[_i];
            rule.ScheduleOnTime.hh = isNaN(rule.ScheduleOnTime.hh) ? 0 : rule.ScheduleOnTime.hh;
            rule.ScheduleOnTime.mm = isNaN(rule.ScheduleOnTime.mm) ? 0 : rule.ScheduleOnTime.mm;
            try {
                rule.ScheduleOnTime.hh = parseInt(rule.ScheduleOnTime.hh);
                rule.ScheduleOnTime.mm = parseInt(rule.ScheduleOnTime.mm)
            } catch (e) {}
            if (rule.mode == "ppv" || rule.mode == "off") {
                rule.thresholdOnDirection = 1;
                rule.thresholdOffDirection = 1
            }
            if (rule.mode == "off")
                rule.ScheduleOnDone = false;
            rule.thresholdOn = rule.thresholdOn * rule.thresholdOnDirection;
            delete rule.thresholdOnDirection;
            rule.thresholdOff = rule.thresholdOff * rule.thresholdOffDirection;
            delete rule.thresholdOffDirection;
            if (!rule.minTimeOnEnabled)
                rule.minTimeOn = 0;
            if (!rule.maxTimeOnEnabled)
                rule.maxTimeOn = 0;
            delete rule.minTimeOnEnabled;
            delete rule.maxTimeOnEnabled;
            if (!rule.ScheduleOnDone) {
                rule.ScheduleOnTime = "00:00";
                rule.requiredTimeOn = 0
            } else {
                if ($scope.isTwelveHoureFormat) {
                    var hh = rule.ScheduleOnTime.hh % 12;
                    if (rule.ScheduleOnTime.tt == "pm")
                        hh += 12;
                    rule.ScheduleOnTime = (hh < 10 ? "0" : "") + hh + ":" + (rule.ScheduleOnTime.mm < 10 ? "0" : "") + rule.ScheduleOnTime.mm
                } else {
                    rule.ScheduleOnTime = (rule.ScheduleOnTime.hh < 10 ? "0" : "") + rule.ScheduleOnTime.hh + ":" + (rule.ScheduleOnTime.mm < 10 ? "0" : "") + rule.ScheduleOnTime.mm
                }
            }
        }
        if (daloState.isHybrid()) {
            var priority = $scope.loadManagementFunctions.length;
            for (var _a = 0, _b = $scope.loadManagementFunctions; _a < _b.length; _a++) {
                var func = _b[_a];
                $scope.emPrios[func] = priority;
                priority = priority - 1
            }
        } else {
            var priority = $scope.loadManagementFunctions.length + 1;
            for (var _c = 0, _d = $scope.loadManagementFunctions; _c < _d.length; _c++) {
                var func = _d[_c];
                $scope.emPrios[func] = priority;
                priority = priority - 1
            }
            $scope.emPrios["batteries"] = 1
        }
        if (!$scope.validateAllRules(rules)) {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            return $q.reject()
        }
        var data2Save = {
            emrs: {
                priorities: $scope.emPrios,
                rules: {
                    pin1: rules[0],
                    pin2: rules[1],
                    pin3: rules[2],
                    pin4: rules[3]
                }
            }
        };
        dm.util.configRequest.save("/config/emrs/", data2Save, onSuccess, onError, onFailure)
    }
    ;
    $scope.validateAllRules = function(rules) {
        var valid = true;
        for (var i = 0; i < rules.length; i++) {
            var rule = rules[i];
            valid = valid && $scope.isThresholdOnValid(rule.thresholdOn, i);
            valid = valid && $scope.isThresholdOffValid(rule.thresholdOff, i);
            valid = valid && $scope.isMinTimeValid(rule.minTimeOn, i);
            valid = valid && $scope.isMaxTimeValid(rule.maxTimeOn, i);
            valid = valid && $scope.isScheduleTimeHoureValid(rule.ScheduleOnTime.hh, i);
            valid = valid && $scope.isScheduleTimeMinuteValid(rule.ScheduleOnTime.mm, i);
            valid = valid && $scope.isScheduleTimeValid(rule);
            valid = valid && $scope.isRequiredTimeValid(rule);
            if (!valid) {
                break
            }
        }
        return valid
    }
    ;
    $scope.init();
    $scope.$on("$destroy", function() {
        _private.StateFetcher.unsubscribe("settingsHybEmCtrl");
        siteNowDataModel.unsubscribe("settingsPushserviceCtrl")
    })
}
]);
var dm;
(function(dm) {
    var model;
    (function(model) {
        var AS4777Settings = function(_super) {
            __extends(AS4777Settings, _super);
            function AS4777Settings(id, scope) {
                var _this = _super.call(this, id, scope) || this;
                _this.DRM3 = {
                    QNegMin: 0
                };
                _this.DRM7 = {
                    QPosMin: 0
                };
                _this.DRM3QNegMinBorder = {
                    MIN: 0,
                    MAX: 60
                };
                _this.DRM7QPosMinBorder = {
                    MIN: 0,
                    MAX: 60
                };
                _this._validators = {
                    "DRM3.QNegMin": function(value) {
                        if (!dm.util.helpers.isInteger(value))
                            return false;
                        if (value < _this.DRM3QNegMinBorder.MIN || value > _this.DRM3QNegMinBorder.MAX)
                            return false;
                        return true
                    },
                    "DRM7.QPosMin": function(value) {
                        if (!dm.util.helpers.isInteger(value))
                            return false;
                        if (value < _this.DRM7QPosMinBorder.MIN || value > _this.DRM7QPosMinBorder.MAX)
                            return false;
                        return true
                    }
                };
                return _this
            }
            AS4777Settings.prototype.resetModel = function() {
                this.DRM3 = this.getOrigData("DRM3");
                this.DRM7 = this.getOrigData("DRM7")
            }
            ;
            AS4777Settings.prototype._load = function() {
                var _this = this;
                return dm.ngjs.$q.all([dm.util.configRequest.get("/servicecgi-bin/PCCconfig.cgi/as4777/")]).then(function(responses) {
                    var resp = responses[0];
                    _this.setOrigData("DRM3", resp.as4777.DRM3);
                    _this.setOrigData("DRM7", resp.as4777.DRM7)
                })
            }
            ;
            AS4777Settings.prototype._save = function() {
                var as4777 = {
                    DRM3: this.DRM3,
                    DRM7: this.DRM7
                };
                var payload = {
                    as4777: as4777
                };
                return dm.util.configRequest.saveDef("/servicecgi-bin/PCCconfig.cgi/as4777/", payload)
            }
            ;
            return AS4777Settings
        }(model.Base);
        model.AS4777Settings = AS4777Settings
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var SolarWebRemoteControlSettings = function(_super) {
            __extends(SolarWebRemoteControlSettings, _super);
            function SolarWebRemoteControlSettings(id, scope) {
                var _this = _super.call(this, id, scope) || this;
                _this.solarWeb = null;
                return _this
            }
            SolarWebRemoteControlSettings.prototype._load = function() {
                var _this = this;
                return dm.util.configRequest.get("/config/solarweb/").then(function(config) {
                    if (config && config.solarweb) {
                        _this.setOrigData("solarWeb", config.solarweb)
                    }
                })
            }
            ;
            SolarWebRemoteControlSettings.prototype._save = function() {
                var solarWeb = angular.copy(this.solarWeb);
                return dm.util.configRequest.saveDef("/config/solarweb/", {
                    solarweb: solarWeb
                })
            }
            ;
            return SolarWebRemoteControlSettings
        }(model.Base);
        model.SolarWebRemoteControlSettings = SolarWebRemoteControlSettings
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var controllers;
    (function(controllers) {
        var settings;
        (function(settings) {
            var DisplayModeDirective = function() {
                function DisplayModeDirective($rootScope) {
                    this.$rootScope = $rootScope;
                    this.restrict = "E";
                    this.require = "ngModel";
                    this.scope = {
                        model: "=ngModel",
                        disabled: "=ngDisabled"
                    };
                    this.transclude = true;
                    this.templateUrl = "html/templates/displayMode.html";
                    this.link = function(scope, element, attrs) {
                        scope.displayModeToUnit = function(displayMode) {
                            return displayMode === dm.config.exportLimits.DisplayMode.absolute ? "W" : "%"
                        }
                    }
                }
                DisplayModeDirective.factory = function() {
                    var directive = function($rootScope) {
                        return new DisplayModeDirective($rootScope)
                    };
                    directive.$inject = ["$rootScope"];
                    return directive
                }
                ;
                return DisplayModeDirective
            }();
            settings.DisplayModeDirective = DisplayModeDirective
        }
        )(settings = controllers.settings || (controllers.settings = {}))
    }
    )(controllers = dm.controllers || (dm.controllers = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var controllers;
    (function(controllers) {
        var settings;
        (function(settings) {
            var EnableDirective = function() {
                function EnableDirective($rootScope) {
                    this.$rootScope = $rootScope;
                    this.restrict = "E";
                    this.require = "ngModel";
                    this.scope = {
                        model: "=ngModel",
                        disabled: "=ngDisabled",
                        hideCheckbox: "=hideCheckbox"
                    };
                    this.transclude = true;
                    this.templateUrl = "html/templates/enable.html";
                    this.link = function(scope, element, attrs) {
                        scope.label = attrs.label
                    }
                }
                EnableDirective.factory = function() {
                    var directive = function($rootScope) {
                        return new EnableDirective($rootScope)
                    };
                    directive.$inject = ["$rootScope"];
                    return directive
                }
                ;
                return EnableDirective
            }();
            settings.EnableDirective = EnableDirective
        }
        )(settings = controllers.settings || (controllers.settings = {}))
    }
    )(controllers = dm.controllers || (dm.controllers = {}))
}
)(dm || (dm = {}));
angular.module("settings").filter("trustAsResourceUrl", ["$sce", function($sce) {
    return function(val) {
        return $sce.trustAsResourceUrl(val)
    }
}
]);
angular.module("settings").filter("replaceCount", function() {
    return function(str, cnt) {
        return str.replace("%count%", cnt)
    }
});
angular.module("settings").directive("fileread", [function() {
    return {
        scope: {
            fileread: "="
        },
        link: function(scope, element, attributes) {
            element.bind("change", function(changeEvent) {
                scope.$apply(function() {
                    scope.fileread = changeEvent.target.files[0]
                })
            })
        }
    }
}
]);
angular.module("settings").controller("settingsEvuCtrl", ["$scope", "$state", "$http", "$q", "settingsHelperFunctions", "standardDialog", function($scope, $state, $http, $q, settingsHelperFunctions, standardDialog) {
    var stdDialog = new dm.standardDialog.StandardDialog($scope);
    var daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    var ioCnt = 8;
    var ioStartIdx = 0;
    var preparePattern = function(aPattern) {
        if (typeof aPattern == "number") {
            var i = 0
              , fac = 1
              , p = [];
            while (aPattern >= 1) {
                p[i] = aPattern % 2 * fac;
                if (p[i] != 0)
                    aPattern -= 1;
                aPattern /= 2;
                fac *= 2;
                i++
            }
            return p
        }
        if (typeof aPattern == "object") {
            var sum_1 = 0;
            $.each(aPattern, function(id, val) {
                sum_1 += settingsHelperFunctions.parseInt("" + val)
            });
            return sum_1
        }
        if (typeof aPattern == "boolean") {
            return 0
        }
        return settingsHelperFunctions.parseInt(aPattern)
    };
    $scope.getTristateClass = function(inputState, index) {
        if (index >= ioStartIdx && $scope.usedDNOPinMask & 1 << index - ioStartIdx) {
            return ["tristate_checkbox", {
                tristate_checkbox_inactive: inputState == "inactive",
                tristate_checkbox_unchecked: inputState == "unchecked",
                tristate_checkbox_checked: inputState == "checked"
            }]
        } else {
            return ["tristate_checkbox", "tristate_checkbox_disabled"]
        }
    }
    ;
    var prepareInputStates = function(ioMask, ioPattern) {
        if (ioMask && ioPattern) {
            var _states = {};
            for (var i = 0; i < ioCnt; i++) {
                var pinNumber = i - ioStartIdx;
                var maskedId = Math.pow(2, pinNumber);
                if (ioMask.indexOf(maskedId) < 0)
                    _states[i] = "inactive";
                else if (ioPattern.indexOf(maskedId) < 0)
                    _states[i] = "unchecked";
                else
                    _states[i] = "checked"
            }
            return _states
        } else {
            var states = ioMask;
            var ret_1 = {
                ioMask: [1, 2, 4, 8, 16, 32, 64, 128],
                ioPattern: [0, 0, 0, 0, 0, 0, 0, 0]
            };
            var disableIoInMask = function(nr) {
                var mskNr = Math.pow(2, nr);
                var mskIdx = ret_1.ioMask.indexOf(mskNr);
                if (mskIdx >= 0)
                    ret_1.ioMask.splice(mskIdx, 1)
            };
            var checkIoInMask = function(nr) {
                var mskNr = Math.pow(2, nr);
                ret_1.ioPattern[nr] = mskNr
            };
            for (var i = 0; i < ioCnt; i++) {
                if (ioStartIdx > i)
                    continue;
                var pinNumber = i - ioStartIdx;
                switch (states[i]) {
                case "inactive":
                    disableIoInMask(pinNumber);
                    break;
                case "checked":
                    checkIoInMask(pinNumber);
                    break
                }
            }
            for (var i = ioCnt - 1; i >= 0; i--) {
                if (ret_1.ioPattern[i] == 0)
                    ret_1.ioPattern.splice(i, 1);
                else
                    break
            }
            return ret_1
        }
    };
    var prepareExcluded = function(data) {
        if (typeof data == "string") {
            if (data == "")
                return [];
            var inverters_1 = data.split(",");
            $.each(inverters_1, function(id, val) {
                inverters_1[id] = settingsHelperFunctions.parseInt(val, 10)
            });
            return inverters_1
        }
        if (typeof data == "object") {
            return data.join(",")
        }
        return settingsHelperFunctions.parseInt(data)
    };
    var createNewRule = function() {
        var rule = {
            Active: false,
            CosPhiControl: {
                Active: false,
                CPDirection: "capacitive",
                TargetValue: null
            },
            EVUOut: false,
            ExcludedDevices: [],
            IOMask: 0,
            IOPattern: 0,
            PowerLimit: {
                Active: false,
                TargetValue: null
            }
        };
        var parsedIoPattern = preparePattern(rule.IOPattern);
        var parsedIoMask = preparePattern(rule.IOMask);
        rule.inputStates = prepareInputStates(parsedIoMask, parsedIoPattern);
        rule.parsedExcludedDevices = prepareExcluded(rule.ExcludedDevices);
        rule.isModified = true;
        return rule
    };
    var onRuleChange = function(newVal, oldVal) {
        if (!newVal || !oldVal || angular.equals(newVal, oldVal) || !newVal.isModified && oldVal.isModified)
            return;
        newVal.isModified = true
    };
    var exportPccConfig = function() {
        var pccConfig = angular.copy($scope.pccConfig);
        for (var idx in pccConfig.rules) {
            var rule = pccConfig.rules[idx];
            delete rule.$$hashKey;
            var prarsedInputStates = prepareInputStates(rule.inputStates);
            rule.IOMask = preparePattern(prarsedInputStates.ioMask);
            rule.IOPattern = preparePattern(prarsedInputStates.ioPattern) & rule.IOMask;
            delete rule.inputStates;
            rule.ExcludedDevices = prepareExcluded(rule.parsedExcludedDevices);
            delete rule.parsedExcludedDevices;
            rule.PowerLimit.TargetValue = parseInt("" + rule.PowerLimit.TargetValue);
            delete rule.isModified
        }
        return pccConfig
    };
    var importPccConfig = function(pccConfig) {
        for (var idx in pccConfig.rules) {
            var rule = pccConfig.rules[idx];
            rule.CosPhiControl.TargetValue = dm.util.helpers.roundN(rule.CosPhiControl.TargetValue, 3);
            var parsedIoPattern = preparePattern(rule.IOPattern & $scope.usedDNOPinMask);
            var parsedIoMask = preparePattern(rule.IOMask & $scope.usedDNOPinMask);
            rule.inputStates = prepareInputStates(parsedIoMask, parsedIoPattern);
            rule.parsedExcludedDevices = prepareExcluded(rule.ExcludedDevices);
            rule.isModified = false;
            $scope.$watch("pccConfig.rules[" + idx + "]", onRuleChange, true)
        }
        return pccConfig
    };
    var checkDataStructure = function(data) {
        if (typeof data != "object" || data == null)
            return false;
        if (typeof data.rules != "object" || data.rules == null)
            return false;
        var i;
        for (i = 0; i < data.rules.length; i++) {
            var val = data.rules[i];
            if (typeof val != "object" || val == null)
                return false;
            if (typeof val.Active != "boolean")
                return false;
            if (typeof val.IOPattern != "number")
                return false;
            if (typeof val.IOMask != "number")
                return false;
            if (typeof val.PowerLimit != "object" || val.PowerLimit == null)
                return false;
            if (typeof val.PowerLimit.Active != "boolean")
                return false;
            if (typeof val.PowerLimit.TargetValue != "number")
                return false;
            if (typeof val.CosPhiControl != "object" || val.CosPhiControl == null)
                return false;
            if (typeof val.CosPhiControl.Active != "boolean")
                return false;
            if (typeof val.CosPhiControl.TargetValue != "number")
                return false;
            if (typeof val.CosPhiControl.CPDirection != "string")
                return false;
            if (val.CosPhiControl.CPDirection == "inductive" && val.CosPhiControl.CPDirection == "capacitive")
                return false;
            if (typeof val.EVUOut != "boolean")
                return false;
            if (typeof val.ExcludedDevices != "object" && val.ExcludedDevices == null)
                return false;
            $.each(val.ExcludedDevices, function(id, val) {
                if (typeof val != "number")
                    return false
            })
        }
        return true
    };
    var validateRule = function(rule, ruleIdx) {
        var ret = 0;
        $scope.RuleErrors[ruleIdx] = {};
        var isInt = rule.PowerLimit.TargetValue != undefined && dm.util.helpers.isInteger(rule.PowerLimit.TargetValue);
        if (!(isInt && rule.PowerLimit.TargetValue >= 0 && rule.PowerLimit.TargetValue <= 100)) {
            if (!isInt && !rule.PowerLimit.Active) {
                rule.PowerLimit.TargetValue = 100;
                isInt = true
            } else {
                $scope.RuleErrors[ruleIdx]["PLActiveColumnHasError"] = true;
                $scope.RuleErrors[ruleIdx]["hasError"] = true;
                ret = -1
            }
        }
        if (!(!isNaN(parseFloat(rule.CosPhiControl.TargetValue)) && rule.CosPhiControl.TargetValue >= .85 && rule.CosPhiControl.TargetValue <= 1)) {
            if (rule.CosPhiControl.Active) {
                $scope.RuleErrors[ruleIdx]["CPActiveColumnHasError"] = true;
                $scope.RuleErrors[ruleIdx]["hasError"] = true;
                ret = -1
            }
        }
        var uniqueDevices = [];
        for (var exi in rule.ExcludedDevices) {
            var ex = rule.ExcludedDevices[exi];
            if (!dm.util.helpers.isInteger(ex) || uniqueDevices.indexOf(ex) != -1 || ex < 0 || ex >= 100) {
                $scope.RuleErrors[ruleIdx]["ExcludedColumnHasError"] = true;
                $scope.RuleErrors[ruleIdx]["hasError"] = true;
                ret = -1
            }
            uniqueDevices.push(ex)
        }
        return ret
    };
    var validateRules = function(pccConfig) {
        var ret = 0;
        var rules = pccConfig.rules;
        $scope.RuleErrors = [];
        for (var i in rules)
            $scope.RuleErrors.push({});
        for (var ruleIdx in rules) {
            var rule = rules[ruleIdx];
            if (!rule.Active)
                continue;
            if (rule.IOMask == 0) {
                $scope.RuleErrors[ruleIdx]["hasError"] = true;
                $scope.RuleErrors[ruleIdx]["PatternColumnHasError"] = true;
                ret = -1;
                continue
            }
            var isInt = rule.PowerLimit.TargetValue != undefined && dm.util.helpers.isInteger(rule.PowerLimit.TargetValue);
            if (!isInt || rule.PowerLimit.TargetValue < 0 || rule.PowerLimit.TargetValue > 100) {
                if (!isInt && !rule.PowerLimit.Active) {
                    rule.PowerLimit.TargetValue = 100
                } else {
                    $scope.RuleErrors[ruleIdx]["PLActiveColumnHasError"] = true;
                    $scope.RuleErrors[ruleIdx]["hasError"] = true;
                    ret = -1
                }
            }
            if (isNaN(parseFloat(rule.CosPhiControl.TargetValue)) || rule.CosPhiControl.TargetValue < .85 || rule.CosPhiControl.TargetValue > 1) {
                if (!rule.CosPhiControl.Active) {
                    rule.CosPhiControl.TargetValue = 1
                } else {
                    $scope.RuleErrors[ruleIdx]["CPActiveColumnHasError"] = true;
                    $scope.RuleErrors[ruleIdx]["hasError"] = true;
                    ret = -1
                }
            }
            var uniqueDevices = [];
            for (var exi in rule.ExcludedDevices) {
                var ex = rule.ExcludedDevices[exi];
                if (!dm.util.helpers.isInteger(ex) || uniqueDevices.indexOf(ex) != -1 || ex < 0 || ex >= 100) {
                    $scope.RuleErrors[ruleIdx]["ExcludedColumnHasError"] = true;
                    $scope.RuleErrors[ruleIdx]["hasError"] = true;
                    ret = -1
                }
                uniqueDevices.push(ex)
            }
            for (var j = parseInt(ruleIdx) + 1; j < rules.length; j++) {
                var nrule = rules[j];
                if (!nrule.Active)
                    continue;
                if (checkBits(rule.IOMask, rule.IOPattern, nrule.IOMask, nrule.IOPattern)) {
                    $scope.RuleErrors[ruleIdx]["hasError"] = true;
                    $scope.RuleErrors[ruleIdx]["PatternColumnHasError"] = true;
                    $scope.RuleErrors[j]["hasError"] = true;
                    $scope.RuleErrors[j]["PatternColumnHasError"] = true;
                    ret = -2
                }
            }
        }
        return ret
    };
    var checkBits = function(mask1, pattern1, mask2, pattern2) {
        var ret = true;
        var commonMask = mask1 & mask2;
        return (commonMask & pattern1) == (commonMask & pattern2)
    };
    $scope.loading = true;
    $scope.buttonsLocked = false;
    $scope.prio = {};
    $scope.sysName = "";
    $scope.nowStr = "";
    $scope.pccConfig = {};
    var initialFileName = "newconfig";
    $scope.saveDialog = {
        filename: initialFileName
    };
    $scope.daloState = daloState;
    $scope.RuleErrors = [];
    $scope.loadDialog = {
        src: "",
        showFileinfo: false,
        legal: false,
        pccConfig: {}
    };
    $scope.init = function() {
        $scope.loading = true;
        $scope.newRule = createNewRule();
        $q.all([dm.util.configRequest.get("/config/views/misc/systemName/"), dm.util.configRequest.get("/servicecgi-bin/PCCconfig.cgi/dno/"), dm.util.configRequest.get("/config/ioservice/service/")]).then(function(responses) {
            $scope.sysName = dm.util.string.htmlDecode(responses[0].systemName);
            var d = new Date;
            $scope.nowStr = d.toLocaleDateString() + ", " + d.toLocaleTimeString();
            $scope.usedDNOPinMask = 0;
            $scope.EnableEVUFeedBack = false;
            for (var idx in responses[2].iomapping.features) {
                var feature = responses[2].iomapping.features[idx];
                if (feature.label === "GSTR_GPIO_TITLE_DNO") {
                    if (!feature.visible || !feature.enable)
                        break;
                    for (var i in feature.ios) {
                        var io = feature.ios[i];
                        if (dm.util.string.StartsWith(io.service, "EVU_INPUT_") && io.PinId >= 0) {
                            var val = parseInt(io.service.substring(io.service.lastIndexOf("_") + 1));
                            $scope.usedDNOPinMask |= isNaN(val) ? 0 : 1 << val - 1
                        } else if (dm.util.string.StartsWith(io.service, "EVU_FEEDBACK") && io.PinId >= 0) {
                            $scope.EnableEVUFeedBack = true
                        }
                    }
                }
            }
            var pccRules = {
                rules: angular.copy(responses[1].dno)
            };
            $scope.pccConfig = importPccConfig(pccRules);
            resetAllModify();
            resetAllErrors();
            $scope.loading = false
        }, function(response) {
            $scope.isPageLoading = false;
            $scope.buttonsLocked = false;
            settingsHelperFunctions.checkStatusResponseAndRedirect(response, $state)
        })
    }
    ;
    $scope.deleteRule = function(rule) {
        var ruleIdx = $scope.pccConfig.rules.indexOf(rule);
        $scope.pccConfig.rules.splice(ruleIdx, 1)
    }
    ;
    $scope.addNewRule = function() {
        if ($scope.newRule.PowerLimit.TargetValue == null)
            $scope.newRule.PowerLimit.TargetValue = 100;
        if ($scope.newRule.CosPhiControl.TargetValue == null)
            $scope.newRule.CosPhiControl.TargetValue = 1;
        var validation = validateRule($scope.newRule, "newRule");
        if (validation != 0) {
            if (validation == -1) {
                stdDialog.showDialog("FieldErrorTemplate")
            } else {
                stdDialog.showDialog("RowErrorTemplate")
            }
            return
        }
        $scope.pccConfig.rules.push($scope.newRule);
        $scope.$watch("pccConfig.rules[" + ($scope.pccConfig.rules.length - 1) + "]", onRuleChange, true);
        $scope.newRule = createNewRule()
    }
    ;
    $scope.onInputClicked = function(rule, index) {
        if (ioStartIdx > index)
            return;
        var inputState = rule.inputStates[index];
        switch (inputState) {
        case "inactive":
            inputState = "unchecked";
            break;
        case "unchecked":
            inputState = "checked";
            break;
        case "checked":
            inputState = "inactive";
            break;
        default:
            inputState = "inactive";
            break
        }
        rule.inputStates[index] = inputState
    }
    ;
    $scope.onLoadFileClick = function(aEvent) {
        $scope.loadDialog.showFileinfo = false;
        stdDialog.showDialog("LoadDialogTemplate")
    }
    ;
    $scope.$watch("loadDialog.src", function(newVal) {
        if (!newVal)
            return;
        var reader = new FileReader;
        reader.onload = function() {
            return function(e) {
                try {
                    $scope.loadDialog.pccConfig = JSON.parse(e.target.result);
                    $scope.loadDialog.legal = checkDataStructure($scope.loadDialog.pccConfig)
                } catch (e) {
                    $scope.loadDialog.legal = false
                }
                $scope.loadDialog.showFileinfo = true;
                $scope.$digest()
            }
        }();
        reader.readAsText(newVal)
    });
    $scope.getImportedConfigLength = function() {
        if ($scope.loadDialog.pccConfig)
            return {
                count: $scope.loadDialog.pccConfig.rules.length
            };
        return {
            count: 0
        }
    }
    ;
    $scope.loadFromFile = function() {
        if (Object.keys($scope.loadDialog.pccConfig).length > 0)
            $scope.pccConfig = importPccConfig($scope.loadDialog.pccConfig);
        resetAllErrors();
        resetAllModify()
    }
    ;
    $scope.restoreLoadDefaults = function() {
        $scope.loadDialog = {
            src: "",
            showFileinfo: false,
            legal: false
        }
    }
    ;
    $scope.onSaveFileClick = function() {
        stdDialog.showDialog("SaveDialogTemplate")
    }
    ;
    $scope.restoreFileName = function() {
        $scope.saveDialog.filename = initialFileName
    }
    ;
    var endsWith = function(str, ending) {
        if (!str || !ending)
            return false;
        if (str.length == 0 || ending.length == 0)
            return false;
        var lIdx = str.lastIndexOf(ending);
        return lIdx != -1 && lIdx == str.length - ending.length
    };
    $scope.exportToFile = function() {
        var pccConfig = exportPccConfig();
        var fileName = $scope.saveDialog.filename;
        if (fileName.length == 0)
            fileName = initialFileName + ".fpc";
        if (!endsWith(fileName, ".fpc"))
            fileName = fileName + ".fpc";
        settingsHelperFunctions.Json2File(fileName, pccConfig);
        $scope.saveDialog.filename = initialFileName
    }
    ;
    var resetAllErrors = function() {
        for (var i in $scope.RuleErrors) {
            var error = $scope.RuleErrors[i];
            error.PLActiveColumnHasError = false;
            error.CPActiveColumnHasError = false;
            error.PatternColumnHasError = false;
            error.ExcludedColumnHasError = false;
            error.hasError = false
        }
    };
    var resetAllModify = function() {
        for (var idx in $scope.pccConfig.rules) {
            var elem = $scope.pccConfig.rules[idx];
            elem.isModified = false
        }
    };
    $scope.save = function() {
        if ($scope.buttonsLocked)
            return;
        resetAllErrors();
        if ($scope.usedDNOPinMask == 0) {
            stdDialog.showDialog("IOConfigErrorTemplate");
            return
        }
        var pccConfig = exportPccConfig();
        var validation = validateRules(pccConfig);
        if (validation != 0) {
            if (validation == -1) {
                stdDialog.showDialog("FieldErrorTemplate")
            } else {
                stdDialog.showDialog("RowErrorTemplate")
            }
            return
        }
        var onSuccess = function() {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            resetAllModify();
            dm.util.configRequest.showCfgSavedDialog()
        };
        var onError = function(error) {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            try {
                if (typeof error.Head.Status.ErrorDetail.Nodes != "undefined") {
                    $.each(error.Head.Status.ErrorDetail.Nodes, function(idx, node) {
                        var ruleIdx = node.Path[1];
                        switch (node.Path[2]) {
                        case "PowerLimit":
                            $scope.RuleErrors[ruleIdx].PLActiveColumnHasError = true;
                            break;
                        case "CosPhiControl":
                            $scope.RuleErrors[ruleIdx].CPActiveColumnHasError = true;
                            break;
                        case "Pattern":
                            $scope.RuleErrors[ruleIdx].PatternColumnHasError = true;
                            break;
                        case "ExcludedDevices":
                            $scope.RuleErrors[ruleIdx].ExcludedColumnHasError = true;
                            break;
                        default:
                            $scope.RuleErrors[ruleIdx].hasError = true;
                            break
                        }
                    })
                }
                if (error.Head.Status.ErrorDetail.Nodes.length == 1) {
                    stdDialog.showDialog("FieldErrorTemplate")
                } else if (error.Head.Status.ErrorDetail.Nodes.length > 1) {
                    stdDialog.showDialog("RowErrorTemplate")
                } else {
                    dm.util.configRequest.showCfgErrorDialog(error)
                }
            } catch (e) {
                dm.util.configRequest.showCfgErrorDialog(error)
            }
        };
        var onFailure = function(failure) {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            dm.util.configRequest.showCfgFailureDialog(failure)
        };
        $scope.buttonsLocked = true;
        $scope.loading = true;
        var payload = {
            dno: angular.copy(pccConfig.rules)
        };
        dm.util.configRequest.save("/servicecgi-bin/PCCconfig.cgi/dno/", payload, onSuccess, onError, onFailure)
    }
    ;
    $scope.init()
}
]);
angular.module("settings").controller("settingsAS4777Ctrl", ["$scope", "$state", function($scope, $state) {
    $scope.isDRM3QNegMinValid = null;
    $scope.isDRM7QPosMinValid = null;
    $scope.init = function() {
        $scope.loading = true;
        $scope.model = dm.model.AS4777Settings.getInstance("settingsAS4777Ctrl", $scope);
        $scope.model.loadingPromise.then(function() {
            $scope.isDRM3QNegMinValid = $scope.model.getDirtyValidator("DRM3.QNegMin");
            $scope.isDRM7QPosMinValid = $scope.model.getDirtyValidator("DRM7.QPosMin");
            $scope.loading = false
        })
    }
    ;
    $scope.init();
    $scope.save = function() {
        $scope.loading = true;
        $scope.model.save().then(function() {
            dm.util.configRequest.showCfgSavedDialog()
        }, function(error) {
            if (error !== undefined)
                dm.util.configRequest.showCfgErrorDialog(error.error)
        }).finally(function() {
            $scope.loading = false
        })
    }
}
]);
angular.module("settings").controller("settingsDplCtrl", ["$scope", "$state", "settingsHelperFunctions", function($scope, $state, settingsHelperFunctions) {
    $scope.loading = true;
    $scope.buttonsLocked = false;
    $scope.primary_available = false;
    $scope.weakest_phase_available = false;
    $scope.TotalPVPower = 0;
    $scope.model = dm.model.DplSettings.getInstance("settingsDplCtrl", $scope);
    if ($scope.WIZARDACTIVE) {
        $scope.wizardButtons.showForward = true;
        $scope.wizardButtons.showBackward = true;
        $scope.wizardButtons.showAbort = false;
        $scope.ShowWizardLoading()
    }
    $scope.init = function() {
        $scope.loading = true;
        dm.ngjs.$q.all([dm.util.configRequest.get("/config/meter/admin/primary/"), $scope.model.loadingPromise]).then(function(responses) {
            try {
                $scope.primary_available = responses[0].primary.available;
                $scope.weakest_phase_available = !$scope.daloState.isHybrid();
                $scope.model.reset();
                $scope.loading = false
            } catch (e) {
                $scope.primary_available = false;
                $scope.weakest_phase_available = false
            }
        }, function(response) {
            return settingsHelperFunctions.checkStatusResponseAndRedirect(response, $state, "dpl")
        }).finally(function() {
            $scope.loading = false;
            if ($scope.WIZARDACTIVE)
                $scope.HideWizardLoading()
        })
    }
    ;
    $scope.$watch("model.powerLimits.visualization.exportLimits.activePower.displayModeHardLimit", function(newValue, oldValue) {
        return $scope.model.onDisplayModeHardLimitChanged(newValue, oldValue)
    }, true);
    $scope.$watch("model.powerLimits.visualization.exportLimits.activePower.displayModeSoftLimit", function(newValue, oldValue) {
        return $scope.model.onDisplayModeSoftLimitChanged(newValue, oldValue)
    }, true);
    $scope.$watch("model.powerLimits.exportLimits.activePower.mode", function(newValue, oldValue) {
        return $scope.model.onActivePowerModeChanged(newValue, oldValue)
    }, true);
    $scope.wattPeakReferenceValueValidator = $scope.model.getValidator("powerLimits.visualization.wattPeakReferenceValue");
    $scope.activePowerModeValidator = $scope.model.getValidator("powerLimits.exportLimits.activePower.mode");
    $scope.softLimitValidator = $scope.model.getValidator("powerLimits.exportLimits.activePower.softLimit.powerLimit");
    $scope.hardLimitValidator = $scope.model.getValidator("powerLimits.exportLimits.activePower.hardLimit.powerLimit");
    $scope.save = function() {
        $scope.loading = true;
        $scope.model.save().then(function() {
            dm.util.configRequest.showCfgSavedDialog()
        }, function(error) {
            if (error !== undefined)
                dm.util.configRequest.showCfgErrorDialog(error.error)
        }).finally(function() {
            $scope.loading = false
        })
    }
    ;
    $scope.init()
}
]).directive("enable", dm.controllers.settings.EnableDirective.factory()).directive("displayMode", dm.controllers.settings.DisplayModeDirective.factory());
angular.module("settings").controller("settingsIcsCtrl", ["$scope", "$http", "$q", "$state", "settingsHelperFunctions", function($scope, $http, $q, $state, settingsHelperFunctions) {
    $scope.loading = true;
    $scope.buttonsLocked = false;
    $scope.prio = {};
    $scope.prioList = [];
    $scope.init = function() {
        $scope.loading = true;
        dm.util.configRequest.get("/config/ics/prio/").then(function(data) {
            $scope.prio = data.prio;
            for (var _i = 0, _a = Object.keys($scope.prio); _i < _a.length; _i++) {
                var elem = _a[_i];
                $scope.prioList[$scope.prio[elem] - 1] = elem
            }
            $scope.loading = false
        }, function(response) {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            settingsHelperFunctions.checkStatusResponseAndRedirect(response, $state)
        })
    }
    ;
    $scope.updatePosition = function(oldPos, newPos) {
        var tmp = $scope.prioList[newPos];
        $scope.prioList[newPos] = $scope.prioList[oldPos];
        $scope.prioList[oldPos] = tmp
    }
    ;
    $scope.prioListMapping = function(type) {
        switch (type) {
        case "io":
            return "CTR_PRIO_EVU";
        case "dyn":
            return "CTR_PRIO_DPL";
        case "mb":
            return "CTR_PRIO_MB"
        }
    }
    ;
    $scope.save = function(callback) {
        if ($scope.buttonsLocked)
            return;
        var onSuccess = function() {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            if (callback)
                callback();
            else
                dm.util.configRequest.showCfgSavedDialog()
        };
        var onError = function(error) {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            dm.util.configRequest.showCfgErrorDialog(error)
        };
        var onFailure = function(failure) {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            dm.util.configRequest.showCfgFailureDialog(failure)
        };
        $scope.buttonsLocked = true;
        $scope.loading = true;
        for (var _i = 0, _a = $scope.prioList; _i < _a.length; _i++) {
            var elem = _a[_i];
            $scope.prio[elem] = $scope.prioList.indexOf(elem) + 1
        }
        dm.util.configRequest.save("/config/ics/prio/", {
            prio: $scope.prio
        }, onSuccess, onError, onFailure)
    }
    ;
    $scope.init()
}
]);
angular.module("settings").controller("settingsHybEvuCtrl", ["$scope", "$http", "$q", "standardDialog", function($scope, $http, $q, standardDialog) {
    var stdDialog = new dm.standardDialog.StandardDialog($scope);
    $scope.touModel = dm.model.TimeOfUseModel.getInstance("TimeOfUse", $scope);
    $scope.battModel = dm.model.BatteryConfig.getInstance("BatteryConfig", $scope);
    $scope.loading = true;
    $scope.buttonsLocked = false;
    $scope.prio = {};
    $scope.init = function() {
        $scope.loading = true;
        dm.ngjs.$q.all([$scope.battModel.loadingPromise, $scope.touModel.loadingPromise]).then(function(responses) {
            $scope.HYB = {
                EVU: {
                    CHARGEFROMGRID: $scope.battModel.data.HYB_EVU_CHARGEFROMGRID
                }
            };
            $scope.$watch("HYB.EVU.CHARGEFROMGRID", function(newV, oldV) {
                if (newV == undefined || oldV == undefined || newV == oldV || $scope.loading)
                    return;
                if ($scope.touModel.TimeOfUseNotAllowed(newV, $scope.battModel.data.HYB_BM_CHARGEFROMAC))
                    stdDialog.showDialog("TOUNotAllowedActive")
            });
            $scope.loading = false
        }, function() {
            $scope.loading = false;
            dm.util.configRequest.showCfgFailureDialog()
        })
    }
    ;
    $scope.save = function(callback) {
        if ($scope.buttonsLocked)
            return;
        $scope.battModel.data.HYB_EVU_CHARGEFROMGRID = $scope.HYB.EVU.CHARGEFROMGRID;
        $scope.buttonsLocked = true;
        $scope.loading = true;
        $scope.battModel.save().then(function() {
            dm.util.configRequest.showCfgSavedDialog()
        }, function(err) {
            if (err)
                dm.util.configRequest.showCfgErrorDialog(err.error)
        }).finally(function() {
            $scope.loading = false;
            $scope.buttonsLocked = false
        })
    }
    ;
    $scope.init()
}
]);
angular.module("settings").controller("settingsSolarWebRemoteControlCtrl", ["$scope", "$http", "$q", "standardDialog", function($scope, $http, $q, standardDialog) {
    $scope.solarWebModel = dm.model.SolarWebRemoteControlSettings.getInstance("SolarWebRemoteControlSettings", $scope);
    $scope.init = function() {
        $scope.loading = true;
        $scope.solarWebModel.loadingPromise.then(function() {
            $scope.solarWebModel.reset();
            $scope.loading = false
        }, function() {
            $scope.loading = false;
            dm.util.configRequest.showCfgFailureDialog()
        })
    }
    ;
    $scope.save = function() {
        if ($scope.buttonsLocked)
            return;
        $scope.buttonsLocked = true;
        $scope.loading = true;
        $scope.solarWebModel.save().then(function() {
            dm.util.configRequest.showCfgSavedDialog()
        }, function(err) {
            if (err)
                dm.util.configRequest.showCfgErrorDialog(err.error)
        }).finally(function() {
            $scope.loading = false;
            $scope.buttonsLocked = false
        })
    }
    ;
    $scope.init()
}
]);
angular.module("settings").controller("settingsGpiosCtrl", ["$scope", "$state", "$timeout", "$http", "$q", "$translate", "settingsHelperFunctions", "loginService", "standardDialog", function($scope, $state, $timeout, $http, $q, $translate, settingsHelperFunctions, loginService, standardDialog) {
    var _private = {
        restoreModel: undefined,
        backupModeIdx: undefined,
        genericBatIdx: undefined,
        loadMgmtIdx: undefined
    };
    var disableDNORulesDialog = null;
    var invalidDNOConfigDlg = null;
    var stdDialog = new dm.standardDialog.StandardDialog($scope);
    $scope.loading = true;
    $scope.preloading = true;
    $scope.daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    $scope.IsMBRTUAvailable = $scope.daloState.isMBRTUAvailable;
    $scope.mapping = {};
    $scope.options = {};
    $scope.user = loginService.getLoggedInUser();
    $scope.ui = {
        featuresVisible: [],
        featuresEnabled: [],
        featuresInvalid: [],
        featuresDirty: [],
        appMode: false
    };
    $scope.tabs = {
        active: 0
    };
    var createModel = function(user) {
        if ("service" == user || "today" == user) {
            $scope.model = dm.model.ServiceGpioSettings.getInstance("settingsGpiosCtrlService", $scope)
        } else if ("admin" == user) {
            $scope.model = dm.model.AdminGpioSettings.getInstance("settingsGpiosCtrlAdmin", $scope)
        }
    };
    if ($scope.WIZARDACTIVE) {
        $scope.wizardButtons.showForward = true;
        $scope.wizardButtons.showBackward = true;
        $scope.wizardButtons.showAbort = false;
        createModel("service");
        $scope.ShowWizardLoading()
    } else {
        createModel(loginService.getLoggedInUser())
    }
    $scope.dnoRulesDisableYES = function() {
        if (disableDNORulesDialog != null) {
            disableDNORulesDialog.setShowLoading(true);
            $scope.model.disableDNORules().then(function() {
                disableDNORulesDialog.closeDialog();
                $scope.model.dnoFeature.enable = false
            })
        }
    }
    ;
    $scope.dnoRulesDisableNO = function() {
        if (disableDNORulesDialog != null) {
            disableDNORulesDialog.closeDialog();
            $scope.model.dnoFeature.enable = false;
            $scope.ui.featuresDirty["GSTR_GPIO_TITLE_DNO"] = true
        }
    }
    ;
    $scope.updateActiveMargin = function(tabIdx) {
        var initMarginLeft = 25;
        var totalWidth = 410;
        var currentIdx = tabIdx;
        var tablist = $("#wizard_gpiofeatureslist");
        var oldActiveItem = tablist.children().eq(currentIdx);
        var newActiveItem = tablist.children().eq(tabIdx);
        var currentMargin = parseInt(tablist.css("margin-left"));
        var leftPos = newActiveItem.position().left - initMarginLeft;
        var rightPos = newActiveItem.width() + leftPos;
        if (rightPos - totalWidth > 0) {
            if (tabIdx == tablist.children().size)
                tablist.css("margin-left", currentMargin - (rightPos - totalWidth));
            else
                tablist.css("margin-left", currentMargin - (rightPos - totalWidth + 50))
        }
        if (leftPos < 0) {
            if (tabIdx == 0)
                tablist.css("margin-left", initMarginLeft);
            else
                tablist.css("margin-left", currentMargin - (leftPos - 50))
        }
    }
    ;
    $scope.getFeatureLabel = function(stringIdentifier) {
        if (stringIdentifier == "GSTR_GPIO_TITLE_AS4777")
            return "AUS-DRM";
        return dm.ngjs.$translate.instant(stringIdentifier)
    }
    ;
    $scope.moveActiveTab = function(difference) {
        $scope.tabs.active = parseInt($scope.tabs.active);
        if (difference < 0 && $scope.tabs.active > 0) {
            while ($scope.tabs.active + difference > -1 && (!$scope.isUserPermitted($scope.tabs.active + difference) || ($scope.model.features[$scope.tabs.active + difference].visible == false || $scope.ui.featuresVisible[$scope.tabs.active + difference] == false)))
                difference--
        }
        if (difference > 0 && $scope.tabs.active < $scope.model.features.length) {
            while ($scope.tabs.active + difference < $scope.model.features.length && (!$scope.isUserPermitted($scope.tabs.active + difference) || ($scope.model.features[$scope.tabs.active + difference].visible == false || $scope.ui.featuresVisible[$scope.tabs.active + difference] == false)))
                difference++
        }
        if ($scope.tabs.active + difference < 0 || $scope.tabs.active + difference >= $scope.model.features.length)
            return;
        var newSliderIndex = 0;
        $scope.tabs.active = parseInt($scope.tabs.active) + parseInt(difference);
        for (var i = 0; i < $scope.tabs.active; i++) {
            if ($scope.model.features[i].visible && $scope.ui.featuresVisible[i] && $scope.isUserPermitted(i))
                newSliderIndex++
        }
        $scope.updateActiveMargin(newSliderIndex)
    }
    ;
    $scope.init = function(user) {
        $scope.loading = true;
        $scope.preloading = true;
        $scope.ui.featuresEnabled = [];
        $scope.ui.featuresDirty = [];
        $scope.daloState.loadingPromise.then(function() {
            dm.ngjs.$q.all([$scope.model.loadingPromise]).then(function(responses) {
                if ($scope.daloState.queryParameters.app != undefined && $scope.daloState.queryParameters.app)
                    $scope.ui.appMode = true;
                $scope.user = user ? user : "admin";
                for (var i in $scope.model.features) {
                    $scope.ui.featuresEnabled.push($scope.model.features[i].enable);
                    $scope.ui.featuresVisible.push(true);
                    if ($scope.model.features[i].label == "GSTR_GPIO_TITLE_BACKUP") {
                        _private.backupModeIdx = i
                    } else if ($scope.model.features[i].label == "GSTR_GPIO_TITLE_STORAGE") {
                        _private.genericBatIdx = i
                    } else if ($scope.model.features[i].label == "GSTR_GPIO_TITLE_EMRS") {
                        _private.loadMgmtIdx = i
                    }
                }
                if ($scope.ui.featuresEnabled[_private.genericBatIdx]) {
                    $scope.ui.featuresVisible[_private.backupModeIdx] = false;
                    $scope.ui.featuresEnabled[_private.backupModeIdx] = false;
                    $scope.model.features[_private.backupModeIdx].enable = false
                }
                for (var i in $scope.model.features) {
                    backupModeGenericBatLock(i);
                    if ($scope.model.features[i].visible && $scope.ui.featuresVisible[i]) {
                        $scope.tabs.active = i;
                        break
                    }
                }
            }, function(response) {
                return settingsHelperFunctions.checkStatusResponseAndRedirect(response, $state)
            }).finally(function() {
                $scope.mapping = {};
                $scope.options = $scope.model.options;
                $scope.preloading = false;
                $timeout(function() {
                    $scope.mapping = $scope.model.mapping;
                    $scope.loading = false;
                    if ($scope.WIZARDACTIVE) {
                        if ($scope.daloState.queryParameters.app != undefined)
                            $scope.tabs.active = _private.loadMgmtIdx;
                        else
                            $scope.tabs.active = -1;
                        $scope.HideWizardLoading()
                    }
                }, 0)
            })
        })
    }
    ;
    $scope.showFeatureServiceValidation = function(featureName, val) {
        if ($scope.ui.featuresDirty[featureName] && val.PinId > -1) {
            return $scope.model.servicesPerPin[val.PinId].blocked
        }
        return false
    }
    ;
    $scope.showDNOValidation = function() {
        return $scope.model.unconfiguredDNOServices.length > 0
    }
    ;
    $scope.showFeatureValidation = function(feature) {
        if (feature === undefined || feature === null)
            return false;
        if ($scope.ui.featuresDirty[feature.label]) {
            for (var i in feature.ios) {
                var iomapping = feature.ios[i];
                if (iomapping.PinId > -1 && $scope.model.servicesPerPin[iomapping.PinId].blocked)
                    return true
            }
        }
        if ($scope.ui.featuresInvalid[feature.label]) {
            feature.enable = true;
            $scope.ui.featuresDirty[feature.label] = false;
            $scope.ui.featuresInvalid[feature.label] = false
        }
        return false
    }
    ;
    $scope.showDoubleUsageValidation = function(feature) {
        if (feature === undefined || feature === null)
            return false;
        var usedPinsInFeature = {};
        if ($scope.ui.featuresDirty[feature.label]) {
            for (var i in feature.ios) {
                var iomapping = feature.ios[i];
                if (usedPinsInFeature[iomapping.PinId] && iomapping.PinId > -1)
                    return true;
                else
                    usedPinsInFeature[iomapping.PinId] = true
            }
        }
        return false
    }
    ;
    $scope.showDoubleUsagePinValidation = function(feature, io, index) {
        if (feature === undefined || feature === null)
            return false;
        var usedPinsInFeature = {};
        if ($scope.ui.featuresDirty[feature.label] && io.PinId > -1) {
            var pos = 0;
            for (var i in feature.ios) {
                var iomapping = feature.ios[i];
                if (pos != index)
                    usedPinsInFeature[iomapping.PinId] = true;
                pos++
            }
            if (usedPinsInFeature[io.PinId])
                return true
        }
        return false
    }
    ;
    $scope.getPinColumnCount = function() {
        if ($scope.daloState.isBoxVariant)
            return 1;
        var count = 1;
        if ($scope.IsMBRTUAvailable)
            count = 3;
        if ($scope.model.hasExtendedModbusIF)
            count = 5;
        count += $scope.model.gpios.length / 2;
        return count
    }
    ;
    $scope.hasServicePermission = function() {
        return $scope.user === "service" || $scope.user === "today"
    }
    ;
    $scope.getRS485Align = function() {
        if ($scope.daloState.isBoxVariant)
            return "left";
        return "right"
    }
    ;
    var backupModeGenericBatLock = function(index) {
        if (index == _private.backupModeIdx) {
            $scope.ui.featuresVisible[_private.genericBatIdx] = !$scope.ui.featuresEnabled[_private.backupModeIdx];
            if ($scope.tabs.active == _private.genericBatIdx) {
                $scope.updateActiveTab(_private.backupModeIdx)
            }
        } else if (index == _private.genericBatIdx) {
            $scope.ui.featuresVisible[_private.backupModeIdx] = !$scope.ui.featuresEnabled[_private.genericBatIdx];
            if ($scope.tabs.active == _private.backupModeIdx) {
                $scope.updateActiveTab(_private.genericBatIdx)
            }
        }
    };
    $scope.validateAndUpdateModel = function(index) {
        backupModeGenericBatLock(index);
        if ($scope.ui.featuresEnabled[index]) {
            if ($scope.model.isFeatureValid(index)) {
                $scope.model.features[index].enable = $scope.ui.featuresEnabled[index];
                $scope.ui.featuresDirty[$scope.model.features[index].label] = false;
                $scope.ui.featuresInvalid[$scope.model.features[index].label] = false
            } else {
                if ($scope.model.arePinsUnique(index))
                    $scope.ui.featuresInvalid[$scope.model.features[index].label] = true;
                else
                    $scope.ui.featuresEnabled[index] = false;
                $scope.ui.featuresDirty[$scope.model.features[index].label] = true
            }
        } else {
            $scope.ui.featuresInvalid[$scope.model.features[index].label] = false;
            if ($scope.model.features[index].label == "GSTR_GPIO_TITLE_DNO") {
                for (var i in $scope.model.blockedDNOServices) {
                    if ($scope.model.blockedDNOServices[i]) {
                        disableDNORulesDialog = new dm.standardDialog.StandardDialog($scope,"DIALOG_TITLE_HINT",$translate.instant("IOCONFIG_DNORULESHINT_01") + "</br>" + $translate.instant("IOCONFIG_DNORULESHINT_02"));
                        disableDNORulesDialog.addButton("YES", "dnoRulesDisableYES()");
                        disableDNORulesDialog.addButton("NO", "dnoRulesDisableNO()");
                        disableDNORulesDialog.showDialog();
                        return
                    }
                }
            }
            if ($scope.model.dnoFeature && $scope.model.dnoFeature.enable) {
                var ios = $scope.model.features[index].ios;
                for (var i in ios) {
                    $scope.updateDNOPins("", true, ios[i].PinId)
                }
            }
            $scope.model.features[index].enable = $scope.ui.featuresEnabled[index];
            $scope.ui.featuresDirty[$scope.model.features[index].label] = false
        }
    }
    ;
    $scope.getPinObject = function(pin) {
        var str = JSON.stringify({
            pin: pin
        });
        return str
    }
    ;
    $scope.unlock = function() {
        if (!$scope.daloState.servicePasswordAssigned) {
            stdDialog.showDialog("UnlockDialogTemplate")
        } else {
            $state.go("login", {
                previousState: "settings.gpios",
                requiredUser: "service"
            })
        }
    }
    ;
    $scope.pinsValid = function(mapping, params) {
        var countServiceUsage = function(mapping, params) {
            var currentService = mapping["pin" + params["pin"]].service;
            if (currentService == "none")
                return 0;
            var counter = 0;
            for (var pin in mapping) {
                if (mapping[pin].service == currentService) {
                    counter = counter + 1
                }
            }
            return counter
        };
        if (!mapping || angular.equals(mapping, {})) {
            return true
        }
        var ret = countServiceUsage(mapping, params);
        return ret == 0 || ret == 1
    }
    ;
    $scope.updateActiveTab = function(index) {
        if ($scope.ui.appMode) {
            $scope.tabs.active = index;
            var newSliderIndex = 0;
            for (var i = 0; i < $scope.tabs.active; i++) {
                if ($scope.model.features[i].visible && $scope.ui.featuresVisible[i] && $scope.isUserPermitted(i))
                    newSliderIndex++
            }
            $scope.updateActiveMargin(newSliderIndex)
        } else {
            $scope.tabs.active = $scope.tabs.active == index ? -1 : index
        }
    }
    ;
    $scope.isUserPermitted = function(index) {
        if (index < 0 || index == null)
            return true;
        var user = $scope.model.features[index].reqUser;
        var setAciveTab = index != $scope.tabs.active && $scope.tabs.active > -1 && !$scope.isUserPermitted($scope.tabs.active);
        if (user == "admin") {
            if (setAciveTab)
                $scope.tabs.active = index;
            return true
        } else {
            if (setAciveTab && $scope.hasServicePermission())
                $scope.tabs.active = index;
            return $scope.hasServicePermission()
        }
    }
    ;
    $scope.getIOTemplate = dm.util.templateUrls.getIOTemplate;
    $scope.dosave = function() {
        if ($scope.WIZARDACTIVE) {
            $scope.wizardForward()
        } else {
            $scope.save()
        }
    }
    ;
    $scope.save = function() {
        for (var featureInvalid in $scope.ui.featuresInvalid) {
            if ($scope.ui.featuresInvalid[featureInvalid])
                return
        }
        if ($scope.model.DNOPinsValid()) {
            $scope.loading = true;
            $scope.model.save().then(function() {
                dm.util.configRequest.showCfgSavedDialog()
            }, function(err) {
                if (err && err.error)
                    dm.util.configRequest.showCfgErrorDialog(err.error);
                else if (err && err.failure)
                    dm.util.configRequest.showCfgFailureDialog(err.failure);
                else if (err)
                    dm.util.configRequest.showCfgErrorDialog(err)
            }).finally(function() {
                $scope.loading = false
            })
        } else {
            invalidDNOConfigDlg = new dm.standardDialog.StandardDialog($scope,"DIALOG_TITLE_HINT",$translate.instant("IOCONFIG_DISABLEDNOIFSAVE"));
            invalidDNOConfigDlg.addButton("SAVE", "disableDNOAndSave()");
            invalidDNOConfigDlg.addButton("CANCEL", "standardDialog.close()");
            invalidDNOConfigDlg.showDialog()
        }
    }
    ;
    $scope.disableDNOAndSave = function() {
        invalidDNOConfigDlg.setShowLoading(true);
        $scope.model.disableDNORules().then(function() {
            invalidDNOConfigDlg.closeDialog();
            $scope.loading = true;
            $scope.model.save().then(function() {
                dm.util.configRequest.showCfgSavedDialog()
            }, function(err) {
                if (err && err.error)
                    dm.util.configRequest.showCfgErrorDialog(err.error);
                else if (err && err.failure)
                    dm.util.configRequest.showCfgFailureDialog(err.failure);
                else if (err)
                    dm.util.configRequest.showCfgErrorDialog(err)
            }).finally(function() {
                $scope.loading = false
            })
        }).finally(function() {
            invalidDNOConfigDlg.closeDialog()
        })
    }
    ;
    $scope.updateDNOPins = function(featureLabel, featureEnable, oldIOPinId) {
        var oldPin = parseInt(oldIOPinId);
        if (featureLabel != "GSTR_GPIO_TITLE_DNO" && featureEnable && oldPin >= 0 && $scope.model.dnoFeature && $scope.model.dnoFeature.enable) {
            var services = $scope.model.services;
            for (var i in $scope.model.dnoFeature.ios) {
                var ioMapping = $scope.model.dnoFeature.ios[i];
                if (services[ioMapping.service]["default-pin"] == oldIOPinId && ioMapping.PinId == -1) {
                    ioMapping.PinId = oldPin;
                    return
                }
            }
        }
    }
    ;
    $scope.onCloseAction = function() {
        $scope.model.reset();
        $scope.init(loginService.getLoggedInUser())
    }
    ;
    $scope.init(loginService.getLoggedInUser())
}
]);
angular.module("settings").directive("optionsClass", ["$parse", function($parse) {
    return {
        require: "select",
        link: function(scope, elem, attrs, ngSelect) {
            var optionsSourceStr = attrs.ngOptions.split(" ").pop()
              , getOptionsClass = $parse(attrs.optionsClass);
            scope.$watch(optionsSourceStr, function(items) {
                angular.forEach(items, function(item, index) {
                    var classes = getOptionsClass(item)
                      , option = elem.find("option")[index];
                    angular.forEach(classes, function(add, className) {
                        if (add)
                            angular.element(option).addClass(className);
                        else
                            angular.element(option).removeClass(className)
                    })
                })
            })
        }
    }
}
]);
angular.module("settings").controller("settingsHybEmCtrl", ["$scope", "$http", "$q", "settingsHelperFunctions", function($scope, $http, $q, settingsHelperFunctions) {
    $scope.loading = true;
    $scope.buttonsLocked = false;
    $scope.hybEmData = {};
    $scope.daloState = {
        isHybrid: function() {
            return true
        }
    };
    $scope.emDirOptions = [{
        val: "in",
        lbl: "CONSUMPTION"
    }, {
        val: "out",
        lbl: "FEED_IN"
    }];
    $scope.model = dm.model.OverviewSettings.getInstance("settingsOverviewCtrl", $scope);
    $scope.model.setAuthenticationLevel("admin");
    $scope.init = function() {
        $scope.loading = true;
        $scope.model.reset();
        $q.all([$scope.model.loadingPromise]).then(function(responses) {
            $scope.loading = false
        }, function() {
            $scope.loading = false;
            dm.util.configRequest.showCfgFailureDialog()
        }).finally(function() {
            $scope.loading = false
        })
    }
    ;
    $scope.$watch("model.HYB.EM.MODE", function() {
        if ($scope.model.HYB == undefined)
            return;
        if ($scope.model.HYB.EM.MODE == 0) {
            var origHYB = $scope.model.getOrigData("HYB");
            $scope.model.HYB.EM.POWER = origHYB.EM.POWER
        }
    }, true);
    $scope.isReservedValid = $scope.model.battModel.getValidator("data.HYB_BACKUP_RESERVED");
    $scope.isCriticalSOCValid = $scope.model.battModel.getValidator("data.HYB_BACKUP_CRITICALSOC");
    $scope.isPowerValid = $scope.model.getValidator("HYB.EM.POWER");
    $scope.save = function(callback) {
        if ($scope.buttonsLocked || !$scope.isPowerValid())
            return;
        $scope.loading = true;
        $scope.model.save().then(function() {
            dm.util.configRequest.showCfgSavedDialog()
        }, function(err) {
            if (err && err.error)
                dm.util.configRequest.showCfgErrorDialog(err.error)
        }).finally(function() {
            $scope.loading = false
        })
    }
    ;
    $scope.init()
}
]);
angular.module("settings").controller("settingsInverterCtrl", ["$scope", "$state", "$http", "$q", "settingsHelperFunctions", "standardDialog", function($scope, $state, $http, $q, settingsHelperFunctions, standardDialog) {
    var stdDialog = new dm.standardDialog.StandardDialog($scope);
    $scope.loading = true;
    $scope.buttonsLocked = false;
    $scope.model = dm.model.InverterSettings.getInstance("settingsInverterCtrl", $scope);
    $scope.allWP = {
        val: null
    };
    if ($scope.WIZARDACTIVE) {
        $scope.wizardButtons.showForward = true;
        $scope.wizardButtons.showBackward = true;
        $scope.wizardButtons.showAbort = false;
        $scope.wizardButtons.showSkipNetworkSetup = false;
        $scope.wizardButtons.forwardText = "WIZARD_FORWARD";
        $scope.ShowWizardLoading()
    }
    $scope.init = function() {
        $scope.loading = true;
        $q.all([$scope.model.loadingPromise]).finally(function() {
            $scope.model.reset();
            $scope.loading = false;
            if ($scope.WIZARDACTIVE)
                $scope.HideWizardLoading()
        })
    }
    ;
    $scope.setForAll = function() {
        stdDialog.showDialog("SetForAllTemplate");
        return false
    }
    ;
    $scope.setForAllOK = function() {
        for (var LNR in $scope.model.inverters) {
            var inverter = $scope.model.inverters[LNR];
            inverter.Wp = $scope.allWP.val
        }
    }
    ;
    $scope.isSystemNameValid = $scope.model.getDirtyValidator("misc.systemName");
    $scope.replaceLNR = function(text) {
        return text.replace("%X%", $scope.model.curLNR)
    }
    ;
    $scope.validate = function() {
        for (var LNR in $scope.inverters) {
            var data = $scope.inverters[LNR];
            $scope.curLNR = LNR;
            if (!$scope.isNameValid(data.name)) {
                stdDialog.showDialog("InvalidNameTemplate");
                return false
            }
            if (!$scope.isWpValid(data.Wp)) {
                stdDialog.showDialog("InvalidPowerTemplate");
                return false
            }
        }
        if (!$scope.isSystemNameValid()) {
            stdDialog.showDialog("InvalidSystemNameTemplate");
            return false
        }
        return true
    }
    ;
    var validate = function() {
        if (!$scope.model.getValidator("inverters")()) {
            var inverter = $scope.model.inverters[$scope.model.curLNR];
            if (!$scope.model.isNameValid(inverter.name)) {
                stdDialog.showDialog("InvalidNameTemplate");
                return false
            }
            if (!$scope.model.isWpValid(inverter.Wp)) {
                stdDialog.showDialog("InvalidPowerTemplate");
                return false
            }
        } else if (!$scope.model.getValidator("misc.systemName")()) {
            stdDialog.showDialog("InvalidSystemNameTemplate")
        }
    };
    $scope.save = function() {
        if ($scope.buttonsLocked)
            return;
        $scope.buttonsLocked = true;
        $scope.loading = true;
        $scope.model.save().then(function() {
            dm.util.configRequest.showCfgSavedDialog()
        }, function(err) {
            if (err && err.error)
                dm.util.configRequest.showCfgErrorDialog(err.error);
            else if (err && err.failure)
                dm.util.configRequest.showCfgFailureDialog(err.failure);
            else if (err)
                dm.util.configRequest.showCfgErrorDialog(err);
            else
                validate()
        }).finally(function() {
            $scope.loading = false;
            $scope.buttonsLocked = false
        })
    }
    ;
    $scope.init()
}
]);
var aMeterState = dm.model.aMeterState;
angular.module("settings").controller("settingsMeterCtrl", ["$scope", "$state", "$http", "$q", "settingsHelperFunctions", function($scope, $state, $http, $q, settingsHelperFunctions) {
    $scope.loading = true;
    $scope.buttonsLocked = false;
    $scope.meterModel = dm.model.MeterSettings.getInstance("settingsMeterCtrl", $scope);
    $scope.daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    $scope.meter = {
        primary: {
            type: "none"
        },
        secondary: {
            type: "none"
        }
    };
    $scope.primaryEnabled = false;
    var stdDialog = new dm.standardDialog.StandardDialog($scope);
    var typewatch = null;
    if ($scope.WIZARDACTIVE) {
        $scope.wizardButtons.showForward = true;
        $scope.wizardButtons.showBackward = true;
        $scope.wizardButtons.showAbort = false;
        $scope.ShowWizardLoading()
    }
    $scope.init = function(reset) {
        $scope.loading = true;
        $scope.buttonsLocked = true;
        $q.all([$scope.meterModel.loadingPromise, $scope.daloState.loadingPromise]).then(function() {
            $scope.meterModel.reset();
            $scope.buttonsLocked = false;
            $scope.loading = false;
            $scope.meterModel.startMeterPolling();
            $scope.meter.primary.type = $scope.meterModel.primaryMeterType();
            $scope.primaryEnabled = $scope.meter.primary.type != "none";
            $scope.meter.secondary.type = "none";
            if (typewatch) {
                typewatch();
                typewatch = null
            }
            typewatch = $scope.$watch("meter.primary", function(newVal, oldVal) {
                if ($scope.meterModel && newVal.type != oldVal.type)
                    $scope.meterModel.primaryMeterType(newVal.type)
            }, true)
        }, function(response) {
            return settingsHelperFunctions.checkStatusResponseAndRedirect(response, $state, "meter")
        }).finally(function() {
            if ($scope.WIZARDACTIVE)
                $scope.HideWizardLoading();
            if (reset) {
                $scope.meterModel._save()
            }
        })
    }
    ;
    $scope.save = function(callback, setOrig) {
        if ($scope.buttonsLocked || !$scope.isImpKWhValid())
            return;
        $scope.meterModel._save(setOrig).then(function(resp) {
            dm.util.configRequest.showCfgSavedDialog()
        }, function(err) {
            dm.util.configRequest.showCfgErrorDialog(err)
        })
    }
    ;
    $scope.getAbsoluteMeterPower = function(state, power) {
        if (state == aMeterState.OK)
            return Math.abs(Math.floor(power)) + " W";
        return ""
    }
    ;
    $scope.printMeterState = function(primaryMeter, meterState, power, position) {
        switch (meterState) {
        case aMeterState.OK:
            var isLoadMeter = position && position === 1;
            if (primaryMeter && !isLoadMeter) {
                return power < 0 ? "FEED_IN" : "CONSUMPTION"
            } else {
                return power < 0 ? "METER_CONSUMPTION" : "METER_PRODUCTION"
            }
        case aMeterState.ERROR:
            return "METER_ERROR_OPEN_LOOP";
        case aMeterState.TimedOut:
            return "TIMEOUT";
        case aMeterState.Searching:
            return "SEARCHING"
        }
        return ""
    }
    ;
    $scope.onDelteSettingClicked = function(primary, index) {
        if (primary) {
            $scope.meter.primary.type = "none";
            $scope.primaryEnabled = false
        } else {
            $scope.meterModel.configMeter.secondary.splice(index, 1)
        }
    }
    ;
    $scope.onAddSecondaryMeter = function() {
        if (!$scope.meterModel.secondaryMeterCanBeConfigured()) {
            stdDialog.showDialog("NoMoreMeterTemplate")
        } else if (!$scope.meterModel.isPrimaryMeterConfigured()) {
            stdDialog.showDialog("NoPrimaryMeterTemplate")
        } else {
            $scope.meterModel.addNewSecondaryMeter($scope.meter.secondary.type);
            stdDialog.showDialog("MeterDialogTemplate")
        }
    }
    ;
    $scope.onEnablePrimaryMeter = function() {
        $scope.meterModel.configMeter.primary.meterState = 0;
        $scope.meterModel.configMeter.primary.timeOutCount = 10;
        $scope.meterModel.copyMeterDataForDialog(true);
        $scope.primaryEnabled = true;
        $scope.meterModel.saveConfig();
        $scope.openMeterDialog()
    }
    ;
    $scope.openMeterDialog = function() {
        stdDialog.showDialog("MeterDialogTemplate")
    }
    ;
    $scope.dialogCallback = function() {
        if ($scope.meterModel.validate()) {
            $scope.meterModel.copyDialogDataBack();
            $scope.meterModel.dialogOpenState(false, true);
            stdDialog.closeDialog()
        }
    }
    ;
    $scope.resetMeter = function() {
        $scope.meterModel.restoreInitData()
    }
    ;
    $scope.isImpKWhValid = $scope.meterModel.getDirtyValidator("dialogConfig.s0settings.ImpKWh");
    $scope.init();
    $scope.$on("$destroy", function() {
        $scope.meterModel.stopMeterPolling()
    })
}
]);
angular.module("settings").controller("settingsModbusCtrl", ["$scope", "$state", "$http", "$q", "settingsHelperFunctions", function($scope, $state, $http, $q, settingsHelperFunctions) {
    var daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    var stdDialog = new dm.standardDialog.StandardDialog($scope);
    $scope.loading = true;
    $scope.buttonsLocked = false;
    $scope.hasExtendedModbusInterface = false;
    $scope.deviceTreeInfo = null;
    $scope.prioList = [];
    $scope.init = function() {
        $scope.loading = true;
        $q.all([dm.util.configRequest.get(["/config/modbus/"]), dm.util.configRequest.get(["/status/ics/"]), dm.util.configRequest.get(["/components/datamanager/attributes/"]), dm.util.configRequest.get(["/config/meter/admin/primary"]), daloState.loadingPromise]).then(function(responses) {
            try {
                $scope.modbus = responses[0].modbus;
                $scope.ics = responses[1].ics;
                for (var _i = 0, _a = Object.keys($scope.ics.prio); _i < _a.length; _i++) {
                    var elem = _a[_i];
                    $scope.prioList[$scope.ics.prio[elem] - 1] = elem
                }
                $scope.isRTUMeterConfigured = responses[3].primary.available && responses[3].primary.type == "smrtu";
                $scope.IsMBRTUAvailable = daloState.isMBRTUAvailable;
                $scope.deviceTreeInfo = JSON.parse(function(comp) {
                    for (var idx in comp) {
                        return comp[idx].deviceTreeInfo.trim()
                    }
                    return JSON.stringify({})
                }(responses[2]));
                $scope.modbus.slave.rtuif = $scope.modbus.slave.rtuif == "default" ? $scope.deviceTreeInfo.modbus.extras.defaults.slave : $scope.modbus.slave.rtuif;
                $scope.hasExtendedModbusInterface = $scope.deviceTreeInfo.modbus.available.length > 1
            } catch (e) {}
            $scope.loading = false
        }, function(response) {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            settingsHelperFunctions.checkStatusResponseAndRedirect(response, $state)
        })
    }
    ;
    $scope.prioListMapping = function(type) {
        switch (type) {
        case "io":
            return "CTR_PRIO_EVU";
        case "dyn":
            return "CTR_PRIO_DPL";
        case "mb":
            return "CTR_PRIO_MB"
        }
    }
    ;
    $scope.isPortValid = function() {
        try {
            if (!($scope.modbus.slave.mode == "tcp"))
                return true;
            var val = $scope.modbus.slave.port;
            return typeof val == "number" && val >= 0 && val <= 65535 && Math.floor(val) == val && val != 80
        } catch (e) {
            return false
        }
    }
    ;
    $scope.isAddressValid = function(modbus) {
        try {
            if (!(modbus.mode == "rtu" || modbus.mode == "tcp"))
                return true;
            var val = modbus.scAddress;
            return typeof val == "number" && val >= 1 && val <= 255 && Math.floor(val) == val
        } catch (e) {
            return false
        }
    }
    ;
    $scope.isRestrictionIPValid = function(modbus) {
        try {
            if (!(modbus.mode == "tcp" && modbus.ctr.on && modbus.ctr.restriction.on))
                return true;
            var val = modbus.ctr.restriction.ip;
            var regex = /^(?:[0-9]|[1-9][0-9]|[1][0-9][0-9]|[2][0-4][0-9]|[2][5][0-5])(?:\.(?:[0-9]|[1-9][0-9]|[1][0-9][0-9]|[2][0-4][0-9]|[2][5][0-5])){3}(?:|(?:\/(?:[1-9]|[1][0-9]|[2][0-9]|[3][0-1])))(?:(?:,)(?:[0-9]|[1-9][0-9]|[1][0-9][0-9]|[2][0-4][0-9]|[2][5][0-5])(?:\.(?:[0-9]|[1-9][0-9]|[1][0-9][0-9]|[2][0-4][0-9]|[2][5][0-5])){3}(?:|(?:\/(?:[1-9]|[1][0-9]|[2][0-9]|[3][0-1]))))*$/;
            return regex.test(val)
        } catch (e) {
            return false
        }
    }
    ;
    $scope.item2OptionText = function(masterOrSlave, item) {
        if ($scope.deviceTreeInfo.modbus.extras.defaults[masterOrSlave] == item)
            return item + " | default";
        return item
    }
    ;
    $scope.save = function(callback) {
        if ($scope.buttonsLocked || !$scope.isPortValid() || !$scope.isAddressValid($scope.modbus.slave) || !$scope.isRestrictionIPValid($scope.modbus.slave))
            return;
        if ($scope.hasExtendedModbusInterface && $scope.isRTUMeterConfigured && $scope.modbus.slave.mode == "rtu") {
            $scope.modbus.slave.rtuif = $scope.deviceTreeInfo.modbus.extras.defaults.slave
        }
        if (!$scope.hasExtendedModbusInterface && $scope.isRTUMeterConfigured && $scope.modbus.slave.mode == "rtu") {
            stdDialog.showDialog("ModbusConfigInvalid");
            return
        }
        var mbSettings = {
            modbus: angular.copy($scope.modbus)
        };
        var onSuccess = function() {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            if (callback)
                callback();
            else
                dm.util.configRequest.showCfgSavedDialog()
        };
        var onError = function(error) {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            dm.util.configRequest.showCfgErrorDialog(error)
        };
        var onFailure = function(failure) {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            dm.util.configRequest.showCfgFailureDialog(failure)
        };
        $scope.buttonsLocked = true;
        $scope.loading = true;
        dm.util.configRequest.save("/config/modbus/", mbSettings, onSuccess, onError, onFailure)
    }
    ;
    $scope.init()
}
]);
angular.module("settings").controller("settingsNetworkCtrl", ["$scope", "$state", "$translate", "$http", "$q", "settingsHelperFunctions", "standardDialog", function($scope, $state, $translate, $http, $q, settingsHelperFunctions, standardDialog) {
    var wpsCancled = false;
    var wpsStateResponse = null;
    var stdDialog = new dm.standardDialog.StandardDialog($scope);
    var policyTerms = dm.model.PolicyTerms.getInstance("PushServiceCtrl", $scope);
    $scope.daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    $scope.daloState.wpsTriggered = false;
    var dict = {};
    if ($scope.WIZARDACTIVE) {
        $scope.wizardButtons.showForward = true;
        $scope.wizardButtons.showBackward = true;
        $scope.wizardButtons.showAbort = false;
        $scope.ShowWizardLoading()
    }
    var onError = function(response) {
        $scope.isPageLoading = false;
        $scope.buttonsLocked = false;
        settingsHelperFunctions.checkStatusResponseAndRedirect(response, $state, "net")
    };
    var onSuccess = function() {
        $scope.isPageLoading = false;
        $scope.buttonsLocked = false
    };
    var _onError = function(error) {
        $scope.isPageLoading = false;
        $scope.buttonsLocked = false;
        dm.util.configRequest.showCfgErrorDialog(error)
    };
    var onFailure = function(failure) {
        $scope.isPageLoading = false;
        $scope.buttonsLocked = false;
        dm.util.configRequest.showCfgFailureDialog("net")
    };
    var activateConfiguration = function() {
        $http.get("/admincgi-bin/reconfigureNetwork.cgi").then(function(aResponse) {
            if (aResponse.data && aResponse.data.ok) {
                onSuccess()
            } else
                _onError(aResponse.reason)
        }, _onError, onFailure)
    };
    $scope.isPageLoading = true;
    $scope.isNetListLoading = true;
    $scope.buttonsLocked = false;
    $scope.wlanIpConnectButtonEnabled = false;
    $scope.wlanIpDisconnectButtonEnabled = false;
    $scope.connectionRemoveMessage = "";
    $scope.isHiddenWLANSelected = false;
    $scope.hiddenWLAN = {
        ssid: "",
        security: "WPA-PSK",
        ui: {
            rowCSS: ""
        }
    };
    $scope.ui = {
        swenabled: false,
        nightMode: false,
        showAPPSK: false,
        loadingFailed: false,
        savingWifi: false,
        invalidConfiguredNet: "",
        mobileApp: $scope.daloState.queryParameters.app != undefined
    };
    $scope.sigLevel1 = -90;
    $scope.sigLevel2 = -75;
    $scope.sigLevel3 = -55;
    $scope.init = function() {
        $scope.isPageLoading = true;
        $scope.isNetListLoading = true;
        $scope.daloState.loadingPromise.then(function() {
            $scope.isWlanAvailable = $scope.daloState.isWlanAvailable;
            $scope.config = dm.model.NetworkConfig.getInstance("settingsNetworkCtrl", $scope);
            $scope.status = dm.model.NetworkStatus.getInstance("settingsNetworkCtrl", $scope);
            $scope.solarweb = dm.model.SolarWebSettings.getInstance("settingsNetworkCtrl", $scope);
            $scope.ap = dm.model.APSettings.getInstance("settingsNetworkCtrl", $scope);
            $scope.ap.resetModel();
            $q.all([$scope.config.loadingPromise, $scope.solarweb.loadingPromise, $scope.ap.loadingPromise, $translate(["WLAN_OUTOFRANGE", "WLAN_CONNECTED", "WLAN_SECURE", "WLAN_SECOPEN", "WLAN_CHANNEL", "WLAN_SAVED", "NET_SIG_GOOD", "NET_SIG_MIDDLE", "NET_SIG_BAD", "HIDDEN_SSID", "NET_WLAN_CONNECTION_REMOVE_MSG", "WIZARD_FORWARD", "WIZARD_CONNECT", "HINT_IP_ERR", "HINT_IP_RESERVED"]), policyTerms.loadingPromise]).then(function(responses) {
                $scope.ui.dhcp = $scope.config.networkConfigs.wlan0.dhcpEnabled;
                $scope.ui.nodhcp = !$scope.ui.dhcp;
                $scope.config.reset();
                $scope.solarweb.reset();
                $scope.ap.reset();
                dict = responses[3];
                var selIface = "eth0";
                if ($scope.ap.ssid != "" && $scope.daloState.isWlanAvailable) {
                    $scope.config.networkConfigs.inetConnection.selInetIface = "uap0"
                }
                var sysName = dm.util.string.htmlDecode($scope.daloState.systemName);
                if ($scope.daloState.isWlanAvailable)
                    selIface = $scope.config.networkConfigs.inetConnection.selInetIface;
                else
                    selIface = "eth0";
                $scope.ui.swenabled = $scope.solarweb.swSettings.connectionKeepAlive || $scope.solarweb.swSettings.dataSendMode !== "never";
                $scope.ui.nightMode = $scope.solarweb.logSettings.logging.smps_shutdown_delay_enable;
                if ($scope.WIZARDACTIVE) {
                    if (selIface == "wlan0" || selIface == "eth0") {
                        $scope.wizardButtons.forwardText = "WIZARD_CONNECT";
                        $scope.requestPolicyTerms()
                    }
                    if ($scope.config.ifaceEth0ConfigFields.hostname == "") {
                        if ($scope.daloState.connectedViaAP && $scope.daloState.isWlanAvailable && selIface == "eth0")
                            $scope.config.networkConfigs.inetConnection.selInetIface = "wlan0";
                        sysName = sysName.replace(/\s/g, "");
                        if ($scope.isHostNameValid(sysName))
                            $scope.config.ifaceEth0ConfigFields.hostname = dm.util.string.htmlDecode(sysName);
                        else
                            $scope.ui.invalidConfiguredNet = "(LAN)"
                    }
                    if ($scope.daloState.isWlanAvailable && $scope.config.ifaceWlan0ConfigFields.hostname == "") {
                        sysName = sysName.replace(/\s/g, "");
                        if ($scope.isHostNameValid(sysName))
                            $scope.config.ifaceWlan0ConfigFields.hostname = sysName;
                        else
                            $scope.ui.invalidConfiguredNet = $scope.ui.invalidConfiguredNet.length == 0 ? "(WLAN)" : "(LAN, WLAN)"
                    }
                    $scope.HideWizardLoading();
                    $scope.wizardButtons.showKeepAPOpened = false;
                    $scope.wizardButtons.showSkipNetworkSetup = true
                }
                $scope.isPageLoading = false;
                $scope.status.loadingPromise.then(function() {
                    $scope.status.reset();
                    $scope.isNetListLoading = false;
                    if ($scope.status.wlanNetworks) {
                        for (var i = 0; i < $scope.status.wlanNetworks.length; i++) {
                            if ($scope.status.wlanNetworks[i].ssid == $scope.config.ifaceWlan0ConfigFields.network.ssid)
                                $scope.selectWLANNetwork($scope.status.wlanNetworks[i])
                        }
                    }
                })
            }, function(err) {
                onError(err)
            })
        })
    }
    ;
    $scope.showInvalidHostNameHint = function() {
        var hintHostNameDialog = new dm.standardDialog.StandardDialog($scope,"DIALOG_TITLE_HINT","{{'DIALOG_HINT_HOSTNAME' |translate:ui }} </br> ","RECON_CLOSE");
        hintHostNameDialog.showDialog()
    }
    ;
    $scope.requestPolicyTerms = function() {
        if ($scope.ui.swenabled || $scope.ui.nightMode) {
            policyTerms.showPolicytermsDialog1($scope.daloState.userAuth, "solarweb", $scope, function() {
                $scope.solarweb.swSettings.dataSendMode = $scope.ui.swenabled ? "hourly" : "never";
                $scope.solarweb.swSettings.connectionKeepAlive = $scope.ui.swenabled;
                $scope.solarweb.logSettings.logging.smps_shutdown_delay_enable = $scope.ui.nightMode;
                $scope.ui.prevSWEnabledState = $scope.ui.swenabled;
                $scope.ui.prevNighModeEnabledState = $scope.ui.nightMode;
                if ($scope.ui.invalidConfiguredNet.length > 0)
                    $scope.showInvalidHostNameHint()
            }, function() {
                $scope.solarweb.swSettings.dataSendMode = "never";
                $scope.solarweb.swSettings.connectionKeepAlive = false;
                $scope.solarweb.logSettings.logging.smps_shutdown_delay_enable = false;
                $scope.ui.nightMode = false;
                $scope.ui.swenabled = false;
                $scope.ui.prevSWEnabledState = false;
                $scope.ui.prevNighModeEnabledState = false;
                if ($scope.ui.invalidConfiguredNet.length > 0)
                    $scope.showInvalidHostNameHint()
            })
        }
    }
    ;
    $scope.getSavedState = function(net) {
        if (net.hidden)
            return false;
        if (net.offline)
            return true;
        if (net.show && net.ssid != "") {
            if ($scope.config.ifaceWlan0ConfigFields.network.ssid == net.ssid)
                return true
        }
        return false
    }
    ;
    $scope.getWLANSSIDClass = function(net) {
        if (net.offline)
            return "WLAN_SSID";
        if (net.show && net.ssid != "")
            if (net.ssid == $scope.status.ConSSID)
                return "WLAN_SSID WLAN_connected";
        return "WLAN_SSID"
    }
    ;
    $scope.getWLANSymbolClass = function(net) {
        var WLANSymbolClass = "WLAN_SYMBOL ";
        if (net.offline) {
            WLANSymbolClass += " seperator"
        } else if (net.show && net.ssid != "") {
            WLANSymbolClass = "WLAN_SYMBOL Signal0";
            if (net.signalLevel >= $scope.sigLevel1)
                WLANSymbolClass = "WLAN_SYMBOL Signal1";
            if (net.signalLevel >= $scope.sigLevel2)
                WLANSymbolClass = "WLAN_SYMBOL Signal2";
            if (net.signalLevel >= $scope.sigLevel3)
                WLANSymbolClass = "WLAN_SYMBOL Signal3"
        }
        return WLANSymbolClass
    }
    ;
    $scope.getSignalStrength = function(net) {
        if (net.offline)
            return "";
        if (net.show && net.ssid != "") {
            if (net.signalLevel >= $scope.sigLevel3)
                return "NET_SIG_GOOD";
            if (net.signalLevel >= $scope.sigLevel2)
                return "NET_SIG_MIDDLE";
            return "NET_SIG_BAD"
        }
        return ""
    }
    ;
    $scope.selectHiddenWLANNetwork = function() {
        stdDialog.showDialog("HiddenWLANConnectDialogTemplate")
    }
    ;
    $scope.selectWLANNetwork = function(wlanNetwork) {
        $scope.config.selectedWLAN = wlanNetwork;
        if ($scope.config.selectedWLAN == $scope.hiddenConfiguredWLAN) {
            $scope.wlanIpConnectButtonEnabled = true
        } else {
            $scope.wlanIpConnectButtonEnabled = !$scope.config.selectedWLAN.offline
        }
        var allowRemoveNet = false;
        if ($scope.config.selectedWLAN.offline) {
            allowRemoveNet = true
        } else if ($scope.config.selectedWLAN.show && $scope.config.selectedWLAN.ssid != "") {
            if ($scope.config.ifaceWlan0ConfigFields.network.ssid == $scope.config.selectedWLAN.ssid)
                allowRemoveNet = true
        }
        $scope.wlanIpDisconnectButtonEnabled = allowRemoveNet;
        if (wlanNetwork == $scope.hiddenConfiguredWLAN)
            $scope.wlanIpDisconnectButtonEnabled = true
    }
    ;
    $scope.showWLANConnectDialog = function(idx) {
        var template = "WLANConnectDialogTemplate";
        if ($scope.config.selectedWLAN == $scope.hiddenConfiguredWLAN)
            template = "HiddenWLANConnectDialogTemplate";
        stdDialog.showDialog(template)
    }
    ;
    $scope.parseSSID = function(msg) {
        return msg.replace("%SSID%", $scope.config.selectedWLAN.ssid)
    }
    ;
    $scope.showWLANDisconnectDialog = function() {
        if ($scope.wlanIpDisconnectButtonEnabled) {
            stdDialog.showDialog("WLANDisconnectDialogTemplate")
        }
    }
    ;
    $scope.getSaveWLANAllowed = function() {
        return $scope.isHostNameValid($scope.ui.displayedWifiIPSettings.hostname) && $scope.isIPValid($scope.ui.displayedWifiIPSettings.ipAddress) && $scope.isIPValid($scope.ui.displayedWifiIPSettings.gateway) && $scope.isIPValid($scope.ui.displayedWifiIPSettings.nameservers) && $scope.isMaskValid($scope.ui.displayedWifiIPSettings.subnetMask)
    }
    ;
    $scope.onWlanIpConfigDialogYes = function() {
        $scope.config.ifaceWlan0ConfigFields.IpV = $scope.ui.displayedWifiIPSettings.IpV;
        $scope.config.ifaceWlan0ConfigFields.dhcpEnabled = $scope.ui.displayedWifiIPSettings.dhcpEnabled;
        $scope.config.ifaceWlan0ConfigFields.ipAddress = $scope.ui.displayedWifiIPSettings.ipAddress;
        $scope.config.ifaceWlan0ConfigFields.subnetMask = $scope.ui.displayedWifiIPSettings.subnetMask;
        $scope.config.ifaceWlan0ConfigFields.gateway = $scope.ui.displayedWifiIPSettings.gateway;
        $scope.config.ifaceWlan0ConfigFields.hostname = $scope.ui.displayedWifiIPSettings.hostname;
        $scope.config.ifaceWlan0ConfigFields.nameservers = $scope.ui.displayedWifiIPSettings.nameservers;
        $scope.ui.savingWifi = true;
        $scope.config.saveWlanIPSettings().then(function() {}, function(err) {
            dm.util.configRequest.showCfgErrorDialog(err)
        }).finally(function() {
            $scope.ui.savingWifi = false
        })
    }
    ;
    $scope.onWlanNetworkConfigDialogYes = function() {
        if (!$scope.isKeyValid($scope.config.selectedWLAN.wifiPassword, $scope.config.selectedWLAN))
            return;
        var net = $scope.config.selectedWLAN;
        var wpa2 = false;
        var wpa = false;
        var wep = false;
        var sec = "NONE";
        for (var i = 0; i < net.security.length; i++) {
            if (typeof net.security[i] == "string") {
                if (net.security[i].search("WPA2-") == 0)
                    wpa2 = true;
                else if (net.security[i].search("WPA-") == 0)
                    wpa = true;
                else if (net.security[i].search("WEP") == 0)
                    wep = true
            }
        }
        if (wep)
            sec = "WEP";
        if (wpa)
            sec = "WPA-PSK";
        if (wpa2)
            sec = "WPA-PSK";
        var data = {
            ssid: "" + net.ssid,
            psk: "" + net.wifiPassword,
            key_mgmt: "" + sec
        };
        $scope.config.ifaceWlan0ConfigFields.network = data;
        $scope.wlanIpDisconnectButtonEnabled = true;
        $scope.ui.savingWifi = true;
        $scope.config.saveWlanNetworkSettings().then(function() {}, function(err) {
            dm.util.configRequest.showCfgErrorDialog(err)
        }).finally(function() {
            $scope.ui.savingWifi = false
        })
    }
    ;
    $scope.onDisconnectDialogYes = function() {
        var data = {
            ssid: "",
            key_mgmt: "WPA-PSK",
            psk: "12345678"
        };
        $scope.config.ifaceWlan0ConfigFields.network = data;
        $scope.savingWifi = true;
        $scope.isNetListLoading = true;
        $scope.config.saveWlanNetworkSettings().then(function() {
            $scope.savingWifi = false;
            $scope.isNetListLoading = false;
            $scope.wlanIpDisconnectButtonEnabled = true
        });
        if ($scope.config.selectedWLAN == $scope.hiddenConfiguredWLAN) {
            $scope.status.wlanNetworks = $scope.status.wlanNetworks.slice(0, $scope.status.wlanNetworks.length - 2);
            delete $scope.hiddenConfiguredWLAN
        }
    }
    ;
    $scope.onHiddenWLANConnectDialogYes = function() {
        if (!$scope.isKeyValid($scope.hiddenWLAN.wifiPassword, $scope.hiddenWLAN.security))
            return;
        var data = {
            ssid: "" + $scope.hiddenWLAN.ssid,
            psk: "" + $scope.hiddenWLAN.wifiPassword,
            key_mgmt: "" + $scope.hiddenWLAN.security
        };
        $scope.config.ifaceWlan0ConfigFields.network = data;
        var wlanListEntry = {
            offline: false,
            ssid: $scope.hiddenWLAN.ssid,
            security_type: $scope.hiddenWLAN.security,
            show: true,
            hidden: true
        };
        if (!$scope.hiddenConfiguredWLAN) {
            $scope.hiddenConfiguredWLAN = wlanListEntry;
            $scope.status.wlanNetworks.push($scope.hiddenConfiguredWLAN)
        } else {
            $scope.hiddenConfiguredWLAN = wlanListEntry
        }
        $scope.selectWLANNetwork($scope.hiddenConfiguredWLAN);
        $scope.ui.savingWifi = true;
        $scope.config.saveWlanNetworkSettings().then(function() {}, function(err) {
            dm.util.configRequest.showCfgErrorDialog(err)
        }).finally(function() {
            $scope.ui.savingWifi = false
        })
    }
    ;
    $scope.showWlanConfigDialog = function() {
        $scope.ui.displayedWifiIPSettings = angular.copy($scope.config.ifaceWlan0ConfigFields);
        stdDialog.showDialog("WlanConfigDialogTemplate")
    }
    ;
    $scope.showWlanNetwork = function(wlanNetwork) {
        return wlanNetwork.offline || wlanNetwork.show && wlanNetwork.ssid != ""
    }
    ;
    $scope.getIPErrorHint = function(iface) {
        var ipAddr = "";
        if (iface == "wifi")
            ipAddr = "" + $scope.ui.displayedWifiIPSettings.ipAddress;
        else
            ipAddr = "" + $scope.config[iface].ipAddress;
        if (dm.util.string.StartsWith(ipAddr, "192.168.250") || dm.util.string.StartsWith(ipAddr, "169.254.0"))
            return dict["HINT_IP_RESERVED"];
        return dict["HINT_IP_ERR"]
    }
    ;
    $scope.isAPRange = function(ipAddr) {
        return dm.util.string.StartsWith(ipAddr, "192.168.250") || dm.util.string.StartsWith(ipAddr, "169.254.0")
    }
    ;
    $scope.isIPValid = function(value) {
        if (!value)
            return false;
        if (value instanceof Array) {
            var valid_1 = true;
            for (var i in value) {
                valid_1 = valid_1 && $scope.isIPValid(value[i])
            }
            return valid_1
        }
        if (value == "0.0.0.0")
            return false;
        if (value == "255.255.255.255")
            return false;
        if (value == "127.0.0.1")
            return false;
        if (dm.util.string.StartsWith(value, "192.168.250"))
            return false;
        if (dm.util.string.StartsWith(value, "169.254.0"))
            return false;
        var regexIP = /^(?:[0-9]|[1-9][0-9]|[1][0-9][0-9]|[2][0-4][0-9]|[2][5][0-5])(?:\.(?:[0-9]|[1-9][0-9]|[1][0-9][0-9]|[2][0-4][0-9]|[2][5][0-5])){2}(?:\.(?:[1-9]|[1-9][0-9]|[1][0-9][0-9]|[2][0-4][0-9]|[2][5][0-5]))$/;
        var valid = value.match(regexIP) == null ? false : true;
        return valid
    }
    ;
    $scope.isMaskValid = function(value) {
        if (!value)
            return false;
        var regexMask = /^(?:0|128|192|224|240|248|252|254|255)(\.(?:0|128|192|224|240|248|252|254|255)){2}(\.(?:0|128|192|224|240|248|252|254))$/;
        if (value.match(regexMask) == null ? false : true) {
            var nums = value.split(".");
            for (var i = 0; i < nums.length - 1; i++) {
                if (nums[i] != "255" && nums[i + 1] != "0")
                    return false
            }
        } else {
            return false
        }
        return true
    }
    ;
    $scope.getSecurityType = function(net) {
        var security_type = "open";
        if (!net.offline && net.show && net.ssid != "") {
            var open_1 = true
              , wep = false
              , wpa = false
              , wpa2 = false
              , security = false;
            for (var i = 0; i < net.security.length; i++) {
                if (typeof net.security[i] == "string") {
                    if (net.security[i].search("WPA2-") == 0)
                        wpa2 = true;
                    else if (net.security[i].search("WPA-") == 0)
                        wpa = true;
                    else if (net.security[i].search("WEP") == 0)
                        wep = true
                }
            }
            if (open_1)
                security_type = "open";
            if (wep)
                security_type = "WEP";
            if (wpa)
                security_type = "WPA";
            if (wpa2)
                security_type = "WPA2"
        }
        return security_type
    }
    ;
    $scope.isWEPKeyValid = function(key) {
        if (!key)
            return false;
        var regex = /^[a-fA-F0-9]{10,26}$/;
        var valid = key.match(regex) == null ? false : true;
        return valid
    }
    ;
    $scope.isWPAKeyValid = function(key) {
        if (!key)
            return false;
        var regex = /^[\x20-\x7E]{8,63}$/;
        var valid = key.match(regex) == null ? false : true;
        return valid
    }
    ;
    $scope.isKeyValid = function(key, type) {
        if (typeof type != "string")
            type = $scope.getSecurityType(type);
        if (type == "open")
            return true;
        if (!key)
            return false;
        if (type == "WEP")
            return $scope.isWEPKeyValid(key);
        else
            return $scope.isWPAKeyValid(key)
    }
    ;
    $scope.isHostNameValid = function(hostName) {
        if (!hostName)
            return true;
        var regex = /^[0-9a-zA-Z][0-9a-zA-Z\\-]{0,61}[0-9a-zA-Z]$|^$/;
        return hostName.match(regex) == null ? false : true
    }
    ;
    $scope.onHwIpSwitchDialogOk = function() {
        activateConfiguration()
    }
    ;
    $scope.save = function() {
        if ($scope.buttonsLocked || !$scope.config.validate())
            return;
        if ($scope.isIfaceSelected("uap0")) {
            if (!$scope.ap.validate()) {
                $scope.ap.setAllDirty();
                $scope.ap.forceValidation = true;
                return
            }
            $scope.ap.resetSsid = false;
            $scope.isPageLoading = true;
            $scope.ap.save().then(function() {
                dm.util.configRequest.get("/status/io/hwipswitch/").then(function(aData) {
                    if (aData.hwipswitch) {
                        var hintIOSwitchDlg = new dm.standardDialog.StandardDialog($scope,"DIALOG_TITLE_HINT","{{'DIALOG_IP_SWITCH_01' |translate }} </br> {{'DIALOG_IP_SWITCH_02' |translate }}","RECON_CLOSE");
                        hintIOSwitchDlg.showDialog();
                        $scope.isPageLoading = false
                    } else {
                        dm.util.ajaxRequest.get("/admincgi-bin/reconfigureNetwork.cgi?operation=configuap");
                        var hintDlg_1 = new dm.standardDialog.StandardDialog($scope,"DIALOG_TITLE_HINT","{{'RECON_WLAN_MESSAGE_01_01' |translate }} <b>" + $scope.ap.ssid + "</b>" + "{{'RECON_WLAN_MESSAGE_01_02' |translate }}" + "<a target='_blank' href='http://datamanager'>http://datamanager</a> {{'RECON_WLAN_MESSAGE_01_03' | translate }}","RECON_CLOSE");
                        setTimeout(function() {
                            hintDlg_1.showDialog();
                            $scope.isPageLoading = false
                        }, 2e3)
                    }
                }, _onError, onFailure)
            }, _onError, onFailure)
        } else {
            $scope.ap.resetSsid = true;
            var eth0Conf = $scope.config.networkConfigs.eth0;
            if (!$scope.isIPValid(eth0Conf.ipAddress) || !$scope.isMaskValid(eth0Conf.subnetMask) || !$scope.isHostNameValid(eth0Conf.hostname) || !$scope.isIPValid(eth0Conf.gateway) || !$scope.isIPValid(eth0Conf.nameservers))
                return;
            $scope.buttonsLocked = true;
            $scope.isPageLoading = true;
            var postData = angular.copy($scope.config.networkConfigs.eth0);
            if (angular.isArray(postData.nameservers) == false)
                postData.nameservers = [postData.nameservers];
            dm.util.configRequest.save("/config/multinetwork/eth0/", {
                eth0: postData
            }, function() {
                if ($scope.daloState.isWlanAvailable) {
                    var wlan0Conf_1 = angular.copy($scope.config.networkConfigs.wlan0);
                    wlan0Conf_1.network = null;
                    wlan0Conf_1.available;
                    if (angular.isArray(wlan0Conf_1.nameservers) == false)
                        wlan0Conf_1.nameservers = [wlan0Conf_1.nameservers];
                    $scope.ap.save().then(function() {
                        dm.util.configRequest.save("/config/multinetwork/wlan0/", {
                            wlan0: wlan0Conf_1
                        }, function() {
                            $scope.saveInetIfaceAndActivateConfiguration()
                        }, _onError, onFailure)
                    }, _onError, onFailure)
                } else {
                    $scope.saveInetIfaceAndActivateConfiguration()
                }
            }, _onError, onFailure)
        }
    }
    ;
    $scope.saveInetIfaceAndActivateConfiguration = function() {
        dm.util.configRequest.save("/config/multinetwork/inetConnection/", {
            inetConnection: $scope.config.networkConfigs.inetConnection
        }, function() {
            dm.util.configRequest.get("/status/io/hwipswitch/").then(function(aData) {
                if (aData.hwipswitch) {
                    var hintIOSwitchDlg = new dm.standardDialog.StandardDialog($scope,"DIALOG_TITLE_HINT","{{'DIALOG_IP_SWITCH_01' |translate }} </br> {{'DIALOG_IP_SWITCH_02' |translate }}","RECON_CLOSE");
                    hintIOSwitchDlg.showDialog()
                } else {
                    var hintDlg = new dm.standardDialog.StandardDialog($scope,"DIALOG_TITLE_HINT","{{'DIALOG_HINT_AP_APPLY' |translate }}","RECON_CLOSE");
                    hintDlg.showDialog()
                }
                activateConfiguration()
            }, _onError, onFailure)
        }, _onError, onFailure)
    }
    ;
    $scope.init();
    $scope.isPSKValid = function() {
        return $scope.ap.getValidator("psk")()
    }
    ;
    $scope.isIfaceSelected = function(iface) {
        if ($scope.ui.savingWifi || !$scope.isPageLoading)
            return $scope.config.networkConfigs.inetConnection.selInetIface == iface;
        return false
    }
    ;
    $scope.getIfaceSelectedClass = function(iface) {
        if ($scope.ui.savingWifi || !$scope.isPageLoading) {
            if ($scope.config.networkConfigs.inetConnection.selInetIface == iface)
                return "enabledBorder"
        }
        return "disabledBorder"
    }
    ;
    $scope.getSyncSolarWebTemplate = dm.util.templateUrls.getSyncSolarWebTemplate;
    $scope.onIfaceChange = function() {
        switch ($scope.config.networkConfigs.inetConnection.selInetIface) {
        case "uap0":
            if (!$scope.config.validate()) {
                $scope.config.reset();
                $scope.config.networkConfigs.inetConnection.selInetIface = "uap0"
            }
            $scope.ui.prevSWEnabledState = $scope.ui.swenabled;
            $scope.ui.swenabled = false;
            $scope.ui.prevNighModeEnabledState = $scope.ui.nightMode;
            $scope.ui.nightMode = false;
            if ($scope.WIZARDACTIVE)
                $scope.wizardButtons.forwardText = "WIZARD_FORWARD";
            break;
        case "wlan0":
            if (!$scope.ap.validate())
                $scope.ap.resetModel();
            if (!$scope.config.validate()) {
                $scope.config.reset();
                $scope.config.networkConfigs.inetConnection.selInetIface = "wlan0"
            }
            $scope.ui.swenabled = $scope.ui.prevSWEnabledState;
            $scope.ui.nightMode = $scope.ui.prevNighModeEnabledState;
            if ($scope.WIZARDACTIVE)
                $scope.wizardButtons.forwardText = "WIZARD_CONNECT";
            $scope.status.load().then(function() {
                if ($scope.hiddenConfiguredWLAN)
                    $scope.status.wlanNetworks.push($scope.hiddenConfiguredWLAN)
            });
            if ($scope.status.wlanNetworks) {
                for (var i = 0; i < $scope.status.wlanNetworks.length; i++) {
                    if ($scope.status.wlanNetworks[i].ssid == $scope.config.ifaceWlan0ConfigFields.network.ssid)
                        $scope.selectWLANNetwork($scope.status.wlanNetworks[i])
                }
            }
            break;
        case "eth0":
            if (!$scope.ap.validate())
                $scope.ap.resetModel();
            $scope.ui.swenabled = $scope.ui.prevSWEnabledState;
            $scope.ui.nightMode = $scope.ui.prevNighModeEnabledState;
            if ($scope.WIZARDACTIVE)
                $scope.wizardButtons.forwardText = "WIZARD_CONNECT";
            break
        }
    }
    ;
    $scope.onKeepAliveChange = function() {
        if ($scope.ui.swenabled) {
            $scope.requestPolicyTerms()
        } else {
            $scope.solarweb.swSettings.dataSendMode = "never";
            $scope.solarweb.swSettings.connectionKeepAlive = false;
            if ($scope.solarweb.syncSolarWeb) {
                stdDialog.showDialog("SyncSolarWebDialogTemplate")
            }
        }
    }
    ;
    $scope.onNightModeChange = function() {
        if ($scope.ui.nightMode) {
            $scope.requestPolicyTerms()
        } else {
            $scope.solarweb.logSettings.logging.smps_shutdown_delay_enable = false
        }
    }
    ;
    $scope.showPSKValidation = function(validClass) {
        if (validClass == "valid")
            return $scope.ap.isPropDirty("psk") && $scope.ap.getValidator("psk")();
        return $scope.ap.isPropDirty("psk") && !$scope.ap.getValidator("psk")()
    }
    ;
    $scope.wpsTrigger = function() {
        $scope.wpsConnected = false;
        if ($scope.daloState.connectedViaAP)
            $scope.startWPSScan();
        else
            $scope.showWPSHintDialog()
    }
    ;
    $scope.showWPSHintDialog = function() {
        var wpsHintDialog = new dm.standardDialog.StandardDialog($scope,"DIALOG_TITLE_HINT","{{'WPS_HINT_01' |translate }}<br>" + "<b>{{'WPS_HINT_02' |translate }}</b> {{'WPS_HINT_03' |translate }}","WPS_START","startWPSScan()");
        wpsHintDialog.addButton("CANCEL", "closeThisDialog");
        wpsHintDialog.showDialog()
    }
    ;
    var pollWPSState = function() {
        if (!wpsCancled) {
            var networkConfig = dm.model.NetworkConfig.getInstance("settingsNetworkCtrl", $scope);
            wpsStateResponse = null;
            networkConfig.getWifiConnectionState().then(function(response) {
                wpsStateResponse = response
            });
            setTimeout(function() {
                if (wpsCancled)
                    return;
                if (wpsStateResponse && wpsStateResponse.data && wpsStateResponse.data.state) {
                    var state = wpsStateResponse.data.state;
                    if (state == "WPS-SCAN" || state == "DISCONNECTED") {
                        setTimeout(pollWPSState, 2e3);
                        return
                    }
                    if (state == "CONNECTED") {
                        $scope.wpsConnected = true;
                        stdDialog.setShowLoading(false);
                        if ($scope.WIZARDACTIVE) {
                            $scope.ShowWizardLoading();
                            $scope.wizardButtons.showSkipNetworkSetup = false;
                            $scope.wizardButtons.forwardText = "WIZARD_FORWARD";
                            var wizardState = dm.model.WizardState.getInstance("wizardCtrl", $scope);
                            wizardState.WizardStep = $scope.networkStatusStep;
                            wizardState.save().then(function() {
                                stdDialog.closeDialog();
                                $scope.updateProgressStrip()
                            }, function(err) {
                                dm.util.configRequest.showCfgErrorDialog(err)
                            })
                        } else {
                            setTimeout(function() {
                                stdDialog.closeDialog()
                            }, 1500);
                            $scope.status.load()
                        }
                    } else {
                        stdDialog.closeDialog();
                        stdDialog.setShowLoading(false);
                        switch (state) {
                        case "WPS-FAIL":
                            {
                                var errorDialog = new dm.standardDialog.StandardDialog($scope,"DIALOG_TITLE_WARNING","{{'WPS_ERROR_FAIL' |translate:ui }} </br> ","RECON_CLOSE");
                                errorDialog.setShowLoading(false);
                                errorDialog.showDialog();
                                break
                            }
                        case "RANGE":
                        case "WPSTIMEOUT":
                            {
                                var errorDialog = new dm.standardDialog.StandardDialog($scope,"DIALOG_TITLE_WARNING","{{'WPS_ERROR_TIMEOUT' |translate:ui }} </br> ","RECON_CLOSE");
                                errorDialog.showDialog();
                                errorDialog.setShowLoading(false);
                                break
                            }
                        case "OVERLAP":
                            {
                                var errorDialog = new dm.standardDialog.StandardDialog($scope,"DIALOG_TITLE_WARNING","{{'WPS_ERROR_OVERLAP' |translate:ui }} </br> ","RECON_CLOSE");
                                errorDialog.showDialog();
                                errorDialog.setShowLoading(false);
                                break
                            }
                        }
                    }
                } else {
                    setTimeout(pollWPSState, 2e3)
                }
            }, 2e3)
        }
    };
    $scope.startWPSScan = function() {
        var solarWeb = dm.model.SolarWebSettings.getInstance("settingsNetworkCtrl", $scope);
        var networkConfig = dm.model.NetworkConfig.getInstance("settingsNetworkCtrl", $scope);
        var apSettings = dm.model.APSettings.getInstance("settingsNetworkCtrl", $scope);
        if ($scope.daloState.connectedViaAP) {
            stdDialog.showDialog("WPSScanDialogTemplate");
            stdDialog.setShowLoading(true)
        } else {
            if ($scope.WIZARDACTIVE) {
                $scope.ShowWizardLoading();
                $scope.daloState.wpsTriggered = true
            } else {
                stdDialog.showDialog("WPSConnectHintDialogTempate")
            }
        }
        solarWeb.preSave().then(function() {
            solarWeb.save().then(function() {
                networkConfig.save().then(function() {
                    if ($scope.daloState.connectedViaAP) {
                        wpsCancled = false;
                        $scope.config.setWPSState(true).then(function() {
                            setTimeout(pollWPSState, 2e3)
                        })
                    } else {
                        if ($scope.WIZARDACTIVE) {
                            var wizardState = dm.model.WizardState.getInstance("wizardCtrl", $scope);
                            wizardState.WizardStep = $scope.networkStatusStep;
                            $scope.ShowWizardLoading();
                            wizardState.save().then(function() {
                                wizardState.WizardStep = $scope.networkStatusStep - 1;
                                $scope.updateProgressStrip()
                            })
                        } else {
                            $scope.config.setWPSState(true)
                        }
                    }
                })
            })
        })
    }
    ;
    $scope.cancelWPSScan = function() {
        wpsCancled = true;
        $scope.config.setWPSState(false)
    }
}
]);
angular.module("settings").controller("settingsOverviewCtrl", ["$scope", "$rootScope", "$q", "standardDialog", "$timeout", "$state", "settingsHelperFunctions", function($scope, $rootScope, $q, standardDialog, $timeout, $state, settingsHelperFunctions) {
    var stdDialog = new dm.standardDialog.StandardDialog($scope);
    var siteNowDataModel = dm.model.SiteNowData.getInstance();
    var Fronius_Checkbox_Name = "Fronius Checkbox 500V";
    $scope.loading = true;
    $scope.buttonsLocked = false;
    $scope.invActivateOptions = [true, false];
    $scope.activateOptions = [false, true];
    $scope.meterModel = null;
    $scope.overviewModel = dm.model.OverviewSettings.getInstance("settingsOverviewCtrl", $scope);
    $scope.overviewModel.setAuthenticationLevel("service");
    $scope.timeOfUse = dm.model.TimeOfUseModel.getInstance("TimeOfUse", $scope);
    $scope.BAT_TYPE_TRANSLATIONS = {};
    if ($scope.WIZARDACTIVE) {
        $scope.wizardButtons.showForward = true;
        $scope.wizardButtons.showBackward = true;
        $scope.wizardButtons.showAbort = false;
        $scope.ShowWizardLoading()
    }
    $scope.reset = angular.bind($scope.overviewModel, $scope.overviewModel.reset);
    var twoLevelTranslation = function() {
        dm.ngjs.$translate(["GPIOS_TITLE", "GSTR_GPIO_TITLE_BACKUP", "ACTIVATED", "DEACTIVATED", "GSTR_GPIO_TITLE_STORAGE", "SYSTEMOVERVIEW_HINT_BACKUP"]).then(function(response) {
            $scope.BAT_TYPE_TRANSLATIONS["SYSTEMOVERVIEW_HINT_BACKUP"] = response["SYSTEMOVERVIEW_HINT_BACKUP"];
            dm.ngjs.$translate("HINT_GENERIC_NO_BACKUP", {
                feature: response["GSTR_GPIO_TITLE_BACKUP"]
            }).then(function(response) {
                $scope.BAT_TYPE_TRANSLATIONS["HINT_GENERIC_NO_BACKUP"] = response
            });
            dm.ngjs.$translate("HINT_BAT_TYPE", {
                menu: response["GPIOS_TITLE"],
                feature: response["GSTR_GPIO_TITLE_STORAGE"],
                activated: response["ACTIVATED"]
            }).then(function(response) {
                $scope.BAT_TYPE_TRANSLATIONS["HINT_BAT_TYPE_NEED_ACTIVATE"] = response
            });
            dm.ngjs.$translate("HINT_BAT_TYPE", {
                menu: response["GPIOS_TITLE"],
                feature: response["GSTR_GPIO_TITLE_STORAGE"],
                activated: response["DEACTIVATED"]
            }).then(function(response) {
                $scope.BAT_TYPE_TRANSLATIONS["HINT_BAT_TYPE_NEED_DEACTIVATE"] = response
            })
        })
    };
    $scope.init = function() {
        $scope.loading = true;
        twoLevelTranslation();
        $scope.overviewModel.load();
        $q.all([$scope.overviewModel.loadingPromise, $scope.timeOfUse.loadingPromise]).then(function(responses) {
            $scope.meterModel = $scope.overviewModel.meterModel;
            $scope.$watch("overviewModel.HYB.EVU.CHARGEFROMGRID", function(newV, oldV) {
                if (newV == undefined || oldV == undefined || newV == oldV || $scope.loading)
                    return;
                if ($scope.timeOfUse.TimeOfUseNotAllowed(newV, $scope.overviewModel.HYB.BM.CHARGEFROMAC))
                    stdDialog.showDialog("TOUNotAllowedActive")
            });
            $scope.$watch("overviewModel.HYB.BM.CHARGEFROMAC", function(newV, oldV) {
                if (newV == undefined || oldV == undefined || newV == oldV || $scope.loading)
                    return;
                if ($scope.timeOfUse.TimeOfUseNotAllowed($scope.overviewModel.HYB.EVU.CHARGEFROMGRID, newV))
                    stdDialog.showDialog("TOUNotAllowedActive")
            });
            $scope.loading = false
        }, function(response) {
            return settingsHelperFunctions.checkStatusResponseAndRedirect(response, $state, "overview")
        }).finally(function() {
            if ($scope.WIZARDACTIVE)
                $scope.HideWizardLoading()
        })
    }
    ;
    $scope.isPACMinValid = $scope.overviewModel.getValidator("HYB.BM.PACMIN");
    $scope.isBatteryTypeValid = $scope.overviewModel.getValidator("BAT.TYPE");
    $scope.isWPValid = $scope.overviewModel.getValidator("WP");
    $scope.isLGCheckboxInstalled = $scope.overviewModel.getValidator("lgCheckbox");
    $rootScope.$on("$translateChangeSuccess", function() {
        twoLevelTranslation()
    });
    $scope.getBatTypeText = function() {
        if ($scope.BAT_TYPE_TRANSLATIONS) {
            if ($scope.overviewModel.MeterAndBackup.backupMode == "AUTO" && $scope.overviewModel.BAT.TYPE == "lg_chem_resu_h")
                return $scope.BAT_TYPE_TRANSLATIONS["HINT_GENERIC_NO_BACKUP"];
            else if ($scope.overviewModel.BAT.GenericBatEnabled && ($scope.overviewModel.BAT.TYPE == "sony" || $scope.overviewModel.BAT.TYPE == "byd_b_box_hv"))
                return $scope.BAT_TYPE_TRANSLATIONS["HINT_BAT_TYPE_NEED_DEACTIVATE"];
            else
                return $scope.BAT_TYPE_TRANSLATIONS["HINT_BAT_TYPE_NEED_ACTIVATE"]
        }
    }
    ;
    $scope.getBackupModeHint = function() {
        if ($scope.BAT_TYPE_TRANSLATIONS) {
            if (this.overviewModel.getBackupModeEnable())
                return $scope.BAT_TYPE_TRANSLATIONS["HINT_GENERIC_NO_BACKUP"];
            else
                return $scope.BAT_TYPE_TRANSLATIONS["SYSTEMOVERVIEW_HINT_BACKUP"]
        }
    }
    ;
    $scope.getCheckboxName = function() {
        return {
            name: Fronius_Checkbox_Name
        }
    }
    ;
    $scope.forcePAC100WSteps = function() {
        $scope.overviewModel.HYB.BM.PACMIN = Math.ceil($scope.overviewModel.HYB.BM.PACMIN / 100) * 100
    }
    ;
    $scope.doSave = function() {
        $scope.loading = true;
        $scope.overviewModel.save().then(function() {
            dm.util.configRequest.showCfgSavedDialog()
        }, function(err) {
            if (err && err.error)
                dm.util.configRequest.showCfgErrorDialog(err.error);
            else if (err && err.failure)
                dm.util.configRequest.showCfgFailureDialog("overview");
            else if (err)
                dm.util.configRequest.showCfgErrorDialog(err)
        }).finally(function() {
            $scope.loading = false
        })
    }
    ;
    $scope.save = function(callback) {
        $scope.overviewModel.refreshGenericBatState().then(function() {
            $scope.doSave()
        })
    }
    ;
    $scope.onCheckboxClicked = function() {
        if ($scope.overviewModel.lgCheckbox.installed)
            stdDialog.showDialog("LGCheckboxInstalled")
    }
    ;
    $scope.onLGDialogCancel = function(state) {
        if (state == true || state == false)
            $scope.overviewModel.lgCheckbox.installed = state
    }
    ;
    $scope.showMeterSettings = function() {
        $scope.meterModel.configMeter.primary.meterState = 0;
        $scope.meterModel.configMeter.primary.timeOutCount = 10;
        $scope.meterModel.copyMeterDataForDialog(true);
        $scope.meterModel.saveConfig();
        stdDialog.showDialog("MeterDialogTemplate")
    }
    ;
    var onActiveChanged = function(newVal, oldVal) {
        if (newVal !== null && oldVal !== null && newVal == !oldVal) {
            if (newVal) {
                $scope.meterModel.primaryMeterType("smrtu")
            } else {
                $scope.meterModel.primaryMeterType("none")
            }
            $scope.meterModel.copyMeterDataForDialog(true)
        }
    };
    $scope.overviewModel.loadingPromise.then(function() {
        $scope.$watch(function() {
            return $scope.overviewModel.MeterAndBackup.meter.meterActivated
        }, onActiveChanged)
    });
    $scope.init();
    $scope.dialogCallback = function() {
        if ($scope.overviewModel.validateBackupMode() && $scope.meterModel.validate()) {
            $scope.meterModel.copyDialogDataBack();
            $scope.meterModel.dialogOpenState(false, true);
            stdDialog.closeDialog()
        }
    }
    ;
    var onSiteData = function() {
        $scope.siteData = siteNowDataModel.data
    };
    siteNowDataModel.subscribe("settingsOverviewCtrl", 5e3);
    var cancelSiteDataUpdate = siteNowDataModel.on("dataChanged", onSiteData);
    $scope.$on("$destroy", function() {
        siteNowDataModel.unsubscribe("settingsOverviewCtrl");
        if ($scope.meterModel)
            $scope.meterModel.stopMeterPolling();
        if (cancelSiteDataUpdate)
            cancelSiteDataUpdate();
        cancelSiteDataUpdate = undefined
    })
}
]);
angular.module("settings").controller("settingsPasswordCtrl", ["$scope", "$state", "$http", "$q", "settingsHelperFunctions", "standardDialog", function($scope, $state, $http, $q, settingsHelperFunctions, standardDialog) {
    var _private = {
        configData: undefined,
        type: undefined
    };
    var wizardState = dm.model.WizardState.getInstance("wizardCtrl", $scope);
    var stdDialog = new dm.standardDialog.StandardDialog($scope);
    var onSuccess = function() {
        var type = _private.type;
        $scope.pass[type].old = "";
        $scope.pass[type].new1 = "";
        $scope.pass[type].new2 = "";
        $scope.pass[type].new1Set = false;
        $scope.pass[type].new2Set = false;
        $scope.loading = {
            admin: false,
            service: false,
            user: false
        };
        $scope.buttonsLocked = false;
        if (type == "user")
            $scope.pass[type].isset = $scope.useUserPassword;
        dm.util.configRequest.showCfgSavedDialog()
    };
    var onUseUserPasswordChanged = function(newVal, oldVal) {
        if (oldVal && !newVal && $scope.user.getOrigData("pass").isset) {
            stdDialog.showDialog("UseUserPwTemplate")
        }
    };
    $scope.loading = {
        admin: true,
        service: true,
        user: true
    };
    $scope.user = dm.model.PasswordSettings.getInstance("settingsPasswordCtrl", $scope, "user");
    $scope.admin = dm.model.PasswordSettings.getInstance("settingsPasswordCtrl", $scope, "admin");
    $scope.service = dm.model.PasswordSettings.getInstance("settingsPasswordCtrl", $scope, "service");
    if ($scope.WIZARDACTIVE) {
        $scope.wizardButtons.showForward = true;
        $scope.wizardButtons.showBackward = true;
        $scope.wizardButtons.showAbort = false;
        $scope.wizardButtons.showSkipNetworkSetup = false;
        $scope.wizardButtons.showKeepAPOpened = false;
        $scope.ShowWizardLoading()
    } else {
        $scope.passwordSettingsMode = "settings"
    }
    $scope.init = function() {
        $scope.loading = {
            admin: true,
            service: true,
            user: true
        };
        $q.all([$scope.user.loadingPromise, $scope.admin.loadingPromise, $scope.service.loadingPromise]).then(function() {
            $scope.user.reset();
            $scope.admin.reset();
            $scope.service.reset();
            $scope.loading = {
                admin: false,
                service: false,
                user: false
            };
            if ($scope.WIZARDACTIVE)
                $scope.HideWizardLoading()
        }, function(response) {
            return settingsHelperFunctions.checkStatusResponseAndRedirect(response, $state)
        })
    }
    ;
    $scope.onUseUserPasswordCancel = function() {
        $scope.user.pass.isset = true;
        $scope.user.pass.old = ""
    }
    ;
    $scope.onUseUserPasswordOk = function() {
        $scope.user.save().then(function() {
            dm.util.configRequest.showCfgSavedDialog()
        }, function(err) {
            stdDialog.showDialog("SaveUseUserPwFailedTemplate");
            $scope.user.pass.isset = true
        }).finally(function() {
            $scope.user.pass.old = ""
        })
    }
    ;
    $scope.getPWStrength = function(type) {
        var strength = type && type.pass ? type.pass.strength : "";
        return strength == "strong" ? "PW_STRONG" : strength == "good" ? "PW_GOOD" : "PW_BAD"
    }
    ;
    $scope.getPWEqual = function(type) {
        var pwEqual = type && type.pass ? type.pass.pwEqual : "";
        return pwEqual == "strong" ? "PW_EQUAL" : "PW_UNEQUAL"
    }
    ;
    $scope.save = function(type) {
        if ($scope.loading[type])
            return;
        $scope.loading[type] = true;
        var savedPass1 = $scope[type].pass.new1 || "";
        var savedPass2 = $scope[type].pass.new2 || "";
        if (type == "user" && !savedPass1 && !savedPass2) {
            $scope.loading.user = false;
            $scope.user.pass.isset = false;
            return
        }
        if (!$scope[type].getOrigData("pass").isset && !savedPass1 && !savedPass2) {
            $scope.loading[type] = false;
            return
        }
        $scope[type].save().then(function() {
            if (type == "user" && !savedPass1 && !savedPass2)
                $scope.user.setOrigData("pass", {
                    isset: false
                });
            dm.util.configRequest.showCfgSavedDialog()
        }, function(err) {
            if (err && err.error) {
                if (err.error.Head && err.error.Head.Status && err.error.Head.Status.Reason == "old password not correct") {
                    stdDialog.showDialog('<dialog-template>                             <dialog-title>{{"DIALOG_TITLE_PW_WRONG"|translate}}</dialog-title>                             <dialog-content>{{"DIALOG_TEXT_PW_7"|translate}}</dialog-content>                             <dialog-button-pane>                                 <dialog-button ng-click="closeThisDialog();">OK</dialog-button>                             </dialog-button-pane>                         </dialog-template>', true)
                } else if (err.error.reason) {
                    stdDialog.showDialog("<dialog-template>                             <dialog-title>CGI-Error</dialog-title>                             <dialog-content>reason: " + err.error.reason + '</dialog-content>                             <dialog-button-pane>                                 <dialog-button ng-click="closeThisDialog();">OK</dialog-button>                             </dialog-button-pane>                         </dialog-template>', true)
                } else {
                    dm.util.configRequest.showCfgErrorDialog(err.error)
                }
            } else if (err && err.failure)
                dm.util.configRequest.showCfgFailureDialog("pass");
            else if (err && err.message) {
                if (err.message == "SaveFail1" && type != "user")
                    stdDialog.showDialog("SaveFailTemplate1_" + type);
                else if (err.message == "SaveFail2")
                    stdDialog.showDialog("SaveFailTemplate2_" + type);
                else if (err.message == "SaveFail3")
                    stdDialog.showDialog("SaveFailTemplate3_" + type)
            } else if (err)
                dm.util.configRequest.showCfgErrorDialog(err)
        }).finally(function() {
            $scope.loading[type] = false
        })
    }
    ;
    $scope.init();
    $scope.$watch("user.pass.isset", onUseUserPasswordChanged)
}
]);
angular.module("settings").directive("convertToNumber", function() {
    return {
        require: "ngModel",
        link: function(scope, element, attrs, ngModel) {
            ngModel.$parsers.push(function(val) {
                return parseInt(val, 10)
            });
            ngModel.$formatters.push(function(val) {
                return "" + val
            })
        }
    }
});
angular.module("settings").controller("settingsPushserviceCtrl", ["$scope", "$state", "$translate", "$http", "$q", "settingsHelperFunctions", function($scope, $state, $translate, $http, $q, settingsHelperFunctions) {
    var daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    var _private = {
        dict: {},
        policyTerms: null,
        resetServiceHeaders: function() {
            for (var idx in $scope.ServiceData) {
                var service = $scope.ServiceData[idx];
                service.State = {
                    html: "---",
                    color: null,
                    title: null,
                    ui: $scope.ui
                }
            }
        },
        StateFetcher: dm.util.DataFetcher.newInstance(function() {
            return $http.get("/status/pushservice/services/")
        }, function(response) {
            try {
                var aData = response.data;
                var color = null;
                var title = null;
                if (typeof aData.Body.Data.services == "undefined") {
                    _private.resetServiceHeaders()
                } else {
                    for (var idx in aData.Body.Data.services) {
                        var service = aData.Body.Data.services[idx];
                        var ServiceName = dm.util.string.htmlDecode(service.Name);
                        var ServiceState = _private.dict[service.State];
                        title = null;
                        color = null;
                        if (service.State == "STR_PSHS_OK") {
                            color = "#00AAFF"
                        }
                        if (service.State == "STR_PSHS_FAILED") {
                            color = "red";
                            title = service.Reason
                        }
                        if (service.State == "STR_PSHS_UNTESTED") {
                            color = "orange"
                        }
                        $scope.ServiceData[idx].State = {
                            text: service.State,
                            span: service.Span,
                            color: color,
                            title: title,
                            ui: $scope.ui
                        }
                    }
                }
            } catch (e) {
                _private.resetServiceHeaders()
            }
        }),
        isNameValid: function(service) {
            if ($scope.ServiceData.indexOf(service) != $scope.ui.accordion)
                return true;
            if (service.name == "")
                return false;
            var count = 0;
            for (var Idx in $scope.ServiceData) {
                var Service = $scope.ServiceData[Idx];
                if (Service.Name == service.Name)
                    count++
            }
            if (count > 1)
                return false;
            return true
        },
        isHostAddrValid: function(service) {
            if ($scope.ServiceData.indexOf(service) != $scope.ui.accordion)
                return true;
            var value = service.Host.Addr;
            if (!value)
                return false;
            var regex = /^((((\d|[1-9]\d|1\d{2}|2[0-4]\d|25[0-5])\.){3}(:\d{2,5})?$|^(\d|[1-9]\d|1\d{2}|2[0-4]\d|25[0-5]))|[a-zA-Z\-_\.\d]+)(:\d{2,5})?$/;
            var valid = value.match(regex) == null ? false : true;
            if (valid && value.split(":").length > 1)
                return parseInt(value.split(":")[1]) < 65536;
            return valid
        },
        isHostRemoteValid: function(service) {
            if ($scope.ServiceData.indexOf(service) != $scope.ui.accordion)
                return true;
            var value = service.Host.Remote;
            if (!value)
                return false;
            var regex = /^\/([a-z]|[A-Z]|[0-9]|\.|_|-|=|&|\?|\/|{DATE}|{TIME})+$/;
            var valid = value.match(regex) == null ? false : true;
            return valid
        },
        isAuthUserValid: function(service) {
            if ($scope.ServiceData.indexOf(service) != $scope.ui.accordion)
                return true;
            if (!service.Auth.Use)
                return true;
            var value = service.Auth.Usr;
            if (!value)
                return false;
            var regex = /^.+$/;
            var valid = value.match(regex) == null ? false : true;
            return valid
        },
        isAuthPwdValid: function(service) {
            if ($scope.ServiceData.indexOf(service) != $scope.ui.accordion)
                return true;
            if (!service.Auth.Use)
                return true;
            var value = service.Auth.Pwd;
            if (!value)
                return false;
            var regex = /^.+$/;
            var valid = value.match(regex) == null ? false : true;
            return valid
        },
        isProxyAddrValid: function(service) {
            if ($scope.ServiceData.indexOf(service) != $scope.ui.accordion)
                return true;
            if (!service.Proxy.Use)
                return true;
            var value = service.Proxy.Addr;
            if (!value)
                return false;
            var regex = /^[a-zA-Z]{3,5}:\/\/((((\d|[1-9]\d|1\d{2}|2[0-4]\d|25[0-5])\.){3}(\d|[1-9]\d|1\d{2}|2[0-4]\d|25[0-5]))|[a-zA-Z\-_\.\d]+)(:\d{2,5})?$/;
            var valid = value.match(regex) == null ? false : true;
            return valid
        },
        isProxyUserValid: function(service) {
            if ($scope.ServiceData.indexOf(service) != $scope.ui.accordion)
                return true;
            if (!service.Proxy.Use)
                return true;
            var value = service.Proxy.Usr;
            if (!value)
                return false;
            var regex = /^.+$/;
            var valid = value.match(regex) == null ? false : true;
            return valid
        },
        isProxyPwdValid: function(service) {
            if ($scope.ServiceData.indexOf(service) != $scope.ui.accordion)
                return true;
            if (!service.Proxy.Use)
                return true;
            var value = service.Proxy.Pwd;
            if (!value)
                return false;
            var regex = /^.+$/;
            var valid = value.match(regex) == null ? false : true;
            return valid
        },
        areServicesValid: function(services) {
            for (var idx = 0; idx < services.length; idx++) {
                var service = services[idx];
                if (!_private.isNameValid(service))
                    return false;
                if (!_private.isHostAddrValid(service))
                    return false;
                if (!_private.isHostRemoteValid(service))
                    return false;
                if (!_private.isAuthUserValid(service))
                    return false;
                if (!_private.isAuthPwdValid(service))
                    return false;
                if (!_private.isProxyAddrValid(service))
                    return false;
                if (!_private.isProxyUserValid(service))
                    return false;
                if (!_private.isProxyPwdValid(service))
                    return false
            }
            return true
        }
    };
    $translate(["PSHS_UNKNOWN", "PSHS_ERROR", "PSHS_DISABLED", "PSHS_FAILED", "PSHS_OK", "PSHS_UNTESTED"]).then(function(response) {
        _private.dict = response
    });
    $scope.loading = true;
    $scope.buttonsLocked = false;
    $scope.ServiceData = [];
    $scope.Available = [];
    $scope.ui = {
        accordion: undefined
    };
    $scope.calcSpan = function(span) {
        return {
            tspan: Math.floor(span / 60)
        }
    }
    ;
    $scope.init = function() {
        $scope.loading = true;
        _private.policyTerms = dm.model.PolicyTerms.getInstance("PushServiceCtrl", $scope);
        $scope.$broadcast("destroyValidators");
        dm.ngjs.$q.all([dm.util.configRequest.get("/config/pushservice/"), daloState.loadingPromise]).then(function(responses) {
            $scope.ServiceData = responses[0].pushservice.Hosts;
            $scope.Available = responses[0].pushservice.Available;
            $scope.Available.FormatKeys = Object.keys($scope.Available.Formats);
            for (var Idx in $scope.ServiceData) {
                var Service = $scope.ServiceData[Idx];
                if (Service.Proxy.Use == "own")
                    Service.Proxy.Use = true;
                else
                    Service.Proxy.Use = false;
                Service.Name = dm.util.string.htmlDecode(Service.Name);
                Service.State = {
                    html: "---",
                    color: null,
                    title: null,
                    ui: $scope.ui
                }
            }
            _private.StateFetcher.subscribe("settingsPushserviceCtrl", 1e4);
            $scope.loading = false
        }, function(response) {
            return settingsHelperFunctions.checkStatusResponseAndRedirect(response, $state)
        }).finally(function() {
            $scope.loading = false
        })
    }
    ;
    $scope.isIntervalValid = function(service, val) {
        var isValid = function(_val) {
            return _val >= $scope.Available.Formats[service.Format].tMin && _val <= $scope.Available.Formats[service.Format].tMax
        };
        if (!isValid(service.Interval) && isValid(val))
            service.Interval = val;
        return isValid(val)
    }
    ;
    $scope.getPolicyTemplate = dm.util.templateUrls.getPolicyTemplate;
    $scope.selectAccordion = function(number) {
        $scope.ui.accordion = number
    }
    ;
    $scope.onDeleteClick = function(Idx) {
        this.$broadcast("destroyValidators");
        $scope.ServiceData.splice(Idx, 1);
        $scope.selectAccordion(0)
    }
    ;
    $scope.onAddClick = function() {
        if ($scope.ServiceData.length < 10) {
            _private.policyTerms.showPolicytermsDialog2(daloState.userAuth, "pushservice", $scope, function() {
                $scope.ServiceData.push({
                    Enable: true,
                    Name: "New FTP Service " + $scope.ServiceData.length,
                    Format: $scope.Available.FormatKeys[0],
                    Protocol: $scope.Available.Protocols[0],
                    Interval: 10,
                    Host: {
                        Addr: "MyServer:21",
                        Remote: "/anypath/anyfile{DATE}{TIME}.any"
                    },
                    Auth: {
                        Use: false,
                        Usr: "anyuser",
                        Pwd: "anypassword"
                    },
                    Proxy: {
                        Use: false,
                        Addr: "http://anyserver:8080",
                        Usr: "anyuser",
                        Pwd: "anypassword"
                    },
                    State: {
                        html: "---",
                        color: null,
                        title: null,
                        ui: $scope.ui
                    }
                });
                $scope.ui.accordion = $scope.ServiceData.length - 1
            }, null)
        }
    }
    ;
    $scope.isNameValid = _private.isNameValid;
    $scope.isHostAddrValid = _private.isHostAddrValid;
    $scope.isHostRemoteValid = _private.isHostRemoteValid;
    $scope.isAuthUserValid = _private.isAuthUserValid;
    $scope.isAuthPwdValid = _private.isAuthPwdValid;
    $scope.isProxyAddrValid = _private.isProxyAddrValid;
    $scope.isProxyUserValid = _private.isProxyUserValid;
    $scope.isProxyPwdValid = _private.isProxyPwdValid;
    $scope.save = function(callback) {
        if ($scope.buttonsLocked || !_private.areServicesValid($scope.ServiceData))
            return;
        var onSuccess = function() {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            if (callback)
                callback();
            else
                dm.util.configRequest.showCfgSavedDialog();
            $scope.init()
        };
        var onError = function(error) {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            dm.util.configRequest.showCfgErrorDialog(error)
        };
        var onFailure = function(failure) {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            dm.util.configRequest.showCfgFailureDialog("push")
        };
        var data = angular.copy($scope.ServiceData);
        for (var idx in data) {
            var Service = data[idx];
            if (Service.Proxy.Use)
                Service.Proxy.Use = "own";
            else
                Service.Proxy.Use = "none";
            Service.Name = dm.util.string.htmlEncode(Service.Name);
            delete Service.State
        }
        $scope.buttonsLocked = true;
        $scope.loading = true;
        dm.util.configRequest.save("/config/pushservice/", {
            pushservice: {
                Hosts: data
            }
        }, onSuccess, onError, onFailure)
    }
    ;
    $scope.init();
    $scope.$on("$destroy", function() {
        _private.StateFetcher.unsubscribe("settingsPushserviceCtrl")
    })
}
]);
angular.module("settings").controller("settingsSensorcardsCtrl", ["$scope", "$state", "$http", "$q", "settingsHelperFunctions", function($scope, $state, $http, $q, settingsHelperFunctions) {
    $scope.loading = true;
    $scope.buttonsLocked = false;
    $scope.scConfig = undefined;
    $scope.sensorcards = {};
    $scope.isObjectEmtpy = function(obj) {
        return angular.equals(obj, {})
    }
    ;
    $scope.init = function() {
        $scope.loading = true;
        $q.all([dm.util.configRequest.get("/config/views/sensorcards/"), dm.util.solarAPIRequest.get("/solar_api/v1/GetActiveDeviceInfo.cgi?DeviceClass=SensorCard")]).then(function(responses) {
            $scope.scConfig = responses[0].sensorcards;
            $scope.sensorcards = responses[1];
            for (var configIdx in $scope.sensorcards) {
                var channelNames = $scope.scConfig[configIdx].channelNames;
                for (var channelIdx in channelNames) {
                    channelNames[channelIdx] = dm.util.string.htmlDecode(channelNames[channelIdx])
                }
            }
            $scope.loading = false
        }, function(response) {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            settingsHelperFunctions.checkStatusResponseAndRedirect(response, $state, "sens")
        })
    }
    ;
    $scope.save = function() {
        if ($scope.buttonsLocked)
            return;
        if (Object.keys($scope.sensorcards).length == 0)
            return;
        var data = angular.copy($scope.scConfig);
        data = {
            sensorcards: data
        };
        var onSuccess = function() {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            dm.util.configRequest.showCfgSavedDialog()
        };
        var onError = function(error) {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            dm.util.configRequest.showCfgErrorDialog(error)
        };
        var onFailure = function(failure) {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            dm.util.configRequest.showCfgFailureDialog("sens")
        };
        $scope.buttonsLocked = true;
        $scope.loading = true;
        dm.util.configRequest.save("/config/views/sensorcards/", data, onSuccess, onError, onFailure)
    }
    ;
    $scope.init()
}
]);
angular.module("settings").controller("settingsSolarWebCtrl", ["$scope", "$state", "$http", "$q", "settingsHelperFunctions", "standardDialog", "$rootScope", function($scope, $state, $http, $q, settingsHelperFunctions, standardDialog, $rootScope) {
    var stdDialog = new dm.standardDialog.StandardDialog($scope);
    $scope.daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    var policyTerms = dm.model.PolicyTerms.getInstance("SolarWebCtrl", $scope);
    var cntSingleClicks = 2;
    $scope.loading = true;
    $scope.buttonsLocked = false;
    $scope.showEventLogging = false;
    $scope.dayHours = ["00:00", "01:00", "02:00", "03:00", "04:00", "05:00", "06:00", "07:00", "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00", "21:00", "22:00", "23:00"];
    $scope.model = dm.model.SolarWebSettings.getInstance("settingsSolarWebCtrl", $scope);
    $scope.init = function() {
        $scope.loading = true;
        $q.all([$scope.model.loadingPromise, $scope.daloState.loadingPromise]).catch(function(response) {
            return settingsHelperFunctions.checkStatusResponseAndRedirect(response, $state)
        }).finally(function() {
            $scope.model.reset();
            $scope.loading = false
        })
    }
    ;
    $scope.onActivateEventLogging = function() {
        if (!cntSingleClicks)
            $scope.showEventLogging = true;
        else
            cntSingleClicks = cntSingleClicks - 1
    }
    ;
    $scope.onKeepAliveChange = function() {
        var newVal = $scope.model.swSettings.connectionKeepAlive;
        if (newVal) {
            policyTerms.showPolicytermsDialog1($scope.daloState.userAuth, "solarweb", $scope, null, function() {
                $scope.model.swSettings.connectionKeepAlive = false
            })
        } else {
            if ($scope.model.syncSolarWeb) {
                stdDialog.showDialog("SyncSolarWebDialogTemplate")
            }
        }
    }
    ;
    $scope.onSendModeChange = function() {
        if ($scope.model.swSettings.dataSendMode != "never") {
            policyTerms.showPolicytermsDialog2($scope.daloState.userAuth, "solarweb", $scope, null, function() {
                $scope.model.swSettings.dataSendMode = "never"
            })
        }
    }
    ;
    $scope.onNightModeChange = function() {
        if ($scope.model.logSettings.logging.smps_shutdown_delay_enable) {
            policyTerms.showPolicytermsDialog1($scope.daloState.userAuth, "solarweb", $scope, null, function() {
                $scope.model.logSettings.logging.smps_shutdown_delay_enable = false
            })
        }
    }
    ;
    $scope.getSyncSolarWebTemplate = dm.util.templateUrls.getSyncSolarWebTemplate;
    $scope.getPolicyTemplate = dm.util.templateUrls.getPolicyTemplate;
    $scope.sendDataToSolarWeb = function() {
        $q.all([dm.util.configRequest.get("/config/views/"), dm.util.configRequest.get("/config/date/timezone/"), dm.util.configRequest.get("/status/inverteronline/")]).then(function(responses) {
            var views = responses[0].views;
            var timezone = responses[1].timezone;
            var visibleInverters = responses[2];
            var misc = views.misc;
            var inverters = views.comparison;
            var regData = {
                ID: $scope.daloState.daloID,
                Key: $scope.daloState.daloKey,
                Inverters: []
            };
            regData["SystemName"] = dm.util.string.htmlDecode(misc.systemName);
            regData["CO2Factor"] = misc.profit.CO2Factor;
            regData["Currency"] = misc.profit.currency;
            regData["CashFactor"] = misc.profit.cashFactor;
            regData["App"] = false;
            regData["TimeZone"] = timezone;
            $.each(visibleInverters, function(id, aData) {
                var OneInverter = {
                    NT: 96 + parseInt(id),
                    DT: aData,
                    PeakPower: inverters[id].Wp,
                    Name: dm.util.string.htmlDecode(inverters[id].name)
                };
                regData.Inverters.push(OneInverter)
            });
            $("#RegData").val(JSON.stringify(regData));
            document.forms["RegForm"].submit()
        }, function(response) {
            $scope.loading = false;
            $scope.buttonsLocked = false;
            settingsHelperFunctions.checkStatusResponseAndRedirect(response, $state)
        })
    }
    ;
    $scope.onDeleteLogClick = function() {
        stdDialog.showDialog("DeleteLogDialogTemplate1")
    }
    ;
    $scope.onDeleteLogDialogYes = function() {
        stdDialog.showDialog("DeleteLogDialogTemplate2")
    }
    ;
    $scope.onDeleteLogDialogOk = function() {
        $http.get("/admincgi-bin/logdataErase.cgi").then(function() {
            if (!$scope.$$destroyed)
                stdDialog.showDialog("LogErasedDialogTemplate")
        }, dm.util.configRequest.showCfgFailureDialog)
    }
    ;
    $scope.save = function() {
        if ($scope.loading)
            return;
        $scope.loading = true;
        $scope.model.preSave().then(function() {
            $scope.model.save().then(function() {
                dm.util.configRequest.showCfgSavedDialog()
            }, function(err) {
                if (err && err.error)
                    dm.util.configRequest.showCfgErrorDialog(err.error);
                else if (err && err.failure)
                    dm.util.configRequest.showCfgFailureDialog();
                else if (err)
                    dm.util.configRequest.showCfgErrorDialog(err)
            }).finally(function() {
                $scope.loading = false
            })
        })
    }
    ;
    $scope.init();
    $rootScope.$on("$translateChangeSuccess", function() {
        $scope.loading = true;
        dm.ngjs.$timeout(function() {
            $scope.loading = false
        }, 1)
    })
}
]);
angular.module("settings").controller("settingsCtrl", ["$scope", "$state", "$q", function($scope, $state, $q) {
    var navItems = {
        "arm-wilma": [{
            pathS: "settings.common",
            navStr01: "COMMON",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.password",
            navStr01: "PASSWORDS",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.network",
            navStr01: "NETWORK",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.solarweb",
            navStr01: "SOLARWEB",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.gpios",
            navStr01: "GPIOS",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.loadmanagement",
            navStr01: "LOAD_MANAGMENT",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.pushservice",
            navStr01: "PUSHSERVICE_01",
            navStr02: "PUSHSERVICE_02",
            style: {},
            show: true
        }, {
            pathS: "settings.modbus",
            navStr01: "MODBUS",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.inverter",
            navStr01: "INVERTERS",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.sensorcards",
            navStr01: "SENSORCARDS_01",
            navStr02: "SENSORCARDS_02",
            style: {},
            show: true
        }, {
            pathS: "settings.meter",
            navStr01: "METER",
            navStr02: "",
            style: {
                color: "#4d4d4d"
            },
            show: true
        }, {
            pathS: "settings.evu",
            navStr01: "EVU_TITLE_01",
            navStr02: "EVU_TITLE_02",
            style: {
                color: "#4d4d4d"
            },
            show: true
        }],
        "arm-wilma-hybrid": [{
            pathS: "settings.common",
            navStr01: "COMMON",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.password",
            navStr01: "PASSWORDS",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.network",
            navStr01: "NETWORK",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.solarweb",
            navStr01: "SOLARWEB",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.gpios",
            navStr01: "GPIOS",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.loadmanagement",
            navStr01: "LOAD_MANAGMENT",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.pushservice",
            navStr01: "PUSHSERVICE_01",
            navStr02: "PUSHSERVICE_02",
            style: {},
            show: true
        }, {
            pathS: "settings.modbus",
            navStr01: "MODBUS",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.energymanagement",
            navStr01: "ENERGY_MANAGMENT",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.overview",
            navStr01: "SYSTEM_OVERVIEW_01",
            navStr02: "SYSTEM_OVERVIEW_02",
            style: {
                color: "#4d4d4d"
            },
            show: true
        }, {
            pathS: "settings.meter",
            navStr01: "METER",
            navStr02: "",
            style: {
                color: "#4d4d4d"
            },
            show: true
        }, {
            pathS: "settings.evu",
            navStr01: "EVU_TITLE_01",
            navStr02: "EVU_TITLE_02",
            style: {
                color: "#4d4d4d"
            },
            show: true
        }, {
            pathS: "settings.battery",
            navStr01: "ADVANCED_BATTERIE",
            navStr02: "",
            style: {
                color: "#4d4d4d"
            },
            show: true
        }]
    };
    var navItemsWizard = {
        "arm-wilma": [{
            pathS: "settings.common",
            navStr01: "COMMON",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.password",
            navStr01: "PASSWORDS",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.sensorcards",
            navStr01: "SENSORCARDS_01",
            navStr02: "SENSORCARDS_02",
            style: {},
            show: true
        }, {
            pathS: "settings.loadmanagement",
            navStr01: "ENERGY_MANAGER",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.pushservice",
            navStr01: "PUSHSERVICE_01",
            navStr02: "PUSHSERVICE_02",
            style: {},
            show: true
        }, {
            pathS: "settings.modbus",
            navStr01: "MODBUS",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.meter",
            navStr01: "METER",
            navStr02: "",
            style: {
                color: "#4d4d4d"
            },
            show: true
        }, {
            pathS: "settings.evu",
            navStr01: "EVU_TITLE_01",
            navStr02: "EVU_TITLE_02",
            style: {
                color: "#4d4d4d"
            },
            show: true
        }, {
            pathS: "wizard",
            navStr01: "WIZARD_USER",
            navStr02: "",
            style: {},
            show: true
        }],
        "arm-wilma-hybrid": [{
            pathS: "settings.common",
            navStr01: "COMMON",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.password",
            navStr01: "PASSWORDS",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.gpios",
            navStr01: "GPIOS",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.loadmanagement",
            navStr01: "ENERGY_MANAGER",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.pushservice",
            navStr01: "PUSHSERVICE_01",
            navStr02: "PUSHSERVICE_02",
            style: {},
            show: true
        }, {
            pathS: "settings.modbus",
            navStr01: "MODBUS",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.energymanagement",
            navStr01: "ENERGY_MANAGMENT",
            navStr02: "",
            style: {},
            show: true
        }, {
            pathS: "settings.overview",
            navStr01: "SYSTEM_OVERVIEW_01",
            navStr02: "SYSTEM_OVERVIEW_02",
            style: {
                color: "#4d4d4d"
            },
            show: true
        }, {
            pathS: "settings.meter",
            navStr01: "METER",
            navStr02: "",
            style: {
                color: "#4d4d4d"
            },
            show: true
        }, {
            pathS: "settings.evu",
            navStr01: "EVU_TITLE_01",
            navStr02: "EVU_TITLE_02",
            style: {
                color: "#4d4d4d"
            },
            show: true
        }, {
            pathS: "settings.battery",
            navStr01: "ADVANCED_BATTERIE",
            navStr02: "",
            style: {
                color: "#4d4d4d"
            },
            show: true
        }, {
            pathS: "wizard",
            navStr01: "WIZARD_USER",
            navStr02: "",
            style: {},
            show: true
        }]
    };
    $scope.daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    $scope.SETTINGSACTIVE = true;
    $scope.LANGUAGE = $scope.daloState.language;
    $scope.loadingnav = true;
    $scope.navItems = {};
    $scope.getSelClass = function(navItem) {
        if ($state.current.name == "settings.err401")
            return window.location.hash == "#/settings/" + navItem.pathS.substr(navItem.pathS.indexOf(".")) ? "selected" : "notselected";
        else
            return $state.current.name == navItem.pathS ? "selected" : "notselected"
    }
    ;
    $scope.init = function() {
        $q.all([$scope.daloState.loadingPromise]).then(function(results) {
            if ($scope.daloState.wizardRunning)
                $scope.navItems = navItemsWizard[$scope.daloState.platform];
            else
                $scope.navItems = navItems[$scope.daloState.platform];
            $scope.loadingnav = false
        })
    }
    ;
    $scope.init()
}
]);
angular.module("widgets", ["global", "dataModels"]);
angular.module("widgets").service("levelIndicator", [function() {
    var self = this;
    var indicator = {};
    this.initDimensions = function() {
        indicator.m_width = indicator.m_canvas.width;
        indicator.m_height = indicator.m_canvas.height;
        indicator.m_cpX = Math.round(indicator.m_width / 2);
        indicator.m_cpY = Math.round(indicator.m_cpX / 5);
        indicator.m_width2 = Math.round(indicator.m_width / 3 + indicator.m_width / 10);
        indicator.m_bottom = indicator.m_height + indicator.m_margin;
        indicator.m_right1 = indicator.m_width + indicator.m_margin;
        indicator.m_right2 = indicator.m_width2 + indicator.m_margin;
        indicator.m_cpX += indicator.m_margin;
        indicator.m_cpY += indicator.m_margin;
        indicator.m_horizontalLineSpace = (indicator.m_height - 2 * indicator.m_margin) / 100
    }
    ;
    this.inited = false;
    this.resizeLayout = function() {
        self.initDimensions();
        indicator.m_scaleFactor = indicator.m_maxVal / (indicator.m_height - 2 * indicator.m_margin)
    }
    ;
    this.GetGradientForValue = function(aValue, aStyleVersion) {
        var gradient = [];
        var color0, color1, color2;
        var topPos = aValue > .15 ? aValue : .25;
        switch (aStyleVersion) {
        case "v2":
            color0 = "#e0e0e0";
            color1 = "#e0e0e0";
            color2 = "#00AAFF";
            break;
        default:
            color0 = "rgba(177,179,180,255)";
            color1 = "rgba(177,179,180,255)";
            color2 = "rgba(226,0,26,255)";
            break
        }
        gradient = [[0, color0], [topPos - .25, color1], [topPos - .05, color2]];
        return gradient
    }
    ;
    this.getGradientColorsForValue = function(value) {
        var topPos = value > .15 ? value : .25;
        var grey = "rgba(177,179,180,255)";
        var blue = "rgba(0,170,255,255)";
        return [[0, grey], [topPos - .25, grey], [topPos - .05, blue]]
    }
    ;
    this.GetGradientForColor = function(aValue, aColor) {
        var gradient = [];
        var color0, color1, color2;
        var topPos = aValue > .15 ? aValue : .25;
        color0 = "#e0e0e0";
        color1 = "#e0e0e0";
        color2 = aColor;
        gradient = [[0, color0], [topPos - .25, color1], [topPos - .05, color2]];
        return gradient
    }
    ;
    this.LevelIndicator = function(_canvas, _maxVal) {
        indicator.m_canvas = _canvas;
        indicator.m_context = indicator.m_canvas.getContext("2d");
        indicator.m_maxVal = _maxVal;
        indicator.m_prevValue = 0;
        indicator.m_margin = .5;
        indicator.m_top = -.5;
        indicator.m_left = -.5;
        indicator.m_right1 = 0;
        indicator.m_right2 = 0;
        indicator.m_height = 0;
        indicator.m_width = 0;
        indicator.m_width2 = 0;
        indicator.m_bottom = 0;
        indicator.m_cpX = 0;
        indicator.m_cpY = 0;
        indicator.m_horizontalLineSpace = 0;
        indicator.m_scaleFactor = 1;
        self.inited = true
    }
    ;
    this.indicatorBackgroundColor = "white";
    this.indicatorRightPartColor = "#ECEDED";
    this.separatorCurveColor = "#A6A8AA";
    this.showIndicatorLines = true;
    this.indicatorLineColor = "white";
    this.indicatorLineWidt = 1;
    this.indicatorLinePositions = [.1, .2, .3, .4, .5, .6, .7, .8, .9];
    this.gradientColors = [[.1, "#EA2221"], [.4, "#E77D00"], [.65, "#EDCA07"], [1, "#00AA00"]];
    this.setCurrentValue = function(_curVal, _forceRedraw) {
        self.gradientColors = self.getGradientColorsForValue(_curVal / 100);
        if (_curVal > indicator.m_maxVal) {
            indicator.m_maxVal = _curVal;
            indicator.m_scaleFactor = indicator.m_maxVal / (indicator.m_bottom - indicator.m_margin)
        }
        _drawBarIndicator(indicator.m_bottom - Math.round(_curVal / indicator.m_scaleFactor), _forceRedraw)
    }
    ;
    var _drawBarIndicator = function(_value, _forceRedraw) {
        if (_forceRedraw || _valueChangedNoticeable(_value)) {
            indicator.m_prevValue = _value;
            _drawIndicatorPolygon();
            _drawMask(_value);
            if (self.showIndicatorLines) {
                _drawIndicatorLines()
            }
            _drawRightPartPolygon();
            _drawSeparatorCurve()
        }
    };
    var _valueChangedNoticeable = function(_value) {
        return _value != indicator.m_prevValue
    };
    var _drawIndicatorPolygon = function() {
        indicator.m_context.beginPath();
        indicator.m_context.moveTo(indicator.m_left, indicator.m_top);
        indicator.m_context.lineTo(indicator.m_left, indicator.m_bottom);
        indicator.m_context.lineTo(indicator.m_right2, indicator.m_bottom);
        indicator.m_context.quadraticCurveTo(indicator.m_cpX, indicator.m_cpY, indicator.m_right1, indicator.m_top);
        indicator.m_context.lineTo(indicator.m_left, indicator.m_top);
        indicator.m_context.fillStyle = _getIndicatorGradient();
        indicator.m_context.fill();
        indicator.m_context.closePath()
    };
    var _drawRightPartPolygon = function() {
        indicator.m_context.beginPath();
        indicator.m_context.moveTo(indicator.m_right2, indicator.m_bottom);
        indicator.m_context.quadraticCurveTo(indicator.m_cpX, indicator.m_cpY, indicator.m_right1, indicator.m_top);
        indicator.m_context.lineTo(indicator.m_width, indicator.m_top);
        indicator.m_context.lineTo(indicator.m_width, indicator.m_bottom);
        indicator.m_context.lineTo(indicator.m_right2, indicator.m_bottom);
        indicator.m_context.fillStyle = self.indicatorRightPartColor;
        indicator.m_context.fill();
        indicator.m_context.closePath()
    };
    var _drawSeparatorCurve = function() {
        indicator.m_context.beginPath();
        indicator.m_context.moveTo(indicator.m_right2, indicator.m_bottom);
        indicator.m_context.quadraticCurveTo(indicator.m_cpX, indicator.m_cpY, indicator.m_right1, indicator.m_top);
        indicator.m_context.strokeStyle = self.separatorCurveColor;
        indicator.m_context.stroke();
        indicator.m_context.closePath()
    };
    var _drawMask = function(_value) {
        indicator.m_context.rect(indicator.m_left, indicator.m_top + _value, indicator.m_right1 - 1, indicator.m_bottom - _value);
        indicator.m_context.fillStyle = self.indicatorBackgroundColor;
        indicator.m_context.fill()
    };
    var _drawIndicatorLines = function() {
        indicator.m_context.beginPath();
        var size = self.indicatorLinePositions.length;
        var y = 0;
        for (var i = 0; i < size; i++) {
            y = indicator.m_bottom - Math.round(self.indicatorLinePositions[i] * 100 * indicator.m_horizontalLineSpace);
            if (y <= indicator.m_bottom && y >= indicator.m_top) {
                indicator.m_context.moveTo(indicator.m_left, y);
                indicator.m_context.lineTo(indicator.m_right1, y)
            }
        }
        indicator.m_context.lineWidth = self.indicatorLineWidth;
        indicator.m_context.strokeStyle = self.indicatorLineColor;
        indicator.m_context.stroke();
        indicator.m_context.closePath()
    };
    var _getIndicatorGradient = function() {
        var grd = indicator.m_context.createLinearGradient(indicator.m_height / 2, indicator.m_bottom, indicator.m_height / 2, indicator.m_top);
        var size = self.gradientColors.length;
        for (var i = 0; i < size; i++) {
            try {
                grd.addColorStop(self.gradientColors[i][0], self.gradientColors[i][1])
            } catch (_error) {
                continue
            }
        }
        return grd
    }
}
]);
angular.module("widgets").service("ValueWheelCounter", [function() {
    function ValueWheelCounter(canvas) {
        if (canvas != null) {
            this._context = canvas.getContext("2d")
        }
    }
    ValueWheelCounter.prototype.txColor = "black";
    ValueWheelCounter.prototype.lzColor = "lightgray";
    ValueWheelCounter.prototype.dpColor = "red";
    ValueWheelCounter.prototype.digits = 14;
    ValueWheelCounter.prototype.decimalPlaces = 1;
    ValueWheelCounter.prototype.commaChar = ".";
    ValueWheelCounter.prototype.thousendSeparator = ",";
    ValueWheelCounter.prototype.unit = "";
    ValueWheelCounter.prototype._fontName = "Calibri";
    ValueWheelCounter.prototype._lastText = "";
    ValueWheelCounter.prototype._lastOffset = -1e4;
    ValueWheelCounter.prototype._lastTxHeight = 0;
    ValueWheelCounter.prototype._digitWidth = null;
    ValueWheelCounter.prototype._blendColor = null;
    ValueWheelCounter.prototype.setBlendColor = function(red, green, blue) {
        if (blue != null) {
            this._blendColor = {
                _red: red,
                _green: green,
                _blue: blue
            }
        } else {
            this._blendColor = null
        }
    }
    ;
    ValueWheelCounter.prototype.setFontName = function(newFontName) {
        this._fontName = newFontName;
        this._digitWidth = null
    }
    ;
    ValueWheelCounter.prototype.setValue = function(value, forceRedraw) {
        var noDraw = value == null;
        var txHeight = this._getTxHeight();
        var textInfo = this._makeTextInfo(noDraw ? 0 : value);
        var offset = Math.round(txHeight * textInfo.firstDigitOffset);
        if (!noDraw) {
            if (this._lastText == textInfo.text && this._lastOffset == offset && this._lastTxHeight == txHeight && !forceRedraw) {
                return NaN
            }
            this._lastText = textInfo.text;
            this._lastOffset = offset;
            this._context.alpha = 0;
            this._context.canvas.width = this._context.canvas.width
        } else {
            this._context.alpha = 0
        }
        if (this._digitWidth == null || this._lastTxHeight != txHeight) {
            this._calcDigitWidth();
            this._lastTxHeight = txHeight
        }
        var yTxPos = Math.round(this._context.canvas.height / 2);
        var xTxPos = 0;
        var i;
        var digitCount = 0;
        var commaDrawn = false;
        var currentTxColor = this.txColor;
        this._context.font = this._getFont(txHeight);
        this._context.textAlign = "left";
        this._context.textBaseline = "middle";
        for (i = 0,
        digitCount = 0; i < textInfo.text.length; i++) {
            var digit = textInfo.text[i];
            offset = digitCount >= this.digits - textInfo.digitsToOffset ? Math.round(txHeight * textInfo.firstDigitOffset) : 0;
            switch (digit) {
            case this.commaChar:
                this._context.fillStyle = this.txColor;
                this._context.fillText(this.commaChar, xTxPos, yTxPos);
                xTxPos += this._context.measureText(this.commaChar).width;
                currentTxColor = this.dpColor;
                break;
            case this.thousendSeparator:
                this._context.fillStyle = this.txColor;
                this._context.fillText(this.thousendSeparator, xTxPos, yTxPos);
                xTxPos += this._context.measureText(this.thousendSeparator).width;
                break;
            default:
                this._context.fillStyle = currentTxColor;
                this._context.fillText(this._aboveDigit(digit), xTxPos, yTxPos - txHeight - offset);
                if (digitCount < textInfo.leadingZero && digit == "0") {
                    this._context.fillStyle = this.lzColor
                }
                this._context.fillText(digit, xTxPos, yTxPos - offset);
                this._context.fillStyle = currentTxColor;
                this._context.fillText(this._belowDigit(digit), xTxPos, yTxPos + txHeight - offset);
                xTxPos += this._digitWidth;
                digitCount++;
                break
            }
        }
        this._context.fillStyle = this.txColor;
        this._context.fillText(this.unit, xTxPos, yTxPos);
        this._drawBlend();
        return xTxPos + this._context.measureText(this.unit).width
    }
    ;
    ValueWheelCounter.prototype.neededWidth = function() {
        return this.setValue()
    }
    ;
    ValueWheelCounter.prototype._drawBlend = function() {
        if (this._blendColor != null) {
            this._context.fillStyle = this._getBlendGradient();
            this._context.fillRect(0, 0, this._context.canvas.width, this._context.canvas.height);
            this._context.closePath()
        }
    }
    ;
    ValueWheelCounter.prototype._getBlendGradient = function(width, height) {
        var grd = this._context.createLinearGradient(0, 0, 0, this._context.canvas.height);
        var alpha0 = this._getBlendColor(0);
        var alpha255 = this._getBlendColor(255);
        grd.addColorStop(0, alpha255);
        grd.addColorStop(.25, alpha0);
        grd.addColorStop(.75, alpha0);
        grd.addColorStop(1, alpha255);
        return grd
    }
    ;
    ValueWheelCounter.prototype._getBlendColor = function(alpha) {
        if (this._blendColor != null) {
            return "rgba(" + this._blendColor._red + "," + this._blendColor._green + "," + this._blendColor._blue + "," + alpha + ")"
        }
        return null
    }
    ;
    ValueWheelCounter.prototype._getTxHeight = function() {
        return Math.round(this._context.canvas.height / 2)
    }
    ;
    ValueWheelCounter.prototype._getFont = function(txHeight) {
        return (txHeight != null ? txHeight : this._getTxHeight()) + "pt " + this._fontName
    }
    ;
    ValueWheelCounter.prototype._calcDigitWidth = function() {
        var i;
        this._context.font = this._getFont();
        this._digitWidth = 0;
        for (i = 0; i < 10; i++) {
            var txMetric = this._context.measureText(i.toString());
            if (this._digitWidth < txMetric.width) {
                this._digitWidth = txMetric.width
            }
        }
    }
    ;
    ValueWheelCounter.prototype._makeTextInfo = function(value) {
        var numValue = parseFloat(value);
        var i;
        if (isNaN(numValue)) {
            return ""
        }
        numValue *= Math.pow(10, this.decimalPlaces);
        var numberToDisplay = Math.floor(numValue);
        var retVal = new Object;
        retVal.text = numberToDisplay.toString();
        retVal.firstDigitOffset = numValue - numberToDisplay;
        retVal.leadingZero = 0;
        for (i = this.digits - retVal.text.length - 1; i >= 0; i--) {
            retVal.text = "0" + retVal.text;
            retVal.leadingZero++
        }
        if (retVal.leadingZero > this.digits - this.decimalPlaces - 1) {
            retVal.leadingZero = this.digits - this.decimalPlaces - 1
        }
        retVal.digitsToOffset = 1;
        for (i = retVal.text.length - 1; i >= 0; i--) {
            if (retVal.text[i] != "9") {
                break
            }
            retVal.digitsToOffset++
        }
        if (retVal.firstDigitOffset > .5) {
            var newEnd = "";
            for (i = 0; i < retVal.digitsToOffset; i++) {
                var pos = retVal.text.length - i - 1;
                newEnd = this._belowDigit(retVal.text[pos]) + newEnd
            }
            retVal.text = retVal.text.substring(0, retVal.text.length - retVal.digitsToOffset) + newEnd;
            retVal.firstDigitOffset -= 1
        }
        for (i = retVal.text.length - this.decimalPlaces - 3; i >= 0; i -= 3) {
            retVal.text = retVal.text.substring(0, i) + this.thousendSeparator + retVal.text.substring(i)
        }
        retVal.text = retVal.text.substring(0, retVal.text.length - this.decimalPlaces) + this.commaChar + retVal.text.substring(retVal.text.length - this.decimalPlaces);
        return retVal
    }
    ;
    ValueWheelCounter.prototype._aboveDigit = function(digit) {
        digit = parseInt(digit);
        if (digit > 0) {
            return (digit - 1).toString()
        } else {
            return "9"
        }
        return "-"
    }
    ;
    ValueWheelCounter.prototype._belowDigit = function(digit) {
        digit = parseInt(digit);
        if (digit < 9) {
            return (digit + 1).toString()
        } else {
            return "0"
        }
        return "-"
    }
    ;
    this.getInstance = function(canvas) {
        return new ValueWheelCounter(canvas)
    }
}
]);
angular.module("widgets").service("SinValueAnimator", [function() {
    function ValueAnimator() {
        this._actualValue = NaN;
        this._targetValue = NaN
    }
    ValueAnimator.prototype.isDone = function() {
        return this._actualValue == this._targetValue
    }
    ;
    function SinValueAnimator(startValue) {
        this.setActualValue(startValue)
    }
    SinValueAnimator.prototype = new ValueAnimator;
    SinValueAnimator.prototype.setActualValue = function(newActualValue) {
        this._actualValue = newActualValue;
        this._targetValue = newActualValue;
        this._startTime = (new Date).getTime();
        this._delta = 0;
        this._animationDuration = 0
    }
    ;
    SinValueAnimator.prototype.getActualValue = function(actualTime) {
        if (!this.isDone()) {
            if (!(actualTime instanceof Date)) {
                actualTime = new Date
            }
            if (actualTime.getTime() >= this._startTime + this._animationDuration) {
                this._actualValue = this._targetValue
            } else {
                var x = (actualTime.getTime() - this._startTime) * (Math.PI / 2) / this._animationDuration;
                var y = (1 - Math.sin(x)) * this._delta;
                this._actualValue = this._targetValue - y
            }
        }
        return this._actualValue
    }
    ;
    SinValueAnimator.prototype.startAnimation = function(targetValue, animationDuration, startDate) {
        this._targetValue = targetValue;
        this._animationDuration = animationDuration;
        this._startTime = startDate != null ? startDate.getTime() : (new Date).getTime();
        this._delta = targetValue - this._actualValue
    }
    ;
    this.getInstance = function(startValue) {
        return new SinValueAnimator(startValue)
    }
}
]);
angular.module("widgets").service("LinearValueAnimator", [function() {
    function ValueAnimator() {
        this._actualValue = NaN;
        this._targetValue = NaN
    }
    ValueAnimator.prototype.isDone = function() {
        return this._actualValue == this._targetValue
    }
    ;
    function LinearValueAnimator(startValue) {
        this.setActualValue(startValue)
    }
    LinearValueAnimator.prototype = new ValueAnimator;
    LinearValueAnimator.prototype.setActualValue = function(newActualValue) {
        this._actualValue = newActualValue;
        this._targetValue = newActualValue;
        this._startTime = (new Date).getTime();
        this._animationDuration = 0;
        this._incPerMillisecond = 0
    }
    ;
    LinearValueAnimator.prototype.getActualValue = function(actualTime) {
        if (!this.isDone()) {
            if (!(actualTime instanceof Date)) {
                actualTime = new Date
            }
            if (actualTime.getTime() >= this._startTime + this._animationDuration) {
                this._actualValue = this._targetValue
            } else {
                this._actualValue = this._targetValue - this._incPerMillisecond * (this._animationDuration - (actualTime.getTime() - this._startTime))
            }
        }
        return this._actualValue
    }
    ;
    LinearValueAnimator.prototype.startAnimation = function(targetValue, animationDuration, startDate) {
        this._targetValue = targetValue;
        this._startTime = startDate != null ? startDate.getTime() : (new Date).getTime();
        this._animationDuration = animationDuration;
        this._incPerMillisecond = (this._targetValue - this._actualValue) / this._animationDuration
    }
    ;
    this.getInstance = function(startValue) {
        return new LinearValueAnimator(startValue)
    }
}
]);
angular.module("widgets").service("BarChart", [function() {
    var aRaphael = Raphael;
    var BarChart = function(aContainer, aConfigObj) {
        var self = this;
        this._Container = $(aContainer);
        this._Paper = null;
        this._Config = {};
        this._Series = [];
        this._Bars = null;
        this._CustomBarAttributes = [];
        this.Destroy = function() {
            console.debug("Destroying BarChart instance.");
            self._Paper.remove()
        }
        ;
        this._Init = function(aConfigObj) {
            var cfg = self._Config;
            self._Paper = aRaphael(self._Container.get(0));
            self._Paper.image("/img/loading.gif", self._Paper.width / 2, self._Paper.height / 2, 32, 32);
            self._InitDefaults(aConfigObj);
            cfg.NoDataMessage = "";
            if (aConfigObj != null) {
                $.extend(cfg, aConfigObj)
            }
            cfg.NoDataMessage = cfg.NoDataMessage == "" ? "No data for chart." : cfg.NoDataMessage;
            self._UpdateDimensions();
            self._Bars = self._Paper.set();
            self._AxesLines = self._Paper.set();
            self._AxesTicks = self._Paper.set();
            self._AxesTickLabels = self._Paper.set();
            $(this._Container).on("mouseover", "rect", function(e) {
                $(e.target).attr({
                    "stroke-width": 1
                })
            });
            $(this._Container).on("mouseout", "rect", function(e) {
                $(e.target).attr({
                    "stroke-width": 0
                })
            });
            $(this._Container).on("click", "rect", function(e) {
                var aIdx = $(this).attr("data-seriesidx");
                $(self).trigger("/dlweb/BarChart/BarClicked", [aIdx, self._Series[aIdx]])
            })
        }
        ;
        this._InitDefaults = function(aConfigObj) {
            var cfg = self._Config;
            cfg.BaseColor = "#4D4D4D";
            cfg.BarColor = "#00AAFF";
            cfg.MinValueY = 0;
            cfg.MaxValueY = 100;
            cfg.TickCountY = 10;
            cfg.YAxisUnit = "";
            cfg.BarPadding = 5;
            cfg.BarMinWidth = 10;
            cfg.BarRadius = 0;
            cfg.AxesOffsetX = 30;
            cfg.AxesOffsetY = 10;
            cfg.BarOffsetY = 50;
            cfg.BarAreaOffsetX = 20;
            cfg.YAxisLabelOffsetX = 5;
            cfg.YAxisTickLength = 10
        }
        ;
        this._UpdateDimensions = function() {
            self._Paper.setSize(self._Container.width(), self._Container.height());
            var cfg = self._Config;
            cfg.BarAreaX = cfg.AxesOffsetX + cfg.YAxisLabelOffsetX + cfg.YAxisTickLength;
            cfg.BarAreaWidth = Math.round(.98 * self._Paper.width) - cfg.BarAreaX;
            cfg.BarAreaHeight = Math.round(.95 * self._Paper.height) - cfg.BarOffsetY;
            cfg.BarWidth = Number.NaN;
            cfg.BarMaxHeight = cfg.BarAreaHeight;
            cfg.BarMaxWidth = cfg.BarAreaWidth / 4
        }
        ;
        this._GetBarHeightForValue = function(aValueY) {
            var cfg = self._Config;
            var maxHeight = self._Paper.height - cfg.BarOffsetY - cfg.AxesOffsetY;
            var bh = Math.min(maxHeight, aValueY / cfg.MaxValueY * cfg.BarMaxHeight);
            if (isNaN(bh) || !isFinite(bh)) {
                bh = 0
            }
            return bh
        }
        ;
        this._CheckSeries = function(aSeries) {
            if (aSeries.length == 0) {
                console.debug("Received empty series");
                var p = self._Paper;
                p.clear();
                p.text(p.width / 2, p.height / 2, self._Config.NoDataMessage).attr("font-size", 12);
                return false
            }
            return true
        }
        ;
        this.SetCustomBarAttributes = function(aBarAttributes) {
            self._CustomBarAttributes = aBarAttributes
        }
        ;
        this.Redraw = function() {
            self._UpdateDimensions();
            self.Draw()
        }
        ;
        this.Update = function(aSeries) {
            if (aSeries.length != self._Series.length) {
                self.Draw(aSeries);
                return
            }
            if (!self._CheckSeries(aSeries)) {
                return
            }
            var cfg = self._Config;
            $.each(aSeries, function(aIdx, aValue) {
                self._ApplyCustomBarAttribute(aIdx, self._Bars[aIdx]);
                self._Bars[aIdx].animate({
                    height: self._GetBarHeightForValue(aValue[1])
                }, 250, "linear", function() {})
            });
            self._Series = aSeries
        }
        ;
        this.Draw = function(aSeries) {
            var series = aSeries || self._Series;
            self._Paper.clear();
            self._DrawAxes(series);
            self._DrawBars(series);
            self._Series = series
        }
        ;
        this._DrawBars = function(aSeries) {
            var cfg = self._Config;
            self._Bars.clear();
            self._Bars.scale(1, -1);
            $.each(aSeries, function(aIdx, aValue) {
                var tickX = self._AxesTicks[aIdx].attr("path")[0][1];
                var r = self._Paper.rect(tickX - cfg.BarWidth / 2, self._Paper.height - cfg.BarOffsetY, cfg.BarWidth, 0, cfg.BarRadius);
                self._Bars.push(r);
                r.transform("s-1");
                r.attr({
                    "stroke-width": 0,
                    stroke: "grey",
                    cursor: "pointer",
                    title: String(aValue[1]),
                    fill: self._Config.BarColor
                });
                $(r.node).attr("data-seriesidx", aIdx);
                $(r.node).attr("data-inverterid", aValue[0].value);
                self._ApplyCustomBarAttribute(aIdx, r);
                r.animate({
                    height: self._GetBarHeightForValue(aValue[1])
                }, 250, "linear")
            })
        }
        ;
        this._ApplyCustomBarAttribute = function(aBarIndex, aBarElement) {
            if (self._CustomBarAttributes[aBarIndex] == null) {
                return
            } else {
                aBarElement.attr(self._CustomBarAttributes[aBarIndex])
            }
        }
        ;
        this._DrawAxes = function(aSeries) {
            var cfg = self._Config;
            self._AxesLines.clear();
            self._AxesTicks.clear();
            self._AxesTickLabels.clear();
            var drawAxisX = function() {
                var tickOffsetY = 0;
                var textOffsetY = 20;
                var tickLength = 10;
                var baseY = self._Paper.height - cfg.BarOffsetY;
                var lineLength = cfg.BarAreaX + cfg.BarAreaWidth;
                var line = self._Paper.path("M" + cfg.AxesOffsetX + "," + baseY + "L" + lineLength + "," + baseY);
                self._AxesLines.push(line);
                var spreadAreaX = cfg.BarAreaX;
                var barSpreadWidth = cfg.BarAreaWidth - 2 * cfg.BarAreaOffsetX;
                var spreadSegmentWidth = Math.round(barSpreadWidth / (aSeries.length + 1));
                cfg.BarWidth = Math.round(spreadSegmentWidth - 2 * cfg.BarPadding);
                cfg.BarWidth = Math.max(Math.min(cfg.BarWidth, cfg.BarMaxWidth), cfg.BarMinWidth);
                $.each(aSeries, function(aIdx, aValue) {
                    var currentX = spreadAreaX + (aIdx + 1) * spreadSegmentWidth;
                    var tick = self._Paper.path("M" + currentX + "," + (baseY + tickOffsetY) + "l0," + tickLength);
                    var tickLabel = self._Paper.text(currentX, baseY + textOffsetY, aValue[0].label);
                    self._AxesTicks.push(tick);
                    self._AxesTickLabels.push(tickLabel)
                })
            };
            var drawAxisY = function() {
                var baseX = cfg.BarAreaX;
                var line = self._Paper.path("M" + baseX + "," + (self._Paper.height - cfg.BarOffsetY + cfg.AxesOffsetY) + "L" + baseX + "," + cfg.AxesOffsetY);
                self._AxesLines.push(line);
                var currentY, tick, tickLabel;
                for (var i = 1; i <= cfg.TickCountY; i++) {
                    currentY = Math.round(self._Paper.height - cfg.BarOffsetY - i * (cfg.BarMaxHeight / cfg.TickCountY));
                    tick = self._Paper.path("M" + (baseX - cfg.YAxisTickLength) + "," + currentY + "l" + cfg.YAxisTickLength + ",0");
                    tickLabel = self._Paper.text(baseX - cfg.YAxisLabelOffsetX - cfg.YAxisTickLength, currentY, Math.round(i * cfg.MaxValueY / cfg.TickCountY) + cfg.YAxisUnit);
                    tickLabel.attr("text-anchor", "end");
                    self._AxesTicks.push(tick);
                    self._AxesTickLabels.push(tickLabel)
                }
            };
            drawAxisX();
            drawAxisY();
            self._AxesLines.attr("stroke", self._Config.BaseColor);
            self._AxesLines.attr("stroke-opacity", 1);
            self._AxesTicks.attr("stroke", self._Config.BaseColor);
            self._AxesTickLabels.attr("fill", self._Config.BaseColor)
        }
        ;
        this._Init(aConfigObj)
    };
    $.extend(BarChart, {
        GetTestSeries: function(aCount) {
            var series = [];
            for (var i = 0; i < aCount; i++) {
                series.push([{
                    value: i,
                    label: "Item " + i
                }, i * 10])
            }
            return series
        }
    });
    this.getInstance = function(aContainer, aConfigObj) {
        return new BarChart(aContainer,aConfigObj)
    }
}
]);
angular.module("widgets").controller("currentDataWidgetCtrl", ["$scope", "levelIndicator", "$log", "ValueWheelCounter", "SinValueAnimator", "LinearValueAnimator", function($scope, levelIndicator, $log, ValueWheelCounter, SinValueAnimator, LinearValueAnimator) {
    var daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    var styleVersion = $("meta[name='dlweb-content-style']").attr("content");
    var energyTodayVWC = null;
    var energyTodayAnimator = null;
    var powerPercentageAnimator = null;
    var displayTimer = 40;
    var displayTimerID = null;
    var nextValueDuration = 5e3;
    var delayFactor = 2;
    var inverterSystemDataModel = dm.model.InverterSystemData.getInstance();
    var powerPercentageStrech = function(value, maxValue) {
        return Math.sin(value / maxValue * Math.PI / 2) * maxValue
    };
    var resize = function() {
        try {
            var layoutContainer = $("#thumb_layout_container");
            var windowWidth = layoutContainer.width();
            var windowHeight = layoutContainer.height();
            var border = Math.min(layoutContainer.width() * .05, windowHeight * .05);
            var powerPercentageCanvas = document.getElementById("thumb_power_level_indicator");
            powerPercentageCanvas.style.left = 0;
            powerPercentageCanvas.style.top = 0;
            powerPercentageCanvas.width = windowWidth;
            powerPercentageCanvas.height = windowHeight;
            if (levelIndicator.inited) {
                levelIndicator.resizeLayout();
                levelIndicator.setCurrentValue(powerPercentageAnimator != null ? powerPercentageAnimator.getActualValue() : 0, true)
            }
            var energyTodayCanvas = document.getElementById("thumb_energy_wheel");
            energyTodayCanvas.height = Math.round((windowHeight > windowWidth ? windowHeight : windowWidth) * .1);
            while (energyTodayVWC.neededWidth() > windowWidth * .5) {
                energyTodayCanvas.height--
            }
            energyTodayCanvas.width = energyTodayVWC.neededWidth();
            energyTodayCanvas.style.left = windowWidth - border - energyTodayCanvas.width + "px";
            energyTodayCanvas.style.top = windowHeight - border - energyTodayCanvas.height + "px";
            if (energyTodayVWC != null) {
                energyTodayVWC.setValue(energyTodayAnimator != null ? energyTodayAnimator.getActualValue() : null, true)
            }
            var energyTodayDiv = document.getElementById("thumb_power_value");
            energyTodayDiv.style.height = Math.round(energyTodayCanvas.height / 2) + "px";
            energyTodayDiv.style.left = border + "px";
            energyTodayDiv.style.top = windowHeight / 2 - parseInt(energyTodayDiv.style.height) / 2 + "px";
            energyTodayDiv.style.width = windowWidth - 2 * border + "px";
            energyTodayDiv.style.font = parseInt(energyTodayDiv.style.height) + "pt Helvetica, Verdana, Arial"
        } catch (e) {}
    };
    var hideLoadingIndicator = function() {
        $("#thumb_loading_container").hide();
        $("#thumb_dataview").show();
        resize()
    };
    var updateDisplay = function() {
        var now = (new Date).getTime();
        if (!energyTodayAnimator.getActualValue(now))
            return;
        energyTodayVWC.setValue(energyTodayAnimator.getActualValue(now));
        if (!powerPercentageAnimator.isDone()) {
            var y = powerPercentageAnimator.getActualValue(now);
            levelIndicator.gradientColors = levelIndicator.GetGradientForValue(y / 100, styleVersion);
            levelIndicator.setCurrentValue(y)
        }
        if (energyTodayAnimator.isDone() && powerPercentageAnimator.isDone()) {
            clearInterval(displayTimerID);
            displayTimerID = null
        }
    };
    var UpdateValues = function(aData) {
        if (aData.DataValid) {
            hideLoadingIndicator();
            var now = new Date;
            var sanePowerPercentage = Math.min(aData.Power.Percentage, 1);
            powerPercentageAnimator.startAnimation(powerPercentageStrech(sanePowerPercentage, 1) * 100, nextValueDuration / 5, now);
            switch (daloState.operateMode) {
            case "meter":
            case "vague-meter":
            case "bidirectional":
                break;
            case "produce-only":
            case "isolate":
                $scope.generate = dm.util.string.FormatValue(aData.Power.Sum, aData.Power.Unit, daloState.language);
                break;
            default:
                $log.error("illegal operate mode");
                break
            }
            var actualEnergyToday = aData.Energy.Day.Sum / 1e3;
            var estimatedEnergyLastPeriode = aData.Power.Sum / 1e3;
            estimatedEnergyLastPeriode *= nextValueDuration;
            estimatedEnergyLastPeriode /= 36e5;
            if (energyTodayVWC.decimalPlaces >= 1 && (estimatedEnergyLastPeriode >= .5 || actualEnergyToday > 99999)) {
                energyTodayVWC.decimalPlaces = 0;
                energyTodayVWC.commaChar = ""
            } else if (energyTodayVWC.decimalPlaces >= 2 && (estimatedEnergyLastPeriode >= .05 || actualEnergyToday > 9999)) {
                energyTodayVWC.decimalPlaces = 1
            } else if (energyTodayVWC.decimalPlaces >= 3 && (estimatedEnergyLastPeriode >= .005 || actualEnergyToday > 999)) {
                energyTodayVWC.decimalPlaces = 2
            }
            if (energyTodayAnimator == null) {
                var startEnergy = actualEnergyToday - estimatedEnergyLastPeriode;
                if (startEnergy < 0) {
                    startEnergy = 0
                }
                energyTodayAnimator = LinearValueAnimator.getInstance(startEnergy);
                energyTodayVWC.setValue(energyTodayAnimator.getActualValue(now))
            }
            energyTodayAnimator.startAnimation(actualEnergyToday, nextValueDuration * delayFactor, now);
            if (displayTimerID == null) {
                displayTimerID = setInterval(updateDisplay, displayTimer)
            }
        } else {
            $scope.generate = "--- W"
        }
    };
    $scope.init = function() {
        $(window).resize(resize);
        $scope.$on("resize", resize);
        function _init() {
            var energyTodayCanvas = document.getElementById("thumb_energy_wheel");
            energyTodayVWC = ValueWheelCounter.getInstance(energyTodayCanvas);
            energyTodayVWC.digits = 6;
            energyTodayVWC.decimalPlaces = 3;
            energyTodayVWC.commaChar = dm.util.string.GetDecimalSeparator(daloState.language);
            energyTodayVWC.thousendSeparator = " ";
            energyTodayVWC.unit = " kWh";
            energyTodayVWC.txColor = "rgba(75,75,77,255)";
            energyTodayVWC.lzColor = "rgba(177,179,180,255)";
            energyTodayVWC.dpColor = "rgba(227,0,27,255)";
            energyTodayVWC.setFontName("Helvetica, Verdana, Arial");
            energyTodayVWC.setBlendColor(236, 237, 237);
            energyTodayCanvas.width = energyTodayVWC.neededWidth();
            resize();
            var powerPercentageCanvas = document.getElementById("thumb_power_level_indicator");
            levelIndicator.LevelIndicator(powerPercentageCanvas, 100);
            levelIndicator.showIndicatorLines = true;
            levelIndicator.indicatorBackgroundColor = "white";
            levelIndicator.indicatorRightPartColor = "#F5F5F5";
            levelIndicator.separatorCurveColor = "rgba(236,237,237,255)";
            levelIndicator.showIndicatorLines = true;
            levelIndicator.indicatorLineColor = "white";
            levelIndicator.indicatorLineWidth = 1;
            var i;
            var indicatorPositions = [];
            for (i = 0; i < 9; i++) {
                indicatorPositions[i] = powerPercentageStrech((i + 1) * .1, 1)
            }
            levelIndicator.indicatorLinePositions = indicatorPositions;
            levelIndicator.gradientColors = levelIndicator.GetGradientForValue(100, styleVersion);
            levelIndicator.resizeLayout();
            levelIndicator.setCurrentValue(0);
            energyTodayVWC.setValue(0, true);
            powerPercentageAnimator = SinValueAnimator.getInstance(0)
        }
        _init()
    }
    ;
    $scope.init();
    $scope.inverterSystemData = inverterSystemDataModel.data;
    $scope.$watch("inverterSystemData", function(newVal, oldVal) {
        if (angular.equals(newVal, {}))
            return;
        UpdateValues(newVal)
    }, true);
    inverterSystemDataModel.subscribe("currentDataWidget", 5e3);
    $scope.$on("$destroy", function() {
        inverterSystemDataModel.unsubscribe("currentDataWidget")
    })
}
]);
angular.module("widgets").service("actualPowerWidget", function() {
    var self = this;
    var _private = {
        ind: undefined
    };
    this.reset = function() {
        _private.ind = undefined
    }
    ;
    this.draw = function(value) {
        if (_private.ind === undefined) {
            _private.ind = new self.LevelIndicator($("#liveViewCanvas")[0],100);
            self.initDrawing()
        }
        if (_private.ind !== undefined) {
            _private.ind.resizeLayout();
            _private.ind.setCurrentValue(value)
        }
    }
    ;
    this.initDrawing = function() {
        _private.ind.showIndicatorLines = true;
        _private.ind.indicatorBackgroundColor = "rgb(242, 242, 242)";
        _private.ind.separatorCurveColor = "rgba(236,237,237,255)";
        _private.ind.showIndicatorLines = true;
        _private.ind.indicatorLineColor = "white";
        _private.ind.indicatorLineWidth = 1;
        _private.ind.indicatorRightPartColor = "#ffffff"
    }
    ;
    this.LevelIndicator = function(_canvas, _maxVal) {
        this.m_canvas = _canvas;
        this.m_context = this.m_canvas.getContext("2d");
        this.m_maxVal = _maxVal;
        this.m_prevValue = 0;
        this.m_margin = .5;
        this.m_top = -.5;
        this.m_left = -.5;
        this.m_right1 = 0;
        this.m_right2 = 0;
        this.m_height = 0;
        this.m_width = 0;
        this.m_width2 = 0;
        this.m_bottom = 0;
        this.m_cpX = 0;
        this.m_cpY = 0;
        this.m_horizontalLineSpace = 0;
        this.m_scaleFactor = 1;
        this.resizeLayout = function() {
            this.initDimensions();
            this.m_scaleFactor = this.m_maxVal / (this.m_height - 2 * this.m_margin)
        }
        ;
        this.initDimensions = function() {
            this.m_width = this.m_canvas.width;
            this.m_height = this.m_canvas.height;
            this.m_cpX = Math.round(this.m_width / 2);
            this.m_cpY = Math.round(this.m_cpX / 5);
            this.m_width2 = Math.round(this.m_width / 3 + this.m_width / 10);
            this.m_bottom = this.m_height + this.m_margin;
            this.m_right1 = this.m_width + this.m_margin;
            this.m_right2 = this.m_width2 + this.m_margin;
            this.m_cpX += this.m_margin;
            this.m_cpY += this.m_margin;
            this.m_horizontalLineSpace = (this.m_height - 2 * this.m_margin) / 100
        }
        ;
        this.GetGradientForValue = function(aValue, aStyleVersion) {
            var gradient = [];
            var color0, color1, color2;
            var topPos = aValue > .15 ? aValue : .25;
            switch (aStyleVersion) {
            case "v2":
                color0 = "#e0e0e0";
                color1 = "#e0e0e0";
                color2 = "#00AAFF";
                break;
            default:
                color0 = "rgba(177,179,180,255)";
                color1 = "rgba(177,179,180,255)";
                color2 = "rgba(226,0,26,255)";
                break
            }
            gradient = [[0, color0], [topPos - .25, color1], [topPos - .05, color2]];
            return gradient
        }
        ;
        this.getGradientColorsForValue = function(value) {
            var topPos = value > .15 ? value : .25;
            var grey = "rgba(177,179,180,255)";
            var blue = "rgba(0,170,255,255)";
            return [[0, grey], [topPos - .25, grey], [topPos - .05, blue]]
        }
        ;
        this.GetGradientForColor = function(aValue, aColor) {
            var gradient = [];
            var color0, color1, color2;
            var topPos = aValue > .15 ? aValue : .25;
            color0 = "#e0e0e0";
            color1 = "#e0e0e0";
            color2 = aColor;
            gradient = [[0, color0], [topPos - .25, color1], [topPos - .05, color2]];
            return gradient
        }
    }
    ;
    self.LevelIndicator.prototype = {
        indicatorBackgroundColor: "white",
        indicatorRightPartColor: "#ECEDED",
        separatorCurveColor: "#A6A8AA",
        showIndicatorLines: true,
        indicatorLineColor: "white",
        indicatorLineWidth: 1,
        indicatorLinePositions: [.1, .2, .3, .4, .5, .6, .7, .8, .9],
        gradientColors: [[.1, "#EA2221"], [.4, "#E77D00"], [.65, "#EDCA07"], [1, "#00AA00"]],
        setCurrentValue: function(_curVal, _forceRedraw) {
            this.gradientColors = this.getGradientColorsForValue(_curVal / 100);
            if (_curVal > this.m_maxVal) {
                this.m_maxVal = _curVal;
                this.m_scaleFactor = this.m_maxVal / (this.m_bottom - this.m_margin)
            }
            this._drawBarIndicator(this.m_bottom - Math.round(_curVal / this.m_scaleFactor), _forceRedraw)
        },
        _drawBarIndicator: function(_value, _forceRedraw) {
            if (_forceRedraw || this._valueChangedNoticeable(_value)) {
                this.m_prevValue = _value;
                this._drawIndicatorPolygon();
                this._drawMask(_value);
                if (this.showIndicatorLines) {
                    this._drawIndicatorLines()
                }
                this._drawRightPartPolygon();
                this._drawSeparatorCurve()
            }
        },
        _valueChangedNoticeable: function(_value) {
            return _value != this.m_prevValue
        },
        _drawIndicatorPolygon: function() {
            this.m_context.beginPath();
            this.m_context.moveTo(this.m_left, this.m_top);
            this.m_context.lineTo(this.m_left, this.m_bottom);
            this.m_context.lineTo(this.m_right2, this.m_bottom);
            this.m_context.quadraticCurveTo(this.m_cpX, this.m_cpY, this.m_right1, this.m_top);
            this.m_context.lineTo(this.m_left, this.m_top);
            this.m_context.fillStyle = this._getIndicatorGradient();
            this.m_context.fill();
            this.m_context.closePath()
        },
        _drawRightPartPolygon: function() {
            this.m_context.beginPath();
            this.m_context.moveTo(this.m_right2, this.m_bottom);
            this.m_context.quadraticCurveTo(this.m_cpX, this.m_cpY, this.m_right1, this.m_top);
            this.m_context.lineTo(this.m_width, this.m_top);
            this.m_context.lineTo(this.m_width, this.m_bottom);
            this.m_context.lineTo(this.m_right2, this.m_bottom);
            this.m_context.fillStyle = this.indicatorRightPartColor;
            this.m_context.fill();
            this.m_context.closePath()
        },
        _drawSeparatorCurve: function() {
            this.m_context.beginPath();
            this.m_context.moveTo(this.m_right2, this.m_bottom);
            this.m_context.quadraticCurveTo(this.m_cpX, this.m_cpY, this.m_right1, this.m_top);
            this.m_context.strokeStyle = this.separatorCurveColor;
            this.m_context.stroke();
            this.m_context.closePath()
        },
        _drawMask: function(_value) {
            this.m_context.rect(this.m_left, this.m_top + _value, this.m_right1 - 1, this.m_bottom - _value);
            this.m_context.fillStyle = this.indicatorBackgroundColor;
            this.m_context.fill()
        },
        _drawIndicatorLines: function() {
            this.m_context.beginPath();
            var size = this.indicatorLinePositions.length;
            var y = 0;
            for (var i = 0; i < size; i++) {
                y = this.m_bottom - Math.round(this.indicatorLinePositions[i] * 100 * this.m_horizontalLineSpace);
                if (y <= this.m_bottom && y >= this.m_top) {
                    this.m_context.moveTo(this.m_left, y);
                    this.m_context.lineTo(this.m_right1, y)
                }
            }
            this.m_context.lineWidth = this.indicatorLineWidth;
            this.m_context.strokeStyle = this.indicatorLineColor;
            this.m_context.stroke();
            this.m_context.closePath()
        },
        _getIndicatorGradient: function() {
            var grd = this.m_context.createLinearGradient(this.m_height / 2, this.m_bottom, this.m_height / 2, this.m_top);
            var size = this.gradientColors.length;
            for (var i = 0; i < size; i++) {
                try {
                    grd.addColorStop(this.gradientColors[i][0], this.gradientColors[i][1])
                } catch (_error) {
                    continue
                }
            }
            return grd
        }
    }
});
angular.module("widgets").service("energyFlowWidget", ["actualPowerWidget", function(actualPowerWidget) {
    var self = this;
    var siteNowDataModel = dm.model.SiteNowData.getInstance();
    var daloState = dm.model.DaloState.getInstance("DaloStateModel", []);
    var inverterInfo = dm.model.InverterInfo.getInstance();
    var cancelSiteNowDataUpdate = function() {
        return true
    };
    var inited = false;
    this.data = {
        apwData: {
            Power: 0,
            Unit: "W"
        },
        apw: {
            mode: null
        }
    };
    var _private = {
        widget: null,
        peakPower: 0,
        ind: undefined
    };
    var onData = function(siteNowData) {
        var mode2Value = function(mode) {
            switch (mode) {
            case "disabled":
                return 0;
            case "normal":
                return 1;
            case "service":
                return 2;
            case "charge boost":
                return 3;
            case "nearly depleted":
                return 4;
            case "suspended":
                return 5;
            case "calibrate":
                return 6;
            case "grid support":
                return 7;
            case "deplete recovery":
                return 8;
            case "none operable":
                return 9;
            case "stopped (temperature)":
                return 13;
            case "battery full":
                return 14;
            default:
                return 1
            }
        };
        if (self.data.apw.mode != siteNowData.Mode) {
            self.data.apw.mode = siteNowData.Mode;
            return
        }
        if (self.data.apw.mode !== "produce-only") {
            if (_private.widget == undefined || _private.widget == null)
                initWidget();
            _private.widget.changeValuesSigned(true, true, siteNowData.P_PV, siteNowData.P_Grid, siteNowData.P_Load, siteNowData.P_Akku, siteNowData.batterySOC, mode2Value(siteNowData.batteryMode), siteNowData.P_Ohmpilots)
        } else {
            self.data.apwData.Power = siteNowData.P_AC;
            self.data.apwData.Unit = "W";
            if (_private.peakPower > 0)
                actualPowerWidget.draw(Math.floor(self.data.apwData.Power / _private.peakPower) * 100);
            else
                actualPowerWidget.draw(0)
        }
    };
    var onDataChanged = function() {
        if (inverterInfo.dataValid && _private.peakPower != inverterInfo.data.PVPower.Sum) {
            _private.peakPower = inverterInfo.data.PVPower.Sum;
            if (_private.widget != null)
                _private.widget.setPeakPower(_private.peakPower)
        }
        onData(siteNowDataModel.data)
    };
    function initWidget() {
        var checkExist = setInterval(function() {
            var widgetElement = document.querySelector("#energy-flow-widget-area");
            if (widgetElement) {
                _private.widget = new EnergyFlow.EnergyFlowWidget(widgetElement,{
                    peakPower: _private.peakPower,
                    startAnimation: false,
                    screenWidth: $("#energy-flow-widget-area").innerWidth(),
                    screenHeight: $("#energy-flow-widget-area").innerWidth(),
                    lang: daloState.language,
                    decimalSeparator: ".",
                    imgPath: "img/solarweb_widget/",
                    showHint: false,
                    showValues: true
                });
                clearInterval(checkExist)
            }
        }, 500)
    }
    function setWidgetSize(size) {
        if (size == "big") {
            $("#energy-flow-widget").parent().parent().addClass("big");
            initWidget()
        } else if (size == "small") {
            $("#energy-flow-widget").parent().parent().removeClass("big")
        }
    }
    this.startWidget = function() {
        if (!inited) {
            self.data.apw.mode = daloState.operateMode;
            inited = true
        }
        if (self.data.apw.mode == "produce-only")
            setWidgetSize("small");
        else
            setWidgetSize("big");
        cancelSiteNowDataUpdate = siteNowDataModel.on("dataChanged", onDataChanged);
        siteNowDataModel.subscribe("energyFlowWidget", 5e3)
    }
    ;
    this.stopWidget = function() {
        siteNowDataModel.unsubscribe("energyFlowWidget");
        cancelSiteNowDataUpdate();
        actualPowerWidget.reset()
    }
}
]);
angular.module("widgets").controller("energyFlowWidgetCtrl", ["$scope", "$log", "$interval", "energyFlowWidget", "actualPowerWidget", "$rootScope", function($scope, $log, $interval, energyFlowWidget, actualPowerWidget, $rootScope) {
    $scope.reloadWidget = true;
    $scope.data = energyFlowWidget.data;
    $rootScope.$on("$translateChangeSuccess", function() {
        energyFlowWidget.stopWidget();
        $scope.reloadWidget = true
    });
    $scope.loadWidget = function() {
        $scope.reloadWidget = false;
        energyFlowWidget.startWidget()
    }
    ;
    $scope.$watch("data.apw.mode", function(newVal, oldVal) {
        $scope.mode = newVal;
        if (newVal == oldVal || !newVal || !oldVal)
            return;
        energyFlowWidget.stopWidget();
        $scope.reloadWidget = true
    });
    $scope.$on("$destroy", function() {
        energyFlowWidget.stopWidget()
    })
}
]);
var dm;
(function(dm) {
    var other;
    (function(other) {
        var InverterComparisonChart;
        (function(InverterComparisonChart) {
            var Notification = dm.model.notifications.Notification;
            var NotificationLevel = dm.model.notifications.Level;
            var NotificationText = dm.model.notifications.NotificationText;
            var NotificationLinebreak = dm.model.notifications.NotificationLinebreak;
            angular.module("widgets").directive("inverterComparisonChart", ["$window", "$state", "$translate", "BarChart", function($window, $state, $translate, BarChart) {
                var _private = {
                    dict: null
                };
                _private.dict = {};
                var inverterInfoModel = dm.model.InverterInfo.getInstance();
                var inverterSystemDataModel = dm.model.InverterSystemData.getInstance();
                $translate(["INVERTER", "NO_INVERTERS_SELECTED", "SELECT_INVERTERS", "NO_INVERTERS_AVAILABLE", "NO_PVPOWER_DEFINED", "DEFINE_PVPOWER", "PVPOWER_EXCEEDED"]).then(function(dict) {
                    _private.dict = dict
                });
                var _$ = $;
                var linkFn = function(scope, element, attrs) {
                    var daloState = dm.model.DaloState.getInstance("DaloStateModel", scope);
                    var winResizeTimer = null;
                    var self = {
                        scope: scope,
                        base: undefined,
                        series: [],
                        cancelInverterInfoUpdate: undefined,
                        cancelInverterSystemDataUpdate: undefined,
                        uiInitDone: false,
                        barChartConfig: {},
                        userViewSettings: {},
                        chartCount: 0
                    };
                    self.charts = [];
                    var _$ = $;
                    self.resetSize = function() {
                        if (self.charts != null) {
                            $.each(self.charts, function(aIdx) {
                                self.charts[aIdx].Redraw()
                            })
                        }
                    }
                    ;
                    self.changeSize = function() {
                        self.setDimensions(self.chartCount);
                        $("#datawidget_detailinfos").css({
                            display: "block"
                        });
                        $("#detail_accordion").accordion("refresh");
                        if (self.charts != null) {
                            $.each(self.charts, function(aIdx) {
                                self.charts[aIdx].Redraw()
                            })
                        }
                        var _$ = $
                    }
                    ;
                    self.getTopInverter = function() {
                        var topIdx = null;
                        var topItem;
                        for (var aIdx in self.series) {
                            var aItem = self.series[aIdx];
                            if (topIdx == null) {
                                topIdx = aIdx;
                                topItem = aItem
                            } else if (aItem[1] > self.series[topIdx][1]) {
                                topIdx = aIdx;
                                topItem = aItem
                            }
                        }
                        return {
                            bar: self._Bars[topIdx],
                            datapoint: topItem
                        }
                    }
                    ;
                    self.markTopInverter = function() {
                        if (!self._TopMarker) {
                            self._TopMarker = self._Paper.image("/img/homer-wohoo-small.png", 0, 0, 30, 27)
                        }
                        var topDevice = self.GetTopInverter();
                        var finalBarHeight = self._GetBarHeightForValue(topDevice.datapoint[1]);
                        self._TopMarker.animate({
                            x: topDevice.bar.attr("x") + self._Config.BarWidth / 2 - self._TopMarker.attr("width") / 2,
                            y: topDevice.bar.attr("y") - finalBarHeight - self._TopMarker.attr("height")
                        }, 250, "linear", function() {});
                        return
                    }
                    ;
                    self.getSeriesAverage = function() {
                        var sum = 0;
                        $.each(self.series, function(aIdx, aPoint) {
                            sum += aPoint[1]
                        });
                        return sum / self.series.length
                    }
                    ;
                    self.getBarAttributes = function(series) {
                        var attr = [];
                        var avgValue = self.getSeriesAverage();
                        var getBarFill = function(aIdx, aSerie) {
                            var barValue = aSerie[aIdx][1];
                            var relValue = Math.min(100 * (barValue / avgValue), 100);
                            var color;
                            if (barValue > 100) {
                                return "#FF0000"
                            }
                            if (relValue > 90) {
                                color = "#00AAFF"
                            } else if (relValue > 50) {
                                color = "#FEAD00"
                            } else {
                                color = "#FF0000"
                            }
                            return "270-#E0E0E0-#E0E0E0:20-" + color
                        };
                        for (var i = 0; i < series.length; i++) {
                            attr[i] = {
                                title: _private.dict.INVERTER + " " + series[i][0].label + ": " + dm.util.string.FormatNumber(series[i][1], null, daloState.language) + "%",
                                fill: getBarFill(i, series)
                            }
                        }
                        return attr
                    }
                    ;
                    self.configureCharts = function(aInverterInfo) {
                        var shownDevices = 0;
                        var availableDevices = aInverterInfo.Count;
                        var neededChartCount;
                        self.userViewSettings = {};
                        var hasUndefinedPowers = false;
                        for (var aIdx in aInverterInfo.DeviceInfos) {
                            var aDevice = aInverterInfo.DeviceInfos[aIdx];
                            if (aDevice == null) {
                                return
                            } else {
                                if (!aDevice.hasOwnProperty("Show") || aDevice.Show == true) {
                                    self.userViewSettings[aIdx] = true;
                                    shownDevices++
                                }
                                if (aDevice.PVPower <= 0) {
                                    hasUndefinedPowers = true
                                }
                            }
                        }
                        neededChartCount = shownDevices > 25 ? 2 : 1;
                        self.barChartConfig.YAxisUnit = "%";
                        self.barChartConfig.NoDataMessage = "";
                        if (shownDevices == 0 && availableDevices > 0) {
                            self.barChartConfig.NoDataMessage = _private.dict.NO_INVERTERS_SELECTED;
                            dm.model.notifications.add(new Notification("no_inverters_selected",NotificationLevel.info,[new NotificationText("NO_INVERTERS_SELECTED"), new NotificationLinebreak, new NotificationText("SELECT_INVERTERS")],"settings.inverter"))
                        } else {
                            dm.model.notifications.remove("no_inverters_selected")
                        }
                        if (availableDevices == 0) {
                            self.barChartConfig.NoDataMessage = _private.dict.NO_INVERTERS_AVAILABLE
                        }
                        if (hasUndefinedPowers) {
                            dm.model.notifications.add(new Notification("no_pvpower_defined",NotificationLevel.info,[new NotificationText("NO_PVPOWER_DEFINED"), new NotificationLinebreak, new NotificationText("DEFINE_PVPOWER")],"settings.inverter"))
                        } else {
                            dm.model.notifications.remove("no_pvpower_defined")
                        }
                        return neededChartCount
                    }
                    ;
                    self.setDimensions = function(aChartCount) {
                        var mainContainer = $("#centercol_content");
                        if (mainContainer.size() == 0)
                            mainContainer = $("#pagecontent");
                        var mainW = mainContainer.width() - 40;
                        var mainH = mainContainer.height();
                        var chartScaleW = .7;
                        var chartScaleH = .95 / aChartCount;
                        var item = $(".inverter_comparison_chart");
                        if (item.length) {
                            item.css({
                                width: chartScaleW * mainW,
                                height: .95 * mainH
                            })
                        }
                        for (var i = 0; i < aChartCount; i++) {
                            var item = $("#inverter_comparison_chart_" + i);
                            item.css({
                                width: chartScaleW * mainW,
                                height: chartScaleH * mainH
                            })
                        }
                    }
                    ;
                    self.initUi = function(aInverterInfo) {
                        var chartCount = self.configureCharts(aInverterInfo);
                        self.setDimensions(chartCount);
                        self.chartCount = chartCount;
                        scope.loading = false;
                        for (var i = 0; i < chartCount; i++) {
                            (function(aSliceIndex) {
                                self.charts.push({});
                                var newChart = self.charts[self.charts.length - 1];
                                var filterFn = function(aSeries) {
                                    var displaySeries = $.grep(aSeries, function(aItem, aIdx) {
                                        return self.userViewSettings.hasOwnProperty(aItem[0].value)
                                    });
                                    var sliceLength = displaySeries.length / chartCount;
                                    return $.grep(displaySeries, function(aItem, aIdx) {
                                        return aIdx >= aSliceIndex * sliceLength && aIdx < aSliceIndex * sliceLength + sliceLength
                                    })
                                };
                                newChart.Bar = BarChart.getInstance($("#inverter_comparison_chart_" + aSliceIndex), self.barChartConfig);
                                newChart.FilterFunction = filterFn;
                                angular.extend(newChart, newChart.Bar);
                                var fun = function(aEvent, aIdx, aDatapoint) {
                                    if ($("#detail_accordion").accordion("option", "active") != 1) {
                                        $("#detail_accordion").accordion("activate", "1")
                                    }
                                    dm.model.inverterDetailWidget.hideAll();
                                    dm.model.inverterDetailWidget.setVisible(aDatapoint[0].value);
                                    $("#inverter_detail_section").scrollTop(dm.model.inverterDetailWidget.getNumberOfPreviousInverters(aDatapoint[0].value) * 65)
                                };
                                angular.element(newChart.Bar).bind("/dlweb/BarChart/BarClicked", fun)
                            }
                            )(i)
                        }
                    }
                    ;
                    self.onInverterInfo = function() {
                        var aInverterInfo = inverterInfoModel.data;
                        if (!aInverterInfo.DataValid)
                            return;
                        if (!self.uiInitDone) {
                            self.initUi(aInverterInfo);
                            self.uiInitDone = true
                        }
                    }
                    ;
                    self.onSystemData = function(aEvent, aData) {
                        if (!self.uiInitDone || !aData.DataValid) {
                            return
                        }
                        self.series = [];
                        var percentages = aData.Power.DevicesPercentage;
                        var energies = aData.Energy.Day.Devices;
                        var hasPowerExcess = false;
                        $.each(energies, function(aDevId, aEnergyItem) {
                            var devValue;
                            if (!percentages.hasOwnProperty(aDevId)) {
                                devValue = 0
                            } else {
                                devValue = 100 * percentages[aDevId];
                                if (!devValue)
                                    devValue = 0;
                                if (devValue > 100) {
                                    hasPowerExcess = true
                                }
                            }
                            self.series.push([{
                                value: aDevId,
                                label: aDevId
                            }, devValue])
                        });
                        if (hasPowerExcess) {
                            dm.model.notifications.add(new Notification("power_excess",NotificationLevel.info,[new NotificationText("PVPOWER_EXCEEDED")],"settings.inverter"))
                        } else {
                            dm.model.notifications.remove("power_excess")
                        }
                        for (var _chartIdx in self.charts) {
                            var fn = function(chartIdx) {
                                var chart = self.charts[chartIdx];
                                if (chart.FilterFunction != null) {
                                    chart.series = chart.FilterFunction(self.series)
                                }
                                chart.SetCustomBarAttributes(self.getBarAttributes(chart.series));
                                chart.Update(chart.series)
                            }(_chartIdx)
                        }
                    }
                    ;
                    scope.loading = true;
                    self.cancelInverterInfoUpdate = inverterInfoModel.on("dataChanged", self.onInverterInfo);
                    self.cancelInverterSystemDataUpdate = inverterSystemDataModel.on("dataChanged", self.onSystemData);
                    inverterInfoModel.subscribe("inverterComparisonChart", 5e3);
                    inverterSystemDataModel.subscribe("inverterComparisonChart", 5e3);
                    scope.$on("$destroy", function() {
                        inverterSystemDataModel.unsubscribe("inverterComparisonChart");
                        inverterInfoModel.unsubscribe("inverterComparisonChart");
                        if (self.cancelInverterSystemDataUpdate)
                            self.cancelInverterSystemDataUpdate();
                        self.cancelInverterSystemDataUpdate = undefined;
                        if (self.cancelInverterInfoUpdate)
                            self.cancelInverterInfoUpdate();
                        self.cancelInverterInfoUpdate = undefined
                    });
                    angular.element(window).on("resize", function() {
                        if (winResizeTimer)
                            dm.ngjs.$timeout.cancel(winResizeTimer);
                        winResizeTimer = dm.ngjs.$timeout(function() {
                            self.resetSize();
                            self.changeSize()
                        }, 250)
                    })
                };
                return {
                    restrict: "E",
                    replace: true,
                    template: '<div class="inverter_comparison_chart">                          <div> <img src="/img/loading.gif" style="margin: auto;position: absolute;top: 0;bottom: 0;left: 0;right: 0;" ng-show="loading"/> </div>                          <div id="inverter_comparison_chart_0"></div>                          <div id="inverter_comparison_chart_1"></div>                        </div>',
                    link: linkFn
                }
            }
            ])
        }
        )(InverterComparisonChart = other.InverterComparisonChart || (other.InverterComparisonChart = {}))
    }
    )(other = dm.other || (dm.other = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var other;
    (function(other) {
        var InverterComparisonChartCtrl;
        (function(InverterComparisonChartCtrl) {
            var Notification = dm.model.notifications.Notification;
            var NotificationLevel = dm.model.notifications.Level;
            var NotificationText = dm.model.notifications.NotificationText;
            var NotificationLinebreak = dm.model.notifications.NotificationLinebreak;
            angular.module("widgets").controller("inverterComparisonChartCtrl", ["$scope", "$translate", "$log", "BarChart", function($scope, $translate, $log, BarChart) {
                var _private = {
                    barChartConfig: {
                        YAxisUnit: "",
                        NoDataMessage: ""
                    },
                    userViewSettings: null,
                    dict: {
                        INVERTER: "",
                        NO_INVERTERS_SELECTED: "",
                        NO_INVERTERS_AVAILABLE: ""
                    }
                };
                $translate(["INVERTER", "NO_INVERTERS_SELECTED", "NO_INVERTERS_AVAILABLE"]).then(function(dict) {
                    _private.dict = dict
                });
                var daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
                var cancelInverterInfoUpdate = undefined;
                var cancelInverterSystemDataUpdate = undefined;
                var inverterComparisonChart = undefined;
                var uiInitDone = false;
                var userViewSettings = {};
                var inverterInfoModel = dm.model.InverterInfo.getInstance();
                var inverterSystemDataModel = dm.model.InverterSystemData.getInstance();
                var InverterComparisonChart = function(aContainer, aChartConfigObj, aSeriesFilterFunction) {
                    var self = this;
                    this._Base = BarChart.getInstance(aContainer, aChartConfigObj);
                    $.extend(this, this._Base);
                    this._Container = $(aContainer);
                    try {
                        this._HomerEnabled = document.cookie.indexOf("happy_easter=enable_homer") != -1
                    } catch (e) {
                        this._HomerEnabled = false
                    }
                    this.SeriesFilterFunction = aSeriesFilterFunction;
                    this.Destroy = function() {
                        $log.debug("Destroying InverterComparisonChart instance.");
                        self._Base.Destroy()
                    }
                    ;
                    this.GetPaper = function() {
                        return self._Paper
                    }
                    ;
                    this.GetTopInverter = function() {
                        var topIdx = null;
                        var topItem;
                        $.each(self._Series, function(aIdx, aItem) {
                            if (topIdx == null) {
                                topIdx = aIdx;
                                topItem = aItem
                            } else {
                                if (aItem[1] > self._Series[topIdx][1]) {
                                    topIdx = aIdx;
                                    topItem = aItem
                                }
                            }
                        });
                        return {
                            bar: self._Bars[topIdx],
                            datapoint: topItem
                        }
                    }
                    ;
                    this.MarkTopInverter = function() {
                        if (!self._TopMarker) {
                            self._TopMarker = self._Paper.image("/img/homer-wohoo-small.png", 0, 0, 30, 27)
                        }
                        var topDevice = self.GetTopInverter();
                        var finalBarHeight = self._GetBarHeightForValue(topDevice.datapoint[1]);
                        self._TopMarker.animate({
                            x: topDevice.bar.attr("x") + self._Config.BarWidth / 2 - self._TopMarker.attr("width") / 2,
                            y: topDevice.bar.attr("y") - finalBarHeight - self._TopMarker.attr("height")
                        }, 250, "linear", function() {});
                        return
                    }
                    ;
                    this.GetSeriesAverage = function() {
                        var sum = 0;
                        $.each(self._Series, function(aIdx, aPoint) {
                            sum += aPoint[1]
                        });
                        return sum / self._Series.length
                    }
                    ;
                    this._SetupUI = function() {
                        var _$ = $;
                        _$(self._Base).bind("/dlweb/BarChart/BarClicked", function(aEvent, aIdx, aDatapoint) {
                            var devId = aDatapoint[0].value;
                            $(self).trigger("/dlweb/InverterComparisonChart/WantInverterDetail", [devId])
                        })
                    }
                    ;
                    this._OnSystemData = function(aEvent, aData) {
                        if (!aData.DataValid) {
                            return
                        }
                        self._Series = [];
                        var percentages = aData.Power.DevicesPercentage;
                        var energies = aData.Energy.Day.Devices;
                        var hasPowerExcess = false;
                        $.each(energies, function(aDevId, aEnergyItem) {
                            var devValue;
                            if (!percentages.hasOwnProperty(aDevId)) {
                                devValue = 0
                            } else {
                                devValue = 100 * percentages[aDevId];
                                if (devValue > 100) {
                                    hasPowerExcess = true
                                }
                            }
                            self._Series.push([{
                                value: aDevId,
                                label: aDevId
                            }, devValue])
                        });
                        if (self.SeriesFilterFunction != null) {
                            self._Series = self.SeriesFilterFunction(self._Series);
                            if (hasPowerExcess) {
                                $.each(self._Series, function(aIdx, aItem) {
                                    if (aItem[1] > 100) {
                                        $(self).trigger("/dlweb/InverterComparisonChart/PowerExcess", aItem)
                                    }
                                })
                            }
                        }
                        self.SetCustomBarAttributes(self._GetBarAttributes());
                        self.Update(self._Series);
                        try {
                            if (self._HomerEnabled) {
                                self.MarkTopInverter()
                            }
                        } catch (e) {}
                    }
                    ;
                    this._GetBarAttributes = function() {
                        var attr = [];
                        var avgValue = self.GetSeriesAverage();
                        var getBarFill = function(aIdx) {
                            var barValue = self._Series[aIdx][1];
                            var relValue = Math.min(100 * (barValue / avgValue), 100);
                            var color;
                            if (barValue > 100) {
                                return "#FF0000"
                            }
                            if (relValue > 90) {
                                color = "#00AAFF"
                            } else if (relValue > 50) {
                                color = "#FEAD00"
                            } else {
                                color = "#FF0000"
                            }
                            return "270-#E0E0E0-#E0E0E0:20-" + color
                        };
                        for (var i = 0; i < self._Series.length; i++) {
                            attr[i] = {
                                title: _private.dict["INVERTER"] + " " + self._Series[i][0].label + ": " + dm.util.string.FormatNumber(self._Series[i][1], null, daloState.language) + "%",
                                fill: getBarFill(i)
                            }
                        }
                        return attr
                    }
                    ;
                    self._SetupUI()
                };
                var configureCharts = function(aInverterInfo) {
                    var shownDevices = 0;
                    var availableDevices = aInverterInfo.Count;
                    var neededChartCount;
                    userViewSettings = {};
                    var hasUndefinedPowers = false;
                    $.each(aInverterInfo.DeviceInfos, function(aIdx, aDevice) {
                        if (aDevice == null) {
                            return
                        } else {
                            if (!aDevice.hasOwnProperty("Show") || aDevice.Show == true) {
                                userViewSettings[aIdx] = true;
                                shownDevices++
                            }
                            if (aDevice.PVPower <= 0) {
                                hasUndefinedPowers = true
                            }
                        }
                    });
                    neededChartCount = shownDevices > 25 ? 2 : 1;
                    $log.debug("" + shownDevices, "of", availableDevices, "devices are shown, need to create ", neededChartCount, "charts.");
                    _private.barChartConfig.YAxisUnit = "%";
                    _private.barChartConfig.NoDataMessage = "";
                    if (shownDevices == 0 && availableDevices > 0) {
                        _private.barChartConfig.NoDataMessage = _private.dict.NO_INVERTERS_SELECTED;
                        dm.model.notifications.add(new Notification("no_inverters_selected",NotificationLevel.info,[new NotificationText("NO_INVERTERS_SELECTED"), new NotificationLinebreak, new NotificationText("SELECT_INVERTERS")]))
                    } else {
                        dm.model.notifications.remove("no_inverters_selected")
                    }
                    if (availableDevices == 0) {
                        _private.barChartConfig.NoDataMessage = _private.dict.NO_INVERTERS_AVAILABLE
                    }
                    if (hasUndefinedPowers) {
                        dm.model.notifications.add(new Notification("no_pvpower_defined",NotificationLevel.info,[new NotificationText("NO_PVPOWER_DEFINED"), new NotificationLinebreak, new NotificationText("DEFINE_PVPOWER")]))
                    } else {
                        dm.model.notifications.remove("no_pvpower_defined")
                    }
                    return neededChartCount
                };
                var setDimensions = function(aChartCount) {
                    var mainContainer = $("#centercol_content");
                    if (mainContainer.size() == 0)
                        var mainContainer = $("#page_content");
                    var mainW = mainContainer.width() - 40;
                    var mainH = mainContainer.height();
                    var chartScaleW = .7;
                    var chartScaleH = .95 / aChartCount;
                    var item = $(".inverter_comparison_chart");
                    if (item.length) {
                        item.css({
                            width: chartScaleW * mainW,
                            height: chartScaleH * mainH
                        })
                    }
                };
                var onInverterInfo = function() {
                    var aInverterInfo = inverterInfoModel.data;
                    if (!aInverterInfo.DataValid)
                        return;
                    if (!uiInitDone) {
                        uiInitDone = true;
                        var chartCount = configureCharts(aInverterInfo);
                        setDimensions(chartCount);
                        inverterComparisonChart = new InverterComparisonChart($(".inverter_comparison_chart"),_private.barChartConfig)
                    }
                };
                var onSystemData = function(aEvent, aData) {
                    if (inverterComparisonChart)
                        inverterComparisonChart._OnSystemData(aEvent, aData)
                };
                $scope.systemData = {};
                $scope.deviceInfos = {};
                $scope.init = function() {
                    cancelInverterInfoUpdate = inverterInfoModel.on("dataChanged", onInverterInfo);
                    cancelInverterSystemDataUpdate = inverterSystemDataModel.on("dataChanged", onSystemData);
                    inverterInfoModel.subscribe("inverterComparisonChart");
                    inverterSystemDataModel.subscribe("inverterComparisonChart", 5e3)
                }
                ;
                $scope.init();
                $scope.$on("$destroy", function() {
                    inverterSystemDataModel.unsubscribe("inverterComparisonChart");
                    inverterInfoModel.unsubscribe("inverterComparisonChart");
                    if (cancelInverterSystemDataUpdate)
                        cancelInverterSystemDataUpdate();
                    cancelInverterSystemDataUpdate = undefined;
                    if (cancelInverterInfoUpdate)
                        cancelInverterInfoUpdate();
                    cancelInverterInfoUpdate = undefined
                })
            }
            ])
        }
        )(InverterComparisonChartCtrl = other.InverterComparisonChartCtrl || (other.InverterComparisonChartCtrl = {}))
    }
    )(other = dm.other || (dm.other = {}))
}
)(dm || (dm = {}));
angular.module("widgets").controller("inverterDetailWidgetCtrl", ["$scope", function($scope) {
    var cancelInverterInfoUpdate = undefined;
    var cancelInverterSystemDataUpdate = undefined;
    var daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    var deviceDB = dm.model.DeviceDB.getInstance();
    var inverterInfoModel = dm.model.InverterInfo.getInstance();
    var inverterSystemDataModel = dm.model.InverterSystemData.getInstance();
    var deviceCount = undefined;
    var onSystemData = function() {
        var aData = inverterSystemDataModel.data;
        if (!aData.DataValid)
            return;
        $scope.systemData = aData
    };
    var onInverterInfo = function() {
        var aData = inverterInfoModel.data;
        if (!aData.DataValid)
            return;
        var newDeviceCount = Object.keys(aData.DeviceInfos).length;
        if (deviceCount != undefined && newDeviceCount != deviceCount) {
            $scope.deviceCountChanging = true;
            dm.ngjs.$timeout(function() {
                $scope.deviceCountChanging = false
            }, 1)
        }
        deviceCount = newDeviceCount;
        $scope.deviceInfos = inverterInfoModel.data.DeviceInfos;
        dm.model.inverterDetailWidget.initInverterDetails($scope.deviceInfos)
    };
    $scope.systemData = {
        Energy: {
            Day: {
                Sum: "",
                Unit: "",
                Devices: {}
            },
            Year: {
                Sum: "",
                Unit: "",
                Devices: {}
            },
            Total: {
                Sum: "",
                Unit: "",
                Devices: {}
            }
        },
        Power: {
            Devices: {},
            Unit: null
        }
    };
    $scope.deviceInfos = {};
    $scope.inverterDetails = {};
    $scope.deviceCountChanging = false;
    $scope.init = function() {
        cancelInverterInfoUpdate = inverterInfoModel.on("dataChanged", onInverterInfo);
        cancelInverterSystemDataUpdate = inverterSystemDataModel.on("dataChanged", onSystemData);
        inverterInfoModel.subscribe("inverterDetailWidget", 5e3);
        inverterSystemDataModel.subscribe("inverterDetailWidget", 5e3)
    }
    ;
    $scope.getDisplayName = deviceDB.GetDisplayName;
    $scope.getInverterProductName = deviceDB.GetInverterProductName;
    $scope.getInverterStatusString = deviceDB.GetInverterStatusString;
    $scope.getPac = function(deviceId) {
        var aData = $scope.systemData;
        return dm.util.string.FormatValue(aData.Power.Devices[deviceId], aData.Power.Unit, daloState.language)
    }
    ;
    $scope.formatValue = function(energy, id) {
        var aData = $scope.systemData;
        return dm.util.string.FormatValue(aData.Energy[energy].Devices[id], aData.Energy[energy].Unit, daloState.language)
    }
    ;
    $scope.onListClick = function(id) {
        dm.model.inverterDetailWidget.toggleVisible(id)
    }
    ;
    $scope.getHide = function(deviceId) {
        return dm.model.inverterDetailWidget.getVisible(deviceId)
    }
    ;
    $scope.init();
    $scope.$on("$destroy", function() {
        inverterSystemDataModel.unsubscribe("systemOverviewWidget");
        inverterInfoModel.unsubscribe("systemOverviewWidget");
        if (cancelInverterSystemDataUpdate)
            cancelInverterSystemDataUpdate();
        cancelInverterSystemDataUpdate = undefined;
        if (cancelInverterInfoUpdate)
            cancelInverterInfoUpdate();
        cancelInverterInfoUpdate = undefined
    })
}
]);
angular.module("widgets").controller("meterOverviewWidgetCtrl", ["$scope", "$log", function($scope, $log) {
    var cancelSiteNowDataUpdate = undefined;
    var daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    var siteNowDataModel = dm.model.SiteNowData.getInstance();
    var onSiteData = function() {
        var aData = siteNowDataModel.data;
        if (aData.P_Grid === null || aData.P_Load === null) {
            $scope.net = "---";
            $scope.load = "---";
            var _generate = aData.P_PV ? Math.round(aData.P_PV) : 0;
            $scope.generate = dm.util.string.FormatValue(_generate, "W", daloState.language);
            $scope.valid = false
        } else {
            $scope.net = aData.P_Grid ? Math.round(aData.P_Grid * -1) : 0;
            $scope.load = aData.P_Load ? Math.round(aData.P_Load * -1) : 0;
            $scope.generate = dm.util.string.FormatValue($scope.net + $scope.load, "W", daloState.language);
            $scope.valid = true
        }
        $scope.net_neg = false;
        if ($scope.valid) {
            if ($scope.net < 0) {
                $scope.net *= -1;
                $scope.net_neg = true
            }
        }
    };
    $scope.showMe = false;
    $scope.net = "---";
    $scope.load = "---";
    $scope.generate = "--- W";
    function setOperateMode(operateMode) {
        switch (operateMode) {
        case "meter":
        case "vague-meter":
        case "bidirectional":
            if (!cancelSiteNowDataUpdate) {
                cancelSiteNowDataUpdate = siteNowDataModel.on("dataChanged", onSiteData);
                siteNowDataModel.subscribe("meterOverviewWidget", 5e3)
            }
            $scope.showMe = true;
            break;
        case "produce-only":
        case "isolate":
            $scope.showMe = false;
            break;
        default:
            $log.error("illegal operate mode");
            break
        }
    }
    $scope.init = function() {
        setOperateMode(daloState.operateMode);
        var df = dm.util.DataFetcher.newInstance(function() {
            return dm.ngjs.$http.get("/solar_api/v1/GetPowerFlowRealtimeData.fcgi")
        }, function(response) {
            return setOperateMode(response.data.Body.Data.Site.Mode)
        });
        df.subscribe("meterOverviewWidgetCtrl", 5e3)
    }
    ;
    $scope.init();
    $scope.$on("$destroy", function() {
        siteNowDataModel.unsubscribe("meterOverviewWidget");
        if (cancelSiteNowDataUpdate)
            cancelSiteNowDataUpdate();
        cancelSiteNowDataUpdate = undefined
    })
}
]);
angular.module("widgets").controller("sensorDetailWidgetCtrl", ["$scope", function($scope) {
    var cancelSensorInfoUpdate = undefined;
    var cancelSensorDataUpdate = undefined;
    var sensorsVisible = {};
    var daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    var sensorDataModel = dm.model.SensorData.getInstance();
    var sensorInfoModel = dm.model.SensorInfo.getInstance();
    var onSensorInfo = function() {
        var aData = sensorInfoModel.data;
        if (!aData.DataValid)
            return;
        $scope.deviceInfos = sensorInfoModel.data.DeviceInfos
    };
    var onSensorData = function() {
        var aData = sensorDataModel.data;
        if (!aData.DataValid)
            return;
        $scope.deviceData = sensorDataModel.data.Devices
    };
    $scope.deviceInfos = {};
    $scope.deviceData = {};
    $scope.decode = dm.util.string.htmlDecode;
    $scope.init = function() {
        cancelSensorInfoUpdate = sensorInfoModel.on("dataChanged", onSensorInfo);
        cancelSensorDataUpdate = sensorDataModel.on("dataChanged", onSensorData);
        sensorInfoModel.subscribe("sensorDetailWidget", 2e4);
        sensorDataModel.subscribe("sensorDetailWidget", 2e4)
    }
    ;
    $scope.onListClick = function(deviceID) {
        if (!sensorsVisible.hasOwnProperty(deviceID))
            sensorsVisible[deviceID] = false;
        sensorsVisible[deviceID] = !sensorsVisible[deviceID]
    }
    ;
    $scope.getShow = function(deviceID) {
        if (sensorsVisible.hasOwnProperty(deviceID))
            return sensorsVisible[deviceID];
        return false
    }
    ;
    $scope.formatValue = function(devId, valId) {
        var devData = $scope.deviceData[devId];
        if (!devData)
            return "---";
        var valuePair = devData[valId];
        if (!valuePair)
            return "---";
        return dm.util.string.FormatValue(valuePair.Value, valuePair.Unit, daloState.language)
    }
    ;
    $scope.init();
    $scope.$on("$destroy", function() {
        sensorInfoModel.unsubscribe("sensorDetailWidget");
        sensorDataModel.unsubscribe("sensorDetailWidget");
        if (cancelSensorInfoUpdate)
            cancelSensorInfoUpdate();
        cancelSensorInfoUpdate = undefined;
        if (cancelSensorDataUpdate)
            cancelSensorDataUpdate();
        cancelSensorDataUpdate = undefined
    })
}
]);
var dm;
(function(dm) {
    var model;
    (function(model) {
        var DeviceDB;
        (function(DeviceDB) {
            var BaseErrorStrategy = function() {
                function BaseErrorStrategy(_productId, _productName) {
                    this._productId = _productId;
                    this._productName = _productName
                }
                Object.defineProperty(BaseErrorStrategy.prototype, "productId", {
                    get: function() {
                        return this._productId
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(BaseErrorStrategy.prototype, "productName", {
                    get: function() {
                        return this._productName
                    },
                    enumerable: true,
                    configurable: true
                });
                BaseErrorStrategy.prototype.mapErrorMessage = function(errorNr, version) {
                    return this._productId + "-" + errorNr
                }
                ;
                return BaseErrorStrategy
            }();
            DeviceDB.BaseErrorStrategy = BaseErrorStrategy;
            var LgErrorStrategy = function(_super) {
                __extends(LgErrorStrategy, _super);
                function LgErrorStrategy() {
                    return _super.call(this, "LGRH", "LG Chem RESU") || this
                }
                return LgErrorStrategy
            }(BaseErrorStrategy);
            DeviceDB.LgErrorStrategy = LgErrorStrategy;
            var BydErrorStrategy = function(_super) {
                __extends(BydErrorStrategy, _super);
                function BydErrorStrategy() {
                    return _super.call(this, "BYD1", "BYD") || this
                }
                return BydErrorStrategy
            }(BaseErrorStrategy);
            DeviceDB.BydErrorStrategy = BydErrorStrategy;
            var OhmpilotErrorStrategy = function(_super) {
                __extends(OhmpilotErrorStrategy, _super);
                function OhmpilotErrorStrategy() {
                    return _super.call(this, "OHMP", "Ohmpilot") || this
                }
                return OhmpilotErrorStrategy
            }(BaseErrorStrategy);
            DeviceDB.OhmpilotErrorStrategy = OhmpilotErrorStrategy;
            var DataManagerErrorStrategy = function(_super) {
                __extends(DataManagerErrorStrategy, _super);
                function DataManagerErrorStrategy() {
                    return _super.call(this, "DMCR", "Fronius Datamanager Hybrid") || this
                }
                return DataManagerErrorStrategy
            }(BaseErrorStrategy);
            DeviceDB.DataManagerErrorStrategy = DataManagerErrorStrategy
        }
        )(DeviceDB = model.DeviceDB || (model.DeviceDB = {}))
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var dm;
(function(dm) {
    var model;
    (function(model) {
        var DeviceDB;
        (function(DeviceDB) {
            var STATECODE_DEVICE_KEY_LENGTH = 4;
            var ExternalDeviceErrorMapper = function() {
                function ExternalDeviceErrorMapper() {
                    this._strategyMap = this._createStrategyMap()
                }
                ExternalDeviceErrorMapper.prototype._createStrategyMap = function() {
                    var map = {};
                    [new dm.model.DeviceDB.LgErrorStrategy, new dm.model.DeviceDB.BydErrorStrategy, new dm.model.DeviceDB.OhmpilotErrorStrategy, new dm.model.DeviceDB.DataManagerErrorStrategy].forEach(function(strategy) {
                        map[strategy.productId] = strategy
                    });
                    return map
                }
                ;
                ExternalDeviceErrorMapper.prototype.getStrategy = function(version) {
                    var key = version && version.split(";")[0];
                    if (key && key.length === STATECODE_DEVICE_KEY_LENGTH && this._strategyMap.hasOwnProperty(key)) {
                        return this._strategyMap[key]
                    } else {
                        return undefined
                    }
                }
                ;
                return ExternalDeviceErrorMapper
            }();
            DeviceDB.ExternalDeviceErrorMapper = ExternalDeviceErrorMapper
        }
        )(DeviceDB = model.DeviceDB || (model.DeviceDB = {}))
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var ArchiveErrorService = function() {
    function ArchiveErrorService($http, $q, $translate) {
        this.$http = $http;
        this.$q = $q;
        this.$translate = $translate;
        this._deviceDB = null;
        this._data = [];
        this._deviceErrorMapper = new dm.model.DeviceDB.ExternalDeviceErrorMapper;
        this.init()
    }
    Object.defineProperty(ArchiveErrorService.prototype, "dataReady", {
        get: function() {
            return this._dataReady
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ArchiveErrorService.prototype, "data", {
        get: function() {
            return this._data
        },
        enumerable: true,
        configurable: true
    });
    ArchiveErrorService.prototype._createDeviceError = function(error, strInverter, inverterId) {
        var strategy = this._deviceErrorMapper.getStrategy(error.Version);
        var utc = error.ts;
        var dt = new Date(utc * 1e3);
        var detail;
        if (strategy) {
            detail = strategy.mapErrorMessage(error.Error ? error.Error : error.Event, error.Version)
        } else {
            detail = this._deviceDB.GetStateCodeErrorMessage(parseInt(inverterId), error.DT, error.Error)
        }
        return {
            flags: [],
            utc: utc,
            dateTime: DateHelper.getDateString(dt),
            inverterID: inverterId,
            nodeType: strategy ? error.DT : error.DT || 239,
            number: error.Event ? "EVT" : error.Error && error.Error.toString(),
            productName: strategy ? strategy.productName : this._deviceDB.GetProductName(parseInt(inverterId), error.DT, strInverter).replace("Fronius ", ""),
            detail: detail,
            detailParams: error,
            expanded: false
        }
    }
    ;
    ArchiveErrorService.prototype.init = function() {
        var _this = this;
        this._deviceDB = dm.model.DeviceDB.getInstance();
        this._dataFetcher = dm.util.DataFetcher.newInstance(function() {
            return _this.$q.all([_this.$http.get("/cgi-bin/GetArchiveErrorsFast.cgi"), _this.$translate("INVERTER"), _this._deviceDB.loadingPromise])
        }, function(responses) {
            return _this._handleResponse(responses)
        }, function(error) {
            return console.warn("Loading StateCodes failed: " + error.message)
        })
    }
    ;
    ArchiveErrorService.prototype.subscribe = function(name, updateInterval) {
        this._dataFetcher.subscribe(name, updateInterval)
    }
    ;
    ArchiveErrorService.prototype.unsubscribe = function(name) {
        this._dataFetcher.unsubscribe(name)
    }
    ;
    ArchiveErrorService.prototype._handleResponse = function(responses) {
        var data = ArchiveErrorService._getResponseData(responses[0]);
        var strInverter = responses[1];
        if (!data || !Object.keys(data).length) {
            return
        }
        var parsedData = [];
        for (var idx in data) {
            if (data.hasOwnProperty(idx)) {
                var archiveRecords = data[idx];
                for (var _i = 0, archiveRecords_1 = archiveRecords; _i < archiveRecords_1.length; _i++) {
                    var archiveRecord = archiveRecords_1[_i];
                    var error = archiveRecord;
                    if (error.Error !== null || error.Event !== null) {
                        var deviceError = this._createDeviceError(error, strInverter, idx);
                        parsedData.push(deviceError)
                    }
                }
            }
        }
        parsedData.sort(function(a, b) {
            if (b.utc - a.utc == 0)
                return 1;
            return b.utc - a.utc
        });
        angular.copy(parsedData, this._data);
        this._dataReady = true
    }
    ;
    ArchiveErrorService._getResponseData = function(response) {
        return response.data && response.data.Body && response.data.Body.Data
    }
    ;
    ArchiveErrorService.factory = function() {
        var service = function($http, $q, $translate) {
            return new ArchiveErrorService($http,$q,$translate)
        };
        service.$inject = ["$http", "$q", "$translate"];
        return service
    }
    ;
    return ArchiveErrorService
}();
var DateHelper = function() {
    function DateHelper() {}
    DateHelper.getDateString = function(date) {
        var dateStr = "";
        if (!DateHelper.isToday(date)) {
            dateStr = date.toString(Date.CultureInfo.formatPatterns.shortDate) + " "
        }
        dateStr = dateStr + date.toString(Date.CultureInfo.formatPatterns.shortTime);
        return dateStr
    }
    ;
    DateHelper.isToday = function(date) {
        var now = new Date;
        return now.getFullYear() == date.getFullYear() && now.getMonth() == date.getMonth() && now.getDate() == date.getDate()
    }
    ;
    return DateHelper
}();
angular.module("widgets").service("archiveErrorModel", ArchiveErrorService.factory());
angular.module("widgets").service("serviceMessageWidget", ["$interval", "archiveErrorModel", "$rootScope", function($interval, archiveErrorService, $rootScope) {
    var self = this;
    this.data = {
        ready: false,
        messages: archiveErrorService.data
    };
    $rootScope.$watch(function() {
        return archiveErrorService.dataReady
    }, function(newVal, oldVal) {
        self.data.ready = newVal
    });
    this.startWidget = function() {
        archiveErrorService.subscribe("serviceMessageWidget", 36e5)
    }
    ;
    this.stopWidget = function() {
        archiveErrorService.unsubscribe("serviceMessageWidget")
    }
}
]);
angular.module("widgets").controller("serviceMessageWidgetCtrl", ["$scope", "$interval", "$translate", "serviceMessageWidget", function($scope, $interval, $translate, serviceMessageWidget) {
    $scope.data = serviceMessageWidget.data;
    serviceMessageWidget.startWidget();
    var maxLength = 45;
    $scope.getClass = function(idx) {
        if (idx & 1) {
            return "row_1"
        }
        return "row_0"
    }
    ;
    $scope.expandItem = function(idx) {
        if (serviceMessageWidget.data.messages[idx].expanded) {
            serviceMessageWidget.data.messages[idx].expanded = false
        } else if ($scope.isMessageToLong(idx)) {
            for (var i in serviceMessageWidget.data.messages) {
                serviceMessageWidget.data.messages[i].expanded = false
            }
            serviceMessageWidget.data.messages[idx].expanded = true
        }
    }
    ;
    $scope.isMessageToLong = function(idx) {
        return $translate.instant(serviceMessageWidget.data.messages[idx].detail, serviceMessageWidget.data.messages[idx].detailParams).length > maxLength
    }
    ;
    $scope.getMessage = function(idx) {
        var text = $translate.instant(serviceMessageWidget.data.messages[idx].detail, serviceMessageWidget.data.messages[idx].detailParams);
        var cut = Math.floor(maxLength / 2);
        if (!$scope.isMessageToLong(idx) || serviceMessageWidget.data.messages[idx].expanded) {
            return text
        } else {
            var msg = text;
            var pos1 = msg.substring(0, cut).lastIndexOf(" ");
            var pos2 = msg.substring(cut).indexOf(" ");
            if (Math.abs(cut - pos1) < pos2) {
                return text.substring(0, pos1) + " ..."
            }
            return text.substring(0, cut + pos2) + " ..."
        }
    }
    ;
    $scope.$on("$destroy", function() {
        serviceMessageWidget.stopWidget()
    })
}
]);
angular.module("widgets").controller("systemOverviewWidgetCtrl", ["$scope", function($scope) {
    var daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    var cancelInverterSystemDataUpdate = undefined;
    var cancelLoggerInfoUpdate = undefined;
    var inverterSystemDataModel = dm.model.InverterSystemData.getInstance();
    var loggerInfoModel = dm.model.LoggerInfo.getInstance();
    var onSystemData = function() {
        var aData = inverterSystemDataModel.data;
        if (!aData.DataValid)
            return;
        $scope.systemData = aData
    };
    var onLoggerInfo = function() {
        var aData = loggerInfoModel.data;
        if (!aData.DataValid)
            return;
        $scope.loggerInfo = aData
    };
    $scope.systemData = {
        Energy: {
            Day: {
                Sum: "",
                Unit: ""
            },
            Year: {
                Sum: "",
                Unit: ""
            },
            Total: {
                Sum: "",
                Unit: ""
            }
        }
    };
    $scope.init = function() {
        cancelInverterSystemDataUpdate = inverterSystemDataModel.on("dataChanged", onSystemData);
        cancelLoggerInfoUpdate = loggerInfoModel.on("dataChanged", onLoggerInfo);
        inverterSystemDataModel.subscribe("systemOverviewWidget", 5e3);
        loggerInfoModel.subscribe("systemOverviewWidget")
    }
    ;
    $scope.formatValue = function(energy) {
        if (!energy.Sum || !energy.Unit)
            return "---";
        return dm.util.string.FormatValue(energy.Sum, energy.Unit, daloState.language)
    }
    ;
    $scope.calcYield = function(energy) {
        var li = $scope.loggerInfo;
        if (!$scope.systemData || !li)
            return "---";
        if (!energy.Sum || !energy.Unit)
            return "---";
        var eScale = energy.Unit == "Wh" ? .001 : 1;
        var cashYield = {
            v: eScale * li.CashFactor * energy.Sum,
            u: li.CashCurrency
        };
        return dm.util.string.FormatNumber(cashYield.v, null, daloState.language) + " " + cashYield.u
    }
    ;
    $scope.init();
    $scope.$on("$destroy", function() {
        inverterSystemDataModel.unsubscribe("systemOverviewWidget");
        loggerInfoModel.unsubscribe("systemOverviewWidget");
        if (cancelInverterSystemDataUpdate)
            cancelInverterSystemDataUpdate();
        cancelInverterSystemDataUpdate = undefined;
        if (cancelLoggerInfoUpdate)
            cancelLoggerInfoUpdate();
        cancelLoggerInfoUpdate = undefined
    })
}
]);
angular.module("widgets").controller("systemStateWidgetCtrl", ["$scope", "$log", "$interval", function($scope, $log, $interval) {
    var data = {
        systemData: {
            earnings: {
                Day: 0,
                Year: 0,
                Total: 0
            },
            cashCurrency: undefined,
            cashFactor: undefined,
            dataReady: false
        }
    };
    var inverterSystemDataModel = dm.model.InverterSystemData.getInstance();
    var loggerInfoModel = dm.model.LoggerInfo.getInstance();
    var onResponse = function() {
        var loggerInfo = loggerInfoModel.data;
        var inverterSystemData = inverterSystemDataModel.data;
        var calcEarning = function(sum) {
            return sum / 1e3 * data.systemData.cashFactor
        };
        if (loggerInfo.DataValid) {
            data.systemData.cashCurrency = loggerInfo.CashCurrency;
            data.systemData.cashFactor = loggerInfo.CashFactor
        }
        if (inverterSystemData.DataValid && data.systemData.cashCurrency && data.systemData.cashFactor) {
            data.systemData.earnings.Day = calcEarning(inverterSystemData.Energy.Day.Sum);
            data.systemData.earnings.Year = calcEarning(inverterSystemData.Energy.Year.Sum);
            data.systemData.earnings.Total = calcEarning(inverterSystemData.Energy.Total.Sum);
            data.systemData.dataReady = true
        }
    };
    var cancelLoggerInfoUpdate = loggerInfoModel.on("dataChanged", onResponse);
    var cancelInverterSystemDataUpdate = inverterSystemDataModel.on("dataChanged", onResponse);
    $scope.data = data;
    loggerInfoModel.subscribe("systemStateWidgetCtrl");
    inverterSystemDataModel.subscribe("systemStateWidgetCtrl")
}
]);
angular.module("widgets").controller("widgetsCtrl", ["$scope", function($scope) {
    $scope.sortableOptions = {
        placeholder: "ui-highlight",
        cancel: ".big",
        items: "li.sortable:not(.big)"
    };
    $scope.control = {
        widgets: {
            widget_3: {
                name: "Aktuelle Leistung",
                overlay: false
            },
            widget_2: {
                name: "Anlagenertrag",
                overlay: false
            },
            widget_4: {
                name: "Meldungen",
                overlay: false
            }
        },
        enabledWidgets: ["widget_3", "widget_2", "widget_4"],
        disabledWidgets: []
    }
}
]);
angular.module("widgets").controller("startpageCtrl", ["$scope", "$log", function($scope, $log) {
    var widgets = {
        sysOverview: null,
        invDetail: null,
        sensDetail: null,
        charts: []
    };
    var userViewSettings = null;
    var barChartConfig = {};
    var inverterInfoModel = dm.model.InverterInfo.getInstance();
    var setDimensions = function(aChartCount) {
        var mainContainer = $("#centercol_content");
        if (mainContainer.size() == 0)
            var mainContainer = $("#page_content");
        var mainW = mainContainer.width() - 40;
        var mainH = mainContainer.height();
        var chartScaleW = .7;
        var chartScaleH = .95 / aChartCount
    };
    var createUIComponents = function(aChartCount) {
        $("#detail_accordion").accordion({
            fillSpace: false,
            heightStyle: "fill",
            collapsible: true,
            beforeActivate: function(aEvent, aUi) {
                if (aUi.newHeader.length == 0)
                    return false
            }
        });
        $("#detail_accordion").css("visibility", "visible");
        $("#detail_accordion").on("accordionactivate", function(event, ui) {
            if (ui.newPanel[0].id == "detail_accordion_system_overview_panel") {
                $scope.$broadcast("resize")
            }
        });
        var paramDetailSection = 0;
        if (window.location.search.match("detailsection=[0-9]+") != null) {
            paramDetailSection = parseInt(window.location.search.match("detailsection=[0-9]+")[0].split("=")[1]);
            if (!isNaN(paramDetailSection)) {
                $log.debug("Selecting detail section", paramDetailSection);
                $("#detail_accordion").accordion("activate", paramDetailSection.toString())
            }
        }
    };
    $scope.init = function() {
        var uiInitDone = false;
        var availableDevices = 0;
        var chartCount = 1;
        var cancelInverterInfoUpdate = inverterInfoModel.on("dataChanged", function() {
            var aInverterInfo = inverterInfoModel.data;
            if (!uiInitDone) {
                $log.debug("Initializing UI.");
                uiInitDone = true;
                setDimensions(chartCount);
                createUIComponents(chartCount)
            }
            if (aInverterInfo.Count != availableDevices) {
                $log.debug("Number of available inverters changed from " + availableDevices + " to " + aInverterInfo.Count);
                availableDevices = aInverterInfo.Count
            }
        });
        inverterInfoModel.subscribe("startPage", 5e3)
    }
    ;
    $scope.getDetailinfosStyle = function() {
        var height = angular.element("body").height() - 200;
        return {
            height: height + "px",
            valign: "top"
        }
    }
    ;
    $scope.init()
}
]);
angular.module("wizard", ["global"]);
angular.module("wizard").controller("welcomeWizardCtrl", ["$scope", "$state", "standardDialog", "$q", function($scope, $state, standardDialog, $q) {
    $scope.wizardButtons.showForward = false;
    $scope.wizardButtons.showBackward = false;
    $scope.wizardButtons.showAbort = false;
    $scope.showServiceDone = false;
    var wizardState = dm.model.WizardState.getInstance("wizardCtrl", $scope);
    var appDialogVisible = false;
    var appMsg;
    $scope.btnStartSolarWebWizard = function() {
        if (!appDialogVisible)
            $scope.startUserWizard()
    }
    ;
    $scope.btnStartServiceWizard = function() {
        if (!appDialogVisible)
            $scope.startServiceWizard()
    }
    ;
    $scope.btnGotoServiceSettings = function() {
        if (!appDialogVisible)
            $scope.gotoServiceSettings()
    }
    ;
    $scope.btnAppMsgOk = function() {
        if (appMsg != null)
            appMsg.closeDialog();
        appDialogVisible = false
    }
    ;
    $scope.showAppDialog = function() {
        appDialogVisible = true;
        appMsg = new dm.standardDialog.StandardDialog($scope,"DIALOG_TITLE_HINT","<div> " + "{{'WIZARD_APP_INFO_01' | translate}} </br>  {{'WIZARD_APP_INFO_02' | translate}} </br>" + "<img style='margin: 5px' src='/img/android-store.png'> <img style='margin: 5px' src='/img/apple-store.png'> " + "</div>");
        appMsg.addButton("OK", "btnAppMsgOk()");
        appMsg.setWidth("460px");
        appMsg.showDialog();
        $scope.wizardButtons.showAppDialog = false
    }
    ;
    $scope.init = function() {
        $q.all([wizardState.loadingPromise]).then(function() {
            var _$ = $;
            $scope.wizardButtons.showAbort = wizardState.WizardInitialized;
            var params = _$.url().param();
            if (params != undefined && !$.isEmptyObject(params))
                $scope.daloState.queryParameters = params;
            if ($scope.daloState.queryParameters.app != undefined) {
                $scope.wizardButtons.showAbort = false;
                $scope.wizardButtons.showAppDialog = false
            }
            $scope.showServiceDone = wizardState.ServiceDone != "false"
        }).finally(function() {
            $scope.HideWizardLoading();
            if ($scope.wizardButtons.showAppDialog)
                $scope.showAppDialog()
        })
    }
    ;
    $scope.$on("$destroy", function() {
        if (appMsg != null)
            appMsg.closeDialog()
    });
    $scope.init()
}
]);
angular.module("wizard").controller("finishWizardCtrl", ["$scope", "$state", function($scope, $state, DaloStateModel, ajaxRequest, $q) {
    $scope.wizardButtons.showForward = false;
    $scope.wizardButtons.showBackward = false;
    $scope.wizardButtons.showAbort = false;
    var wizardState = dm.model.WizardState.getInstance("wizardCtrl", $scope);
    $scope.ap = dm.model.APSettings.getInstance("settingsNetworkCtrl", $scope);
    $scope.daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    $scope.ui = {
        networkAvailable: false,
        clientAPMode: false,
        showStartpageButton: false
    };
    $scope.ShowWizardLoading();
    $scope.init = function() {
        dm.ngjs.$q.all([wizardState.loadingPromise, dm.util.ajaxRequest.get("/status/multinetwork/internet/available/"), $scope.ap.loadingPromise, $scope.daloState.loadingPromise, dm.util.ajaxRequest.get("/status/io/")]).then(function(responses) {
            $scope.io = responses[4].data.Body.Data.io;
            $scope.ui.clientAPMode = $scope.ap.ssid != "";
            $scope.ui.networkAvailable = responses[1].data.Body.Data.available;
            $scope.ui.showStartpageButton = !$scope.ui.clientAPMode;
            var _$ = $;
            var qParams = _$.url().param();
            if (qParams != undefined && qParams.app != undefined) {
                $scope.ui.showStartpageButton = false;
                $scope.ui.networkAvailable = false
            } else
                $scope.ui.showStartpageButton = true;
            if ($scope.ui.clientAPMode && !$scope.io.hwipswitch) {
                $scope.finishWizard().then(function() {
                    $scope.HideWizardLoading();
                    $scope.configureUAP()
                })
            } else {
                $scope.finishWizard().then(function() {
                    $scope.prepareSolarWebRegForm().then(function() {
                        if ($scope.daloState.connectedViaAP) {
                            $scope.ui.showStartpageButton = false;
                            setTimeout(function() {
                                $scope.HideWizardLoading()
                            }, 5e3);
                            dm.util.ajaxRequest.get("/admincgi-bin/reconfigureNetwork.cgi?operation=closeswap")
                        } else
                            $scope.HideWizardLoading()
                    })
                })
            }
        })
    }
    ;
    $scope.configureUAP = function() {
        if ($scope.daloState.connectedViaAP)
            dm.util.ajaxRequest.get("/admincgi-bin/reconfigureNetwork.cgi?operation=closeswap");
        else
            dm.util.ajaxRequest.get("/admincgi-bin/reconfigureNetwork.cgi?operation=configuap")
    }
    ;
    $scope.init()
}
]);
angular.module("wizard").controller("reconnectWizardCtrl", ["$scope", "$state", "standardDialog", function($scope, $state, standardDialog) {
    $scope.wizardButtons.showForward = false;
    $scope.wizardButtons.showBackward = false;
    $scope.wizardButtons.showAbort = false;
    $scope.wizardButtons.showSkipNetworkSetup = false;
    $scope.config = dm.model.NetworkConfig.getInstance("settingsNetworkCtrl", $scope);
    $scope.wizardState = dm.model.WizardState.getInstance("wizardCtrl", $scope);
    $scope.networkConfig = dm.model.NetworkConfig.getInstance("settingsNetworkCtrl", $scope);
    $scope.daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    $scope.ui = {};
    $scope.ShowWizardLoading();
    $scope.runNetworkActivation = function() {
        $scope.networkConfig.activateConfiguration().then(function(response) {
            if (!response.data.ok) {
                setTimeout(function() {
                    $scope.runNetworkActivation()
                }, 1e4)
            }
        }, function(error) {
            console.info("Network correctly disconnected or failure in activating configuration")
        })
    }
    ;
    $scope.init = function() {
        dm.ngjs.$q.all([$scope.wizardState.loadingPromise, $scope.networkConfig.loadingPromise, $scope.daloState.loadingPromise, dm.util.ajaxRequest.get("/status/io/")]).then(function(responses) {
            if ($scope.daloState.wpsTriggered) {
                $scope.ui.appMode = false;
                $scope.ui.wpsTriggered = true;
                $scope.ui.dhcp = $scope.networkConfig.ifaceWlan0ConfigFields.dhcpEnabled;
                $scope.config.setWPSState(true);
                $scope.HideWizardLoading();
                return
            }
            $scope.io = responses[3].data.Body.Data.io;
            $scope.ui.mobileApp = $scope.daloState.queryParameters.app != undefined;
            $scope.ui.selInetIface = $scope.networkConfig.networkConfigs.inetConnection.selInetIface;
            $scope.ui.ifaceEth0 = $scope.ui.selInetIface == "eth0";
            $scope.ui.ifaceWlan0 = $scope.ui.selInetIface == "wlan0";
            $scope.ui.appMode = false;
            if ($scope.ui.ifaceEth0)
                $scope.ui.dhcp = $scope.networkConfig.ifaceEth0ConfigFields.dhcpEnabled;
            else
                $scope.ui.dhcp = $scope.networkConfig.ifaceWlan0ConfigFields.dhcpEnabled;
            $scope.ui.nodhcp = !$scope.ui.dhcp;
            if ($scope.ui.ifaceWlan0)
                $scope.wlanName = $scope.networkConfig.ifaceWlan0ConfigFields.network.ssid;
            var configuredNet = $scope.networkConfig.ifaceWlan0ConfigFields;
            if ($scope.ui.ifaceEth0)
                configuredNet = $scope.networkConfig.ifaceEth0ConfigFields;
            if ($scope.dhcp)
                $scope.wizardUrl = "http://" + configuredNet.hostname + document.location.search;
            else
                $scope.wizardUrl = "http://" + configuredNet.ipAddress + document.location.search;
            $scope.wizardHref = $scope.wizardUrl + document.location.search;
            $scope.HideWizardLoading();
            if ($scope.io.hwipswitch)
                $scope.networkConfig.activateConfiguration("eth0");
            if ($scope.ui.mobileApp && window["AndroidHandler"] != undefined)
                window["AndroidHandler"].showSelectHomeWlanDialog();
            $scope.runNetworkActivation();
            if ($scope.ui.mobileApp) {
                var errorMsg = new dm.standardDialog.StandardDialog($scope,"DIALOG_TITLE_HINT","{{'RECON_TIMEOUT_MESSAGE' | translate}}","RECON_CLOSE");
                setTimeout(function() {
                    errorMsg.showDialog()
                }, 6e4 * 5)
            }
        })
    }
    ;
    $scope.init()
}
]);
angular.module("wizard").controller("wizardNetworkStatusCtrl", ["$scope", "$state", "$q", function($scope, $state, $q) {
    $scope.ShowWizardLoading();
    $scope.init = function() {
        $scope.wizardButtons.showBackward = false;
        $scope.wizardButtons.showForward = false;
        $scope.wizardButtons.forwardText = "WIZARD_FORWARD";
        $scope.wizardButtons.showSkipNetworkSetup = false;
        if ($scope.daloState.connectedViaAP)
            $scope.wizardButtons.showKeepAPOpened = true;
        $scope.status = dm.model.NetworkStatus.getInstance("settingsNetworkCtrl", $scope);
        $scope.config = dm.model.NetworkConfig.getInstance("settingsNetworkCtrl", $scope);
        $scope.status.load();
        $scope.ui = {
            showChangeNetwork: false
        };
        dm.ngjs.$q.all([$scope.status.loadingPromise, $scope.config.loadingPromise]).then(function() {
            $scope.setupUIValues();
            $scope.wizardButtons.showBackward = true;
            $scope.wizardButtons.showForward = !$scope.daloState.connectedViaAP;
            $scope.HideWizardLoading()
        }, function(err) {
            $scope.wizardButtons.showBackward = true;
            $scope.HideWizardLoading()
        })
    }
    ;
    $scope.setupUIValues = function() {
        $scope.ui.wlan = $scope.config.networkConfigs.inetConnection.selInetIface == "wlan0";
        $scope.ui.lan = $scope.config.networkConfigs.inetConnection.selInetIface == "eth0";
        $scope.ui.connected = $scope.status.internet.available;
        $scope.ui.ipAddress = $scope.status.ipAddress;
        $scope.ui.netChangedSuccess = false;
        $scope.ui.IpConfigured = true;
        if ($scope.ui.wlan) {
            $scope.ui.connectionLabel = "WLAN";
            $scope.ui.netconfig = $scope.status.wlan0
        }
        if ($scope.ui.lan) {
            $scope.ui.netconfig = $scope.status.eth0;
            $scope.ui.connectionLabel = "LAN"
        }
        if ($scope.ui.netconfig.ipAddress == "") {
            $scope.ui.IpConfigured = false;
            $scope.ui.showChangeNetwork = false;
            $scope.ui.netconfig.ipAddress = "---"
        } else {
            $scope.ui.showChangeNetwork = true;
            $scope.ui.wizardUrl = "http://" + $scope.status.ipAddress;
            $scope.ui.wizardHref = $scope.ui.wizardUrl + document.location.search;
            $scope.ui.netChangedSuccess = !$scope.daloState.connectedViaAP
        }
    }
    ;
    $scope.refreshStatus = function() {
        $scope.ui.loadingStatus = true;
        $scope.status.load().then(function() {
            $scope.setupUIValues();
            $scope.ui.loadingStatus = false;
            $scope.wizardButtons.showBackward = true;
            $scope.wizardButtons.showForward = !$scope.daloState.connectedViaAP
        })
    }
    ;
    $scope.init()
}
]);
angular.module("wizard").controller("wizardCtrl", ["$rootScope", "$scope", "$state", "$q", "$translate", "standardDialog", "solarAPIRequest", "$window", "loginService", function($rootScope, $scope, $state, $q, $translate, standardDialog, solarAPIRequest, $window, loginService) {
    var stdDialog = new dm.standardDialog.StandardDialog($scope);
    $scope.daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    if ($rootScope.wizardState == undefined)
        $rootScope.wizardState = dm.model.WizardState.getInstance("wizardCtrl", $scope);
    var apSettings = undefined;
    $scope.progesssteps = [];
    $scope.WIZARDACTIVE = true;
    $scope.wizardButtons = {
        forwardText: "",
        showForward: false,
        backwardText: "",
        showBackward: false,
        showAbort: false,
        showAppDialog: false,
        navigationEnabled: true,
        showSkipNetworkSetup: false,
        showKeepAPOpened: false
    };
    $scope.ui = {
        wizardLocked: true,
        wizardAborted: false,
        lockButtonVisible: false,
        lockedAddress: ""
    };
    $scope.stepNames = [];
    $scope.firstStepUser = 0;
    $scope.lastStepWizard = 0;
    $scope.localAPModeNextSettingsStep = 0;
    $scope.wizardloading = false;
    $rootScope.$on("loginEvent", function(event) {
        if (!loginService.loggedInUserIsAsRequired("admin")) {
            $scope.verifyAuthLevelAppPage()
        }
    });
    $scope.init = function() {
        if (apSettings == undefined)
            apSettings = dm.model.APSettings.getInstance("settingsNetworkCtrl", $scope);
        $q.all([$translate(["WIZARD_FORWARD", "WIZARD_BACK", "WIZARD_STEP_0", "WIZARD_STEP_1", "WIZARD_STEP_2", "WIZARD_STEP_3", "WIZARD_STEP_4", "WIZARD_STEP_5", "WIZARD_STEP_6", "WIZARD_STEP_7", "WIZARD_STEP_8", "WIZARD_STEP_9", "WIZARD_STEP_10", "WIZARD_STEP_11", "WIZARD_STEP_12", "WIZARD_STEP_SYSTEM_OVERVIEW", "WIZARD_STEP_METER"]), $rootScope.wizardState.loadingPromise, $scope.daloState.loadingPromise]).then(function(results) {
            var dict = results[0];
            $scope.wizardButtons.forwardText = "WIZARD_FORWARD";
            $scope.wizardButtons.backwardText = "WIZARD_BACK";
            $rootScope.wizardState.WizardState = 1;
            $scope.ui.wizardLocked = $rootScope.wizardState.IpLock != $scope.daloState.remoteAddr && $rootScope.wizardState.IpLock != "";
            $scope.ui.lockedAddress = $rootScope.wizardState.IpLock;
            if ($scope.daloState.platform == "arm-wilma") {
                $scope.serviceDoneStep = 7;
                $scope.firstStepUser = 8;
                $scope.lastStepWizard = 14;
                $scope.localAPModeNextSettingsStep = 13;
                $scope.networkSetupStep = 10;
                $scope.networkStatusStep = 12
            } else {
                $scope.serviceDoneStep = 6;
                $scope.firstStepUser = 7;
                $scope.lastStepWizard = 12;
                $scope.localAPModeNextSettingsStep = 11;
                $scope.networkSetupStep = 8;
                $scope.networkStatusStep = 10
            }
            $scope.handleIPLock();
            if ($rootScope.wizardState.WizardStep >= $scope.networkStatusStep)
                $rootScope.wizardState.WizardState = 2;
            if ($scope.daloState.platform == "arm-wilma-hybrid") {
                $scope.stepNames = [{
                    name: "WIZARD_STEP_0"
                }, {
                    name: "WIZARD_STEP_1"
                }, {
                    name: "WIZARD_STEP_3"
                }, {
                    name: "GPIOS"
                }, {
                    name: "WIZARD_STEP_SYSTEM_OVERVIEW"
                }, {
                    name: "WIZARD_STEP_4"
                }, {
                    name: "WIZARD_STEP_5"
                }, {
                    name: "WIZARD_STEP_6"
                }, {
                    name: "WIZARD_STEP_8"
                }, {
                    name: "WIZARD_STEP_9"
                }, {
                    name: "WIZARD_STEP_10"
                }, {
                    name: "WIZARD_STEP_11"
                }, {
                    name: "WIZARD_STEP_12"
                }]
            }
            if ($scope.daloState.platform == "arm-wilma") {
                $scope.stepNames = [{
                    name: "WIZARD_STEP_0"
                }, {
                    name: "WIZARD_STEP_1"
                }, {
                    name: "WIZARD_STEP_2"
                }, {
                    name: "WIZARD_STEP_3"
                }, {
                    name: "GPIOS"
                }, {
                    name: "WIZARD_STEP_METER"
                }, {
                    name: "WIZARD_STEP_4"
                }, {
                    name: "WIZARD_STEP_5"
                }, {
                    name: "WIZARD_STEP_6"
                }, {
                    name: "WIZARD_STEP_7"
                }, {
                    name: "WIZARD_STEP_8"
                }, {
                    name: "WIZARD_STEP_9"
                }, {
                    name: "WIZARD_STEP_10"
                }, {
                    name: "WIZARD_STEP_11"
                }, {
                    name: "WIZARD_STEP_12"
                }]
            }
            $scope.updateProgressStrip()
        }, function(response) {}).finally(function() {
            $scope.verifyAuthLevelAppPage()
        })
    }
    ;
    $scope.isServiceStep = function() {
        if ($rootScope.wizardState == undefined || $scope.serviceDoneStep == undefined)
            return false;
        return $rootScope.wizardState.WizardStep > 0 && $rootScope.wizardState.WizardStep < $scope.serviceDoneStep
    }
    ;
    $scope.isRequiredUserForStepLoggedIn = function() {
        if ($state.current.name == "wizard") {
            if ($scope.isServiceStep()) {
                return loginService.loggedInUserIsAsRequired("service")
            } else {
                return loginService.loggedInUserIsAsRequired("admin")
            }
        }
        return false
    }
    ;
    $scope.verifyAuthLevelAppPage = function() {
        if ($state.current.name == "wizard") {
            if ($scope.isServiceStep()) {
                if (!loginService.loggedInUserIsAsRequired("service")) {
                    $scope.loginForWizard("service")
                }
            } else {
                if (!loginService.loggedInUserIsAsRequired("admin")) {
                    $scope.loginForWizard("admin")
                }
            }
        }
    }
    ;
    $scope.getProgressSteps = function() {
        return $scope.progesssteps
    }
    ;
    $scope.updateProgressStrip = function() {
        var currentStep = $rootScope.wizardState.WizardStep;
        var serviceMode = currentStep < this.firstStepUser;
        var stepstyle = serviceMode ? "width:32.4%" : "width:31.6%";
        var stepwidth = serviceMode ? "32.4%" : "31.6%";
        var firstStep = serviceMode ? 1 : $scope.firstStepUser;
        var lastStep = serviceMode ? $scope.firstStepUser - 2 : $scope.lastStepWizard;
        var activeStep = {
            name: $scope.stepNames[currentStep].name,
            style: stepstyle,
            class: "menuStepActual"
        };
        $scope.progesssteps = [];
        if ($rootScope.wizardState.WizardStep == 0)
            return;
        if (currentStep == $scope.firstStepUser - 1)
            return;
        if (currentStep - 4 >= firstStep)
            $scope.progesssteps.push({
                width: "1%",
                class: "menuStepDone",
                showseperator: true
            });
        if (currentStep - 3 >= firstStep)
            $scope.progesssteps.push({
                width: "1%",
                class: "menuStepDone",
                showseperator: true
            });
        if (currentStep - 2 >= firstStep) {
            if (currentStep != lastStep)
                $scope.progesssteps.push({
                    width: "1%",
                    class: "menuStepDone",
                    showseperator: true
                });
            else
                $scope.progesssteps.push({
                    width: stepwidth,
                    class: "menuStepDone",
                    showseperator: true,
                    name: $scope.stepNames[currentStep - 2].name
                })
        }
        if (currentStep - 1 >= firstStep)
            $scope.progesssteps.push({
                width: stepwidth,
                class: "menuStepDone",
                showseperator: true,
                name: $scope.stepNames[currentStep - 1].name
            });
        if (currentStep + 1 <= lastStep) {
            activeStep.showseperator = true;
            activeStep.showarrow = true
        }
        $scope.progesssteps.push(activeStep);
        if (currentStep + 1 <= lastStep)
            $scope.progesssteps.push({
                width: stepwidth,
                class: "menuStepOpen",
                showseperator: currentStep + 1 != lastStep,
                name: $scope.stepNames[currentStep + 1].name
            });
        if (currentStep + 2 <= lastStep) {
            if (currentStep != firstStep)
                $scope.progesssteps.push({
                    width: "1%",
                    class: "menuStepOpen",
                    showseperator: currentStep + 1 != lastStep
                });
            else
                $scope.progesssteps.push({
                    width: stepwidth,
                    class: "menuStepOpen",
                    showseperator: currentStep + 2 != lastStep,
                    name: $scope.stepNames[currentStep + 2].name
                })
        }
        if (currentStep + 3 <= lastStep)
            $scope.progesssteps.push({
                width: "1%",
                class: "menuStepOpen",
                showseperator: currentStep + 3 != lastStep
            });
        if (currentStep + 4 <= lastStep)
            $scope.progesssteps.push({
                width: "1%",
                class: "menuStepOpen",
                showseperator: currentStep + 4 != lastStep
            })
    }
    ;
    $scope.forceIPLock = function() {
        $rootScope.wizardState.IpLock = $scope.daloState.remoteAddr;
        $scope.ui.wizardLocked = false;
        $rootScope.wizardState.save().then(function() {
            $scope.HideWizardLoading()
        }, function(err) {
            dm.util.configRequest.showCfgErrorDialog(err)
        })
    }
    ;
    $scope.setWizardAborted = function() {
        $scope.ui.wizardAborted = true
    }
    ;
    $scope.checkIPLock = function() {
        return dm.util.configRequest.get("/config/wizard/iplock")
    }
    ;
    $scope.ShowWizardLoading = function() {
        $scope.wizardButtons.navigationEnabled = false;
        $scope.wizardloading = true
    }
    ;
    $scope.HideWizardLoading = function() {
        $scope.wizardButtons.navigationEnabled = true;
        $scope.wizardloading = false
    }
    ;
    $scope.handleIPLockValid = function() {
        var isValid = true;
        isValid = isValid && $scope.ui.wizardLocked;
        isValid = isValid && !$scope.ui.lockButtonVisible;
        isValid = isValid && loginService.isUserLoggedIn();
        var isServiceStep = $scope.isServiceStep();
        isValid = isValid && (isServiceStep || loginService.loggedInUserIsAsRequired("admin"));
        isValid = isValid && (!isServiceStep || loginService.loggedInUserIsAsRequired("service"));
        return isValid
    }
    ;
    $scope.handleIPLock = function() {
        if ($scope.handleIPLockValid()) {
            $scope.ui.lockButtonVisible = true;
            stdDialog.showDialog("ipLockedDialogTemplate")
        }
    }
    ;
    $scope.getContentPath = function() {
        if ($scope.ui.wizardLocked)
            return "../html/empty.html";
        if ($scope.daloState.getOrigData("platform") == "arm-wilma-hybrid") {
            switch ($rootScope.wizardState.getOrigData("WizardStep")) {
            case 0:
                return "../html/wizard_welcome.html";
            case 1:
                return "../html/config_common.html";
            case 2:
                $scope.passwordSettingsMode = "wizardService";
                return "../html/config_password.html";
            case 3:
                return "../html/config_gpios.html";
            case 4:
                return "../html/config_overview.html";
            case 5:
                return "../html/config_evu.html";
            case 6:
                return "../html/wizard_welcome.html";
            case 7:
                return "../html/config_common.html";
            case 8:
                return "../html/config_network.html";
            case 9:
                return "../html/wizard_reconnect.html";
            case 10:
                if ($scope.daloState.wpsTriggered)
                    return "../html/wizard_reconnect.html";
                else
                    return "../html/wizard_networkstatus.html";
            case 11:
                $scope.passwordSettingsMode = "wizardAdmin";
                return "../html/config_password.html";
            case 12:
                return "../html/wizard_finish.html";
            default:
                return "../html/empty.html"
            }
        }
        if ($scope.daloState.getOrigData("platform") == "arm-wilma") {
            switch ($rootScope.wizardState.getOrigData("WizardStep")) {
            case 0:
                return "../html/wizard_welcome.html";
            case 1:
                return "../html/config_common.html";
            case 2:
                return "../html/config_inverter.html";
            case 3:
                $scope.passwordSettingsMode = "wizardService";
                return "../html/config_password.html";
            case 4:
                return "../html/config_gpios.html";
            case 5:
                return "../html/config_meter.html";
            case 6:
                return "../html/config_evu.html";
            case 7:
                return "../html/wizard_welcome.html";
            case 8:
                return "../html/config_common.html";
            case 9:
                return "../html/config_inverter.html";
            case 10:
                return "../html/config_network.html";
            case 11:
                return "../html/wizard_reconnect.html";
            case 12:
                if ($scope.daloState.wpsTriggered)
                    return "../html/wizard_reconnect.html";
                else
                    return "../html/wizard_networkstatus.html";
            case 13:
                $scope.passwordSettingsMode = "wizardAdmin";
                return "../html/config_password.html";
            case 14:
                return "../html/wizard_finish.html";
            default:
                return "../html/empty.html"
            }
        }
    }
    ;
    $scope.wizardForward = function() {
        var model = null;
        var dnoPinsValid = null;
        var networkConfig = null;
        var pwAdmin = null;
        var pwUser = null;
        $scope.wizardButtons.showSkipNetworkSetup = false;
        $scope.wizardButtons.showKeepAPOpened = false;
        if (!$scope.wizardButtons.navigationEnabled)
            return;
        $scope.wizardButtons.navigationEnabled = false;
        $scope.verifyAuthLevelAppPage();
        if ($scope.daloState.getOrigData("platform") == "arm-wilma") {
            switch ($rootScope.wizardState.getOrigData("WizardStep")) {
            case 1:
                model = dm.model.CommonSettings.getInstance("settingsCommonCtrl", $scope);
                break;
            case 2:
                model = dm.model.InverterSettings.getInstance("settingsInverterCtrl", $scope);
                break;
            case 3:
                var passModel = dm.model.PasswordSettings.getInstance("settingsPasswordCtrl", $scope, "service");
                var validationResult = passModel.checkPasswords();
                if (validationResult.message != "OK")
                    $scope.handleSaveError(validationResult);
                else
                    model = passModel;
                break;
            case 4:
                model = dm.model.ServiceGpioSettings.getInstance("settingsGpiosCtrlService", $scope);
                dnoPinsValid = model.DNOPinsValid();
                break;
            case 5:
                model = dm.model.MeterSettings.getInstance("settingsMeterCtrl", $scope);
                break;
            case 6:
                model = dm.model.DplSettings.getInstance("settingsDplCtrl", $scope);
                break;
            case 8:
                model = dm.model.CommonSettings.getInstance("settingsCommonCtrl", $scope);
                break;
            case 9:
                model = dm.model.InverterSettings.getInstance("settingsInverterCtrl", $scope);
                break;
            case 10:
                networkConfig = dm.model.NetworkConfig.getInstance("settingsNetworkCtrl", $scope);
                apSettings = dm.model.APSettings.getInstance("settingsNetworkCtrl", $scope);
                break;
            case 13:
                pwAdmin = dm.model.PasswordSettings.getInstance("settingsPasswordCtrl", $scope, "admin");
                pwUser = dm.model.PasswordSettings.getInstance("settingsPasswordCtrl", $scope, "user");
                if (pwAdmin.checkPasswords().message != "OK") {
                    $scope.handleSaveError(pwAdmin.checkPasswords());
                    $scope.HideWizardLoading();
                    pwAdmin = null
                }
                if (pwUser.checkPasswords().message != "OK") {
                    $scope.handleSaveError(pwUser.checkPasswords());
                    $scope.HideWizardLoading();
                    pwUser = null
                }
                break;
            default:
                model = null
            }
        }
        if ($scope.daloState.getOrigData("platform") == "arm-wilma-hybrid") {
            switch ($rootScope.wizardState.getOrigData("WizardStep")) {
            case 1:
                model = dm.model.CommonSettings.getInstance("settingsCommonCtrl", $scope);
                break;
            case 2:
                var passModel = dm.model.PasswordSettings.getInstance("settingsPasswordCtrl", $scope, "service");
                var validationResult = passModel.checkPasswords();
                if (validationResult.message != "OK")
                    $scope.handleSaveError(validationResult);
                else
                    model = passModel;
                break;
            case 3:
                model = dm.model.ServiceGpioSettings.getInstance("settingsGpiosCtrlService", $scope);
                dnoPinsValid = model.DNOPinsValid();
                break;
            case 4:
                model = dm.model.OverviewSettings.getInstance("settingsOverviewCtrl", $scope);
                break;
            case 5:
                model = dm.model.DplSettings.getInstance("settingsDplCtrl", $scope);
                break;
            case 7:
                model = dm.model.CommonSettings.getInstance("settingsCommonCtrl", $scope);
                break;
            case 8:
                networkConfig = dm.model.NetworkConfig.getInstance("settingsNetworkCtrl", $scope);
                apSettings = dm.model.APSettings.getInstance("settingsNetworkCtrl", $scope);
                break;
            case 11:
                pwAdmin = dm.model.PasswordSettings.getInstance("settingsPasswordCtrl", $scope, "admin");
                pwUser = dm.model.PasswordSettings.getInstance("settingsPasswordCtrl", $scope, "user");
                if (pwAdmin.checkPasswords().message != "OK") {
                    $scope.handleSaveError(pwAdmin.checkPasswords());
                    $scope.HideWizardLoading();
                    pwAdmin = null
                }
                if (pwAdmin != null && pwUser.checkPasswords().message != "OK") {
                    $scope.handleSaveError(pwUser.checkPasswords());
                    $scope.HideWizardLoading();
                    pwUser = null
                }
                break;
            default:
                model = null
            }
        }
        if ($rootScope.wizardState.WizardStep == $scope.networkSetupStep) {
            $scope.runNetworkSetup(networkConfig, apSettings)
        } else if ($rootScope.wizardState.WizardStep == $scope.networkSetupStep + 2) {
            closeServiceAPAndContinue()
        } else if (pwUser != null && pwAdmin != null) {
            $scope.savePasswords(pwUser, pwAdmin)
        } else if (dnoPinsValid != null && !dnoPinsValid) {
            $scope.dnoModel = model;
            var invalidDNOConfigDlg = new dm.standardDialog.StandardDialog($scope,"DIALOG_TITLE_HINT",$translate.instant("IOCONFIG_DISABLEDNOIFSAVE"));
            invalidDNOConfigDlg.addButton("SAVE", "dnoModel.disableDNORules();saveModelAndContinue(dnoModel);");
            invalidDNOConfigDlg.addButton("CANCEL", "");
            invalidDNOConfigDlg.showDialog()
        } else {
            $scope.saveModelAndContinue(model)
        }
    }
    ;
    var closeServiceAPAndContinue = function() {
        dm.ngjs.$http.get("/status/io/hwipswitch").then(function(response) {
            if (response.data.Body.Data.hwipswitch) {
                stdDialog.showDialog("DisalbeHWSwitch");
                $scope.pollingEnabled = true;
                pollHWIPSwitch()
            } else {
                forwardNetworkStatusPage()
            }
        })
    };
    $scope.stopHWSwitchPolling = function() {
        $scope.pollingEnabled = false
    }
    ;
    var pollHWIPSwitch = function() {
        dm.ngjs.$http.get("/status/io/hwipswitch").then(function(response) {
            if (response.data.Body.Data.hwipswitch) {
                if ($scope.pollingEnabled)
                    setTimeout(pollHWIPSwitch, 1e3)
            } else {
                stdDialog.closeDialog();
                forwardNetworkStatusPage()
            }
        })
    };
    var forwardNetworkStatusPage = function() {
        $scope.ShowWizardLoading();
        if ($scope.daloState.connectedViaAP)
            forwardToPasswords();
        else {
            dm.util.ajaxRequest.get("/admincgi-bin/reconfigureNetwork.cgi?operation=closeswap").then(function(response) {
                if (response.data.ok) {
                    $rootScope.wizardState.WizardState = 2;
                    if (response.data.switchActive == false)
                        forwardToPasswords();
                    else
                        dm.ngjs.$timeout(function() {
                            forwardToPasswords()
                        }, 6e3)
                } else {
                    $scope.HideWizardLoading();
                    dm.util.configRequest.showCfgErrorDialog(response)
                }
            }, function(err) {
                $scope.HideWizardLoading();
                dm.util.configRequest.showCfgErrorDialog(err)
            })
        }
    };
    var forwardToPasswords = function() {
        dm.model.PasswordSettings.getInstance("settingsPasswordCtrl", $scope, "admin").load().then(function() {
            $rootScope.wizardState.WizardStep++;
            $rootScope.wizardState.save().then(function() {
                $scope.verifyAuthLevelAppPage();
                $scope.updateProgressStrip()
            }, function(err) {
                $rootScope.wizardState.WizardStep--;
                $scope.HideWizardLoading()
            })
        })
    };
    $scope.savePasswords = function(pwUser, pwAdmin) {
        var solarWeb = dm.model.SolarWebSettings.getInstance("settingsNetworkCtrl", $scope);
        var daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
        $scope.ShowWizardLoading();
        pwUser.activateAfterSave = false;
        pwAdmin.activateAfterSave = false;
        var finishPWSave = function() {
            dm.ngjs.$q.all([solarWeb.loadingPromise, dm.util.configRequest.get("/status/solarweb/")]).then(function(responses) {
                if (apSettings.ssid != "" || $scope.daloState.connectedViaAP || solarWeb.swSettings.dataSendMode == "never" || responses[1].solarweb.available == false) {
                    $rootScope.wizardState.WizardStep++;
                    $rootScope.wizardState.save().then(function() {
                        $scope.updateProgressStrip()
                    }, function(err) {
                        $rootScope.wizardState.WizardStep--;
                        $scope.HideWizardLoading()
                    })
                } else {
                    $scope.finishWizard(true).then(function() {
                        $scope.continueToSolarWeb()
                    }, function(err) {
                        $scope.HideWizardLoading()
                    })
                }
            })
        };
        pwUser.save().then(function() {
            pwAdmin.save().then(function() {
                dm.ngjs.$q.all([daloState.loadingPromise]).then(function(responses) {
                    if (daloState.isHybrid()) {
                        dm.ngjs.$q.all([dm.util.configRequest.get("/status/inverteronline/"), dm.util.configRequest.get("/config/views/"), dm.util.configRequest.get("/config/batteries/"), dm.util.ajaxRequest.get("/solar_api/v1/data/DeviceDB_Data.json")]).then(function(responses) {
                            var invOnline = responses[0];
                            var views = responses[1];
                            var batteries = responses[2];
                            var deviceDB = responses[3].data.Inverters;
                            var invId = "1";
                            var invDT;
                            for (var id in invOnline) {
                                invId = id;
                                invDT = invOnline[id]
                            }
                            var WP = 1200;
                            if (invDT) {
                                WP = Math.max(1200, deviceDB[invDT] ? deviceDB[invDT].NominalPower : 1200)
                            } else {
                                console.warn("no device type detected; is a inverter connected? using default wp: 1200")
                            }
                            if (batteries.batteries.PV_PEAK_POWER == 0) {
                                batteries.batteries.PV_PEAK_POWER = WP;
                                views.views.comparison[invId].Wp = WP;
                                dm.ngjs.$q.all([dm.util.configRequest.saveDef("/config/batteries/", batteries), dm.util.configRequest.saveDef("/config/views/", views)]).finally(function() {
                                    finishPWSave()
                                })
                            } else {
                                finishPWSave()
                            }
                        })
                    } else {
                        finishPWSave()
                    }
                })
            }, function(err) {
                $scope.handleSaveError(err);
                $scope.HideWizardLoading()
            })
        }, function(err) {
            $scope.HideWizardLoading()
        })
    }
    ;
    $scope.runNetworkSetup = function(networkConfig, apSettings) {
        var solarWeb = dm.model.SolarWebSettings.getInstance("settingsNetworkCtrl", $scope);
        var iface = networkConfig.networkConfigs.inetConnection.selInetIface;
        if (iface == "uap0") {
            $scope.ShowWizardLoading();
            solarWeb.preSave().then(function() {
                solarWeb.save().then(function() {
                    apSettings.save().then(function() {
                        $rootScope.wizardState.WizardStep = $scope.localAPModeNextSettingsStep;
                        $rootScope.wizardState.save().then(function() {
                            $scope.updateProgressStrip()
                        }, function(err) {
                            $scope.HideWizardLoading()
                        })
                    }, function(err) {
                        $scope.handleSaveError(err);
                        $scope.HideWizardLoading()
                    })
                }, function(err) {
                    $scope.handleSaveError(err);
                    $scope.HideWizardLoading()
                }).finally(function() {})
            });
            return
        }
        apSettings.resetSsid = true;
        if (iface == "wlan0") {
            if (networkConfig.selectedWLAN == null) {
                var errorMsg = new dm.standardDialog.StandardDialog($scope,"ERROR","{{'WLAN_NO_CLIENT' | translate}}","RECON_CLOSE");
                errorMsg.showDialog();
                return
            }
            if (networkConfig.selectedWLAN.ssid != networkConfig.ifaceWlan0ConfigFields.network.ssid || networkConfig.ifaceWlan0ConfigFields.network.psk == "FAIL") {
                var errorMsg = new dm.standardDialog.StandardDialog($scope,"ERROR","{{'RECON_AUTH_FAILED_01' | translate}} <b>" + networkConfig.selectedWLAN.ssid + " </b> " + "{{'RECON_AUTH_FAILED_02' | translate}}","RECON_CLOSE");
                errorMsg.showDialog();
                return
            }
        }
        $scope.onDialogClose = function() {
            $scope.validationCancled = true;
            $scope.wizardButtons.showSkipNetworkSetup = true
        }
        ;
        if ($scope.daloState.connectedViaAP) {
            $scope.showProgressMessage = true;
            $scope.connectionProgressMessage = "RECON_SAVING_SETTINGS";
            $scope.showRangeError = false;
            $scope.showAuthError = false;
            $scope.validationCancled = false;
            $scope.retryCount = "";
            $scope.reconfigureResponse = null;
            $scope.selectedWifiSSID = networkConfig.ifaceWlan0ConfigFields.network.ssid;
            var validationDialog = new dm.standardDialog.StandardDialog($scope,"WIZARD_STEP_8","<span ng-show='showProgressMessage'> {{ connectionProgressMessage | translate}} {{retryCount}}</span>            <span ng-show='showRangeError'> {{ 'RECON_RANGE_FAILED_01' | translate}} <b> {{selectedWifiSSID}} </b> {{ 'RECON_RANGE_FAILED_02' | translate}}</span>            <span ng-show='showAuthError'> {{ 'RECON_AUTH_FAILED_01' | translate}} <b> {{selectedWifiSSID}} </b> {{ 'RECON_AUTH_FAILED_02' | translate}}</span>","CANCEL","onDialogClose();");
            validationDialog.setShowLoading(true);
            validationDialog.showDialog();
            solarWeb.preSave().then(function() {
                solarWeb.save().then(function() {
                    apSettings.save().then(function() {
                        networkConfig.save().then(function() {
                            $scope.connectionProgressMessage = "RECON_RECON_NETWORK";
                            if (!$scope.validationCancled) {
                                networkConfig.activateConfiguration(iface);
                                if (iface != "eth0") {
                                    setTimeout(function(response) {
                                        if (!$scope.validationCancled) {
                                            $scope.retryCount = 1;
                                            $scope.connectionProgressMessage = "RECON_RETRY_CONNECT";
                                            console.error("polling connection");
                                            $scope.pollForConnection(networkConfig, validationDialog)
                                        }
                                    }, 8e3)
                                } else {
                                    setTimeout(function() {
                                        validationDialog.setShowLoading(false);
                                        $scope.continueToStatusStep(validationDialog)
                                    }, 5e3)
                                }
                            }
                        }, function(err) {
                            validationDialog.closeDialog();
                            dm.util.configRequest.showCfgErrorDialog(err)
                        })
                    }, function(err) {
                        validationDialog.closeDialog();
                        dm.util.configRequest.showCfgErrorDialog(err)
                    })
                }, function(err) {
                    validationDialog.closeDialog();
                    dm.util.configRequest.showCfgErrorDialog(err)
                })
            })
        } else {
            $scope.ShowWizardLoading();
            solarWeb.preSave().then(function() {
                solarWeb.save().then(function() {
                    apSettings.save().then(function() {
                        networkConfig.save().then(function() {
                            $rootScope.wizardState.WizardStep++;
                            $rootScope.wizardState.IpLock = "";
                            $rootScope.wizardState.save().then(function() {
                                $scope.updateProgressStrip()
                            }, function(err) {
                                $rootScope.wizardState.WizardStep--;
                                $scope.HideWizardLoading();
                                dm.util.configRequest.showCfgErrorDialog(err)
                            })
                        }, function(err) {
                            $scope.HideWizardLoading();
                            dm.util.configRequest.showCfgErrorDialog(err)
                        })
                    }, function(err) {
                        $scope.HideWizardLoading();
                        dm.util.configRequest.showCfgErrorDialog(err)
                    })
                }, function(err) {
                    $scope.HideWizardLoading();
                    dm.util.configRequest.showCfgErrorDialog(err)
                })
            })
        }
    }
    ;
    $scope.continueToStatusStep = function(validationDialog) {
        setTimeout(function() {
            validationDialog.closeDialog();
            $scope.ShowWizardLoading();
            $rootScope.wizardState.IpLock = "";
            $rootScope.wizardState.WizardStep += 2;
            if ($scope.daloState.queryParameters.app != undefined)
                $rootScope.wizardState.WizardStep--;
            $rootScope.wizardState.save().then(function() {
                $scope.updateProgressStrip()
            }, function(err) {
                $scope.HideWizardLoading()
            })
        }, 1e3)
    }
    ;
    $scope.pollForConnection = function(networkConfig, validationDialog) {
        if ($scope.retryCount > 5) {
            validationDialog.setShowLoading(false);
            $scope.showProgressMessage = false;
            $scope.showRangeError = true;
            $scope.retryCount = "";
            validationDialog.updateValues("WIZARD_STEP_8", "RECON_CLOSE");
            return
        }
        networkConfig.getWifiConnectionState().then(function(response) {
            $scope.reconfigureResponse = response
        });
        setTimeout(function() {
            if ($scope.reconfigureResponse != null) {
                if ($scope.reconfigureResponse.data.state == "CONNECTED") {
                    $scope.retryCount = "";
                    $scope.connectionProgressMessage = "RECON_SUCCESS";
                    validationDialog.updateValues("WIZARD_STEP_8", "");
                    validationDialog.setShowLoading(false);
                    $scope.continueToStatusStep(validationDialog)
                } else if ($scope.reconfigureResponse.data.state == "DISABLED") {
                    if ($scope.retryCount > 3) {
                        $scope.showAuthError = true;
                        validationDialog.setShowLoading(false);
                        $scope.showProgressMessage = false;
                        validationDialog.updateValues("WIZARD_STEP_8", "RECON_CLOSE")
                    } else {
                        $scope.retryCount++;
                        if (!$scope.validationCancled)
                            $scope.pollForConnection(networkConfig, validationDialog)
                    }
                } else {
                    $scope.retryCount++;
                    if (!$scope.validationCancled)
                        $scope.pollForConnection(networkConfig, validationDialog)
                }
            } else {
                if (!$scope.validationCancled)
                    $scope.pollForConnection(networkConfig, validationDialog)
            }
        }, 8e3)
    }
    ;
    $scope.saveModelAndContinue = function(model) {
        if (!model || $scope.wizardloading)
            return;
        $scope.ShowWizardLoading();
        $scope.checkIPLock().then(function(response) {
            if (response.iplock != "" && response.iplock != $scope.daloState.remoteAddr) {
                $scope.ui.wizardAborted = true;
                return
            }
            model.save().then(function() {
                if ($rootScope.wizardState.WizardStep == $scope.firstStepUser)
                    $scope.daloState.systemName = dm.util.string.htmlEncode(model.system.name);
                if ($rootScope.wizardState.WizardStep == $scope.firstStepUser - 2) {
                    if ($scope.daloState.queryParameters.app != undefined)
                        $rootScope.wizardState.ServiceDone = "app";
                    else
                        $rootScope.wizardState.ServiceDone = "web"
                }
                $rootScope.wizardState.WizardStep++;
                $rootScope.wizardState.IpLock = $scope.daloState.remoteAddr;
                return $rootScope.wizardState.save().then(function() {
                    $scope.updateProgressStrip();
                    $scope.verifyAuthLevelAppPage()
                }, function(err) {
                    $rootScope.wizardState.WizardStep--;
                    $scope.HideWizardLoading()
                })
            }, function(err) {
                $scope.handleSaveError(err);
                $scope.HideWizardLoading()
            })
        })
    }
    ;
    $scope.getPolicyTemplate = dm.util.templateUrls.getPolicyTemplate;
    $scope.wizardBackward = function() {
        if ($scope.wizardloading)
            return;
        $scope.wizardButtons.showSkipNetworkSetup = false;
        $scope.wizardButtons.showKeepAPOpened = false;
        $scope.ShowWizardLoading();
        $scope.checkIPLock().then(function(response) {
            if (response.iplock != "" && response.iplock != $scope.daloState.remoteAddr) {
                $scope.ui.wizardAborted = true;
                $scope.ui.showBackward = false;
                $scope.ui.showAbort = false;
                $scope.ui.showForward = false;
                return
            }
            if (apSettings.ssid != "" && $rootScope.wizardState.WizardStep == $scope.localAPModeNextSettingsStep || $rootScope.wizardState.WizardStep == $scope.networkSetupStep + 2) {
                $rootScope.wizardState.WizardStep = $scope.networkSetupStep;
                $rootScope.wizardState.WizardState = 1
            } else
                $rootScope.wizardState.WizardStep--;
            if ($rootScope.wizardState.WizardStep == $scope.networkSetupStep)
                $scope.wizardButtons.forwardText = "WIZARD_FORWARD";
            $rootScope.wizardState.save().then(function() {
                $scope.updateProgressStrip()
            })
        })
    }
    ;
    $scope.finishWizard = function() {
        $rootScope.wizardState.WizardState = 0;
        $rootScope.wizardState.WizardInitialized = true;
        $rootScope.wizardState.IpLock = "";
        return $rootScope.wizardState.save().then(function() {
            dm.util.configRequest.saveDef("/config/logging/loggingPreRequirementsFulfilled", {
                loggingPreRequirementsFulfilled: true
            })
        })
    }
    ;
    $scope.skipNetworkSetup = function() {
        if ($scope.wizardButtons.showSkipNetworkSetup) {
            $scope.wizardButtons.showSkipNetworkSetup = false;
            $scope.wizardButtons.forwardText = "WIZARD_FORWARD";
            $rootScope.wizardState.WizardStep = $scope.localAPModeNextSettingsStep;
            $scope.ShowWizardLoading();
            $rootScope.wizardState.save().then(function() {
                $scope.updateProgressStrip()
            }, function() {
                $scope.HideWizardLoading()
            })
        }
    }
    ;
    $scope.keepAPOpened = function() {
        if ($scope.wizardButtons.showKeepAPOpened) {
            $scope.wizardButtons.showKeepAPOpened = false;
            $rootScope.wizardState.WizardStep++;
            $scope.ShowWizardLoading();
            $rootScope.wizardState.save().then(function() {
                $scope.updateProgressStrip()
            }, function() {
                $rootScope.wizardState.WizardStep--;
                $scope.HideWizardLoading()
            })
        }
    }
    ;
    $scope.wizardAbort = function() {
        if ($scope.loading)
            return;
        $scope.loading = false;
        $scope.wizardButtons.navigationEnabled = false;
        $scope.wizardButtons.showAbort = true;
        $rootScope.wizardState.Iplock = "";
        $rootScope.wizardState.WizardState = 0;
        $scope.daloState.wizardRunning = false;
        $scope.daloState.pageVisible = false;
        $rootScope.wizardState.save().then(function() {
            $state.go("startpage")
        })
    }
    ;
    $scope.startUserWizard = function() {
        $scope.checkIPLock().then(function(response) {
            if (response.iplock != "" && response.iplock != $scope.daloState.remoteAddr) {
                $scope.ui.wizardAborted = true;
                $scope.ui.showBackward = false;
                $scope.ui.showAbort = false;
                $scope.ui.showForward = false;
                $scope.HideWizardLoading()
            } else {
                $rootScope.wizardState.WizardStep = $scope.firstStepUser;
                $rootScope.wizardState.IpLock = $scope.daloState.remoteAddr;
                $scope.ShowWizardLoading();
                $rootScope.wizardState.save().then(function() {
                    $scope.updateProgressStrip()
                }, function() {
                    $scope.HideWizardLoading()
                })
            }
        })
    }
    ;
    $scope.startServiceWizard = function() {
        $scope.checkIPLock().then(function(response) {
            if (response.iplock != "" && response.iplock != $scope.daloState.remoteAddr) {
                $scope.ui.wizardAborted = true;
                $scope.ui.showBackward = false;
                $scope.ui.showAbort = false;
                $scope.ui.showForward = false;
                $scope.HideWizardLoading()
            } else {
                var fwdServiceStep_1 = function() {
                    $rootScope.wizardState.WizardStep = 1;
                    $rootScope.wizardState.IpLock = $scope.daloState.remoteAddr;
                    $scope.ShowWizardLoading();
                    return $rootScope.wizardState.save().then(function() {
                        $scope.updateProgressStrip()
                    }).finally(function() {
                        $scope.HideWizardLoading()
                    })
                };
                if (loginService.loggedInUserIsAsRequired("service")) {
                    fwdServiceStep_1()
                } else {
                    loginService.waitForLogin(true, true).then(function() {
                        $rootScope.wizardState.loadingPromise.then(function() {
                            fwdServiceStep_1()
                        })
                    });
                    $scope.loginForWizard("service")
                }
            }
        })
    }
    ;
    $scope.loginForWizard = function(user) {
        if (user == "service") {
            if ($scope.daloState.servicePasswordAssigned) {
                $state.go("login", {
                    requiredUser: user,
                    previousState: "wizard"
                })
            } else {
                loginService.login("service", "84d3c4823485485369078648e67b0367", false, "wizard")
            }
        } else if (user == "admin") {
            if ($scope.daloState.adminPasswordAssigned) {
                $state.go("login", {
                    previousState: "wizard"
                })
            } else {
                loginService.login("admin", "", false, "wizard")
            }
        }
    }
    ;
    $scope.gotoServiceSettings = function() {
        $scope.daloState.allowWizardSettings = true;
        $state.go("settings.common")
    }
    ;
    $scope.continueToStartpage = function() {
        $scope.ShowWizardLoading();
        $scope.daloState.pageVisible = false;
        $scope.daloState.wizardRunning = false;
        $state.go("startpage")
    }
    ;
    $scope.prepareSolarWebRegForm = function() {
        var commonSettings = dm.model.CommonSettings.getInstance("settingsCommonCtrl", $scope);
        $scope.ShowWizardLoading();
        return dm.ngjs.$q.all([commonSettings.loadingPromise, dm.util.solarAPIRequest.get("/status/inverteronline/")]).then(function(responses) {
            var RegData = {
                ID: $scope.daloState.daloID,
                Key: $scope.daloState.daloKey,
                Inverters: []
            };
            RegData["SystemName"] = dm.util.string.htmlDecode($scope.daloState.systemName);
            RegData["CO2Factor"] = commonSettings.profit.CO2Factor;
            RegData["Currency"] = commonSettings.profit.currency;
            RegData["CashFactor"] = commonSettings.profit.cashFactor;
            RegData["DeliveryFactor"] = commonSettings.profit.deliveryFactor;
            RegData["App"] = false;
            if ($scope.daloState.queryParameters.App != undefined)
                RegData["App"] = $scope.daloState.queryParameters.app;
            RegData["ServiceDone"] = $rootScope.wizardState.ServiceDone;
            RegData["TimeZone"] = commonSettings.timezone;
            var visibleInverters = responses[1];
            var inverters = commonSettings.comparison;
            $.each(visibleInverters, function(id, inverterDT) {
                var OneInverter = {
                    NT: 96 + parseInt(id),
                    DT: inverterDT,
                    PeakPower: inverters[id].Wp,
                    Name: dm.util.string.htmlDecode(inverters[id].name)
                };
                RegData.Inverters.push(OneInverter)
            });
            return RegData
        }).then(function(RegData) {
            var pwAdmin = dm.model.PasswordSettings.getInstance("settingsPasswordCtrl", $scope, "admin");
            return pwAdmin.activatePasswords().finally(function() {
                $("#RegData").val(JSON.stringify(RegData))
            })
        })
    }
    ;
    $scope.continueToSolarWeb = function() {
        $scope.prepareSolarWebRegForm().then(function() {
            $scope.submitSolarWebForm()
        })
    }
    ;
    $scope.submitSolarWebForm = function() {
        $scope.daloState.pageVisible = false;
        $scope.daloState.wizardRunning = false;
        document.forms["RegForm"].submit()
    }
    ;
    $scope.requestAuthUser = function() {}
    ;
    $scope.handleSaveError = function(error) {
        $scope.$broadcast("showValidators");
        if (typeof error != "undefined") {
            if (error.message != undefined) {
                switch (error.message) {
                case "SaveFail_NoPassSet":
                    if (error.type == "service")
                        var errMsg = "{{'DIALOG_TEXT_PW_8' | translate}}";
                    else
                        var errMsg = "{{'DIALOG_TEXT_PW_1' | translate}}";
                    break;
                case "SaveFail_PassNotEqual":
                    if (error.type == "service")
                        var errMsg = "{{'DIALOG_TEXT_PW_9' | translate}}";
                    if (error.type == "admin")
                        var errMsg = "{{'DIALOG_TEXT_PW_3' | translate}}";
                    if (error.type == "user")
                        var errMsg = "{{'DIALOG_TEXT_PW_4' | translate}}";
                    break;
                case "SaveFail_PassNotSecure":
                    if (error.type == "service")
                        var errMsg = "{{'DIALOG_TEXT_PW_10' | translate}}";
                    else
                        var errMsg = "{{'DIALOG_TEXT_PW_5' | translate}}";
                    break
                }
                var errDlg = new dm.standardDialog.StandardDialog($scope,"ERROR",errMsg,"RECON_CLOSE");
                errDlg.showDialog()
            }
            if (error.error && error.error.Head && error.error.Head.Status) {
                if (error.error.Head.Status.Reason == "old password not correct") {
                    $scope.setButtonVisibility();
                    stdDialog.showDialog("SaveFail_OldPassWrong")
                }
            }
        }
    }
    ;
    $scope.setButtonVisibility = function() {
        if ($scope.ui.lockButtonVisible)
            $scope.ui.lockButtonVisible = false;
        if ($scope.ui.wizardLocked)
            $scope.ui.wizardAborted = true
    }
    ;
    loginService.waitForLogin().then(function() {
        var user = loginService.getLoggedInUser();
        if (user == "user")
            $scope.verifyAuthLevelAppPage();
        else
            $scope.init()
    });
    $scope.$on("$destroy", function() {
        stdDialog.closeDialog();
        $scope.setButtonVisibility()
    })
}
]);
angular.module("wizard").factory("wizardService", ["$window", function(win) {}
]);
angular.module("wizard").directive("wizardprogressstrip", [function() {
    return {
        restrict: "E",
        transclude: true,
        replace: true,
        templateUrl: "../html/wizard_progressstrip.html",
        controller: "wizardCtrl",
        link: function() {}
    }
}
]);
angular.module("err401", ["pascalprecht.translate"]).controller("err401Ctrl", ["$scope", function($scope) {
    $("#page_content").html("");
    var daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    daloState.loadingPromise.then(function() {
        $scope.DaloID = daloState.daloID;
        $scope.SystemDate = daloState.systemDate.toLocaleDateString()
    })
}
]);
angular.module("indexApp", ["ui.router", "err401", "header", "login", "forgotPW", "aboutSystem", "widgets", "networkDiagnostics", "fwUpdate", "settings", "global", "wizard", "backendComm"]);
angular.module("indexApp").factory("AuthInterceptor", ["$rootScope", "$q", function($rootScope, $q) {
    var loginModel = dm.model.LoginModel.getInstance();
    var digestHeaderFunction = digestHeader();
    var AuthHeader = "";
    return {
        request: function(config) {
            if (AuthHeader.length > 0 && loginModel.data.username !== undefined) {
                config.headers["Authorization"] = digestHeaderFunction(config.method, config.url, AuthHeader, loginModel.data.username + ":" + loginModel.data.password)
            }
            return config
        },
        requestError: function(requestRejection) {
            return $q.reject(requestRejection)
        },
        response: function(response) {
            return response
        },
        responseError: function(responseRejection) {
            if (401 == responseRejection.status) {
                AuthHeader = responseRejection.headers("X-WWW-Authenticate")
            }
            return $q.reject(responseRejection)
        }
    }
}
]);
angular.module("indexApp").config(["$stateProvider", "$urlRouterProvider", "$httpProvider", function($stateProvider, $urlRouterProvider, $httpProvider) {
    $httpProvider.interceptors.push("AuthInterceptor");
    $stateProvider.state("wizard", {
        url: "/wizard",
        views: {
            mainView: {
                templateUrl: "../html/wizard.html?ver=1.1.24-1",
                controller: "wizardCtrl"
            }
        }
    });
    $stateProvider.state("empty", {
        views: {
            mainView: {
                templateUrl: "../html/empty.html?ver=1.1.24-1"
            }
        }
    });
    $stateProvider.state("err401", {
        views: {
            mainView: {
                templateUrl: "../html/err401.html",
                controller: "err401Ctrl"
            }
        }
    });
    $stateProvider.state("login", {
        url: "/login",
        views: {
            mainView: {
                templateUrl: "../html/login.html?ver=1.1.24-1",
                controller: "loginCtrl"
            }
        },
        params: {
            previousState: undefined,
            requiredUser: undefined
        }
    });
    $stateProvider.state("forgotPassword", {
        url: "/forgotpassword",
        views: {
            mainView: {
                templateUrl: "../html/forgotPassword.html?ver=1.1.24-1",
                controller: "forgotPWCtrl"
            }
        }
    });
    $stateProvider.state("fwUpdate", {
        url: "/fw_update",
        params: {
            searchUpdate: false
        },
        views: {
            mainView: {
                templateUrl: "../html/fwUpdate.html?ver=1.1.24-1",
                controller: "fwUpdateCtrl"
            }
        }
    });
    $stateProvider.state("fwUpdate_redirect", {
        url: "/fw_update_redirect",
        params: {
            searchUpdate: false
        },
        views: {
            mainView: {
                templateUrl: "../html/fwUpdate.html?ver=1.1.24-1",
                controller: "fwUpdateCtrl"
            }
        }
    });
    $stateProvider.state("aboutSystem", {
        url: "/about_system",
        views: {
            mainView: {
                templateUrl: "../html/aboutSystem.html?ver=1.1.24-1",
                controller: "aboutCtrl"
            }
        }
    });
    $stateProvider.state("networkDiagnostics", {
        url: "/network_diagnostics",
        views: {
            mainView: {
                templateUrl: "../html/network_diagnostics.html?ver=1.1.24-1",
                controller: "networkDiagnosticsCtrl"
            }
        }
    });
    $stateProvider.state("settings", {
        url: "/settings",
        views: {
            mainView: {
                templateUrl: "../html/settings.html?ver=1.1.24-1",
                controller: "settingsCtrl"
            }
        }
    });
    $stateProvider.state("settings.nopassassigned", {
        views: {
            settingsView: {
                templateUrl: "../html/missingservicepass.html",
                controller: "settingsCtrl"
            }
        }
    });
    $stateProvider.state("settings.common", {
        url: "/common",
        views: {
            settingsView: {
                templateUrl: "../html/config_common.html?ver=1.1.24-1"
            }
        }
    });
    $stateProvider.state("settings.password", {
        url: "/password",
        views: {
            settingsView: {
                templateUrl: "../html/config_password.html?ver=1.1.24-1"
            }
        }
    });
    $stateProvider.state("settings.network", {
        url: "/network",
        views: {
            settingsView: {
                templateUrl: "../html/config_network.html?ver=1.1.24-1"
            }
        }
    });
    $stateProvider.state("settings.solarweb", {
        url: "/solarweb",
        views: {
            settingsView: {
                templateUrl: "../html/config_solarweb.html?ver=1.1.24-1",
                controller: "settingsSolarWebCtrl"
            }
        }
    });
    $stateProvider.state("settings.loadmanagement", {
        url: "/loadmanagement",
        views: {
            settingsView: {
                templateUrl: "../html/config_loadmanagement.html?ver=1.1.24-1",
                controller: "settingsLoadmanagementCtrl"
            }
        }
    });
    $stateProvider.state("settings.pushservice", {
        url: "/pushservice",
        views: {
            settingsView: {
                templateUrl: "../html/config_pushservice.html?ver=1.1.24-1",
                controller: "settingsPushserviceCtrl"
            }
        }
    });
    $stateProvider.state("settings.modbus", {
        url: "/modbus",
        views: {
            settingsView: {
                templateUrl: "../html/config_modbus.html?ver=1.1.24-1",
                controller: "settingsModbusCtrl"
            }
        }
    });
    $stateProvider.state("settings.evu", {
        url: "/evu",
        views: {
            settingsView: {
                templateUrl: "../html/config_evu.html?ver=1.1.24-1"
            }
        }
    });
    $stateProvider.state("settings.err401", {
        views: {
            settingsView: {
                templateUrl: "../html/err401.html?ver=1.1.24-1",
                controller: "err401Ctrl"
            }
        }
    });
    var startpageTemplateProvider = function($http) {
        var daloState = dm.model.DaloState.getInstance("DaloStateModel", []);
        return daloState.loadingPromise.then(function() {
            var url = "/html/startpage_multi.html?ver=1.1.24-1";
            if (daloState.platform == "arm-wilma-hybrid")
                url = "/html/startpage_widgets.html?ver=1.1.24-1";
            return $http.get(url).then(function(result) {
                return result.data
            })
        })
    };
    startpageTemplateProvider.$inject = ["$http"];
    $stateProvider.state("startpage", {
        url: "/startpage",
        views: {
            mainView: {
                templateProvider: startpageTemplateProvider
            }
        }
    });
    $stateProvider.state("settings.gpios", {
        url: "/gpios",
        views: {
            settingsView: {
                templateUrl: "../html/config_gpios.html?ver=1.1.24-1",
                controller: "settingsGpiosCtrl"
            }
        }
    });
    $stateProvider.state("settings.energymanagement", {
        url: "/energymanagement",
        views: {
            settingsView: {
                templateUrl: "../html/config_energymanagement.html?ver=1.1.24-1"
            }
        }
    });
    $stateProvider.state("settings.overview", {
        url: "/overview",
        views: {
            settingsView: {
                templateUrl: "../html/config_overview.html?ver=1.1.24-1"
            }
        }
    });
    $stateProvider.state("settings.battery", {
        url: "/battery",
        views: {
            settingsView: {
                templateUrl: "../html/config_battery.html?ver=1.1.24-1"
            }
        }
    });
    $stateProvider.state("settings.inverter", {
        url: "/inverter",
        views: {
            settingsView: {
                templateUrl: "../html/config_inverter.html?ver=1.1.24-1",
                controller: "settingsInverterCtrl"
            }
        }
    });
    $stateProvider.state("settings.sensorcards", {
        url: "/sensorcards",
        views: {
            settingsView: {
                templateUrl: "../html/config_sensorcards.html?ver=1.1.24-1",
                controller: "settingsSensorcardsCtrl"
            }
        }
    });
    $stateProvider.state("settings.meter", {
        url: "/meter",
        views: {
            settingsView: {
                templateUrl: "../html/config_meter.html?ver=1.1.24-1"
            }
        }
    })
}
]);
angular.module("indexApp").run(["$rootScope", "$state", "loginService", function($rootScope, $state, loginService) {
    var statesAtLeastRequiringUser = ["startpage", "fwUpdate_redirect", "settings.err401", "err401", "empty"];
    var statesAtLeastRequiringAdmin = ["settings", "settings.common", "settings.sensorcards", "settings.inverter", "settings.energymanagement", "settings.gpios", "settings.modbus", "settings.pushservice", "settings.loadmanagement", "settings.solarweb", "settings.network", "settings.password", "settings.nopassassigned", "networkDiagnostics", "aboutSystem", "fwUpdate", "fwUpdate_redirect", "wizard"];
    var statesAtLeastRequiringService = ["settings.overview", "settings.evu", "settings.battery", "settings.meter"];
    loginService.autoLogin();
    var daloState = dm.model.DaloState.getInstance("DaloStateModel", $rootScope);
    var isStateAllowed = function(stateName, daloState) {
        var allowedStates = ["login", "forgotPassword", "startpage", "empty", "err401", "fwUpdate", "fwUpdate_redirect", "aboutSystem", "networkDiagnostics", "settings", "settings.common", "settings.password", "settings.network", "settings.solarweb", "settings.gpios", "settings.meter", "settings.modbus", "settings.nopassassigned", "settings.loadmanagement", "settings.pushservice", "settings.evu", "settings.err401"];
        var allowedWizardSettingsStates = ["login", "forgotPassword", "wizard", "err401", "fwUpdate", "fwUpdate_redirect", "settings", "settings.common", "settings.password", "settings.err401", "settings.gpios", "settings.loadmanagement", "settings.pushservice", "settings.modbus", "settings.meter", "settings.evu", "settings.nopassassigned"];
        var allowedWizardStates = ["login", "forgotPassword", "wizard", "err401", "fwUpdate", "fwUpdate_redirect"];
        if (daloState.platform == "arm-wilma") {
            allowedStates.push.apply(allowedStates, ["settings.sensorcards", "settings.inverter"]);
            allowedWizardSettingsStates.push.apply(allowedWizardSettingsStates, ["settings.sensorcards"])
        }
        if (daloState.platform == "arm-wilma-hybrid") {
            allowedStates.push.apply(allowedStates, ["settings.energymanagement", "settings.overview", "settings.battery"]);
            allowedWizardSettingsStates.push.apply(allowedWizardSettingsStates, ["settings.gpios", "settings.energymanagement", "settings.overview", "settings.battery"])
        }
        if (daloState.wizardRunning) {
            if (daloState.allowWizardSettings) {
                return $.inArray(stateName, allowedWizardSettingsStates) > -1
            }
            return $.inArray(stateName, allowedWizardStates) > -1
        }
        return $.inArray(stateName, allowedStates) > -1
    };
    var getRequiredUser = function(toState) {
        if (statesAtLeastRequiringUser.indexOf(toState) != -1)
            return "user";
        else if (statesAtLeastRequiringAdmin.indexOf(toState) != -1)
            return "admin";
        return "service"
    };
    var checkLoggedInUserForState = function(toState) {
        if (toState == "login" || toState == "forgotPassword")
            return true;
        var loginModel = dm.model.LoginModel.getInstance();
        var loggedInUser = loginModel.data.username;
        var requiredUserLoggedIn = loggedInUser === "user" && statesAtLeastRequiringUser.indexOf(toState) != -1 || loggedInUser === "admin" && (statesAtLeastRequiringUser.indexOf(toState) != -1 || statesAtLeastRequiringAdmin.indexOf(toState) != -1) || (loggedInUser === "service" || loggedInUser === "today" && (statesAtLeastRequiringUser.indexOf(toState) != -1 || statesAtLeastRequiringAdmin.indexOf(toState) != -1 || statesAtLeastRequiringService.indexOf(toState) != -1));
        return requiredUserLoggedIn
    };
    var currentLoggedInUser = undefined;
    var preventedState = undefined;
    var goToPreventedState = function() {
        if (preventedState) {
            var s_1 = preventedState;
            preventedState = undefined;
            $state.go("empty").then(function() {
                return $state.go(s_1)
            })
        }
    };
    var stateChangeRoundTrip = false;
    $rootScope.$on("loginEvent", function(event, loggedInUser) {
        currentLoggedInUser = loggedInUser;
        goToPreventedState()
    });
    daloState.loadingPromise.then(function() {
        if (!preventedState)
            $state.go(daloState.wizardRunning ? "wizard" : "startpage");
        else
            goToPreventedState()
    });
    $rootScope.$on("$stateChangeStart", function(event, toState, toParams, fromState, fromParams, error) {
        var preventStart = function() {
            preventedState = toState.name;
            event.preventDefault()
        };
        if (toState.name == "empty" || toState.name == "login" || toState.name == "forgotPassword")
            return;
        if (daloState.isLoading || !currentLoggedInUser) {
            preventStart();
            return
        }
        if (daloState.isInconsistent && toState.name != "fwUpdate_redirect") {
            event.preventDefault();
            $state.go("fwUpdate_redirect");
            return
        }
        if (!checkLoggedInUserForState(toState.name)) {
            event.preventDefault();
            $state.go("login", {
                previousState: toState.name,
                requiredUser: getRequiredUser(toState.name)
            });
            return
        }
        var _$ = $;
        var params = _$.url().param();
        if (params != undefined && !$.isEmptyObject(params)) {
            daloState.queryParameters = params;
            if (daloState.queryParameters.lang != undefined)
                daloState.setLanguage(daloState.queryParameters.lang)
        }
        if (toState.name == "wizard")
            daloState.allowWizardSettings = false;
        if (daloState.wizardRunning && !isStateAllowed(toState.name, daloState)) {
            event.preventDefault();
            $state.go("wizard");
            return
        }
        if (!daloState.wizardRunning && !isStateAllowed(toState.name, daloState)) {
            event.preventDefault();
            $state.go("startpage");
            return
        }
        if (toState.name == "settings") {
            event.preventDefault();
            $state.go("settings.common");
            return
        }
        if (!daloState.servicePasswordAssigned && $.inArray(toState.name, statesAtLeastRequiringService) > -1) {
            event.preventDefault();
            $state.go("settings.nopassassigned");
            return
        }
    });
    $rootScope.$on("$stateChangeSuccess", function(event, toState, toParams, fromState, fromParams, error) {
        if (toState.name == "empty")
            return;
        daloState.pageVisible = true
    });
    $rootScope.$on("$stateChangeError", function(event, toState, toParams, fromState, fromParams, error) {
        if (error.status == 401) {
            event.preventDefault();
            window.location.hash = $state.href(toState);
            $rootScope.isHeaderLoaded = true;
            $state.go("login")
        }
    })
}
]);
angular.module("indexApp").controller("rootCtrl", ["$scope", "$state", "appConfig", "$q", function($scope, $state, appConfig, $q) {
    $scope.daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    $scope.LANGUAGE = $scope.daloState.language;
    $scope.IsInconsistent = $scope.daloState.isInconsistent;
    $scope.init = function() {
        $q.all([$scope.daloState.loadingPromise]).then(function() {
            window.appBootstrapped = true
        }, function() {
            console.log("loading err")
        })
    }
    ;
    $scope.getError401Str = function() {
        return $scope.daloState.isHybrid() ? "ERR401_EXP_SERV_HY" : "ERR401_EXP_SERV"
    }
    ;
    $scope.navigationEnabled = function() {
        return !($scope.daloState.wizardRunning || $scope.daloState.isInconsistent || $state.current.name == "login" || $state.current.name == "forgotPassword")
    }
    ;
    $scope.getRootClass = function() {
        var wideSpaceStates = ["settings.evu", "settings.overview", "settings.inverter", "settings.gpios"];
        var cls = "root_main";
        if (!$scope.daloState.userAuth.user)
            cls = "root_main_auth_failed";
        if ($scope.daloState.wizardRunning)
            cls = "root_wizard";
        if ($scope.daloState.isInconsistent || $scope.daloState.wizardRunning && ($state.current.name == "fwUpdate" || $state.current.name == "fwUpdate_redirect")) {
            cls = "root_main";
            if (!$scope.daloState.userAuth.user)
                cls = "root_main_auth_failed"
        }
        if ($.inArray($state.current.name, wideSpaceStates) > -1)
            cls += " width_wide";
        else
            cls += " width_normal";
        return cls
    }
    ;
    $scope.getPageContentClass = function() {
        var cls = "pagecontent_main";
        if ($scope.daloState.isInconsistent || $scope.daloState.wizardRunning && ($state.current.name == "fwUpdate" || $state.current.name == "fwUpdate_redirect"))
            return "pagecontent_main";
        if ($scope.daloState.wizardRunning && !$scope.daloState.isInconsistent) {
            cls = "pagecontent_wizard";
            if ($state.current.name.slice(0, 8) == "settings")
                cls = "pagecontent_settings"
        }
        return cls
    }
    ;
    $scope.getBacklayerClass = function() {
        var cls = "backlayer_main";
        if ($scope.daloState.isInconsistent || $scope.daloState.wizardRunning && ($state.current.name == "fwUpdate" || $state.current.name == "fwUpdate_redirect"))
            return "backlayer_inconsistent";
        if ($scope.daloState.wizardRunning) {
            cls = "backlayer_wizard";
            if ($state.current.name.slice(0, 8) == "settings")
                cls = "backlayer_settings"
        } else if ($state.current.name == "login" || $state.current.name == "forgotPassword")
            return "backlayer_login";
        return cls
    }
    ;
    $scope.getHeaderClass = function() {
        if ($scope.daloState.isInconsistent || $scope.daloState.wizardRunning && ($state.current.name == "fwUpdate" || $state.current.name == "fwUpdate_redirect"))
            return "header_inconsistent";
        if ($scope.daloState.wizardRunning) {
            if ($state.current.name.slice(0, 8) == "settings")
                return "header_settings";
            return "header_wizard"
        } else if ($state.current.name == "login" || $state.current.name == "forgotPassword")
            return "header_login";
        return "header_main"
    }
    ;
    $scope.init()
}
]);
angular.module("indexApp").filter("urlEncode", function() {
    return function(value) {
        return encodeURI(value)
    }
});
angular.element(document.getElementsByTagName("html")[0]).ready(function() {
    var indexAppStr = dm["mocks"] ? "httpBackendMocks" : "indexApp";
    angular.bootstrap(angular.element("html"), [indexAppStr])
});
angular.module("login", ["global"]).controller("loginCtrl", ["$scope", "$q", "loginService", "$stateParams", function($scope, $q, loginService, $stateParams) {
    var todayUser = "todayuser";
    var daloState = dm.model.DaloState.getInstance("DaloStateModel", []);
    var errorMessage = undefined;
    $scope.username = undefined;
    $scope.password = "";
    $scope.keepMeLoggedIn = false;
    $scope.isLoading = false;
    $scope.instance = dm.model.LoginModel.getInstance();
    $scope.init = function() {
        $scope.username = getStateParamValue("requiredUser")
    }
    ;
    $scope.init();
    $scope.loginLogoutClick = function() {
        if (!$scope.loginDisabled()) {
            errorMessage = undefined;
            if ($scope.showLoginButton()) {
                login()
            } else {
                logout()
            }
        }
    }
    ;
    $scope.loginDisabled = function() {
        var isUserLoggedIn = $scope.showLoginButton();
        var isPasswordEmpty = $scope.password === undefined || $scope.password === "";
        var isUsernameEmpty = $scope.username === undefined || !$scope.username;
        var passwordNotTodayUser = $scope.password !== todayUser;
        var passwordTooShort = isPasswordEmpty || $scope.password.length <= 0;
        var passwordAssigned = true;
        if (!isUsernameEmpty) {
            switch ($scope.username) {
            case $scope.instance.userNameAdmin:
                passwordAssigned = daloState.adminPasswordAssigned;
                break;
            case $scope.instance.userNameService:
                passwordAssigned = daloState.servicePasswordAssigned;
                break;
            case $scope.instance.userNameUser:
                passwordAssigned = daloState.userPasswordAssigned;
                break
            }
        }
        return isUserLoggedIn && (isPasswordEmpty || isUsernameEmpty && (passwordNotTodayUser || passwordTooShort)) && passwordAssigned
    }
    ;
    $scope.onForgotPassword = function() {
        dm.ngjs.$state.go("forgotPassword")
    }
    ;
    $scope.passwordKeyEnter = function($event) {
        if ($event && $event.keyCode === 13) {
            $scope.loginLogoutClick()
        }
    }
    ;
    $scope.containsError = function() {
        return errorMessage !== undefined
    }
    ;
    $scope.errorMessage = function() {
        return errorMessage
    }
    ;
    $scope.showLoginButton = function() {
        return $scope.instance.data.username === undefined || $scope.username === undefined || !$scope.username || $scope.instance.data.username !== $scope.username
    }
    ;
    function login() {
        if (($scope.username === undefined || !$scope.username) && $scope.password === todayUser) {
            if ($scope.instance.userNames.indexOf($scope.instance.userNameToday) < 0) {
                $scope.instance.userNames.push($scope.instance.userNameToday);
                $scope.username = $scope.instance.userNameToday;
                $scope.password = ""
            }
        } else {
            $scope.isLoading = true;
            loginService.login($scope.username, $scope.password, $scope.keepMeLoggedIn, getStateParamValue("previousState")).then(function(res) {
                $scope.password = "";
                $scope.isLoading = false
            }, function(rej) {
                errorMessage = "LOGIN_FAILED_INCORRECT_PASSWORD";
                $scope.isLoading = false
            })
        }
    }
    function logout() {
        loginService.logout();
        $scope.username = undefined;
        $scope.password = "";
        $scope.keepMeLoggedIn = false;
        $stateParams = undefined
    }
    function getStateParamValue(valueName) {
        if ($stateParams && $stateParams.hasOwnProperty(valueName)) {
            return $stateParams[valueName]
        } else {
            return undefined
        }
    }
}
]);
angular.module("login").service("loginService", ["$rootScope", "$http", "$q", "$state", function($rootScope, $http, $q, $state) {
    var storeValueName = "AuthHash";
    var instance = dm.model.LoginModel.getInstance();
    var waitForLoginPromise = undefined;
    this.autoLogin = function() {
        var _this = this;
        var credentials = getStorageCredentials();
        var instance = dm.model.LoginModel.getInstance();
        var daloState = dm.model.DaloState.getInstance("DaloStateModel", dm.ngjs.$rootScope);
        var splittedCredentials = credentials && credentials.split(";");
        var callRequest = function(location) {
            var loginRequest = $q(function(resolve, reject) {
                checkLogin("/?auth=" + instance.data.username, true, resolve, reject)
            });
            loginRequest.then(function(res) {
                if (location)
                    $state.go(location)
            }, function(rej) {
                instance.data.username = undefined;
                instance.data.password = undefined;
                removeCredentialsFromStorage()
            }).finally(function() {
                if (_this.isUserLoggedIn()) {
                    if (waitForLoginPromise !== undefined)
                        waitForLoginPromise.resolve();
                    $rootScope.$broadcast("loginEvent", instance.data.username)
                } else {
                    $state.go("login", {
                        previousState: "startpage"
                    })
                }
            })
        };
        daloState.loadingPromise.then(function() {
            var analyseStoredCredentials = function(credentials) {
                if (credentials == undefined || credentials.length !== 2)
                    return false;
                var user = credentials[0];
                if (user === instance.userNameUser || user === instance.userNameAdmin || user === instance.userNameService || user === instance.userNameToday)
                    return true;
                removeCredentialsFromStorage();
                return false
            };
            if (analyseStoredCredentials(splittedCredentials)) {
                instance.data.username = splittedCredentials[0];
                instance.data.password = splittedCredentials[1]
            } else {
                if (!daloState.adminPasswordAssigned || daloState.connectedViaAP) {
                    instance.data.username = instance.userNameAdmin;
                    instance.data.password = ""
                } else if (!daloState.userPasswordAssigned) {
                    instance.data.username = instance.userNameUser;
                    instance.data.password = ""
                }
            }
            callRequest(daloState.wizardRunning ? "wizard" : undefined)
        })
    }
    ;
    this.isUserLoggedIn = function() {
        return instance.data.username !== undefined
    }
    ;
    this.getLoggedInUser = function() {
        return instance.data.username
    }
    ;
    this.login = function(username, password, keepMeLoggedIn, previousLocation) {
        var _this = this;
        if (previousLocation === void 0) {
            previousLocation = undefined
        }
        instance.data.username = username;
        instance.data.password = password;
        var loginRequest = $q(function(resolve, reject) {
            checkLogin("/?auth=" + username, true, resolve, reject)
        });
        loginRequest.then(function(res) {
            if (keepMeLoggedIn) {
                addCredentialsToLocalStorage(username, password)
            } else {
                addCredentialsToSessionStorage(username, password)
            }
            loginSuccessful(username, previousLocation)
        }, function(rej) {
            instance.data.username = undefined;
            instance.data.password = undefined
        }).finally(function() {
            if (_this.isUserLoggedIn()) {
                if (waitForLoginPromise !== undefined)
                    waitForLoginPromise.resolve();
                $rootScope.$broadcast("loginEvent", instance.data.username)
            }
        });
        return loginRequest
    }
    ;
    this._waitForLogin = function(waitForChange, newDefer) {
        if (waitForLoginPromise === undefined || newDefer) {
            waitForLoginPromise = $q.defer()
        }
        if (!waitForChange && this.isUserLoggedIn()) {
            waitForLoginPromise.resolve()
        }
        return waitForLoginPromise.promise
    }
    ;
    this.waitForLogin = function(waitForChange, newDefer) {
        return this._waitForLogin(waitForChange, newDefer)
    }
    ;
    this.logout = function() {
        removeCredentialsFromStorage();
        instance.data.username = undefined;
        instance.data.password = undefined;
        this.autoLogin()
    }
    ;
    this.loggedInUserIsAsRequired = function(minRequiredUser) {
        switch (this.getLoggedInUser()) {
        case instance.userNameToday:
        case instance.userNameService:
            return minRequiredUser == instance.userNameToday || minRequiredUser == instance.userNameService || minRequiredUser == instance.userNameAdmin || minRequiredUser == instance.userNameUser;
        case instance.userNameAdmin:
            return minRequiredUser == instance.userNameAdmin || minRequiredUser == instance.userNameUser;
        case instance.usernameUser:
            return minRequiredUser == instance.userNameUser;
        default:
            return false
        }
    }
    ;
    var checkLogin = function(url, retry, resolver, rejector) {
        $http.get(url).then(function() {
            resolver("authenticated")
        }, function(err) {
            if (retry && err.status == 401)
                checkLogin(url, false, resolver, rejector);
            else
                rejector("not authenticated")
        })
    };
    function loginSuccessful(username, location) {
        if (location === void 0) {
            location = undefined
        }
        if (location !== undefined) {
            $state.go(location)
        } else {
            switch (username) {
            case instance.userNameUser:
            case instance.userNameToday:
                $state.go("startpage");
                break;
            case instance.userNameAdmin:
                $state.go("settings.common");
                break;
            case instance.userNameService:
                $state.go("settings.overview");
                break
            }
        }
        if (waitForLoginPromise !== undefined) {
            waitForLoginPromise.resolve()
        }
    }
    function isADefaultCredential(username, password) {
        return username == instance.userNameUser && password == "" || username == instance.userNameAdmin && password == "" || username == instance.userNameService && password == "84d3c4823485485369078648e67b0367"
    }
    function addCredentialsToSessionStorage(username, password) {
        if (isADefaultCredential(username, password))
            return;
        if (sessionStorage !== undefined && sessionStorage !== null) {
            removeCredentialsFromStorage();
            sessionStorage.setItem(storeValueName, username + ";" + password)
        }
    }
    function addCredentialsToLocalStorage(username, password) {
        if (isADefaultCredential(username, password))
            return;
        if (localStorage !== undefined && localStorage !== null) {
            removeCredentialsFromStorage();
            localStorage.setItem(storeValueName, username + ";" + password)
        }
    }
    this.removeCredentials = function() {
        removeCredentialsFromStorage()
    }
    ;
    function removeCredentialsFromStorage() {
        if (localStorage !== undefined && localStorage !== null) {
            localStorage.removeItem(storeValueName)
        }
        if (sessionStorage !== undefined && sessionStorage !== null) {
            sessionStorage.removeItem(storeValueName)
        }
    }
    function getStorageCredentials() {
        if (sessionStorage !== undefined && sessionStorage !== null && sessionStorage.getItem(storeValueName) !== null) {
            return sessionStorage.getItem(storeValueName)
        }
        if (localStorage !== undefined && localStorage !== null && localStorage.getItem(storeValueName) !== null) {
            return localStorage.getItem(storeValueName)
        }
        return undefined
    }
}
]);
var dm;
(function(dm) {
    var model;
    (function(model) {
        var LoginModel = function() {
            function LoginModel() {
                this.data = {
                    username: undefined,
                    password: undefined
                };
                this.storeValueName = "AuthHash";
                this.passwordToBeActivated = "";
                this.userToBeActivated = "";
                this.userNameUser = "user";
                this.userNameToday = "today";
                this.userNameAdmin = "admin";
                this.userNameService = "service";
                this.userNames = [this.userNameUser, this.userNameAdmin, this.userNameService]
            }
            LoginModel.prototype.setDataToActivatePassword = function(user, pass) {
                this.userToBeActivated = user;
                this.passwordToBeActivated = pass
            }
            ;
            LoginModel.prototype.updateCredentialsInStorage = function(username, password) {
                if (localStorage !== undefined && localStorage !== null && localStorage.getItem(this.storeValueName))
                    localStorage.setItem(this.storeValueName, username + ";" + password);
                if (sessionStorage !== undefined && sessionStorage !== null && sessionStorage.getItem(this.storeValueName))
                    sessionStorage.setItem(this.storeValueName, username + ";" + password)
            }
            ;
            LoginModel.prototype.activatePassword = function() {
                if (this.data.username == this.userToBeActivated) {
                    this.data.password = this.passwordToBeActivated;
                    this.updateCredentialsInStorage(this.data.username, this.data.password)
                }
            }
            ;
            LoginModel.getInstance = function() {
                if (LoginModel._instance == null) {
                    LoginModel._instance = new dm.model.LoginModel
                }
                return LoginModel._instance
            }
            ;
            LoginModel._instance = null;
            return LoginModel
        }();
        model.LoginModel = LoginModel
    }
    )(model = dm.model || (dm.model = {}))
}
)(dm || (dm = {}));
var post = dm.util.ajaxRequest.post;
angular.module("forgotPW", ["global"]).controller("forgotPWCtrl", ["$scope", "$q", "$stateParams", "loginService", function($scope, $q, $stateParams, loginService) {
    var rand = function(cnt) {
        if (cnt == 0)
            return "";
        return ("00" + Math.floor(Math.random() * 256).toString(16)).slice(-2) + rand(cnt - 1)
    };
    var loginModel = dm.model.LoginModel.getInstance();
    var daloState = dm.model.DaloState.getInstance("DaloStateModel", $scope);
    var ForgotStates;
    (function(ForgotStates) {
        ForgotStates[ForgotStates["SelectUser"] = 1] = "SelectUser";
        ForgotStates[ForgotStates["GENERATE_CHALLENGE"] = 2] = "GENERATE_CHALLENGE";
        ForgotStates[ForgotStates["SAVE_NEW_PW"] = 3] = "SAVE_NEW_PW";
        ForgotStates[ForgotStates["SAVE_SUCESSFULL"] = 4] = "SAVE_SUCESSFULL"
    }
    )(ForgotStates || (ForgotStates = {}));
    var ForgotPWPageState = ForgotStates.SelectUser;
    $scope.username = undefined;
    $scope.userNames = [];
    $scope.CHALLENGES = {};
    $scope.ERRORS = {};
    $scope.loading = true;
    $scope.sw_challenge = "";
    $scope.password = "";
    $scope.password_repeat = "";
    $scope.generateButtonLock = false;
    $scope.resetSaveLoading = false;
    var lastSuccessfulPWChange = {
        username: "",
        password: ""
    };
    $scope.init = function() {
        daloState.loadingPromise.finally(function() {
            if (daloState.userPasswordAssigned) {
                $scope.userNames.push()
            }
            $scope.userNames.push(loginModel.userNameAdmin);
            $scope.userNames.push(loginModel.userNameService)
        });
        dm.util.configRequest.get("/passwordRecovery.cgi").then(function(response) {
            var userData = response.resultData;
            for (var _i = 0, _a = loginModel.userNames; _i < _a.length; _i++) {
                var user = _a[_i];
                $scope.CHALLENGES[user] = "";
                $scope.ERRORS[user] = "";
                if (userData[user] && userData[user].available) {
                    $scope.CHALLENGES[user] = userData[user].challengeToken.toString()
                }
            }
        }).finally(function() {
            $scope.loading = false
        })
    }
    ;
    $scope.isSelectUserState = function() {
        return ForgotPWPageState == ForgotStates.SelectUser
    }
    ;
    $scope.isGenerateChallengeState = function() {
        return ForgotPWPageState == ForgotStates.GENERATE_CHALLENGE
    }
    ;
    $scope.isSaveState = function() {
        return ForgotPWPageState == ForgotStates.SAVE_NEW_PW
    }
    ;
    $scope.isFinishedState = function() {
        return ForgotPWPageState == ForgotStates.SAVE_SUCESSFULL
    }
    ;
    $scope.getPWStrength = function() {
        return dm.util.string.passwordStrength($scope.password || "", $scope.username || "")
    }
    ;
    $scope.getPWEqual = function() {
        return $scope.password && $scope.password.length > 0 && $scope.password === $scope.password_repeat
    }
    ;
    $scope.resetError = function(user) {
        $scope.ERRORS[user] = ""
    }
    ;
    $scope.onGenerateChallenge = function() {
        $scope.generateButtonLock = true;
        $scope.resetError($scope.username);
        dm.util.configRequest.get("/passwordRecovery.cgi?generateForUser=" + $scope.username).then(function(response) {
            $scope.CHALLENGES[$scope.username] = response.resultData.challengeToken;
            ForgotPWPageState = ForgotStates.SAVE_NEW_PW
        }).finally(function() {
            $scope.generateButtonLock = false
        })
    }
    ;
    $scope.onSelectionChange = function() {
        ForgotPWPageState = ForgotStates.SelectUser;
        if ($scope.username) {
            if ($scope.CHALLENGES[$scope.username].length == 0) {
                ForgotPWPageState = ForgotStates.GENERATE_CHALLENGE
            } else {
                ForgotPWPageState = ForgotStates.SAVE_NEW_PW
            }
        }
    }
    ;
    $scope.onGoBackToLogin = function() {
        return dm.ngjs.$state.go("login")
    }
    ;
    $scope.onExecuteLogin = function() {
        loginService.login(lastSuccessfulPWChange.username, lastSuccessfulPWChange.password, false, "startpage")
    }
    ;
    var resetViewData = function(success) {
        if (success) {
            $scope.CHALLENGES[$scope.username] = "";
            $scope.ERRORS[$scope.username] = "";
            $scope.username = ""
        }
        $scope.sw_challenge = "";
        $scope.password = "";
        $scope.password_repeat = ""
    };
    $scope.onResetPasswordSave = function() {
        $scope.resetSaveLoading = true;
        $scope.resetError($scope.username);
        var PWNode = dm.util.helpers.CreatePasswordNode($scope.username, $scope.password || "", true);
        var postData = {
            user: $scope.username,
            signature: $scope.sw_challenge,
            new_password: PWNode
        };
        dm.ngjs.$http.post("/passwordRecovery.cgi", JSON.stringify(postData)).then(function(response) {
            try {
                var theResponse = response.data.Body.Data;
                if (theResponse.success) {
                    ForgotPWPageState = ForgotStates.SAVE_SUCESSFULL;
                    lastSuccessfulPWChange.username = $scope.username;
                    lastSuccessfulPWChange.password = $scope.password
                } else {
                    if (theResponse.resultData.remainingSignatureChecks == 0)
                        ForgotPWPageState = ForgotStates.GENERATE_CHALLENGE;
                    $scope.ERRORS[$scope.username] = theResponse.resultData.errorId
                }
                resetViewData(theResponse.success)
            } catch (e) {
                return
            }
        }).finally(function() {
            $scope.resetSaveLoading = false
        })
    }
    ;
    $scope.isSaveButtonDisabled = function() {
        return $scope.sw_challenge.length == 0 || $scope.getPWStrength() == "bad" || !$scope.getPWEqual() || $scope.resetSaveLoading
    }
    ;
    $scope.init()
}
]);
